{"version":3,"file":"index.js","sources":["../src/models/index.ts","../src/models/mappers.ts","../src/models/parameters.ts","../src/operations/operations.ts","../src/operations/availabilitySets.ts","../src/operations/proximityPlacementGroups.ts","../src/operations/dedicatedHostGroups.ts","../src/lroImpl.ts","../src/operations/dedicatedHosts.ts","../src/operations/sshPublicKeys.ts","../src/operations/virtualMachineExtensionImages.ts","../src/operations/virtualMachineExtensions.ts","../src/operations/virtualMachineImages.ts","../src/operations/virtualMachineImagesEdgeZone.ts","../src/operations/usageOperations.ts","../src/operations/virtualMachines.ts","../src/operations/virtualMachineScaleSets.ts","../src/operations/virtualMachineSizes.ts","../src/operations/images.ts","../src/operations/restorePointCollections.ts","../src/operations/restorePoints.ts","../src/operations/capacityReservationGroups.ts","../src/operations/capacityReservations.ts","../src/operations/virtualMachineScaleSetExtensions.ts","../src/operations/virtualMachineScaleSetRollingUpgrades.ts","../src/operations/virtualMachineScaleSetVMExtensions.ts","../src/operations/virtualMachineScaleSetVMs.ts","../src/operations/logAnalytics.ts","../src/operations/virtualMachineRunCommands.ts","../src/operations/virtualMachineScaleSetVMRunCommands.ts","../src/operations/resourceSkus.ts","../src/operations/disks.ts","../src/operations/snapshots.ts","../src/operations/diskEncryptionSets.ts","../src/operations/diskAccesses.ts","../src/operations/diskRestorePointOperations.ts","../src/operations/galleries.ts","../src/operations/galleryImages.ts","../src/operations/galleryImageVersions.ts","../src/operations/galleryApplications.ts","../src/operations/galleryApplicationVersions.ts","../src/operations/gallerySharingProfile.ts","../src/operations/sharedGalleries.ts","../src/operations/sharedGalleryImages.ts","../src/operations/sharedGalleryImageVersions.ts","../src/operations/communityGalleries.ts","../src/operations/communityGalleryImages.ts","../src/operations/communityGalleryImageVersions.ts","../src/operations/cloudServiceRoleInstances.ts","../src/operations/cloudServiceRoles.ts","../src/operations/cloudServices.ts","../src/operations/cloudServicesUpdateDomain.ts","../src/operations/cloudServiceOperatingSystems.ts","../src/computeManagementClient.ts"],"sourcesContent":["/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport * as coreClient from \"@azure/core-client\";\n\n/** The List Compute Operation operation response. */\nexport interface ComputeOperationListResult {\n  /**\n   * The list of compute operations\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly value?: ComputeOperationValue[];\n}\n\n/** Describes the properties of a Compute Operation value. */\nexport interface ComputeOperationValue {\n  /**\n   * The origin of the compute operation.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly origin?: string;\n  /**\n   * The name of the compute operation.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly name?: string;\n  /**\n   * The display name of the compute operation.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly operation?: string;\n  /**\n   * The display name of the resource the operation applies to.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly resource?: string;\n  /**\n   * The description of the operation.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly description?: string;\n  /**\n   * The resource provider for the operation.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly provider?: string;\n}\n\n/** An error response from the Compute service. */\nexport interface CloudError {\n  /** Api error. */\n  error?: ApiError;\n}\n\n/** Api error. */\nexport interface ApiError {\n  /** The Api error details */\n  details?: ApiErrorBase[];\n  /** The Api inner error */\n  innererror?: InnerError;\n  /** The error code. */\n  code?: string;\n  /** The target of the particular error. */\n  target?: string;\n  /** The error message. */\n  message?: string;\n}\n\n/** Api error base. */\nexport interface ApiErrorBase {\n  /** The error code. */\n  code?: string;\n  /** The target of the particular error. */\n  target?: string;\n  /** The error message. */\n  message?: string;\n}\n\n/** Inner error details. */\nexport interface InnerError {\n  /** The exception type. */\n  exceptiontype?: string;\n  /** The internal error message or exception dump. */\n  errordetail?: string;\n}\n\nexport interface SubResource {\n  /** Resource Id */\n  id?: string;\n}\n\n/** Instance view status. */\nexport interface InstanceViewStatus {\n  /** The status code. */\n  code?: string;\n  /** The level code. */\n  level?: StatusLevelTypes;\n  /** The short localizable label for the status. */\n  displayStatus?: string;\n  /** The detailed status message, including for alerts and error messages. */\n  message?: string;\n  /** The time of the status. */\n  time?: Date;\n}\n\n/** Describes a virtual machine scale set sku. NOTE: If the new VM SKU is not supported on the hardware the scale set is currently on, you need to deallocate the VMs in the scale set before you modify the SKU name. */\nexport interface Sku {\n  /** The sku name. */\n  name?: string;\n  /** Specifies the tier of virtual machines in a scale set.<br /><br /> Possible Values:<br /><br /> **Standard**<br /><br /> **Basic** */\n  tier?: string;\n  /** Specifies the number of virtual machines in the scale set. */\n  capacity?: number;\n}\n\n/** The Resource model definition. */\nexport interface Resource {\n  /**\n   * Resource Id\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly id?: string;\n  /**\n   * Resource name\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly name?: string;\n  /**\n   * Resource type\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly type?: string;\n  /** Resource location */\n  location: string;\n  /** Resource tags */\n  tags?: { [propertyName: string]: string };\n}\n\n/** The Update Resource model definition. */\nexport interface UpdateResource {\n  /** Resource tags */\n  tags?: { [propertyName: string]: string };\n}\n\n/** The List Availability Set operation response. */\nexport interface AvailabilitySetListResult {\n  /** The list of availability sets */\n  value: AvailabilitySet[];\n  /** The URI to fetch the next page of AvailabilitySets. Call ListNext() with this URI to fetch the next page of AvailabilitySets. */\n  nextLink?: string;\n}\n\n/** The List Virtual Machine operation response. */\nexport interface VirtualMachineSizeListResult {\n  /** The list of virtual machine sizes. */\n  value?: VirtualMachineSize[];\n}\n\n/** Describes the properties of a VM size. */\nexport interface VirtualMachineSize {\n  /** The name of the virtual machine size. */\n  name?: string;\n  /** The number of cores supported by the virtual machine size. For Constrained vCPU capable VM sizes, this number represents the total vCPUs of quota that the VM uses. For accurate vCPU count, please refer to https://docs.microsoft.com/azure/virtual-machines/constrained-vcpu or https://docs.microsoft.com/rest/api/compute/resourceskus/list */\n  numberOfCores?: number;\n  /** The OS disk size, in MB, allowed by the virtual machine size. */\n  osDiskSizeInMB?: number;\n  /** The resource disk size, in MB, allowed by the virtual machine size. */\n  resourceDiskSizeInMB?: number;\n  /** The amount of memory, in MB, supported by the virtual machine size. */\n  memoryInMB?: number;\n  /** The maximum number of data disks that can be attached to the virtual machine size. */\n  maxDataDiskCount?: number;\n}\n\n/** The List Proximity Placement Group operation response. */\nexport interface ProximityPlacementGroupListResult {\n  /** The list of proximity placement groups */\n  value: ProximityPlacementGroup[];\n  /** The URI to fetch the next page of proximity placement groups. */\n  nextLink?: string;\n}\n\nexport interface SubResourceReadOnly {\n  /**\n   * Resource Id\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly id?: string;\n}\n\nexport interface DedicatedHostGroupInstanceView {\n  /** List of instance view of the dedicated hosts under the dedicated host group. */\n  hosts?: DedicatedHostInstanceViewWithName[];\n}\n\n/** The instance view of a dedicated host. */\nexport interface DedicatedHostInstanceView {\n  /**\n   * Specifies the unique id of the dedicated physical machine on which the dedicated host resides.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly assetId?: string;\n  /** Unutilized capacity of the dedicated host. */\n  availableCapacity?: DedicatedHostAvailableCapacity;\n  /** The resource status information. */\n  statuses?: InstanceViewStatus[];\n}\n\n/** Dedicated host unutilized capacity. */\nexport interface DedicatedHostAvailableCapacity {\n  /** The unutilized capacity of the dedicated host represented in terms of each VM size that is allowed to be deployed to the dedicated host. */\n  allocatableVMs?: DedicatedHostAllocatableVM[];\n}\n\n/** Represents the dedicated host unutilized capacity in terms of a specific VM size. */\nexport interface DedicatedHostAllocatableVM {\n  /** VM size in terms of which the unutilized capacity is represented. */\n  vmSize?: string;\n  /** Maximum number of VMs of size vmSize that can fit in the dedicated host's remaining capacity. */\n  count?: number;\n}\n\n/** The List Dedicated Host Group with resource group response. */\nexport interface DedicatedHostGroupListResult {\n  /** The list of dedicated host groups */\n  value: DedicatedHostGroup[];\n  /** The URI to fetch the next page of Dedicated Host Groups. Call ListNext() with this URI to fetch the next page of Dedicated Host Groups. */\n  nextLink?: string;\n}\n\n/** The list dedicated host operation response. */\nexport interface DedicatedHostListResult {\n  /** The list of dedicated hosts */\n  value: DedicatedHost[];\n  /** The URI to fetch the next page of dedicated hosts. Call ListNext() with this URI to fetch the next page of dedicated hosts. */\n  nextLink?: string;\n}\n\n/** The list SSH public keys operation response. */\nexport interface SshPublicKeysGroupListResult {\n  /** The list of SSH public keys */\n  value: SshPublicKeyResource[];\n  /** The URI to fetch the next page of SSH public keys. Call ListNext() with this URI to fetch the next page of SSH public keys. */\n  nextLink?: string;\n}\n\n/** Response from generation of an SSH key pair. */\nexport interface SshPublicKeyGenerateKeyPairResult {\n  /** Private key portion of the key pair used to authenticate to a virtual machine through ssh. The private key is returned in RFC3447 format and should be treated as a secret. */\n  privateKey: string;\n  /** Public key portion of the key pair used to authenticate to a virtual machine through ssh. The public key is in ssh-rsa format. */\n  publicKey: string;\n  /** The ARM resource id in the form of /subscriptions/{SubscriptionId}/resourceGroups/{ResourceGroupName}/providers/Microsoft.Compute/sshPublicKeys/{SshPublicKeyName} */\n  id: string;\n}\n\n/** The instance view of a virtual machine extension. */\nexport interface VirtualMachineExtensionInstanceView {\n  /** The virtual machine extension name. */\n  name?: string;\n  /** Specifies the type of the extension; an example is \"CustomScriptExtension\". */\n  type?: string;\n  /** Specifies the version of the script handler. */\n  typeHandlerVersion?: string;\n  /** The resource status information. */\n  substatuses?: InstanceViewStatus[];\n  /** The resource status information. */\n  statuses?: InstanceViewStatus[];\n}\n\n/** The List Extension operation response */\nexport interface VirtualMachineExtensionsListResult {\n  /** The list of extensions */\n  value?: VirtualMachineExtension[];\n}\n\n/** Used for establishing the purchase context of any 3rd Party artifact through MarketPlace. */\nexport interface PurchasePlan {\n  /** The publisher ID. */\n  publisher: string;\n  /** The plan ID. */\n  name: string;\n  /** Specifies the product of the image from the marketplace. This is the same value as Offer under the imageReference element. */\n  product: string;\n}\n\n/** Contains the os disk image information. */\nexport interface OSDiskImage {\n  /** The operating system of the osDiskImage. */\n  operatingSystem: OperatingSystemTypes;\n}\n\n/** Contains the data disk images information. */\nexport interface DataDiskImage {\n  /**\n   * Specifies the logical unit number of the data disk. This value is used to identify data disks within the VM and therefore must be unique for each data disk attached to a VM.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly lun?: number;\n}\n\n/** Describes automatic OS upgrade properties on the image. */\nexport interface AutomaticOSUpgradeProperties {\n  /** Specifies whether automatic OS upgrade is supported on the image. */\n  automaticOSUpgradeSupported: boolean;\n}\n\n/** Specifies the disallowed configuration for a virtual machine image. */\nexport interface DisallowedConfiguration {\n  /** VM disk types which are disallowed. */\n  vmDiskType?: VmDiskTypes;\n}\n\n/** Specifies additional capabilities supported by the image */\nexport interface VirtualMachineImageFeature {\n  /** The name of the feature. */\n  name?: string;\n  /** The corresponding value for the feature. */\n  value?: string;\n}\n\n/** The complex type of the extended location. */\nexport interface ExtendedLocation {\n  /** The name of the extended location. */\n  name?: string;\n  /** The type of the extended location. */\n  type?: ExtendedLocationTypes;\n}\n\n/** The List Usages operation response. */\nexport interface ListUsagesResult {\n  /** The list of compute resource usages. */\n  value: Usage[];\n  /** The URI to fetch the next page of compute resource usage information. Call ListNext() with this to fetch the next page of compute resource usage information. */\n  nextLink?: string;\n}\n\n/** Describes Compute Resource Usage. */\nexport interface Usage {\n  /** An enum describing the unit of usage measurement. */\n  unit: \"Count\";\n  /** The current usage of the resource. */\n  currentValue: number;\n  /** The maximum permitted usage of the resource. */\n  limit: number;\n  /** The name of the type of usage. */\n  name: UsageName;\n}\n\n/** The Usage Names. */\nexport interface UsageName {\n  /** The name of the resource. */\n  value?: string;\n  /** The localized name of the resource. */\n  localizedValue?: string;\n}\n\n/** The List Virtual Machine operation response. */\nexport interface VirtualMachineListResult {\n  /** The list of virtual machines. */\n  value: VirtualMachine[];\n  /** The URI to fetch the next page of VMs. Call ListNext() with this URI to fetch the next page of Virtual Machines. */\n  nextLink?: string;\n}\n\n/** Specifies information about the marketplace image used to create the virtual machine. This element is only used for marketplace images. Before you can use a marketplace image from an API, you must enable the image for programmatic use.  In the Azure portal, find the marketplace image that you want to use and then click **Want to deploy programmatically, Get Started ->**. Enter any required information and then click **Save**. */\nexport interface Plan {\n  /** The plan ID. */\n  name?: string;\n  /** The publisher ID. */\n  publisher?: string;\n  /** Specifies the product of the image from the marketplace. This is the same value as Offer under the imageReference element. */\n  product?: string;\n  /** The promotion code. */\n  promotionCode?: string;\n}\n\n/** Specifies the hardware settings for the virtual machine. */\nexport interface HardwareProfile {\n  /** Specifies the size of the virtual machine. <br><br> The enum data type is currently deprecated and will be removed by December 23rd 2023. <br><br> Recommended way to get the list of available sizes is using these APIs: <br><br> [List all available virtual machine sizes in an availability set](https://docs.microsoft.com/rest/api/compute/availabilitysets/listavailablesizes) <br><br> [List all available virtual machine sizes in a region]( https://docs.microsoft.com/rest/api/compute/resourceskus/list) <br><br> [List all available virtual machine sizes for resizing](https://docs.microsoft.com/rest/api/compute/virtualmachines/listavailablesizes). For more information about virtual machine sizes, see [Sizes for virtual machines](https://docs.microsoft.com/azure/virtual-machines/sizes). <br><br> The available VM sizes depend on region and availability set. */\n  vmSize?: VirtualMachineSizeTypes;\n  /** Specifies the properties for customizing the size of the virtual machine. Minimum api-version: 2021-07-01. <br><br> This feature is still in preview mode and is not supported for VirtualMachineScaleSet. <br><br> Please follow the instructions in [VM Customization](https://aka.ms/vmcustomization) for more details. */\n  vmSizeProperties?: VMSizeProperties;\n}\n\n/** Specifies VM Size Property settings on the virtual machine. */\nexport interface VMSizeProperties {\n  /** Specifies the number of vCPUs available for the VM. <br><br> When this property is not specified in the request body the default behavior is to set it to the value of vCPUs available for that VM size exposed in api response of [List all available virtual machine sizes in a region](https://docs.microsoft.com/en-us/rest/api/compute/resource-skus/list) . */\n  vCPUsAvailable?: number;\n  /** Specifies the vCPU to physical core ratio. <br><br> When this property is not specified in the request body the default behavior is set to the value of vCPUsPerCore for the VM Size exposed in api response of [List all available virtual machine sizes in a region](https://docs.microsoft.com/en-us/rest/api/compute/resource-skus/list) <br><br> Setting this property to 1 also means that hyper-threading is disabled. */\n  vCPUsPerCore?: number;\n}\n\n/** Specifies the storage settings for the virtual machine disks. */\nexport interface StorageProfile {\n  /** Specifies information about the image to use. You can specify information about platform images, marketplace images, or virtual machine images. This element is required when you want to use a platform image, marketplace image, or virtual machine image, but is not used in other creation operations. */\n  imageReference?: ImageReference;\n  /** Specifies information about the operating system disk used by the virtual machine. <br><br> For more information about disks, see [About disks and VHDs for Azure virtual machines](https://docs.microsoft.com/azure/virtual-machines/managed-disks-overview). */\n  osDisk?: OSDisk;\n  /** Specifies the parameters that are used to add a data disk to a virtual machine. <br><br> For more information about disks, see [About disks and VHDs for Azure virtual machines](https://docs.microsoft.com/azure/virtual-machines/managed-disks-overview). */\n  dataDisks?: DataDisk[];\n}\n\n/** Specifies information about the operating system disk used by the virtual machine. <br><br> For more information about disks, see [About disks and VHDs for Azure virtual machines](https://docs.microsoft.com/azure/virtual-machines/managed-disks-overview). */\nexport interface OSDisk {\n  /** This property allows you to specify the type of the OS that is included in the disk if creating a VM from user-image or a specialized VHD. <br><br> Possible values are: <br><br> **Windows** <br><br> **Linux** */\n  osType?: OperatingSystemTypes;\n  /** Specifies the encryption settings for the OS Disk. <br><br> Minimum api-version: 2015-06-15 */\n  encryptionSettings?: DiskEncryptionSettings;\n  /** The disk name. */\n  name?: string;\n  /** The virtual hard disk. */\n  vhd?: VirtualHardDisk;\n  /** The source user image virtual hard disk. The virtual hard disk will be copied before being attached to the virtual machine. If SourceImage is provided, the destination virtual hard drive must not exist. */\n  image?: VirtualHardDisk;\n  /** Specifies the caching requirements. <br><br> Possible values are: <br><br> **None** <br><br> **ReadOnly** <br><br> **ReadWrite** <br><br> Default: **None** for Standard storage. **ReadOnly** for Premium storage. */\n  caching?: CachingTypes;\n  /** Specifies whether writeAccelerator should be enabled or disabled on the disk. */\n  writeAcceleratorEnabled?: boolean;\n  /** Specifies the ephemeral Disk Settings for the operating system disk used by the virtual machine. */\n  diffDiskSettings?: DiffDiskSettings;\n  /** Specifies how the virtual machine should be created.<br><br> Possible values are:<br><br> **Attach** \\u2013 This value is used when you are using a specialized disk to create the virtual machine.<br><br> **FromImage** \\u2013 This value is used when you are using an image to create the virtual machine. If you are using a platform image, you also use the imageReference element described above. If you are using a marketplace image, you  also use the plan element previously described. */\n  createOption: DiskCreateOptionTypes;\n  /** Specifies the size of an empty data disk in gigabytes. This element can be used to overwrite the size of the disk in a virtual machine image. <br><br> This value cannot be larger than 1023 GB */\n  diskSizeGB?: number;\n  /** The managed disk parameters. */\n  managedDisk?: ManagedDiskParameters;\n  /** Specifies whether OS Disk should be deleted or detached upon VM deletion. <br><br> Possible values: <br><br> **Delete** If this value is used, the OS disk is deleted when VM is deleted.<br><br> **Detach** If this value is used, the os disk is retained after VM is deleted. <br><br> The default value is set to **detach**. For an ephemeral OS Disk, the default value is set to **Delete**. User cannot change the delete option for ephemeral OS Disk. */\n  deleteOption?: DiskDeleteOptionTypes;\n}\n\n/** Describes a Encryption Settings for a Disk */\nexport interface DiskEncryptionSettings {\n  /** Specifies the location of the disk encryption key, which is a Key Vault Secret. */\n  diskEncryptionKey?: KeyVaultSecretReference;\n  /** Specifies the location of the key encryption key in Key Vault. */\n  keyEncryptionKey?: KeyVaultKeyReference;\n  /** Specifies whether disk encryption should be enabled on the virtual machine. */\n  enabled?: boolean;\n}\n\n/** Describes a reference to Key Vault Secret */\nexport interface KeyVaultSecretReference {\n  /** The URL referencing a secret in a Key Vault. */\n  secretUrl: string;\n  /** The relative URL of the Key Vault containing the secret. */\n  sourceVault: SubResource;\n}\n\n/** Describes a reference to Key Vault Key */\nexport interface KeyVaultKeyReference {\n  /** The URL referencing a key encryption key in Key Vault. */\n  keyUrl: string;\n  /** The relative URL of the Key Vault containing the key. */\n  sourceVault: SubResource;\n}\n\n/** Describes the uri of a disk. */\nexport interface VirtualHardDisk {\n  /** Specifies the virtual hard disk's uri. */\n  uri?: string;\n}\n\n/** Describes the parameters of ephemeral disk settings that can be specified for operating system disk. <br><br> NOTE: The ephemeral disk settings can only be specified for managed disk. */\nexport interface DiffDiskSettings {\n  /** Specifies the ephemeral disk settings for operating system disk. */\n  option?: DiffDiskOptions;\n  /** Specifies the ephemeral disk placement for operating system disk.<br><br> Possible values are: <br><br> **CacheDisk** <br><br> **ResourceDisk** <br><br> Default: **CacheDisk** if one is configured for the VM size otherwise **ResourceDisk** is used.<br><br> Refer to VM size documentation for Windows VM at https://docs.microsoft.com/azure/virtual-machines/windows/sizes and Linux VM at https://docs.microsoft.com/azure/virtual-machines/linux/sizes to check which VM sizes exposes a cache disk. */\n  placement?: DiffDiskPlacement;\n}\n\n/** Specifies the security profile settings for the managed disk. <br><br> NOTE: It can only be set for Confidential VMs */\nexport interface VMDiskSecurityProfile {\n  /** Specifies the EncryptionType of the managed disk. <br> It is set to DiskWithVMGuestState for encryption of the managed disk along with VMGuestState blob, and VMGuestStateOnly for encryption of just the VMGuestState blob. <br><br> NOTE: It can be set for only Confidential VMs. */\n  securityEncryptionType?: SecurityEncryptionTypes;\n  /** Specifies the customer managed disk encryption set resource id for the managed disk that is used for Customer Managed Key encrypted ConfidentialVM OS Disk and VMGuest blob. */\n  diskEncryptionSet?: DiskEncryptionSetParameters;\n}\n\n/** Describes a data disk. */\nexport interface DataDisk {\n  /** Specifies the logical unit number of the data disk. This value is used to identify data disks within the VM and therefore must be unique for each data disk attached to a VM. */\n  lun: number;\n  /** The disk name. */\n  name?: string;\n  /** The virtual hard disk. */\n  vhd?: VirtualHardDisk;\n  /** The source user image virtual hard disk. The virtual hard disk will be copied before being attached to the virtual machine. If SourceImage is provided, the destination virtual hard drive must not exist. */\n  image?: VirtualHardDisk;\n  /** Specifies the caching requirements. <br><br> Possible values are: <br><br> **None** <br><br> **ReadOnly** <br><br> **ReadWrite** <br><br> Default: **None for Standard storage. ReadOnly for Premium storage** */\n  caching?: CachingTypes;\n  /** Specifies whether writeAccelerator should be enabled or disabled on the disk. */\n  writeAcceleratorEnabled?: boolean;\n  /** Specifies how the virtual machine should be created.<br><br> Possible values are:<br><br> **Attach** \\u2013 This value is used when you are using a specialized disk to create the virtual machine.<br><br> **FromImage** \\u2013 This value is used when you are using an image to create the virtual machine. If you are using a platform image, you also use the imageReference element described above. If you are using a marketplace image, you  also use the plan element previously described. */\n  createOption: DiskCreateOptionTypes;\n  /** Specifies the size of an empty data disk in gigabytes. This element can be used to overwrite the size of the disk in a virtual machine image. <br><br> This value cannot be larger than 1023 GB */\n  diskSizeGB?: number;\n  /** The managed disk parameters. */\n  managedDisk?: ManagedDiskParameters;\n  /** Specifies whether the data disk is in process of detachment from the VirtualMachine/VirtualMachineScaleset */\n  toBeDetached?: boolean;\n  /**\n   * Specifies the Read-Write IOPS for the managed disk when StorageAccountType is UltraSSD_LRS. Returned only for VirtualMachine ScaleSet VM disks. Can be updated only via updates to the VirtualMachine Scale Set.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly diskIopsReadWrite?: number;\n  /**\n   * Specifies the bandwidth in MB per second for the managed disk when StorageAccountType is UltraSSD_LRS. Returned only for VirtualMachine ScaleSet VM disks. Can be updated only via updates to the VirtualMachine Scale Set.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly diskMBpsReadWrite?: number;\n  /** Specifies the detach behavior to be used while detaching a disk or which is already in the process of detachment from the virtual machine. Supported values: **ForceDetach**. <br><br> detachOption: **ForceDetach** is applicable only for managed data disks. If a previous detachment attempt of the data disk did not complete due to an unexpected failure from the virtual machine and the disk is still not released then use force-detach as a last resort option to detach the disk forcibly from the VM. All writes might not have been flushed when using this detach behavior. <br><br> This feature is still in preview mode and is not supported for VirtualMachineScaleSet. To force-detach a data disk update toBeDetached to 'true' along with setting detachOption: 'ForceDetach'. */\n  detachOption?: DiskDetachOptionTypes;\n  /** Specifies whether data disk should be deleted or detached upon VM deletion.<br><br> Possible values: <br><br> **Delete** If this value is used, the data disk is deleted when VM is deleted.<br><br> **Detach** If this value is used, the data disk is retained after VM is deleted.<br><br> The default value is set to **detach** */\n  deleteOption?: DiskDeleteOptionTypes;\n}\n\n/** Enables or disables a capability on the virtual machine or virtual machine scale set. */\nexport interface AdditionalCapabilities {\n  /** The flag that enables or disables a capability to have one or more managed data disks with UltraSSD_LRS storage account type on the VM or VMSS. Managed disks with storage account type UltraSSD_LRS can be added to a virtual machine or virtual machine scale set only if this property is enabled. */\n  ultraSSDEnabled?: boolean;\n  /** The flag that enables or disables hibernation capability on the VM. */\n  hibernationEnabled?: boolean;\n}\n\n/** Specifies the operating system settings for the virtual machine. Some of the settings cannot be changed once VM is provisioned. */\nexport interface OSProfile {\n  /** Specifies the host OS name of the virtual machine. <br><br> This name cannot be updated after the VM is created. <br><br> **Max-length (Windows):** 15 characters <br><br> **Max-length (Linux):** 64 characters. <br><br> For naming conventions and restrictions see [Azure infrastructure services implementation guidelines](https://docs.microsoft.com/azure/azure-resource-manager/management/resource-name-rules). */\n  computerName?: string;\n  /** Specifies the name of the administrator account. <br><br> This property cannot be updated after the VM is created. <br><br> **Windows-only restriction:** Cannot end in \".\" <br><br> **Disallowed values:** \"administrator\", \"admin\", \"user\", \"user1\", \"test\", \"user2\", \"test1\", \"user3\", \"admin1\", \"1\", \"123\", \"a\", \"actuser\", \"adm\", \"admin2\", \"aspnet\", \"backup\", \"console\", \"david\", \"guest\", \"john\", \"owner\", \"root\", \"server\", \"sql\", \"support\", \"support_388945a0\", \"sys\", \"test2\", \"test3\", \"user4\", \"user5\". <br><br> **Minimum-length (Linux):** 1  character <br><br> **Max-length (Linux):** 64 characters <br><br> **Max-length (Windows):** 20 characters. */\n  adminUsername?: string;\n  /** Specifies the password of the administrator account. <br><br> **Minimum-length (Windows):** 8 characters <br><br> **Minimum-length (Linux):** 6 characters <br><br> **Max-length (Windows):** 123 characters <br><br> **Max-length (Linux):** 72 characters <br><br> **Complexity requirements:** 3 out of 4 conditions below need to be fulfilled <br> Has lower characters <br>Has upper characters <br> Has a digit <br> Has a special character (Regex match [\\W_]) <br><br> **Disallowed values:** \"abc@123\", \"P@$$w0rd\", \"P@ssw0rd\", \"P@ssword123\", \"Pa$$word\", \"pass@word1\", \"Password!\", \"Password1\", \"Password22\", \"iloveyou!\" <br><br> For resetting the password, see [How to reset the Remote Desktop service or its login password in a Windows VM](https://docs.microsoft.com/troubleshoot/azure/virtual-machines/reset-rdp) <br><br> For resetting root password, see [Manage users, SSH, and check or repair disks on Azure Linux VMs using the VMAccess Extension](https://docs.microsoft.com/troubleshoot/azure/virtual-machines/troubleshoot-ssh-connection) */\n  adminPassword?: string;\n  /** Specifies a base-64 encoded string of custom data. The base-64 encoded string is decoded to a binary array that is saved as a file on the Virtual Machine. The maximum length of the binary array is 65535 bytes. <br><br> **Note: Do not pass any secrets or passwords in customData property** <br><br> This property cannot be updated after the VM is created. <br><br> customData is passed to the VM to be saved as a file, for more information see [Custom Data on Azure VMs](https://azure.microsoft.com/blog/custom-data-and-cloud-init-on-windows-azure/) <br><br> For using cloud-init for your Linux VM, see [Using cloud-init to customize a Linux VM during creation](https://docs.microsoft.com/azure/virtual-machines/linux/using-cloud-init) */\n  customData?: string;\n  /** Specifies Windows operating system settings on the virtual machine. */\n  windowsConfiguration?: WindowsConfiguration;\n  /** Specifies the Linux operating system settings on the virtual machine. <br><br>For a list of supported Linux distributions, see [Linux on Azure-Endorsed Distributions](https://docs.microsoft.com/azure/virtual-machines/linux/endorsed-distros). */\n  linuxConfiguration?: LinuxConfiguration;\n  /** Specifies set of certificates that should be installed onto the virtual machine. To install certificates on a virtual machine it is recommended to use the [Azure Key Vault virtual machine extension for Linux](https://docs.microsoft.com/azure/virtual-machines/extensions/key-vault-linux) or the [Azure Key Vault virtual machine extension for Windows](https://docs.microsoft.com/azure/virtual-machines/extensions/key-vault-windows). */\n  secrets?: VaultSecretGroup[];\n  /** Specifies whether extension operations should be allowed on the virtual machine. <br><br>This may only be set to False when no extensions are present on the virtual machine. */\n  allowExtensionOperations?: boolean;\n  /** Specifies whether the guest provision signal is required to infer provision success of the virtual machine.  **Note: This property is for private testing only, and all customers must not set the property to false.** */\n  requireGuestProvisionSignal?: boolean;\n}\n\n/** Specifies Windows operating system settings on the virtual machine. */\nexport interface WindowsConfiguration {\n  /** Indicates whether virtual machine agent should be provisioned on the virtual machine. <br><br> When this property is not specified in the request body, default behavior is to set it to true.  This will ensure that VM Agent is installed on the VM so that extensions can be added to the VM later. */\n  provisionVMAgent?: boolean;\n  /** Indicates whether Automatic Updates is enabled for the Windows virtual machine. Default value is true. <br><br> For virtual machine scale sets, this property can be updated and updates will take effect on OS reprovisioning. */\n  enableAutomaticUpdates?: boolean;\n  /** Specifies the time zone of the virtual machine. e.g. \"Pacific Standard Time\". <br><br> Possible values can be [TimeZoneInfo.Id](https://docs.microsoft.com/dotnet/api/system.timezoneinfo.id?#System_TimeZoneInfo_Id) value from time zones returned by [TimeZoneInfo.GetSystemTimeZones](https://docs.microsoft.com/dotnet/api/system.timezoneinfo.getsystemtimezones). */\n  timeZone?: string;\n  /** Specifies additional base-64 encoded XML formatted information that can be included in the Unattend.xml file, which is used by Windows Setup. */\n  additionalUnattendContent?: AdditionalUnattendContent[];\n  /** [Preview Feature] Specifies settings related to VM Guest Patching on Windows. */\n  patchSettings?: PatchSettings;\n  /** Specifies the Windows Remote Management listeners. This enables remote Windows PowerShell. */\n  winRM?: WinRMConfiguration;\n}\n\n/** Specifies additional XML formatted information that can be included in the Unattend.xml file, which is used by Windows Setup. Contents are defined by setting name, component name, and the pass in which the content is applied. */\nexport interface AdditionalUnattendContent {\n  /** The pass name. Currently, the only allowable value is OobeSystem. */\n  passName?: \"OobeSystem\";\n  /** The component name. Currently, the only allowable value is Microsoft-Windows-Shell-Setup. */\n  componentName?: \"Microsoft-Windows-Shell-Setup\";\n  /** Specifies the name of the setting to which the content applies. Possible values are: FirstLogonCommands and AutoLogon. */\n  settingName?: SettingNames;\n  /** Specifies the XML formatted content that is added to the unattend.xml file for the specified path and component. The XML must be less than 4KB and must include the root element for the setting or feature that is being inserted. */\n  content?: string;\n}\n\n/** Specifies settings related to VM Guest Patching on Windows. */\nexport interface PatchSettings {\n  /** Specifies the mode of VM Guest Patching to IaaS virtual machine or virtual machines associated to virtual machine scale set with OrchestrationMode as Flexible.<br /><br /> Possible values are:<br /><br /> **Manual** - You  control the application of patches to a virtual machine. You do this by applying patches manually inside the VM. In this mode, automatic updates are disabled; the property WindowsConfiguration.enableAutomaticUpdates must be false<br /><br /> **AutomaticByOS** - The virtual machine will automatically be updated by the OS. The property WindowsConfiguration.enableAutomaticUpdates must be true. <br /><br /> **AutomaticByPlatform** - the virtual machine will automatically updated by the platform. The properties provisionVMAgent and WindowsConfiguration.enableAutomaticUpdates must be true */\n  patchMode?: WindowsVMGuestPatchMode;\n  /** Enables customers to patch their Azure VMs without requiring a reboot. For enableHotpatching, the 'provisionVMAgent' must be set to true and 'patchMode' must be set to 'AutomaticByPlatform'. */\n  enableHotpatching?: boolean;\n  /** Specifies the mode of VM Guest patch assessment for the IaaS virtual machine.<br /><br /> Possible values are:<br /><br /> **ImageDefault** - You control the timing of patch assessments on a virtual machine.<br /><br /> **AutomaticByPlatform** - The platform will trigger periodic patch assessments. The property provisionVMAgent must be true. */\n  assessmentMode?: WindowsPatchAssessmentMode;\n}\n\n/** Describes Windows Remote Management configuration of the VM */\nexport interface WinRMConfiguration {\n  /** The list of Windows Remote Management listeners */\n  listeners?: WinRMListener[];\n}\n\n/** Describes Protocol and thumbprint of Windows Remote Management listener */\nexport interface WinRMListener {\n  /** Specifies the protocol of WinRM listener. <br><br> Possible values are: <br>**http** <br><br> **https** */\n  protocol?: ProtocolTypes;\n  /** This is the URL of a certificate that has been uploaded to Key Vault as a secret. For adding a secret to the Key Vault, see [Add a key or secret to the key vault](https://docs.microsoft.com/azure/key-vault/key-vault-get-started/#add). In this case, your certificate needs to be It is the Base64 encoding of the following JSON Object which is encoded in UTF-8: <br><br> {<br>  \"data\":\"<Base64-encoded-certificate>\",<br>  \"dataType\":\"pfx\",<br>  \"password\":\"<pfx-file-password>\"<br>} <br> To install certificates on a virtual machine it is recommended to use the [Azure Key Vault virtual machine extension for Linux](https://docs.microsoft.com/azure/virtual-machines/extensions/key-vault-linux) or the [Azure Key Vault virtual machine extension for Windows](https://docs.microsoft.com/azure/virtual-machines/extensions/key-vault-windows). */\n  certificateUrl?: string;\n}\n\n/** Specifies the Linux operating system settings on the virtual machine. <br><br>For a list of supported Linux distributions, see [Linux on Azure-Endorsed Distributions](https://docs.microsoft.com/azure/virtual-machines/linux/endorsed-distros). */\nexport interface LinuxConfiguration {\n  /** Specifies whether password authentication should be disabled. */\n  disablePasswordAuthentication?: boolean;\n  /** Specifies the ssh key configuration for a Linux OS. */\n  ssh?: SshConfiguration;\n  /** Indicates whether virtual machine agent should be provisioned on the virtual machine. <br><br> When this property is not specified in the request body, default behavior is to set it to true.  This will ensure that VM Agent is installed on the VM so that extensions can be added to the VM later. */\n  provisionVMAgent?: boolean;\n  /** [Preview Feature] Specifies settings related to VM Guest Patching on Linux. */\n  patchSettings?: LinuxPatchSettings;\n}\n\n/** SSH configuration for Linux based VMs running on Azure */\nexport interface SshConfiguration {\n  /** The list of SSH public keys used to authenticate with linux based VMs. */\n  publicKeys?: SshPublicKey[];\n}\n\n/** Contains information about SSH certificate public key and the path on the Linux VM where the public key is placed. */\nexport interface SshPublicKey {\n  /** Specifies the full path on the created VM where ssh public key is stored. If the file already exists, the specified key is appended to the file. Example: /home/user/.ssh/authorized_keys */\n  path?: string;\n  /** SSH public key certificate used to authenticate with the VM through ssh. The key needs to be at least 2048-bit and in ssh-rsa format. <br><br> For creating ssh keys, see [Create SSH keys on Linux and Mac for Linux VMs in Azure]https://docs.microsoft.com/azure/virtual-machines/linux/create-ssh-keys-detailed). */\n  keyData?: string;\n}\n\n/** Specifies settings related to VM Guest Patching on Linux. */\nexport interface LinuxPatchSettings {\n  /** Specifies the mode of VM Guest Patching to IaaS virtual machine or virtual machines associated to virtual machine scale set with OrchestrationMode as Flexible.<br /><br /> Possible values are:<br /><br /> **ImageDefault** - The virtual machine's default patching configuration is used. <br /><br /> **AutomaticByPlatform** - The virtual machine will be automatically updated by the platform. The property provisionVMAgent must be true */\n  patchMode?: LinuxVMGuestPatchMode;\n  /** Specifies the mode of VM Guest Patch Assessment for the IaaS virtual machine.<br /><br /> Possible values are:<br /><br /> **ImageDefault** - You control the timing of patch assessments on a virtual machine. <br /><br /> **AutomaticByPlatform** - The platform will trigger periodic patch assessments. The property provisionVMAgent must be true. */\n  assessmentMode?: LinuxPatchAssessmentMode;\n}\n\n/** Describes a set of certificates which are all in the same Key Vault. */\nexport interface VaultSecretGroup {\n  /** The relative URL of the Key Vault containing all of the certificates in VaultCertificates. */\n  sourceVault?: SubResource;\n  /** The list of key vault references in SourceVault which contain certificates. */\n  vaultCertificates?: VaultCertificate[];\n}\n\n/** Describes a single certificate reference in a Key Vault, and where the certificate should reside on the VM. */\nexport interface VaultCertificate {\n  /** This is the URL of a certificate that has been uploaded to Key Vault as a secret. For adding a secret to the Key Vault, see [Add a key or secret to the key vault](https://docs.microsoft.com/azure/key-vault/key-vault-get-started/#add). In this case, your certificate needs to be It is the Base64 encoding of the following JSON Object which is encoded in UTF-8: <br><br> {<br>  \"data\":\"<Base64-encoded-certificate>\",<br>  \"dataType\":\"pfx\",<br>  \"password\":\"<pfx-file-password>\"<br>} <br> To install certificates on a virtual machine it is recommended to use the [Azure Key Vault virtual machine extension for Linux](https://docs.microsoft.com/azure/virtual-machines/extensions/key-vault-linux) or the [Azure Key Vault virtual machine extension for Windows](https://docs.microsoft.com/azure/virtual-machines/extensions/key-vault-windows). */\n  certificateUrl?: string;\n  /** For Windows VMs, specifies the certificate store on the Virtual Machine to which the certificate should be added. The specified certificate store is implicitly in the LocalMachine account. <br><br>For Linux VMs, the certificate file is placed under the /var/lib/waagent directory, with the file name &lt;UppercaseThumbprint&gt;.crt for the X509 certificate file and &lt;UppercaseThumbprint&gt;.prv for private key. Both of these files are .pem formatted. */\n  certificateStore?: string;\n}\n\n/** Specifies the network interfaces or the networking configuration of the virtual machine. */\nexport interface NetworkProfile {\n  /** Specifies the list of resource Ids for the network interfaces associated with the virtual machine. */\n  networkInterfaces?: NetworkInterfaceReference[];\n  /** specifies the Microsoft.Network API version used when creating networking resources in the Network Interface Configurations */\n  networkApiVersion?: NetworkApiVersion;\n  /** Specifies the networking configurations that will be used to create the virtual machine networking resources. */\n  networkInterfaceConfigurations?: VirtualMachineNetworkInterfaceConfiguration[];\n}\n\n/** Describes a virtual machine network interface configurations. */\nexport interface VirtualMachineNetworkInterfaceConfiguration {\n  /** The network interface configuration name. */\n  name: string;\n  /** Specifies the primary network interface in case the virtual machine has more than 1 network interface. */\n  primary?: boolean;\n  /** Specify what happens to the network interface when the VM is deleted */\n  deleteOption?: DeleteOptions;\n  /** Specifies whether the network interface is accelerated networking-enabled. */\n  enableAcceleratedNetworking?: boolean;\n  /** Specifies whether the network interface is FPGA networking-enabled. */\n  enableFpga?: boolean;\n  /** Whether IP forwarding enabled on this NIC. */\n  enableIPForwarding?: boolean;\n  /** The network security group. */\n  networkSecurityGroup?: SubResource;\n  /** The dns settings to be applied on the network interfaces. */\n  dnsSettings?: VirtualMachineNetworkInterfaceDnsSettingsConfiguration;\n  /** Specifies the IP configurations of the network interface. */\n  ipConfigurations?: VirtualMachineNetworkInterfaceIPConfiguration[];\n  dscpConfiguration?: SubResource;\n}\n\n/** Describes a virtual machines network configuration's DNS settings. */\nexport interface VirtualMachineNetworkInterfaceDnsSettingsConfiguration {\n  /** List of DNS servers IP addresses */\n  dnsServers?: string[];\n}\n\n/** Describes a virtual machine network profile's IP configuration. */\nexport interface VirtualMachineNetworkInterfaceIPConfiguration {\n  /** The IP configuration name. */\n  name: string;\n  /** Specifies the identifier of the subnet. */\n  subnet?: SubResource;\n  /** Specifies the primary network interface in case the virtual machine has more than 1 network interface. */\n  primary?: boolean;\n  /** The publicIPAddressConfiguration. */\n  publicIPAddressConfiguration?: VirtualMachinePublicIPAddressConfiguration;\n  /** Available from Api-Version 2017-03-30 onwards, it represents whether the specific ipconfiguration is IPv4 or IPv6. Default is taken as IPv4.  Possible values are: 'IPv4' and 'IPv6'. */\n  privateIPAddressVersion?: IPVersions;\n  /** Specifies an array of references to application security group. */\n  applicationSecurityGroups?: SubResource[];\n  /** Specifies an array of references to backend address pools of application gateways. A virtual machine can reference backend address pools of multiple application gateways. Multiple virtual machines cannot use the same application gateway. */\n  applicationGatewayBackendAddressPools?: SubResource[];\n  /** Specifies an array of references to backend address pools of load balancers. A virtual machine can reference backend address pools of one public and one internal load balancer. [Multiple virtual machines cannot use the same basic sku load balancer]. */\n  loadBalancerBackendAddressPools?: SubResource[];\n}\n\n/** Describes a virtual machines IP Configuration's PublicIPAddress configuration */\nexport interface VirtualMachinePublicIPAddressConfiguration {\n  /** The publicIP address configuration name. */\n  name: string;\n  /** Describes the public IP Sku. It can only be set with OrchestrationMode as Flexible. */\n  sku?: PublicIPAddressSku;\n  /** The idle timeout of the public IP address. */\n  idleTimeoutInMinutes?: number;\n  /** Specify what happens to the public IP address when the VM is deleted */\n  deleteOption?: DeleteOptions;\n  /** The dns settings to be applied on the publicIP addresses . */\n  dnsSettings?: VirtualMachinePublicIPAddressDnsSettingsConfiguration;\n  /** The list of IP tags associated with the public IP address. */\n  ipTags?: VirtualMachineIpTag[];\n  /** The PublicIPPrefix from which to allocate publicIP addresses. */\n  publicIPPrefix?: SubResource;\n  /** Available from Api-Version 2019-07-01 onwards, it represents whether the specific ipconfiguration is IPv4 or IPv6. Default is taken as IPv4. Possible values are: 'IPv4' and 'IPv6'. */\n  publicIPAddressVersion?: IPVersions;\n  /** Specify the public IP allocation type */\n  publicIPAllocationMethod?: PublicIPAllocationMethod;\n}\n\n/** Describes a virtual machines network configuration's DNS settings. */\nexport interface VirtualMachinePublicIPAddressDnsSettingsConfiguration {\n  /** The Domain name label prefix of the PublicIPAddress resources that will be created. The generated name label is the concatenation of the domain name label and vm network profile unique ID. */\n  domainNameLabel: string;\n}\n\n/** Contains the IP tag associated with the public IP address. */\nexport interface VirtualMachineIpTag {\n  /** IP tag type. Example: FirstPartyUsage. */\n  ipTagType?: string;\n  /** IP tag associated with the public IP. Example: SQL, Storage etc. */\n  tag?: string;\n}\n\n/** Describes the public IP Sku. It can only be set with OrchestrationMode as Flexible. */\nexport interface PublicIPAddressSku {\n  /** Specify public IP sku name */\n  name?: PublicIPAddressSkuName;\n  /** Specify public IP sku tier */\n  tier?: PublicIPAddressSkuTier;\n}\n\n/** Specifies the Security profile settings for the virtual machine or virtual machine scale set. */\nexport interface SecurityProfile {\n  /** Specifies the security settings like secure boot and vTPM used while creating the virtual machine. <br><br>Minimum api-version: 2020-12-01 */\n  uefiSettings?: UefiSettings;\n  /** This property can be used by user in the request to enable or disable the Host Encryption for the virtual machine or virtual machine scale set. This will enable the encryption for all the disks including Resource/Temp disk at host itself. <br><br> Default: The Encryption at host will be disabled unless this property is set to true for the resource. */\n  encryptionAtHost?: boolean;\n  /** Specifies the SecurityType of the virtual machine. It has to be set to any specified value to enable UefiSettings. <br><br> Default: UefiSettings will not be enabled unless this property is set. */\n  securityType?: SecurityTypes;\n}\n\n/** Specifies the security settings like secure boot and vTPM used while creating the virtual machine. <br><br>Minimum api-version: 2020-12-01 */\nexport interface UefiSettings {\n  /** Specifies whether secure boot should be enabled on the virtual machine. <br><br>Minimum api-version: 2020-12-01 */\n  secureBootEnabled?: boolean;\n  /** Specifies whether vTPM should be enabled on the virtual machine. <br><br>Minimum api-version: 2020-12-01 */\n  vTpmEnabled?: boolean;\n}\n\n/** Specifies the boot diagnostic settings state. <br><br>Minimum api-version: 2015-06-15. */\nexport interface DiagnosticsProfile {\n  /** Boot Diagnostics is a debugging feature which allows you to view Console Output and Screenshot to diagnose VM status. <br>**NOTE**: If storageUri is being specified then ensure that the storage account is in the same region and subscription as the VM. <br><br> You can easily view the output of your console log. <br><br> Azure also enables you to see a screenshot of the VM from the hypervisor. */\n  bootDiagnostics?: BootDiagnostics;\n}\n\n/** Boot Diagnostics is a debugging feature which allows you to view Console Output and Screenshot to diagnose VM status. <br><br> You can easily view the output of your console log. <br><br> Azure also enables you to see a screenshot of the VM from the hypervisor. */\nexport interface BootDiagnostics {\n  /** Whether boot diagnostics should be enabled on the Virtual Machine. */\n  enabled?: boolean;\n  /** Uri of the storage account to use for placing the console output and screenshot. <br><br>If storageUri is not specified while enabling boot diagnostics, managed storage will be used. */\n  storageUri?: string;\n}\n\n/** Specifies the billing related details of a Azure Spot VM or VMSS. <br><br>Minimum api-version: 2019-03-01. */\nexport interface BillingProfile {\n  /** Specifies the maximum price you are willing to pay for a Azure Spot VM/VMSS. This price is in US Dollars. <br><br> This price will be compared with the current Azure Spot price for the VM size. Also, the prices are compared at the time of create/update of Azure Spot VM/VMSS and the operation will only succeed if  the maxPrice is greater than the current Azure Spot price. <br><br> The maxPrice will also be used for evicting a Azure Spot VM/VMSS if the current Azure Spot price goes beyond the maxPrice after creation of VM/VMSS. <br><br> Possible values are: <br><br> - Any decimal value greater than zero. Example: 0.01538 <br><br> -1 – indicates default price to be up-to on-demand. <br><br> You can set the maxPrice to -1 to indicate that the Azure Spot VM/VMSS should not be evicted for price reasons. Also, the default max price is -1 if it is not provided by you. <br><br>Minimum api-version: 2019-03-01. */\n  maxPrice?: number;\n}\n\n/** The instance view of a virtual machine. */\nexport interface VirtualMachineInstanceView {\n  /** Specifies the update domain of the virtual machine. */\n  platformUpdateDomain?: number;\n  /** Specifies the fault domain of the virtual machine. */\n  platformFaultDomain?: number;\n  /** The computer name assigned to the virtual machine. */\n  computerName?: string;\n  /** The Operating System running on the virtual machine. */\n  osName?: string;\n  /** The version of Operating System running on the virtual machine. */\n  osVersion?: string;\n  /** Specifies the HyperVGeneration Type associated with a resource */\n  hyperVGeneration?: HyperVGenerationType;\n  /** The Remote desktop certificate thumbprint. */\n  rdpThumbPrint?: string;\n  /** The VM Agent running on the virtual machine. */\n  vmAgent?: VirtualMachineAgentInstanceView;\n  /** The Maintenance Operation status on the virtual machine. */\n  maintenanceRedeployStatus?: MaintenanceRedeployStatus;\n  /** The virtual machine disk information. */\n  disks?: DiskInstanceView[];\n  /** The extensions information. */\n  extensions?: VirtualMachineExtensionInstanceView[];\n  /**\n   * The health status for the VM.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly vmHealth?: VirtualMachineHealthStatus;\n  /** Boot Diagnostics is a debugging feature which allows you to view Console Output and Screenshot to diagnose VM status. <br><br> You can easily view the output of your console log. <br><br> Azure also enables you to see a screenshot of the VM from the hypervisor. */\n  bootDiagnostics?: BootDiagnosticsInstanceView;\n  /**\n   * Resource id of the dedicated host, on which the virtual machine is allocated through automatic placement, when the virtual machine is associated with a dedicated host group that has automatic placement enabled. <br><br>Minimum api-version: 2020-06-01.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly assignedHost?: string;\n  /** The resource status information. */\n  statuses?: InstanceViewStatus[];\n  /** [Preview Feature] The status of virtual machine patch operations. */\n  patchStatus?: VirtualMachinePatchStatus;\n}\n\n/** The instance view of the VM Agent running on the virtual machine. */\nexport interface VirtualMachineAgentInstanceView {\n  /** The VM Agent full version. */\n  vmAgentVersion?: string;\n  /** The virtual machine extension handler instance view. */\n  extensionHandlers?: VirtualMachineExtensionHandlerInstanceView[];\n  /** The resource status information. */\n  statuses?: InstanceViewStatus[];\n}\n\n/** The instance view of a virtual machine extension handler. */\nexport interface VirtualMachineExtensionHandlerInstanceView {\n  /** Specifies the type of the extension; an example is \"CustomScriptExtension\". */\n  type?: string;\n  /** Specifies the version of the script handler. */\n  typeHandlerVersion?: string;\n  /** The extension handler status. */\n  status?: InstanceViewStatus;\n}\n\n/** Maintenance Operation Status. */\nexport interface MaintenanceRedeployStatus {\n  /** True, if customer is allowed to perform Maintenance. */\n  isCustomerInitiatedMaintenanceAllowed?: boolean;\n  /** Start Time for the Pre Maintenance Window. */\n  preMaintenanceWindowStartTime?: Date;\n  /** End Time for the Pre Maintenance Window. */\n  preMaintenanceWindowEndTime?: Date;\n  /** Start Time for the Maintenance Window. */\n  maintenanceWindowStartTime?: Date;\n  /** End Time for the Maintenance Window. */\n  maintenanceWindowEndTime?: Date;\n  /** The Last Maintenance Operation Result Code. */\n  lastOperationResultCode?: MaintenanceOperationResultCodeTypes;\n  /** Message returned for the last Maintenance Operation. */\n  lastOperationMessage?: string;\n}\n\n/** The instance view of the disk. */\nexport interface DiskInstanceView {\n  /** The disk name. */\n  name?: string;\n  /** Specifies the encryption settings for the OS Disk. <br><br> Minimum api-version: 2015-06-15 */\n  encryptionSettings?: DiskEncryptionSettings[];\n  /** The resource status information. */\n  statuses?: InstanceViewStatus[];\n}\n\n/** The health status of the VM. */\nexport interface VirtualMachineHealthStatus {\n  /**\n   * The health status information for the VM.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly status?: InstanceViewStatus;\n}\n\n/** The instance view of a virtual machine boot diagnostics. */\nexport interface BootDiagnosticsInstanceView {\n  /**\n   * The console screenshot blob URI. <br><br>NOTE: This will **not** be set if boot diagnostics is currently enabled with managed storage.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly consoleScreenshotBlobUri?: string;\n  /**\n   * The serial console log blob Uri. <br><br>NOTE: This will **not** be set if boot diagnostics is currently enabled with managed storage.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly serialConsoleLogBlobUri?: string;\n  /**\n   * The boot diagnostics status information for the VM. <br><br> NOTE: It will be set only if there are errors encountered in enabling boot diagnostics.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly status?: InstanceViewStatus;\n}\n\n/** The status of virtual machine patch operations. */\nexport interface VirtualMachinePatchStatus {\n  /** The available patch summary of the latest assessment operation for the virtual machine. */\n  availablePatchSummary?: AvailablePatchSummary;\n  /** The installation summary of the latest installation operation for the virtual machine. */\n  lastPatchInstallationSummary?: LastPatchInstallationSummary;\n  /**\n   * The enablement status of the specified patchMode\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly configurationStatuses?: InstanceViewStatus[];\n}\n\n/** Describes the properties of an virtual machine instance view for available patch summary. */\nexport interface AvailablePatchSummary {\n  /**\n   * The overall success or failure status of the operation. It remains \"InProgress\" until the operation completes. At that point it will become \"Unknown\", \"Failed\", \"Succeeded\", or \"CompletedWithWarnings.\"\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly status?: PatchOperationStatus;\n  /**\n   * The activity ID of the operation that produced this result. It is used to correlate across CRP and extension logs.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly assessmentActivityId?: string;\n  /**\n   * The overall reboot status of the VM. It will be true when partially installed patches require a reboot to complete installation but the reboot has not yet occurred.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly rebootPending?: boolean;\n  /**\n   * The number of critical or security patches that have been detected as available and not yet installed.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly criticalAndSecurityPatchCount?: number;\n  /**\n   * The number of all available patches excluding critical and security.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly otherPatchCount?: number;\n  /**\n   * The UTC timestamp when the operation began.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly startTime?: Date;\n  /**\n   * The UTC timestamp when the operation began.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly lastModifiedTime?: Date;\n  /**\n   * The errors that were encountered during execution of the operation. The details array contains the list of them.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly error?: ApiError;\n}\n\n/** Describes the properties of the last installed patch summary. */\nexport interface LastPatchInstallationSummary {\n  /**\n   * The overall success or failure status of the operation. It remains \"InProgress\" until the operation completes. At that point it will become \"Unknown\", \"Failed\", \"Succeeded\", or \"CompletedWithWarnings.\"\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly status?: PatchOperationStatus;\n  /**\n   * The activity ID of the operation that produced this result. It is used to correlate across CRP and extension logs.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly installationActivityId?: string;\n  /**\n   * Describes whether the operation ran out of time before it completed all its intended actions\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly maintenanceWindowExceeded?: boolean;\n  /**\n   * The number of all available patches but not going to be installed because it didn't match a classification or inclusion list entry.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly notSelectedPatchCount?: number;\n  /**\n   * The number of all available patches but excluded explicitly by a customer-specified exclusion list match.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly excludedPatchCount?: number;\n  /**\n   * The number of all available patches expected to be installed over the course of the patch installation operation.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly pendingPatchCount?: number;\n  /**\n   * The count of patches that successfully installed.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly installedPatchCount?: number;\n  /**\n   * The count of patches that failed installation.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly failedPatchCount?: number;\n  /**\n   * The UTC timestamp when the operation began.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly startTime?: Date;\n  /**\n   * The UTC timestamp when the operation began.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly lastModifiedTime?: Date;\n  /**\n   * The errors that were encountered during execution of the operation. The details array contains the list of them.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly error?: ApiError;\n}\n\nexport interface ScheduledEventsProfile {\n  /** Specifies Terminate Scheduled Event related configurations. */\n  terminateNotificationProfile?: TerminateNotificationProfile;\n}\n\nexport interface TerminateNotificationProfile {\n  /** Configurable length of time a Virtual Machine being deleted will have to potentially approve the Terminate Scheduled Event before the event is auto approved (timed out). The configuration must be specified in ISO 8601 format, the default value is 5 minutes (PT5M) */\n  notBeforeTimeout?: string;\n  /** Specifies whether the Terminate Scheduled event is enabled or disabled. */\n  enable?: boolean;\n}\n\n/** The parameters of a capacity reservation Profile. */\nexport interface CapacityReservationProfile {\n  /** Specifies the capacity reservation group resource id that should be used for allocating the virtual machine or scaleset vm instances provided enough capacity has been reserved. Please refer to https://aka.ms/CapacityReservation for more details. */\n  capacityReservationGroup?: SubResource;\n}\n\n/** Contains the list of gallery applications that should be made available to the VM/VMSS */\nexport interface ApplicationProfile {\n  /** Specifies the gallery applications that should be made available to the VM/VMSS */\n  galleryApplications?: VMGalleryApplication[];\n}\n\n/** Specifies the required information to reference a compute gallery application version */\nexport interface VMGalleryApplication {\n  /** Optional, Specifies a passthrough value for more generic context. */\n  tags?: string;\n  /** Optional, Specifies the order in which the packages have to be installed */\n  order?: number;\n  /** Specifies the GalleryApplicationVersion resource id on the form of /subscriptions/{SubscriptionId}/resourceGroups/{ResourceGroupName}/providers/Microsoft.Compute/galleries/{galleryName}/applications/{application}/versions/{version} */\n  packageReferenceId: string;\n  /** Optional, Specifies the uri to an azure blob that will replace the default configuration for the package if provided */\n  configurationReference?: string;\n}\n\n/** Identity for the virtual machine. */\nexport interface VirtualMachineIdentity {\n  /**\n   * The principal id of virtual machine identity. This property will only be provided for a system assigned identity.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly principalId?: string;\n  /**\n   * The tenant id associated with the virtual machine. This property will only be provided for a system assigned identity.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly tenantId?: string;\n  /** The type of identity used for the virtual machine. The type 'SystemAssigned, UserAssigned' includes both an implicitly created identity and a set of user assigned identities. The type 'None' will remove any identities from the virtual machine. */\n  type?: ResourceIdentityType;\n  /** The list of user identities associated with the Virtual Machine. The user identity dictionary key references will be ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}'. */\n  userAssignedIdentities?: {\n    [propertyName: string]: UserAssignedIdentitiesValue;\n  };\n}\n\nexport interface UserAssignedIdentitiesValue {\n  /**\n   * The principal id of user assigned identity.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly principalId?: string;\n  /**\n   * The client id of user assigned identity.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly clientId?: string;\n}\n\n/** The List Virtual Machine operation response. */\nexport interface VirtualMachineScaleSetListResult {\n  /** The list of virtual machine scale sets. */\n  value: VirtualMachineScaleSet[];\n  /** The uri to fetch the next page of Virtual Machine Scale Sets. Call ListNext() with this to fetch the next page of VMSS. */\n  nextLink?: string;\n}\n\n/** Describes an upgrade policy - automatic, manual, or rolling. */\nexport interface UpgradePolicy {\n  /** Specifies the mode of an upgrade to virtual machines in the scale set.<br /><br /> Possible values are:<br /><br /> **Manual** - You  control the application of updates to virtual machines in the scale set. You do this by using the manualUpgrade action.<br /><br /> **Automatic** - All virtual machines in the scale set are  automatically updated at the same time. */\n  mode?: UpgradeMode;\n  /** The configuration parameters used while performing a rolling upgrade. */\n  rollingUpgradePolicy?: RollingUpgradePolicy;\n  /** Configuration parameters used for performing automatic OS Upgrade. */\n  automaticOSUpgradePolicy?: AutomaticOSUpgradePolicy;\n}\n\n/** The configuration parameters used while performing a rolling upgrade. */\nexport interface RollingUpgradePolicy {\n  /** The maximum percent of total virtual machine instances that will be upgraded simultaneously by the rolling upgrade in one batch. As this is a maximum, unhealthy instances in previous or future batches can cause the percentage of instances in a batch to decrease to ensure higher reliability. The default value for this parameter is 20%. */\n  maxBatchInstancePercent?: number;\n  /** The maximum percentage of the total virtual machine instances in the scale set that can be simultaneously unhealthy, either as a result of being upgraded, or by being found in an unhealthy state by the virtual machine health checks before the rolling upgrade aborts. This constraint will be checked prior to starting any batch. The default value for this parameter is 20%. */\n  maxUnhealthyInstancePercent?: number;\n  /** The maximum percentage of upgraded virtual machine instances that can be found to be in an unhealthy state. This check will happen after each batch is upgraded. If this percentage is ever exceeded, the rolling update aborts. The default value for this parameter is 20%. */\n  maxUnhealthyUpgradedInstancePercent?: number;\n  /** The wait time between completing the update for all virtual machines in one batch and starting the next batch. The time duration should be specified in ISO 8601 format. The default value is 0 seconds (PT0S). */\n  pauseTimeBetweenBatches?: string;\n  /** Allow VMSS to ignore AZ boundaries when constructing upgrade batches. Take into consideration the Update Domain and maxBatchInstancePercent to determine the batch size. */\n  enableCrossZoneUpgrade?: boolean;\n  /** Upgrade all unhealthy instances in a scale set before any healthy instances. */\n  prioritizeUnhealthyInstances?: boolean;\n}\n\n/** The configuration parameters used for performing automatic OS upgrade. */\nexport interface AutomaticOSUpgradePolicy {\n  /** Indicates whether OS upgrades should automatically be applied to scale set instances in a rolling fashion when a newer version of the OS image becomes available. Default value is false. <br><br> If this is set to true for Windows based scale sets, [enableAutomaticUpdates](https://docs.microsoft.com/dotnet/api/microsoft.azure.management.compute.models.windowsconfiguration.enableautomaticupdates?view=azure-dotnet) is automatically set to false and cannot be set to true. */\n  enableAutomaticOSUpgrade?: boolean;\n  /** Whether OS image rollback feature should be disabled. Default value is false. */\n  disableAutomaticRollback?: boolean;\n}\n\n/** Specifies the configuration parameters for automatic repairs on the virtual machine scale set. */\nexport interface AutomaticRepairsPolicy {\n  /** Specifies whether automatic repairs should be enabled on the virtual machine scale set. The default value is false. */\n  enabled?: boolean;\n  /** The amount of time for which automatic repairs are suspended due to a state change on VM. The grace time starts after the state change has completed. This helps avoid premature or accidental repairs. The time duration should be specified in ISO 8601 format. The minimum allowed grace period is 10 minutes (PT10M), which is also the default value. The maximum allowed grace period is 90 minutes (PT90M). */\n  gracePeriod?: string;\n  /** Type of repair action (replace, restart, reimage) that will be used for repairing unhealthy virtual machines in the scale set. Default value is replace. */\n  repairAction?: RepairAction;\n}\n\n/** Describes a virtual machine scale set virtual machine profile. */\nexport interface VirtualMachineScaleSetVMProfile {\n  /** Specifies the operating system settings for the virtual machines in the scale set. */\n  osProfile?: VirtualMachineScaleSetOSProfile;\n  /** Specifies the storage settings for the virtual machine disks. */\n  storageProfile?: VirtualMachineScaleSetStorageProfile;\n  /** Specifies properties of the network interfaces of the virtual machines in the scale set. */\n  networkProfile?: VirtualMachineScaleSetNetworkProfile;\n  /** Specifies the Security related profile settings for the virtual machines in the scale set. */\n  securityProfile?: SecurityProfile;\n  /** Specifies the boot diagnostic settings state. <br><br>Minimum api-version: 2015-06-15. */\n  diagnosticsProfile?: DiagnosticsProfile;\n  /** Specifies a collection of settings for extensions installed on virtual machines in the scale set. */\n  extensionProfile?: VirtualMachineScaleSetExtensionProfile;\n  /** Specifies that the image or disk that is being used was licensed on-premises. <br><br> Possible values for Windows Server operating system are: <br><br> Windows_Client <br><br> Windows_Server <br><br> Possible values for Linux Server operating system are: <br><br> RHEL_BYOS (for RHEL) <br><br> SLES_BYOS (for SUSE) <br><br> For more information, see [Azure Hybrid Use Benefit for Windows Server](https://docs.microsoft.com/azure/virtual-machines/windows/hybrid-use-benefit-licensing) <br><br> [Azure Hybrid Use Benefit for Linux Server](https://docs.microsoft.com/azure/virtual-machines/linux/azure-hybrid-benefit-linux) <br><br> Minimum api-version: 2015-06-15 */\n  licenseType?: string;\n  /** Specifies the priority for the virtual machines in the scale set. <br><br>Minimum api-version: 2017-10-30-preview */\n  priority?: VirtualMachinePriorityTypes;\n  /** Specifies the eviction policy for the Azure Spot virtual machine and Azure Spot scale set. <br><br>For Azure Spot virtual machines, both 'Deallocate' and 'Delete' are supported and the minimum api-version is 2019-03-01. <br><br>For Azure Spot scale sets, both 'Deallocate' and 'Delete' are supported and the minimum api-version is 2017-10-30-preview. */\n  evictionPolicy?: VirtualMachineEvictionPolicyTypes;\n  /** Specifies the billing related details of a Azure Spot VMSS. <br><br>Minimum api-version: 2019-03-01. */\n  billingProfile?: BillingProfile;\n  /** Specifies Scheduled Event related configurations. */\n  scheduledEventsProfile?: ScheduledEventsProfile;\n  /** UserData for the virtual machines in the scale set, which must be base-64 encoded. Customer should not pass any secrets in here. <br><br>Minimum api-version: 2021-03-01 */\n  userData?: string;\n  /** Specifies the capacity reservation related details of a scale set. <br><br>Minimum api-version: 2021-04-01. */\n  capacityReservation?: CapacityReservationProfile;\n  /** Specifies the gallery applications that should be made available to the VM/VMSS */\n  applicationProfile?: ApplicationProfile;\n  /** Specifies the hardware profile related details of a scale set. <br><br>Minimum api-version: 2021-11-01. */\n  hardwareProfile?: VirtualMachineScaleSetHardwareProfile;\n}\n\n/** Describes a virtual machine scale set OS profile. */\nexport interface VirtualMachineScaleSetOSProfile {\n  /** Specifies the computer name prefix for all of the virtual machines in the scale set. Computer name prefixes must be 1 to 15 characters long. */\n  computerNamePrefix?: string;\n  /** Specifies the name of the administrator account. <br><br> **Windows-only restriction:** Cannot end in \".\" <br><br> **Disallowed values:** \"administrator\", \"admin\", \"user\", \"user1\", \"test\", \"user2\", \"test1\", \"user3\", \"admin1\", \"1\", \"123\", \"a\", \"actuser\", \"adm\", \"admin2\", \"aspnet\", \"backup\", \"console\", \"david\", \"guest\", \"john\", \"owner\", \"root\", \"server\", \"sql\", \"support\", \"support_388945a0\", \"sys\", \"test2\", \"test3\", \"user4\", \"user5\". <br><br> **Minimum-length (Linux):** 1  character <br><br> **Max-length (Linux):** 64 characters <br><br> **Max-length (Windows):** 20 characters */\n  adminUsername?: string;\n  /** Specifies the password of the administrator account. <br><br> **Minimum-length (Windows):** 8 characters <br><br> **Minimum-length (Linux):** 6 characters <br><br> **Max-length (Windows):** 123 characters <br><br> **Max-length (Linux):** 72 characters <br><br> **Complexity requirements:** 3 out of 4 conditions below need to be fulfilled <br> Has lower characters <br>Has upper characters <br> Has a digit <br> Has a special character (Regex match [\\W_]) <br><br> **Disallowed values:** \"abc@123\", \"P@$$w0rd\", \"P@ssw0rd\", \"P@ssword123\", \"Pa$$word\", \"pass@word1\", \"Password!\", \"Password1\", \"Password22\", \"iloveyou!\" <br><br> For resetting the password, see [How to reset the Remote Desktop service or its login password in a Windows VM](https://docs.microsoft.com/troubleshoot/azure/virtual-machines/reset-rdp) <br><br> For resetting root password, see [Manage users, SSH, and check or repair disks on Azure Linux VMs using the VMAccess Extension](https://docs.microsoft.com/troubleshoot/azure/virtual-machines/troubleshoot-ssh-connection) */\n  adminPassword?: string;\n  /** Specifies a base-64 encoded string of custom data. The base-64 encoded string is decoded to a binary array that is saved as a file on the Virtual Machine. The maximum length of the binary array is 65535 bytes. <br><br> For using cloud-init for your VM, see [Using cloud-init to customize a Linux VM during creation](https://docs.microsoft.com/azure/virtual-machines/linux/using-cloud-init) */\n  customData?: string;\n  /** Specifies Windows operating system settings on the virtual machine. */\n  windowsConfiguration?: WindowsConfiguration;\n  /** Specifies the Linux operating system settings on the virtual machine. <br><br>For a list of supported Linux distributions, see [Linux on Azure-Endorsed Distributions](https://docs.microsoft.com/azure/virtual-machines/linux/endorsed-distros). */\n  linuxConfiguration?: LinuxConfiguration;\n  /** Specifies set of certificates that should be installed onto the virtual machines in the scale set. To install certificates on a virtual machine it is recommended to use the [Azure Key Vault virtual machine extension for Linux](https://docs.microsoft.com/azure/virtual-machines/extensions/key-vault-linux) or the [Azure Key Vault virtual machine extension for Windows](https://docs.microsoft.com/azure/virtual-machines/extensions/key-vault-windows). */\n  secrets?: VaultSecretGroup[];\n  /** Specifies whether extension operations should be allowed on the virtual machine scale set. <br><br>This may only be set to False when no extensions are present on the virtual machine scale set. */\n  allowExtensionOperations?: boolean;\n}\n\n/** Describes a virtual machine scale set storage profile. */\nexport interface VirtualMachineScaleSetStorageProfile {\n  /** Specifies information about the image to use. You can specify information about platform images, marketplace images, or virtual machine images. This element is required when you want to use a platform image, marketplace image, or virtual machine image, but is not used in other creation operations. */\n  imageReference?: ImageReference;\n  /** Specifies information about the operating system disk used by the virtual machines in the scale set. <br><br> For more information about disks, see [About disks and VHDs for Azure virtual machines](https://docs.microsoft.com/azure/virtual-machines/managed-disks-overview). */\n  osDisk?: VirtualMachineScaleSetOSDisk;\n  /** Specifies the parameters that are used to add data disks to the virtual machines in the scale set. <br><br> For more information about disks, see [About disks and VHDs for Azure virtual machines](https://docs.microsoft.com/azure/virtual-machines/managed-disks-overview). */\n  dataDisks?: VirtualMachineScaleSetDataDisk[];\n}\n\n/** Describes a virtual machine scale set operating system disk. */\nexport interface VirtualMachineScaleSetOSDisk {\n  /** The disk name. */\n  name?: string;\n  /** Specifies the caching requirements. <br><br> Possible values are: <br><br> **None** <br><br> **ReadOnly** <br><br> **ReadWrite** <br><br> Default: **None for Standard storage. ReadOnly for Premium storage** */\n  caching?: CachingTypes;\n  /** Specifies whether writeAccelerator should be enabled or disabled on the disk. */\n  writeAcceleratorEnabled?: boolean;\n  /** Specifies how the virtual machines in the scale set should be created.<br><br> The only allowed value is: **FromImage** \\u2013 This value is used when you are using an image to create the virtual machine. If you are using a platform image, you also use the imageReference element described above. If you are using a marketplace image, you  also use the plan element previously described. */\n  createOption: DiskCreateOptionTypes;\n  /** Specifies the ephemeral disk Settings for the operating system disk used by the virtual machine scale set. */\n  diffDiskSettings?: DiffDiskSettings;\n  /** Specifies the size of the operating system disk in gigabytes. This element can be used to overwrite the size of the disk in a virtual machine image. <br><br> This value cannot be larger than 1023 GB */\n  diskSizeGB?: number;\n  /** This property allows you to specify the type of the OS that is included in the disk if creating a VM from user-image or a specialized VHD. <br><br> Possible values are: <br><br> **Windows** <br><br> **Linux** */\n  osType?: OperatingSystemTypes;\n  /** Specifies information about the unmanaged user image to base the scale set on. */\n  image?: VirtualHardDisk;\n  /** Specifies the container urls that are used to store operating system disks for the scale set. */\n  vhdContainers?: string[];\n  /** The managed disk parameters. */\n  managedDisk?: VirtualMachineScaleSetManagedDiskParameters;\n}\n\n/** Describes the parameters of a ScaleSet managed disk. */\nexport interface VirtualMachineScaleSetManagedDiskParameters {\n  /** Specifies the storage account type for the managed disk. NOTE: UltraSSD_LRS can only be used with data disks, it cannot be used with OS Disk. */\n  storageAccountType?: StorageAccountTypes;\n  /** Specifies the customer managed disk encryption set resource id for the managed disk. */\n  diskEncryptionSet?: DiskEncryptionSetParameters;\n  /** Specifies the security profile for the managed disk. */\n  securityProfile?: VMDiskSecurityProfile;\n}\n\n/** Describes a virtual machine scale set data disk. */\nexport interface VirtualMachineScaleSetDataDisk {\n  /** The disk name. */\n  name?: string;\n  /** Specifies the logical unit number of the data disk. This value is used to identify data disks within the VM and therefore must be unique for each data disk attached to a VM. */\n  lun: number;\n  /** Specifies the caching requirements. <br><br> Possible values are: <br><br> **None** <br><br> **ReadOnly** <br><br> **ReadWrite** <br><br> Default: **None for Standard storage. ReadOnly for Premium storage** */\n  caching?: CachingTypes;\n  /** Specifies whether writeAccelerator should be enabled or disabled on the disk. */\n  writeAcceleratorEnabled?: boolean;\n  /** The create option. */\n  createOption: DiskCreateOptionTypes;\n  /** Specifies the size of an empty data disk in gigabytes. This element can be used to overwrite the size of the disk in a virtual machine image. <br><br> This value cannot be larger than 1023 GB */\n  diskSizeGB?: number;\n  /** The managed disk parameters. */\n  managedDisk?: VirtualMachineScaleSetManagedDiskParameters;\n  /** Specifies the Read-Write IOPS for the managed disk. Should be used only when StorageAccountType is UltraSSD_LRS. If not specified, a default value would be assigned based on diskSizeGB. */\n  diskIopsReadWrite?: number;\n  /** Specifies the bandwidth in MB per second for the managed disk. Should be used only when StorageAccountType is UltraSSD_LRS. If not specified, a default value would be assigned based on diskSizeGB. */\n  diskMBpsReadWrite?: number;\n}\n\n/** Describes a virtual machine scale set network profile. */\nexport interface VirtualMachineScaleSetNetworkProfile {\n  /** A reference to a load balancer probe used to determine the health of an instance in the virtual machine scale set. The reference will be in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/loadBalancers/{loadBalancerName}/probes/{probeName}'. */\n  healthProbe?: ApiEntityReference;\n  /** The list of network configurations. */\n  networkInterfaceConfigurations?: VirtualMachineScaleSetNetworkConfiguration[];\n  /** specifies the Microsoft.Network API version used when creating networking resources in the Network Interface Configurations for Virtual Machine Scale Set with orchestration mode 'Flexible' */\n  networkApiVersion?: NetworkApiVersion;\n}\n\n/** The API entity reference. */\nexport interface ApiEntityReference {\n  /** The ARM resource id in the form of /subscriptions/{SubscriptionId}/resourceGroups/{ResourceGroupName}/... */\n  id?: string;\n}\n\n/** Describes a virtual machines scale sets network configuration's DNS settings. */\nexport interface VirtualMachineScaleSetNetworkConfigurationDnsSettings {\n  /** List of DNS servers IP addresses */\n  dnsServers?: string[];\n}\n\n/** Describes a virtual machines scale set IP Configuration's PublicIPAddress configuration */\nexport interface VirtualMachineScaleSetPublicIPAddressConfiguration {\n  /** The publicIP address configuration name. */\n  name: string;\n  /** Describes the public IP Sku. It can only be set with OrchestrationMode as Flexible. */\n  sku?: PublicIPAddressSku;\n  /** The idle timeout of the public IP address. */\n  idleTimeoutInMinutes?: number;\n  /** The dns settings to be applied on the publicIP addresses . */\n  dnsSettings?: VirtualMachineScaleSetPublicIPAddressConfigurationDnsSettings;\n  /** The list of IP tags associated with the public IP address. */\n  ipTags?: VirtualMachineScaleSetIpTag[];\n  /** The PublicIPPrefix from which to allocate publicIP addresses. */\n  publicIPPrefix?: SubResource;\n  /** Available from Api-Version 2019-07-01 onwards, it represents whether the specific ipconfiguration is IPv4 or IPv6. Default is taken as IPv4. Possible values are: 'IPv4' and 'IPv6'. */\n  publicIPAddressVersion?: IPVersion;\n  /** Specify what happens to the public IP when the VM is deleted */\n  deleteOption?: DeleteOptions;\n}\n\n/** Describes a virtual machines scale sets network configuration's DNS settings. */\nexport interface VirtualMachineScaleSetPublicIPAddressConfigurationDnsSettings {\n  /** The Domain name label.The concatenation of the domain name label and vm index will be the domain name labels of the PublicIPAddress resources that will be created */\n  domainNameLabel: string;\n}\n\n/** Contains the IP tag associated with the public IP address. */\nexport interface VirtualMachineScaleSetIpTag {\n  /** IP tag type. Example: FirstPartyUsage. */\n  ipTagType?: string;\n  /** IP tag associated with the public IP. Example: SQL, Storage etc. */\n  tag?: string;\n}\n\n/** Describes a virtual machine scale set extension profile. */\nexport interface VirtualMachineScaleSetExtensionProfile {\n  /** The virtual machine scale set child extension resources. */\n  extensions?: VirtualMachineScaleSetExtension[];\n  /** Specifies the time alloted for all extensions to start. The time duration should be between 15 minutes and 120 minutes (inclusive) and should be specified in ISO 8601 format. The default value is 90 minutes (PT1H30M). <br><br> Minimum api-version: 2020-06-01 */\n  extensionsTimeBudget?: string;\n}\n\n/** Specifies the hardware settings for the virtual machine scale set. */\nexport interface VirtualMachineScaleSetHardwareProfile {\n  /** Specifies the properties for customizing the size of the virtual machine. Minimum api-version: 2021-11-01. <br><br> Please follow the instructions in [VM Customization](https://aka.ms/vmcustomization) for more details. */\n  vmSizeProperties?: VMSizeProperties;\n}\n\n/** Describes a scale-in policy for a virtual machine scale set. */\nexport interface ScaleInPolicy {\n  /** The rules to be followed when scaling-in a virtual machine scale set. <br><br> Possible values are: <br><br> **Default** When a virtual machine scale set is scaled in, the scale set will first be balanced across zones if it is a zonal scale set. Then, it will be balanced across Fault Domains as far as possible. Within each Fault Domain, the virtual machines chosen for removal will be the newest ones that are not protected from scale-in. <br><br> **OldestVM** When a virtual machine scale set is being scaled-in, the oldest virtual machines that are not protected from scale-in will be chosen for removal. For zonal virtual machine scale sets, the scale set will first be balanced across zones. Within each zone, the oldest virtual machines that are not protected will be chosen for removal. <br><br> **NewestVM** When a virtual machine scale set is being scaled-in, the newest virtual machines that are not protected from scale-in will be chosen for removal. For zonal virtual machine scale sets, the scale set will first be balanced across zones. Within each zone, the newest virtual machines that are not protected will be chosen for removal. <br><br> */\n  rules?: VirtualMachineScaleSetScaleInRules[];\n  /** This property allows you to specify if virtual machines chosen for removal have to be force deleted when a virtual machine scale set is being scaled-in.(Feature in Preview) */\n  forceDeletion?: boolean;\n}\n\n/** Specifies the Spot-Try-Restore properties for the virtual machine scale set. <br><br> With this property customer can enable or disable automatic restore of the evicted Spot VMSS VM instances opportunistically based on capacity availability and pricing constraint. */\nexport interface SpotRestorePolicy {\n  /** Enables the Spot-Try-Restore feature where evicted VMSS SPOT instances will be tried to be restored opportunistically based on capacity availability and pricing constraints */\n  enabled?: boolean;\n  /** Timeout value expressed as an ISO 8601 time duration after which the platform will not try to restore the VMSS SPOT instances */\n  restoreTimeout?: string;\n}\n\n/** Identity for the virtual machine scale set. */\nexport interface VirtualMachineScaleSetIdentity {\n  /**\n   * The principal id of virtual machine scale set identity. This property will only be provided for a system assigned identity.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly principalId?: string;\n  /**\n   * The tenant id associated with the virtual machine scale set. This property will only be provided for a system assigned identity.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly tenantId?: string;\n  /** The type of identity used for the virtual machine scale set. The type 'SystemAssigned, UserAssigned' includes both an implicitly created identity and a set of user assigned identities. The type 'None' will remove any identities from the virtual machine scale set. */\n  type?: ResourceIdentityType;\n  /** The list of user identities associated with the virtual machine scale set. The user identity dictionary key references will be ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}'. */\n  userAssignedIdentities?: {\n    [propertyName: string]: VirtualMachineScaleSetIdentityUserAssignedIdentitiesValue;\n  };\n}\n\nexport interface VirtualMachineScaleSetIdentityUserAssignedIdentitiesValue {\n  /**\n   * The principal id of user assigned identity.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly principalId?: string;\n  /**\n   * The client id of user assigned identity.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly clientId?: string;\n}\n\n/** Describes a storage profile. */\nexport interface ImageStorageProfile {\n  /** Specifies information about the operating system disk used by the virtual machine. <br><br> For more information about disks, see [About disks and VHDs for Azure virtual machines](https://docs.microsoft.com/azure/virtual-machines/managed-disks-overview). */\n  osDisk?: ImageOSDisk;\n  /** Specifies the parameters that are used to add a data disk to a virtual machine. <br><br> For more information about disks, see [About disks and VHDs for Azure virtual machines](https://docs.microsoft.com/azure/virtual-machines/managed-disks-overview). */\n  dataDisks?: ImageDataDisk[];\n  /** Specifies whether an image is zone resilient or not. Default is false. Zone resilient images can be created only in regions that provide Zone Redundant Storage (ZRS). */\n  zoneResilient?: boolean;\n}\n\n/** Describes a image disk. */\nexport interface ImageDisk {\n  /** The snapshot. */\n  snapshot?: SubResource;\n  /** The managedDisk. */\n  managedDisk?: SubResource;\n  /** The Virtual Hard Disk. */\n  blobUri?: string;\n  /** Specifies the caching requirements. <br><br> Possible values are: <br><br> **None** <br><br> **ReadOnly** <br><br> **ReadWrite** <br><br> Default: **None for Standard storage. ReadOnly for Premium storage** */\n  caching?: CachingTypes;\n  /** Specifies the size of empty data disks in gigabytes. This element can be used to overwrite the name of the disk in a virtual machine image. <br><br> This value cannot be larger than 1023 GB */\n  diskSizeGB?: number;\n  /** Specifies the storage account type for the managed disk. NOTE: UltraSSD_LRS can only be used with data disks, it cannot be used with OS Disk. */\n  storageAccountType?: StorageAccountTypes;\n  /** Specifies the customer managed disk encryption set resource id for the managed image disk. */\n  diskEncryptionSet?: DiskEncryptionSetParameters;\n}\n\n/** The List Image operation response. */\nexport interface ImageListResult {\n  /** The list of Images. */\n  value: Image[];\n  /** The uri to fetch the next page of Images. Call ListNext() with this to fetch the next page of Images. */\n  nextLink?: string;\n}\n\n/** Capture Virtual Machine parameters. */\nexport interface VirtualMachineCaptureParameters {\n  /** The captured virtual hard disk's name prefix. */\n  vhdPrefix: string;\n  /** The destination container name. */\n  destinationContainerName: string;\n  /** Specifies whether to overwrite the destination virtual hard disk, in case of conflict. */\n  overwriteVhds: boolean;\n}\n\n/** The properties of the source resource that this restore point collection is created from. */\nexport interface RestorePointCollectionSourceProperties {\n  /**\n   * Location of the source resource used to create this restore point collection.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly location?: string;\n  /** Resource Id of the source resource used to create this restore point collection */\n  id?: string;\n}\n\n/** Describes the properties of the Virtual Machine for which the restore point was created. The properties provided are a subset and the snapshot of the overall Virtual Machine properties captured at the time of the restore point creation. */\nexport interface RestorePointSourceMetadata {\n  /** Gets the hardware profile. */\n  hardwareProfile?: HardwareProfile;\n  /** Gets the storage profile. */\n  storageProfile?: RestorePointSourceVMStorageProfile;\n  /** Gets the OS profile. */\n  osProfile?: OSProfile;\n  /** Gets the diagnostics profile. */\n  diagnosticsProfile?: DiagnosticsProfile;\n  /** Gets the license type, which is for bring your own license scenario. */\n  licenseType?: string;\n  /** Gets the virtual machine unique id. */\n  vmId?: string;\n  /** Gets the security profile. */\n  securityProfile?: SecurityProfile;\n  /** Location of the VM from which the restore point was created. */\n  location?: string;\n}\n\n/** Describes the storage profile. */\nexport interface RestorePointSourceVMStorageProfile {\n  /** Gets the OS disk of the VM captured at the time of the restore point creation. */\n  osDisk?: RestorePointSourceVmosDisk;\n  /** Gets the data disks of the VM captured at the time of the restore point creation. */\n  dataDisks?: RestorePointSourceVMDataDisk[];\n}\n\n/** Describes an Operating System disk. */\nexport interface RestorePointSourceVmosDisk {\n  /** Gets the Operating System type. */\n  osType?: OperatingSystemType;\n  /** Gets the disk encryption settings. */\n  encryptionSettings?: DiskEncryptionSettings;\n  /** Gets the disk name. */\n  name?: string;\n  /** Gets the caching type. */\n  caching?: CachingTypes;\n  /** Gets the disk size in GB. */\n  diskSizeGB?: number;\n  /** Gets the managed disk details */\n  managedDisk?: ManagedDiskParameters;\n  /** Gets the disk restore point Id. */\n  diskRestorePoint?: ApiEntityReference;\n}\n\n/** Describes a data disk. */\nexport interface RestorePointSourceVMDataDisk {\n  /** Gets the logical unit number. */\n  lun?: number;\n  /** Gets the disk name. */\n  name?: string;\n  /** Gets the caching type. */\n  caching?: CachingTypes;\n  /** Gets the initial disk size in GB for blank data disks, and the new desired size for existing OS and Data disks. */\n  diskSizeGB?: number;\n  /** Gets the managed disk details */\n  managedDisk?: ManagedDiskParameters;\n  /** Gets the disk restore point Id. */\n  diskRestorePoint?: ApiEntityReference;\n}\n\n/** The instance view of a restore point. */\nexport interface RestorePointInstanceView {\n  /** The disk restore points information. */\n  diskRestorePoints?: DiskRestorePointInstanceView[];\n  /** The resource status information. */\n  statuses?: InstanceViewStatus[];\n}\n\n/** The instance view of a disk restore point. */\nexport interface DiskRestorePointInstanceView {\n  /** Disk restore point Id. */\n  id?: string;\n  /** The disk restore point replication status information. */\n  replicationStatus?: Record<string, unknown>;\n}\n\n/** The resource model definition for an Azure Resource Manager proxy resource. It will not have tags and a location */\nexport interface ProxyResource {\n  /**\n   * Resource Id\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly id?: string;\n  /**\n   * Resource name\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly name?: string;\n  /**\n   * Resource type\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly type?: string;\n}\n\n/** The List restore point collection operation response. */\nexport interface RestorePointCollectionListResult {\n  /** Gets the list of restore point collections. */\n  value?: RestorePointCollection[];\n  /** The uri to fetch the next page of RestorePointCollections. Call ListNext() with this to fetch the next page of RestorePointCollections */\n  nextLink?: string;\n}\n\nexport interface CapacityReservationGroupInstanceView {\n  /**\n   * List of instance view of the capacity reservations under the capacity reservation group.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly capacityReservations?: CapacityReservationInstanceViewWithName[];\n}\n\n/** The instance view of a capacity reservation that provides as snapshot of the runtime properties of the capacity reservation that is managed by the platform and can change outside of control plane operations. */\nexport interface CapacityReservationInstanceView {\n  /** Unutilized capacity of the capacity reservation. */\n  utilizationInfo?: CapacityReservationUtilization;\n  /** The resource status information. */\n  statuses?: InstanceViewStatus[];\n}\n\n/** Represents the capacity reservation utilization in terms of resources allocated. */\nexport interface CapacityReservationUtilization {\n  /**\n   * A list of all virtual machines resource ids allocated against the capacity reservation.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly virtualMachinesAllocated?: SubResourceReadOnly[];\n}\n\n/** The List capacity reservation group with resource group response. */\nexport interface CapacityReservationGroupListResult {\n  /** The list of capacity reservation groups */\n  value: CapacityReservationGroup[];\n  /** The URI to fetch the next page of capacity reservation groups. Call ListNext() with this URI to fetch the next page of capacity reservation groups. */\n  nextLink?: string;\n}\n\n/** The list capacity reservation operation response. */\nexport interface CapacityReservationListResult {\n  /** The list of capacity reservations */\n  value: CapacityReservation[];\n  /** The URI to fetch the next page of capacity reservations. Call ListNext() with this URI to fetch the next page of capacity reservations. */\n  nextLink?: string;\n}\n\n/** Parameters for Reimaging Virtual Machine. NOTE: Virtual Machine OS disk will always be reimaged */\nexport interface VirtualMachineReimageParameters {\n  /** Specifies whether to reimage temp disk. Default value: false. Note: This temp disk reimage parameter is only supported for VM/VMSS with Ephemeral OS disk. */\n  tempDisk?: boolean;\n}\n\n/** The SAS URIs of the console screenshot and serial log blobs. */\nexport interface RetrieveBootDiagnosticsDataResult {\n  /**\n   * The console screenshot blob URI\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly consoleScreenshotBlobUri?: string;\n  /**\n   * The serial console log blob URI.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly serialConsoleLogBlobUri?: string;\n}\n\n/** Describes the properties of an AssessPatches result. */\nexport interface VirtualMachineAssessPatchesResult {\n  /**\n   * The overall success or failure status of the operation. It remains \"InProgress\" until the operation completes. At that point it will become \"Unknown\", \"Failed\", \"Succeeded\", or \"CompletedWithWarnings.\"\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly status?: PatchOperationStatus;\n  /**\n   * The activity ID of the operation that produced this result. It is used to correlate across CRP and extension logs.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly assessmentActivityId?: string;\n  /**\n   * The overall reboot status of the VM. It will be true when partially installed patches require a reboot to complete installation but the reboot has not yet occurred.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly rebootPending?: boolean;\n  /**\n   * The number of critical or security patches that have been detected as available and not yet installed.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly criticalAndSecurityPatchCount?: number;\n  /**\n   * The number of all available patches excluding critical and security.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly otherPatchCount?: number;\n  /**\n   * The UTC timestamp when the operation began.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly startDateTime?: Date;\n  /**\n   * The list of patches that have been detected as available for installation.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly availablePatches?: VirtualMachineSoftwarePatchProperties[];\n  /**\n   * The errors that were encountered during execution of the operation. The details array contains the list of them.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly error?: ApiError;\n}\n\n/** Describes the properties of a Virtual Machine software patch. */\nexport interface VirtualMachineSoftwarePatchProperties {\n  /**\n   * A unique identifier for the patch.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly patchId?: string;\n  /**\n   * The friendly name of the patch.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly name?: string;\n  /**\n   * The version number of the patch. This property applies only to Linux patches.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly version?: string;\n  /**\n   * The KBID of the patch. Only applies to Windows patches.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly kbId?: string;\n  /**\n   * The classification(s) of the patch as provided by the patch publisher.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly classifications?: string[];\n  /**\n   * Describes the reboot requirements of the patch.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly rebootBehavior?: VMGuestPatchRebootBehavior;\n  /**\n   * The activity ID of the operation that produced this result. It is used to correlate across CRP and extension logs.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly activityId?: string;\n  /**\n   * The UTC timestamp when the repository published this patch.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly publishedDate?: Date;\n  /**\n   * The UTC timestamp of the last update to this patch record.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly lastModifiedDateTime?: Date;\n  /**\n   * Describes the availability of a given patch.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly assessmentState?: PatchAssessmentState;\n}\n\n/** Input for InstallPatches as directly received by the API */\nexport interface VirtualMachineInstallPatchesParameters {\n  /** Specifies the maximum amount of time that the operation will run. It must be an ISO 8601-compliant duration string such as PT4H (4 hours) */\n  maximumDuration?: string;\n  /** Defines when it is acceptable to reboot a VM during a software update operation. */\n  rebootSetting: VMGuestPatchRebootSetting;\n  /** Input for InstallPatches on a Windows VM, as directly received by the API */\n  windowsParameters?: WindowsParameters;\n  /** Input for InstallPatches on a Linux VM, as directly received by the API */\n  linuxParameters?: LinuxParameters;\n}\n\n/** Input for InstallPatches on a Windows VM, as directly received by the API */\nexport interface WindowsParameters {\n  /** The update classifications to select when installing patches for Windows. */\n  classificationsToInclude?: VMGuestPatchClassificationWindows[];\n  /** Kbs to include in the patch operation */\n  kbNumbersToInclude?: string[];\n  /** Kbs to exclude in the patch operation */\n  kbNumbersToExclude?: string[];\n  /** Filters out Kbs that don't have an InstallationRebootBehavior of 'NeverReboots' when this is set to true. */\n  excludeKbsRequiringReboot?: boolean;\n  /** This is used to install patches that were published on or before this given max published date. */\n  maxPatchPublishDate?: Date;\n}\n\n/** Input for InstallPatches on a Linux VM, as directly received by the API */\nexport interface LinuxParameters {\n  /** The update classifications to select when installing patches for Linux. */\n  classificationsToInclude?: VMGuestPatchClassificationLinux[];\n  /** packages to include in the patch operation. Format: packageName_packageVersion */\n  packageNameMasksToInclude?: string[];\n  /** packages to exclude in the patch operation. Format: packageName_packageVersion */\n  packageNameMasksToExclude?: string[];\n  /** This is used as a maintenance run identifier for Auto VM Guest Patching in Linux. */\n  maintenanceRunId?: string;\n}\n\n/** The result summary of an installation operation. */\nexport interface VirtualMachineInstallPatchesResult {\n  /**\n   * The overall success or failure status of the operation. It remains \"InProgress\" until the operation completes. At that point it will become \"Failed\", \"Succeeded\", \"Unknown\" or \"CompletedWithWarnings.\"\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly status?: PatchOperationStatus;\n  /**\n   * The activity ID of the operation that produced this result. It is used to correlate across CRP and extension logs.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly installationActivityId?: string;\n  /**\n   * The reboot state of the VM following completion of the operation.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly rebootStatus?: VMGuestPatchRebootStatus;\n  /**\n   * Whether the operation ran out of time before it completed all its intended actions.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly maintenanceWindowExceeded?: boolean;\n  /**\n   * The number of patches that were not installed due to the user blocking their installation.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly excludedPatchCount?: number;\n  /**\n   * The number of patches that were detected as available for install, but did not meet the operation's criteria.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly notSelectedPatchCount?: number;\n  /**\n   * The number of patches that were identified as meeting the installation criteria, but were not able to be installed. Typically this happens when maintenanceWindowExceeded == true.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly pendingPatchCount?: number;\n  /**\n   * The number of patches successfully installed.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly installedPatchCount?: number;\n  /**\n   * The number of patches that could not be installed due to some issue. See errors for details.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly failedPatchCount?: number;\n  /**\n   * The patches that were installed during the operation.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly patches?: PatchInstallationDetail[];\n  /**\n   * The UTC timestamp when the operation began.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly startDateTime?: Date;\n  /**\n   * The errors that were encountered during execution of the operation. The details array contains the list of them.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly error?: ApiError;\n}\n\n/** Information about a specific patch that was encountered during an installation action. */\nexport interface PatchInstallationDetail {\n  /**\n   * A unique identifier for the patch.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly patchId?: string;\n  /**\n   * The friendly name of the patch.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly name?: string;\n  /**\n   * The version string of the package. It may conform to Semantic Versioning. Only applies to Linux.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly version?: string;\n  /**\n   * The KBID of the patch. Only applies to Windows patches.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly kbId?: string;\n  /**\n   * The classification(s) of the patch as provided by the patch publisher.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly classifications?: string[];\n  /**\n   * The state of the patch after the installation operation completed.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly installationState?: PatchInstallationState;\n}\n\n/** Describes a virtual machine scale set virtual machine profile. */\nexport interface VirtualMachineScaleSetUpdateVMProfile {\n  /** The virtual machine scale set OS profile. */\n  osProfile?: VirtualMachineScaleSetUpdateOSProfile;\n  /** The virtual machine scale set storage profile. */\n  storageProfile?: VirtualMachineScaleSetUpdateStorageProfile;\n  /** The virtual machine scale set network profile. */\n  networkProfile?: VirtualMachineScaleSetUpdateNetworkProfile;\n  /** The virtual machine scale set Security profile */\n  securityProfile?: SecurityProfile;\n  /** The virtual machine scale set diagnostics profile. */\n  diagnosticsProfile?: DiagnosticsProfile;\n  /** The virtual machine scale set extension profile. */\n  extensionProfile?: VirtualMachineScaleSetExtensionProfile;\n  /** The license type, which is for bring your own license scenario. */\n  licenseType?: string;\n  /** Specifies the billing related details of a Azure Spot VMSS. <br><br>Minimum api-version: 2019-03-01. */\n  billingProfile?: BillingProfile;\n  /** Specifies Scheduled Event related configurations. */\n  scheduledEventsProfile?: ScheduledEventsProfile;\n  /** UserData for the VM, which must be base-64 encoded. Customer should not pass any secrets in here. <br><br>Minimum api-version: 2021-03-01 */\n  userData?: string;\n}\n\n/** Describes a virtual machine scale set OS profile. */\nexport interface VirtualMachineScaleSetUpdateOSProfile {\n  /** A base-64 encoded string of custom data. */\n  customData?: string;\n  /** The Windows Configuration of the OS profile. */\n  windowsConfiguration?: WindowsConfiguration;\n  /** The Linux Configuration of the OS profile. */\n  linuxConfiguration?: LinuxConfiguration;\n  /** The List of certificates for addition to the VM. */\n  secrets?: VaultSecretGroup[];\n}\n\n/** Describes a virtual machine scale set storage profile. */\nexport interface VirtualMachineScaleSetUpdateStorageProfile {\n  /** The image reference. */\n  imageReference?: ImageReference;\n  /** The OS disk. */\n  osDisk?: VirtualMachineScaleSetUpdateOSDisk;\n  /** The data disks. */\n  dataDisks?: VirtualMachineScaleSetDataDisk[];\n}\n\n/** Describes virtual machine scale set operating system disk Update Object. This should be used for Updating VMSS OS Disk. */\nexport interface VirtualMachineScaleSetUpdateOSDisk {\n  /** The caching type. */\n  caching?: CachingTypes;\n  /** Specifies whether writeAccelerator should be enabled or disabled on the disk. */\n  writeAcceleratorEnabled?: boolean;\n  /** Specifies the size of the operating system disk in gigabytes. This element can be used to overwrite the size of the disk in a virtual machine image. <br><br> This value cannot be larger than 1023 GB */\n  diskSizeGB?: number;\n  /** The Source User Image VirtualHardDisk. This VirtualHardDisk will be copied before using it to attach to the Virtual Machine. If SourceImage is provided, the destination VirtualHardDisk should not exist. */\n  image?: VirtualHardDisk;\n  /** The list of virtual hard disk container uris. */\n  vhdContainers?: string[];\n  /** The managed disk parameters. */\n  managedDisk?: VirtualMachineScaleSetManagedDiskParameters;\n}\n\n/** Describes a virtual machine scale set network profile. */\nexport interface VirtualMachineScaleSetUpdateNetworkProfile {\n  /** A reference to a load balancer probe used to determine the health of an instance in the virtual machine scale set. The reference will be in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/loadBalancers/{loadBalancerName}/probes/{probeName}'. */\n  healthProbe?: ApiEntityReference;\n  /** The list of network configurations. */\n  networkInterfaceConfigurations?: VirtualMachineScaleSetUpdateNetworkConfiguration[];\n  /** specifies the Microsoft.Network API version used when creating networking resources in the Network Interface Configurations for Virtual Machine Scale Set with orchestration mode 'Flexible' */\n  networkApiVersion?: NetworkApiVersion;\n}\n\n/** Describes a virtual machines scale set IP Configuration's PublicIPAddress configuration */\nexport interface VirtualMachineScaleSetUpdatePublicIPAddressConfiguration {\n  /** The publicIP address configuration name. */\n  name?: string;\n  /** The idle timeout of the public IP address. */\n  idleTimeoutInMinutes?: number;\n  /** The dns settings to be applied on the publicIP addresses . */\n  dnsSettings?: VirtualMachineScaleSetPublicIPAddressConfigurationDnsSettings;\n  /** The PublicIPPrefix from which to allocate publicIP addresses. */\n  publicIPPrefix?: SubResource;\n  /** Specify what happens to the public IP when the VM is deleted */\n  deleteOption?: DeleteOptions;\n}\n\n/** Specifies a list of virtual machine instance IDs from the VM scale set. */\nexport interface VirtualMachineScaleSetVMInstanceIDs {\n  /** The virtual machine scale set instance ids. Omitting the virtual machine scale set instance ids will result in the operation being performed on all virtual machines in the virtual machine scale set. */\n  instanceIds?: string[];\n}\n\n/** Specifies a list of virtual machine instance IDs from the VM scale set. */\nexport interface VirtualMachineScaleSetVMInstanceRequiredIDs {\n  /** The virtual machine scale set instance ids. */\n  instanceIds: string[];\n}\n\n/** The instance view of a virtual machine scale set. */\nexport interface VirtualMachineScaleSetInstanceView {\n  /**\n   * The instance view status summary for the virtual machine scale set.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly virtualMachine?: VirtualMachineScaleSetInstanceViewStatusesSummary;\n  /**\n   * The extensions information.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly extensions?: VirtualMachineScaleSetVMExtensionsSummary[];\n  /** The resource status information. */\n  statuses?: InstanceViewStatus[];\n  /**\n   * The orchestration services information.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly orchestrationServices?: OrchestrationServiceSummary[];\n}\n\n/** Instance view statuses summary for virtual machines of a virtual machine scale set. */\nexport interface VirtualMachineScaleSetInstanceViewStatusesSummary {\n  /**\n   * The extensions information.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly statusesSummary?: VirtualMachineStatusCodeCount[];\n}\n\n/** The status code and count of the virtual machine scale set instance view status summary. */\nexport interface VirtualMachineStatusCodeCount {\n  /**\n   * The instance view status code.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly code?: string;\n  /**\n   * The number of instances having a particular status code.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly count?: number;\n}\n\n/** Extensions summary for virtual machines of a virtual machine scale set. */\nexport interface VirtualMachineScaleSetVMExtensionsSummary {\n  /**\n   * The extension name.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly name?: string;\n  /**\n   * The extensions information.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly statusesSummary?: VirtualMachineStatusCodeCount[];\n}\n\n/** Summary for an orchestration service of a virtual machine scale set. */\nexport interface OrchestrationServiceSummary {\n  /**\n   * The name of the service.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly serviceName?: OrchestrationServiceNames;\n  /**\n   * The current state of the service.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly serviceState?: OrchestrationServiceState;\n}\n\n/** The List VM scale set extension operation response. */\nexport interface VirtualMachineScaleSetExtensionListResult {\n  /** The list of VM scale set extensions. */\n  value: VirtualMachineScaleSetExtension[];\n  /** The uri to fetch the next page of VM scale set extensions. Call ListNext() with this to fetch the next page of VM scale set extensions. */\n  nextLink?: string;\n}\n\n/** The List Virtual Machine operation response. */\nexport interface VirtualMachineScaleSetListWithLinkResult {\n  /** The list of virtual machine scale sets. */\n  value: VirtualMachineScaleSet[];\n  /** The uri to fetch the next page of Virtual Machine Scale Sets. Call ListNext() with this to fetch the next page of Virtual Machine Scale Sets. */\n  nextLink?: string;\n}\n\n/** The Virtual Machine Scale Set List Skus operation response. */\nexport interface VirtualMachineScaleSetListSkusResult {\n  /** The list of skus available for the virtual machine scale set. */\n  value: VirtualMachineScaleSetSku[];\n  /** The uri to fetch the next page of Virtual Machine Scale Set Skus. Call ListNext() with this to fetch the next page of VMSS Skus. */\n  nextLink?: string;\n}\n\n/** Describes an available virtual machine scale set sku. */\nexport interface VirtualMachineScaleSetSku {\n  /**\n   * The type of resource the sku applies to.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly resourceType?: string;\n  /**\n   * The Sku.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly sku?: Sku;\n  /**\n   * Specifies the number of virtual machines in the scale set.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly capacity?: VirtualMachineScaleSetSkuCapacity;\n}\n\n/** Describes scaling information of a sku. */\nexport interface VirtualMachineScaleSetSkuCapacity {\n  /**\n   * The minimum capacity.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly minimum?: number;\n  /**\n   * The maximum capacity that can be set.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly maximum?: number;\n  /**\n   * The default capacity.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly defaultCapacity?: number;\n  /**\n   * The scale type applicable to the sku.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly scaleType?: VirtualMachineScaleSetSkuScaleType;\n}\n\n/** List of Virtual Machine Scale Set OS Upgrade History operation response. */\nexport interface VirtualMachineScaleSetListOSUpgradeHistory {\n  /** The list of OS upgrades performed on the virtual machine scale set. */\n  value: UpgradeOperationHistoricalStatusInfo[];\n  /** The uri to fetch the next page of OS Upgrade History. Call ListNext() with this to fetch the next page of history of upgrades. */\n  nextLink?: string;\n}\n\n/** Virtual Machine Scale Set OS Upgrade History operation response. */\nexport interface UpgradeOperationHistoricalStatusInfo {\n  /**\n   * Information about the properties of the upgrade operation.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly properties?: UpgradeOperationHistoricalStatusInfoProperties;\n  /**\n   * Resource type\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly type?: string;\n  /**\n   * Resource location\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly location?: string;\n}\n\n/** Describes each OS upgrade on the Virtual Machine Scale Set. */\nexport interface UpgradeOperationHistoricalStatusInfoProperties {\n  /**\n   * Information about the overall status of the upgrade operation.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly runningStatus?: UpgradeOperationHistoryStatus;\n  /**\n   * Counts of the VMs in each state.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly progress?: RollingUpgradeProgressInfo;\n  /**\n   * Error Details for this upgrade if there are any.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly error?: ApiError;\n  /**\n   * Invoker of the Upgrade Operation\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly startedBy?: UpgradeOperationInvoker;\n  /**\n   * Image Reference details\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly targetImageReference?: ImageReference;\n  /**\n   * Information about OS rollback if performed\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly rollbackInfo?: RollbackStatusInfo;\n}\n\n/** Information about the current running state of the overall upgrade. */\nexport interface UpgradeOperationHistoryStatus {\n  /**\n   * Code indicating the current status of the upgrade.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly code?: UpgradeState;\n  /**\n   * Start time of the upgrade.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly startTime?: Date;\n  /**\n   * End time of the upgrade.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly endTime?: Date;\n}\n\n/** Information about the number of virtual machine instances in each upgrade state. */\nexport interface RollingUpgradeProgressInfo {\n  /**\n   * The number of instances that have been successfully upgraded.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly successfulInstanceCount?: number;\n  /**\n   * The number of instances that have failed to be upgraded successfully.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly failedInstanceCount?: number;\n  /**\n   * The number of instances that are currently being upgraded.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly inProgressInstanceCount?: number;\n  /**\n   * The number of instances that have not yet begun to be upgraded.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly pendingInstanceCount?: number;\n}\n\n/** Information about rollback on failed VM instances after a OS Upgrade operation. */\nexport interface RollbackStatusInfo {\n  /**\n   * The number of instances which have been successfully rolled back.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly successfullyRolledbackInstanceCount?: number;\n  /**\n   * The number of instances which failed to rollback.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly failedRolledbackInstanceCount?: number;\n  /**\n   * Error details if OS rollback failed.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly rollbackError?: ApiError;\n}\n\n/** Information about the current running state of the overall upgrade. */\nexport interface RollingUpgradeRunningStatus {\n  /**\n   * Code indicating the current status of the upgrade.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly code?: RollingUpgradeStatusCode;\n  /**\n   * Start time of the upgrade.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly startTime?: Date;\n  /**\n   * The last action performed on the rolling upgrade.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly lastAction?: RollingUpgradeActionType;\n  /**\n   * Last action time of the upgrade.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly lastActionTime?: Date;\n}\n\n/** Response after calling a manual recovery walk */\nexport interface RecoveryWalkResponse {\n  /**\n   * Whether the recovery walk was performed\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly walkPerformed?: boolean;\n  /**\n   * The next update domain that needs to be walked. Null means walk spanning all update domains has been completed\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly nextPlatformUpdateDomain?: number;\n}\n\nexport interface VMScaleSetConvertToSinglePlacementGroupInput {\n  /** Id of the placement group in which you want future virtual machine instances to be placed. To query placement group Id, please use Virtual Machine Scale Set VMs - Get API. If not provided, the platform will choose one with maximum number of virtual machine instances. */\n  activePlacementGroupId?: string;\n}\n\n/** The input for OrchestrationServiceState */\nexport interface OrchestrationServiceStateInput {\n  /** The name of the service. */\n  serviceName: OrchestrationServiceNames;\n  /** The action to be performed. */\n  action: OrchestrationServiceStateAction;\n}\n\n/** The List VMSS VM Extension operation response */\nexport interface VirtualMachineScaleSetVMExtensionsListResult {\n  /** The list of VMSS VM extensions */\n  value?: VirtualMachineScaleSetVMExtension[];\n}\n\n/** The instance view of a virtual machine scale set VM. */\nexport interface VirtualMachineScaleSetVMInstanceView {\n  /** The Update Domain count. */\n  platformUpdateDomain?: number;\n  /** The Fault Domain count. */\n  platformFaultDomain?: number;\n  /** The Remote desktop certificate thumbprint. */\n  rdpThumbPrint?: string;\n  /** The VM Agent running on the virtual machine. */\n  vmAgent?: VirtualMachineAgentInstanceView;\n  /** The Maintenance Operation status on the virtual machine. */\n  maintenanceRedeployStatus?: MaintenanceRedeployStatus;\n  /** The disks information. */\n  disks?: DiskInstanceView[];\n  /** The extensions information. */\n  extensions?: VirtualMachineExtensionInstanceView[];\n  /**\n   * The health status for the VM.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly vmHealth?: VirtualMachineHealthStatus;\n  /** Boot Diagnostics is a debugging feature which allows you to view Console Output and Screenshot to diagnose VM status. <br><br> You can easily view the output of your console log. <br><br> Azure also enables you to see a screenshot of the VM from the hypervisor. */\n  bootDiagnostics?: BootDiagnosticsInstanceView;\n  /** The resource status information. */\n  statuses?: InstanceViewStatus[];\n  /**\n   * Resource id of the dedicated host, on which the virtual machine is allocated through automatic placement, when the virtual machine is associated with a dedicated host group that has automatic placement enabled. <br><br>Minimum api-version: 2020-06-01.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly assignedHost?: string;\n  /** The placement group in which the VM is running. If the VM is deallocated it will not have a placementGroupId. */\n  placementGroupId?: string;\n}\n\n/** Describes a virtual machine scale set VM network profile. */\nexport interface VirtualMachineScaleSetVMNetworkProfileConfiguration {\n  /** The list of network configurations. */\n  networkInterfaceConfigurations?: VirtualMachineScaleSetNetworkConfiguration[];\n}\n\n/** The protection policy of a virtual machine scale set VM. */\nexport interface VirtualMachineScaleSetVMProtectionPolicy {\n  /** Indicates that the virtual machine scale set VM shouldn't be considered for deletion during a scale-in operation. */\n  protectFromScaleIn?: boolean;\n  /** Indicates that model updates or actions (including scale-in) initiated on the virtual machine scale set should not be applied to the virtual machine scale set VM. */\n  protectFromScaleSetActions?: boolean;\n}\n\n/** The List Virtual Machine Scale Set VMs operation response. */\nexport interface VirtualMachineScaleSetVMListResult {\n  /** The list of virtual machine scale sets VMs. */\n  value: VirtualMachineScaleSetVM[];\n  /** The uri to fetch the next page of Virtual Machine Scale Set VMs. Call ListNext() with this to fetch the next page of VMSS VMs */\n  nextLink?: string;\n}\n\n/** Api input base class for LogAnalytics Api. */\nexport interface LogAnalyticsInputBase {\n  /** SAS Uri of the logging blob container to which LogAnalytics Api writes output logs to. */\n  blobContainerSasUri: string;\n  /** From time of the query */\n  fromTime: Date;\n  /** To time of the query */\n  toTime: Date;\n  /** Group query result by Throttle Policy applied. */\n  groupByThrottlePolicy?: boolean;\n  /** Group query result by Operation Name. */\n  groupByOperationName?: boolean;\n  /** Group query result by Resource Name. */\n  groupByResourceName?: boolean;\n  /** Group query result by Client Application ID. */\n  groupByClientApplicationId?: boolean;\n  /** Group query result by User Agent. */\n  groupByUserAgent?: boolean;\n}\n\n/** LogAnalytics operation status response */\nexport interface LogAnalyticsOperationResult {\n  /**\n   * LogAnalyticsOutput\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly properties?: LogAnalyticsOutput;\n}\n\n/** LogAnalytics output properties */\nexport interface LogAnalyticsOutput {\n  /**\n   * Output file Uri path to blob container.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly output?: string;\n}\n\n/** The List Virtual Machine operation response. */\nexport interface RunCommandListResult {\n  /** The list of virtual machine run commands. */\n  value: RunCommandDocumentBase[];\n  /** The uri to fetch the next page of run commands. Call ListNext() with this to fetch the next page of run commands. */\n  nextLink?: string;\n}\n\n/** Describes the properties of a Run Command metadata. */\nexport interface RunCommandDocumentBase {\n  /** The VM run command schema. */\n  schema: string;\n  /** The VM run command id. */\n  id: string;\n  /** The Operating System type. */\n  osType: OperatingSystemTypes;\n  /** The VM run command label. */\n  label: string;\n  /** The VM run command description. */\n  description: string;\n}\n\n/** Describes the properties of a run command parameter. */\nexport interface RunCommandParameterDefinition {\n  /** The run command parameter name. */\n  name: string;\n  /** The run command parameter type. */\n  type: string;\n  /** The run command parameter default value. */\n  defaultValue?: string;\n  /** The run command parameter required. */\n  required?: boolean;\n}\n\n/** Capture Virtual Machine parameters. */\nexport interface RunCommandInput {\n  /** The run command id. */\n  commandId: string;\n  /** Optional. The script to be executed.  When this value is given, the given script will override the default script of the command. */\n  script?: string[];\n  /** The run command parameters. */\n  parameters?: RunCommandInputParameter[];\n}\n\n/** Describes the properties of a run command parameter. */\nexport interface RunCommandInputParameter {\n  /** The run command parameter name. */\n  name: string;\n  /** The run command parameter value. */\n  value: string;\n}\n\nexport interface RunCommandResult {\n  /** Run command operation response. */\n  value?: InstanceViewStatus[];\n}\n\n/** Describes the script sources for run command. */\nexport interface VirtualMachineRunCommandScriptSource {\n  /** Specifies the script content to be executed on the VM. */\n  script?: string;\n  /** Specifies the script download location. */\n  scriptUri?: string;\n  /** Specifies a commandId of predefined built-in script. */\n  commandId?: string;\n}\n\n/** The instance view of a virtual machine run command. */\nexport interface VirtualMachineRunCommandInstanceView {\n  /** Script execution status. */\n  executionState?: ExecutionState;\n  /** Communicate script configuration errors or execution messages. */\n  executionMessage?: string;\n  /** Exit code returned from script execution. */\n  exitCode?: number;\n  /** Script output stream. */\n  output?: string;\n  /** Script error stream. */\n  error?: string;\n  /** Script start time. */\n  startTime?: Date;\n  /** Script end time. */\n  endTime?: Date;\n  /** The resource status information. */\n  statuses?: InstanceViewStatus[];\n}\n\n/** The List run command operation response */\nexport interface VirtualMachineRunCommandsListResult {\n  /** The list of run commands */\n  value: VirtualMachineRunCommand[];\n  /** The uri to fetch the next page of run commands. */\n  nextLink?: string;\n}\n\n/** The List Resource Skus operation response. */\nexport interface ResourceSkusResult {\n  /** The list of skus available for the subscription. */\n  value: ResourceSku[];\n  /** The URI to fetch the next page of Resource Skus. Call ListNext() with this URI to fetch the next page of Resource Skus */\n  nextLink?: string;\n}\n\n/** Describes an available Compute SKU. */\nexport interface ResourceSku {\n  /**\n   * The type of resource the SKU applies to.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly resourceType?: string;\n  /**\n   * The name of SKU.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly name?: string;\n  /**\n   * Specifies the tier of virtual machines in a scale set.<br /><br /> Possible Values:<br /><br /> **Standard**<br /><br /> **Basic**\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly tier?: string;\n  /**\n   * The Size of the SKU.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly size?: string;\n  /**\n   * The Family of this particular SKU.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly family?: string;\n  /**\n   * The Kind of resources that are supported in this SKU.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly kind?: string;\n  /**\n   * Specifies the number of virtual machines in the scale set.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly capacity?: ResourceSkuCapacity;\n  /**\n   * The set of locations that the SKU is available.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly locations?: string[];\n  /**\n   * A list of locations and availability zones in those locations where the SKU is available.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly locationInfo?: ResourceSkuLocationInfo[];\n  /**\n   * The api versions that support this SKU.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly apiVersions?: string[];\n  /**\n   * Metadata for retrieving price info.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly costs?: ResourceSkuCosts[];\n  /**\n   * A name value pair to describe the capability.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly capabilities?: ResourceSkuCapabilities[];\n  /**\n   * The restrictions because of which SKU cannot be used. This is empty if there are no restrictions.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly restrictions?: ResourceSkuRestrictions[];\n}\n\n/** Describes scaling information of a SKU. */\nexport interface ResourceSkuCapacity {\n  /**\n   * The minimum capacity.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly minimum?: number;\n  /**\n   * The maximum capacity that can be set.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly maximum?: number;\n  /**\n   * The default capacity.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly default?: number;\n  /**\n   * The scale type applicable to the sku.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly scaleType?: ResourceSkuCapacityScaleType;\n}\n\n/** Describes an available Compute SKU Location Information. */\nexport interface ResourceSkuLocationInfo {\n  /**\n   * Location of the SKU\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly location?: string;\n  /**\n   * List of availability zones where the SKU is supported.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly zones?: string[];\n  /**\n   * Details of capabilities available to a SKU in specific zones.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly zoneDetails?: ResourceSkuZoneDetails[];\n  /**\n   * The names of extended locations.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly extendedLocations?: string[];\n  /**\n   * The type of the extended location.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly type?: ExtendedLocationType;\n}\n\n/** Describes The zonal capabilities of a SKU. */\nexport interface ResourceSkuZoneDetails {\n  /**\n   * The set of zones that the SKU is available in with the specified capabilities.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly name?: string[];\n  /**\n   * A list of capabilities that are available for the SKU in the specified list of zones.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly capabilities?: ResourceSkuCapabilities[];\n}\n\n/** Describes The SKU capabilities object. */\nexport interface ResourceSkuCapabilities {\n  /**\n   * An invariant to describe the feature.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly name?: string;\n  /**\n   * An invariant if the feature is measured by quantity.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly value?: string;\n}\n\n/** Describes metadata for retrieving price info. */\nexport interface ResourceSkuCosts {\n  /**\n   * Used for querying price from commerce.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly meterID?: string;\n  /**\n   * The multiplier is needed to extend the base metered cost.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly quantity?: number;\n  /**\n   * An invariant to show the extended unit.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly extendedUnit?: string;\n}\n\n/** Describes scaling information of a SKU. */\nexport interface ResourceSkuRestrictions {\n  /**\n   * The type of restrictions.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly type?: ResourceSkuRestrictionsType;\n  /**\n   * The value of restrictions. If the restriction type is set to location. This would be different locations where the SKU is restricted.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly values?: string[];\n  /**\n   * The information about the restriction where the SKU cannot be used.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly restrictionInfo?: ResourceSkuRestrictionInfo;\n  /**\n   * The reason for restriction.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly reasonCode?: ResourceSkuRestrictionsReasonCode;\n}\n\n/** Describes an available Compute SKU Restriction Information. */\nexport interface ResourceSkuRestrictionInfo {\n  /**\n   * Locations where the SKU is restricted\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly locations?: string[];\n  /**\n   * List of availability zones where the SKU is restricted.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly zones?: string[];\n}\n\n/** The disks sku name. Can be Standard_LRS, Premium_LRS, StandardSSD_LRS, UltraSSD_LRS, Premium_ZRS, or StandardSSD_ZRS. */\nexport interface DiskSku {\n  /** The sku name. */\n  name?: DiskStorageAccountTypes;\n  /**\n   * The sku tier.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly tier?: string;\n}\n\n/** Used for establishing the purchase context of any 3rd Party artifact through MarketPlace. */\nexport interface PurchasePlanAutoGenerated {\n  /** The plan ID. */\n  name: string;\n  /** The publisher ID. */\n  publisher: string;\n  /** Specifies the product of the image from the marketplace. This is the same value as Offer under the imageReference element. */\n  product: string;\n  /** The Offer Promotion Code. */\n  promotionCode?: string;\n}\n\n/** List of supported capabilities (like accelerated networking) persisted on the disk resource for VM use. */\nexport interface SupportedCapabilities {\n  /** True if the image from which the OS disk is created supports accelerated networking. */\n  acceleratedNetwork?: boolean;\n}\n\n/** Data used when creating a disk. */\nexport interface CreationData {\n  /** This enumerates the possible sources of a disk's creation. */\n  createOption: DiskCreateOption;\n  /** Required if createOption is Import. The Azure Resource Manager identifier of the storage account containing the blob to import as a disk. */\n  storageAccountId?: string;\n  /** Disk source information. */\n  imageReference?: ImageDiskReference;\n  /** Required if creating from a Gallery Image. The id of the ImageDiskReference will be the ARM id of the shared galley image version from which to create a disk. */\n  galleryImageReference?: ImageDiskReference;\n  /** If createOption is Import, this is the URI of a blob to be imported into a managed disk. */\n  sourceUri?: string;\n  /** If createOption is Copy, this is the ARM id of the source snapshot or disk. */\n  sourceResourceId?: string;\n  /**\n   * If this field is set, this is the unique id identifying the source of this resource.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly sourceUniqueId?: string;\n  /** If createOption is Upload, this is the size of the contents of the upload including the VHD footer. This value should be between 20972032 (20 MiB + 512 bytes for the VHD footer) and 35183298347520 bytes (32 TiB + 512 bytes for the VHD footer). */\n  uploadSizeBytes?: number;\n  /** Logical sector size in bytes for Ultra disks. Supported values are 512 ad 4096. 4096 is the default. */\n  logicalSectorSize?: number;\n  /** If createOption is ImportSecure, this is the URI of a blob to be imported into VM guest state. */\n  securityDataUri?: string;\n}\n\n/** The source image used for creating the disk. */\nexport interface ImageDiskReference {\n  /** A relative uri containing either a Platform Image Repository or user image reference. */\n  id: string;\n  /** If the disk is created from an image's data disk, this is an index that indicates which of the data disks in the image to use. For OS disks, this field is null. */\n  lun?: number;\n}\n\n/** Encryption settings for disk or snapshot */\nexport interface EncryptionSettingsCollection {\n  /** Set this flag to true and provide DiskEncryptionKey and optional KeyEncryptionKey to enable encryption. Set this flag to false and remove DiskEncryptionKey and KeyEncryptionKey to disable encryption. If EncryptionSettings is null in the request object, the existing settings remain unchanged. */\n  enabled: boolean;\n  /** A collection of encryption settings, one for each disk volume. */\n  encryptionSettings?: EncryptionSettingsElement[];\n  /** Describes what type of encryption is used for the disks. Once this field is set, it cannot be overwritten. '1.0' corresponds to Azure Disk Encryption with AAD app.'1.1' corresponds to Azure Disk Encryption. */\n  encryptionSettingsVersion?: string;\n}\n\n/** Encryption settings for one disk volume. */\nexport interface EncryptionSettingsElement {\n  /** Key Vault Secret Url and vault id of the disk encryption key */\n  diskEncryptionKey?: KeyVaultAndSecretReference;\n  /** Key Vault Key Url and vault id of the key encryption key. KeyEncryptionKey is optional and when provided is used to unwrap the disk encryption key. */\n  keyEncryptionKey?: KeyVaultAndKeyReference;\n}\n\n/** Key Vault Secret Url and vault id of the encryption key */\nexport interface KeyVaultAndSecretReference {\n  /** Resource id of the KeyVault containing the key or secret */\n  sourceVault: SourceVault;\n  /** Url pointing to a key or secret in KeyVault */\n  secretUrl: string;\n}\n\n/** The vault id is an Azure Resource Manager Resource id in the form /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.KeyVault/vaults/{vaultName} */\nexport interface SourceVault {\n  /** Resource Id */\n  id?: string;\n}\n\n/** Key Vault Key Url and vault id of KeK, KeK is optional and when provided is used to unwrap the encryptionKey */\nexport interface KeyVaultAndKeyReference {\n  /** Resource id of the KeyVault containing the key or secret */\n  sourceVault: SourceVault;\n  /** Url pointing to a key or secret in KeyVault */\n  keyUrl: string;\n}\n\n/** Encryption at rest settings for disk or snapshot */\nexport interface Encryption {\n  /** ResourceId of the disk encryption set to use for enabling encryption at rest. */\n  diskEncryptionSetId?: string;\n  /** The type of key used to encrypt the data of the disk. */\n  type?: EncryptionType;\n}\n\nexport interface ShareInfoElement {\n  /**\n   * A relative URI containing the ID of the VM that has the disk attached.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly vmUri?: string;\n}\n\n/** Properties of the disk for which update is pending. */\nexport interface PropertyUpdatesInProgress {\n  /** The target performance tier of the disk if a tier change operation is in progress. */\n  targetTier?: string;\n}\n\n/** Contains the security related information for the resource. */\nexport interface DiskSecurityProfile {\n  /** Specifies the SecurityType of the VM. Applicable for OS disks only. */\n  securityType?: DiskSecurityTypes;\n  /** ResourceId of the disk encryption set associated to Confidential VM supported disk encrypted with customer managed key */\n  secureVMDiskEncryptionSetId?: string;\n}\n\n/** Disk update resource. */\nexport interface DiskUpdate {\n  /** Resource tags */\n  tags?: { [propertyName: string]: string };\n  /** The disks sku name. Can be Standard_LRS, Premium_LRS, StandardSSD_LRS, UltraSSD_LRS, Premium_ZRS, or StandardSSD_ZRS. */\n  sku?: DiskSku;\n  /** the Operating System type. */\n  osType?: OperatingSystemTypes;\n  /** If creationData.createOption is Empty, this field is mandatory and it indicates the size of the disk to create. If this field is present for updates or creation with other options, it indicates a resize. Resizes are only allowed if the disk is not attached to a running VM, and can only increase the disk's size. */\n  diskSizeGB?: number;\n  /** Encryption settings collection used be Azure Disk Encryption, can contain multiple encryption settings per disk or snapshot. */\n  encryptionSettingsCollection?: EncryptionSettingsCollection;\n  /** The number of IOPS allowed for this disk; only settable for UltraSSD disks. One operation can transfer between 4k and 256k bytes. */\n  diskIopsReadWrite?: number;\n  /** The bandwidth allowed for this disk; only settable for UltraSSD disks. MBps means millions of bytes per second - MB here uses the ISO notation, of powers of 10. */\n  diskMBpsReadWrite?: number;\n  /** The total number of IOPS that will be allowed across all VMs mounting the shared disk as ReadOnly. One operation can transfer between 4k and 256k bytes. */\n  diskIopsReadOnly?: number;\n  /** The total throughput (MBps) that will be allowed across all VMs mounting the shared disk as ReadOnly. MBps means millions of bytes per second - MB here uses the ISO notation, of powers of 10. */\n  diskMBpsReadOnly?: number;\n  /** The maximum number of VMs that can attach to the disk at the same time. Value greater than one indicates a disk that can be mounted on multiple VMs at the same time. */\n  maxShares?: number;\n  /** Encryption property can be used to encrypt data at rest with customer managed keys or platform managed keys. */\n  encryption?: Encryption;\n  /** Policy for accessing the disk via network. */\n  networkAccessPolicy?: NetworkAccessPolicy;\n  /** ARM id of the DiskAccess resource for using private endpoints on disks. */\n  diskAccessId?: string;\n  /** Performance tier of the disk (e.g, P4, S10) as described here: https://azure.microsoft.com/en-us/pricing/details/managed-disks/. Does not apply to Ultra disks. */\n  tier?: string;\n  /** Set to true to enable bursting beyond the provisioned performance target of the disk. Bursting is disabled by default. Does not apply to Ultra disks. */\n  burstingEnabled?: boolean;\n  /** Purchase plan information to be added on the OS disk */\n  purchasePlan?: PurchasePlanAutoGenerated;\n  /** List of supported capabilities (like accelerated networking) to be added on the OS disk. */\n  supportedCapabilities?: SupportedCapabilities;\n  /**\n   * Properties of the disk for which update is pending.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly propertyUpdatesInProgress?: PropertyUpdatesInProgress;\n  /** Indicates the OS on a disk supports hibernation. */\n  supportsHibernation?: boolean;\n  /** Policy for controlling export on the disk. */\n  publicNetworkAccess?: PublicNetworkAccess;\n}\n\n/** The List Disks operation response. */\nexport interface DiskList {\n  /** A list of disks. */\n  value: Disk[];\n  /** The uri to fetch the next page of disks. Call ListNext() with this to fetch the next page of disks. */\n  nextLink?: string;\n}\n\n/** Data used for requesting a SAS. */\nexport interface GrantAccessData {\n  access: AccessLevel;\n  /** Time duration in seconds until the SAS access expires. */\n  durationInSeconds: number;\n  /** Set this flag to true to get additional SAS for VM guest state */\n  getSecureVMGuestStateSAS?: boolean;\n}\n\n/** A disk access SAS uri. */\nexport interface AccessUri {\n  /**\n   * A SAS uri for accessing a disk.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly accessSAS?: string;\n  /**\n   * A SAS uri for accessing a VM guest state.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly securityDataAccessSAS?: string;\n}\n\n/** The snapshots sku name. Can be Standard_LRS, Premium_LRS, or Standard_ZRS. This is an optional parameter for incremental snapshot and the default behavior is the SKU will be set to the same sku as the previous snapshot */\nexport interface SnapshotSku {\n  /** The sku name. */\n  name?: SnapshotStorageAccountTypes;\n  /**\n   * The sku tier.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly tier?: string;\n}\n\n/** Snapshot update resource. */\nexport interface SnapshotUpdate {\n  /** Resource tags */\n  tags?: { [propertyName: string]: string };\n  /** The snapshots sku name. Can be Standard_LRS, Premium_LRS, or Standard_ZRS. This is an optional parameter for incremental snapshot and the default behavior is the SKU will be set to the same sku as the previous snapshot */\n  sku?: SnapshotSku;\n  /** the Operating System type. */\n  osType?: OperatingSystemTypes;\n  /** If creationData.createOption is Empty, this field is mandatory and it indicates the size of the disk to create. If this field is present for updates or creation with other options, it indicates a resize. Resizes are only allowed if the disk is not attached to a running VM, and can only increase the disk's size. */\n  diskSizeGB?: number;\n  /** Encryption settings collection used be Azure Disk Encryption, can contain multiple encryption settings per disk or snapshot. */\n  encryptionSettingsCollection?: EncryptionSettingsCollection;\n  /** Encryption property can be used to encrypt data at rest with customer managed keys or platform managed keys. */\n  encryption?: Encryption;\n  /** Policy for accessing the disk via network. */\n  networkAccessPolicy?: NetworkAccessPolicy;\n  /** ARM id of the DiskAccess resource for using private endpoints on disks. */\n  diskAccessId?: string;\n  /** Indicates the OS on a snapshot supports hibernation. */\n  supportsHibernation?: boolean;\n  /** Policy for controlling export on the disk. */\n  publicNetworkAccess?: PublicNetworkAccess;\n  /** List of supported capabilities (like accelerated networking) for the image from which the OS disk was created. */\n  supportedCapabilities?: SupportedCapabilities;\n}\n\n/** The List Snapshots operation response. */\nexport interface SnapshotList {\n  /** A list of snapshots. */\n  value: Snapshot[];\n  /** The uri to fetch the next page of snapshots. Call ListNext() with this to fetch the next page of snapshots. */\n  nextLink?: string;\n}\n\n/** The managed identity for the disk encryption set. It should be given permission on the key vault before it can be used to encrypt disks. */\nexport interface EncryptionSetIdentity {\n  /** The type of Managed Identity used by the DiskEncryptionSet. Only SystemAssigned is supported for new creations. Disk Encryption Sets can be updated with Identity type None during migration of subscription to a new Azure Active Directory tenant; it will cause the encrypted resources to lose access to the keys. */\n  type?: DiskEncryptionSetIdentityType;\n  /**\n   * The object id of the Managed Identity Resource. This will be sent to the RP from ARM via the x-ms-identity-principal-id header in the PUT request if the resource has a systemAssigned(implicit) identity\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly principalId?: string;\n  /**\n   * The tenant id of the Managed Identity Resource. This will be sent to the RP from ARM via the x-ms-client-tenant-id header in the PUT request if the resource has a systemAssigned(implicit) identity\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly tenantId?: string;\n}\n\n/** Key Vault Key Url to be used for server side encryption of Managed Disks and Snapshots */\nexport interface KeyForDiskEncryptionSet {\n  /** Resource id of the KeyVault containing the key or secret. This property is optional and cannot be used if the KeyVault subscription is not the same as the Disk Encryption Set subscription. */\n  sourceVault?: SourceVault;\n  /** Fully versioned Key Url pointing to a key in KeyVault. Version segment of the Url is required regardless of rotationToLatestKeyVersionEnabled value. */\n  keyUrl: string;\n}\n\n/** disk encryption set update resource. */\nexport interface DiskEncryptionSetUpdate {\n  /** Resource tags */\n  tags?: { [propertyName: string]: string };\n  /** The managed identity for the disk encryption set. It should be given permission on the key vault before it can be used to encrypt disks. */\n  identity?: EncryptionSetIdentity;\n  /** The type of key used to encrypt the data of the disk. */\n  encryptionType?: DiskEncryptionSetType;\n  /** Key Vault Key Url to be used for server side encryption of Managed Disks and Snapshots */\n  activeKey?: KeyForDiskEncryptionSet;\n  /** Set this flag to true to enable auto-updating of this disk encryption set to the latest key version. */\n  rotationToLatestKeyVersionEnabled?: boolean;\n}\n\n/** The List disk encryption set operation response. */\nexport interface DiskEncryptionSetList {\n  /** A list of disk encryption sets. */\n  value: DiskEncryptionSet[];\n  /** The uri to fetch the next page of disk encryption sets. Call ListNext() with this to fetch the next page of disk encryption sets. */\n  nextLink?: string;\n}\n\n/** The List resources which are encrypted with the disk encryption set. */\nexport interface ResourceUriList {\n  /** A list of IDs or Owner IDs of resources which are encrypted with the disk encryption set. */\n  value: string[];\n  /** The uri to fetch the next page of encrypted resources. Call ListNext() with this to fetch the next page of encrypted resources. */\n  nextLink?: string;\n}\n\n/** The Private Endpoint Connection resource. */\nexport interface PrivateEndpointConnection {\n  /**\n   * private endpoint connection Id\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly id?: string;\n  /**\n   * private endpoint connection name\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly name?: string;\n  /**\n   * private endpoint connection type\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly type?: string;\n  /**\n   * The resource of private end point.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly privateEndpoint?: PrivateEndpoint;\n  /** A collection of information about the state of the connection between DiskAccess and Virtual Network. */\n  privateLinkServiceConnectionState?: PrivateLinkServiceConnectionState;\n  /**\n   * The provisioning state of the private endpoint connection resource.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly provisioningState?: PrivateEndpointConnectionProvisioningState;\n}\n\n/** The Private Endpoint resource. */\nexport interface PrivateEndpoint {\n  /**\n   * The ARM identifier for Private Endpoint\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly id?: string;\n}\n\n/** A collection of information about the state of the connection between service consumer and provider. */\nexport interface PrivateLinkServiceConnectionState {\n  /** Indicates whether the connection has been Approved/Rejected/Removed by the owner of the service. */\n  status?: PrivateEndpointServiceConnectionStatus;\n  /** The reason for approval/rejection of the connection. */\n  description?: string;\n  /** A message indicating if changes on the service provider require any updates on the consumer. */\n  actionsRequired?: string;\n}\n\n/** Used for updating a disk access resource. */\nexport interface DiskAccessUpdate {\n  /** Resource tags */\n  tags?: { [propertyName: string]: string };\n}\n\n/** The List disk access operation response. */\nexport interface DiskAccessList {\n  /** A list of disk access resources. */\n  value: DiskAccess[];\n  /** The uri to fetch the next page of disk access resources. Call ListNext() with this to fetch the next page of disk access resources. */\n  nextLink?: string;\n}\n\n/** A list of private link resources */\nexport interface PrivateLinkResourceListResult {\n  /** Array of private link resources */\n  value?: PrivateLinkResource[];\n}\n\n/** A private link resource */\nexport interface PrivateLinkResource {\n  /**\n   * private link resource Id\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly id?: string;\n  /**\n   * private link resource name\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly name?: string;\n  /**\n   * private link resource type\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly type?: string;\n  /**\n   * The private link resource group id.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly groupId?: string;\n  /**\n   * The private link resource required member names.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly requiredMembers?: string[];\n  /** The private link resource DNS zone name. */\n  requiredZoneNames?: string[];\n}\n\n/** A list of private link resources */\nexport interface PrivateEndpointConnectionListResult {\n  /** Array of private endpoint connections */\n  value?: PrivateEndpointConnection[];\n  /** The uri to fetch the next page of snapshots. Call ListNext() with this to fetch the next page of snapshots. */\n  nextLink?: string;\n}\n\n/** The ProxyOnly Resource model definition. */\nexport interface ProxyOnlyResource {\n  /**\n   * Resource Id\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly id?: string;\n  /**\n   * Resource name\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly name?: string;\n  /**\n   * Resource type\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly type?: string;\n}\n\n/** The List Disk Restore Points operation response. */\nexport interface DiskRestorePointList {\n  /** A list of disk restore points. */\n  value: DiskRestorePoint[];\n  /** The uri to fetch the next page of disk restore points. Call ListNext() with this to fetch the next page of disk restore points. */\n  nextLink?: string;\n}\n\n/** Describes the gallery unique name. */\nexport interface GalleryIdentifier {\n  /**\n   * The unique name of the Shared Image Gallery. This name is generated automatically by Azure.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly uniqueName?: string;\n}\n\n/** Profile for gallery sharing to subscription or tenant */\nexport interface SharingProfile {\n  /** This property allows you to specify the permission of sharing gallery. <br><br> Possible values are: <br><br> **Private** <br><br> **Groups** */\n  permissions?: GallerySharingPermissionTypes;\n  /**\n   * A list of sharing profile groups.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly groups?: SharingProfileGroup[];\n  /** Information of community gallery if current gallery is shared to community. */\n  communityGalleryInfo?: any;\n}\n\n/** Group of the gallery sharing profile */\nexport interface SharingProfileGroup {\n  /** This property allows you to specify the type of sharing group. <br><br> Possible values are: <br><br> **Subscriptions** <br><br> **AADTenants** <br><br> **Community** */\n  type?: SharingProfileGroupTypes;\n  /** A list of subscription/tenant ids the gallery is aimed to be shared to. */\n  ids?: string[];\n}\n\n/** Contains information about the soft deletion policy of the gallery. */\nexport interface SoftDeletePolicy {\n  /** Enables soft-deletion for resources in this gallery, allowing them to be recovered within retention time. */\n  isSoftDeleteEnabled?: boolean;\n}\n\n/** Sharing status of current gallery. */\nexport interface SharingStatus {\n  /**\n   * Aggregated sharing state of current gallery.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly aggregatedState?: SharingState;\n  /** Summary of all regional sharing status. */\n  summary?: RegionalSharingStatus[];\n}\n\n/** Gallery regional sharing status */\nexport interface RegionalSharingStatus {\n  /** Region name */\n  region?: string;\n  /**\n   * Gallery sharing state in current region\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly state?: SharingState;\n  /** Details of gallery regional sharing failure. */\n  details?: string;\n}\n\n/** The Update Resource model definition. */\nexport interface UpdateResourceDefinition {\n  /**\n   * Resource Id\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly id?: string;\n  /**\n   * Resource name\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly name?: string;\n  /**\n   * Resource type\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly type?: string;\n  /** Resource tags */\n  tags?: { [propertyName: string]: string };\n}\n\n/** This is the gallery image definition identifier. */\nexport interface GalleryImageIdentifier {\n  /** The name of the gallery image definition publisher. */\n  publisher: string;\n  /** The name of the gallery image definition offer. */\n  offer: string;\n  /** The name of the gallery image definition SKU. */\n  sku: string;\n}\n\n/** The properties describe the recommended machine configuration for this Image Definition. These properties are updatable. */\nexport interface RecommendedMachineConfiguration {\n  /** Describes the resource range. */\n  vCPUs?: ResourceRange;\n  /** Describes the resource range. */\n  memory?: ResourceRange;\n}\n\n/** Describes the resource range. */\nexport interface ResourceRange {\n  /** The minimum number of the resource. */\n  min?: number;\n  /** The maximum number of the resource. */\n  max?: number;\n}\n\n/** Describes the disallowed disk types. */\nexport interface Disallowed {\n  /** A list of disk types. */\n  diskTypes?: string[];\n}\n\n/** Describes the gallery image definition purchase plan. This is used by marketplace images. */\nexport interface ImagePurchasePlan {\n  /** The plan ID. */\n  name?: string;\n  /** The publisher ID. */\n  publisher?: string;\n  /** The product ID. */\n  product?: string;\n}\n\n/** A feature for gallery image. */\nexport interface GalleryImageFeature {\n  /** The name of the gallery image feature. */\n  name?: string;\n  /** The value of the gallery image feature. */\n  value?: string;\n}\n\n/** Describes the basic gallery artifact publishing profile. */\nexport interface GalleryArtifactPublishingProfileBase {\n  /** The target regions where the Image Version is going to be replicated to. This property is updatable. */\n  targetRegions?: TargetRegion[];\n  /** The number of replicas of the Image Version to be created per region. This property would take effect for a region when regionalReplicaCount is not specified. This property is updatable. */\n  replicaCount?: number;\n  /** If set to true, Virtual Machines deployed from the latest version of the Image Definition won't use this Image Version. */\n  excludeFromLatest?: boolean;\n  /**\n   * The timestamp for when the gallery image version is published.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly publishedDate?: Date;\n  /** The end of life date of the gallery image version. This property can be used for decommissioning purposes. This property is updatable. */\n  endOfLifeDate?: Date;\n  /** Specifies the storage account type to be used to store the image. This property is not updatable. */\n  storageAccountType?: StorageAccountType;\n  /** Optional parameter which specifies the mode to be used for replication. This property is not updatable. */\n  replicationMode?: ReplicationMode;\n  /** The target extended locations where the Image Version is going to be replicated to. This property is updatable. */\n  targetExtendedLocations?: GalleryTargetExtendedLocation[];\n}\n\n/** Describes the target region information. */\nexport interface TargetRegion {\n  /** The name of the region. */\n  name: string;\n  /** The number of replicas of the Image Version to be created per region. This property is updatable. */\n  regionalReplicaCount?: number;\n  /** Specifies the storage account type to be used to store the image. This property is not updatable. */\n  storageAccountType?: StorageAccountType;\n  /** Optional. Allows users to provide customer managed keys for encrypting the OS and data disks in the gallery artifact. */\n  encryption?: EncryptionImages;\n}\n\n/** Optional. Allows users to provide customer managed keys for encrypting the OS and data disks in the gallery artifact. */\nexport interface EncryptionImages {\n  /** Contains encryption settings for an OS disk image. */\n  osDiskImage?: OSDiskImageEncryption;\n  /** A list of encryption specifications for data disk images. */\n  dataDiskImages?: DataDiskImageEncryption[];\n}\n\n/** Contains security profile for an OS disk image. */\nexport interface OSDiskImageSecurityProfile {\n  /** confidential VM encryption types */\n  confidentialVMEncryptionType?: ConfidentialVMEncryptionType;\n  /** secure VM disk encryption set id */\n  secureVMDiskEncryptionSetId?: string;\n}\n\n/** This is the disk image encryption base class. */\nexport interface DiskImageEncryption {\n  /** A relative URI containing the resource ID of the disk encryption set. */\n  diskEncryptionSetId?: string;\n}\n\nexport interface GalleryTargetExtendedLocation {\n  /** The name of the region. */\n  name?: string;\n  /** The name of the extended location. */\n  extendedLocation?: GalleryExtendedLocation;\n  /** The number of replicas of the Image Version to be created per extended location. This property is updatable. */\n  extendedLocationReplicaCount?: number;\n  /** Specifies the storage account type to be used to store the image. This property is not updatable. */\n  storageAccountType?: StorageAccountType;\n  /** Optional. Allows users to provide customer managed keys for encrypting the OS and data disks in the gallery artifact. */\n  encryption?: EncryptionImages;\n}\n\n/** The name of the extended location. */\nexport interface GalleryExtendedLocation {\n  name?: string;\n  /** It is type of the extended location. */\n  type?: GalleryExtendedLocationType;\n}\n\n/** This is the storage profile of a Gallery Image Version. */\nexport interface GalleryImageVersionStorageProfile {\n  /** The gallery artifact version source. */\n  source?: GalleryArtifactVersionSource;\n  /** This is the OS disk image. */\n  osDiskImage?: GalleryOSDiskImage;\n  /** A list of data disk images. */\n  dataDiskImages?: GalleryDataDiskImage[];\n}\n\n/** The gallery artifact version source. */\nexport interface GalleryArtifactVersionSource {\n  /** The id of the gallery artifact version source. Can specify a disk uri, snapshot uri, user image or storage account resource. */\n  id?: string;\n  /** The uri of the gallery artifact version source. Currently used to specify vhd/blob source. */\n  uri?: string;\n}\n\n/** This is the disk image base class. */\nexport interface GalleryDiskImage {\n  /**\n   * This property indicates the size of the VHD to be created.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly sizeInGB?: number;\n  /** The host caching of the disk. Valid values are 'None', 'ReadOnly', and 'ReadWrite' */\n  hostCaching?: HostCaching;\n  /** The gallery artifact version source. */\n  source?: GalleryArtifactVersionSource;\n}\n\n/** This is the replication status of the gallery image version. */\nexport interface ReplicationStatus {\n  /**\n   * This is the aggregated replication status based on all the regional replication status flags.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly aggregatedState?: AggregatedReplicationState;\n  /**\n   * This is a summary of replication status for each region.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly summary?: RegionalReplicationStatus[];\n}\n\n/** This is the regional replication status. */\nexport interface RegionalReplicationStatus {\n  /**\n   * The region to which the gallery image version is being replicated to.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly region?: string;\n  /**\n   * This is the regional replication state.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly state?: ReplicationState;\n  /**\n   * The details of the replication status.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly details?: string;\n  /**\n   * It indicates progress of the replication job.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly progress?: number;\n}\n\n/** The source image from which the Image Version is going to be created. */\nexport interface UserArtifactSource {\n  /** Required. The mediaLink of the artifact, must be a readable storage page blob. */\n  mediaLink: string;\n  /** Optional. The defaultConfigurationLink of the artifact, must be a readable storage page blob. */\n  defaultConfigurationLink?: string;\n}\n\nexport interface UserArtifactManage {\n  /** Required. The path and arguments to install the gallery application. This is limited to 4096 characters. */\n  install: string;\n  /** Required. The path and arguments to remove the gallery application. This is limited to 4096 characters. */\n  remove: string;\n  /** Optional. The path and arguments to update the gallery application. If not present, then update operation will invoke remove command on the previous version and install command on the current version of the gallery application. This is limited to 4096 characters. */\n  update?: string;\n}\n\n/** The List Galleries operation response. */\nexport interface GalleryList {\n  /** A list of galleries. */\n  value: Gallery[];\n  /** The uri to fetch the next page of galleries. Call ListNext() with this to fetch the next page of galleries. */\n  nextLink?: string;\n}\n\n/** The List Gallery Images operation response. */\nexport interface GalleryImageList {\n  /** A list of Shared Image Gallery images. */\n  value: GalleryImage[];\n  /** The uri to fetch the next page of Image Definitions in the Shared Image Gallery. Call ListNext() with this to fetch the next page of gallery image definitions. */\n  nextLink?: string;\n}\n\n/** The List Gallery Image version operation response. */\nexport interface GalleryImageVersionList {\n  /** A list of gallery image versions. */\n  value: GalleryImageVersion[];\n  /** The uri to fetch the next page of gallery image versions. Call ListNext() with this to fetch the next page of gallery image versions. */\n  nextLink?: string;\n}\n\n/** The List Gallery Applications operation response. */\nexport interface GalleryApplicationList {\n  /** A list of Gallery Applications. */\n  value: GalleryApplication[];\n  /** The uri to fetch the next page of Application Definitions in the Application Gallery. Call ListNext() with this to fetch the next page of gallery Application Definitions. */\n  nextLink?: string;\n}\n\n/** The List Gallery Application version operation response. */\nexport interface GalleryApplicationVersionList {\n  /** A list of gallery Application Versions. */\n  value: GalleryApplicationVersion[];\n  /** The uri to fetch the next page of gallery Application Versions. Call ListNext() with this to fetch the next page of gallery Application Versions. */\n  nextLink?: string;\n}\n\n/** Specifies information about the gallery sharing profile update. */\nexport interface SharingUpdate {\n  /** This property allows you to specify the operation type of gallery sharing update. <br><br> Possible values are: <br><br> **Add** <br><br> **Remove** <br><br> **Reset** */\n  operationType: SharingUpdateOperationTypes;\n  /** A list of sharing profile groups. */\n  groups?: SharingProfileGroup[];\n}\n\n/** The List Shared Galleries operation response. */\nexport interface SharedGalleryList {\n  /** A list of shared galleries. */\n  value: SharedGallery[];\n  /** The uri to fetch the next page of shared galleries. Call ListNext() with this to fetch the next page of shared galleries. */\n  nextLink?: string;\n}\n\n/** The Resource model definition. */\nexport interface PirResource {\n  /**\n   * Resource name\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly name?: string;\n  /**\n   * Resource location\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly location?: string;\n}\n\n/** The List Shared Gallery Images operation response. */\nexport interface SharedGalleryImageList {\n  /** A list of shared gallery images. */\n  value: SharedGalleryImage[];\n  /** The uri to fetch the next page of shared gallery images. Call ListNext() with this to fetch the next page of shared gallery images. */\n  nextLink?: string;\n}\n\n/** The List Shared Gallery Image versions operation response. */\nexport interface SharedGalleryImageVersionList {\n  /** A list of shared gallery images versions. */\n  value: SharedGalleryImageVersion[];\n  /** The uri to fetch the next page of shared gallery image versions. Call ListNext() with this to fetch the next page of shared gallery image versions. */\n  nextLink?: string;\n}\n\n/** Base information about the community gallery resource in pir. */\nexport interface PirCommunityGalleryResource {\n  /**\n   * Resource name\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly name?: string;\n  /**\n   * Resource location\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly location?: string;\n  /**\n   * Resource type\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly type?: string;\n  /** The unique id of this community gallery. */\n  uniqueId?: string;\n}\n\nexport interface RoleInstance {\n  /**\n   * Resource Id\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly id?: string;\n  /**\n   * Resource Name.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly name?: string;\n  /**\n   * Resource Type.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly type?: string;\n  /**\n   * Resource Location.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly location?: string;\n  /**\n   * Resource tags.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly tags?: { [propertyName: string]: string };\n  sku?: InstanceSku;\n  properties?: RoleInstanceProperties;\n}\n\nexport interface InstanceSku {\n  /**\n   * The sku name.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly name?: string;\n  /**\n   * The tier of the cloud service role instance.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly tier?: string;\n}\n\nexport interface RoleInstanceProperties {\n  /** Describes the network profile for the role instance. */\n  networkProfile?: RoleInstanceNetworkProfile;\n  /** The instance view of the role instance. */\n  instanceView?: RoleInstanceView;\n}\n\n/** Describes the network profile for the role instance. */\nexport interface RoleInstanceNetworkProfile {\n  /**\n   * Specifies the list of resource Ids for the network interfaces associated with the role instance.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly networkInterfaces?: SubResource[];\n}\n\n/** The instance view of the role instance. */\nexport interface RoleInstanceView {\n  /**\n   * The Update Domain.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly platformUpdateDomain?: number;\n  /**\n   * The Fault Domain.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly platformFaultDomain?: number;\n  /**\n   * Specifies a unique identifier generated internally for the cloud service associated with this role instance. <br /><br /> NOTE: If you are using Azure Diagnostics extension, this property can be used as 'DeploymentId' for querying details.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly privateId?: string;\n  /** NOTE: This property will not be serialized. It can only be populated by the server. */\n  readonly statuses?: ResourceInstanceViewStatus[];\n}\n\n/** Instance view status. */\nexport interface ResourceInstanceViewStatus {\n  /**\n   * The status code.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly code?: string;\n  /**\n   * The short localizable label for the status.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly displayStatus?: string;\n  /**\n   * The detailed status message, including for alerts and error messages.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly message?: string;\n  /**\n   * The time of the status.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly time?: Date;\n  /** The level code. */\n  level?: StatusLevelTypes;\n}\n\nexport interface RoleInstanceListResult {\n  value: RoleInstance[];\n  nextLink?: string;\n}\n\n/** Describes a role of the cloud service. */\nexport interface CloudServiceRole {\n  /**\n   * Resource id\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly id?: string;\n  /**\n   * Resource name\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly name?: string;\n  /**\n   * Resource type\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly type?: string;\n  /**\n   * Resource location\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly location?: string;\n  /** Describes the cloud service role sku. */\n  sku?: CloudServiceRoleSku;\n  properties?: CloudServiceRoleProperties;\n}\n\n/** Describes the cloud service role sku. */\nexport interface CloudServiceRoleSku {\n  /** The sku name. NOTE: If the new SKU is not supported on the hardware the cloud service is currently on, you need to delete and recreate the cloud service or move back to the old sku. */\n  name?: string;\n  /** Specifies the tier of the cloud service. Possible Values are <br /><br /> **Standard** <br /><br /> **Basic** */\n  tier?: string;\n  /** Specifies the number of role instances in the cloud service. */\n  capacity?: number;\n}\n\nexport interface CloudServiceRoleProperties {\n  /**\n   * Specifies the ID which uniquely identifies a cloud service role.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly uniqueId?: string;\n}\n\nexport interface CloudServiceRoleListResult {\n  value: CloudServiceRole[];\n  nextLink?: string;\n}\n\n/** Describes the cloud service. */\nexport interface CloudService {\n  /**\n   * Resource Id.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly id?: string;\n  /**\n   * Resource name.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly name?: string;\n  /**\n   * Resource type.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly type?: string;\n  /** Resource location. */\n  location: string;\n  /** Resource tags. */\n  tags?: { [propertyName: string]: string };\n  /** Cloud service properties */\n  properties?: CloudServiceProperties;\n}\n\n/** Cloud service properties */\nexport interface CloudServiceProperties {\n  /**\n   * Specifies a URL that refers to the location of the service package in the Blob service. The service package URL can be Shared Access Signature (SAS) URI from any storage account.\n   * This is a write-only property and is not returned in GET calls.\n   */\n  packageUrl?: string;\n  /** Specifies the XML service configuration (.cscfg) for the cloud service. */\n  configuration?: string;\n  /**\n   * Specifies a URL that refers to the location of the service configuration in the Blob service. The service package URL  can be Shared Access Signature (SAS) URI from any storage account.\n   * This is a write-only property and is not returned in GET calls.\n   */\n  configurationUrl?: string;\n  /**\n   * (Optional) Indicates whether to start the cloud service immediately after it is created. The default value is `true`.\n   * If false, the service model is still deployed, but the code is not run immediately. Instead, the service is PoweredOff until you call Start, at which time the service will be started. A deployed service still incurs charges, even if it is poweredoff.\n   */\n  startCloudService?: boolean;\n  /**\n   * (Optional) Indicates whether the role sku properties (roleProfile.roles.sku) specified in the model/template should override the role instance count and vm size specified in the .cscfg and .csdef respectively.\n   * The default value is `false`.\n   */\n  allowModelOverride?: boolean;\n  /**\n   * Update mode for the cloud service. Role instances are allocated to update domains when the service is deployed. Updates can be initiated manually in each update domain or initiated automatically in all update domains.\n   * Possible Values are <br /><br />**Auto**<br /><br />**Manual** <br /><br />**Simultaneous**<br /><br />\n   * If not specified, the default value is Auto. If set to Manual, PUT UpdateDomain must be called to apply the update. If set to Auto, the update is automatically applied to each update domain in sequence.\n   */\n  upgradeMode?: CloudServiceUpgradeMode;\n  /** Describes the role profile for the cloud service. */\n  roleProfile?: CloudServiceRoleProfile;\n  /** Describes the OS profile for the cloud service. */\n  osProfile?: CloudServiceOsProfile;\n  /** Network Profile for the cloud service. */\n  networkProfile?: CloudServiceNetworkProfile;\n  /** Describes a cloud service extension profile. */\n  extensionProfile?: CloudServiceExtensionProfile;\n  /**\n   * The provisioning state, which only appears in the response.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly provisioningState?: string;\n  /**\n   * The unique identifier for the cloud service.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly uniqueId?: string;\n}\n\n/** Describes the role profile for the cloud service. */\nexport interface CloudServiceRoleProfile {\n  /** List of roles for the cloud service. */\n  roles?: CloudServiceRoleProfileProperties[];\n}\n\n/** Describes the role properties. */\nexport interface CloudServiceRoleProfileProperties {\n  /** Resource name. */\n  name?: string;\n  /** Describes the cloud service role sku. */\n  sku?: CloudServiceRoleSku;\n}\n\n/** Describes the OS profile for the cloud service. */\nexport interface CloudServiceOsProfile {\n  /** Specifies set of certificates that should be installed onto the role instances. */\n  secrets?: CloudServiceVaultSecretGroup[];\n}\n\n/** Describes a set of certificates which are all in the same Key Vault. */\nexport interface CloudServiceVaultSecretGroup {\n  /** The relative URL of the Key Vault containing all of the certificates in VaultCertificates. */\n  sourceVault?: SubResource;\n  /** The list of key vault references in SourceVault which contain certificates. */\n  vaultCertificates?: CloudServiceVaultCertificate[];\n}\n\n/** Describes a single certificate reference in a Key Vault, and where the certificate should reside on the role instance. */\nexport interface CloudServiceVaultCertificate {\n  /** This is the URL of a certificate that has been uploaded to Key Vault as a secret. */\n  certificateUrl?: string;\n}\n\n/** Network Profile for the cloud service. */\nexport interface CloudServiceNetworkProfile {\n  /** List of Load balancer configurations. Cloud service can have up to two load balancer configurations, corresponding to a Public Load Balancer and an Internal Load Balancer. */\n  loadBalancerConfigurations?: LoadBalancerConfiguration[];\n  /** The id reference of the cloud service containing the target IP with which the subject cloud service can perform a swap. This property cannot be updated once it is set. The swappable cloud service referred by this id must be present otherwise an error will be thrown. */\n  swappableCloudService?: SubResource;\n}\n\n/** Describes the load balancer configuration. */\nexport interface LoadBalancerConfiguration {\n  /** Resource Id */\n  id?: string;\n  /** The name of the Load balancer */\n  name: string;\n  /** Properties of the load balancer configuration. */\n  properties: LoadBalancerConfigurationProperties;\n}\n\nexport interface LoadBalancerConfigurationProperties {\n  /** Specifies the frontend IP to be used for the load balancer. Only IPv4 frontend IP address is supported. Each load balancer configuration must have exactly one frontend IP configuration. */\n  frontendIPConfigurations: LoadBalancerFrontendIPConfiguration[];\n}\n\nexport interface LoadBalancerFrontendIPConfiguration {\n  /** The name of the resource that is unique within the set of frontend IP configurations used by the load balancer. This name can be used to access the resource. */\n  name: string;\n  /** Properties of load balancer frontend ip configuration. */\n  properties: LoadBalancerFrontendIPConfigurationProperties;\n}\n\n/** Describes a cloud service IP Configuration */\nexport interface LoadBalancerFrontendIPConfigurationProperties {\n  /** The reference to the public ip address resource. */\n  publicIPAddress?: SubResource;\n  /** The reference to the virtual network subnet resource. */\n  subnet?: SubResource;\n  /** The virtual network private IP address of the IP configuration. */\n  privateIPAddress?: string;\n}\n\n/** Describes a cloud service extension profile. */\nexport interface CloudServiceExtensionProfile {\n  /** List of extensions for the cloud service. */\n  extensions?: Extension[];\n}\n\n/** Describes a cloud service Extension. */\nexport interface Extension {\n  /** The name of the extension. */\n  name?: string;\n  /** Extension Properties. */\n  properties?: CloudServiceExtensionProperties;\n}\n\n/** Extension Properties. */\nexport interface CloudServiceExtensionProperties {\n  /** The name of the extension handler publisher. */\n  publisher?: string;\n  /** Specifies the type of the extension. */\n  type?: string;\n  /** Specifies the version of the extension. Specifies the version of the extension. If this element is not specified or an asterisk (*) is used as the value, the latest version of the extension is used. If the value is specified with a major version number and an asterisk as the minor version number (X.), the latest minor version of the specified major version is selected. If a major version number and a minor version number are specified (X.Y), the specific extension version is selected. If a version is specified, an auto-upgrade is performed on the role instance. */\n  typeHandlerVersion?: string;\n  /** Explicitly specify whether platform can automatically upgrade typeHandlerVersion to higher minor versions when they become available. */\n  autoUpgradeMinorVersion?: boolean;\n  /** Public settings for the extension. For JSON extensions, this is the JSON settings for the extension. For XML Extension (like RDP), this is the XML setting for the extension. */\n  settings?: string;\n  /** Protected settings for the extension which are encrypted before sent to the role instance. */\n  protectedSettings?: string;\n  protectedSettingsFromKeyVault?: CloudServiceVaultAndSecretReference;\n  /**\n   * Tag to force apply the provided public and protected settings.\n   * Changing the tag value allows for re-running the extension without changing any of the public or protected settings.\n   * If forceUpdateTag is not changed, updates to public or protected settings would still be applied by the handler.\n   * If neither forceUpdateTag nor any of public or protected settings change, extension would flow to the role instance with the same sequence-number, and\n   * it is up to handler implementation whether to re-run it or not\n   */\n  forceUpdateTag?: string;\n  /**\n   * The provisioning state, which only appears in the response.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly provisioningState?: string;\n  /** Optional list of roles to apply this extension. If property is not specified or '*' is specified, extension is applied to all roles in the cloud service. */\n  rolesAppliedTo?: string[];\n}\n\nexport interface CloudServiceVaultAndSecretReference {\n  sourceVault?: SubResource;\n  secretUrl?: string;\n}\n\nexport interface CloudServiceUpdate {\n  /** Resource tags */\n  tags?: { [propertyName: string]: string };\n}\n\n/** InstanceView of CloudService as a whole */\nexport interface CloudServiceInstanceView {\n  /** Instance view statuses. */\n  roleInstance?: InstanceViewStatusesSummary;\n  /**\n   * The version of the SDK that was used to generate the package for the cloud service.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly sdkVersion?: string;\n  /**\n   * Specifies a list of unique identifiers generated internally for the cloud service. <br /><br /> NOTE: If you are using Azure Diagnostics extension, this property can be used as 'DeploymentId' for querying details.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly privateIds?: string[];\n  /** NOTE: This property will not be serialized. It can only be populated by the server. */\n  readonly statuses?: ResourceInstanceViewStatus[];\n}\n\n/** Instance view statuses. */\nexport interface InstanceViewStatusesSummary {\n  /** NOTE: This property will not be serialized. It can only be populated by the server. */\n  readonly statusesSummary?: StatusCodeCount[];\n}\n\nexport interface StatusCodeCount {\n  /**\n   * The instance view status code\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly code?: string;\n  /**\n   * Number of instances having this status code\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly count?: number;\n}\n\nexport interface CloudServiceListResult {\n  value: CloudService[];\n  nextLink?: string;\n}\n\n/** Specifies a list of role instances from the cloud service. */\nexport interface RoleInstances {\n  /** List of cloud service role instance names. Value of '*' will signify all role instances of the cloud service. */\n  roleInstances: string[];\n}\n\n/** Defines an update domain for the cloud service. */\nexport interface UpdateDomain {\n  /**\n   * Resource Id\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly id?: string;\n  /**\n   * Resource Name\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly name?: string;\n}\n\nexport interface UpdateDomainListResult {\n  value: UpdateDomain[];\n  nextLink?: string;\n}\n\n/** Describes a cloud service OS version. */\nexport interface OSVersion {\n  /**\n   * Resource Id.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly id?: string;\n  /**\n   * Resource name.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly name?: string;\n  /**\n   * Resource type.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly type?: string;\n  /**\n   * Resource location.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly location?: string;\n  /** OS version properties. */\n  properties?: OSVersionProperties;\n}\n\n/** OS version properties. */\nexport interface OSVersionProperties {\n  /**\n   * The family of this OS version.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly family?: string;\n  /**\n   * The family label of this OS version.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly familyLabel?: string;\n  /**\n   * The OS version.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly version?: string;\n  /**\n   * The OS version label.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly label?: string;\n  /**\n   * Specifies whether this is the default OS version for its family.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly isDefault?: boolean;\n  /**\n   * Specifies whether this OS version is active.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly isActive?: boolean;\n}\n\nexport interface OSVersionListResult {\n  value: OSVersion[];\n  nextLink?: string;\n}\n\n/** Describes a cloud service OS family. */\nexport interface OSFamily {\n  /**\n   * Resource Id.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly id?: string;\n  /**\n   * Resource name.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly name?: string;\n  /**\n   * Resource type.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly type?: string;\n  /**\n   * Resource location.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly location?: string;\n  /** OS family properties. */\n  properties?: OSFamilyProperties;\n}\n\n/** OS family properties. */\nexport interface OSFamilyProperties {\n  /**\n   * The OS family name.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly name?: string;\n  /**\n   * The OS family label.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly label?: string;\n  /**\n   * List of OS versions belonging to this family.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly versions?: OSVersionPropertiesBase[];\n}\n\n/** Configuration view of an OS version. */\nexport interface OSVersionPropertiesBase {\n  /**\n   * The OS version.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly version?: string;\n  /**\n   * The OS version label.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly label?: string;\n  /**\n   * Specifies whether this is the default OS version for its family.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly isDefault?: boolean;\n  /**\n   * Specifies whether this OS version is active.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly isActive?: boolean;\n}\n\nexport interface OSFamilyListResult {\n  value: OSFamily[];\n  nextLink?: string;\n}\n\n/** The instance view of a disk restore point. */\nexport interface DiskRestorePointReplicationStatus {\n  /** The resource status information. */\n  status?: Record<string, unknown>;\n}\n\n/** Information of community gallery if current gallery is shared to community */\nexport interface CommunityGalleryInfo {\n  /** Community gallery publisher uri */\n  publisherUri?: string;\n  /** Community gallery publisher contact email */\n  publisherContact?: string;\n  /** Community gallery publisher eula */\n  eula?: string;\n  /** Community gallery public name prefix */\n  publicNamePrefix?: string;\n  /**\n   * Contains info about whether community gallery sharing is enabled.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly communityGalleryEnabled?: boolean;\n  /**\n   * Community gallery public name list.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly publicNames?: string[];\n}\n\n/** The source image from which the Image Version is going to be created. */\nexport interface GalleryArtifactSource {\n  /** The managed artifact. */\n  managedImage: ManagedArtifact;\n}\n\n/** The managed artifact. */\nexport interface ManagedArtifact {\n  /** The managed artifact id. */\n  id: string;\n}\n\nexport type SubResourceWithColocationStatus = SubResource & {\n  /** Describes colocation status of a resource in the Proximity Placement Group. */\n  colocationStatus?: InstanceViewStatus;\n};\n\n/** Virtual machine image resource information. */\nexport type VirtualMachineImageResource = SubResource & {\n  /** The name of the resource. */\n  name: string;\n  /** The supported Azure location of the resource. */\n  location: string;\n  /** Specifies the tags that are assigned to the virtual machine. For more information about using tags, see [Using tags to organize your Azure resources](https://docs.microsoft.com/azure/azure-resource-manager/resource-group-using-tags.md). */\n  tags?: { [propertyName: string]: string };\n  /** The extended location of the Virtual Machine. */\n  extendedLocation?: ExtendedLocation;\n};\n\n/** Specifies information about the image to use. You can specify information about platform images, marketplace images, or virtual machine images. This element is required when you want to use a platform image, marketplace image, or virtual machine image, but is not used in other creation operations. NOTE: Image reference publisher and offer can only be set when you create the scale set. */\nexport type ImageReference = SubResource & {\n  /** The image publisher. */\n  publisher?: string;\n  /** Specifies the offer of the platform image or marketplace image used to create the virtual machine. */\n  offer?: string;\n  /** The image SKU. */\n  sku?: string;\n  /** Specifies the version of the platform image or marketplace image used to create the virtual machine. The allowed formats are Major.Minor.Build or 'latest'. Major, Minor, and Build are decimal numbers. Specify 'latest' to use the latest version of an image available at deploy time. Even if you use 'latest', the VM image will not automatically update after deploy time even if a new version becomes available. Please do not use field 'version' for gallery image deployment, gallery image should always use 'id' field for deployment, to use 'latest' version of gallery image, just set '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/galleries/{galleryName}/images/{imageName}' in the 'id' field without version input. */\n  version?: string;\n  /**\n   * Specifies in decimal numbers, the version of platform image or marketplace image used to create the virtual machine. This readonly field differs from 'version', only if the value specified in 'version' field is 'latest'.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly exactVersion?: string;\n  /** Specified the shared gallery image unique id for vm deployment. This can be fetched from shared gallery image GET call. */\n  sharedGalleryImageId?: string;\n  /** Specified the community gallery image unique id for vm deployment. This can be fetched from community gallery image GET call. */\n  communityGalleryImageId?: string;\n};\n\n/** Describes the parameter of customer managed disk encryption set resource id that can be specified for disk. <br><br> NOTE: The disk encryption set resource id can only be specified for managed disk. Please refer https://aka.ms/mdssewithcmkoverview for more details. */\nexport type DiskEncryptionSetParameters = SubResource & {};\n\n/** The parameters of a managed disk. */\nexport type ManagedDiskParameters = SubResource & {\n  /** Specifies the storage account type for the managed disk. NOTE: UltraSSD_LRS can only be used with data disks, it cannot be used with OS Disk. */\n  storageAccountType?: StorageAccountTypes;\n  /** Specifies the customer managed disk encryption set resource id for the managed disk. */\n  diskEncryptionSet?: DiskEncryptionSetParameters;\n  /** Specifies the security profile for the managed disk. */\n  securityProfile?: VMDiskSecurityProfile;\n};\n\n/** Describes a network interface reference. */\nexport type NetworkInterfaceReference = SubResource & {\n  /** Specifies the primary network interface in case the virtual machine has more than 1 network interface. */\n  primary?: boolean;\n  /** Specify what happens to the network interface when the VM is deleted */\n  deleteOption?: DeleteOptions;\n};\n\n/** Describes a virtual machine scale set network profile's IP configuration. */\nexport type VirtualMachineScaleSetIPConfiguration = SubResource & {\n  /** The IP configuration name. */\n  name: string;\n  /** Specifies the identifier of the subnet. */\n  subnet?: ApiEntityReference;\n  /** Specifies the primary network interface in case the virtual machine has more than 1 network interface. */\n  primary?: boolean;\n  /** The publicIPAddressConfiguration. */\n  publicIPAddressConfiguration?: VirtualMachineScaleSetPublicIPAddressConfiguration;\n  /** Available from Api-Version 2017-03-30 onwards, it represents whether the specific ipconfiguration is IPv4 or IPv6. Default is taken as IPv4.  Possible values are: 'IPv4' and 'IPv6'. */\n  privateIPAddressVersion?: IPVersion;\n  /** Specifies an array of references to backend address pools of application gateways. A scale set can reference backend address pools of multiple application gateways. Multiple scale sets cannot use the same application gateway. */\n  applicationGatewayBackendAddressPools?: SubResource[];\n  /** Specifies an array of references to application security group. */\n  applicationSecurityGroups?: SubResource[];\n  /** Specifies an array of references to backend address pools of load balancers. A scale set can reference backend address pools of one public and one internal load balancer. Multiple scale sets cannot use the same basic sku load balancer. */\n  loadBalancerBackendAddressPools?: SubResource[];\n  /** Specifies an array of references to inbound Nat pools of the load balancers. A scale set can reference inbound nat pools of one public and one internal load balancer. Multiple scale sets cannot use the same basic sku load balancer. */\n  loadBalancerInboundNatPools?: SubResource[];\n};\n\n/** Describes a virtual machine scale set network profile's network configurations. */\nexport type VirtualMachineScaleSetNetworkConfiguration = SubResource & {\n  /** The network configuration name. */\n  name: string;\n  /** Specifies the primary network interface in case the virtual machine has more than 1 network interface. */\n  primary?: boolean;\n  /** Specifies whether the network interface is accelerated networking-enabled. */\n  enableAcceleratedNetworking?: boolean;\n  /** Specifies whether the network interface is FPGA networking-enabled. */\n  enableFpga?: boolean;\n  /** The network security group. */\n  networkSecurityGroup?: SubResource;\n  /** The dns settings to be applied on the network interfaces. */\n  dnsSettings?: VirtualMachineScaleSetNetworkConfigurationDnsSettings;\n  /** Specifies the IP configurations of the network interface. */\n  ipConfigurations?: VirtualMachineScaleSetIPConfiguration[];\n  /** Whether IP forwarding enabled on this NIC. */\n  enableIPForwarding?: boolean;\n  /** Specify what happens to the network interface when the VM is deleted */\n  deleteOption?: DeleteOptions;\n};\n\n/** Output of virtual machine capture operation. */\nexport type VirtualMachineCaptureResult = SubResource & {\n  /**\n   * the schema of the captured virtual machine\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly schema?: string;\n  /**\n   * the version of the content\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly contentVersion?: string;\n  /**\n   * parameters of the captured virtual machine\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly parameters?: Record<string, unknown>;\n  /**\n   * a list of resource items of the captured virtual machine\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly resources?: Record<string, unknown>[];\n};\n\n/** Describes a virtual machine scale set network profile's IP configuration. NOTE: The subnet of a scale set may be modified as long as the original subnet and the new subnet are in the same virtual network */\nexport type VirtualMachineScaleSetUpdateIPConfiguration = SubResource & {\n  /** The IP configuration name. */\n  name?: string;\n  /** The subnet. */\n  subnet?: ApiEntityReference;\n  /** Specifies the primary IP Configuration in case the network interface has more than one IP Configuration. */\n  primary?: boolean;\n  /** The publicIPAddressConfiguration. */\n  publicIPAddressConfiguration?: VirtualMachineScaleSetUpdatePublicIPAddressConfiguration;\n  /** Available from Api-Version 2017-03-30 onwards, it represents whether the specific ipconfiguration is IPv4 or IPv6. Default is taken as IPv4.  Possible values are: 'IPv4' and 'IPv6'. */\n  privateIPAddressVersion?: IPVersion;\n  /** The application gateway backend address pools. */\n  applicationGatewayBackendAddressPools?: SubResource[];\n  /** Specifies an array of references to application security group. */\n  applicationSecurityGroups?: SubResource[];\n  /** The load balancer backend address pools. */\n  loadBalancerBackendAddressPools?: SubResource[];\n  /** The load balancer inbound nat pools. */\n  loadBalancerInboundNatPools?: SubResource[];\n};\n\n/** Describes a virtual machine scale set network profile's network configurations. */\nexport type VirtualMachineScaleSetUpdateNetworkConfiguration = SubResource & {\n  /** The network configuration name. */\n  name?: string;\n  /** Whether this is a primary NIC on a virtual machine. */\n  primary?: boolean;\n  /** Specifies whether the network interface is accelerated networking-enabled. */\n  enableAcceleratedNetworking?: boolean;\n  /** Specifies whether the network interface is FPGA networking-enabled. */\n  enableFpga?: boolean;\n  /** The network security group. */\n  networkSecurityGroup?: SubResource;\n  /** The dns settings to be applied on the network interfaces. */\n  dnsSettings?: VirtualMachineScaleSetNetworkConfigurationDnsSettings;\n  /** The virtual machine scale set IP Configuration. */\n  ipConfigurations?: VirtualMachineScaleSetUpdateIPConfiguration[];\n  /** Whether IP forwarding enabled on this NIC. */\n  enableIPForwarding?: boolean;\n  /** Specify what happens to the network interface when the VM is deleted */\n  deleteOption?: DeleteOptions;\n};\n\n/** Specifies information about the availability set that the virtual machine should be assigned to. Virtual machines specified in the same availability set are allocated to different nodes to maximize availability. For more information about availability sets, see [Availability sets overview](https://docs.microsoft.com/azure/virtual-machines/availability-set-overview). <br><br> For more information on Azure planned maintenance, see [Maintenance and updates for Virtual Machines in Azure](https://docs.microsoft.com/azure/virtual-machines/maintenance-and-updates) <br><br> Currently, a VM can only be added to availability set at creation time. An existing VM cannot be added to an availability set. */\nexport type AvailabilitySet = Resource & {\n  /** Sku of the availability set, only name is required to be set. See AvailabilitySetSkuTypes for possible set of values. Use 'Aligned' for virtual machines with managed disks and 'Classic' for virtual machines with unmanaged disks. Default value is 'Classic'. */\n  sku?: Sku;\n  /** Update Domain count. */\n  platformUpdateDomainCount?: number;\n  /** Fault Domain count. */\n  platformFaultDomainCount?: number;\n  /** A list of references to all virtual machines in the availability set. */\n  virtualMachines?: SubResource[];\n  /** Specifies information about the proximity placement group that the availability set should be assigned to. <br><br>Minimum api-version: 2018-04-01. */\n  proximityPlacementGroup?: SubResource;\n  /**\n   * The resource status information.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly statuses?: InstanceViewStatus[];\n};\n\n/** Specifies information about the proximity placement group. */\nexport type ProximityPlacementGroup = Resource & {\n  /** Specifies the type of the proximity placement group. <br><br> Possible values are: <br><br> **Standard** : Co-locate resources within an Azure region or Availability Zone. <br><br> **Ultra** : For future use. */\n  proximityPlacementGroupType?: ProximityPlacementGroupType;\n  /**\n   * A list of references to all virtual machines in the proximity placement group.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly virtualMachines?: SubResourceWithColocationStatus[];\n  /**\n   * A list of references to all virtual machine scale sets in the proximity placement group.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly virtualMachineScaleSets?: SubResourceWithColocationStatus[];\n  /**\n   * A list of references to all availability sets in the proximity placement group.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly availabilitySets?: SubResourceWithColocationStatus[];\n  /** Describes colocation status of the Proximity Placement Group. */\n  colocationStatus?: InstanceViewStatus;\n};\n\n/** Specifies information about the dedicated host group that the dedicated hosts should be assigned to. <br><br> Currently, a dedicated host can only be added to a dedicated host group at creation time. An existing dedicated host cannot be added to another dedicated host group. */\nexport type DedicatedHostGroup = Resource & {\n  /** Availability Zone to use for this host group. Only single zone is supported. The zone can be assigned only during creation. If not provided, the group supports all zones in the region. If provided, enforces each host in the group to be in the same zone. */\n  zones?: string[];\n  /** Number of fault domains that the host group can span. */\n  platformFaultDomainCount?: number;\n  /**\n   * A list of references to all dedicated hosts in the dedicated host group.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly hosts?: SubResourceReadOnly[];\n  /**\n   * The dedicated host group instance view, which has the list of instance view of the dedicated hosts under the dedicated host group.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly instanceView?: DedicatedHostGroupInstanceView;\n  /** Specifies whether virtual machines or virtual machine scale sets can be placed automatically on the dedicated host group. Automatic placement means resources are allocated on dedicated hosts, that are chosen by Azure, under the dedicated host group. The value is defaulted to 'false' when not provided. <br><br>Minimum api-version: 2020-06-01. */\n  supportAutomaticPlacement?: boolean;\n};\n\n/** Specifies information about the Dedicated host. */\nexport type DedicatedHost = Resource & {\n  /** SKU of the dedicated host for Hardware Generation and VM family. Only name is required to be set. List Microsoft.Compute SKUs for a list of possible values. */\n  sku: Sku;\n  /** Fault domain of the dedicated host within a dedicated host group. */\n  platformFaultDomain?: number;\n  /** Specifies whether the dedicated host should be replaced automatically in case of a failure. The value is defaulted to 'true' when not provided. */\n  autoReplaceOnFailure?: boolean;\n  /**\n   * A unique id generated and assigned to the dedicated host by the platform. <br><br> Does not change throughout the lifetime of the host.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly hostId?: string;\n  /**\n   * A list of references to all virtual machines in the Dedicated Host.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly virtualMachines?: SubResourceReadOnly[];\n  /** Specifies the software license type that will be applied to the VMs deployed on the dedicated host. <br><br> Possible values are: <br><br> **None** <br><br> **Windows_Server_Hybrid** <br><br> **Windows_Server_Perpetual** <br><br> Default: **None** */\n  licenseType?: DedicatedHostLicenseTypes;\n  /**\n   * The date when the host was first provisioned.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly provisioningTime?: Date;\n  /**\n   * The provisioning state, which only appears in the response.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly provisioningState?: string;\n  /**\n   * The dedicated host instance view.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly instanceView?: DedicatedHostInstanceView;\n  /**\n   * Specifies the time at which the Dedicated Host resource was created.<br><br>Minimum api-version: 2021-11-01.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly timeCreated?: Date;\n};\n\n/** Specifies information about the SSH public key. */\nexport type SshPublicKeyResource = Resource & {\n  /** SSH public key used to authenticate to a virtual machine through ssh. If this property is not initially provided when the resource is created, the publicKey property will be populated when generateKeyPair is called. If the public key is provided upon resource creation, the provided public key needs to be at least 2048-bit and in ssh-rsa format. */\n  publicKey?: string;\n};\n\n/** Describes a Virtual Machine Extension Image. */\nexport type VirtualMachineExtensionImage = Resource & {\n  /** The operating system this extension supports. */\n  operatingSystem?: string;\n  /** The type of role (IaaS or PaaS) this extension supports. */\n  computeRole?: string;\n  /** The schema defined by publisher, where extension consumers should provide settings in a matching schema. */\n  handlerSchema?: string;\n  /** Whether the extension can be used on xRP VMScaleSets. By default existing extensions are usable on scalesets, but there might be cases where a publisher wants to explicitly indicate the extension is only enabled for CRP VMs but not VMSS. */\n  vmScaleSetEnabled?: boolean;\n  /** Whether the handler can support multiple extensions. */\n  supportsMultipleExtensions?: boolean;\n};\n\n/** Describes a Virtual Machine Extension. */\nexport type VirtualMachineExtension = Resource & {\n  /** How the extension handler should be forced to update even if the extension configuration has not changed. */\n  forceUpdateTag?: string;\n  /** The name of the extension handler publisher. */\n  publisher?: string;\n  /** Specifies the type of the extension; an example is \"CustomScriptExtension\". */\n  typePropertiesType?: string;\n  /** Specifies the version of the script handler. */\n  typeHandlerVersion?: string;\n  /** Indicates whether the extension should use a newer minor version if one is available at deployment time. Once deployed, however, the extension will not upgrade minor versions unless redeployed, even with this property set to true. */\n  autoUpgradeMinorVersion?: boolean;\n  /** Indicates whether the extension should be automatically upgraded by the platform if there is a newer version of the extension available. */\n  enableAutomaticUpgrade?: boolean;\n  /** Json formatted public settings for the extension. */\n  settings?: Record<string, unknown>;\n  /** The extension can contain either protectedSettings or protectedSettingsFromKeyVault or no protected settings at all. */\n  protectedSettings?: Record<string, unknown>;\n  /**\n   * The provisioning state, which only appears in the response.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly provisioningState?: string;\n  /** The virtual machine extension instance view. */\n  instanceView?: VirtualMachineExtensionInstanceView;\n  /** Indicates whether failures stemming from the extension will be suppressed (Operational failures such as not connecting to the VM will not be suppressed regardless of this value). The default is false. */\n  suppressFailures?: boolean;\n  /** The extensions protected settings that are passed by reference, and consumed from key vault */\n  protectedSettingsFromKeyVault?: Record<string, unknown>;\n};\n\n/** Describes a Virtual Machine. */\nexport type VirtualMachine = Resource & {\n  /** Specifies information about the marketplace image used to create the virtual machine. This element is only used for marketplace images. Before you can use a marketplace image from an API, you must enable the image for programmatic use.  In the Azure portal, find the marketplace image that you want to use and then click **Want to deploy programmatically, Get Started ->**. Enter any required information and then click **Save**. */\n  plan?: Plan;\n  /**\n   * The virtual machine child extension resources.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly resources?: VirtualMachineExtension[];\n  /** The identity of the virtual machine, if configured. */\n  identity?: VirtualMachineIdentity;\n  /** The virtual machine zones. */\n  zones?: string[];\n  /** The extended location of the Virtual Machine. */\n  extendedLocation?: ExtendedLocation;\n  /** Specifies the hardware settings for the virtual machine. */\n  hardwareProfile?: HardwareProfile;\n  /** Specifies the storage settings for the virtual machine disks. */\n  storageProfile?: StorageProfile;\n  /** Specifies additional capabilities enabled or disabled on the virtual machine. */\n  additionalCapabilities?: AdditionalCapabilities;\n  /** Specifies the operating system settings used while creating the virtual machine. Some of the settings cannot be changed once VM is provisioned. */\n  osProfile?: OSProfile;\n  /** Specifies the network interfaces of the virtual machine. */\n  networkProfile?: NetworkProfile;\n  /** Specifies the Security related profile settings for the virtual machine. */\n  securityProfile?: SecurityProfile;\n  /** Specifies the boot diagnostic settings state. <br><br>Minimum api-version: 2015-06-15. */\n  diagnosticsProfile?: DiagnosticsProfile;\n  /** Specifies information about the availability set that the virtual machine should be assigned to. Virtual machines specified in the same availability set are allocated to different nodes to maximize availability. For more information about availability sets, see [Availability sets overview](https://docs.microsoft.com/azure/virtual-machines/availability-set-overview). <br><br> For more information on Azure planned maintenance, see [Maintenance and updates for Virtual Machines in Azure](https://docs.microsoft.com/azure/virtual-machines/maintenance-and-updates) <br><br> Currently, a VM can only be added to availability set at creation time. The availability set to which the VM is being added should be under the same resource group as the availability set resource. An existing VM cannot be added to an availability set. <br><br>This property cannot exist along with a non-null properties.virtualMachineScaleSet reference. */\n  availabilitySet?: SubResource;\n  /** Specifies information about the virtual machine scale set that the virtual machine should be assigned to. Virtual machines specified in the same virtual machine scale set are allocated to different nodes to maximize availability. Currently, a VM can only be added to virtual machine scale set at creation time. An existing VM cannot be added to a virtual machine scale set. <br><br>This property cannot exist along with a non-null properties.availabilitySet reference. <br><br>Minimum api‐version: 2019‐03‐01 */\n  virtualMachineScaleSet?: SubResource;\n  /** Specifies information about the proximity placement group that the virtual machine should be assigned to. <br><br>Minimum api-version: 2018-04-01. */\n  proximityPlacementGroup?: SubResource;\n  /** Specifies the priority for the virtual machine. <br><br>Minimum api-version: 2019-03-01 */\n  priority?: VirtualMachinePriorityTypes;\n  /** Specifies the eviction policy for the Azure Spot virtual machine and Azure Spot scale set. <br><br>For Azure Spot virtual machines, both 'Deallocate' and 'Delete' are supported and the minimum api-version is 2019-03-01. <br><br>For Azure Spot scale sets, both 'Deallocate' and 'Delete' are supported and the minimum api-version is 2017-10-30-preview. */\n  evictionPolicy?: VirtualMachineEvictionPolicyTypes;\n  /** Specifies the billing related details of a Azure Spot virtual machine. <br><br>Minimum api-version: 2019-03-01. */\n  billingProfile?: BillingProfile;\n  /** Specifies information about the dedicated host that the virtual machine resides in. <br><br>Minimum api-version: 2018-10-01. */\n  host?: SubResource;\n  /** Specifies information about the dedicated host group that the virtual machine resides in. <br><br>Minimum api-version: 2020-06-01. <br><br>NOTE: User cannot specify both host and hostGroup properties. */\n  hostGroup?: SubResource;\n  /**\n   * The provisioning state, which only appears in the response.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly provisioningState?: string;\n  /**\n   * The virtual machine instance view.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly instanceView?: VirtualMachineInstanceView;\n  /** Specifies that the image or disk that is being used was licensed on-premises. <br><br> Possible values for Windows Server operating system are: <br><br> Windows_Client <br><br> Windows_Server <br><br> Possible values for Linux Server operating system are: <br><br> RHEL_BYOS (for RHEL) <br><br> SLES_BYOS (for SUSE) <br><br> For more information, see [Azure Hybrid Use Benefit for Windows Server](https://docs.microsoft.com/azure/virtual-machines/windows/hybrid-use-benefit-licensing) <br><br> [Azure Hybrid Use Benefit for Linux Server](https://docs.microsoft.com/azure/virtual-machines/linux/azure-hybrid-benefit-linux) <br><br> Minimum api-version: 2015-06-15 */\n  licenseType?: string;\n  /**\n   * Specifies the VM unique ID which is a 128-bits identifier that is encoded and stored in all Azure IaaS VMs SMBIOS and can be read using platform BIOS commands.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly vmId?: string;\n  /** Specifies the time alloted for all extensions to start. The time duration should be between 15 minutes and 120 minutes (inclusive) and should be specified in ISO 8601 format. The default value is 90 minutes (PT1H30M). <br><br> Minimum api-version: 2020-06-01 */\n  extensionsTimeBudget?: string;\n  /** Specifies the scale set logical fault domain into which the Virtual Machine will be created. By default, the Virtual Machine will by automatically assigned to a fault domain that best maintains balance across available fault domains.<br><li>This is applicable only if the 'virtualMachineScaleSet' property of this Virtual Machine is set.<li>The Virtual Machine Scale Set that is referenced, must have 'platformFaultDomainCount' &gt; 1.<li>This property cannot be updated once the Virtual Machine is created.<li>Fault domain assignment can be viewed in the Virtual Machine Instance View.<br><br>Minimum api‐version: 2020‐12‐01 */\n  platformFaultDomain?: number;\n  /** Specifies Scheduled Event related configurations. */\n  scheduledEventsProfile?: ScheduledEventsProfile;\n  /** UserData for the VM, which must be base-64 encoded. Customer should not pass any secrets in here. <br><br>Minimum api-version: 2021-03-01 */\n  userData?: string;\n  /** Specifies information about the capacity reservation that is used to allocate virtual machine. <br><br>Minimum api-version: 2021-04-01. */\n  capacityReservation?: CapacityReservationProfile;\n  /** Specifies the gallery applications that should be made available to the VM/VMSS */\n  applicationProfile?: ApplicationProfile;\n  /**\n   * Specifies the time at which the Virtual Machine resource was created.<br><br>Minimum api-version: 2021-11-01.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly timeCreated?: Date;\n};\n\n/** Describes a Virtual Machine Scale Set. */\nexport type VirtualMachineScaleSet = Resource & {\n  /** The virtual machine scale set sku. */\n  sku?: Sku;\n  /** Specifies information about the marketplace image used to create the virtual machine. This element is only used for marketplace images. Before you can use a marketplace image from an API, you must enable the image for programmatic use.  In the Azure portal, find the marketplace image that you want to use and then click **Want to deploy programmatically, Get Started ->**. Enter any required information and then click **Save**. */\n  plan?: Plan;\n  /** The identity of the virtual machine scale set, if configured. */\n  identity?: VirtualMachineScaleSetIdentity;\n  /** The virtual machine scale set zones. NOTE: Availability zones can only be set when you create the scale set */\n  zones?: string[];\n  /** The extended location of the Virtual Machine Scale Set. */\n  extendedLocation?: ExtendedLocation;\n  /** The upgrade policy. */\n  upgradePolicy?: UpgradePolicy;\n  /** Policy for automatic repairs. */\n  automaticRepairsPolicy?: AutomaticRepairsPolicy;\n  /** The virtual machine profile. */\n  virtualMachineProfile?: VirtualMachineScaleSetVMProfile;\n  /**\n   * The provisioning state, which only appears in the response.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly provisioningState?: string;\n  /** Specifies whether the Virtual Machine Scale Set should be overprovisioned. */\n  overprovision?: boolean;\n  /** When Overprovision is enabled, extensions are launched only on the requested number of VMs which are finally kept. This property will hence ensure that the extensions do not run on the extra overprovisioned VMs. */\n  doNotRunExtensionsOnOverprovisionedVMs?: boolean;\n  /**\n   * Specifies the ID which uniquely identifies a Virtual Machine Scale Set.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly uniqueId?: string;\n  /** When true this limits the scale set to a single placement group, of max size 100 virtual machines. NOTE: If singlePlacementGroup is true, it may be modified to false. However, if singlePlacementGroup is false, it may not be modified to true. */\n  singlePlacementGroup?: boolean;\n  /** Whether to force strictly even Virtual Machine distribution cross x-zones in case there is zone outage. zoneBalance property can only be set if the zones property of the scale set contains more than one zone. If there are no zones or only one zone specified, then zoneBalance property should not be set. */\n  zoneBalance?: boolean;\n  /** Fault Domain count for each placement group. */\n  platformFaultDomainCount?: number;\n  /** Specifies information about the proximity placement group that the virtual machine scale set should be assigned to. <br><br>Minimum api-version: 2018-04-01. */\n  proximityPlacementGroup?: SubResource;\n  /** Specifies information about the dedicated host group that the virtual machine scale set resides in. <br><br>Minimum api-version: 2020-06-01. */\n  hostGroup?: SubResource;\n  /** Specifies additional capabilities enabled or disabled on the Virtual Machines in the Virtual Machine Scale Set. For instance: whether the Virtual Machines have the capability to support attaching managed data disks with UltraSSD_LRS storage account type. */\n  additionalCapabilities?: AdditionalCapabilities;\n  /** Specifies the policies applied when scaling in Virtual Machines in the Virtual Machine Scale Set. */\n  scaleInPolicy?: ScaleInPolicy;\n  /** Specifies the orchestration mode for the virtual machine scale set. */\n  orchestrationMode?: OrchestrationMode;\n  /** Specifies the Spot Restore properties for the virtual machine scale set. */\n  spotRestorePolicy?: SpotRestorePolicy;\n  /**\n   * Specifies the time at which the Virtual Machine Scale Set resource was created.<br><br>Minimum api-version: 2021-11-01.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly timeCreated?: Date;\n};\n\n/** The source user image virtual hard disk. The virtual hard disk will be copied before being attached to the virtual machine. If SourceImage is provided, the destination virtual hard drive must not exist. */\nexport type Image = Resource & {\n  /** The extended location of the Image. */\n  extendedLocation?: ExtendedLocation;\n  /** The source virtual machine from which Image is created. */\n  sourceVirtualMachine?: SubResource;\n  /** Specifies the storage settings for the virtual machine disks. */\n  storageProfile?: ImageStorageProfile;\n  /**\n   * The provisioning state.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly provisioningState?: string;\n  /** Specifies the HyperVGenerationType of the VirtualMachine created from the image. From API Version 2019-03-01 if the image source is a blob, then we need the user to specify the value, if the source is managed resource like disk or snapshot, we may require the user to specify the property if we cannot deduce it from the source managed resource. */\n  hyperVGeneration?: HyperVGenerationTypes;\n};\n\n/** Create or update Restore Point collection parameters. */\nexport type RestorePointCollection = Resource & {\n  /** The properties of the source resource that this restore point collection is created from. */\n  source?: RestorePointCollectionSourceProperties;\n  /**\n   * The provisioning state of the restore point collection.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly provisioningState?: string;\n  /**\n   * The unique id of the restore point collection.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly restorePointCollectionId?: string;\n  /**\n   * A list containing all restore points created under this restore point collection.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly restorePoints?: RestorePoint[];\n};\n\n/** Specifies information about the capacity reservation group that the capacity reservations should be assigned to. <br><br> Currently, a capacity reservation can only be added to a capacity reservation group at creation time. An existing capacity reservation cannot be added or moved to another capacity reservation group. */\nexport type CapacityReservationGroup = Resource & {\n  /** Availability Zones to use for this capacity reservation group. The zones can be assigned only during creation. If not provided, the group supports only regional resources in the region. If provided, enforces each capacity reservation in the group to be in one of the zones. */\n  zones?: string[];\n  /**\n   * A list of all capacity reservation resource ids that belong to capacity reservation group.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly capacityReservations?: SubResourceReadOnly[];\n  /**\n   * A list of references to all virtual machines associated to the capacity reservation group.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly virtualMachinesAssociated?: SubResourceReadOnly[];\n  /**\n   * The capacity reservation group instance view which has the list of instance views for all the capacity reservations that belong to the capacity reservation group.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly instanceView?: CapacityReservationGroupInstanceView;\n};\n\n/** Specifies information about the capacity reservation. */\nexport type CapacityReservation = Resource & {\n  /** SKU of the resource for which capacity needs be reserved. The SKU name and capacity is required to be set. Currently VM Skus with the capability called 'CapacityReservationSupported' set to true are supported. Refer to List Microsoft.Compute SKUs in a region (https://docs.microsoft.com/rest/api/compute/resourceskus/list) for supported values. */\n  sku: Sku;\n  /** Availability Zone to use for this capacity reservation. The zone has to be single value and also should be part for the list of zones specified during the capacity reservation group creation. The zone can be assigned only during creation. If not provided, the reservation supports only non-zonal deployments. If provided, enforces VM/VMSS using this capacity reservation to be in same zone. */\n  zones?: string[];\n  /**\n   * A unique id generated and assigned to the capacity reservation by the platform which does not change throughout the lifetime of the resource.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly reservationId?: string;\n  /**\n   * A list of all virtual machine resource ids that are associated with the capacity reservation.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly virtualMachinesAssociated?: SubResourceReadOnly[];\n  /**\n   * The date time when the capacity reservation was last updated.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly provisioningTime?: Date;\n  /**\n   * The provisioning state, which only appears in the response.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly provisioningState?: string;\n  /**\n   * The Capacity reservation instance view.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly instanceView?: CapacityReservationInstanceView;\n  /**\n   * Specifies the time at which the Capacity Reservation resource was created.<br><br>Minimum api-version: 2021-11-01.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly timeCreated?: Date;\n};\n\n/** The status of the latest virtual machine scale set rolling upgrade. */\nexport type RollingUpgradeStatusInfo = Resource & {\n  /**\n   * The rolling upgrade policies applied for this upgrade.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly policy?: RollingUpgradePolicy;\n  /**\n   * Information about the current running state of the overall upgrade.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly runningStatus?: RollingUpgradeRunningStatus;\n  /**\n   * Information about the number of virtual machine instances in each upgrade state.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly progress?: RollingUpgradeProgressInfo;\n  /**\n   * Error details for this upgrade, if there are any.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly error?: ApiError;\n};\n\n/** Describes a virtual machine scale set virtual machine. */\nexport type VirtualMachineScaleSetVM = Resource & {\n  /**\n   * The virtual machine instance ID.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly instanceId?: string;\n  /**\n   * The virtual machine SKU.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly sku?: Sku;\n  /** Specifies information about the marketplace image used to create the virtual machine. This element is only used for marketplace images. Before you can use a marketplace image from an API, you must enable the image for programmatic use.  In the Azure portal, find the marketplace image that you want to use and then click **Want to deploy programmatically, Get Started ->**. Enter any required information and then click **Save**. */\n  plan?: Plan;\n  /**\n   * The virtual machine child extension resources.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly resources?: VirtualMachineExtension[];\n  /**\n   * The virtual machine zones.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly zones?: string[];\n  /**\n   * Specifies whether the latest model has been applied to the virtual machine.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly latestModelApplied?: boolean;\n  /**\n   * Azure VM unique ID.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly vmId?: string;\n  /**\n   * The virtual machine instance view.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly instanceView?: VirtualMachineScaleSetVMInstanceView;\n  /** Specifies the hardware settings for the virtual machine. */\n  hardwareProfile?: HardwareProfile;\n  /** Specifies the storage settings for the virtual machine disks. */\n  storageProfile?: StorageProfile;\n  /** Specifies additional capabilities enabled or disabled on the virtual machine in the scale set. For instance: whether the virtual machine has the capability to support attaching managed data disks with UltraSSD_LRS storage account type. */\n  additionalCapabilities?: AdditionalCapabilities;\n  /** Specifies the operating system settings for the virtual machine. */\n  osProfile?: OSProfile;\n  /** Specifies the Security related profile settings for the virtual machine. */\n  securityProfile?: SecurityProfile;\n  /** Specifies the network interfaces of the virtual machine. */\n  networkProfile?: NetworkProfile;\n  /** Specifies the network profile configuration of the virtual machine. */\n  networkProfileConfiguration?: VirtualMachineScaleSetVMNetworkProfileConfiguration;\n  /** Specifies the boot diagnostic settings state. <br><br>Minimum api-version: 2015-06-15. */\n  diagnosticsProfile?: DiagnosticsProfile;\n  /** Specifies information about the availability set that the virtual machine should be assigned to. Virtual machines specified in the same availability set are allocated to different nodes to maximize availability. For more information about availability sets, see [Availability sets overview](https://docs.microsoft.com/azure/virtual-machines/availability-set-overview). <br><br> For more information on Azure planned maintenance, see [Maintenance and updates for Virtual Machines in Azure](https://docs.microsoft.com/azure/virtual-machines/maintenance-and-updates) <br><br> Currently, a VM can only be added to availability set at creation time. An existing VM cannot be added to an availability set. */\n  availabilitySet?: SubResource;\n  /**\n   * The provisioning state, which only appears in the response.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly provisioningState?: string;\n  /** Specifies that the image or disk that is being used was licensed on-premises. <br><br> Possible values for Windows Server operating system are: <br><br> Windows_Client <br><br> Windows_Server <br><br> Possible values for Linux Server operating system are: <br><br> RHEL_BYOS (for RHEL) <br><br> SLES_BYOS (for SUSE) <br><br> For more information, see [Azure Hybrid Use Benefit for Windows Server](https://docs.microsoft.com/azure/virtual-machines/windows/hybrid-use-benefit-licensing) <br><br> [Azure Hybrid Use Benefit for Linux Server](https://docs.microsoft.com/azure/virtual-machines/linux/azure-hybrid-benefit-linux) <br><br> Minimum api-version: 2015-06-15 */\n  licenseType?: string;\n  /**\n   * Specifies whether the model applied to the virtual machine is the model of the virtual machine scale set or the customized model for the virtual machine.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly modelDefinitionApplied?: string;\n  /** Specifies the protection policy of the virtual machine. */\n  protectionPolicy?: VirtualMachineScaleSetVMProtectionPolicy;\n  /** UserData for the VM, which must be base-64 encoded. Customer should not pass any secrets in here. <br><br>Minimum api-version: 2021-03-01 */\n  userData?: string;\n};\n\n/** Describes a Virtual Machine run command. */\nexport type VirtualMachineRunCommand = Resource & {\n  /** The source of the run command script. */\n  source?: VirtualMachineRunCommandScriptSource;\n  /** The parameters used by the script. */\n  parameters?: RunCommandInputParameter[];\n  /** The parameters used by the script. */\n  protectedParameters?: RunCommandInputParameter[];\n  /** Optional. If set to true, provisioning will complete as soon as the script starts and will not wait for script to complete. */\n  asyncExecution?: boolean;\n  /** Specifies the user account on the VM when executing the run command. */\n  runAsUser?: string;\n  /** Specifies the user account password on the VM when executing the run command. */\n  runAsPassword?: string;\n  /** The timeout in seconds to execute the run command. */\n  timeoutInSeconds?: number;\n  /** Specifies the Azure storage blob where script output stream will be uploaded. */\n  outputBlobUri?: string;\n  /** Specifies the Azure storage blob where script error stream will be uploaded. */\n  errorBlobUri?: string;\n  /**\n   * The provisioning state, which only appears in the response.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly provisioningState?: string;\n  /**\n   * The virtual machine run command instance view.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly instanceView?: VirtualMachineRunCommandInstanceView;\n};\n\n/** Disk resource. */\nexport type Disk = Resource & {\n  /**\n   * A relative URI containing the ID of the VM that has the disk attached.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly managedBy?: string;\n  /**\n   * List of relative URIs containing the IDs of the VMs that have the disk attached. maxShares should be set to a value greater than one for disks to allow attaching them to multiple VMs.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly managedByExtended?: string[];\n  /** The disks sku name. Can be Standard_LRS, Premium_LRS, StandardSSD_LRS, UltraSSD_LRS, Premium_ZRS, or StandardSSD_ZRS. */\n  sku?: DiskSku;\n  /** The Logical zone list for Disk. */\n  zones?: string[];\n  /** The extended location where the disk will be created. Extended location cannot be changed. */\n  extendedLocation?: ExtendedLocation;\n  /**\n   * The time when the disk was created.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly timeCreated?: Date;\n  /** The Operating System type. */\n  osType?: OperatingSystemTypes;\n  /** The hypervisor generation of the Virtual Machine. Applicable to OS disks only. */\n  hyperVGeneration?: HyperVGeneration;\n  /** Purchase plan information for the the image from which the OS disk was created. E.g. - {name: 2019-Datacenter, publisher: MicrosoftWindowsServer, product: WindowsServer} */\n  purchasePlan?: PurchasePlanAutoGenerated;\n  /** List of supported capabilities for the image from which the OS disk was created. */\n  supportedCapabilities?: SupportedCapabilities;\n  /** Disk source information. CreationData information cannot be changed after the disk has been created. */\n  creationData?: CreationData;\n  /** If creationData.createOption is Empty, this field is mandatory and it indicates the size of the disk to create. If this field is present for updates or creation with other options, it indicates a resize. Resizes are only allowed if the disk is not attached to a running VM, and can only increase the disk's size. */\n  diskSizeGB?: number;\n  /**\n   * The size of the disk in bytes. This field is read only.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly diskSizeBytes?: number;\n  /**\n   * Unique Guid identifying the resource.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly uniqueId?: string;\n  /** Encryption settings collection used for Azure Disk Encryption, can contain multiple encryption settings per disk or snapshot. */\n  encryptionSettingsCollection?: EncryptionSettingsCollection;\n  /**\n   * The disk provisioning state.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly provisioningState?: string;\n  /** The number of IOPS allowed for this disk; only settable for UltraSSD disks. One operation can transfer between 4k and 256k bytes. */\n  diskIopsReadWrite?: number;\n  /** The bandwidth allowed for this disk; only settable for UltraSSD disks. MBps means millions of bytes per second - MB here uses the ISO notation, of powers of 10. */\n  diskMBpsReadWrite?: number;\n  /** The total number of IOPS that will be allowed across all VMs mounting the shared disk as ReadOnly. One operation can transfer between 4k and 256k bytes. */\n  diskIopsReadOnly?: number;\n  /** The total throughput (MBps) that will be allowed across all VMs mounting the shared disk as ReadOnly. MBps means millions of bytes per second - MB here uses the ISO notation, of powers of 10. */\n  diskMBpsReadOnly?: number;\n  /**\n   * The state of the disk.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly diskState?: DiskState;\n  /** Encryption property can be used to encrypt data at rest with customer managed keys or platform managed keys. */\n  encryption?: Encryption;\n  /** The maximum number of VMs that can attach to the disk at the same time. Value greater than one indicates a disk that can be mounted on multiple VMs at the same time. */\n  maxShares?: number;\n  /**\n   * Details of the list of all VMs that have the disk attached. maxShares should be set to a value greater than one for disks to allow attaching them to multiple VMs.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly shareInfo?: ShareInfoElement[];\n  /** Policy for accessing the disk via network. */\n  networkAccessPolicy?: NetworkAccessPolicy;\n  /** ARM id of the DiskAccess resource for using private endpoints on disks. */\n  diskAccessId?: string;\n  /** Performance tier of the disk (e.g, P4, S10) as described here: https://azure.microsoft.com/en-us/pricing/details/managed-disks/. Does not apply to Ultra disks. */\n  tier?: string;\n  /** Set to true to enable bursting beyond the provisioned performance target of the disk. Bursting is disabled by default. Does not apply to Ultra disks. */\n  burstingEnabled?: boolean;\n  /**\n   * Properties of the disk for which update is pending.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly propertyUpdatesInProgress?: PropertyUpdatesInProgress;\n  /** Indicates the OS on a disk supports hibernation. */\n  supportsHibernation?: boolean;\n  /** Contains the security related information for the resource. */\n  securityProfile?: DiskSecurityProfile;\n  /** Percentage complete for the background copy when a resource is created via the CopyStart operation. */\n  completionPercent?: number;\n  /** Policy for controlling export on the disk. */\n  publicNetworkAccess?: PublicNetworkAccess;\n};\n\n/** Snapshot resource. */\nexport type Snapshot = Resource & {\n  /**\n   * Unused. Always Null.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly managedBy?: string;\n  /** The snapshots sku name. Can be Standard_LRS, Premium_LRS, or Standard_ZRS. This is an optional parameter for incremental snapshot and the default behavior is the SKU will be set to the same sku as the previous snapshot */\n  sku?: SnapshotSku;\n  /** The extended location where the snapshot will be created. Extended location cannot be changed. */\n  extendedLocation?: ExtendedLocation;\n  /**\n   * The time when the snapshot was created.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly timeCreated?: Date;\n  /** The Operating System type. */\n  osType?: OperatingSystemTypes;\n  /** The hypervisor generation of the Virtual Machine. Applicable to OS disks only. */\n  hyperVGeneration?: HyperVGeneration;\n  /** Purchase plan information for the image from which the source disk for the snapshot was originally created. */\n  purchasePlan?: PurchasePlanAutoGenerated;\n  /** List of supported capabilities (like Accelerated Networking) for the image from which the source disk from the snapshot was originally created. */\n  supportedCapabilities?: SupportedCapabilities;\n  /** Disk source information. CreationData information cannot be changed after the disk has been created. */\n  creationData?: CreationData;\n  /** If creationData.createOption is Empty, this field is mandatory and it indicates the size of the disk to create. If this field is present for updates or creation with other options, it indicates a resize. Resizes are only allowed if the disk is not attached to a running VM, and can only increase the disk's size. */\n  diskSizeGB?: number;\n  /**\n   * The size of the disk in bytes. This field is read only.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly diskSizeBytes?: number;\n  /**\n   * The state of the snapshot.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly diskState?: DiskState;\n  /**\n   * Unique Guid identifying the resource.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly uniqueId?: string;\n  /** Encryption settings collection used be Azure Disk Encryption, can contain multiple encryption settings per disk or snapshot. */\n  encryptionSettingsCollection?: EncryptionSettingsCollection;\n  /**\n   * The disk provisioning state.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly provisioningState?: string;\n  /** Whether a snapshot is incremental. Incremental snapshots on the same disk occupy less space than full snapshots and can be diffed. */\n  incremental?: boolean;\n  /** Encryption property can be used to encrypt data at rest with customer managed keys or platform managed keys. */\n  encryption?: Encryption;\n  /** Policy for accessing the disk via network. */\n  networkAccessPolicy?: NetworkAccessPolicy;\n  /** ARM id of the DiskAccess resource for using private endpoints on disks. */\n  diskAccessId?: string;\n  /** Contains the security related information for the resource. */\n  securityProfile?: DiskSecurityProfile;\n  /** Indicates the OS on a snapshot supports hibernation. */\n  supportsHibernation?: boolean;\n  /** Policy for controlling export on the disk. */\n  publicNetworkAccess?: PublicNetworkAccess;\n  /** Percentage complete for the background copy when a resource is created via the CopyStart operation. */\n  completionPercent?: number;\n};\n\n/** disk encryption set resource. */\nexport type DiskEncryptionSet = Resource & {\n  /** The managed identity for the disk encryption set. It should be given permission on the key vault before it can be used to encrypt disks. */\n  identity?: EncryptionSetIdentity;\n  /** The type of key used to encrypt the data of the disk. */\n  encryptionType?: DiskEncryptionSetType;\n  /** The key vault key which is currently used by this disk encryption set. */\n  activeKey?: KeyForDiskEncryptionSet;\n  /**\n   * A readonly collection of key vault keys previously used by this disk encryption set while a key rotation is in progress. It will be empty if there is no ongoing key rotation.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly previousKeys?: KeyForDiskEncryptionSet[];\n  /**\n   * The disk encryption set provisioning state.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly provisioningState?: string;\n  /** Set this flag to true to enable auto-updating of this disk encryption set to the latest key version. */\n  rotationToLatestKeyVersionEnabled?: boolean;\n  /**\n   * The time when the active key of this disk encryption set was updated.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly lastKeyRotationTimestamp?: Date;\n  /**\n   * The error that was encountered during auto-key rotation. If an error is present, then auto-key rotation will not be attempted until the error on this disk encryption set is fixed.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly autoKeyRotationError?: ApiError;\n};\n\n/** disk access resource. */\nexport type DiskAccess = Resource & {\n  /** The extended location where the disk access will be created. Extended location cannot be changed. */\n  extendedLocation?: ExtendedLocation;\n  /**\n   * A readonly collection of private endpoint connections created on the disk. Currently only one endpoint connection is supported.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly privateEndpointConnections?: PrivateEndpointConnection[];\n  /**\n   * The disk access resource provisioning state.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly provisioningState?: string;\n  /**\n   * The time when the disk access was created.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly timeCreated?: Date;\n};\n\n/** Specifies information about the Shared Image Gallery that you want to create or update. */\nexport type Gallery = Resource & {\n  /** The description of this Shared Image Gallery resource. This property is updatable. */\n  description?: string;\n  /** Describes the gallery unique name. */\n  identifier?: GalleryIdentifier;\n  /**\n   * The provisioning state, which only appears in the response.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly provisioningState?: GalleryPropertiesProvisioningState;\n  /** Profile for gallery sharing to subscription or tenant */\n  sharingProfile?: SharingProfile;\n  /** Contains information about the soft deletion policy of the gallery. */\n  softDeletePolicy?: SoftDeletePolicy;\n  /**\n   * Sharing status of current gallery.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly sharingStatus?: SharingStatus;\n};\n\n/** Specifies information about the gallery image definition that you want to create or update. */\nexport type GalleryImage = Resource & {\n  /** The description of this gallery image definition resource. This property is updatable. */\n  description?: string;\n  /** The Eula agreement for the gallery image definition. */\n  eula?: string;\n  /** The privacy statement uri. */\n  privacyStatementUri?: string;\n  /** The release note uri. */\n  releaseNoteUri?: string;\n  /** This property allows you to specify the type of the OS that is included in the disk when creating a VM from a managed image. <br><br> Possible values are: <br><br> **Windows** <br><br> **Linux** */\n  osType?: OperatingSystemTypes;\n  /** This property allows the user to specify whether the virtual machines created under this image are 'Generalized' or 'Specialized'. */\n  osState?: OperatingSystemStateTypes;\n  /** The hypervisor generation of the Virtual Machine. Applicable to OS disks only. */\n  hyperVGeneration?: HyperVGeneration;\n  /** The end of life date of the gallery image definition. This property can be used for decommissioning purposes. This property is updatable. */\n  endOfLifeDate?: Date;\n  /** This is the gallery image definition identifier. */\n  identifier?: GalleryImageIdentifier;\n  /** The properties describe the recommended machine configuration for this Image Definition. These properties are updatable. */\n  recommended?: RecommendedMachineConfiguration;\n  /** Describes the disallowed disk types. */\n  disallowed?: Disallowed;\n  /** Describes the gallery image definition purchase plan. This is used by marketplace images. */\n  purchasePlan?: ImagePurchasePlan;\n  /**\n   * The provisioning state, which only appears in the response.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly provisioningState?: GalleryImagePropertiesProvisioningState;\n  /** A list of gallery image features. */\n  features?: GalleryImageFeature[];\n};\n\n/** Specifies information about the gallery image version that you want to create or update. */\nexport type GalleryImageVersion = Resource & {\n  /** The publishing profile of a gallery image Version. */\n  publishingProfile?: GalleryImageVersionPublishingProfile;\n  /**\n   * The provisioning state, which only appears in the response.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly provisioningState?: GalleryImageVersionPropertiesProvisioningState;\n  /** This is the storage profile of a Gallery Image Version. */\n  storageProfile?: GalleryImageVersionStorageProfile;\n  /**\n   * This is the replication status of the gallery image version.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly replicationStatus?: ReplicationStatus;\n};\n\n/** Specifies information about the gallery Application Definition that you want to create or update. */\nexport type GalleryApplication = Resource & {\n  /** The description of this gallery Application Definition resource. This property is updatable. */\n  description?: string;\n  /** The Eula agreement for the gallery Application Definition. */\n  eula?: string;\n  /** The privacy statement uri. */\n  privacyStatementUri?: string;\n  /** The release note uri. */\n  releaseNoteUri?: string;\n  /** The end of life date of the gallery Application Definition. This property can be used for decommissioning purposes. This property is updatable. */\n  endOfLifeDate?: Date;\n  /** This property allows you to specify the supported type of the OS that application is built for. <br><br> Possible values are: <br><br> **Windows** <br><br> **Linux** */\n  supportedOSType?: OperatingSystemTypes;\n};\n\n/** Specifies information about the gallery Application Version that you want to create or update. */\nexport type GalleryApplicationVersion = Resource & {\n  /** The publishing profile of a gallery image version. */\n  publishingProfile?: GalleryApplicationVersionPublishingProfile;\n  /**\n   * The provisioning state, which only appears in the response.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly provisioningState?: GalleryApplicationVersionPropertiesProvisioningState;\n  /**\n   * This is the replication status of the gallery image version.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly replicationStatus?: ReplicationStatus;\n};\n\n/** Specifies information about the availability set that the virtual machine should be assigned to. Only tags may be updated. */\nexport type AvailabilitySetUpdate = UpdateResource & {\n  /** Sku of the availability set */\n  sku?: Sku;\n  /** Update Domain count. */\n  platformUpdateDomainCount?: number;\n  /** Fault Domain count. */\n  platformFaultDomainCount?: number;\n  /** A list of references to all virtual machines in the availability set. */\n  virtualMachines?: SubResource[];\n  /** Specifies information about the proximity placement group that the availability set should be assigned to. <br><br>Minimum api-version: 2018-04-01. */\n  proximityPlacementGroup?: SubResource;\n  /**\n   * The resource status information.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly statuses?: InstanceViewStatus[];\n};\n\n/** Specifies information about the proximity placement group. */\nexport type ProximityPlacementGroupUpdate = UpdateResource & {};\n\n/** Specifies information about the dedicated host group that the dedicated host should be assigned to. Only tags may be updated. */\nexport type DedicatedHostGroupUpdate = UpdateResource & {\n  /** Availability Zone to use for this host group. Only single zone is supported. The zone can be assigned only during creation. If not provided, the group supports all zones in the region. If provided, enforces each host in the group to be in the same zone. */\n  zones?: string[];\n  /** Number of fault domains that the host group can span. */\n  platformFaultDomainCount?: number;\n  /**\n   * A list of references to all dedicated hosts in the dedicated host group.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly hosts?: SubResourceReadOnly[];\n  /**\n   * The dedicated host group instance view, which has the list of instance view of the dedicated hosts under the dedicated host group.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly instanceView?: DedicatedHostGroupInstanceView;\n  /** Specifies whether virtual machines or virtual machine scale sets can be placed automatically on the dedicated host group. Automatic placement means resources are allocated on dedicated hosts, that are chosen by Azure, under the dedicated host group. The value is defaulted to 'false' when not provided. <br><br>Minimum api-version: 2020-06-01. */\n  supportAutomaticPlacement?: boolean;\n};\n\n/** Specifies information about the dedicated host. Only tags, autoReplaceOnFailure and licenseType may be updated. */\nexport type DedicatedHostUpdate = UpdateResource & {\n  /** Fault domain of the dedicated host within a dedicated host group. */\n  platformFaultDomain?: number;\n  /** Specifies whether the dedicated host should be replaced automatically in case of a failure. The value is defaulted to 'true' when not provided. */\n  autoReplaceOnFailure?: boolean;\n  /**\n   * A unique id generated and assigned to the dedicated host by the platform. <br><br> Does not change throughout the lifetime of the host.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly hostId?: string;\n  /**\n   * A list of references to all virtual machines in the Dedicated Host.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly virtualMachines?: SubResourceReadOnly[];\n  /** Specifies the software license type that will be applied to the VMs deployed on the dedicated host. <br><br> Possible values are: <br><br> **None** <br><br> **Windows_Server_Hybrid** <br><br> **Windows_Server_Perpetual** <br><br> Default: **None** */\n  licenseType?: DedicatedHostLicenseTypes;\n  /**\n   * The date when the host was first provisioned.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly provisioningTime?: Date;\n  /**\n   * The provisioning state, which only appears in the response.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly provisioningState?: string;\n  /**\n   * The dedicated host instance view.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly instanceView?: DedicatedHostInstanceView;\n  /**\n   * Specifies the time at which the Dedicated Host resource was created.<br><br>Minimum api-version: 2021-11-01.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly timeCreated?: Date;\n};\n\n/** Specifies information about the SSH public key. */\nexport type SshPublicKeyUpdateResource = UpdateResource & {\n  /** SSH public key used to authenticate to a virtual machine through ssh. If this property is not initially provided when the resource is created, the publicKey property will be populated when generateKeyPair is called. If the public key is provided upon resource creation, the provided public key needs to be at least 2048-bit and in ssh-rsa format. */\n  publicKey?: string;\n};\n\n/** Describes a Virtual Machine Extension. */\nexport type VirtualMachineExtensionUpdate = UpdateResource & {\n  /** How the extension handler should be forced to update even if the extension configuration has not changed. */\n  forceUpdateTag?: string;\n  /** The name of the extension handler publisher. */\n  publisher?: string;\n  /** Specifies the type of the extension; an example is \"CustomScriptExtension\". */\n  type?: string;\n  /** Specifies the version of the script handler. */\n  typeHandlerVersion?: string;\n  /** Indicates whether the extension should use a newer minor version if one is available at deployment time. Once deployed, however, the extension will not upgrade minor versions unless redeployed, even with this property set to true. */\n  autoUpgradeMinorVersion?: boolean;\n  /** Indicates whether the extension should be automatically upgraded by the platform if there is a newer version of the extension available. */\n  enableAutomaticUpgrade?: boolean;\n  /** Json formatted public settings for the extension. */\n  settings?: Record<string, unknown>;\n  /** The extension can contain either protectedSettings or protectedSettingsFromKeyVault or no protected settings at all. */\n  protectedSettings?: Record<string, unknown>;\n  /** Indicates whether failures stemming from the extension will be suppressed (Operational failures such as not connecting to the VM will not be suppressed regardless of this value). The default is false. */\n  suppressFailures?: boolean;\n  /** The extensions protected settings that are passed by reference, and consumed from key vault */\n  protectedSettingsFromKeyVault?: Record<string, unknown>;\n};\n\n/** The source user image virtual hard disk. Only tags may be updated. */\nexport type ImageUpdate = UpdateResource & {\n  /** The source virtual machine from which Image is created. */\n  sourceVirtualMachine?: SubResource;\n  /** Specifies the storage settings for the virtual machine disks. */\n  storageProfile?: ImageStorageProfile;\n  /**\n   * The provisioning state.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly provisioningState?: string;\n  /** Specifies the HyperVGenerationType of the VirtualMachine created from the image. From API Version 2019-03-01 if the image source is a blob, then we need the user to specify the value, if the source is managed resource like disk or snapshot, we may require the user to specify the property if we cannot deduce it from the source managed resource. */\n  hyperVGeneration?: HyperVGenerationTypes;\n};\n\n/** Describes a Virtual Machine Update. */\nexport type VirtualMachineUpdate = UpdateResource & {\n  /** Specifies information about the marketplace image used to create the virtual machine. This element is only used for marketplace images. Before you can use a marketplace image from an API, you must enable the image for programmatic use.  In the Azure portal, find the marketplace image that you want to use and then click **Want to deploy programmatically, Get Started ->**. Enter any required information and then click **Save**. */\n  plan?: Plan;\n  /** The identity of the virtual machine, if configured. */\n  identity?: VirtualMachineIdentity;\n  /** The virtual machine zones. */\n  zones?: string[];\n  /** Specifies the hardware settings for the virtual machine. */\n  hardwareProfile?: HardwareProfile;\n  /** Specifies the storage settings for the virtual machine disks. */\n  storageProfile?: StorageProfile;\n  /** Specifies additional capabilities enabled or disabled on the virtual machine. */\n  additionalCapabilities?: AdditionalCapabilities;\n  /** Specifies the operating system settings used while creating the virtual machine. Some of the settings cannot be changed once VM is provisioned. */\n  osProfile?: OSProfile;\n  /** Specifies the network interfaces of the virtual machine. */\n  networkProfile?: NetworkProfile;\n  /** Specifies the Security related profile settings for the virtual machine. */\n  securityProfile?: SecurityProfile;\n  /** Specifies the boot diagnostic settings state. <br><br>Minimum api-version: 2015-06-15. */\n  diagnosticsProfile?: DiagnosticsProfile;\n  /** Specifies information about the availability set that the virtual machine should be assigned to. Virtual machines specified in the same availability set are allocated to different nodes to maximize availability. For more information about availability sets, see [Availability sets overview](https://docs.microsoft.com/azure/virtual-machines/availability-set-overview). <br><br> For more information on Azure planned maintenance, see [Maintenance and updates for Virtual Machines in Azure](https://docs.microsoft.com/azure/virtual-machines/maintenance-and-updates) <br><br> Currently, a VM can only be added to availability set at creation time. The availability set to which the VM is being added should be under the same resource group as the availability set resource. An existing VM cannot be added to an availability set. <br><br>This property cannot exist along with a non-null properties.virtualMachineScaleSet reference. */\n  availabilitySet?: SubResource;\n  /** Specifies information about the virtual machine scale set that the virtual machine should be assigned to. Virtual machines specified in the same virtual machine scale set are allocated to different nodes to maximize availability. Currently, a VM can only be added to virtual machine scale set at creation time. An existing VM cannot be added to a virtual machine scale set. <br><br>This property cannot exist along with a non-null properties.availabilitySet reference. <br><br>Minimum api‐version: 2019‐03‐01 */\n  virtualMachineScaleSet?: SubResource;\n  /** Specifies information about the proximity placement group that the virtual machine should be assigned to. <br><br>Minimum api-version: 2018-04-01. */\n  proximityPlacementGroup?: SubResource;\n  /** Specifies the priority for the virtual machine. <br><br>Minimum api-version: 2019-03-01 */\n  priority?: VirtualMachinePriorityTypes;\n  /** Specifies the eviction policy for the Azure Spot virtual machine and Azure Spot scale set. <br><br>For Azure Spot virtual machines, both 'Deallocate' and 'Delete' are supported and the minimum api-version is 2019-03-01. <br><br>For Azure Spot scale sets, both 'Deallocate' and 'Delete' are supported and the minimum api-version is 2017-10-30-preview. */\n  evictionPolicy?: VirtualMachineEvictionPolicyTypes;\n  /** Specifies the billing related details of a Azure Spot virtual machine. <br><br>Minimum api-version: 2019-03-01. */\n  billingProfile?: BillingProfile;\n  /** Specifies information about the dedicated host that the virtual machine resides in. <br><br>Minimum api-version: 2018-10-01. */\n  host?: SubResource;\n  /** Specifies information about the dedicated host group that the virtual machine resides in. <br><br>Minimum api-version: 2020-06-01. <br><br>NOTE: User cannot specify both host and hostGroup properties. */\n  hostGroup?: SubResource;\n  /**\n   * The provisioning state, which only appears in the response.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly provisioningState?: string;\n  /**\n   * The virtual machine instance view.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly instanceView?: VirtualMachineInstanceView;\n  /** Specifies that the image or disk that is being used was licensed on-premises. <br><br> Possible values for Windows Server operating system are: <br><br> Windows_Client <br><br> Windows_Server <br><br> Possible values for Linux Server operating system are: <br><br> RHEL_BYOS (for RHEL) <br><br> SLES_BYOS (for SUSE) <br><br> For more information, see [Azure Hybrid Use Benefit for Windows Server](https://docs.microsoft.com/azure/virtual-machines/windows/hybrid-use-benefit-licensing) <br><br> [Azure Hybrid Use Benefit for Linux Server](https://docs.microsoft.com/azure/virtual-machines/linux/azure-hybrid-benefit-linux) <br><br> Minimum api-version: 2015-06-15 */\n  licenseType?: string;\n  /**\n   * Specifies the VM unique ID which is a 128-bits identifier that is encoded and stored in all Azure IaaS VMs SMBIOS and can be read using platform BIOS commands.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly vmId?: string;\n  /** Specifies the time alloted for all extensions to start. The time duration should be between 15 minutes and 120 minutes (inclusive) and should be specified in ISO 8601 format. The default value is 90 minutes (PT1H30M). <br><br> Minimum api-version: 2020-06-01 */\n  extensionsTimeBudget?: string;\n  /** Specifies the scale set logical fault domain into which the Virtual Machine will be created. By default, the Virtual Machine will by automatically assigned to a fault domain that best maintains balance across available fault domains.<br><li>This is applicable only if the 'virtualMachineScaleSet' property of this Virtual Machine is set.<li>The Virtual Machine Scale Set that is referenced, must have 'platformFaultDomainCount' &gt; 1.<li>This property cannot be updated once the Virtual Machine is created.<li>Fault domain assignment can be viewed in the Virtual Machine Instance View.<br><br>Minimum api‐version: 2020‐12‐01 */\n  platformFaultDomain?: number;\n  /** Specifies Scheduled Event related configurations. */\n  scheduledEventsProfile?: ScheduledEventsProfile;\n  /** UserData for the VM, which must be base-64 encoded. Customer should not pass any secrets in here. <br><br>Minimum api-version: 2021-03-01 */\n  userData?: string;\n  /** Specifies information about the capacity reservation that is used to allocate virtual machine. <br><br>Minimum api-version: 2021-04-01. */\n  capacityReservation?: CapacityReservationProfile;\n  /** Specifies the gallery applications that should be made available to the VM/VMSS */\n  applicationProfile?: ApplicationProfile;\n  /**\n   * Specifies the time at which the Virtual Machine resource was created.<br><br>Minimum api-version: 2021-11-01.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly timeCreated?: Date;\n};\n\n/** Update Restore Point collection parameters. */\nexport type RestorePointCollectionUpdate = UpdateResource & {\n  /** The properties of the source resource that this restore point collection is created from. */\n  source?: RestorePointCollectionSourceProperties;\n  /**\n   * The provisioning state of the restore point collection.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly provisioningState?: string;\n  /**\n   * The unique id of the restore point collection.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly restorePointCollectionId?: string;\n  /**\n   * A list containing all restore points created under this restore point collection.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly restorePoints?: RestorePoint[];\n};\n\n/** Specifies information about the capacity reservation group. Only tags can be updated. */\nexport type CapacityReservationGroupUpdate = UpdateResource & {\n  /**\n   * A list of all capacity reservation resource ids that belong to capacity reservation group.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly capacityReservations?: SubResourceReadOnly[];\n  /**\n   * A list of references to all virtual machines associated to the capacity reservation group.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly virtualMachinesAssociated?: SubResourceReadOnly[];\n  /**\n   * The capacity reservation group instance view which has the list of instance views for all the capacity reservations that belong to the capacity reservation group.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly instanceView?: CapacityReservationGroupInstanceView;\n};\n\n/** Specifies information about the capacity reservation. Only tags and sku.capacity can be updated. */\nexport type CapacityReservationUpdate = UpdateResource & {\n  /** SKU of the resource for which capacity needs be reserved. The SKU name and capacity is required to be set. Currently VM Skus with the capability called 'CapacityReservationSupported' set to true are supported. Refer to List Microsoft.Compute SKUs in a region (https://docs.microsoft.com/rest/api/compute/resourceskus/list) for supported values. */\n  sku?: Sku;\n  /**\n   * A unique id generated and assigned to the capacity reservation by the platform which does not change throughout the lifetime of the resource.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly reservationId?: string;\n  /**\n   * A list of all virtual machine resource ids that are associated with the capacity reservation.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly virtualMachinesAssociated?: SubResourceReadOnly[];\n  /**\n   * The date time when the capacity reservation was last updated.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly provisioningTime?: Date;\n  /**\n   * The provisioning state, which only appears in the response.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly provisioningState?: string;\n  /**\n   * The Capacity reservation instance view.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly instanceView?: CapacityReservationInstanceView;\n  /**\n   * Specifies the time at which the Capacity Reservation resource was created.<br><br>Minimum api-version: 2021-11-01.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly timeCreated?: Date;\n};\n\n/** Describes a Virtual Machine Scale Set. */\nexport type VirtualMachineScaleSetUpdate = UpdateResource & {\n  /** The virtual machine scale set sku. */\n  sku?: Sku;\n  /** The purchase plan when deploying a virtual machine scale set from VM Marketplace images. */\n  plan?: Plan;\n  /** The identity of the virtual machine scale set, if configured. */\n  identity?: VirtualMachineScaleSetIdentity;\n  /** The upgrade policy. */\n  upgradePolicy?: UpgradePolicy;\n  /** Policy for automatic repairs. */\n  automaticRepairsPolicy?: AutomaticRepairsPolicy;\n  /** The virtual machine profile. */\n  virtualMachineProfile?: VirtualMachineScaleSetUpdateVMProfile;\n  /** Specifies whether the Virtual Machine Scale Set should be overprovisioned. */\n  overprovision?: boolean;\n  /** When Overprovision is enabled, extensions are launched only on the requested number of VMs which are finally kept. This property will hence ensure that the extensions do not run on the extra overprovisioned VMs. */\n  doNotRunExtensionsOnOverprovisionedVMs?: boolean;\n  /** When true this limits the scale set to a single placement group, of max size 100 virtual machines. NOTE: If singlePlacementGroup is true, it may be modified to false. However, if singlePlacementGroup is false, it may not be modified to true. */\n  singlePlacementGroup?: boolean;\n  /** Specifies additional capabilities enabled or disabled on the Virtual Machines in the Virtual Machine Scale Set. For instance: whether the Virtual Machines have the capability to support attaching managed data disks with UltraSSD_LRS storage account type. */\n  additionalCapabilities?: AdditionalCapabilities;\n  /** Specifies the policies applied when scaling in Virtual Machines in the Virtual Machine Scale Set. */\n  scaleInPolicy?: ScaleInPolicy;\n  /** Specifies information about the proximity placement group that the virtual machine scale set should be assigned to. <br><br>Minimum api-version: 2018-04-01. */\n  proximityPlacementGroup?: SubResource;\n};\n\n/** Describes a Virtual Machine run command. */\nexport type VirtualMachineRunCommandUpdate = UpdateResource & {\n  /** The source of the run command script. */\n  source?: VirtualMachineRunCommandScriptSource;\n  /** The parameters used by the script. */\n  parameters?: RunCommandInputParameter[];\n  /** The parameters used by the script. */\n  protectedParameters?: RunCommandInputParameter[];\n  /** Optional. If set to true, provisioning will complete as soon as the script starts and will not wait for script to complete. */\n  asyncExecution?: boolean;\n  /** Specifies the user account on the VM when executing the run command. */\n  runAsUser?: string;\n  /** Specifies the user account password on the VM when executing the run command. */\n  runAsPassword?: string;\n  /** The timeout in seconds to execute the run command. */\n  timeoutInSeconds?: number;\n  /** Specifies the Azure storage blob where script output stream will be uploaded. */\n  outputBlobUri?: string;\n  /** Specifies the Azure storage blob where script error stream will be uploaded. */\n  errorBlobUri?: string;\n  /**\n   * The provisioning state, which only appears in the response.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly provisioningState?: string;\n  /**\n   * The virtual machine run command instance view.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly instanceView?: VirtualMachineRunCommandInstanceView;\n};\n\n/** Describes a Virtual Machine Scale Set Extension. */\nexport type VirtualMachineScaleSetExtension = SubResourceReadOnly & {\n  /** The name of the extension. */\n  name?: string;\n  /**\n   * Resource type\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly type?: string;\n  /** If a value is provided and is different from the previous value, the extension handler will be forced to update even if the extension configuration has not changed. */\n  forceUpdateTag?: string;\n  /** The name of the extension handler publisher. */\n  publisher?: string;\n  /** Specifies the type of the extension; an example is \"CustomScriptExtension\". */\n  typePropertiesType?: string;\n  /** Specifies the version of the script handler. */\n  typeHandlerVersion?: string;\n  /** Indicates whether the extension should use a newer minor version if one is available at deployment time. Once deployed, however, the extension will not upgrade minor versions unless redeployed, even with this property set to true. */\n  autoUpgradeMinorVersion?: boolean;\n  /** Indicates whether the extension should be automatically upgraded by the platform if there is a newer version of the extension available. */\n  enableAutomaticUpgrade?: boolean;\n  /** Json formatted public settings for the extension. */\n  settings?: Record<string, unknown>;\n  /** The extension can contain either protectedSettings or protectedSettingsFromKeyVault or no protected settings at all. */\n  protectedSettings?: Record<string, unknown>;\n  /**\n   * The provisioning state, which only appears in the response.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly provisioningState?: string;\n  /** Collection of extension names after which this extension needs to be provisioned. */\n  provisionAfterExtensions?: string[];\n  /** Indicates whether failures stemming from the extension will be suppressed (Operational failures such as not connecting to the VM will not be suppressed regardless of this value). The default is false. */\n  suppressFailures?: boolean;\n  /** The extensions protected settings that are passed by reference, and consumed from key vault */\n  protectedSettingsFromKeyVault?: Record<string, unknown>;\n};\n\n/** Describes a Virtual Machine Scale Set Extension. */\nexport type VirtualMachineScaleSetExtensionUpdate = SubResourceReadOnly & {\n  /**\n   * The name of the extension.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly name?: string;\n  /**\n   * Resource type\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly type?: string;\n  /** If a value is provided and is different from the previous value, the extension handler will be forced to update even if the extension configuration has not changed. */\n  forceUpdateTag?: string;\n  /** The name of the extension handler publisher. */\n  publisher?: string;\n  /** Specifies the type of the extension; an example is \"CustomScriptExtension\". */\n  typePropertiesType?: string;\n  /** Specifies the version of the script handler. */\n  typeHandlerVersion?: string;\n  /** Indicates whether the extension should use a newer minor version if one is available at deployment time. Once deployed, however, the extension will not upgrade minor versions unless redeployed, even with this property set to true. */\n  autoUpgradeMinorVersion?: boolean;\n  /** Indicates whether the extension should be automatically upgraded by the platform if there is a newer version of the extension available. */\n  enableAutomaticUpgrade?: boolean;\n  /** Json formatted public settings for the extension. */\n  settings?: Record<string, unknown>;\n  /** The extension can contain either protectedSettings or protectedSettingsFromKeyVault or no protected settings at all. */\n  protectedSettings?: Record<string, unknown>;\n  /**\n   * The provisioning state, which only appears in the response.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly provisioningState?: string;\n  /** Collection of extension names after which this extension needs to be provisioned. */\n  provisionAfterExtensions?: string[];\n  /** Indicates whether failures stemming from the extension will be suppressed (Operational failures such as not connecting to the VM will not be suppressed regardless of this value). The default is false. */\n  suppressFailures?: boolean;\n  /** The extensions protected settings that are passed by reference, and consumed from key vault */\n  protectedSettingsFromKeyVault?: Record<string, unknown>;\n};\n\n/** Describes a VMSS VM Extension. */\nexport type VirtualMachineScaleSetVMExtension = SubResourceReadOnly & {\n  /**\n   * The name of the extension.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly name?: string;\n  /**\n   * Resource type\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly type?: string;\n  /** How the extension handler should be forced to update even if the extension configuration has not changed. */\n  forceUpdateTag?: string;\n  /** The name of the extension handler publisher. */\n  publisher?: string;\n  /** Specifies the type of the extension; an example is \"CustomScriptExtension\". */\n  typePropertiesType?: string;\n  /** Specifies the version of the script handler. */\n  typeHandlerVersion?: string;\n  /** Indicates whether the extension should use a newer minor version if one is available at deployment time. Once deployed, however, the extension will not upgrade minor versions unless redeployed, even with this property set to true. */\n  autoUpgradeMinorVersion?: boolean;\n  /** Indicates whether the extension should be automatically upgraded by the platform if there is a newer version of the extension available. */\n  enableAutomaticUpgrade?: boolean;\n  /** Json formatted public settings for the extension. */\n  settings?: Record<string, unknown>;\n  /** The extension can contain either protectedSettings or protectedSettingsFromKeyVault or no protected settings at all. */\n  protectedSettings?: Record<string, unknown>;\n  /**\n   * The provisioning state, which only appears in the response.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly provisioningState?: string;\n  /** The virtual machine extension instance view. */\n  instanceView?: VirtualMachineExtensionInstanceView;\n  /** Indicates whether failures stemming from the extension will be suppressed (Operational failures such as not connecting to the VM will not be suppressed regardless of this value). The default is false. */\n  suppressFailures?: boolean;\n  /** The extensions protected settings that are passed by reference, and consumed from key vault */\n  protectedSettingsFromKeyVault?: Record<string, unknown>;\n};\n\n/** Describes a VMSS VM Extension. */\nexport type VirtualMachineScaleSetVMExtensionUpdate = SubResourceReadOnly & {\n  /**\n   * The name of the extension.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly name?: string;\n  /**\n   * Resource type\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly type?: string;\n  /** How the extension handler should be forced to update even if the extension configuration has not changed. */\n  forceUpdateTag?: string;\n  /** The name of the extension handler publisher. */\n  publisher?: string;\n  /** Specifies the type of the extension; an example is \"CustomScriptExtension\". */\n  typePropertiesType?: string;\n  /** Specifies the version of the script handler. */\n  typeHandlerVersion?: string;\n  /** Indicates whether the extension should use a newer minor version if one is available at deployment time. Once deployed, however, the extension will not upgrade minor versions unless redeployed, even with this property set to true. */\n  autoUpgradeMinorVersion?: boolean;\n  /** Indicates whether the extension should be automatically upgraded by the platform if there is a newer version of the extension available. */\n  enableAutomaticUpgrade?: boolean;\n  /** Json formatted public settings for the extension. */\n  settings?: Record<string, unknown>;\n  /** The extension can contain either protectedSettings or protectedSettingsFromKeyVault or no protected settings at all. */\n  protectedSettings?: Record<string, unknown>;\n  /** Indicates whether failures stemming from the extension will be suppressed (Operational failures such as not connecting to the VM will not be suppressed regardless of this value). The default is false. */\n  suppressFailures?: boolean;\n  /** The extensions protected settings that are passed by reference, and consumed from key vault */\n  protectedSettingsFromKeyVault?: Record<string, unknown>;\n};\n\n/** The instance view of a dedicated host that includes the name of the dedicated host. It is used for the response to the instance view of a dedicated host group. */\nexport type DedicatedHostInstanceViewWithName = DedicatedHostInstanceView & {\n  /**\n   * The name of the dedicated host.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly name?: string;\n};\n\n/** Describes an Operating System disk. */\nexport type ImageOSDisk = ImageDisk & {\n  /** This property allows you to specify the type of the OS that is included in the disk if creating a VM from a custom image. <br><br> Possible values are: <br><br> **Windows** <br><br> **Linux** */\n  osType: OperatingSystemTypes;\n  /** The OS State. */\n  osState: OperatingSystemStateTypes;\n};\n\n/** Describes a data disk. */\nexport type ImageDataDisk = ImageDisk & {\n  /** Specifies the logical unit number of the data disk. This value is used to identify data disks within the VM and therefore must be unique for each data disk attached to a VM. */\n  lun: number;\n};\n\n/** Restore Point details. */\nexport type RestorePoint = ProxyResource & {\n  /** List of disk resource ids that the customer wishes to exclude from the restore point. If no disks are specified, all disks will be included. */\n  excludeDisks?: ApiEntityReference[];\n  /**\n   * Gets the details of the VM captured at the time of the restore point creation.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly sourceMetadata?: RestorePointSourceMetadata;\n  /**\n   * Gets the provisioning state of the restore point.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly provisioningState?: string;\n  /**\n   * Gets the consistency mode for the restore point. Please refer to https://aka.ms/RestorePoints for more details.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly consistencyMode?: ConsistencyModeTypes;\n  /** Gets the creation time of the restore point. */\n  timeCreated?: Date;\n  /** Resource Id of the source restore point from which a copy needs to be created. */\n  sourceRestorePoint?: ApiEntityReference;\n  /**\n   * The restore point instance view.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly instanceView?: RestorePointInstanceView;\n};\n\n/** The instance view of a capacity reservation that includes the name of the capacity reservation. It is used for the response to the instance view of a capacity reservation group. */\nexport type CapacityReservationInstanceViewWithName = CapacityReservationInstanceView & {\n  /**\n   * The name of the capacity reservation.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly name?: string;\n};\n\n/** Describes a Virtual Machine Scale Set VM Reimage Parameters. */\nexport type VirtualMachineScaleSetVMReimageParameters = VirtualMachineReimageParameters & {};\n\n/** Api request input for LogAnalytics getRequestRateByInterval Api. */\nexport type RequestRateByIntervalInput = LogAnalyticsInputBase & {\n  /** Interval value in minutes used to create LogAnalytics call rate logs. */\n  intervalLength: IntervalInMins;\n};\n\n/** Api request input for LogAnalytics getThrottledRequests Api. */\nexport type ThrottledRequestsInput = LogAnalyticsInputBase & {};\n\n/** Describes the properties of a Run Command. */\nexport type RunCommandDocument = RunCommandDocumentBase & {\n  /** The script to be executed. */\n  script: string[];\n  /** The parameters used by the script. */\n  parameters?: RunCommandParameterDefinition[];\n};\n\n/** Properties of disk restore point */\nexport type DiskRestorePoint = ProxyOnlyResource & {\n  /**\n   * The timestamp of restorePoint creation\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly timeCreated?: Date;\n  /**\n   * arm id of source disk or source disk restore point.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly sourceResourceId?: string;\n  /**\n   * The Operating System type.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly osType?: OperatingSystemTypes;\n  /** The hypervisor generation of the Virtual Machine. Applicable to OS disks only. */\n  hyperVGeneration?: HyperVGeneration;\n  /** Purchase plan information for the the image from which the OS disk was created. */\n  purchasePlan?: PurchasePlanAutoGenerated;\n  /** List of supported capabilities (like accelerated networking) for the image from which the OS disk was created. */\n  supportedCapabilities?: SupportedCapabilities;\n  /**\n   * id of the backing snapshot's MIS family\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly familyId?: string;\n  /**\n   * unique incarnation id of the source disk\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly sourceUniqueId?: string;\n  /**\n   * Encryption property can be used to encrypt data at rest with customer managed keys or platform managed keys.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly encryption?: Encryption;\n  /** Indicates the OS on a disk supports hibernation. */\n  supportsHibernation?: boolean;\n  /** Policy for accessing the disk via network. */\n  networkAccessPolicy?: NetworkAccessPolicy;\n  /** Policy for controlling export on the disk. */\n  publicNetworkAccess?: PublicNetworkAccess;\n  /** ARM id of the DiskAccess resource for using private endpoints on disks. */\n  diskAccessId?: string;\n  /** Percentage complete for the background copy of disk restore point when source resource is from a different region. */\n  completionPercent?: number;\n  /**\n   * Replication state of disk restore point when source resource is from a different region.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly replicationState?: string;\n  /**\n   * Location of source disk or source disk restore point when source resource is from a different region.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly sourceResourceLocation?: string;\n};\n\n/** Specifies information about the Shared Image Gallery that you want to update. */\nexport type GalleryUpdate = UpdateResourceDefinition & {\n  /** The description of this Shared Image Gallery resource. This property is updatable. */\n  description?: string;\n  /** Describes the gallery unique name. */\n  identifier?: GalleryIdentifier;\n  /**\n   * The provisioning state, which only appears in the response.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly provisioningState?: GalleryPropertiesProvisioningState;\n  /** Profile for gallery sharing to subscription or tenant */\n  sharingProfile?: SharingProfile;\n  /** Contains information about the soft deletion policy of the gallery. */\n  softDeletePolicy?: SoftDeletePolicy;\n  /**\n   * Sharing status of current gallery.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly sharingStatus?: SharingStatus;\n};\n\n/** Specifies information about the gallery image definition that you want to update. */\nexport type GalleryImageUpdate = UpdateResourceDefinition & {\n  /** The description of this gallery image definition resource. This property is updatable. */\n  description?: string;\n  /** The Eula agreement for the gallery image definition. */\n  eula?: string;\n  /** The privacy statement uri. */\n  privacyStatementUri?: string;\n  /** The release note uri. */\n  releaseNoteUri?: string;\n  /** This property allows you to specify the type of the OS that is included in the disk when creating a VM from a managed image. <br><br> Possible values are: <br><br> **Windows** <br><br> **Linux** */\n  osType?: OperatingSystemTypes;\n  /** This property allows the user to specify whether the virtual machines created under this image are 'Generalized' or 'Specialized'. */\n  osState?: OperatingSystemStateTypes;\n  /** The hypervisor generation of the Virtual Machine. Applicable to OS disks only. */\n  hyperVGeneration?: HyperVGeneration;\n  /** The end of life date of the gallery image definition. This property can be used for decommissioning purposes. This property is updatable. */\n  endOfLifeDate?: Date;\n  /** This is the gallery image definition identifier. */\n  identifier?: GalleryImageIdentifier;\n  /** The properties describe the recommended machine configuration for this Image Definition. These properties are updatable. */\n  recommended?: RecommendedMachineConfiguration;\n  /** Describes the disallowed disk types. */\n  disallowed?: Disallowed;\n  /** Describes the gallery image definition purchase plan. This is used by marketplace images. */\n  purchasePlan?: ImagePurchasePlan;\n  /**\n   * The provisioning state, which only appears in the response.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly provisioningState?: GalleryImagePropertiesProvisioningState;\n  /** A list of gallery image features. */\n  features?: GalleryImageFeature[];\n};\n\n/** Specifies information about the gallery image version that you want to update. */\nexport type GalleryImageVersionUpdate = UpdateResourceDefinition & {\n  /** The publishing profile of a gallery image Version. */\n  publishingProfile?: GalleryImageVersionPublishingProfile;\n  /**\n   * The provisioning state, which only appears in the response.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly provisioningState?: GalleryImageVersionPropertiesProvisioningState;\n  /** This is the storage profile of a Gallery Image Version. */\n  storageProfile?: GalleryImageVersionStorageProfile;\n  /**\n   * This is the replication status of the gallery image version.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly replicationStatus?: ReplicationStatus;\n};\n\n/** Specifies information about the gallery Application Definition that you want to update. */\nexport type GalleryApplicationUpdate = UpdateResourceDefinition & {\n  /** The description of this gallery Application Definition resource. This property is updatable. */\n  description?: string;\n  /** The Eula agreement for the gallery Application Definition. */\n  eula?: string;\n  /** The privacy statement uri. */\n  privacyStatementUri?: string;\n  /** The release note uri. */\n  releaseNoteUri?: string;\n  /** The end of life date of the gallery Application Definition. This property can be used for decommissioning purposes. This property is updatable. */\n  endOfLifeDate?: Date;\n  /** This property allows you to specify the supported type of the OS that application is built for. <br><br> Possible values are: <br><br> **Windows** <br><br> **Linux** */\n  supportedOSType?: OperatingSystemTypes;\n};\n\n/** Specifies information about the gallery Application Version that you want to update. */\nexport type GalleryApplicationVersionUpdate = UpdateResourceDefinition & {\n  /** The publishing profile of a gallery image version. */\n  publishingProfile?: GalleryApplicationVersionPublishingProfile;\n  /**\n   * The provisioning state, which only appears in the response.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly provisioningState?: GalleryApplicationVersionPropertiesProvisioningState;\n  /**\n   * This is the replication status of the gallery image version.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly replicationStatus?: ReplicationStatus;\n};\n\n/** The publishing profile of a gallery image Version. */\nexport type GalleryImageVersionPublishingProfile = GalleryArtifactPublishingProfileBase & {};\n\n/** The publishing profile of a gallery image version. */\nexport type GalleryApplicationVersionPublishingProfile = GalleryArtifactPublishingProfileBase & {\n  /** The source image from which the Image Version is going to be created. */\n  source: UserArtifactSource;\n  manageActions?: UserArtifactManage;\n  /** Optional. Whether or not this application reports health. */\n  enableHealthCheck?: boolean;\n};\n\n/** Contains encryption settings for an OS disk image. */\nexport type OSDiskImageEncryption = DiskImageEncryption & {\n  /** This property specifies the security profile of an OS disk image. */\n  securityProfile?: OSDiskImageSecurityProfile;\n};\n\n/** Contains encryption settings for a data disk image. */\nexport type DataDiskImageEncryption = DiskImageEncryption & {\n  /** This property specifies the logical unit number of the data disk. This value is used to identify data disks within the Virtual Machine and therefore must be unique for each data disk attached to the Virtual Machine. */\n  lun: number;\n};\n\n/** This is the OS disk image. */\nexport type GalleryOSDiskImage = GalleryDiskImage & {};\n\n/** This is the data disk image. */\nexport type GalleryDataDiskImage = GalleryDiskImage & {\n  /** This property specifies the logical unit number of the data disk. This value is used to identify data disks within the Virtual Machine and therefore must be unique for each data disk attached to the Virtual Machine. */\n  lun: number;\n};\n\n/** Base information about the shared gallery resource in pir. */\nexport type PirSharedGalleryResource = PirResource & {\n  /** The unique id of this shared gallery. */\n  uniqueId?: string;\n};\n\n/** Specifies information about the Community Gallery that you want to create or update. */\nexport type CommunityGallery = PirCommunityGalleryResource & {};\n\n/** Specifies information about the gallery image definition that you want to create or update. */\nexport type CommunityGalleryImage = PirCommunityGalleryResource & {\n  /** This property allows you to specify the type of the OS that is included in the disk when creating a VM from a managed image. <br><br> Possible values are: <br><br> **Windows** <br><br> **Linux** */\n  osType?: OperatingSystemTypes;\n  /** This property allows the user to specify whether the virtual machines created under this image are 'Generalized' or 'Specialized'. */\n  osState?: OperatingSystemStateTypes;\n  /** The end of life date of the gallery image definition. This property can be used for decommissioning purposes. This property is updatable. */\n  endOfLifeDate?: Date;\n  /** This is the gallery image definition identifier. */\n  identifier?: GalleryImageIdentifier;\n  /** The properties describe the recommended machine configuration for this Image Definition. These properties are updatable. */\n  recommended?: RecommendedMachineConfiguration;\n  /** Describes the disallowed disk types. */\n  disallowed?: Disallowed;\n  /** The hypervisor generation of the Virtual Machine. Applicable to OS disks only. */\n  hyperVGeneration?: HyperVGeneration;\n  /** A list of gallery image features. */\n  features?: GalleryImageFeature[];\n  /** Describes the gallery image definition purchase plan. This is used by marketplace images. */\n  purchasePlan?: ImagePurchasePlan;\n};\n\n/** Specifies information about the gallery image version that you want to create or update. */\nexport type CommunityGalleryImageVersion = PirCommunityGalleryResource & {\n  /** The published date of the gallery image version Definition. This property can be used for decommissioning purposes. This property is updatable. */\n  publishedDate?: Date;\n  /** The end of life date of the gallery image version Definition. This property can be used for decommissioning purposes. This property is updatable. */\n  endOfLifeDate?: Date;\n};\n\n/** Describes a Virtual Machine Image. */\nexport type VirtualMachineImage = VirtualMachineImageResource & {\n  /** Used for establishing the purchase context of any 3rd Party artifact through MarketPlace. */\n  plan?: PurchasePlan;\n  /** Contains the os disk image information. */\n  osDiskImage?: OSDiskImage;\n  dataDiskImages?: DataDiskImage[];\n  /** Describes automatic OS upgrade properties on the image. */\n  automaticOSUpgradeProperties?: AutomaticOSUpgradeProperties;\n  /** Specifies the HyperVGeneration Type */\n  hyperVGeneration?: HyperVGenerationTypes;\n  /** Specifies disallowed configuration for the VirtualMachine created from the image */\n  disallowed?: DisallowedConfiguration;\n  features?: VirtualMachineImageFeature[];\n};\n\n/** Describes a Virtual Machine Scale Set VM Reimage Parameters. */\nexport type VirtualMachineScaleSetReimageParameters = VirtualMachineScaleSetVMReimageParameters & {\n  /** The virtual machine scale set instance ids. Omitting the virtual machine scale set instance ids will result in the operation being performed on all virtual machines in the virtual machine scale set. */\n  instanceIds?: string[];\n};\n\n/** Specifies information about the Shared Gallery that you want to create or update. */\nexport type SharedGallery = PirSharedGalleryResource & {};\n\n/** Specifies information about the gallery image definition that you want to create or update. */\nexport type SharedGalleryImage = PirSharedGalleryResource & {\n  /** This property allows you to specify the type of the OS that is included in the disk when creating a VM from a managed image. <br><br> Possible values are: <br><br> **Windows** <br><br> **Linux** */\n  osType?: OperatingSystemTypes;\n  /** This property allows the user to specify whether the virtual machines created under this image are 'Generalized' or 'Specialized'. */\n  osState?: OperatingSystemStateTypes;\n  /** The end of life date of the gallery image definition. This property can be used for decommissioning purposes. This property is updatable. */\n  endOfLifeDate?: Date;\n  /** This is the gallery image definition identifier. */\n  identifier?: GalleryImageIdentifier;\n  /** The properties describe the recommended machine configuration for this Image Definition. These properties are updatable. */\n  recommended?: RecommendedMachineConfiguration;\n  /** Describes the disallowed disk types. */\n  disallowed?: Disallowed;\n  /** The hypervisor generation of the Virtual Machine. Applicable to OS disks only. */\n  hyperVGeneration?: HyperVGeneration;\n  /** A list of gallery image features. */\n  features?: GalleryImageFeature[];\n  /** Describes the gallery image definition purchase plan. This is used by marketplace images. */\n  purchasePlan?: ImagePurchasePlan;\n};\n\n/** Specifies information about the gallery image version that you want to create or update. */\nexport type SharedGalleryImageVersion = PirSharedGalleryResource & {\n  /** The published date of the gallery image version Definition. This property can be used for decommissioning purposes. This property is updatable. */\n  publishedDate?: Date;\n  /** The end of life date of the gallery image version Definition. This property can be used for decommissioning purposes. This property is updatable. */\n  endOfLifeDate?: Date;\n};\n\n/** Known values of {@link ProximityPlacementGroupType} that the service accepts. */\nexport enum KnownProximityPlacementGroupType {\n  Standard = \"Standard\",\n  Ultra = \"Ultra\"\n}\n\n/**\n * Defines values for ProximityPlacementGroupType. \\\n * {@link KnownProximityPlacementGroupType} can be used interchangeably with ProximityPlacementGroupType,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **Standard** \\\n * **Ultra**\n */\nexport type ProximityPlacementGroupType = string;\n\n/** Known values of {@link HyperVGenerationTypes} that the service accepts. */\nexport enum KnownHyperVGenerationTypes {\n  V1 = \"V1\",\n  V2 = \"V2\"\n}\n\n/**\n * Defines values for HyperVGenerationTypes. \\\n * {@link KnownHyperVGenerationTypes} can be used interchangeably with HyperVGenerationTypes,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **V1** \\\n * **V2**\n */\nexport type HyperVGenerationTypes = string;\n\n/** Known values of {@link VmDiskTypes} that the service accepts. */\nexport enum KnownVmDiskTypes {\n  None = \"None\",\n  Unmanaged = \"Unmanaged\"\n}\n\n/**\n * Defines values for VmDiskTypes. \\\n * {@link KnownVmDiskTypes} can be used interchangeably with VmDiskTypes,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **None** \\\n * **Unmanaged**\n */\nexport type VmDiskTypes = string;\n\n/** Known values of {@link ExtendedLocationTypes} that the service accepts. */\nexport enum KnownExtendedLocationTypes {\n  EdgeZone = \"EdgeZone\"\n}\n\n/**\n * Defines values for ExtendedLocationTypes. \\\n * {@link KnownExtendedLocationTypes} can be used interchangeably with ExtendedLocationTypes,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **EdgeZone**\n */\nexport type ExtendedLocationTypes = string;\n\n/** Known values of {@link VirtualMachineSizeTypes} that the service accepts. */\nexport enum KnownVirtualMachineSizeTypes {\n  BasicA0 = \"Basic_A0\",\n  BasicA1 = \"Basic_A1\",\n  BasicA2 = \"Basic_A2\",\n  BasicA3 = \"Basic_A3\",\n  BasicA4 = \"Basic_A4\",\n  StandardA0 = \"Standard_A0\",\n  StandardA1 = \"Standard_A1\",\n  StandardA2 = \"Standard_A2\",\n  StandardA3 = \"Standard_A3\",\n  StandardA4 = \"Standard_A4\",\n  StandardA5 = \"Standard_A5\",\n  StandardA6 = \"Standard_A6\",\n  StandardA7 = \"Standard_A7\",\n  StandardA8 = \"Standard_A8\",\n  StandardA9 = \"Standard_A9\",\n  StandardA10 = \"Standard_A10\",\n  StandardA11 = \"Standard_A11\",\n  StandardA1V2 = \"Standard_A1_v2\",\n  StandardA2V2 = \"Standard_A2_v2\",\n  StandardA4V2 = \"Standard_A4_v2\",\n  StandardA8V2 = \"Standard_A8_v2\",\n  StandardA2MV2 = \"Standard_A2m_v2\",\n  StandardA4MV2 = \"Standard_A4m_v2\",\n  StandardA8MV2 = \"Standard_A8m_v2\",\n  StandardB1S = \"Standard_B1s\",\n  StandardB1Ms = \"Standard_B1ms\",\n  StandardB2S = \"Standard_B2s\",\n  StandardB2Ms = \"Standard_B2ms\",\n  StandardB4Ms = \"Standard_B4ms\",\n  StandardB8Ms = \"Standard_B8ms\",\n  StandardD1 = \"Standard_D1\",\n  StandardD2 = \"Standard_D2\",\n  StandardD3 = \"Standard_D3\",\n  StandardD4 = \"Standard_D4\",\n  StandardD11 = \"Standard_D11\",\n  StandardD12 = \"Standard_D12\",\n  StandardD13 = \"Standard_D13\",\n  StandardD14 = \"Standard_D14\",\n  StandardD1V2 = \"Standard_D1_v2\",\n  StandardD2V2 = \"Standard_D2_v2\",\n  StandardD3V2 = \"Standard_D3_v2\",\n  StandardD4V2 = \"Standard_D4_v2\",\n  StandardD5V2 = \"Standard_D5_v2\",\n  StandardD2V3 = \"Standard_D2_v3\",\n  StandardD4V3 = \"Standard_D4_v3\",\n  StandardD8V3 = \"Standard_D8_v3\",\n  StandardD16V3 = \"Standard_D16_v3\",\n  StandardD32V3 = \"Standard_D32_v3\",\n  StandardD64V3 = \"Standard_D64_v3\",\n  StandardD2SV3 = \"Standard_D2s_v3\",\n  StandardD4SV3 = \"Standard_D4s_v3\",\n  StandardD8SV3 = \"Standard_D8s_v3\",\n  StandardD16SV3 = \"Standard_D16s_v3\",\n  StandardD32SV3 = \"Standard_D32s_v3\",\n  StandardD64SV3 = \"Standard_D64s_v3\",\n  StandardD11V2 = \"Standard_D11_v2\",\n  StandardD12V2 = \"Standard_D12_v2\",\n  StandardD13V2 = \"Standard_D13_v2\",\n  StandardD14V2 = \"Standard_D14_v2\",\n  StandardD15V2 = \"Standard_D15_v2\",\n  StandardDS1 = \"Standard_DS1\",\n  StandardDS2 = \"Standard_DS2\",\n  StandardDS3 = \"Standard_DS3\",\n  StandardDS4 = \"Standard_DS4\",\n  StandardDS11 = \"Standard_DS11\",\n  StandardDS12 = \"Standard_DS12\",\n  StandardDS13 = \"Standard_DS13\",\n  StandardDS14 = \"Standard_DS14\",\n  StandardDS1V2 = \"Standard_DS1_v2\",\n  StandardDS2V2 = \"Standard_DS2_v2\",\n  StandardDS3V2 = \"Standard_DS3_v2\",\n  StandardDS4V2 = \"Standard_DS4_v2\",\n  StandardDS5V2 = \"Standard_DS5_v2\",\n  StandardDS11V2 = \"Standard_DS11_v2\",\n  StandardDS12V2 = \"Standard_DS12_v2\",\n  StandardDS13V2 = \"Standard_DS13_v2\",\n  StandardDS14V2 = \"Standard_DS14_v2\",\n  StandardDS15V2 = \"Standard_DS15_v2\",\n  StandardDS134V2 = \"Standard_DS13-4_v2\",\n  StandardDS132V2 = \"Standard_DS13-2_v2\",\n  StandardDS148V2 = \"Standard_DS14-8_v2\",\n  StandardDS144V2 = \"Standard_DS14-4_v2\",\n  StandardE2V3 = \"Standard_E2_v3\",\n  StandardE4V3 = \"Standard_E4_v3\",\n  StandardE8V3 = \"Standard_E8_v3\",\n  StandardE16V3 = \"Standard_E16_v3\",\n  StandardE32V3 = \"Standard_E32_v3\",\n  StandardE64V3 = \"Standard_E64_v3\",\n  StandardE2SV3 = \"Standard_E2s_v3\",\n  StandardE4SV3 = \"Standard_E4s_v3\",\n  StandardE8SV3 = \"Standard_E8s_v3\",\n  StandardE16SV3 = \"Standard_E16s_v3\",\n  StandardE32SV3 = \"Standard_E32s_v3\",\n  StandardE64SV3 = \"Standard_E64s_v3\",\n  StandardE3216V3 = \"Standard_E32-16_v3\",\n  StandardE328SV3 = \"Standard_E32-8s_v3\",\n  StandardE6432SV3 = \"Standard_E64-32s_v3\",\n  StandardE6416SV3 = \"Standard_E64-16s_v3\",\n  StandardF1 = \"Standard_F1\",\n  StandardF2 = \"Standard_F2\",\n  StandardF4 = \"Standard_F4\",\n  StandardF8 = \"Standard_F8\",\n  StandardF16 = \"Standard_F16\",\n  StandardF1S = \"Standard_F1s\",\n  StandardF2S = \"Standard_F2s\",\n  StandardF4S = \"Standard_F4s\",\n  StandardF8S = \"Standard_F8s\",\n  StandardF16S = \"Standard_F16s\",\n  StandardF2SV2 = \"Standard_F2s_v2\",\n  StandardF4SV2 = \"Standard_F4s_v2\",\n  StandardF8SV2 = \"Standard_F8s_v2\",\n  StandardF16SV2 = \"Standard_F16s_v2\",\n  StandardF32SV2 = \"Standard_F32s_v2\",\n  StandardF64SV2 = \"Standard_F64s_v2\",\n  StandardF72SV2 = \"Standard_F72s_v2\",\n  StandardG1 = \"Standard_G1\",\n  StandardG2 = \"Standard_G2\",\n  StandardG3 = \"Standard_G3\",\n  StandardG4 = \"Standard_G4\",\n  StandardG5 = \"Standard_G5\",\n  StandardGS1 = \"Standard_GS1\",\n  StandardGS2 = \"Standard_GS2\",\n  StandardGS3 = \"Standard_GS3\",\n  StandardGS4 = \"Standard_GS4\",\n  StandardGS5 = \"Standard_GS5\",\n  StandardGS48 = \"Standard_GS4-8\",\n  StandardGS44 = \"Standard_GS4-4\",\n  StandardGS516 = \"Standard_GS5-16\",\n  StandardGS58 = \"Standard_GS5-8\",\n  StandardH8 = \"Standard_H8\",\n  StandardH16 = \"Standard_H16\",\n  StandardH8M = \"Standard_H8m\",\n  StandardH16M = \"Standard_H16m\",\n  StandardH16R = \"Standard_H16r\",\n  StandardH16Mr = \"Standard_H16mr\",\n  StandardL4S = \"Standard_L4s\",\n  StandardL8S = \"Standard_L8s\",\n  StandardL16S = \"Standard_L16s\",\n  StandardL32S = \"Standard_L32s\",\n  StandardM64S = \"Standard_M64s\",\n  StandardM64Ms = \"Standard_M64ms\",\n  StandardM128S = \"Standard_M128s\",\n  StandardM128Ms = \"Standard_M128ms\",\n  StandardM6432Ms = \"Standard_M64-32ms\",\n  StandardM6416Ms = \"Standard_M64-16ms\",\n  StandardM12864Ms = \"Standard_M128-64ms\",\n  StandardM12832Ms = \"Standard_M128-32ms\",\n  StandardNC6 = \"Standard_NC6\",\n  StandardNC12 = \"Standard_NC12\",\n  StandardNC24 = \"Standard_NC24\",\n  StandardNC24R = \"Standard_NC24r\",\n  StandardNC6SV2 = \"Standard_NC6s_v2\",\n  StandardNC12SV2 = \"Standard_NC12s_v2\",\n  StandardNC24SV2 = \"Standard_NC24s_v2\",\n  StandardNC24RsV2 = \"Standard_NC24rs_v2\",\n  StandardNC6SV3 = \"Standard_NC6s_v3\",\n  StandardNC12SV3 = \"Standard_NC12s_v3\",\n  StandardNC24SV3 = \"Standard_NC24s_v3\",\n  StandardNC24RsV3 = \"Standard_NC24rs_v3\",\n  StandardND6S = \"Standard_ND6s\",\n  StandardND12S = \"Standard_ND12s\",\n  StandardND24S = \"Standard_ND24s\",\n  StandardND24Rs = \"Standard_ND24rs\",\n  StandardNV6 = \"Standard_NV6\",\n  StandardNV12 = \"Standard_NV12\",\n  StandardNV24 = \"Standard_NV24\"\n}\n\n/**\n * Defines values for VirtualMachineSizeTypes. \\\n * {@link KnownVirtualMachineSizeTypes} can be used interchangeably with VirtualMachineSizeTypes,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **Basic_A0** \\\n * **Basic_A1** \\\n * **Basic_A2** \\\n * **Basic_A3** \\\n * **Basic_A4** \\\n * **Standard_A0** \\\n * **Standard_A1** \\\n * **Standard_A2** \\\n * **Standard_A3** \\\n * **Standard_A4** \\\n * **Standard_A5** \\\n * **Standard_A6** \\\n * **Standard_A7** \\\n * **Standard_A8** \\\n * **Standard_A9** \\\n * **Standard_A10** \\\n * **Standard_A11** \\\n * **Standard_A1_v2** \\\n * **Standard_A2_v2** \\\n * **Standard_A4_v2** \\\n * **Standard_A8_v2** \\\n * **Standard_A2m_v2** \\\n * **Standard_A4m_v2** \\\n * **Standard_A8m_v2** \\\n * **Standard_B1s** \\\n * **Standard_B1ms** \\\n * **Standard_B2s** \\\n * **Standard_B2ms** \\\n * **Standard_B4ms** \\\n * **Standard_B8ms** \\\n * **Standard_D1** \\\n * **Standard_D2** \\\n * **Standard_D3** \\\n * **Standard_D4** \\\n * **Standard_D11** \\\n * **Standard_D12** \\\n * **Standard_D13** \\\n * **Standard_D14** \\\n * **Standard_D1_v2** \\\n * **Standard_D2_v2** \\\n * **Standard_D3_v2** \\\n * **Standard_D4_v2** \\\n * **Standard_D5_v2** \\\n * **Standard_D2_v3** \\\n * **Standard_D4_v3** \\\n * **Standard_D8_v3** \\\n * **Standard_D16_v3** \\\n * **Standard_D32_v3** \\\n * **Standard_D64_v3** \\\n * **Standard_D2s_v3** \\\n * **Standard_D4s_v3** \\\n * **Standard_D8s_v3** \\\n * **Standard_D16s_v3** \\\n * **Standard_D32s_v3** \\\n * **Standard_D64s_v3** \\\n * **Standard_D11_v2** \\\n * **Standard_D12_v2** \\\n * **Standard_D13_v2** \\\n * **Standard_D14_v2** \\\n * **Standard_D15_v2** \\\n * **Standard_DS1** \\\n * **Standard_DS2** \\\n * **Standard_DS3** \\\n * **Standard_DS4** \\\n * **Standard_DS11** \\\n * **Standard_DS12** \\\n * **Standard_DS13** \\\n * **Standard_DS14** \\\n * **Standard_DS1_v2** \\\n * **Standard_DS2_v2** \\\n * **Standard_DS3_v2** \\\n * **Standard_DS4_v2** \\\n * **Standard_DS5_v2** \\\n * **Standard_DS11_v2** \\\n * **Standard_DS12_v2** \\\n * **Standard_DS13_v2** \\\n * **Standard_DS14_v2** \\\n * **Standard_DS15_v2** \\\n * **Standard_DS13-4_v2** \\\n * **Standard_DS13-2_v2** \\\n * **Standard_DS14-8_v2** \\\n * **Standard_DS14-4_v2** \\\n * **Standard_E2_v3** \\\n * **Standard_E4_v3** \\\n * **Standard_E8_v3** \\\n * **Standard_E16_v3** \\\n * **Standard_E32_v3** \\\n * **Standard_E64_v3** \\\n * **Standard_E2s_v3** \\\n * **Standard_E4s_v3** \\\n * **Standard_E8s_v3** \\\n * **Standard_E16s_v3** \\\n * **Standard_E32s_v3** \\\n * **Standard_E64s_v3** \\\n * **Standard_E32-16_v3** \\\n * **Standard_E32-8s_v3** \\\n * **Standard_E64-32s_v3** \\\n * **Standard_E64-16s_v3** \\\n * **Standard_F1** \\\n * **Standard_F2** \\\n * **Standard_F4** \\\n * **Standard_F8** \\\n * **Standard_F16** \\\n * **Standard_F1s** \\\n * **Standard_F2s** \\\n * **Standard_F4s** \\\n * **Standard_F8s** \\\n * **Standard_F16s** \\\n * **Standard_F2s_v2** \\\n * **Standard_F4s_v2** \\\n * **Standard_F8s_v2** \\\n * **Standard_F16s_v2** \\\n * **Standard_F32s_v2** \\\n * **Standard_F64s_v2** \\\n * **Standard_F72s_v2** \\\n * **Standard_G1** \\\n * **Standard_G2** \\\n * **Standard_G3** \\\n * **Standard_G4** \\\n * **Standard_G5** \\\n * **Standard_GS1** \\\n * **Standard_GS2** \\\n * **Standard_GS3** \\\n * **Standard_GS4** \\\n * **Standard_GS5** \\\n * **Standard_GS4-8** \\\n * **Standard_GS4-4** \\\n * **Standard_GS5-16** \\\n * **Standard_GS5-8** \\\n * **Standard_H8** \\\n * **Standard_H16** \\\n * **Standard_H8m** \\\n * **Standard_H16m** \\\n * **Standard_H16r** \\\n * **Standard_H16mr** \\\n * **Standard_L4s** \\\n * **Standard_L8s** \\\n * **Standard_L16s** \\\n * **Standard_L32s** \\\n * **Standard_M64s** \\\n * **Standard_M64ms** \\\n * **Standard_M128s** \\\n * **Standard_M128ms** \\\n * **Standard_M64-32ms** \\\n * **Standard_M64-16ms** \\\n * **Standard_M128-64ms** \\\n * **Standard_M128-32ms** \\\n * **Standard_NC6** \\\n * **Standard_NC12** \\\n * **Standard_NC24** \\\n * **Standard_NC24r** \\\n * **Standard_NC6s_v2** \\\n * **Standard_NC12s_v2** \\\n * **Standard_NC24s_v2** \\\n * **Standard_NC24rs_v2** \\\n * **Standard_NC6s_v3** \\\n * **Standard_NC12s_v3** \\\n * **Standard_NC24s_v3** \\\n * **Standard_NC24rs_v3** \\\n * **Standard_ND6s** \\\n * **Standard_ND12s** \\\n * **Standard_ND24s** \\\n * **Standard_ND24rs** \\\n * **Standard_NV6** \\\n * **Standard_NV12** \\\n * **Standard_NV24**\n */\nexport type VirtualMachineSizeTypes = string;\n\n/** Known values of {@link DiffDiskOptions} that the service accepts. */\nexport enum KnownDiffDiskOptions {\n  Local = \"Local\"\n}\n\n/**\n * Defines values for DiffDiskOptions. \\\n * {@link KnownDiffDiskOptions} can be used interchangeably with DiffDiskOptions,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **Local**\n */\nexport type DiffDiskOptions = string;\n\n/** Known values of {@link DiffDiskPlacement} that the service accepts. */\nexport enum KnownDiffDiskPlacement {\n  CacheDisk = \"CacheDisk\",\n  ResourceDisk = \"ResourceDisk\"\n}\n\n/**\n * Defines values for DiffDiskPlacement. \\\n * {@link KnownDiffDiskPlacement} can be used interchangeably with DiffDiskPlacement,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **CacheDisk** \\\n * **ResourceDisk**\n */\nexport type DiffDiskPlacement = string;\n\n/** Known values of {@link DiskCreateOptionTypes} that the service accepts. */\nexport enum KnownDiskCreateOptionTypes {\n  FromImage = \"FromImage\",\n  Empty = \"Empty\",\n  Attach = \"Attach\"\n}\n\n/**\n * Defines values for DiskCreateOptionTypes. \\\n * {@link KnownDiskCreateOptionTypes} can be used interchangeably with DiskCreateOptionTypes,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **FromImage** \\\n * **Empty** \\\n * **Attach**\n */\nexport type DiskCreateOptionTypes = string;\n\n/** Known values of {@link StorageAccountTypes} that the service accepts. */\nexport enum KnownStorageAccountTypes {\n  StandardLRS = \"Standard_LRS\",\n  PremiumLRS = \"Premium_LRS\",\n  StandardSSDLRS = \"StandardSSD_LRS\",\n  UltraSSDLRS = \"UltraSSD_LRS\",\n  PremiumZRS = \"Premium_ZRS\",\n  StandardSSDZRS = \"StandardSSD_ZRS\"\n}\n\n/**\n * Defines values for StorageAccountTypes. \\\n * {@link KnownStorageAccountTypes} can be used interchangeably with StorageAccountTypes,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **Standard_LRS** \\\n * **Premium_LRS** \\\n * **StandardSSD_LRS** \\\n * **UltraSSD_LRS** \\\n * **Premium_ZRS** \\\n * **StandardSSD_ZRS**\n */\nexport type StorageAccountTypes = string;\n\n/** Known values of {@link SecurityEncryptionTypes} that the service accepts. */\nexport enum KnownSecurityEncryptionTypes {\n  VMGuestStateOnly = \"VMGuestStateOnly\",\n  DiskWithVMGuestState = \"DiskWithVMGuestState\"\n}\n\n/**\n * Defines values for SecurityEncryptionTypes. \\\n * {@link KnownSecurityEncryptionTypes} can be used interchangeably with SecurityEncryptionTypes,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **VMGuestStateOnly** \\\n * **DiskWithVMGuestState**\n */\nexport type SecurityEncryptionTypes = string;\n\n/** Known values of {@link DiskDeleteOptionTypes} that the service accepts. */\nexport enum KnownDiskDeleteOptionTypes {\n  Delete = \"Delete\",\n  Detach = \"Detach\"\n}\n\n/**\n * Defines values for DiskDeleteOptionTypes. \\\n * {@link KnownDiskDeleteOptionTypes} can be used interchangeably with DiskDeleteOptionTypes,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **Delete** \\\n * **Detach**\n */\nexport type DiskDeleteOptionTypes = string;\n\n/** Known values of {@link DiskDetachOptionTypes} that the service accepts. */\nexport enum KnownDiskDetachOptionTypes {\n  ForceDetach = \"ForceDetach\"\n}\n\n/**\n * Defines values for DiskDetachOptionTypes. \\\n * {@link KnownDiskDetachOptionTypes} can be used interchangeably with DiskDetachOptionTypes,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **ForceDetach**\n */\nexport type DiskDetachOptionTypes = string;\n\n/** Known values of {@link WindowsVMGuestPatchMode} that the service accepts. */\nexport enum KnownWindowsVMGuestPatchMode {\n  Manual = \"Manual\",\n  AutomaticByOS = \"AutomaticByOS\",\n  AutomaticByPlatform = \"AutomaticByPlatform\"\n}\n\n/**\n * Defines values for WindowsVMGuestPatchMode. \\\n * {@link KnownWindowsVMGuestPatchMode} can be used interchangeably with WindowsVMGuestPatchMode,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **Manual** \\\n * **AutomaticByOS** \\\n * **AutomaticByPlatform**\n */\nexport type WindowsVMGuestPatchMode = string;\n\n/** Known values of {@link WindowsPatchAssessmentMode} that the service accepts. */\nexport enum KnownWindowsPatchAssessmentMode {\n  ImageDefault = \"ImageDefault\",\n  AutomaticByPlatform = \"AutomaticByPlatform\"\n}\n\n/**\n * Defines values for WindowsPatchAssessmentMode. \\\n * {@link KnownWindowsPatchAssessmentMode} can be used interchangeably with WindowsPatchAssessmentMode,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **ImageDefault** \\\n * **AutomaticByPlatform**\n */\nexport type WindowsPatchAssessmentMode = string;\n\n/** Known values of {@link LinuxVMGuestPatchMode} that the service accepts. */\nexport enum KnownLinuxVMGuestPatchMode {\n  ImageDefault = \"ImageDefault\",\n  AutomaticByPlatform = \"AutomaticByPlatform\"\n}\n\n/**\n * Defines values for LinuxVMGuestPatchMode. \\\n * {@link KnownLinuxVMGuestPatchMode} can be used interchangeably with LinuxVMGuestPatchMode,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **ImageDefault** \\\n * **AutomaticByPlatform**\n */\nexport type LinuxVMGuestPatchMode = string;\n\n/** Known values of {@link LinuxPatchAssessmentMode} that the service accepts. */\nexport enum KnownLinuxPatchAssessmentMode {\n  ImageDefault = \"ImageDefault\",\n  AutomaticByPlatform = \"AutomaticByPlatform\"\n}\n\n/**\n * Defines values for LinuxPatchAssessmentMode. \\\n * {@link KnownLinuxPatchAssessmentMode} can be used interchangeably with LinuxPatchAssessmentMode,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **ImageDefault** \\\n * **AutomaticByPlatform**\n */\nexport type LinuxPatchAssessmentMode = string;\n\n/** Known values of {@link DeleteOptions} that the service accepts. */\nexport enum KnownDeleteOptions {\n  Delete = \"Delete\",\n  Detach = \"Detach\"\n}\n\n/**\n * Defines values for DeleteOptions. \\\n * {@link KnownDeleteOptions} can be used interchangeably with DeleteOptions,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **Delete** \\\n * **Detach**\n */\nexport type DeleteOptions = string;\n\n/** Known values of {@link NetworkApiVersion} that the service accepts. */\nexport enum KnownNetworkApiVersion {\n  TwoThousandTwenty1101 = \"2020-11-01\"\n}\n\n/**\n * Defines values for NetworkApiVersion. \\\n * {@link KnownNetworkApiVersion} can be used interchangeably with NetworkApiVersion,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **2020-11-01**\n */\nexport type NetworkApiVersion = string;\n\n/** Known values of {@link IPVersions} that the service accepts. */\nexport enum KnownIPVersions {\n  IPv4 = \"IPv4\",\n  IPv6 = \"IPv6\"\n}\n\n/**\n * Defines values for IPVersions. \\\n * {@link KnownIPVersions} can be used interchangeably with IPVersions,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **IPv4** \\\n * **IPv6**\n */\nexport type IPVersions = string;\n\n/** Known values of {@link PublicIPAllocationMethod} that the service accepts. */\nexport enum KnownPublicIPAllocationMethod {\n  Dynamic = \"Dynamic\",\n  Static = \"Static\"\n}\n\n/**\n * Defines values for PublicIPAllocationMethod. \\\n * {@link KnownPublicIPAllocationMethod} can be used interchangeably with PublicIPAllocationMethod,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **Dynamic** \\\n * **Static**\n */\nexport type PublicIPAllocationMethod = string;\n\n/** Known values of {@link PublicIPAddressSkuName} that the service accepts. */\nexport enum KnownPublicIPAddressSkuName {\n  Basic = \"Basic\",\n  Standard = \"Standard\"\n}\n\n/**\n * Defines values for PublicIPAddressSkuName. \\\n * {@link KnownPublicIPAddressSkuName} can be used interchangeably with PublicIPAddressSkuName,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **Basic** \\\n * **Standard**\n */\nexport type PublicIPAddressSkuName = string;\n\n/** Known values of {@link PublicIPAddressSkuTier} that the service accepts. */\nexport enum KnownPublicIPAddressSkuTier {\n  Regional = \"Regional\",\n  Global = \"Global\"\n}\n\n/**\n * Defines values for PublicIPAddressSkuTier. \\\n * {@link KnownPublicIPAddressSkuTier} can be used interchangeably with PublicIPAddressSkuTier,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **Regional** \\\n * **Global**\n */\nexport type PublicIPAddressSkuTier = string;\n\n/** Known values of {@link SecurityTypes} that the service accepts. */\nexport enum KnownSecurityTypes {\n  TrustedLaunch = \"TrustedLaunch\",\n  ConfidentialVM = \"ConfidentialVM\"\n}\n\n/**\n * Defines values for SecurityTypes. \\\n * {@link KnownSecurityTypes} can be used interchangeably with SecurityTypes,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **TrustedLaunch** \\\n * **ConfidentialVM**\n */\nexport type SecurityTypes = string;\n\n/** Known values of {@link VirtualMachinePriorityTypes} that the service accepts. */\nexport enum KnownVirtualMachinePriorityTypes {\n  Regular = \"Regular\",\n  Low = \"Low\",\n  Spot = \"Spot\"\n}\n\n/**\n * Defines values for VirtualMachinePriorityTypes. \\\n * {@link KnownVirtualMachinePriorityTypes} can be used interchangeably with VirtualMachinePriorityTypes,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **Regular** \\\n * **Low** \\\n * **Spot**\n */\nexport type VirtualMachinePriorityTypes = string;\n\n/** Known values of {@link VirtualMachineEvictionPolicyTypes} that the service accepts. */\nexport enum KnownVirtualMachineEvictionPolicyTypes {\n  Deallocate = \"Deallocate\",\n  Delete = \"Delete\"\n}\n\n/**\n * Defines values for VirtualMachineEvictionPolicyTypes. \\\n * {@link KnownVirtualMachineEvictionPolicyTypes} can be used interchangeably with VirtualMachineEvictionPolicyTypes,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **Deallocate** \\\n * **Delete**\n */\nexport type VirtualMachineEvictionPolicyTypes = string;\n\n/** Known values of {@link HyperVGenerationType} that the service accepts. */\nexport enum KnownHyperVGenerationType {\n  V1 = \"V1\",\n  V2 = \"V2\"\n}\n\n/**\n * Defines values for HyperVGenerationType. \\\n * {@link KnownHyperVGenerationType} can be used interchangeably with HyperVGenerationType,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **V1** \\\n * **V2**\n */\nexport type HyperVGenerationType = string;\n\n/** Known values of {@link PatchOperationStatus} that the service accepts. */\nexport enum KnownPatchOperationStatus {\n  Unknown = \"Unknown\",\n  InProgress = \"InProgress\",\n  Failed = \"Failed\",\n  Succeeded = \"Succeeded\",\n  CompletedWithWarnings = \"CompletedWithWarnings\"\n}\n\n/**\n * Defines values for PatchOperationStatus. \\\n * {@link KnownPatchOperationStatus} can be used interchangeably with PatchOperationStatus,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **Unknown** \\\n * **InProgress** \\\n * **Failed** \\\n * **Succeeded** \\\n * **CompletedWithWarnings**\n */\nexport type PatchOperationStatus = string;\n\n/** Known values of {@link RepairAction} that the service accepts. */\nexport enum KnownRepairAction {\n  Replace = \"Replace\",\n  Restart = \"Restart\",\n  Reimage = \"Reimage\"\n}\n\n/**\n * Defines values for RepairAction. \\\n * {@link KnownRepairAction} can be used interchangeably with RepairAction,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **Replace** \\\n * **Restart** \\\n * **Reimage**\n */\nexport type RepairAction = string;\n\n/** Known values of {@link IPVersion} that the service accepts. */\nexport enum KnownIPVersion {\n  IPv4 = \"IPv4\",\n  IPv6 = \"IPv6\"\n}\n\n/**\n * Defines values for IPVersion. \\\n * {@link KnownIPVersion} can be used interchangeably with IPVersion,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **IPv4** \\\n * **IPv6**\n */\nexport type IPVersion = string;\n\n/** Known values of {@link VirtualMachineScaleSetScaleInRules} that the service accepts. */\nexport enum KnownVirtualMachineScaleSetScaleInRules {\n  Default = \"Default\",\n  OldestVM = \"OldestVM\",\n  NewestVM = \"NewestVM\"\n}\n\n/**\n * Defines values for VirtualMachineScaleSetScaleInRules. \\\n * {@link KnownVirtualMachineScaleSetScaleInRules} can be used interchangeably with VirtualMachineScaleSetScaleInRules,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **Default** \\\n * **OldestVM** \\\n * **NewestVM**\n */\nexport type VirtualMachineScaleSetScaleInRules = string;\n\n/** Known values of {@link OrchestrationMode} that the service accepts. */\nexport enum KnownOrchestrationMode {\n  Uniform = \"Uniform\",\n  Flexible = \"Flexible\"\n}\n\n/**\n * Defines values for OrchestrationMode. \\\n * {@link KnownOrchestrationMode} can be used interchangeably with OrchestrationMode,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **Uniform** \\\n * **Flexible**\n */\nexport type OrchestrationMode = string;\n\n/** Known values of {@link OperatingSystemType} that the service accepts. */\nexport enum KnownOperatingSystemType {\n  Windows = \"Windows\",\n  Linux = \"Linux\"\n}\n\n/**\n * Defines values for OperatingSystemType. \\\n * {@link KnownOperatingSystemType} can be used interchangeably with OperatingSystemType,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **Windows** \\\n * **Linux**\n */\nexport type OperatingSystemType = string;\n\n/** Known values of {@link ConsistencyModeTypes} that the service accepts. */\nexport enum KnownConsistencyModeTypes {\n  CrashConsistent = \"CrashConsistent\",\n  FileSystemConsistent = \"FileSystemConsistent\",\n  ApplicationConsistent = \"ApplicationConsistent\"\n}\n\n/**\n * Defines values for ConsistencyModeTypes. \\\n * {@link KnownConsistencyModeTypes} can be used interchangeably with ConsistencyModeTypes,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **CrashConsistent** \\\n * **FileSystemConsistent** \\\n * **ApplicationConsistent**\n */\nexport type ConsistencyModeTypes = string;\n\n/** Known values of {@link RestorePointCollectionExpandOptions} that the service accepts. */\nexport enum KnownRestorePointCollectionExpandOptions {\n  RestorePoints = \"restorePoints\"\n}\n\n/**\n * Defines values for RestorePointCollectionExpandOptions. \\\n * {@link KnownRestorePointCollectionExpandOptions} can be used interchangeably with RestorePointCollectionExpandOptions,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **restorePoints**\n */\nexport type RestorePointCollectionExpandOptions = string;\n\n/** Known values of {@link RestorePointExpandOptions} that the service accepts. */\nexport enum KnownRestorePointExpandOptions {\n  InstanceView = \"instanceView\"\n}\n\n/**\n * Defines values for RestorePointExpandOptions. \\\n * {@link KnownRestorePointExpandOptions} can be used interchangeably with RestorePointExpandOptions,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **instanceView**\n */\nexport type RestorePointExpandOptions = string;\n\n/** Known values of {@link CapacityReservationGroupInstanceViewTypes} that the service accepts. */\nexport enum KnownCapacityReservationGroupInstanceViewTypes {\n  InstanceView = \"instanceView\"\n}\n\n/**\n * Defines values for CapacityReservationGroupInstanceViewTypes. \\\n * {@link KnownCapacityReservationGroupInstanceViewTypes} can be used interchangeably with CapacityReservationGroupInstanceViewTypes,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **instanceView**\n */\nexport type CapacityReservationGroupInstanceViewTypes = string;\n\n/** Known values of {@link ExpandTypesForGetCapacityReservationGroups} that the service accepts. */\nexport enum KnownExpandTypesForGetCapacityReservationGroups {\n  VirtualMachineScaleSetVMsRef = \"virtualMachineScaleSetVMs/$ref\",\n  VirtualMachinesRef = \"virtualMachines/$ref\"\n}\n\n/**\n * Defines values for ExpandTypesForGetCapacityReservationGroups. \\\n * {@link KnownExpandTypesForGetCapacityReservationGroups} can be used interchangeably with ExpandTypesForGetCapacityReservationGroups,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **virtualMachineScaleSetVMs\\/$ref** \\\n * **virtualMachines\\/$ref**\n */\nexport type ExpandTypesForGetCapacityReservationGroups = string;\n\n/** Known values of {@link CapacityReservationInstanceViewTypes} that the service accepts. */\nexport enum KnownCapacityReservationInstanceViewTypes {\n  InstanceView = \"instanceView\"\n}\n\n/**\n * Defines values for CapacityReservationInstanceViewTypes. \\\n * {@link KnownCapacityReservationInstanceViewTypes} can be used interchangeably with CapacityReservationInstanceViewTypes,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **instanceView**\n */\nexport type CapacityReservationInstanceViewTypes = string;\n\n/** Known values of {@link VMGuestPatchRebootBehavior} that the service accepts. */\nexport enum KnownVMGuestPatchRebootBehavior {\n  Unknown = \"Unknown\",\n  NeverReboots = \"NeverReboots\",\n  AlwaysRequiresReboot = \"AlwaysRequiresReboot\",\n  CanRequestReboot = \"CanRequestReboot\"\n}\n\n/**\n * Defines values for VMGuestPatchRebootBehavior. \\\n * {@link KnownVMGuestPatchRebootBehavior} can be used interchangeably with VMGuestPatchRebootBehavior,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **Unknown** \\\n * **NeverReboots** \\\n * **AlwaysRequiresReboot** \\\n * **CanRequestReboot**\n */\nexport type VMGuestPatchRebootBehavior = string;\n\n/** Known values of {@link PatchAssessmentState} that the service accepts. */\nexport enum KnownPatchAssessmentState {\n  Unknown = \"Unknown\",\n  Available = \"Available\"\n}\n\n/**\n * Defines values for PatchAssessmentState. \\\n * {@link KnownPatchAssessmentState} can be used interchangeably with PatchAssessmentState,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **Unknown** \\\n * **Available**\n */\nexport type PatchAssessmentState = string;\n\n/** Known values of {@link VMGuestPatchRebootSetting} that the service accepts. */\nexport enum KnownVMGuestPatchRebootSetting {\n  IfRequired = \"IfRequired\",\n  Never = \"Never\",\n  Always = \"Always\"\n}\n\n/**\n * Defines values for VMGuestPatchRebootSetting. \\\n * {@link KnownVMGuestPatchRebootSetting} can be used interchangeably with VMGuestPatchRebootSetting,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **IfRequired** \\\n * **Never** \\\n * **Always**\n */\nexport type VMGuestPatchRebootSetting = string;\n\n/** Known values of {@link VMGuestPatchClassificationWindows} that the service accepts. */\nexport enum KnownVMGuestPatchClassificationWindows {\n  Critical = \"Critical\",\n  Security = \"Security\",\n  UpdateRollUp = \"UpdateRollUp\",\n  FeaturePack = \"FeaturePack\",\n  ServicePack = \"ServicePack\",\n  Definition = \"Definition\",\n  Tools = \"Tools\",\n  Updates = \"Updates\"\n}\n\n/**\n * Defines values for VMGuestPatchClassificationWindows. \\\n * {@link KnownVMGuestPatchClassificationWindows} can be used interchangeably with VMGuestPatchClassificationWindows,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **Critical** \\\n * **Security** \\\n * **UpdateRollUp** \\\n * **FeaturePack** \\\n * **ServicePack** \\\n * **Definition** \\\n * **Tools** \\\n * **Updates**\n */\nexport type VMGuestPatchClassificationWindows = string;\n\n/** Known values of {@link VMGuestPatchClassificationLinux} that the service accepts. */\nexport enum KnownVMGuestPatchClassificationLinux {\n  Critical = \"Critical\",\n  Security = \"Security\",\n  Other = \"Other\"\n}\n\n/**\n * Defines values for VMGuestPatchClassificationLinux. \\\n * {@link KnownVMGuestPatchClassificationLinux} can be used interchangeably with VMGuestPatchClassificationLinux,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **Critical** \\\n * **Security** \\\n * **Other**\n */\nexport type VMGuestPatchClassificationLinux = string;\n\n/** Known values of {@link VMGuestPatchRebootStatus} that the service accepts. */\nexport enum KnownVMGuestPatchRebootStatus {\n  Unknown = \"Unknown\",\n  NotNeeded = \"NotNeeded\",\n  Required = \"Required\",\n  Started = \"Started\",\n  Failed = \"Failed\",\n  Completed = \"Completed\"\n}\n\n/**\n * Defines values for VMGuestPatchRebootStatus. \\\n * {@link KnownVMGuestPatchRebootStatus} can be used interchangeably with VMGuestPatchRebootStatus,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **Unknown** \\\n * **NotNeeded** \\\n * **Required** \\\n * **Started** \\\n * **Failed** \\\n * **Completed**\n */\nexport type VMGuestPatchRebootStatus = string;\n\n/** Known values of {@link PatchInstallationState} that the service accepts. */\nexport enum KnownPatchInstallationState {\n  Unknown = \"Unknown\",\n  Installed = \"Installed\",\n  Failed = \"Failed\",\n  Excluded = \"Excluded\",\n  NotSelected = \"NotSelected\",\n  Pending = \"Pending\"\n}\n\n/**\n * Defines values for PatchInstallationState. \\\n * {@link KnownPatchInstallationState} can be used interchangeably with PatchInstallationState,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **Unknown** \\\n * **Installed** \\\n * **Failed** \\\n * **Excluded** \\\n * **NotSelected** \\\n * **Pending**\n */\nexport type PatchInstallationState = string;\n\n/** Known values of {@link ExpandTypesForGetVMScaleSets} that the service accepts. */\nexport enum KnownExpandTypesForGetVMScaleSets {\n  UserData = \"userData\"\n}\n\n/**\n * Defines values for ExpandTypesForGetVMScaleSets. \\\n * {@link KnownExpandTypesForGetVMScaleSets} can be used interchangeably with ExpandTypesForGetVMScaleSets,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **userData**\n */\nexport type ExpandTypesForGetVMScaleSets = string;\n\n/** Known values of {@link OrchestrationServiceNames} that the service accepts. */\nexport enum KnownOrchestrationServiceNames {\n  AutomaticRepairs = \"AutomaticRepairs\",\n  DummyOrchestrationServiceName = \"DummyOrchestrationServiceName\"\n}\n\n/**\n * Defines values for OrchestrationServiceNames. \\\n * {@link KnownOrchestrationServiceNames} can be used interchangeably with OrchestrationServiceNames,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **AutomaticRepairs** \\\n * **DummyOrchestrationServiceName**\n */\nexport type OrchestrationServiceNames = string;\n\n/** Known values of {@link OrchestrationServiceState} that the service accepts. */\nexport enum KnownOrchestrationServiceState {\n  NotRunning = \"NotRunning\",\n  Running = \"Running\",\n  Suspended = \"Suspended\"\n}\n\n/**\n * Defines values for OrchestrationServiceState. \\\n * {@link KnownOrchestrationServiceState} can be used interchangeably with OrchestrationServiceState,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **NotRunning** \\\n * **Running** \\\n * **Suspended**\n */\nexport type OrchestrationServiceState = string;\n\n/** Known values of {@link OrchestrationServiceStateAction} that the service accepts. */\nexport enum KnownOrchestrationServiceStateAction {\n  Resume = \"Resume\",\n  Suspend = \"Suspend\"\n}\n\n/**\n * Defines values for OrchestrationServiceStateAction. \\\n * {@link KnownOrchestrationServiceStateAction} can be used interchangeably with OrchestrationServiceStateAction,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **Resume** \\\n * **Suspend**\n */\nexport type OrchestrationServiceStateAction = string;\n\n/** Known values of {@link ExecutionState} that the service accepts. */\nexport enum KnownExecutionState {\n  Unknown = \"Unknown\",\n  Pending = \"Pending\",\n  Running = \"Running\",\n  Failed = \"Failed\",\n  Succeeded = \"Succeeded\",\n  TimedOut = \"TimedOut\",\n  Canceled = \"Canceled\"\n}\n\n/**\n * Defines values for ExecutionState. \\\n * {@link KnownExecutionState} can be used interchangeably with ExecutionState,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **Unknown** \\\n * **Pending** \\\n * **Running** \\\n * **Failed** \\\n * **Succeeded** \\\n * **TimedOut** \\\n * **Canceled**\n */\nexport type ExecutionState = string;\n\n/** Known values of {@link ExtendedLocationType} that the service accepts. */\nexport enum KnownExtendedLocationType {\n  EdgeZone = \"EdgeZone\"\n}\n\n/**\n * Defines values for ExtendedLocationType. \\\n * {@link KnownExtendedLocationType} can be used interchangeably with ExtendedLocationType,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **EdgeZone**\n */\nexport type ExtendedLocationType = string;\n\n/** Known values of {@link DiskStorageAccountTypes} that the service accepts. */\nexport enum KnownDiskStorageAccountTypes {\n  /** Standard HDD locally redundant storage. Best for backup, non-critical, and infrequent access. */\n  StandardLRS = \"Standard_LRS\",\n  /** Premium SSD locally redundant storage. Best for production and performance sensitive workloads. */\n  PremiumLRS = \"Premium_LRS\",\n  /** Standard SSD locally redundant storage. Best for web servers, lightly used enterprise applications and dev/test. */\n  StandardSSDLRS = \"StandardSSD_LRS\",\n  /** Ultra SSD locally redundant storage. Best for IO-intensive workloads such as SAP HANA, top tier databases (for example, SQL, Oracle), and other transaction-heavy workloads. */\n  UltraSSDLRS = \"UltraSSD_LRS\",\n  /** Premium SSD zone redundant storage. Best for the production workloads that need storage resiliency against zone failures. */\n  PremiumZRS = \"Premium_ZRS\",\n  /** Standard SSD zone redundant storage. Best for web servers, lightly used enterprise applications and dev/test that need storage resiliency against zone failures. */\n  StandardSSDZRS = \"StandardSSD_ZRS\"\n}\n\n/**\n * Defines values for DiskStorageAccountTypes. \\\n * {@link KnownDiskStorageAccountTypes} can be used interchangeably with DiskStorageAccountTypes,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **Standard_LRS**: Standard HDD locally redundant storage. Best for backup, non-critical, and infrequent access. \\\n * **Premium_LRS**: Premium SSD locally redundant storage. Best for production and performance sensitive workloads. \\\n * **StandardSSD_LRS**: Standard SSD locally redundant storage. Best for web servers, lightly used enterprise applications and dev\\/test. \\\n * **UltraSSD_LRS**: Ultra SSD locally redundant storage. Best for IO-intensive workloads such as SAP HANA, top tier databases (for example, SQL, Oracle), and other transaction-heavy workloads. \\\n * **Premium_ZRS**: Premium SSD zone redundant storage. Best for the production workloads that need storage resiliency against zone failures. \\\n * **StandardSSD_ZRS**: Standard SSD zone redundant storage. Best for web servers, lightly used enterprise applications and dev\\/test that need storage resiliency against zone failures.\n */\nexport type DiskStorageAccountTypes = string;\n\n/** Known values of {@link HyperVGeneration} that the service accepts. */\nexport enum KnownHyperVGeneration {\n  V1 = \"V1\",\n  V2 = \"V2\"\n}\n\n/**\n * Defines values for HyperVGeneration. \\\n * {@link KnownHyperVGeneration} can be used interchangeably with HyperVGeneration,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **V1** \\\n * **V2**\n */\nexport type HyperVGeneration = string;\n\n/** Known values of {@link DiskCreateOption} that the service accepts. */\nexport enum KnownDiskCreateOption {\n  /** Create an empty data disk of a size given by diskSizeGB. */\n  Empty = \"Empty\",\n  /** Disk will be attached to a VM. */\n  Attach = \"Attach\",\n  /** Create a new disk from a platform image specified by the given imageReference or galleryImageReference. */\n  FromImage = \"FromImage\",\n  /** Create a disk by importing from a blob specified by a sourceUri in a storage account specified by storageAccountId. */\n  Import = \"Import\",\n  /** Create a new disk or snapshot by copying from a disk or snapshot specified by the given sourceResourceId. */\n  Copy = \"Copy\",\n  /** Create a new disk by copying from a backup recovery point. */\n  Restore = \"Restore\",\n  /** Create a new disk by obtaining a write token and using it to directly upload the contents of the disk. */\n  Upload = \"Upload\",\n  /** Create a new disk by using a deep copy process, where the resource creation is considered complete only after all data has been copied from the source. */\n  CopyStart = \"CopyStart\",\n  /** Similar to Import create option. Create a new Trusted Launch VM or Confidential VM supported disk by importing additional blob for VM guest state specified by securityDataUri in storage account specified by storageAccountId */\n  ImportSecure = \"ImportSecure\",\n  /** Similar to Upload create option. Create a new Trusted Launch VM or Confidential VM supported disk and upload using write token in both disk and VM guest state */\n  UploadPreparedSecure = \"UploadPreparedSecure\"\n}\n\n/**\n * Defines values for DiskCreateOption. \\\n * {@link KnownDiskCreateOption} can be used interchangeably with DiskCreateOption,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **Empty**: Create an empty data disk of a size given by diskSizeGB. \\\n * **Attach**: Disk will be attached to a VM. \\\n * **FromImage**: Create a new disk from a platform image specified by the given imageReference or galleryImageReference. \\\n * **Import**: Create a disk by importing from a blob specified by a sourceUri in a storage account specified by storageAccountId. \\\n * **Copy**: Create a new disk or snapshot by copying from a disk or snapshot specified by the given sourceResourceId. \\\n * **Restore**: Create a new disk by copying from a backup recovery point. \\\n * **Upload**: Create a new disk by obtaining a write token and using it to directly upload the contents of the disk. \\\n * **CopyStart**: Create a new disk by using a deep copy process, where the resource creation is considered complete only after all data has been copied from the source. \\\n * **ImportSecure**: Similar to Import create option. Create a new Trusted Launch VM or Confidential VM supported disk by importing additional blob for VM guest state specified by securityDataUri in storage account specified by storageAccountId \\\n * **UploadPreparedSecure**: Similar to Upload create option. Create a new Trusted Launch VM or Confidential VM supported disk and upload using write token in both disk and VM guest state\n */\nexport type DiskCreateOption = string;\n\n/** Known values of {@link DiskState} that the service accepts. */\nexport enum KnownDiskState {\n  /** The disk is not being used and can be attached to a VM. */\n  Unattached = \"Unattached\",\n  /** The disk is currently attached to a running VM. */\n  Attached = \"Attached\",\n  /** The disk is attached to a stopped-deallocated VM. */\n  Reserved = \"Reserved\",\n  /** The disk is attached to a VM which is in hibernated state. */\n  Frozen = \"Frozen\",\n  /** The disk currently has an Active SAS Uri associated with it. */\n  ActiveSAS = \"ActiveSAS\",\n  /** The disk is attached to a VM in hibernated state and has an active SAS URI associated with it. */\n  ActiveSASFrozen = \"ActiveSASFrozen\",\n  /** A disk is ready to be created by upload by requesting a write token. */\n  ReadyToUpload = \"ReadyToUpload\",\n  /** A disk is created for upload and a write token has been issued for uploading to it. */\n  ActiveUpload = \"ActiveUpload\"\n}\n\n/**\n * Defines values for DiskState. \\\n * {@link KnownDiskState} can be used interchangeably with DiskState,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **Unattached**: The disk is not being used and can be attached to a VM. \\\n * **Attached**: The disk is currently attached to a running VM. \\\n * **Reserved**: The disk is attached to a stopped-deallocated VM. \\\n * **Frozen**: The disk is attached to a VM which is in hibernated state. \\\n * **ActiveSAS**: The disk currently has an Active SAS Uri associated with it. \\\n * **ActiveSASFrozen**: The disk is attached to a VM in hibernated state and has an active SAS URI associated with it. \\\n * **ReadyToUpload**: A disk is ready to be created by upload by requesting a write token. \\\n * **ActiveUpload**: A disk is created for upload and a write token has been issued for uploading to it.\n */\nexport type DiskState = string;\n\n/** Known values of {@link EncryptionType} that the service accepts. */\nexport enum KnownEncryptionType {\n  /** Disk is encrypted at rest with Platform managed key. It is the default encryption type. This is not a valid encryption type for disk encryption sets. */\n  EncryptionAtRestWithPlatformKey = \"EncryptionAtRestWithPlatformKey\",\n  /** Disk is encrypted at rest with Customer managed key that can be changed and revoked by a customer. */\n  EncryptionAtRestWithCustomerKey = \"EncryptionAtRestWithCustomerKey\",\n  /** Disk is encrypted at rest with 2 layers of encryption. One of the keys is Customer managed and the other key is Platform managed. */\n  EncryptionAtRestWithPlatformAndCustomerKeys = \"EncryptionAtRestWithPlatformAndCustomerKeys\"\n}\n\n/**\n * Defines values for EncryptionType. \\\n * {@link KnownEncryptionType} can be used interchangeably with EncryptionType,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **EncryptionAtRestWithPlatformKey**: Disk is encrypted at rest with Platform managed key. It is the default encryption type. This is not a valid encryption type for disk encryption sets. \\\n * **EncryptionAtRestWithCustomerKey**: Disk is encrypted at rest with Customer managed key that can be changed and revoked by a customer. \\\n * **EncryptionAtRestWithPlatformAndCustomerKeys**: Disk is encrypted at rest with 2 layers of encryption. One of the keys is Customer managed and the other key is Platform managed.\n */\nexport type EncryptionType = string;\n\n/** Known values of {@link NetworkAccessPolicy} that the service accepts. */\nexport enum KnownNetworkAccessPolicy {\n  /** The disk can be exported or uploaded to from any network. */\n  AllowAll = \"AllowAll\",\n  /** The disk can be exported or uploaded to using a DiskAccess resource's private endpoints. */\n  AllowPrivate = \"AllowPrivate\",\n  /** The disk cannot be exported. */\n  DenyAll = \"DenyAll\"\n}\n\n/**\n * Defines values for NetworkAccessPolicy. \\\n * {@link KnownNetworkAccessPolicy} can be used interchangeably with NetworkAccessPolicy,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **AllowAll**: The disk can be exported or uploaded to from any network. \\\n * **AllowPrivate**: The disk can be exported or uploaded to using a DiskAccess resource's private endpoints. \\\n * **DenyAll**: The disk cannot be exported.\n */\nexport type NetworkAccessPolicy = string;\n\n/** Known values of {@link DiskSecurityTypes} that the service accepts. */\nexport enum KnownDiskSecurityTypes {\n  /** Trusted Launch provides security features such as secure boot and virtual Trusted Platform Module (vTPM) */\n  TrustedLaunch = \"TrustedLaunch\",\n  /** Indicates Confidential VM disk with only VM guest state encrypted */\n  ConfidentialVMVmguestStateOnlyEncryptedWithPlatformKey = \"ConfidentialVM_VMGuestStateOnlyEncryptedWithPlatformKey\",\n  /** Indicates Confidential VM disk with both OS disk and VM guest state encrypted with a platform managed key */\n  ConfidentialVMDiskEncryptedWithPlatformKey = \"ConfidentialVM_DiskEncryptedWithPlatformKey\",\n  /** Indicates Confidential VM disk with both OS disk and VM guest state encrypted with a customer managed key */\n  ConfidentialVMDiskEncryptedWithCustomerKey = \"ConfidentialVM_DiskEncryptedWithCustomerKey\"\n}\n\n/**\n * Defines values for DiskSecurityTypes. \\\n * {@link KnownDiskSecurityTypes} can be used interchangeably with DiskSecurityTypes,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **TrustedLaunch**: Trusted Launch provides security features such as secure boot and virtual Trusted Platform Module (vTPM) \\\n * **ConfidentialVM_VMGuestStateOnlyEncryptedWithPlatformKey**: Indicates Confidential VM disk with only VM guest state encrypted \\\n * **ConfidentialVM_DiskEncryptedWithPlatformKey**: Indicates Confidential VM disk with both OS disk and VM guest state encrypted with a platform managed key \\\n * **ConfidentialVM_DiskEncryptedWithCustomerKey**: Indicates Confidential VM disk with both OS disk and VM guest state encrypted with a customer managed key\n */\nexport type DiskSecurityTypes = string;\n\n/** Known values of {@link PublicNetworkAccess} that the service accepts. */\nexport enum KnownPublicNetworkAccess {\n  /** You can generate a SAS URI to access the underlying data of the disk publicly on the internet when NetworkAccessPolicy is set to AllowAll. You can access the data via the SAS URI only from your trusted Azure VNET when NetworkAccessPolicy is set to AllowPrivate. */\n  Enabled = \"Enabled\",\n  /** You cannot access the underlying data of the disk publicly on the internet even when NetworkAccessPolicy is set to AllowAll. You can access the data via the SAS URI only from your trusted Azure VNET when NetworkAccessPolicy is set to AllowPrivate. */\n  Disabled = \"Disabled\"\n}\n\n/**\n * Defines values for PublicNetworkAccess. \\\n * {@link KnownPublicNetworkAccess} can be used interchangeably with PublicNetworkAccess,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **Enabled**: You can generate a SAS URI to access the underlying data of the disk publicly on the internet when NetworkAccessPolicy is set to AllowAll. You can access the data via the SAS URI only from your trusted Azure VNET when NetworkAccessPolicy is set to AllowPrivate. \\\n * **Disabled**: You cannot access the underlying data of the disk publicly on the internet even when NetworkAccessPolicy is set to AllowAll. You can access the data via the SAS URI only from your trusted Azure VNET when NetworkAccessPolicy is set to AllowPrivate.\n */\nexport type PublicNetworkAccess = string;\n\n/** Known values of {@link AccessLevel} that the service accepts. */\nexport enum KnownAccessLevel {\n  None = \"None\",\n  Read = \"Read\",\n  Write = \"Write\"\n}\n\n/**\n * Defines values for AccessLevel. \\\n * {@link KnownAccessLevel} can be used interchangeably with AccessLevel,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **None** \\\n * **Read** \\\n * **Write**\n */\nexport type AccessLevel = string;\n\n/** Known values of {@link SnapshotStorageAccountTypes} that the service accepts. */\nexport enum KnownSnapshotStorageAccountTypes {\n  /** Standard HDD locally redundant storage */\n  StandardLRS = \"Standard_LRS\",\n  /** Premium SSD locally redundant storage */\n  PremiumLRS = \"Premium_LRS\",\n  /** Standard zone redundant storage */\n  StandardZRS = \"Standard_ZRS\"\n}\n\n/**\n * Defines values for SnapshotStorageAccountTypes. \\\n * {@link KnownSnapshotStorageAccountTypes} can be used interchangeably with SnapshotStorageAccountTypes,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **Standard_LRS**: Standard HDD locally redundant storage \\\n * **Premium_LRS**: Premium SSD locally redundant storage \\\n * **Standard_ZRS**: Standard zone redundant storage\n */\nexport type SnapshotStorageAccountTypes = string;\n\n/** Known values of {@link DiskEncryptionSetIdentityType} that the service accepts. */\nexport enum KnownDiskEncryptionSetIdentityType {\n  SystemAssigned = \"SystemAssigned\",\n  None = \"None\"\n}\n\n/**\n * Defines values for DiskEncryptionSetIdentityType. \\\n * {@link KnownDiskEncryptionSetIdentityType} can be used interchangeably with DiskEncryptionSetIdentityType,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **SystemAssigned** \\\n * **None**\n */\nexport type DiskEncryptionSetIdentityType = string;\n\n/** Known values of {@link DiskEncryptionSetType} that the service accepts. */\nexport enum KnownDiskEncryptionSetType {\n  /** Resource using diskEncryptionSet would be encrypted at rest with Customer managed key that can be changed and revoked by a customer. */\n  EncryptionAtRestWithCustomerKey = \"EncryptionAtRestWithCustomerKey\",\n  /** Resource using diskEncryptionSet would be encrypted at rest with two layers of encryption. One of the keys is Customer managed and the other key is Platform managed. */\n  EncryptionAtRestWithPlatformAndCustomerKeys = \"EncryptionAtRestWithPlatformAndCustomerKeys\",\n  /** Confidential VM supported disk and VM guest state would be encrypted with customer managed key. */\n  ConfidentialVmEncryptedWithCustomerKey = \"ConfidentialVmEncryptedWithCustomerKey\"\n}\n\n/**\n * Defines values for DiskEncryptionSetType. \\\n * {@link KnownDiskEncryptionSetType} can be used interchangeably with DiskEncryptionSetType,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **EncryptionAtRestWithCustomerKey**: Resource using diskEncryptionSet would be encrypted at rest with Customer managed key that can be changed and revoked by a customer. \\\n * **EncryptionAtRestWithPlatformAndCustomerKeys**: Resource using diskEncryptionSet would be encrypted at rest with two layers of encryption. One of the keys is Customer managed and the other key is Platform managed. \\\n * **ConfidentialVmEncryptedWithCustomerKey**: Confidential VM supported disk and VM guest state would be encrypted with customer managed key.\n */\nexport type DiskEncryptionSetType = string;\n\n/** Known values of {@link PrivateEndpointServiceConnectionStatus} that the service accepts. */\nexport enum KnownPrivateEndpointServiceConnectionStatus {\n  Pending = \"Pending\",\n  Approved = \"Approved\",\n  Rejected = \"Rejected\"\n}\n\n/**\n * Defines values for PrivateEndpointServiceConnectionStatus. \\\n * {@link KnownPrivateEndpointServiceConnectionStatus} can be used interchangeably with PrivateEndpointServiceConnectionStatus,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **Pending** \\\n * **Approved** \\\n * **Rejected**\n */\nexport type PrivateEndpointServiceConnectionStatus = string;\n\n/** Known values of {@link PrivateEndpointConnectionProvisioningState} that the service accepts. */\nexport enum KnownPrivateEndpointConnectionProvisioningState {\n  Succeeded = \"Succeeded\",\n  Creating = \"Creating\",\n  Deleting = \"Deleting\",\n  Failed = \"Failed\"\n}\n\n/**\n * Defines values for PrivateEndpointConnectionProvisioningState. \\\n * {@link KnownPrivateEndpointConnectionProvisioningState} can be used interchangeably with PrivateEndpointConnectionProvisioningState,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **Succeeded** \\\n * **Creating** \\\n * **Deleting** \\\n * **Failed**\n */\nexport type PrivateEndpointConnectionProvisioningState = string;\n\n/** Known values of {@link GalleryPropertiesProvisioningState} that the service accepts. */\nexport enum KnownGalleryPropertiesProvisioningState {\n  Creating = \"Creating\",\n  Updating = \"Updating\",\n  Failed = \"Failed\",\n  Succeeded = \"Succeeded\",\n  Deleting = \"Deleting\",\n  Migrating = \"Migrating\"\n}\n\n/**\n * Defines values for GalleryPropertiesProvisioningState. \\\n * {@link KnownGalleryPropertiesProvisioningState} can be used interchangeably with GalleryPropertiesProvisioningState,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **Creating** \\\n * **Updating** \\\n * **Failed** \\\n * **Succeeded** \\\n * **Deleting** \\\n * **Migrating**\n */\nexport type GalleryPropertiesProvisioningState = string;\n\n/** Known values of {@link GallerySharingPermissionTypes} that the service accepts. */\nexport enum KnownGallerySharingPermissionTypes {\n  Private = \"Private\",\n  Groups = \"Groups\"\n}\n\n/**\n * Defines values for GallerySharingPermissionTypes. \\\n * {@link KnownGallerySharingPermissionTypes} can be used interchangeably with GallerySharingPermissionTypes,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **Private** \\\n * **Groups**\n */\nexport type GallerySharingPermissionTypes = string;\n\n/** Known values of {@link SharingProfileGroupTypes} that the service accepts. */\nexport enum KnownSharingProfileGroupTypes {\n  Subscriptions = \"Subscriptions\",\n  AADTenants = \"AADTenants\",\n  Community = \"Community\"\n}\n\n/**\n * Defines values for SharingProfileGroupTypes. \\\n * {@link KnownSharingProfileGroupTypes} can be used interchangeably with SharingProfileGroupTypes,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **Subscriptions** \\\n * **AADTenants** \\\n * **Community**\n */\nexport type SharingProfileGroupTypes = string;\n\n/** Known values of {@link SharingState} that the service accepts. */\nexport enum KnownSharingState {\n  Succeeded = \"Succeeded\",\n  InProgress = \"InProgress\",\n  Failed = \"Failed\",\n  Unknown = \"Unknown\"\n}\n\n/**\n * Defines values for SharingState. \\\n * {@link KnownSharingState} can be used interchangeably with SharingState,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **Succeeded** \\\n * **InProgress** \\\n * **Failed** \\\n * **Unknown**\n */\nexport type SharingState = string;\n\n/** Known values of {@link SelectPermissions} that the service accepts. */\nexport enum KnownSelectPermissions {\n  Permissions = \"Permissions\"\n}\n\n/**\n * Defines values for SelectPermissions. \\\n * {@link KnownSelectPermissions} can be used interchangeably with SelectPermissions,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **Permissions**\n */\nexport type SelectPermissions = string;\n\n/** Known values of {@link GalleryExpandParams} that the service accepts. */\nexport enum KnownGalleryExpandParams {\n  SharingProfileGroups = \"SharingProfile/Groups\"\n}\n\n/**\n * Defines values for GalleryExpandParams. \\\n * {@link KnownGalleryExpandParams} can be used interchangeably with GalleryExpandParams,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **SharingProfile\\/Groups**\n */\nexport type GalleryExpandParams = string;\n\n/** Known values of {@link GalleryImagePropertiesProvisioningState} that the service accepts. */\nexport enum KnownGalleryImagePropertiesProvisioningState {\n  Creating = \"Creating\",\n  Updating = \"Updating\",\n  Failed = \"Failed\",\n  Succeeded = \"Succeeded\",\n  Deleting = \"Deleting\",\n  Migrating = \"Migrating\"\n}\n\n/**\n * Defines values for GalleryImagePropertiesProvisioningState. \\\n * {@link KnownGalleryImagePropertiesProvisioningState} can be used interchangeably with GalleryImagePropertiesProvisioningState,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **Creating** \\\n * **Updating** \\\n * **Failed** \\\n * **Succeeded** \\\n * **Deleting** \\\n * **Migrating**\n */\nexport type GalleryImagePropertiesProvisioningState = string;\n\n/** Known values of {@link StorageAccountType} that the service accepts. */\nexport enum KnownStorageAccountType {\n  StandardLRS = \"Standard_LRS\",\n  StandardZRS = \"Standard_ZRS\",\n  PremiumLRS = \"Premium_LRS\"\n}\n\n/**\n * Defines values for StorageAccountType. \\\n * {@link KnownStorageAccountType} can be used interchangeably with StorageAccountType,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **Standard_LRS** \\\n * **Standard_ZRS** \\\n * **Premium_LRS**\n */\nexport type StorageAccountType = string;\n\n/** Known values of {@link ConfidentialVMEncryptionType} that the service accepts. */\nexport enum KnownConfidentialVMEncryptionType {\n  EncryptedVMGuestStateOnlyWithPmk = \"EncryptedVMGuestStateOnlyWithPmk\",\n  EncryptedWithPmk = \"EncryptedWithPmk\",\n  EncryptedWithCmk = \"EncryptedWithCmk\"\n}\n\n/**\n * Defines values for ConfidentialVMEncryptionType. \\\n * {@link KnownConfidentialVMEncryptionType} can be used interchangeably with ConfidentialVMEncryptionType,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **EncryptedVMGuestStateOnlyWithPmk** \\\n * **EncryptedWithPmk** \\\n * **EncryptedWithCmk**\n */\nexport type ConfidentialVMEncryptionType = string;\n\n/** Known values of {@link ReplicationMode} that the service accepts. */\nexport enum KnownReplicationMode {\n  Full = \"Full\",\n  Shallow = \"Shallow\"\n}\n\n/**\n * Defines values for ReplicationMode. \\\n * {@link KnownReplicationMode} can be used interchangeably with ReplicationMode,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **Full** \\\n * **Shallow**\n */\nexport type ReplicationMode = string;\n\n/** Known values of {@link GalleryExtendedLocationType} that the service accepts. */\nexport enum KnownGalleryExtendedLocationType {\n  EdgeZone = \"EdgeZone\",\n  Unknown = \"Unknown\"\n}\n\n/**\n * Defines values for GalleryExtendedLocationType. \\\n * {@link KnownGalleryExtendedLocationType} can be used interchangeably with GalleryExtendedLocationType,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **EdgeZone** \\\n * **Unknown**\n */\nexport type GalleryExtendedLocationType = string;\n\n/** Known values of {@link GalleryImageVersionPropertiesProvisioningState} that the service accepts. */\nexport enum KnownGalleryImageVersionPropertiesProvisioningState {\n  Creating = \"Creating\",\n  Updating = \"Updating\",\n  Failed = \"Failed\",\n  Succeeded = \"Succeeded\",\n  Deleting = \"Deleting\",\n  Migrating = \"Migrating\"\n}\n\n/**\n * Defines values for GalleryImageVersionPropertiesProvisioningState. \\\n * {@link KnownGalleryImageVersionPropertiesProvisioningState} can be used interchangeably with GalleryImageVersionPropertiesProvisioningState,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **Creating** \\\n * **Updating** \\\n * **Failed** \\\n * **Succeeded** \\\n * **Deleting** \\\n * **Migrating**\n */\nexport type GalleryImageVersionPropertiesProvisioningState = string;\n\n/** Known values of {@link AggregatedReplicationState} that the service accepts. */\nexport enum KnownAggregatedReplicationState {\n  Unknown = \"Unknown\",\n  InProgress = \"InProgress\",\n  Completed = \"Completed\",\n  Failed = \"Failed\"\n}\n\n/**\n * Defines values for AggregatedReplicationState. \\\n * {@link KnownAggregatedReplicationState} can be used interchangeably with AggregatedReplicationState,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **Unknown** \\\n * **InProgress** \\\n * **Completed** \\\n * **Failed**\n */\nexport type AggregatedReplicationState = string;\n\n/** Known values of {@link ReplicationState} that the service accepts. */\nexport enum KnownReplicationState {\n  Unknown = \"Unknown\",\n  Replicating = \"Replicating\",\n  Completed = \"Completed\",\n  Failed = \"Failed\"\n}\n\n/**\n * Defines values for ReplicationState. \\\n * {@link KnownReplicationState} can be used interchangeably with ReplicationState,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **Unknown** \\\n * **Replicating** \\\n * **Completed** \\\n * **Failed**\n */\nexport type ReplicationState = string;\n\n/** Known values of {@link ReplicationStatusTypes} that the service accepts. */\nexport enum KnownReplicationStatusTypes {\n  ReplicationStatus = \"ReplicationStatus\"\n}\n\n/**\n * Defines values for ReplicationStatusTypes. \\\n * {@link KnownReplicationStatusTypes} can be used interchangeably with ReplicationStatusTypes,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **ReplicationStatus**\n */\nexport type ReplicationStatusTypes = string;\n\n/** Known values of {@link GalleryApplicationVersionPropertiesProvisioningState} that the service accepts. */\nexport enum KnownGalleryApplicationVersionPropertiesProvisioningState {\n  Creating = \"Creating\",\n  Updating = \"Updating\",\n  Failed = \"Failed\",\n  Succeeded = \"Succeeded\",\n  Deleting = \"Deleting\",\n  Migrating = \"Migrating\"\n}\n\n/**\n * Defines values for GalleryApplicationVersionPropertiesProvisioningState. \\\n * {@link KnownGalleryApplicationVersionPropertiesProvisioningState} can be used interchangeably with GalleryApplicationVersionPropertiesProvisioningState,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **Creating** \\\n * **Updating** \\\n * **Failed** \\\n * **Succeeded** \\\n * **Deleting** \\\n * **Migrating**\n */\nexport type GalleryApplicationVersionPropertiesProvisioningState = string;\n\n/** Known values of {@link SharingUpdateOperationTypes} that the service accepts. */\nexport enum KnownSharingUpdateOperationTypes {\n  Add = \"Add\",\n  Remove = \"Remove\",\n  Reset = \"Reset\",\n  EnableCommunity = \"EnableCommunity\"\n}\n\n/**\n * Defines values for SharingUpdateOperationTypes. \\\n * {@link KnownSharingUpdateOperationTypes} can be used interchangeably with SharingUpdateOperationTypes,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **Add** \\\n * **Remove** \\\n * **Reset** \\\n * **EnableCommunity**\n */\nexport type SharingUpdateOperationTypes = string;\n\n/** Known values of {@link SharedToValues} that the service accepts. */\nexport enum KnownSharedToValues {\n  Tenant = \"tenant\"\n}\n\n/**\n * Defines values for SharedToValues. \\\n * {@link KnownSharedToValues} can be used interchangeably with SharedToValues,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **tenant**\n */\nexport type SharedToValues = string;\n\n/** Known values of {@link CloudServiceUpgradeMode} that the service accepts. */\nexport enum KnownCloudServiceUpgradeMode {\n  Auto = \"Auto\",\n  Manual = \"Manual\",\n  Simultaneous = \"Simultaneous\"\n}\n\n/**\n * Defines values for CloudServiceUpgradeMode. \\\n * {@link KnownCloudServiceUpgradeMode} can be used interchangeably with CloudServiceUpgradeMode,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **Auto** \\\n * **Manual** \\\n * **Simultaneous**\n */\nexport type CloudServiceUpgradeMode = string;\n\n/** Known values of {@link AvailabilitySetSkuTypes} that the service accepts. */\nexport enum KnownAvailabilitySetSkuTypes {\n  Classic = \"Classic\",\n  Aligned = \"Aligned\"\n}\n\n/**\n * Defines values for AvailabilitySetSkuTypes. \\\n * {@link KnownAvailabilitySetSkuTypes} can be used interchangeably with AvailabilitySetSkuTypes,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **Classic** \\\n * **Aligned**\n */\nexport type AvailabilitySetSkuTypes = string;\n/** Defines values for StatusLevelTypes. */\nexport type StatusLevelTypes = \"Info\" | \"Warning\" | \"Error\";\n/** Defines values for InstanceViewTypes. */\nexport type InstanceViewTypes = \"instanceView\" | \"userData\";\n/** Defines values for DedicatedHostLicenseTypes. */\nexport type DedicatedHostLicenseTypes =\n  | \"None\"\n  | \"Windows_Server_Hybrid\"\n  | \"Windows_Server_Perpetual\";\n/** Defines values for OperatingSystemTypes. */\nexport type OperatingSystemTypes = \"Windows\" | \"Linux\";\n/** Defines values for CachingTypes. */\nexport type CachingTypes = \"None\" | \"ReadOnly\" | \"ReadWrite\";\n/** Defines values for SettingNames. */\nexport type SettingNames = \"AutoLogon\" | \"FirstLogonCommands\";\n/** Defines values for ProtocolTypes. */\nexport type ProtocolTypes = \"Http\" | \"Https\";\n/** Defines values for MaintenanceOperationResultCodeTypes. */\nexport type MaintenanceOperationResultCodeTypes =\n  | \"None\"\n  | \"RetryLater\"\n  | \"MaintenanceAborted\"\n  | \"MaintenanceCompleted\";\n/** Defines values for ResourceIdentityType. */\nexport type ResourceIdentityType =\n  | \"SystemAssigned\"\n  | \"UserAssigned\"\n  | \"SystemAssigned, UserAssigned\"\n  | \"None\";\n/** Defines values for UpgradeMode. */\nexport type UpgradeMode = \"Automatic\" | \"Manual\" | \"Rolling\";\n/** Defines values for OperatingSystemStateTypes. */\nexport type OperatingSystemStateTypes = \"Generalized\" | \"Specialized\";\n/** Defines values for VirtualMachineScaleSetSkuScaleType. */\nexport type VirtualMachineScaleSetSkuScaleType = \"Automatic\" | \"None\";\n/** Defines values for UpgradeState. */\nexport type UpgradeState =\n  | \"RollingForward\"\n  | \"Cancelled\"\n  | \"Completed\"\n  | \"Faulted\";\n/** Defines values for UpgradeOperationInvoker. */\nexport type UpgradeOperationInvoker = \"Unknown\" | \"User\" | \"Platform\";\n/** Defines values for RollingUpgradeStatusCode. */\nexport type RollingUpgradeStatusCode =\n  | \"RollingForward\"\n  | \"Cancelled\"\n  | \"Completed\"\n  | \"Faulted\";\n/** Defines values for RollingUpgradeActionType. */\nexport type RollingUpgradeActionType = \"Start\" | \"Cancel\";\n/** Defines values for IntervalInMins. */\nexport type IntervalInMins =\n  | \"ThreeMins\"\n  | \"FiveMins\"\n  | \"ThirtyMins\"\n  | \"SixtyMins\";\n/** Defines values for ResourceSkuCapacityScaleType. */\nexport type ResourceSkuCapacityScaleType = \"Automatic\" | \"Manual\" | \"None\";\n/** Defines values for ResourceSkuRestrictionsType. */\nexport type ResourceSkuRestrictionsType = \"Location\" | \"Zone\";\n/** Defines values for ResourceSkuRestrictionsReasonCode. */\nexport type ResourceSkuRestrictionsReasonCode =\n  | \"QuotaId\"\n  | \"NotAvailableForSubscription\";\n/** Defines values for HostCaching. */\nexport type HostCaching = \"None\" | \"ReadOnly\" | \"ReadWrite\";\n\n/** Optional parameters. */\nexport interface OperationsListOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the list operation. */\nexport type OperationsListResponse = ComputeOperationListResult;\n\n/** Optional parameters. */\nexport interface AvailabilitySetsCreateOrUpdateOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the createOrUpdate operation. */\nexport type AvailabilitySetsCreateOrUpdateResponse = AvailabilitySet;\n\n/** Optional parameters. */\nexport interface AvailabilitySetsUpdateOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the update operation. */\nexport type AvailabilitySetsUpdateResponse = AvailabilitySet;\n\n/** Optional parameters. */\nexport interface AvailabilitySetsDeleteOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Optional parameters. */\nexport interface AvailabilitySetsGetOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the get operation. */\nexport type AvailabilitySetsGetResponse = AvailabilitySet;\n\n/** Optional parameters. */\nexport interface AvailabilitySetsListBySubscriptionOptionalParams\n  extends coreClient.OperationOptions {\n  /** The expand expression to apply to the operation. Allowed values are 'instanceView'. */\n  expand?: string;\n}\n\n/** Contains response data for the listBySubscription operation. */\nexport type AvailabilitySetsListBySubscriptionResponse = AvailabilitySetListResult;\n\n/** Optional parameters. */\nexport interface AvailabilitySetsListOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the list operation. */\nexport type AvailabilitySetsListResponse = AvailabilitySetListResult;\n\n/** Optional parameters. */\nexport interface AvailabilitySetsListAvailableSizesOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listAvailableSizes operation. */\nexport type AvailabilitySetsListAvailableSizesResponse = VirtualMachineSizeListResult;\n\n/** Optional parameters. */\nexport interface AvailabilitySetsListBySubscriptionNextOptionalParams\n  extends coreClient.OperationOptions {\n  /** The expand expression to apply to the operation. Allowed values are 'instanceView'. */\n  expand?: string;\n}\n\n/** Contains response data for the listBySubscriptionNext operation. */\nexport type AvailabilitySetsListBySubscriptionNextResponse = AvailabilitySetListResult;\n\n/** Optional parameters. */\nexport interface AvailabilitySetsListNextOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listNext operation. */\nexport type AvailabilitySetsListNextResponse = AvailabilitySetListResult;\n\n/** Optional parameters. */\nexport interface ProximityPlacementGroupsCreateOrUpdateOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the createOrUpdate operation. */\nexport type ProximityPlacementGroupsCreateOrUpdateResponse = ProximityPlacementGroup;\n\n/** Optional parameters. */\nexport interface ProximityPlacementGroupsUpdateOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the update operation. */\nexport type ProximityPlacementGroupsUpdateResponse = ProximityPlacementGroup;\n\n/** Optional parameters. */\nexport interface ProximityPlacementGroupsDeleteOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Optional parameters. */\nexport interface ProximityPlacementGroupsGetOptionalParams\n  extends coreClient.OperationOptions {\n  /** includeColocationStatus=true enables fetching the colocation status of all the resources in the proximity placement group. */\n  includeColocationStatus?: string;\n}\n\n/** Contains response data for the get operation. */\nexport type ProximityPlacementGroupsGetResponse = ProximityPlacementGroup;\n\n/** Optional parameters. */\nexport interface ProximityPlacementGroupsListBySubscriptionOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listBySubscription operation. */\nexport type ProximityPlacementGroupsListBySubscriptionResponse = ProximityPlacementGroupListResult;\n\n/** Optional parameters. */\nexport interface ProximityPlacementGroupsListByResourceGroupOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listByResourceGroup operation. */\nexport type ProximityPlacementGroupsListByResourceGroupResponse = ProximityPlacementGroupListResult;\n\n/** Optional parameters. */\nexport interface ProximityPlacementGroupsListBySubscriptionNextOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listBySubscriptionNext operation. */\nexport type ProximityPlacementGroupsListBySubscriptionNextResponse = ProximityPlacementGroupListResult;\n\n/** Optional parameters. */\nexport interface ProximityPlacementGroupsListByResourceGroupNextOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listByResourceGroupNext operation. */\nexport type ProximityPlacementGroupsListByResourceGroupNextResponse = ProximityPlacementGroupListResult;\n\n/** Optional parameters. */\nexport interface DedicatedHostGroupsCreateOrUpdateOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the createOrUpdate operation. */\nexport type DedicatedHostGroupsCreateOrUpdateResponse = DedicatedHostGroup;\n\n/** Optional parameters. */\nexport interface DedicatedHostGroupsUpdateOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the update operation. */\nexport type DedicatedHostGroupsUpdateResponse = DedicatedHostGroup;\n\n/** Optional parameters. */\nexport interface DedicatedHostGroupsDeleteOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Optional parameters. */\nexport interface DedicatedHostGroupsGetOptionalParams\n  extends coreClient.OperationOptions {\n  /** The expand expression to apply on the operation. 'InstanceView' will retrieve the list of instance views of the dedicated hosts under the dedicated host group. 'UserData' is not supported for dedicated host group. */\n  expand?: InstanceViewTypes;\n}\n\n/** Contains response data for the get operation. */\nexport type DedicatedHostGroupsGetResponse = DedicatedHostGroup;\n\n/** Optional parameters. */\nexport interface DedicatedHostGroupsListByResourceGroupOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listByResourceGroup operation. */\nexport type DedicatedHostGroupsListByResourceGroupResponse = DedicatedHostGroupListResult;\n\n/** Optional parameters. */\nexport interface DedicatedHostGroupsListBySubscriptionOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listBySubscription operation. */\nexport type DedicatedHostGroupsListBySubscriptionResponse = DedicatedHostGroupListResult;\n\n/** Optional parameters. */\nexport interface DedicatedHostGroupsListByResourceGroupNextOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listByResourceGroupNext operation. */\nexport type DedicatedHostGroupsListByResourceGroupNextResponse = DedicatedHostGroupListResult;\n\n/** Optional parameters. */\nexport interface DedicatedHostGroupsListBySubscriptionNextOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listBySubscriptionNext operation. */\nexport type DedicatedHostGroupsListBySubscriptionNextResponse = DedicatedHostGroupListResult;\n\n/** Optional parameters. */\nexport interface DedicatedHostsCreateOrUpdateOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Contains response data for the createOrUpdate operation. */\nexport type DedicatedHostsCreateOrUpdateResponse = DedicatedHost;\n\n/** Optional parameters. */\nexport interface DedicatedHostsUpdateOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Contains response data for the update operation. */\nexport type DedicatedHostsUpdateResponse = DedicatedHost;\n\n/** Optional parameters. */\nexport interface DedicatedHostsDeleteOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Optional parameters. */\nexport interface DedicatedHostsGetOptionalParams\n  extends coreClient.OperationOptions {\n  /** The expand expression to apply on the operation. 'InstanceView' will retrieve the list of instance views of the dedicated host. 'UserData' is not supported for dedicated host. */\n  expand?: InstanceViewTypes;\n}\n\n/** Contains response data for the get operation. */\nexport type DedicatedHostsGetResponse = DedicatedHost;\n\n/** Optional parameters. */\nexport interface DedicatedHostsListByHostGroupOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listByHostGroup operation. */\nexport type DedicatedHostsListByHostGroupResponse = DedicatedHostListResult;\n\n/** Optional parameters. */\nexport interface DedicatedHostsRestartOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Optional parameters. */\nexport interface DedicatedHostsListByHostGroupNextOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listByHostGroupNext operation. */\nexport type DedicatedHostsListByHostGroupNextResponse = DedicatedHostListResult;\n\n/** Optional parameters. */\nexport interface SshPublicKeysListBySubscriptionOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listBySubscription operation. */\nexport type SshPublicKeysListBySubscriptionResponse = SshPublicKeysGroupListResult;\n\n/** Optional parameters. */\nexport interface SshPublicKeysListByResourceGroupOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listByResourceGroup operation. */\nexport type SshPublicKeysListByResourceGroupResponse = SshPublicKeysGroupListResult;\n\n/** Optional parameters. */\nexport interface SshPublicKeysCreateOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the create operation. */\nexport type SshPublicKeysCreateResponse = SshPublicKeyResource;\n\n/** Optional parameters. */\nexport interface SshPublicKeysUpdateOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the update operation. */\nexport type SshPublicKeysUpdateResponse = SshPublicKeyResource;\n\n/** Optional parameters. */\nexport interface SshPublicKeysDeleteOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Optional parameters. */\nexport interface SshPublicKeysGetOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the get operation. */\nexport type SshPublicKeysGetResponse = SshPublicKeyResource;\n\n/** Optional parameters. */\nexport interface SshPublicKeysGenerateKeyPairOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the generateKeyPair operation. */\nexport type SshPublicKeysGenerateKeyPairResponse = SshPublicKeyGenerateKeyPairResult;\n\n/** Optional parameters. */\nexport interface SshPublicKeysListBySubscriptionNextOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listBySubscriptionNext operation. */\nexport type SshPublicKeysListBySubscriptionNextResponse = SshPublicKeysGroupListResult;\n\n/** Optional parameters. */\nexport interface SshPublicKeysListByResourceGroupNextOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listByResourceGroupNext operation. */\nexport type SshPublicKeysListByResourceGroupNextResponse = SshPublicKeysGroupListResult;\n\n/** Optional parameters. */\nexport interface VirtualMachineExtensionImagesGetOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the get operation. */\nexport type VirtualMachineExtensionImagesGetResponse = VirtualMachineExtensionImage;\n\n/** Optional parameters. */\nexport interface VirtualMachineExtensionImagesListTypesOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listTypes operation. */\nexport type VirtualMachineExtensionImagesListTypesResponse = VirtualMachineExtensionImage[];\n\n/** Optional parameters. */\nexport interface VirtualMachineExtensionImagesListVersionsOptionalParams\n  extends coreClient.OperationOptions {\n  /** The filter to apply on the operation. */\n  filter?: string;\n  top?: number;\n  orderby?: string;\n}\n\n/** Contains response data for the listVersions operation. */\nexport type VirtualMachineExtensionImagesListVersionsResponse = VirtualMachineExtensionImage[];\n\n/** Optional parameters. */\nexport interface VirtualMachineExtensionsCreateOrUpdateOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Contains response data for the createOrUpdate operation. */\nexport type VirtualMachineExtensionsCreateOrUpdateResponse = VirtualMachineExtension;\n\n/** Optional parameters. */\nexport interface VirtualMachineExtensionsUpdateOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Contains response data for the update operation. */\nexport type VirtualMachineExtensionsUpdateResponse = VirtualMachineExtension;\n\n/** Optional parameters. */\nexport interface VirtualMachineExtensionsDeleteOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Optional parameters. */\nexport interface VirtualMachineExtensionsGetOptionalParams\n  extends coreClient.OperationOptions {\n  /** The expand expression to apply on the operation. */\n  expand?: string;\n}\n\n/** Contains response data for the get operation. */\nexport type VirtualMachineExtensionsGetResponse = VirtualMachineExtension;\n\n/** Optional parameters. */\nexport interface VirtualMachineExtensionsListOptionalParams\n  extends coreClient.OperationOptions {\n  /** The expand expression to apply on the operation. */\n  expand?: string;\n}\n\n/** Contains response data for the list operation. */\nexport type VirtualMachineExtensionsListResponse = VirtualMachineExtensionsListResult;\n\n/** Optional parameters. */\nexport interface VirtualMachineImagesGetOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the get operation. */\nexport type VirtualMachineImagesGetResponse = VirtualMachineImage;\n\n/** Optional parameters. */\nexport interface VirtualMachineImagesListOptionalParams\n  extends coreClient.OperationOptions {\n  /** The expand expression to apply on the operation. */\n  expand?: string;\n  top?: number;\n  orderby?: string;\n}\n\n/** Contains response data for the list operation. */\nexport type VirtualMachineImagesListResponse = VirtualMachineImageResource[];\n\n/** Optional parameters. */\nexport interface VirtualMachineImagesListOffersOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listOffers operation. */\nexport type VirtualMachineImagesListOffersResponse = VirtualMachineImageResource[];\n\n/** Optional parameters. */\nexport interface VirtualMachineImagesListPublishersOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listPublishers operation. */\nexport type VirtualMachineImagesListPublishersResponse = VirtualMachineImageResource[];\n\n/** Optional parameters. */\nexport interface VirtualMachineImagesListSkusOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listSkus operation. */\nexport type VirtualMachineImagesListSkusResponse = VirtualMachineImageResource[];\n\n/** Optional parameters. */\nexport interface VirtualMachineImagesEdgeZoneGetOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the get operation. */\nexport type VirtualMachineImagesEdgeZoneGetResponse = VirtualMachineImage;\n\n/** Optional parameters. */\nexport interface VirtualMachineImagesEdgeZoneListOptionalParams\n  extends coreClient.OperationOptions {\n  /** The expand expression to apply on the operation. */\n  expand?: string;\n  /** An integer value specifying the number of images to return that matches supplied values. */\n  top?: number;\n  /** Specifies the order of the results returned. Formatted as an OData query. */\n  orderby?: string;\n}\n\n/** Contains response data for the list operation. */\nexport type VirtualMachineImagesEdgeZoneListResponse = VirtualMachineImageResource[];\n\n/** Optional parameters. */\nexport interface VirtualMachineImagesEdgeZoneListOffersOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listOffers operation. */\nexport type VirtualMachineImagesEdgeZoneListOffersResponse = VirtualMachineImageResource[];\n\n/** Optional parameters. */\nexport interface VirtualMachineImagesEdgeZoneListPublishersOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listPublishers operation. */\nexport type VirtualMachineImagesEdgeZoneListPublishersResponse = VirtualMachineImageResource[];\n\n/** Optional parameters. */\nexport interface VirtualMachineImagesEdgeZoneListSkusOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listSkus operation. */\nexport type VirtualMachineImagesEdgeZoneListSkusResponse = VirtualMachineImageResource[];\n\n/** Optional parameters. */\nexport interface UsageListOptionalParams extends coreClient.OperationOptions {}\n\n/** Contains response data for the list operation. */\nexport type UsageListResponse = ListUsagesResult;\n\n/** Optional parameters. */\nexport interface UsageListNextOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listNext operation. */\nexport type UsageListNextResponse = ListUsagesResult;\n\n/** Optional parameters. */\nexport interface VirtualMachinesListByLocationOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listByLocation operation. */\nexport type VirtualMachinesListByLocationResponse = VirtualMachineListResult;\n\n/** Optional parameters. */\nexport interface VirtualMachinesCaptureOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Contains response data for the capture operation. */\nexport type VirtualMachinesCaptureResponse = VirtualMachineCaptureResult;\n\n/** Optional parameters. */\nexport interface VirtualMachinesCreateOrUpdateOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Contains response data for the createOrUpdate operation. */\nexport type VirtualMachinesCreateOrUpdateResponse = VirtualMachine;\n\n/** Optional parameters. */\nexport interface VirtualMachinesUpdateOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Contains response data for the update operation. */\nexport type VirtualMachinesUpdateResponse = VirtualMachine;\n\n/** Optional parameters. */\nexport interface VirtualMachinesDeleteOptionalParams\n  extends coreClient.OperationOptions {\n  /** Optional parameter to force delete virtual machines. */\n  forceDeletion?: boolean;\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Optional parameters. */\nexport interface VirtualMachinesGetOptionalParams\n  extends coreClient.OperationOptions {\n  /** The expand expression to apply on the operation. 'InstanceView' retrieves a snapshot of the runtime properties of the virtual machine that is managed by the platform and can change outside of control plane operations. 'UserData' retrieves the UserData property as part of the VM model view that was provided by the user during the VM Create/Update operation. */\n  expand?: InstanceViewTypes;\n}\n\n/** Contains response data for the get operation. */\nexport type VirtualMachinesGetResponse = VirtualMachine;\n\n/** Optional parameters. */\nexport interface VirtualMachinesInstanceViewOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the instanceView operation. */\nexport type VirtualMachinesInstanceViewResponse = VirtualMachineInstanceView;\n\n/** Optional parameters. */\nexport interface VirtualMachinesConvertToManagedDisksOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Optional parameters. */\nexport interface VirtualMachinesDeallocateOptionalParams\n  extends coreClient.OperationOptions {\n  /** Optional parameter to hibernate a virtual machine. (Feature in Preview) */\n  hibernate?: boolean;\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Optional parameters. */\nexport interface VirtualMachinesGeneralizeOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Optional parameters. */\nexport interface VirtualMachinesListOptionalParams\n  extends coreClient.OperationOptions {\n  /** The system query option to filter VMs returned in the response. Allowed value is 'virtualMachineScaleSet/id' eq /subscriptions/{subId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/virtualMachineScaleSets/{vmssName}' */\n  filter?: string;\n}\n\n/** Contains response data for the list operation. */\nexport type VirtualMachinesListResponse = VirtualMachineListResult;\n\n/** Optional parameters. */\nexport interface VirtualMachinesListAllOptionalParams\n  extends coreClient.OperationOptions {\n  /** The system query option to filter VMs returned in the response. Allowed value is 'virtualMachineScaleSet/id' eq /subscriptions/{subId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/virtualMachineScaleSets/{vmssName}' */\n  filter?: string;\n  /** statusOnly=true enables fetching run time status of all Virtual Machines in the subscription. */\n  statusOnly?: string;\n}\n\n/** Contains response data for the listAll operation. */\nexport type VirtualMachinesListAllResponse = VirtualMachineListResult;\n\n/** Optional parameters. */\nexport interface VirtualMachinesListAvailableSizesOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listAvailableSizes operation. */\nexport type VirtualMachinesListAvailableSizesResponse = VirtualMachineSizeListResult;\n\n/** Optional parameters. */\nexport interface VirtualMachinesPowerOffOptionalParams\n  extends coreClient.OperationOptions {\n  /** The parameter to request non-graceful VM shutdown. True value for this flag indicates non-graceful shutdown whereas false indicates otherwise. Default value for this flag is false if not specified */\n  skipShutdown?: boolean;\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Optional parameters. */\nexport interface VirtualMachinesReapplyOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Optional parameters. */\nexport interface VirtualMachinesRestartOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Optional parameters. */\nexport interface VirtualMachinesStartOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Optional parameters. */\nexport interface VirtualMachinesRedeployOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Optional parameters. */\nexport interface VirtualMachinesReimageOptionalParams\n  extends coreClient.OperationOptions {\n  /** Parameters supplied to the Reimage Virtual Machine operation. */\n  parameters?: VirtualMachineReimageParameters;\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Optional parameters. */\nexport interface VirtualMachinesRetrieveBootDiagnosticsDataOptionalParams\n  extends coreClient.OperationOptions {\n  /** Expiration duration in minutes for the SAS URIs with a value between 1 to 1440 minutes. <br><br>NOTE: If not specified, SAS URIs will be generated with a default expiration duration of 120 minutes. */\n  sasUriExpirationTimeInMinutes?: number;\n}\n\n/** Contains response data for the retrieveBootDiagnosticsData operation. */\nexport type VirtualMachinesRetrieveBootDiagnosticsDataResponse = RetrieveBootDiagnosticsDataResult;\n\n/** Optional parameters. */\nexport interface VirtualMachinesPerformMaintenanceOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Optional parameters. */\nexport interface VirtualMachinesSimulateEvictionOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Optional parameters. */\nexport interface VirtualMachinesAssessPatchesOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Contains response data for the assessPatches operation. */\nexport type VirtualMachinesAssessPatchesResponse = VirtualMachineAssessPatchesResult;\n\n/** Optional parameters. */\nexport interface VirtualMachinesInstallPatchesOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Contains response data for the installPatches operation. */\nexport type VirtualMachinesInstallPatchesResponse = VirtualMachineInstallPatchesResult;\n\n/** Optional parameters. */\nexport interface VirtualMachinesRunCommandOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Contains response data for the runCommand operation. */\nexport type VirtualMachinesRunCommandResponse = RunCommandResult;\n\n/** Optional parameters. */\nexport interface VirtualMachinesListByLocationNextOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listByLocationNext operation. */\nexport type VirtualMachinesListByLocationNextResponse = VirtualMachineListResult;\n\n/** Optional parameters. */\nexport interface VirtualMachinesListNextOptionalParams\n  extends coreClient.OperationOptions {\n  /** The system query option to filter VMs returned in the response. Allowed value is 'virtualMachineScaleSet/id' eq /subscriptions/{subId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/virtualMachineScaleSets/{vmssName}' */\n  filter?: string;\n}\n\n/** Contains response data for the listNext operation. */\nexport type VirtualMachinesListNextResponse = VirtualMachineListResult;\n\n/** Optional parameters. */\nexport interface VirtualMachinesListAllNextOptionalParams\n  extends coreClient.OperationOptions {\n  /** The system query option to filter VMs returned in the response. Allowed value is 'virtualMachineScaleSet/id' eq /subscriptions/{subId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/virtualMachineScaleSets/{vmssName}' */\n  filter?: string;\n  /** statusOnly=true enables fetching run time status of all Virtual Machines in the subscription. */\n  statusOnly?: string;\n}\n\n/** Contains response data for the listAllNext operation. */\nexport type VirtualMachinesListAllNextResponse = VirtualMachineListResult;\n\n/** Optional parameters. */\nexport interface VirtualMachineScaleSetsListByLocationOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listByLocation operation. */\nexport type VirtualMachineScaleSetsListByLocationResponse = VirtualMachineScaleSetListResult;\n\n/** Optional parameters. */\nexport interface VirtualMachineScaleSetsCreateOrUpdateOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Contains response data for the createOrUpdate operation. */\nexport type VirtualMachineScaleSetsCreateOrUpdateResponse = VirtualMachineScaleSet;\n\n/** Optional parameters. */\nexport interface VirtualMachineScaleSetsUpdateOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Contains response data for the update operation. */\nexport type VirtualMachineScaleSetsUpdateResponse = VirtualMachineScaleSet;\n\n/** Optional parameters. */\nexport interface VirtualMachineScaleSetsDeleteOptionalParams\n  extends coreClient.OperationOptions {\n  /** Optional parameter to force delete a VM scale set. (Feature in Preview) */\n  forceDeletion?: boolean;\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Optional parameters. */\nexport interface VirtualMachineScaleSetsGetOptionalParams\n  extends coreClient.OperationOptions {\n  /** The expand expression to apply on the operation. 'UserData' retrieves the UserData property of the VM scale set that was provided by the user during the VM scale set Create/Update operation */\n  expand?: ExpandTypesForGetVMScaleSets;\n}\n\n/** Contains response data for the get operation. */\nexport type VirtualMachineScaleSetsGetResponse = VirtualMachineScaleSet;\n\n/** Optional parameters. */\nexport interface VirtualMachineScaleSetsDeallocateOptionalParams\n  extends coreClient.OperationOptions {\n  /** A list of virtual machine instance IDs from the VM scale set. */\n  vmInstanceIDs?: VirtualMachineScaleSetVMInstanceIDs;\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Optional parameters. */\nexport interface VirtualMachineScaleSetsDeleteInstancesOptionalParams\n  extends coreClient.OperationOptions {\n  /** Optional parameter to force delete virtual machines from the VM scale set. (Feature in Preview) */\n  forceDeletion?: boolean;\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Optional parameters. */\nexport interface VirtualMachineScaleSetsGetInstanceViewOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the getInstanceView operation. */\nexport type VirtualMachineScaleSetsGetInstanceViewResponse = VirtualMachineScaleSetInstanceView;\n\n/** Optional parameters. */\nexport interface VirtualMachineScaleSetsListOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the list operation. */\nexport type VirtualMachineScaleSetsListResponse = VirtualMachineScaleSetListResult;\n\n/** Optional parameters. */\nexport interface VirtualMachineScaleSetsListAllOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listAll operation. */\nexport type VirtualMachineScaleSetsListAllResponse = VirtualMachineScaleSetListWithLinkResult;\n\n/** Optional parameters. */\nexport interface VirtualMachineScaleSetsListSkusOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listSkus operation. */\nexport type VirtualMachineScaleSetsListSkusResponse = VirtualMachineScaleSetListSkusResult;\n\n/** Optional parameters. */\nexport interface VirtualMachineScaleSetsGetOSUpgradeHistoryOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the getOSUpgradeHistory operation. */\nexport type VirtualMachineScaleSetsGetOSUpgradeHistoryResponse = VirtualMachineScaleSetListOSUpgradeHistory;\n\n/** Optional parameters. */\nexport interface VirtualMachineScaleSetsPowerOffOptionalParams\n  extends coreClient.OperationOptions {\n  /** The parameter to request non-graceful VM shutdown. True value for this flag indicates non-graceful shutdown whereas false indicates otherwise. Default value for this flag is false if not specified */\n  skipShutdown?: boolean;\n  /** A list of virtual machine instance IDs from the VM scale set. */\n  vmInstanceIDs?: VirtualMachineScaleSetVMInstanceIDs;\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Optional parameters. */\nexport interface VirtualMachineScaleSetsRestartOptionalParams\n  extends coreClient.OperationOptions {\n  /** A list of virtual machine instance IDs from the VM scale set. */\n  vmInstanceIDs?: VirtualMachineScaleSetVMInstanceIDs;\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Optional parameters. */\nexport interface VirtualMachineScaleSetsStartOptionalParams\n  extends coreClient.OperationOptions {\n  /** A list of virtual machine instance IDs from the VM scale set. */\n  vmInstanceIDs?: VirtualMachineScaleSetVMInstanceIDs;\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Optional parameters. */\nexport interface VirtualMachineScaleSetsRedeployOptionalParams\n  extends coreClient.OperationOptions {\n  /** A list of virtual machine instance IDs from the VM scale set. */\n  vmInstanceIDs?: VirtualMachineScaleSetVMInstanceIDs;\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Optional parameters. */\nexport interface VirtualMachineScaleSetsPerformMaintenanceOptionalParams\n  extends coreClient.OperationOptions {\n  /** A list of virtual machine instance IDs from the VM scale set. */\n  vmInstanceIDs?: VirtualMachineScaleSetVMInstanceIDs;\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Optional parameters. */\nexport interface VirtualMachineScaleSetsUpdateInstancesOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Optional parameters. */\nexport interface VirtualMachineScaleSetsReimageOptionalParams\n  extends coreClient.OperationOptions {\n  /** Parameters for Reimaging VM ScaleSet. */\n  vmScaleSetReimageInput?: VirtualMachineScaleSetReimageParameters;\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Optional parameters. */\nexport interface VirtualMachineScaleSetsReimageAllOptionalParams\n  extends coreClient.OperationOptions {\n  /** A list of virtual machine instance IDs from the VM scale set. */\n  vmInstanceIDs?: VirtualMachineScaleSetVMInstanceIDs;\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Optional parameters. */\nexport interface VirtualMachineScaleSetsForceRecoveryServiceFabricPlatformUpdateDomainWalkOptionalParams\n  extends coreClient.OperationOptions {\n  /** The zone in which the manual recovery walk is requested for cross zone virtual machine scale set */\n  zone?: string;\n  /** The placement group id for which the manual recovery walk is requested. */\n  placementGroupId?: string;\n}\n\n/** Contains response data for the forceRecoveryServiceFabricPlatformUpdateDomainWalk operation. */\nexport type VirtualMachineScaleSetsForceRecoveryServiceFabricPlatformUpdateDomainWalkResponse = RecoveryWalkResponse;\n\n/** Optional parameters. */\nexport interface VirtualMachineScaleSetsConvertToSinglePlacementGroupOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Optional parameters. */\nexport interface VirtualMachineScaleSetsSetOrchestrationServiceStateOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Optional parameters. */\nexport interface VirtualMachineScaleSetsListByLocationNextOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listByLocationNext operation. */\nexport type VirtualMachineScaleSetsListByLocationNextResponse = VirtualMachineScaleSetListResult;\n\n/** Optional parameters. */\nexport interface VirtualMachineScaleSetsListNextOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listNext operation. */\nexport type VirtualMachineScaleSetsListNextResponse = VirtualMachineScaleSetListResult;\n\n/** Optional parameters. */\nexport interface VirtualMachineScaleSetsListAllNextOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listAllNext operation. */\nexport type VirtualMachineScaleSetsListAllNextResponse = VirtualMachineScaleSetListWithLinkResult;\n\n/** Optional parameters. */\nexport interface VirtualMachineScaleSetsListSkusNextOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listSkusNext operation. */\nexport type VirtualMachineScaleSetsListSkusNextResponse = VirtualMachineScaleSetListSkusResult;\n\n/** Optional parameters. */\nexport interface VirtualMachineScaleSetsGetOSUpgradeHistoryNextOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the getOSUpgradeHistoryNext operation. */\nexport type VirtualMachineScaleSetsGetOSUpgradeHistoryNextResponse = VirtualMachineScaleSetListOSUpgradeHistory;\n\n/** Optional parameters. */\nexport interface VirtualMachineSizesListOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the list operation. */\nexport type VirtualMachineSizesListResponse = VirtualMachineSizeListResult;\n\n/** Optional parameters. */\nexport interface ImagesCreateOrUpdateOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Contains response data for the createOrUpdate operation. */\nexport type ImagesCreateOrUpdateResponse = Image;\n\n/** Optional parameters. */\nexport interface ImagesUpdateOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Contains response data for the update operation. */\nexport type ImagesUpdateResponse = Image;\n\n/** Optional parameters. */\nexport interface ImagesDeleteOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Optional parameters. */\nexport interface ImagesGetOptionalParams extends coreClient.OperationOptions {\n  /** The expand expression to apply on the operation. */\n  expand?: string;\n}\n\n/** Contains response data for the get operation. */\nexport type ImagesGetResponse = Image;\n\n/** Optional parameters. */\nexport interface ImagesListByResourceGroupOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listByResourceGroup operation. */\nexport type ImagesListByResourceGroupResponse = ImageListResult;\n\n/** Optional parameters. */\nexport interface ImagesListOptionalParams extends coreClient.OperationOptions {}\n\n/** Contains response data for the list operation. */\nexport type ImagesListResponse = ImageListResult;\n\n/** Optional parameters. */\nexport interface ImagesListByResourceGroupNextOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listByResourceGroupNext operation. */\nexport type ImagesListByResourceGroupNextResponse = ImageListResult;\n\n/** Optional parameters. */\nexport interface ImagesListNextOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listNext operation. */\nexport type ImagesListNextResponse = ImageListResult;\n\n/** Optional parameters. */\nexport interface RestorePointCollectionsCreateOrUpdateOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the createOrUpdate operation. */\nexport type RestorePointCollectionsCreateOrUpdateResponse = RestorePointCollection;\n\n/** Optional parameters. */\nexport interface RestorePointCollectionsUpdateOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the update operation. */\nexport type RestorePointCollectionsUpdateResponse = RestorePointCollection;\n\n/** Optional parameters. */\nexport interface RestorePointCollectionsDeleteOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Optional parameters. */\nexport interface RestorePointCollectionsGetOptionalParams\n  extends coreClient.OperationOptions {\n  /** The expand expression to apply on the operation. If expand=restorePoints, server will return all contained restore points in the restorePointCollection. */\n  expand?: RestorePointCollectionExpandOptions;\n}\n\n/** Contains response data for the get operation. */\nexport type RestorePointCollectionsGetResponse = RestorePointCollection;\n\n/** Optional parameters. */\nexport interface RestorePointCollectionsListOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the list operation. */\nexport type RestorePointCollectionsListResponse = RestorePointCollectionListResult;\n\n/** Optional parameters. */\nexport interface RestorePointCollectionsListAllOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listAll operation. */\nexport type RestorePointCollectionsListAllResponse = RestorePointCollectionListResult;\n\n/** Optional parameters. */\nexport interface RestorePointCollectionsListNextOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listNext operation. */\nexport type RestorePointCollectionsListNextResponse = RestorePointCollectionListResult;\n\n/** Optional parameters. */\nexport interface RestorePointCollectionsListAllNextOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listAllNext operation. */\nexport type RestorePointCollectionsListAllNextResponse = RestorePointCollectionListResult;\n\n/** Optional parameters. */\nexport interface RestorePointsCreateOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Contains response data for the create operation. */\nexport type RestorePointsCreateResponse = RestorePoint;\n\n/** Optional parameters. */\nexport interface RestorePointsDeleteOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Optional parameters. */\nexport interface RestorePointsGetOptionalParams\n  extends coreClient.OperationOptions {\n  /** The expand expression to apply on the operation. 'InstanceView' retrieves information about the run-time state of a restore point. */\n  expand?: RestorePointExpandOptions;\n}\n\n/** Contains response data for the get operation. */\nexport type RestorePointsGetResponse = RestorePoint;\n\n/** Optional parameters. */\nexport interface CapacityReservationGroupsCreateOrUpdateOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the createOrUpdate operation. */\nexport type CapacityReservationGroupsCreateOrUpdateResponse = CapacityReservationGroup;\n\n/** Optional parameters. */\nexport interface CapacityReservationGroupsUpdateOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the update operation. */\nexport type CapacityReservationGroupsUpdateResponse = CapacityReservationGroup;\n\n/** Optional parameters. */\nexport interface CapacityReservationGroupsDeleteOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Optional parameters. */\nexport interface CapacityReservationGroupsGetOptionalParams\n  extends coreClient.OperationOptions {\n  /** The expand expression to apply on the operation. 'InstanceView' will retrieve the list of instance views of the capacity reservations under the capacity reservation group which is a snapshot of the runtime properties of a capacity reservation that is managed by the platform and can change outside of control plane operations. */\n  expand?: CapacityReservationGroupInstanceViewTypes;\n}\n\n/** Contains response data for the get operation. */\nexport type CapacityReservationGroupsGetResponse = CapacityReservationGroup;\n\n/** Optional parameters. */\nexport interface CapacityReservationGroupsListByResourceGroupOptionalParams\n  extends coreClient.OperationOptions {\n  /** The expand expression to apply on the operation. Based on the expand param(s) specified we return Virtual Machine or ScaleSet VM Instance or both resource Ids which are associated to capacity reservation group in the response. */\n  expand?: ExpandTypesForGetCapacityReservationGroups;\n}\n\n/** Contains response data for the listByResourceGroup operation. */\nexport type CapacityReservationGroupsListByResourceGroupResponse = CapacityReservationGroupListResult;\n\n/** Optional parameters. */\nexport interface CapacityReservationGroupsListBySubscriptionOptionalParams\n  extends coreClient.OperationOptions {\n  /** The expand expression to apply on the operation. Based on the expand param(s) specified we return Virtual Machine or ScaleSet VM Instance or both resource Ids which are associated to capacity reservation group in the response. */\n  expand?: ExpandTypesForGetCapacityReservationGroups;\n}\n\n/** Contains response data for the listBySubscription operation. */\nexport type CapacityReservationGroupsListBySubscriptionResponse = CapacityReservationGroupListResult;\n\n/** Optional parameters. */\nexport interface CapacityReservationGroupsListByResourceGroupNextOptionalParams\n  extends coreClient.OperationOptions {\n  /** The expand expression to apply on the operation. Based on the expand param(s) specified we return Virtual Machine or ScaleSet VM Instance or both resource Ids which are associated to capacity reservation group in the response. */\n  expand?: ExpandTypesForGetCapacityReservationGroups;\n}\n\n/** Contains response data for the listByResourceGroupNext operation. */\nexport type CapacityReservationGroupsListByResourceGroupNextResponse = CapacityReservationGroupListResult;\n\n/** Optional parameters. */\nexport interface CapacityReservationGroupsListBySubscriptionNextOptionalParams\n  extends coreClient.OperationOptions {\n  /** The expand expression to apply on the operation. Based on the expand param(s) specified we return Virtual Machine or ScaleSet VM Instance or both resource Ids which are associated to capacity reservation group in the response. */\n  expand?: ExpandTypesForGetCapacityReservationGroups;\n}\n\n/** Contains response data for the listBySubscriptionNext operation. */\nexport type CapacityReservationGroupsListBySubscriptionNextResponse = CapacityReservationGroupListResult;\n\n/** Optional parameters. */\nexport interface CapacityReservationsCreateOrUpdateOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Contains response data for the createOrUpdate operation. */\nexport type CapacityReservationsCreateOrUpdateResponse = CapacityReservation;\n\n/** Optional parameters. */\nexport interface CapacityReservationsUpdateOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Contains response data for the update operation. */\nexport type CapacityReservationsUpdateResponse = CapacityReservation;\n\n/** Optional parameters. */\nexport interface CapacityReservationsDeleteOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Optional parameters. */\nexport interface CapacityReservationsGetOptionalParams\n  extends coreClient.OperationOptions {\n  /** The expand expression to apply on the operation. 'InstanceView' retrieves a snapshot of the runtime properties of the capacity reservation that is managed by the platform and can change outside of control plane operations. */\n  expand?: CapacityReservationInstanceViewTypes;\n}\n\n/** Contains response data for the get operation. */\nexport type CapacityReservationsGetResponse = CapacityReservation;\n\n/** Optional parameters. */\nexport interface CapacityReservationsListByCapacityReservationGroupOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listByCapacityReservationGroup operation. */\nexport type CapacityReservationsListByCapacityReservationGroupResponse = CapacityReservationListResult;\n\n/** Optional parameters. */\nexport interface CapacityReservationsListByCapacityReservationGroupNextOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listByCapacityReservationGroupNext operation. */\nexport type CapacityReservationsListByCapacityReservationGroupNextResponse = CapacityReservationListResult;\n\n/** Optional parameters. */\nexport interface VirtualMachineScaleSetExtensionsCreateOrUpdateOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Contains response data for the createOrUpdate operation. */\nexport type VirtualMachineScaleSetExtensionsCreateOrUpdateResponse = VirtualMachineScaleSetExtension;\n\n/** Optional parameters. */\nexport interface VirtualMachineScaleSetExtensionsUpdateOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Contains response data for the update operation. */\nexport type VirtualMachineScaleSetExtensionsUpdateResponse = VirtualMachineScaleSetExtension;\n\n/** Optional parameters. */\nexport interface VirtualMachineScaleSetExtensionsDeleteOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Optional parameters. */\nexport interface VirtualMachineScaleSetExtensionsGetOptionalParams\n  extends coreClient.OperationOptions {\n  /** The expand expression to apply on the operation. */\n  expand?: string;\n}\n\n/** Contains response data for the get operation. */\nexport type VirtualMachineScaleSetExtensionsGetResponse = VirtualMachineScaleSetExtension;\n\n/** Optional parameters. */\nexport interface VirtualMachineScaleSetExtensionsListOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the list operation. */\nexport type VirtualMachineScaleSetExtensionsListResponse = VirtualMachineScaleSetExtensionListResult;\n\n/** Optional parameters. */\nexport interface VirtualMachineScaleSetExtensionsListNextOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listNext operation. */\nexport type VirtualMachineScaleSetExtensionsListNextResponse = VirtualMachineScaleSetExtensionListResult;\n\n/** Optional parameters. */\nexport interface VirtualMachineScaleSetRollingUpgradesCancelOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Optional parameters. */\nexport interface VirtualMachineScaleSetRollingUpgradesStartOSUpgradeOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Optional parameters. */\nexport interface VirtualMachineScaleSetRollingUpgradesStartExtensionUpgradeOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Optional parameters. */\nexport interface VirtualMachineScaleSetRollingUpgradesGetLatestOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the getLatest operation. */\nexport type VirtualMachineScaleSetRollingUpgradesGetLatestResponse = RollingUpgradeStatusInfo;\n\n/** Optional parameters. */\nexport interface VirtualMachineScaleSetVMExtensionsCreateOrUpdateOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Contains response data for the createOrUpdate operation. */\nexport type VirtualMachineScaleSetVMExtensionsCreateOrUpdateResponse = VirtualMachineScaleSetVMExtension;\n\n/** Optional parameters. */\nexport interface VirtualMachineScaleSetVMExtensionsUpdateOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Contains response data for the update operation. */\nexport type VirtualMachineScaleSetVMExtensionsUpdateResponse = VirtualMachineScaleSetVMExtension;\n\n/** Optional parameters. */\nexport interface VirtualMachineScaleSetVMExtensionsDeleteOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Optional parameters. */\nexport interface VirtualMachineScaleSetVMExtensionsGetOptionalParams\n  extends coreClient.OperationOptions {\n  /** The expand expression to apply on the operation. */\n  expand?: string;\n}\n\n/** Contains response data for the get operation. */\nexport type VirtualMachineScaleSetVMExtensionsGetResponse = VirtualMachineScaleSetVMExtension;\n\n/** Optional parameters. */\nexport interface VirtualMachineScaleSetVMExtensionsListOptionalParams\n  extends coreClient.OperationOptions {\n  /** The expand expression to apply on the operation. */\n  expand?: string;\n}\n\n/** Contains response data for the list operation. */\nexport type VirtualMachineScaleSetVMExtensionsListResponse = VirtualMachineScaleSetVMExtensionsListResult;\n\n/** Optional parameters. */\nexport interface VirtualMachineScaleSetVMsReimageOptionalParams\n  extends coreClient.OperationOptions {\n  /** Parameters for the Reimaging Virtual machine in ScaleSet. */\n  vmScaleSetVMReimageInput?: VirtualMachineScaleSetVMReimageParameters;\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Optional parameters. */\nexport interface VirtualMachineScaleSetVMsReimageAllOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Optional parameters. */\nexport interface VirtualMachineScaleSetVMsDeallocateOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Optional parameters. */\nexport interface VirtualMachineScaleSetVMsUpdateOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Contains response data for the update operation. */\nexport type VirtualMachineScaleSetVMsUpdateResponse = VirtualMachineScaleSetVM;\n\n/** Optional parameters. */\nexport interface VirtualMachineScaleSetVMsDeleteOptionalParams\n  extends coreClient.OperationOptions {\n  /** Optional parameter to force delete a virtual machine from a VM scale set. (Feature in Preview) */\n  forceDeletion?: boolean;\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Optional parameters. */\nexport interface VirtualMachineScaleSetVMsGetOptionalParams\n  extends coreClient.OperationOptions {\n  /** The expand expression to apply on the operation. 'InstanceView' will retrieve the instance view of the virtual machine. 'UserData' will retrieve the UserData of the virtual machine. */\n  expand?: InstanceViewTypes;\n}\n\n/** Contains response data for the get operation. */\nexport type VirtualMachineScaleSetVMsGetResponse = VirtualMachineScaleSetVM;\n\n/** Optional parameters. */\nexport interface VirtualMachineScaleSetVMsGetInstanceViewOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the getInstanceView operation. */\nexport type VirtualMachineScaleSetVMsGetInstanceViewResponse = VirtualMachineScaleSetVMInstanceView;\n\n/** Optional parameters. */\nexport interface VirtualMachineScaleSetVMsListOptionalParams\n  extends coreClient.OperationOptions {\n  /** The expand expression to apply to the operation. Allowed values are 'instanceView'. */\n  expand?: string;\n  /** The filter to apply to the operation. Allowed values are 'startswith(instanceView/statuses/code, 'PowerState') eq true', 'properties/latestModelApplied eq true', 'properties/latestModelApplied eq false'. */\n  filter?: string;\n  /** The list parameters. Allowed values are 'instanceView', 'instanceView/statuses'. */\n  select?: string;\n}\n\n/** Contains response data for the list operation. */\nexport type VirtualMachineScaleSetVMsListResponse = VirtualMachineScaleSetVMListResult;\n\n/** Optional parameters. */\nexport interface VirtualMachineScaleSetVMsPowerOffOptionalParams\n  extends coreClient.OperationOptions {\n  /** The parameter to request non-graceful VM shutdown. True value for this flag indicates non-graceful shutdown whereas false indicates otherwise. Default value for this flag is false if not specified */\n  skipShutdown?: boolean;\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Optional parameters. */\nexport interface VirtualMachineScaleSetVMsRestartOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Optional parameters. */\nexport interface VirtualMachineScaleSetVMsStartOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Optional parameters. */\nexport interface VirtualMachineScaleSetVMsRedeployOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Optional parameters. */\nexport interface VirtualMachineScaleSetVMsRetrieveBootDiagnosticsDataOptionalParams\n  extends coreClient.OperationOptions {\n  /** Expiration duration in minutes for the SAS URIs with a value between 1 to 1440 minutes. <br><br>NOTE: If not specified, SAS URIs will be generated with a default expiration duration of 120 minutes. */\n  sasUriExpirationTimeInMinutes?: number;\n}\n\n/** Contains response data for the retrieveBootDiagnosticsData operation. */\nexport type VirtualMachineScaleSetVMsRetrieveBootDiagnosticsDataResponse = RetrieveBootDiagnosticsDataResult;\n\n/** Optional parameters. */\nexport interface VirtualMachineScaleSetVMsPerformMaintenanceOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Optional parameters. */\nexport interface VirtualMachineScaleSetVMsSimulateEvictionOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Optional parameters. */\nexport interface VirtualMachineScaleSetVMsRunCommandOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Contains response data for the runCommand operation. */\nexport type VirtualMachineScaleSetVMsRunCommandResponse = RunCommandResult;\n\n/** Optional parameters. */\nexport interface VirtualMachineScaleSetVMsListNextOptionalParams\n  extends coreClient.OperationOptions {\n  /** The expand expression to apply to the operation. Allowed values are 'instanceView'. */\n  expand?: string;\n  /** The filter to apply to the operation. Allowed values are 'startswith(instanceView/statuses/code, 'PowerState') eq true', 'properties/latestModelApplied eq true', 'properties/latestModelApplied eq false'. */\n  filter?: string;\n  /** The list parameters. Allowed values are 'instanceView', 'instanceView/statuses'. */\n  select?: string;\n}\n\n/** Contains response data for the listNext operation. */\nexport type VirtualMachineScaleSetVMsListNextResponse = VirtualMachineScaleSetVMListResult;\n\n/** Optional parameters. */\nexport interface LogAnalyticsExportRequestRateByIntervalOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Contains response data for the exportRequestRateByInterval operation. */\nexport type LogAnalyticsExportRequestRateByIntervalResponse = LogAnalyticsOperationResult;\n\n/** Optional parameters. */\nexport interface LogAnalyticsExportThrottledRequestsOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Contains response data for the exportThrottledRequests operation. */\nexport type LogAnalyticsExportThrottledRequestsResponse = LogAnalyticsOperationResult;\n\n/** Optional parameters. */\nexport interface VirtualMachineRunCommandsListOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the list operation. */\nexport type VirtualMachineRunCommandsListResponse = RunCommandListResult;\n\n/** Optional parameters. */\nexport interface VirtualMachineRunCommandsGetOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the get operation. */\nexport type VirtualMachineRunCommandsGetResponse = RunCommandDocument;\n\n/** Optional parameters. */\nexport interface VirtualMachineRunCommandsCreateOrUpdateOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Contains response data for the createOrUpdate operation. */\nexport type VirtualMachineRunCommandsCreateOrUpdateResponse = VirtualMachineRunCommand;\n\n/** Optional parameters. */\nexport interface VirtualMachineRunCommandsUpdateOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Contains response data for the update operation. */\nexport type VirtualMachineRunCommandsUpdateResponse = VirtualMachineRunCommand;\n\n/** Optional parameters. */\nexport interface VirtualMachineRunCommandsDeleteOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Optional parameters. */\nexport interface VirtualMachineRunCommandsGetByVirtualMachineOptionalParams\n  extends coreClient.OperationOptions {\n  /** The expand expression to apply on the operation. */\n  expand?: string;\n}\n\n/** Contains response data for the getByVirtualMachine operation. */\nexport type VirtualMachineRunCommandsGetByVirtualMachineResponse = VirtualMachineRunCommand;\n\n/** Optional parameters. */\nexport interface VirtualMachineRunCommandsListByVirtualMachineOptionalParams\n  extends coreClient.OperationOptions {\n  /** The expand expression to apply on the operation. */\n  expand?: string;\n}\n\n/** Contains response data for the listByVirtualMachine operation. */\nexport type VirtualMachineRunCommandsListByVirtualMachineResponse = VirtualMachineRunCommandsListResult;\n\n/** Optional parameters. */\nexport interface VirtualMachineRunCommandsListNextOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listNext operation. */\nexport type VirtualMachineRunCommandsListNextResponse = RunCommandListResult;\n\n/** Optional parameters. */\nexport interface VirtualMachineRunCommandsListByVirtualMachineNextOptionalParams\n  extends coreClient.OperationOptions {\n  /** The expand expression to apply on the operation. */\n  expand?: string;\n}\n\n/** Contains response data for the listByVirtualMachineNext operation. */\nexport type VirtualMachineRunCommandsListByVirtualMachineNextResponse = VirtualMachineRunCommandsListResult;\n\n/** Optional parameters. */\nexport interface VirtualMachineScaleSetVMRunCommandsCreateOrUpdateOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Contains response data for the createOrUpdate operation. */\nexport type VirtualMachineScaleSetVMRunCommandsCreateOrUpdateResponse = VirtualMachineRunCommand;\n\n/** Optional parameters. */\nexport interface VirtualMachineScaleSetVMRunCommandsUpdateOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Contains response data for the update operation. */\nexport type VirtualMachineScaleSetVMRunCommandsUpdateResponse = VirtualMachineRunCommand;\n\n/** Optional parameters. */\nexport interface VirtualMachineScaleSetVMRunCommandsDeleteOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Optional parameters. */\nexport interface VirtualMachineScaleSetVMRunCommandsGetOptionalParams\n  extends coreClient.OperationOptions {\n  /** The expand expression to apply on the operation. */\n  expand?: string;\n}\n\n/** Contains response data for the get operation. */\nexport type VirtualMachineScaleSetVMRunCommandsGetResponse = VirtualMachineRunCommand;\n\n/** Optional parameters. */\nexport interface VirtualMachineScaleSetVMRunCommandsListOptionalParams\n  extends coreClient.OperationOptions {\n  /** The expand expression to apply on the operation. */\n  expand?: string;\n}\n\n/** Contains response data for the list operation. */\nexport type VirtualMachineScaleSetVMRunCommandsListResponse = VirtualMachineRunCommandsListResult;\n\n/** Optional parameters. */\nexport interface VirtualMachineScaleSetVMRunCommandsListNextOptionalParams\n  extends coreClient.OperationOptions {\n  /** The expand expression to apply on the operation. */\n  expand?: string;\n}\n\n/** Contains response data for the listNext operation. */\nexport type VirtualMachineScaleSetVMRunCommandsListNextResponse = VirtualMachineRunCommandsListResult;\n\n/** Optional parameters. */\nexport interface ResourceSkusListOptionalParams\n  extends coreClient.OperationOptions {\n  /** The filter to apply on the operation. Only **location** filter is supported currently. */\n  filter?: string;\n  /** To Include Extended Locations information or not in the response. */\n  includeExtendedLocations?: string;\n}\n\n/** Contains response data for the list operation. */\nexport type ResourceSkusListResponse = ResourceSkusResult;\n\n/** Optional parameters. */\nexport interface ResourceSkusListNextOptionalParams\n  extends coreClient.OperationOptions {\n  /** The filter to apply on the operation. Only **location** filter is supported currently. */\n  filter?: string;\n  /** To Include Extended Locations information or not in the response. */\n  includeExtendedLocations?: string;\n}\n\n/** Contains response data for the listNext operation. */\nexport type ResourceSkusListNextResponse = ResourceSkusResult;\n\n/** Optional parameters. */\nexport interface DisksCreateOrUpdateOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Contains response data for the createOrUpdate operation. */\nexport type DisksCreateOrUpdateResponse = Disk;\n\n/** Optional parameters. */\nexport interface DisksUpdateOptionalParams extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Contains response data for the update operation. */\nexport type DisksUpdateResponse = Disk;\n\n/** Optional parameters. */\nexport interface DisksGetOptionalParams extends coreClient.OperationOptions {}\n\n/** Contains response data for the get operation. */\nexport type DisksGetResponse = Disk;\n\n/** Optional parameters. */\nexport interface DisksDeleteOptionalParams extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Optional parameters. */\nexport interface DisksListByResourceGroupOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listByResourceGroup operation. */\nexport type DisksListByResourceGroupResponse = DiskList;\n\n/** Optional parameters. */\nexport interface DisksListOptionalParams extends coreClient.OperationOptions {}\n\n/** Contains response data for the list operation. */\nexport type DisksListResponse = DiskList;\n\n/** Optional parameters. */\nexport interface DisksGrantAccessOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Contains response data for the grantAccess operation. */\nexport type DisksGrantAccessResponse = AccessUri;\n\n/** Optional parameters. */\nexport interface DisksRevokeAccessOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Optional parameters. */\nexport interface DisksListByResourceGroupNextOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listByResourceGroupNext operation. */\nexport type DisksListByResourceGroupNextResponse = DiskList;\n\n/** Optional parameters. */\nexport interface DisksListNextOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listNext operation. */\nexport type DisksListNextResponse = DiskList;\n\n/** Optional parameters. */\nexport interface SnapshotsCreateOrUpdateOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Contains response data for the createOrUpdate operation. */\nexport type SnapshotsCreateOrUpdateResponse = Snapshot;\n\n/** Optional parameters. */\nexport interface SnapshotsUpdateOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Contains response data for the update operation. */\nexport type SnapshotsUpdateResponse = Snapshot;\n\n/** Optional parameters. */\nexport interface SnapshotsGetOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the get operation. */\nexport type SnapshotsGetResponse = Snapshot;\n\n/** Optional parameters. */\nexport interface SnapshotsDeleteOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Optional parameters. */\nexport interface SnapshotsListByResourceGroupOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listByResourceGroup operation. */\nexport type SnapshotsListByResourceGroupResponse = SnapshotList;\n\n/** Optional parameters. */\nexport interface SnapshotsListOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the list operation. */\nexport type SnapshotsListResponse = SnapshotList;\n\n/** Optional parameters. */\nexport interface SnapshotsGrantAccessOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Contains response data for the grantAccess operation. */\nexport type SnapshotsGrantAccessResponse = AccessUri;\n\n/** Optional parameters. */\nexport interface SnapshotsRevokeAccessOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Optional parameters. */\nexport interface SnapshotsListByResourceGroupNextOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listByResourceGroupNext operation. */\nexport type SnapshotsListByResourceGroupNextResponse = SnapshotList;\n\n/** Optional parameters. */\nexport interface SnapshotsListNextOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listNext operation. */\nexport type SnapshotsListNextResponse = SnapshotList;\n\n/** Optional parameters. */\nexport interface DiskEncryptionSetsCreateOrUpdateOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Contains response data for the createOrUpdate operation. */\nexport type DiskEncryptionSetsCreateOrUpdateResponse = DiskEncryptionSet;\n\n/** Optional parameters. */\nexport interface DiskEncryptionSetsUpdateOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Contains response data for the update operation. */\nexport type DiskEncryptionSetsUpdateResponse = DiskEncryptionSet;\n\n/** Optional parameters. */\nexport interface DiskEncryptionSetsGetOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the get operation. */\nexport type DiskEncryptionSetsGetResponse = DiskEncryptionSet;\n\n/** Optional parameters. */\nexport interface DiskEncryptionSetsDeleteOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Optional parameters. */\nexport interface DiskEncryptionSetsListByResourceGroupOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listByResourceGroup operation. */\nexport type DiskEncryptionSetsListByResourceGroupResponse = DiskEncryptionSetList;\n\n/** Optional parameters. */\nexport interface DiskEncryptionSetsListOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the list operation. */\nexport type DiskEncryptionSetsListResponse = DiskEncryptionSetList;\n\n/** Optional parameters. */\nexport interface DiskEncryptionSetsListAssociatedResourcesOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listAssociatedResources operation. */\nexport type DiskEncryptionSetsListAssociatedResourcesResponse = ResourceUriList;\n\n/** Optional parameters. */\nexport interface DiskEncryptionSetsListByResourceGroupNextOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listByResourceGroupNext operation. */\nexport type DiskEncryptionSetsListByResourceGroupNextResponse = DiskEncryptionSetList;\n\n/** Optional parameters. */\nexport interface DiskEncryptionSetsListNextOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listNext operation. */\nexport type DiskEncryptionSetsListNextResponse = DiskEncryptionSetList;\n\n/** Optional parameters. */\nexport interface DiskEncryptionSetsListAssociatedResourcesNextOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listAssociatedResourcesNext operation. */\nexport type DiskEncryptionSetsListAssociatedResourcesNextResponse = ResourceUriList;\n\n/** Optional parameters. */\nexport interface DiskAccessesCreateOrUpdateOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Contains response data for the createOrUpdate operation. */\nexport type DiskAccessesCreateOrUpdateResponse = DiskAccess;\n\n/** Optional parameters. */\nexport interface DiskAccessesUpdateOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Contains response data for the update operation. */\nexport type DiskAccessesUpdateResponse = DiskAccess;\n\n/** Optional parameters. */\nexport interface DiskAccessesGetOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the get operation. */\nexport type DiskAccessesGetResponse = DiskAccess;\n\n/** Optional parameters. */\nexport interface DiskAccessesDeleteOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Optional parameters. */\nexport interface DiskAccessesListByResourceGroupOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listByResourceGroup operation. */\nexport type DiskAccessesListByResourceGroupResponse = DiskAccessList;\n\n/** Optional parameters. */\nexport interface DiskAccessesListOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the list operation. */\nexport type DiskAccessesListResponse = DiskAccessList;\n\n/** Optional parameters. */\nexport interface DiskAccessesGetPrivateLinkResourcesOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the getPrivateLinkResources operation. */\nexport type DiskAccessesGetPrivateLinkResourcesResponse = PrivateLinkResourceListResult;\n\n/** Optional parameters. */\nexport interface DiskAccessesUpdateAPrivateEndpointConnectionOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Contains response data for the updateAPrivateEndpointConnection operation. */\nexport type DiskAccessesUpdateAPrivateEndpointConnectionResponse = PrivateEndpointConnection;\n\n/** Optional parameters. */\nexport interface DiskAccessesGetAPrivateEndpointConnectionOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the getAPrivateEndpointConnection operation. */\nexport type DiskAccessesGetAPrivateEndpointConnectionResponse = PrivateEndpointConnection;\n\n/** Optional parameters. */\nexport interface DiskAccessesDeleteAPrivateEndpointConnectionOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Optional parameters. */\nexport interface DiskAccessesListPrivateEndpointConnectionsOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listPrivateEndpointConnections operation. */\nexport type DiskAccessesListPrivateEndpointConnectionsResponse = PrivateEndpointConnectionListResult;\n\n/** Optional parameters. */\nexport interface DiskAccessesListByResourceGroupNextOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listByResourceGroupNext operation. */\nexport type DiskAccessesListByResourceGroupNextResponse = DiskAccessList;\n\n/** Optional parameters. */\nexport interface DiskAccessesListNextOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listNext operation. */\nexport type DiskAccessesListNextResponse = DiskAccessList;\n\n/** Optional parameters. */\nexport interface DiskAccessesListPrivateEndpointConnectionsNextOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listPrivateEndpointConnectionsNext operation. */\nexport type DiskAccessesListPrivateEndpointConnectionsNextResponse = PrivateEndpointConnectionListResult;\n\n/** Optional parameters. */\nexport interface DiskRestorePointGetOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the get operation. */\nexport type DiskRestorePointGetResponse = DiskRestorePoint;\n\n/** Optional parameters. */\nexport interface DiskRestorePointListByRestorePointOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listByRestorePoint operation. */\nexport type DiskRestorePointListByRestorePointResponse = DiskRestorePointList;\n\n/** Optional parameters. */\nexport interface DiskRestorePointGrantAccessOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Contains response data for the grantAccess operation. */\nexport type DiskRestorePointGrantAccessResponse = AccessUri;\n\n/** Optional parameters. */\nexport interface DiskRestorePointRevokeAccessOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Optional parameters. */\nexport interface DiskRestorePointListByRestorePointNextOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listByRestorePointNext operation. */\nexport type DiskRestorePointListByRestorePointNextResponse = DiskRestorePointList;\n\n/** Optional parameters. */\nexport interface GalleriesCreateOrUpdateOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Contains response data for the createOrUpdate operation. */\nexport type GalleriesCreateOrUpdateResponse = Gallery;\n\n/** Optional parameters. */\nexport interface GalleriesUpdateOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Contains response data for the update operation. */\nexport type GalleriesUpdateResponse = Gallery;\n\n/** Optional parameters. */\nexport interface GalleriesGetOptionalParams\n  extends coreClient.OperationOptions {\n  /** The select expression to apply on the operation. */\n  select?: SelectPermissions;\n  /** The expand query option to apply on the operation. */\n  expand?: GalleryExpandParams;\n}\n\n/** Contains response data for the get operation. */\nexport type GalleriesGetResponse = Gallery;\n\n/** Optional parameters. */\nexport interface GalleriesDeleteOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Optional parameters. */\nexport interface GalleriesListByResourceGroupOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listByResourceGroup operation. */\nexport type GalleriesListByResourceGroupResponse = GalleryList;\n\n/** Optional parameters. */\nexport interface GalleriesListOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the list operation. */\nexport type GalleriesListResponse = GalleryList;\n\n/** Optional parameters. */\nexport interface GalleriesListByResourceGroupNextOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listByResourceGroupNext operation. */\nexport type GalleriesListByResourceGroupNextResponse = GalleryList;\n\n/** Optional parameters. */\nexport interface GalleriesListNextOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listNext operation. */\nexport type GalleriesListNextResponse = GalleryList;\n\n/** Optional parameters. */\nexport interface GalleryImagesCreateOrUpdateOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Contains response data for the createOrUpdate operation. */\nexport type GalleryImagesCreateOrUpdateResponse = GalleryImage;\n\n/** Optional parameters. */\nexport interface GalleryImagesUpdateOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Contains response data for the update operation. */\nexport type GalleryImagesUpdateResponse = GalleryImage;\n\n/** Optional parameters. */\nexport interface GalleryImagesGetOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the get operation. */\nexport type GalleryImagesGetResponse = GalleryImage;\n\n/** Optional parameters. */\nexport interface GalleryImagesDeleteOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Optional parameters. */\nexport interface GalleryImagesListByGalleryOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listByGallery operation. */\nexport type GalleryImagesListByGalleryResponse = GalleryImageList;\n\n/** Optional parameters. */\nexport interface GalleryImagesListByGalleryNextOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listByGalleryNext operation. */\nexport type GalleryImagesListByGalleryNextResponse = GalleryImageList;\n\n/** Optional parameters. */\nexport interface GalleryImageVersionsCreateOrUpdateOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Contains response data for the createOrUpdate operation. */\nexport type GalleryImageVersionsCreateOrUpdateResponse = GalleryImageVersion;\n\n/** Optional parameters. */\nexport interface GalleryImageVersionsUpdateOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Contains response data for the update operation. */\nexport type GalleryImageVersionsUpdateResponse = GalleryImageVersion;\n\n/** Optional parameters. */\nexport interface GalleryImageVersionsGetOptionalParams\n  extends coreClient.OperationOptions {\n  /** The expand expression to apply on the operation. */\n  expand?: ReplicationStatusTypes;\n}\n\n/** Contains response data for the get operation. */\nexport type GalleryImageVersionsGetResponse = GalleryImageVersion;\n\n/** Optional parameters. */\nexport interface GalleryImageVersionsDeleteOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Optional parameters. */\nexport interface GalleryImageVersionsListByGalleryImageOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listByGalleryImage operation. */\nexport type GalleryImageVersionsListByGalleryImageResponse = GalleryImageVersionList;\n\n/** Optional parameters. */\nexport interface GalleryImageVersionsListByGalleryImageNextOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listByGalleryImageNext operation. */\nexport type GalleryImageVersionsListByGalleryImageNextResponse = GalleryImageVersionList;\n\n/** Optional parameters. */\nexport interface GalleryApplicationsCreateOrUpdateOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Contains response data for the createOrUpdate operation. */\nexport type GalleryApplicationsCreateOrUpdateResponse = GalleryApplication;\n\n/** Optional parameters. */\nexport interface GalleryApplicationsUpdateOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Contains response data for the update operation. */\nexport type GalleryApplicationsUpdateResponse = GalleryApplication;\n\n/** Optional parameters. */\nexport interface GalleryApplicationsGetOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the get operation. */\nexport type GalleryApplicationsGetResponse = GalleryApplication;\n\n/** Optional parameters. */\nexport interface GalleryApplicationsDeleteOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Optional parameters. */\nexport interface GalleryApplicationsListByGalleryOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listByGallery operation. */\nexport type GalleryApplicationsListByGalleryResponse = GalleryApplicationList;\n\n/** Optional parameters. */\nexport interface GalleryApplicationsListByGalleryNextOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listByGalleryNext operation. */\nexport type GalleryApplicationsListByGalleryNextResponse = GalleryApplicationList;\n\n/** Optional parameters. */\nexport interface GalleryApplicationVersionsCreateOrUpdateOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Contains response data for the createOrUpdate operation. */\nexport type GalleryApplicationVersionsCreateOrUpdateResponse = GalleryApplicationVersion;\n\n/** Optional parameters. */\nexport interface GalleryApplicationVersionsUpdateOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Contains response data for the update operation. */\nexport type GalleryApplicationVersionsUpdateResponse = GalleryApplicationVersion;\n\n/** Optional parameters. */\nexport interface GalleryApplicationVersionsGetOptionalParams\n  extends coreClient.OperationOptions {\n  /** The expand expression to apply on the operation. */\n  expand?: ReplicationStatusTypes;\n}\n\n/** Contains response data for the get operation. */\nexport type GalleryApplicationVersionsGetResponse = GalleryApplicationVersion;\n\n/** Optional parameters. */\nexport interface GalleryApplicationVersionsDeleteOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Optional parameters. */\nexport interface GalleryApplicationVersionsListByGalleryApplicationOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listByGalleryApplication operation. */\nexport type GalleryApplicationVersionsListByGalleryApplicationResponse = GalleryApplicationVersionList;\n\n/** Optional parameters. */\nexport interface GalleryApplicationVersionsListByGalleryApplicationNextOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listByGalleryApplicationNext operation. */\nexport type GalleryApplicationVersionsListByGalleryApplicationNextResponse = GalleryApplicationVersionList;\n\n/** Optional parameters. */\nexport interface GallerySharingProfileUpdateOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Contains response data for the update operation. */\nexport type GallerySharingProfileUpdateResponse = SharingUpdate;\n\n/** Optional parameters. */\nexport interface SharedGalleriesListOptionalParams\n  extends coreClient.OperationOptions {\n  /** The query parameter to decide what shared galleries to fetch when doing listing operations. */\n  sharedTo?: SharedToValues;\n}\n\n/** Contains response data for the list operation. */\nexport type SharedGalleriesListResponse = SharedGalleryList;\n\n/** Optional parameters. */\nexport interface SharedGalleriesGetOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the get operation. */\nexport type SharedGalleriesGetResponse = SharedGallery;\n\n/** Optional parameters. */\nexport interface SharedGalleriesListNextOptionalParams\n  extends coreClient.OperationOptions {\n  /** The query parameter to decide what shared galleries to fetch when doing listing operations. */\n  sharedTo?: SharedToValues;\n}\n\n/** Contains response data for the listNext operation. */\nexport type SharedGalleriesListNextResponse = SharedGalleryList;\n\n/** Optional parameters. */\nexport interface SharedGalleryImagesListOptionalParams\n  extends coreClient.OperationOptions {\n  /** The query parameter to decide what shared galleries to fetch when doing listing operations. */\n  sharedTo?: SharedToValues;\n}\n\n/** Contains response data for the list operation. */\nexport type SharedGalleryImagesListResponse = SharedGalleryImageList;\n\n/** Optional parameters. */\nexport interface SharedGalleryImagesGetOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the get operation. */\nexport type SharedGalleryImagesGetResponse = SharedGalleryImage;\n\n/** Optional parameters. */\nexport interface SharedGalleryImagesListNextOptionalParams\n  extends coreClient.OperationOptions {\n  /** The query parameter to decide what shared galleries to fetch when doing listing operations. */\n  sharedTo?: SharedToValues;\n}\n\n/** Contains response data for the listNext operation. */\nexport type SharedGalleryImagesListNextResponse = SharedGalleryImageList;\n\n/** Optional parameters. */\nexport interface SharedGalleryImageVersionsListOptionalParams\n  extends coreClient.OperationOptions {\n  /** The query parameter to decide what shared galleries to fetch when doing listing operations. */\n  sharedTo?: SharedToValues;\n}\n\n/** Contains response data for the list operation. */\nexport type SharedGalleryImageVersionsListResponse = SharedGalleryImageVersionList;\n\n/** Optional parameters. */\nexport interface SharedGalleryImageVersionsGetOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the get operation. */\nexport type SharedGalleryImageVersionsGetResponse = SharedGalleryImageVersion;\n\n/** Optional parameters. */\nexport interface SharedGalleryImageVersionsListNextOptionalParams\n  extends coreClient.OperationOptions {\n  /** The query parameter to decide what shared galleries to fetch when doing listing operations. */\n  sharedTo?: SharedToValues;\n}\n\n/** Contains response data for the listNext operation. */\nexport type SharedGalleryImageVersionsListNextResponse = SharedGalleryImageVersionList;\n\n/** Optional parameters. */\nexport interface CommunityGalleriesGetOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the get operation. */\nexport type CommunityGalleriesGetResponse = CommunityGallery;\n\n/** Optional parameters. */\nexport interface CommunityGalleryImagesGetOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the get operation. */\nexport type CommunityGalleryImagesGetResponse = CommunityGalleryImage;\n\n/** Optional parameters. */\nexport interface CommunityGalleryImageVersionsGetOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the get operation. */\nexport type CommunityGalleryImageVersionsGetResponse = CommunityGalleryImageVersion;\n\n/** Optional parameters. */\nexport interface CloudServiceRoleInstancesDeleteOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Optional parameters. */\nexport interface CloudServiceRoleInstancesGetOptionalParams\n  extends coreClient.OperationOptions {\n  /** The expand expression to apply to the operation. 'UserData' is not supported for cloud services. */\n  expand?: InstanceViewTypes;\n}\n\n/** Contains response data for the get operation. */\nexport type CloudServiceRoleInstancesGetResponse = RoleInstance;\n\n/** Optional parameters. */\nexport interface CloudServiceRoleInstancesGetInstanceViewOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the getInstanceView operation. */\nexport type CloudServiceRoleInstancesGetInstanceViewResponse = RoleInstanceView;\n\n/** Optional parameters. */\nexport interface CloudServiceRoleInstancesListOptionalParams\n  extends coreClient.OperationOptions {\n  /** The expand expression to apply to the operation. 'UserData' is not supported for cloud services. */\n  expand?: InstanceViewTypes;\n}\n\n/** Contains response data for the list operation. */\nexport type CloudServiceRoleInstancesListResponse = RoleInstanceListResult;\n\n/** Optional parameters. */\nexport interface CloudServiceRoleInstancesRestartOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Optional parameters. */\nexport interface CloudServiceRoleInstancesReimageOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Optional parameters. */\nexport interface CloudServiceRoleInstancesRebuildOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Optional parameters. */\nexport interface CloudServiceRoleInstancesGetRemoteDesktopFileOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the getRemoteDesktopFile operation. */\nexport type CloudServiceRoleInstancesGetRemoteDesktopFileResponse = {\n  /**\n   * BROWSER ONLY\n   *\n   * The response body as a browser Blob.\n   * Always `undefined` in node.js.\n   */\n  blobBody?: Promise<Blob>;\n  /**\n   * NODEJS ONLY\n   *\n   * The response body as a node.js Readable stream.\n   * Always `undefined` in the browser.\n   */\n  readableStreamBody?: NodeJS.ReadableStream;\n};\n\n/** Optional parameters. */\nexport interface CloudServiceRoleInstancesListNextOptionalParams\n  extends coreClient.OperationOptions {\n  /** The expand expression to apply to the operation. 'UserData' is not supported for cloud services. */\n  expand?: InstanceViewTypes;\n}\n\n/** Contains response data for the listNext operation. */\nexport type CloudServiceRoleInstancesListNextResponse = RoleInstanceListResult;\n\n/** Optional parameters. */\nexport interface CloudServiceRolesGetOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the get operation. */\nexport type CloudServiceRolesGetResponse = CloudServiceRole;\n\n/** Optional parameters. */\nexport interface CloudServiceRolesListOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the list operation. */\nexport type CloudServiceRolesListResponse = CloudServiceRoleListResult;\n\n/** Optional parameters. */\nexport interface CloudServiceRolesListNextOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listNext operation. */\nexport type CloudServiceRolesListNextResponse = CloudServiceRoleListResult;\n\n/** Optional parameters. */\nexport interface CloudServicesCreateOrUpdateOptionalParams\n  extends coreClient.OperationOptions {\n  /** The cloud service object. */\n  parameters?: CloudService;\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Contains response data for the createOrUpdate operation. */\nexport type CloudServicesCreateOrUpdateResponse = CloudService;\n\n/** Optional parameters. */\nexport interface CloudServicesUpdateOptionalParams\n  extends coreClient.OperationOptions {\n  /** The cloud service object. */\n  parameters?: CloudServiceUpdate;\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Contains response data for the update operation. */\nexport type CloudServicesUpdateResponse = CloudService;\n\n/** Optional parameters. */\nexport interface CloudServicesDeleteOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Optional parameters. */\nexport interface CloudServicesGetOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the get operation. */\nexport type CloudServicesGetResponse = CloudService;\n\n/** Optional parameters. */\nexport interface CloudServicesGetInstanceViewOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the getInstanceView operation. */\nexport type CloudServicesGetInstanceViewResponse = CloudServiceInstanceView;\n\n/** Optional parameters. */\nexport interface CloudServicesListAllOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listAll operation. */\nexport type CloudServicesListAllResponse = CloudServiceListResult;\n\n/** Optional parameters. */\nexport interface CloudServicesListOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the list operation. */\nexport type CloudServicesListResponse = CloudServiceListResult;\n\n/** Optional parameters. */\nexport interface CloudServicesStartOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Optional parameters. */\nexport interface CloudServicesPowerOffOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Optional parameters. */\nexport interface CloudServicesRestartOptionalParams\n  extends coreClient.OperationOptions {\n  /** List of cloud service role instance names. */\n  parameters?: RoleInstances;\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Optional parameters. */\nexport interface CloudServicesReimageOptionalParams\n  extends coreClient.OperationOptions {\n  /** List of cloud service role instance names. */\n  parameters?: RoleInstances;\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Optional parameters. */\nexport interface CloudServicesRebuildOptionalParams\n  extends coreClient.OperationOptions {\n  /** List of cloud service role instance names. */\n  parameters?: RoleInstances;\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Optional parameters. */\nexport interface CloudServicesDeleteInstancesOptionalParams\n  extends coreClient.OperationOptions {\n  /** List of cloud service role instance names. */\n  parameters?: RoleInstances;\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Optional parameters. */\nexport interface CloudServicesListAllNextOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listAllNext operation. */\nexport type CloudServicesListAllNextResponse = CloudServiceListResult;\n\n/** Optional parameters. */\nexport interface CloudServicesListNextOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listNext operation. */\nexport type CloudServicesListNextResponse = CloudServiceListResult;\n\n/** Optional parameters. */\nexport interface CloudServicesUpdateDomainWalkUpdateDomainOptionalParams\n  extends coreClient.OperationOptions {\n  /** The update domain object. */\n  parameters?: UpdateDomain;\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Optional parameters. */\nexport interface CloudServicesUpdateDomainGetUpdateDomainOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the getUpdateDomain operation. */\nexport type CloudServicesUpdateDomainGetUpdateDomainResponse = UpdateDomain;\n\n/** Optional parameters. */\nexport interface CloudServicesUpdateDomainListUpdateDomainsOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listUpdateDomains operation. */\nexport type CloudServicesUpdateDomainListUpdateDomainsResponse = UpdateDomainListResult;\n\n/** Optional parameters. */\nexport interface CloudServicesUpdateDomainListUpdateDomainsNextOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listUpdateDomainsNext operation. */\nexport type CloudServicesUpdateDomainListUpdateDomainsNextResponse = UpdateDomainListResult;\n\n/** Optional parameters. */\nexport interface CloudServiceOperatingSystemsGetOSVersionOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the getOSVersion operation. */\nexport type CloudServiceOperatingSystemsGetOSVersionResponse = OSVersion;\n\n/** Optional parameters. */\nexport interface CloudServiceOperatingSystemsListOSVersionsOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listOSVersions operation. */\nexport type CloudServiceOperatingSystemsListOSVersionsResponse = OSVersionListResult;\n\n/** Optional parameters. */\nexport interface CloudServiceOperatingSystemsGetOSFamilyOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the getOSFamily operation. */\nexport type CloudServiceOperatingSystemsGetOSFamilyResponse = OSFamily;\n\n/** Optional parameters. */\nexport interface CloudServiceOperatingSystemsListOSFamiliesOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listOSFamilies operation. */\nexport type CloudServiceOperatingSystemsListOSFamiliesResponse = OSFamilyListResult;\n\n/** Optional parameters. */\nexport interface CloudServiceOperatingSystemsListOSVersionsNextOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listOSVersionsNext operation. */\nexport type CloudServiceOperatingSystemsListOSVersionsNextResponse = OSVersionListResult;\n\n/** Optional parameters. */\nexport interface CloudServiceOperatingSystemsListOSFamiliesNextOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listOSFamiliesNext operation. */\nexport type CloudServiceOperatingSystemsListOSFamiliesNextResponse = OSFamilyListResult;\n\n/** Optional parameters. */\nexport interface ComputeManagementClientOptionalParams\n  extends coreClient.ServiceClientOptions {\n  /** server parameter */\n  $host?: string;\n  /** Overrides client endpoint. */\n  endpoint?: string;\n}\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport * as coreClient from \"@azure/core-client\";\n\nexport const ComputeOperationListResult: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ComputeOperationListResult\",\n    modelProperties: {\n      value: {\n        serializedName: \"value\",\n        readOnly: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"ComputeOperationValue\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const ComputeOperationValue: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ComputeOperationValue\",\n    modelProperties: {\n      origin: {\n        serializedName: \"origin\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      name: {\n        serializedName: \"name\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      operation: {\n        serializedName: \"display.operation\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      resource: {\n        serializedName: \"display.resource\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      description: {\n        serializedName: \"display.description\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      provider: {\n        serializedName: \"display.provider\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const CloudError: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"CloudError\",\n    modelProperties: {\n      error: {\n        serializedName: \"error\",\n        type: {\n          name: \"Composite\",\n          className: \"ApiError\"\n        }\n      }\n    }\n  }\n};\n\nexport const ApiError: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ApiError\",\n    modelProperties: {\n      details: {\n        serializedName: \"details\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"ApiErrorBase\"\n            }\n          }\n        }\n      },\n      innererror: {\n        serializedName: \"innererror\",\n        type: {\n          name: \"Composite\",\n          className: \"InnerError\"\n        }\n      },\n      code: {\n        serializedName: \"code\",\n        type: {\n          name: \"String\"\n        }\n      },\n      target: {\n        serializedName: \"target\",\n        type: {\n          name: \"String\"\n        }\n      },\n      message: {\n        serializedName: \"message\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const ApiErrorBase: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ApiErrorBase\",\n    modelProperties: {\n      code: {\n        serializedName: \"code\",\n        type: {\n          name: \"String\"\n        }\n      },\n      target: {\n        serializedName: \"target\",\n        type: {\n          name: \"String\"\n        }\n      },\n      message: {\n        serializedName: \"message\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const InnerError: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"InnerError\",\n    modelProperties: {\n      exceptiontype: {\n        serializedName: \"exceptiontype\",\n        type: {\n          name: \"String\"\n        }\n      },\n      errordetail: {\n        serializedName: \"errordetail\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const SubResource: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"SubResource\",\n    modelProperties: {\n      id: {\n        serializedName: \"id\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const InstanceViewStatus: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"InstanceViewStatus\",\n    modelProperties: {\n      code: {\n        serializedName: \"code\",\n        type: {\n          name: \"String\"\n        }\n      },\n      level: {\n        serializedName: \"level\",\n        type: {\n          name: \"Enum\",\n          allowedValues: [\"Info\", \"Warning\", \"Error\"]\n        }\n      },\n      displayStatus: {\n        serializedName: \"displayStatus\",\n        type: {\n          name: \"String\"\n        }\n      },\n      message: {\n        serializedName: \"message\",\n        type: {\n          name: \"String\"\n        }\n      },\n      time: {\n        serializedName: \"time\",\n        type: {\n          name: \"DateTime\"\n        }\n      }\n    }\n  }\n};\n\nexport const Sku: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"Sku\",\n    modelProperties: {\n      name: {\n        serializedName: \"name\",\n        type: {\n          name: \"String\"\n        }\n      },\n      tier: {\n        serializedName: \"tier\",\n        type: {\n          name: \"String\"\n        }\n      },\n      capacity: {\n        serializedName: \"capacity\",\n        type: {\n          name: \"Number\"\n        }\n      }\n    }\n  }\n};\n\nexport const Resource: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"Resource\",\n    modelProperties: {\n      id: {\n        serializedName: \"id\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      name: {\n        serializedName: \"name\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      type: {\n        serializedName: \"type\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      location: {\n        serializedName: \"location\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      tags: {\n        serializedName: \"tags\",\n        type: {\n          name: \"Dictionary\",\n          value: { type: { name: \"String\" } }\n        }\n      }\n    }\n  }\n};\n\nexport const UpdateResource: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"UpdateResource\",\n    modelProperties: {\n      tags: {\n        serializedName: \"tags\",\n        type: {\n          name: \"Dictionary\",\n          value: { type: { name: \"String\" } }\n        }\n      }\n    }\n  }\n};\n\nexport const AvailabilitySetListResult: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"AvailabilitySetListResult\",\n    modelProperties: {\n      value: {\n        serializedName: \"value\",\n        required: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"AvailabilitySet\"\n            }\n          }\n        }\n      },\n      nextLink: {\n        serializedName: \"nextLink\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const VirtualMachineSizeListResult: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"VirtualMachineSizeListResult\",\n    modelProperties: {\n      value: {\n        serializedName: \"value\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"VirtualMachineSize\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const VirtualMachineSize: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"VirtualMachineSize\",\n    modelProperties: {\n      name: {\n        serializedName: \"name\",\n        type: {\n          name: \"String\"\n        }\n      },\n      numberOfCores: {\n        serializedName: \"numberOfCores\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      osDiskSizeInMB: {\n        serializedName: \"osDiskSizeInMB\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      resourceDiskSizeInMB: {\n        serializedName: \"resourceDiskSizeInMB\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      memoryInMB: {\n        serializedName: \"memoryInMB\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      maxDataDiskCount: {\n        serializedName: \"maxDataDiskCount\",\n        type: {\n          name: \"Number\"\n        }\n      }\n    }\n  }\n};\n\nexport const ProximityPlacementGroupListResult: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ProximityPlacementGroupListResult\",\n    modelProperties: {\n      value: {\n        serializedName: \"value\",\n        required: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"ProximityPlacementGroup\"\n            }\n          }\n        }\n      },\n      nextLink: {\n        serializedName: \"nextLink\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const SubResourceReadOnly: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"SubResourceReadOnly\",\n    modelProperties: {\n      id: {\n        serializedName: \"id\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const DedicatedHostGroupInstanceView: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"DedicatedHostGroupInstanceView\",\n    modelProperties: {\n      hosts: {\n        serializedName: \"hosts\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"DedicatedHostInstanceViewWithName\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const DedicatedHostInstanceView: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"DedicatedHostInstanceView\",\n    modelProperties: {\n      assetId: {\n        serializedName: \"assetId\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      availableCapacity: {\n        serializedName: \"availableCapacity\",\n        type: {\n          name: \"Composite\",\n          className: \"DedicatedHostAvailableCapacity\"\n        }\n      },\n      statuses: {\n        serializedName: \"statuses\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"InstanceViewStatus\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const DedicatedHostAvailableCapacity: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"DedicatedHostAvailableCapacity\",\n    modelProperties: {\n      allocatableVMs: {\n        serializedName: \"allocatableVMs\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"DedicatedHostAllocatableVM\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const DedicatedHostAllocatableVM: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"DedicatedHostAllocatableVM\",\n    modelProperties: {\n      vmSize: {\n        serializedName: \"vmSize\",\n        type: {\n          name: \"String\"\n        }\n      },\n      count: {\n        serializedName: \"count\",\n        type: {\n          name: \"Number\"\n        }\n      }\n    }\n  }\n};\n\nexport const DedicatedHostGroupListResult: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"DedicatedHostGroupListResult\",\n    modelProperties: {\n      value: {\n        serializedName: \"value\",\n        required: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"DedicatedHostGroup\"\n            }\n          }\n        }\n      },\n      nextLink: {\n        serializedName: \"nextLink\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const DedicatedHostListResult: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"DedicatedHostListResult\",\n    modelProperties: {\n      value: {\n        serializedName: \"value\",\n        required: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"DedicatedHost\"\n            }\n          }\n        }\n      },\n      nextLink: {\n        serializedName: \"nextLink\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const SshPublicKeysGroupListResult: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"SshPublicKeysGroupListResult\",\n    modelProperties: {\n      value: {\n        serializedName: \"value\",\n        required: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"SshPublicKeyResource\"\n            }\n          }\n        }\n      },\n      nextLink: {\n        serializedName: \"nextLink\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const SshPublicKeyGenerateKeyPairResult: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"SshPublicKeyGenerateKeyPairResult\",\n    modelProperties: {\n      privateKey: {\n        serializedName: \"privateKey\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      publicKey: {\n        serializedName: \"publicKey\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      id: {\n        serializedName: \"id\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const VirtualMachineExtensionInstanceView: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"VirtualMachineExtensionInstanceView\",\n    modelProperties: {\n      name: {\n        serializedName: \"name\",\n        type: {\n          name: \"String\"\n        }\n      },\n      type: {\n        serializedName: \"type\",\n        type: {\n          name: \"String\"\n        }\n      },\n      typeHandlerVersion: {\n        serializedName: \"typeHandlerVersion\",\n        type: {\n          name: \"String\"\n        }\n      },\n      substatuses: {\n        serializedName: \"substatuses\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"InstanceViewStatus\"\n            }\n          }\n        }\n      },\n      statuses: {\n        serializedName: \"statuses\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"InstanceViewStatus\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const VirtualMachineExtensionsListResult: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"VirtualMachineExtensionsListResult\",\n    modelProperties: {\n      value: {\n        serializedName: \"value\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"VirtualMachineExtension\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const PurchasePlan: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"PurchasePlan\",\n    modelProperties: {\n      publisher: {\n        serializedName: \"publisher\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      name: {\n        serializedName: \"name\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      product: {\n        serializedName: \"product\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const OSDiskImage: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"OSDiskImage\",\n    modelProperties: {\n      operatingSystem: {\n        serializedName: \"operatingSystem\",\n        required: true,\n        type: {\n          name: \"Enum\",\n          allowedValues: [\"Windows\", \"Linux\"]\n        }\n      }\n    }\n  }\n};\n\nexport const DataDiskImage: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"DataDiskImage\",\n    modelProperties: {\n      lun: {\n        serializedName: \"lun\",\n        readOnly: true,\n        type: {\n          name: \"Number\"\n        }\n      }\n    }\n  }\n};\n\nexport const AutomaticOSUpgradeProperties: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"AutomaticOSUpgradeProperties\",\n    modelProperties: {\n      automaticOSUpgradeSupported: {\n        serializedName: \"automaticOSUpgradeSupported\",\n        required: true,\n        type: {\n          name: \"Boolean\"\n        }\n      }\n    }\n  }\n};\n\nexport const DisallowedConfiguration: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"DisallowedConfiguration\",\n    modelProperties: {\n      vmDiskType: {\n        serializedName: \"vmDiskType\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const VirtualMachineImageFeature: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"VirtualMachineImageFeature\",\n    modelProperties: {\n      name: {\n        serializedName: \"name\",\n        type: {\n          name: \"String\"\n        }\n      },\n      value: {\n        serializedName: \"value\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const ExtendedLocation: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ExtendedLocation\",\n    modelProperties: {\n      name: {\n        serializedName: \"name\",\n        type: {\n          name: \"String\"\n        }\n      },\n      type: {\n        serializedName: \"type\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const ListUsagesResult: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ListUsagesResult\",\n    modelProperties: {\n      value: {\n        serializedName: \"value\",\n        required: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"Usage\"\n            }\n          }\n        }\n      },\n      nextLink: {\n        serializedName: \"nextLink\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const Usage: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"Usage\",\n    modelProperties: {\n      unit: {\n        defaultValue: \"Count\",\n        isConstant: true,\n        serializedName: \"unit\",\n        type: {\n          name: \"String\"\n        }\n      },\n      currentValue: {\n        serializedName: \"currentValue\",\n        required: true,\n        type: {\n          name: \"Number\"\n        }\n      },\n      limit: {\n        serializedName: \"limit\",\n        required: true,\n        type: {\n          name: \"Number\"\n        }\n      },\n      name: {\n        serializedName: \"name\",\n        type: {\n          name: \"Composite\",\n          className: \"UsageName\"\n        }\n      }\n    }\n  }\n};\n\nexport const UsageName: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"UsageName\",\n    modelProperties: {\n      value: {\n        serializedName: \"value\",\n        type: {\n          name: \"String\"\n        }\n      },\n      localizedValue: {\n        serializedName: \"localizedValue\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const VirtualMachineListResult: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"VirtualMachineListResult\",\n    modelProperties: {\n      value: {\n        serializedName: \"value\",\n        required: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"VirtualMachine\"\n            }\n          }\n        }\n      },\n      nextLink: {\n        serializedName: \"nextLink\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const Plan: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"Plan\",\n    modelProperties: {\n      name: {\n        serializedName: \"name\",\n        type: {\n          name: \"String\"\n        }\n      },\n      publisher: {\n        serializedName: \"publisher\",\n        type: {\n          name: \"String\"\n        }\n      },\n      product: {\n        serializedName: \"product\",\n        type: {\n          name: \"String\"\n        }\n      },\n      promotionCode: {\n        serializedName: \"promotionCode\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const HardwareProfile: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"HardwareProfile\",\n    modelProperties: {\n      vmSize: {\n        serializedName: \"vmSize\",\n        type: {\n          name: \"String\"\n        }\n      },\n      vmSizeProperties: {\n        serializedName: \"vmSizeProperties\",\n        type: {\n          name: \"Composite\",\n          className: \"VMSizeProperties\"\n        }\n      }\n    }\n  }\n};\n\nexport const VMSizeProperties: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"VMSizeProperties\",\n    modelProperties: {\n      vCPUsAvailable: {\n        serializedName: \"vCPUsAvailable\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      vCPUsPerCore: {\n        serializedName: \"vCPUsPerCore\",\n        type: {\n          name: \"Number\"\n        }\n      }\n    }\n  }\n};\n\nexport const StorageProfile: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"StorageProfile\",\n    modelProperties: {\n      imageReference: {\n        serializedName: \"imageReference\",\n        type: {\n          name: \"Composite\",\n          className: \"ImageReference\"\n        }\n      },\n      osDisk: {\n        serializedName: \"osDisk\",\n        type: {\n          name: \"Composite\",\n          className: \"OSDisk\"\n        }\n      },\n      dataDisks: {\n        serializedName: \"dataDisks\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"DataDisk\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const OSDisk: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"OSDisk\",\n    modelProperties: {\n      osType: {\n        serializedName: \"osType\",\n        type: {\n          name: \"Enum\",\n          allowedValues: [\"Windows\", \"Linux\"]\n        }\n      },\n      encryptionSettings: {\n        serializedName: \"encryptionSettings\",\n        type: {\n          name: \"Composite\",\n          className: \"DiskEncryptionSettings\"\n        }\n      },\n      name: {\n        serializedName: \"name\",\n        type: {\n          name: \"String\"\n        }\n      },\n      vhd: {\n        serializedName: \"vhd\",\n        type: {\n          name: \"Composite\",\n          className: \"VirtualHardDisk\"\n        }\n      },\n      image: {\n        serializedName: \"image\",\n        type: {\n          name: \"Composite\",\n          className: \"VirtualHardDisk\"\n        }\n      },\n      caching: {\n        serializedName: \"caching\",\n        type: {\n          name: \"Enum\",\n          allowedValues: [\"None\", \"ReadOnly\", \"ReadWrite\"]\n        }\n      },\n      writeAcceleratorEnabled: {\n        serializedName: \"writeAcceleratorEnabled\",\n        type: {\n          name: \"Boolean\"\n        }\n      },\n      diffDiskSettings: {\n        serializedName: \"diffDiskSettings\",\n        type: {\n          name: \"Composite\",\n          className: \"DiffDiskSettings\"\n        }\n      },\n      createOption: {\n        serializedName: \"createOption\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      diskSizeGB: {\n        serializedName: \"diskSizeGB\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      managedDisk: {\n        serializedName: \"managedDisk\",\n        type: {\n          name: \"Composite\",\n          className: \"ManagedDiskParameters\"\n        }\n      },\n      deleteOption: {\n        serializedName: \"deleteOption\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const DiskEncryptionSettings: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"DiskEncryptionSettings\",\n    modelProperties: {\n      diskEncryptionKey: {\n        serializedName: \"diskEncryptionKey\",\n        type: {\n          name: \"Composite\",\n          className: \"KeyVaultSecretReference\"\n        }\n      },\n      keyEncryptionKey: {\n        serializedName: \"keyEncryptionKey\",\n        type: {\n          name: \"Composite\",\n          className: \"KeyVaultKeyReference\"\n        }\n      },\n      enabled: {\n        serializedName: \"enabled\",\n        type: {\n          name: \"Boolean\"\n        }\n      }\n    }\n  }\n};\n\nexport const KeyVaultSecretReference: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"KeyVaultSecretReference\",\n    modelProperties: {\n      secretUrl: {\n        serializedName: \"secretUrl\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      sourceVault: {\n        serializedName: \"sourceVault\",\n        type: {\n          name: \"Composite\",\n          className: \"SubResource\"\n        }\n      }\n    }\n  }\n};\n\nexport const KeyVaultKeyReference: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"KeyVaultKeyReference\",\n    modelProperties: {\n      keyUrl: {\n        serializedName: \"keyUrl\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      sourceVault: {\n        serializedName: \"sourceVault\",\n        type: {\n          name: \"Composite\",\n          className: \"SubResource\"\n        }\n      }\n    }\n  }\n};\n\nexport const VirtualHardDisk: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"VirtualHardDisk\",\n    modelProperties: {\n      uri: {\n        serializedName: \"uri\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const DiffDiskSettings: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"DiffDiskSettings\",\n    modelProperties: {\n      option: {\n        serializedName: \"option\",\n        type: {\n          name: \"String\"\n        }\n      },\n      placement: {\n        serializedName: \"placement\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const VMDiskSecurityProfile: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"VMDiskSecurityProfile\",\n    modelProperties: {\n      securityEncryptionType: {\n        serializedName: \"securityEncryptionType\",\n        type: {\n          name: \"String\"\n        }\n      },\n      diskEncryptionSet: {\n        serializedName: \"diskEncryptionSet\",\n        type: {\n          name: \"Composite\",\n          className: \"DiskEncryptionSetParameters\"\n        }\n      }\n    }\n  }\n};\n\nexport const DataDisk: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"DataDisk\",\n    modelProperties: {\n      lun: {\n        serializedName: \"lun\",\n        required: true,\n        type: {\n          name: \"Number\"\n        }\n      },\n      name: {\n        serializedName: \"name\",\n        type: {\n          name: \"String\"\n        }\n      },\n      vhd: {\n        serializedName: \"vhd\",\n        type: {\n          name: \"Composite\",\n          className: \"VirtualHardDisk\"\n        }\n      },\n      image: {\n        serializedName: \"image\",\n        type: {\n          name: \"Composite\",\n          className: \"VirtualHardDisk\"\n        }\n      },\n      caching: {\n        serializedName: \"caching\",\n        type: {\n          name: \"Enum\",\n          allowedValues: [\"None\", \"ReadOnly\", \"ReadWrite\"]\n        }\n      },\n      writeAcceleratorEnabled: {\n        serializedName: \"writeAcceleratorEnabled\",\n        type: {\n          name: \"Boolean\"\n        }\n      },\n      createOption: {\n        serializedName: \"createOption\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      diskSizeGB: {\n        serializedName: \"diskSizeGB\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      managedDisk: {\n        serializedName: \"managedDisk\",\n        type: {\n          name: \"Composite\",\n          className: \"ManagedDiskParameters\"\n        }\n      },\n      toBeDetached: {\n        serializedName: \"toBeDetached\",\n        type: {\n          name: \"Boolean\"\n        }\n      },\n      diskIopsReadWrite: {\n        serializedName: \"diskIOPSReadWrite\",\n        readOnly: true,\n        type: {\n          name: \"Number\"\n        }\n      },\n      diskMBpsReadWrite: {\n        serializedName: \"diskMBpsReadWrite\",\n        readOnly: true,\n        type: {\n          name: \"Number\"\n        }\n      },\n      detachOption: {\n        serializedName: \"detachOption\",\n        type: {\n          name: \"String\"\n        }\n      },\n      deleteOption: {\n        serializedName: \"deleteOption\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const AdditionalCapabilities: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"AdditionalCapabilities\",\n    modelProperties: {\n      ultraSSDEnabled: {\n        serializedName: \"ultraSSDEnabled\",\n        type: {\n          name: \"Boolean\"\n        }\n      },\n      hibernationEnabled: {\n        serializedName: \"hibernationEnabled\",\n        type: {\n          name: \"Boolean\"\n        }\n      }\n    }\n  }\n};\n\nexport const OSProfile: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"OSProfile\",\n    modelProperties: {\n      computerName: {\n        serializedName: \"computerName\",\n        type: {\n          name: \"String\"\n        }\n      },\n      adminUsername: {\n        serializedName: \"adminUsername\",\n        type: {\n          name: \"String\"\n        }\n      },\n      adminPassword: {\n        serializedName: \"adminPassword\",\n        type: {\n          name: \"String\"\n        }\n      },\n      customData: {\n        serializedName: \"customData\",\n        type: {\n          name: \"String\"\n        }\n      },\n      windowsConfiguration: {\n        serializedName: \"windowsConfiguration\",\n        type: {\n          name: \"Composite\",\n          className: \"WindowsConfiguration\"\n        }\n      },\n      linuxConfiguration: {\n        serializedName: \"linuxConfiguration\",\n        type: {\n          name: \"Composite\",\n          className: \"LinuxConfiguration\"\n        }\n      },\n      secrets: {\n        serializedName: \"secrets\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"VaultSecretGroup\"\n            }\n          }\n        }\n      },\n      allowExtensionOperations: {\n        serializedName: \"allowExtensionOperations\",\n        type: {\n          name: \"Boolean\"\n        }\n      },\n      requireGuestProvisionSignal: {\n        serializedName: \"requireGuestProvisionSignal\",\n        type: {\n          name: \"Boolean\"\n        }\n      }\n    }\n  }\n};\n\nexport const WindowsConfiguration: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"WindowsConfiguration\",\n    modelProperties: {\n      provisionVMAgent: {\n        serializedName: \"provisionVMAgent\",\n        type: {\n          name: \"Boolean\"\n        }\n      },\n      enableAutomaticUpdates: {\n        serializedName: \"enableAutomaticUpdates\",\n        type: {\n          name: \"Boolean\"\n        }\n      },\n      timeZone: {\n        serializedName: \"timeZone\",\n        type: {\n          name: \"String\"\n        }\n      },\n      additionalUnattendContent: {\n        serializedName: \"additionalUnattendContent\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"AdditionalUnattendContent\"\n            }\n          }\n        }\n      },\n      patchSettings: {\n        serializedName: \"patchSettings\",\n        type: {\n          name: \"Composite\",\n          className: \"PatchSettings\"\n        }\n      },\n      winRM: {\n        serializedName: \"winRM\",\n        type: {\n          name: \"Composite\",\n          className: \"WinRMConfiguration\"\n        }\n      }\n    }\n  }\n};\n\nexport const AdditionalUnattendContent: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"AdditionalUnattendContent\",\n    modelProperties: {\n      passName: {\n        defaultValue: \"OobeSystem\",\n        isConstant: true,\n        serializedName: \"passName\",\n        type: {\n          name: \"String\"\n        }\n      },\n      componentName: {\n        defaultValue: \"Microsoft-Windows-Shell-Setup\",\n        isConstant: true,\n        serializedName: \"componentName\",\n        type: {\n          name: \"String\"\n        }\n      },\n      settingName: {\n        serializedName: \"settingName\",\n        type: {\n          name: \"Enum\",\n          allowedValues: [\"AutoLogon\", \"FirstLogonCommands\"]\n        }\n      },\n      content: {\n        serializedName: \"content\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const PatchSettings: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"PatchSettings\",\n    modelProperties: {\n      patchMode: {\n        serializedName: \"patchMode\",\n        type: {\n          name: \"String\"\n        }\n      },\n      enableHotpatching: {\n        serializedName: \"enableHotpatching\",\n        type: {\n          name: \"Boolean\"\n        }\n      },\n      assessmentMode: {\n        serializedName: \"assessmentMode\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const WinRMConfiguration: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"WinRMConfiguration\",\n    modelProperties: {\n      listeners: {\n        serializedName: \"listeners\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"WinRMListener\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const WinRMListener: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"WinRMListener\",\n    modelProperties: {\n      protocol: {\n        serializedName: \"protocol\",\n        type: {\n          name: \"Enum\",\n          allowedValues: [\"Http\", \"Https\"]\n        }\n      },\n      certificateUrl: {\n        serializedName: \"certificateUrl\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const LinuxConfiguration: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"LinuxConfiguration\",\n    modelProperties: {\n      disablePasswordAuthentication: {\n        serializedName: \"disablePasswordAuthentication\",\n        type: {\n          name: \"Boolean\"\n        }\n      },\n      ssh: {\n        serializedName: \"ssh\",\n        type: {\n          name: \"Composite\",\n          className: \"SshConfiguration\"\n        }\n      },\n      provisionVMAgent: {\n        serializedName: \"provisionVMAgent\",\n        type: {\n          name: \"Boolean\"\n        }\n      },\n      patchSettings: {\n        serializedName: \"patchSettings\",\n        type: {\n          name: \"Composite\",\n          className: \"LinuxPatchSettings\"\n        }\n      }\n    }\n  }\n};\n\nexport const SshConfiguration: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"SshConfiguration\",\n    modelProperties: {\n      publicKeys: {\n        serializedName: \"publicKeys\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"SshPublicKey\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const SshPublicKey: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"SshPublicKey\",\n    modelProperties: {\n      path: {\n        serializedName: \"path\",\n        type: {\n          name: \"String\"\n        }\n      },\n      keyData: {\n        serializedName: \"keyData\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const LinuxPatchSettings: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"LinuxPatchSettings\",\n    modelProperties: {\n      patchMode: {\n        serializedName: \"patchMode\",\n        type: {\n          name: \"String\"\n        }\n      },\n      assessmentMode: {\n        serializedName: \"assessmentMode\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const VaultSecretGroup: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"VaultSecretGroup\",\n    modelProperties: {\n      sourceVault: {\n        serializedName: \"sourceVault\",\n        type: {\n          name: \"Composite\",\n          className: \"SubResource\"\n        }\n      },\n      vaultCertificates: {\n        serializedName: \"vaultCertificates\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"VaultCertificate\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const VaultCertificate: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"VaultCertificate\",\n    modelProperties: {\n      certificateUrl: {\n        serializedName: \"certificateUrl\",\n        type: {\n          name: \"String\"\n        }\n      },\n      certificateStore: {\n        serializedName: \"certificateStore\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const NetworkProfile: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"NetworkProfile\",\n    modelProperties: {\n      networkInterfaces: {\n        serializedName: \"networkInterfaces\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"NetworkInterfaceReference\"\n            }\n          }\n        }\n      },\n      networkApiVersion: {\n        serializedName: \"networkApiVersion\",\n        type: {\n          name: \"String\"\n        }\n      },\n      networkInterfaceConfigurations: {\n        serializedName: \"networkInterfaceConfigurations\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"VirtualMachineNetworkInterfaceConfiguration\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const VirtualMachineNetworkInterfaceConfiguration: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"VirtualMachineNetworkInterfaceConfiguration\",\n    modelProperties: {\n      name: {\n        serializedName: \"name\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      primary: {\n        serializedName: \"properties.primary\",\n        type: {\n          name: \"Boolean\"\n        }\n      },\n      deleteOption: {\n        serializedName: \"properties.deleteOption\",\n        type: {\n          name: \"String\"\n        }\n      },\n      enableAcceleratedNetworking: {\n        serializedName: \"properties.enableAcceleratedNetworking\",\n        type: {\n          name: \"Boolean\"\n        }\n      },\n      enableFpga: {\n        serializedName: \"properties.enableFpga\",\n        type: {\n          name: \"Boolean\"\n        }\n      },\n      enableIPForwarding: {\n        serializedName: \"properties.enableIPForwarding\",\n        type: {\n          name: \"Boolean\"\n        }\n      },\n      networkSecurityGroup: {\n        serializedName: \"properties.networkSecurityGroup\",\n        type: {\n          name: \"Composite\",\n          className: \"SubResource\"\n        }\n      },\n      dnsSettings: {\n        serializedName: \"properties.dnsSettings\",\n        type: {\n          name: \"Composite\",\n          className: \"VirtualMachineNetworkInterfaceDnsSettingsConfiguration\"\n        }\n      },\n      ipConfigurations: {\n        serializedName: \"properties.ipConfigurations\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"VirtualMachineNetworkInterfaceIPConfiguration\"\n            }\n          }\n        }\n      },\n      dscpConfiguration: {\n        serializedName: \"properties.dscpConfiguration\",\n        type: {\n          name: \"Composite\",\n          className: \"SubResource\"\n        }\n      }\n    }\n  }\n};\n\nexport const VirtualMachineNetworkInterfaceDnsSettingsConfiguration: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"VirtualMachineNetworkInterfaceDnsSettingsConfiguration\",\n    modelProperties: {\n      dnsServers: {\n        serializedName: \"dnsServers\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"String\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const VirtualMachineNetworkInterfaceIPConfiguration: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"VirtualMachineNetworkInterfaceIPConfiguration\",\n    modelProperties: {\n      name: {\n        serializedName: \"name\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      subnet: {\n        serializedName: \"properties.subnet\",\n        type: {\n          name: \"Composite\",\n          className: \"SubResource\"\n        }\n      },\n      primary: {\n        serializedName: \"properties.primary\",\n        type: {\n          name: \"Boolean\"\n        }\n      },\n      publicIPAddressConfiguration: {\n        serializedName: \"properties.publicIPAddressConfiguration\",\n        type: {\n          name: \"Composite\",\n          className: \"VirtualMachinePublicIPAddressConfiguration\"\n        }\n      },\n      privateIPAddressVersion: {\n        serializedName: \"properties.privateIPAddressVersion\",\n        type: {\n          name: \"String\"\n        }\n      },\n      applicationSecurityGroups: {\n        serializedName: \"properties.applicationSecurityGroups\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"SubResource\"\n            }\n          }\n        }\n      },\n      applicationGatewayBackendAddressPools: {\n        serializedName: \"properties.applicationGatewayBackendAddressPools\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"SubResource\"\n            }\n          }\n        }\n      },\n      loadBalancerBackendAddressPools: {\n        serializedName: \"properties.loadBalancerBackendAddressPools\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"SubResource\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const VirtualMachinePublicIPAddressConfiguration: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"VirtualMachinePublicIPAddressConfiguration\",\n    modelProperties: {\n      name: {\n        serializedName: \"name\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      sku: {\n        serializedName: \"sku\",\n        type: {\n          name: \"Composite\",\n          className: \"PublicIPAddressSku\"\n        }\n      },\n      idleTimeoutInMinutes: {\n        serializedName: \"properties.idleTimeoutInMinutes\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      deleteOption: {\n        serializedName: \"properties.deleteOption\",\n        type: {\n          name: \"String\"\n        }\n      },\n      dnsSettings: {\n        serializedName: \"properties.dnsSettings\",\n        type: {\n          name: \"Composite\",\n          className: \"VirtualMachinePublicIPAddressDnsSettingsConfiguration\"\n        }\n      },\n      ipTags: {\n        serializedName: \"properties.ipTags\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"VirtualMachineIpTag\"\n            }\n          }\n        }\n      },\n      publicIPPrefix: {\n        serializedName: \"properties.publicIPPrefix\",\n        type: {\n          name: \"Composite\",\n          className: \"SubResource\"\n        }\n      },\n      publicIPAddressVersion: {\n        serializedName: \"properties.publicIPAddressVersion\",\n        type: {\n          name: \"String\"\n        }\n      },\n      publicIPAllocationMethod: {\n        serializedName: \"properties.publicIPAllocationMethod\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const VirtualMachinePublicIPAddressDnsSettingsConfiguration: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"VirtualMachinePublicIPAddressDnsSettingsConfiguration\",\n    modelProperties: {\n      domainNameLabel: {\n        serializedName: \"domainNameLabel\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const VirtualMachineIpTag: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"VirtualMachineIpTag\",\n    modelProperties: {\n      ipTagType: {\n        serializedName: \"ipTagType\",\n        type: {\n          name: \"String\"\n        }\n      },\n      tag: {\n        serializedName: \"tag\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const PublicIPAddressSku: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"PublicIPAddressSku\",\n    modelProperties: {\n      name: {\n        serializedName: \"name\",\n        type: {\n          name: \"String\"\n        }\n      },\n      tier: {\n        serializedName: \"tier\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const SecurityProfile: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"SecurityProfile\",\n    modelProperties: {\n      uefiSettings: {\n        serializedName: \"uefiSettings\",\n        type: {\n          name: \"Composite\",\n          className: \"UefiSettings\"\n        }\n      },\n      encryptionAtHost: {\n        serializedName: \"encryptionAtHost\",\n        type: {\n          name: \"Boolean\"\n        }\n      },\n      securityType: {\n        serializedName: \"securityType\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const UefiSettings: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"UefiSettings\",\n    modelProperties: {\n      secureBootEnabled: {\n        serializedName: \"secureBootEnabled\",\n        type: {\n          name: \"Boolean\"\n        }\n      },\n      vTpmEnabled: {\n        serializedName: \"vTpmEnabled\",\n        type: {\n          name: \"Boolean\"\n        }\n      }\n    }\n  }\n};\n\nexport const DiagnosticsProfile: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"DiagnosticsProfile\",\n    modelProperties: {\n      bootDiagnostics: {\n        serializedName: \"bootDiagnostics\",\n        type: {\n          name: \"Composite\",\n          className: \"BootDiagnostics\"\n        }\n      }\n    }\n  }\n};\n\nexport const BootDiagnostics: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"BootDiagnostics\",\n    modelProperties: {\n      enabled: {\n        serializedName: \"enabled\",\n        type: {\n          name: \"Boolean\"\n        }\n      },\n      storageUri: {\n        serializedName: \"storageUri\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const BillingProfile: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"BillingProfile\",\n    modelProperties: {\n      maxPrice: {\n        serializedName: \"maxPrice\",\n        type: {\n          name: \"Number\"\n        }\n      }\n    }\n  }\n};\n\nexport const VirtualMachineInstanceView: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"VirtualMachineInstanceView\",\n    modelProperties: {\n      platformUpdateDomain: {\n        serializedName: \"platformUpdateDomain\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      platformFaultDomain: {\n        serializedName: \"platformFaultDomain\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      computerName: {\n        serializedName: \"computerName\",\n        type: {\n          name: \"String\"\n        }\n      },\n      osName: {\n        serializedName: \"osName\",\n        type: {\n          name: \"String\"\n        }\n      },\n      osVersion: {\n        serializedName: \"osVersion\",\n        type: {\n          name: \"String\"\n        }\n      },\n      hyperVGeneration: {\n        serializedName: \"hyperVGeneration\",\n        type: {\n          name: \"String\"\n        }\n      },\n      rdpThumbPrint: {\n        serializedName: \"rdpThumbPrint\",\n        type: {\n          name: \"String\"\n        }\n      },\n      vmAgent: {\n        serializedName: \"vmAgent\",\n        type: {\n          name: \"Composite\",\n          className: \"VirtualMachineAgentInstanceView\"\n        }\n      },\n      maintenanceRedeployStatus: {\n        serializedName: \"maintenanceRedeployStatus\",\n        type: {\n          name: \"Composite\",\n          className: \"MaintenanceRedeployStatus\"\n        }\n      },\n      disks: {\n        serializedName: \"disks\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"DiskInstanceView\"\n            }\n          }\n        }\n      },\n      extensions: {\n        serializedName: \"extensions\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"VirtualMachineExtensionInstanceView\"\n            }\n          }\n        }\n      },\n      vmHealth: {\n        serializedName: \"vmHealth\",\n        type: {\n          name: \"Composite\",\n          className: \"VirtualMachineHealthStatus\"\n        }\n      },\n      bootDiagnostics: {\n        serializedName: \"bootDiagnostics\",\n        type: {\n          name: \"Composite\",\n          className: \"BootDiagnosticsInstanceView\"\n        }\n      },\n      assignedHost: {\n        serializedName: \"assignedHost\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      statuses: {\n        serializedName: \"statuses\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"InstanceViewStatus\"\n            }\n          }\n        }\n      },\n      patchStatus: {\n        serializedName: \"patchStatus\",\n        type: {\n          name: \"Composite\",\n          className: \"VirtualMachinePatchStatus\"\n        }\n      }\n    }\n  }\n};\n\nexport const VirtualMachineAgentInstanceView: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"VirtualMachineAgentInstanceView\",\n    modelProperties: {\n      vmAgentVersion: {\n        serializedName: \"vmAgentVersion\",\n        type: {\n          name: \"String\"\n        }\n      },\n      extensionHandlers: {\n        serializedName: \"extensionHandlers\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"VirtualMachineExtensionHandlerInstanceView\"\n            }\n          }\n        }\n      },\n      statuses: {\n        serializedName: \"statuses\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"InstanceViewStatus\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const VirtualMachineExtensionHandlerInstanceView: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"VirtualMachineExtensionHandlerInstanceView\",\n    modelProperties: {\n      type: {\n        serializedName: \"type\",\n        type: {\n          name: \"String\"\n        }\n      },\n      typeHandlerVersion: {\n        serializedName: \"typeHandlerVersion\",\n        type: {\n          name: \"String\"\n        }\n      },\n      status: {\n        serializedName: \"status\",\n        type: {\n          name: \"Composite\",\n          className: \"InstanceViewStatus\"\n        }\n      }\n    }\n  }\n};\n\nexport const MaintenanceRedeployStatus: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"MaintenanceRedeployStatus\",\n    modelProperties: {\n      isCustomerInitiatedMaintenanceAllowed: {\n        serializedName: \"isCustomerInitiatedMaintenanceAllowed\",\n        type: {\n          name: \"Boolean\"\n        }\n      },\n      preMaintenanceWindowStartTime: {\n        serializedName: \"preMaintenanceWindowStartTime\",\n        type: {\n          name: \"DateTime\"\n        }\n      },\n      preMaintenanceWindowEndTime: {\n        serializedName: \"preMaintenanceWindowEndTime\",\n        type: {\n          name: \"DateTime\"\n        }\n      },\n      maintenanceWindowStartTime: {\n        serializedName: \"maintenanceWindowStartTime\",\n        type: {\n          name: \"DateTime\"\n        }\n      },\n      maintenanceWindowEndTime: {\n        serializedName: \"maintenanceWindowEndTime\",\n        type: {\n          name: \"DateTime\"\n        }\n      },\n      lastOperationResultCode: {\n        serializedName: \"lastOperationResultCode\",\n        type: {\n          name: \"Enum\",\n          allowedValues: [\n            \"None\",\n            \"RetryLater\",\n            \"MaintenanceAborted\",\n            \"MaintenanceCompleted\"\n          ]\n        }\n      },\n      lastOperationMessage: {\n        serializedName: \"lastOperationMessage\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const DiskInstanceView: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"DiskInstanceView\",\n    modelProperties: {\n      name: {\n        serializedName: \"name\",\n        type: {\n          name: \"String\"\n        }\n      },\n      encryptionSettings: {\n        serializedName: \"encryptionSettings\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"DiskEncryptionSettings\"\n            }\n          }\n        }\n      },\n      statuses: {\n        serializedName: \"statuses\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"InstanceViewStatus\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const VirtualMachineHealthStatus: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"VirtualMachineHealthStatus\",\n    modelProperties: {\n      status: {\n        serializedName: \"status\",\n        type: {\n          name: \"Composite\",\n          className: \"InstanceViewStatus\"\n        }\n      }\n    }\n  }\n};\n\nexport const BootDiagnosticsInstanceView: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"BootDiagnosticsInstanceView\",\n    modelProperties: {\n      consoleScreenshotBlobUri: {\n        serializedName: \"consoleScreenshotBlobUri\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      serialConsoleLogBlobUri: {\n        serializedName: \"serialConsoleLogBlobUri\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      status: {\n        serializedName: \"status\",\n        type: {\n          name: \"Composite\",\n          className: \"InstanceViewStatus\"\n        }\n      }\n    }\n  }\n};\n\nexport const VirtualMachinePatchStatus: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"VirtualMachinePatchStatus\",\n    modelProperties: {\n      availablePatchSummary: {\n        serializedName: \"availablePatchSummary\",\n        type: {\n          name: \"Composite\",\n          className: \"AvailablePatchSummary\"\n        }\n      },\n      lastPatchInstallationSummary: {\n        serializedName: \"lastPatchInstallationSummary\",\n        type: {\n          name: \"Composite\",\n          className: \"LastPatchInstallationSummary\"\n        }\n      },\n      configurationStatuses: {\n        serializedName: \"configurationStatuses\",\n        readOnly: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"InstanceViewStatus\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const AvailablePatchSummary: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"AvailablePatchSummary\",\n    modelProperties: {\n      status: {\n        serializedName: \"status\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      assessmentActivityId: {\n        serializedName: \"assessmentActivityId\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      rebootPending: {\n        serializedName: \"rebootPending\",\n        readOnly: true,\n        type: {\n          name: \"Boolean\"\n        }\n      },\n      criticalAndSecurityPatchCount: {\n        serializedName: \"criticalAndSecurityPatchCount\",\n        readOnly: true,\n        type: {\n          name: \"Number\"\n        }\n      },\n      otherPatchCount: {\n        serializedName: \"otherPatchCount\",\n        readOnly: true,\n        type: {\n          name: \"Number\"\n        }\n      },\n      startTime: {\n        serializedName: \"startTime\",\n        readOnly: true,\n        type: {\n          name: \"DateTime\"\n        }\n      },\n      lastModifiedTime: {\n        serializedName: \"lastModifiedTime\",\n        readOnly: true,\n        type: {\n          name: \"DateTime\"\n        }\n      },\n      error: {\n        serializedName: \"error\",\n        type: {\n          name: \"Composite\",\n          className: \"ApiError\"\n        }\n      }\n    }\n  }\n};\n\nexport const LastPatchInstallationSummary: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"LastPatchInstallationSummary\",\n    modelProperties: {\n      status: {\n        serializedName: \"status\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      installationActivityId: {\n        serializedName: \"installationActivityId\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      maintenanceWindowExceeded: {\n        serializedName: \"maintenanceWindowExceeded\",\n        readOnly: true,\n        type: {\n          name: \"Boolean\"\n        }\n      },\n      notSelectedPatchCount: {\n        serializedName: \"notSelectedPatchCount\",\n        readOnly: true,\n        type: {\n          name: \"Number\"\n        }\n      },\n      excludedPatchCount: {\n        serializedName: \"excludedPatchCount\",\n        readOnly: true,\n        type: {\n          name: \"Number\"\n        }\n      },\n      pendingPatchCount: {\n        serializedName: \"pendingPatchCount\",\n        readOnly: true,\n        type: {\n          name: \"Number\"\n        }\n      },\n      installedPatchCount: {\n        serializedName: \"installedPatchCount\",\n        readOnly: true,\n        type: {\n          name: \"Number\"\n        }\n      },\n      failedPatchCount: {\n        serializedName: \"failedPatchCount\",\n        readOnly: true,\n        type: {\n          name: \"Number\"\n        }\n      },\n      startTime: {\n        serializedName: \"startTime\",\n        readOnly: true,\n        type: {\n          name: \"DateTime\"\n        }\n      },\n      lastModifiedTime: {\n        serializedName: \"lastModifiedTime\",\n        readOnly: true,\n        type: {\n          name: \"DateTime\"\n        }\n      },\n      error: {\n        serializedName: \"error\",\n        type: {\n          name: \"Composite\",\n          className: \"ApiError\"\n        }\n      }\n    }\n  }\n};\n\nexport const ScheduledEventsProfile: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ScheduledEventsProfile\",\n    modelProperties: {\n      terminateNotificationProfile: {\n        serializedName: \"terminateNotificationProfile\",\n        type: {\n          name: \"Composite\",\n          className: \"TerminateNotificationProfile\"\n        }\n      }\n    }\n  }\n};\n\nexport const TerminateNotificationProfile: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"TerminateNotificationProfile\",\n    modelProperties: {\n      notBeforeTimeout: {\n        serializedName: \"notBeforeTimeout\",\n        type: {\n          name: \"String\"\n        }\n      },\n      enable: {\n        serializedName: \"enable\",\n        type: {\n          name: \"Boolean\"\n        }\n      }\n    }\n  }\n};\n\nexport const CapacityReservationProfile: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"CapacityReservationProfile\",\n    modelProperties: {\n      capacityReservationGroup: {\n        serializedName: \"capacityReservationGroup\",\n        type: {\n          name: \"Composite\",\n          className: \"SubResource\"\n        }\n      }\n    }\n  }\n};\n\nexport const ApplicationProfile: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ApplicationProfile\",\n    modelProperties: {\n      galleryApplications: {\n        serializedName: \"galleryApplications\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"VMGalleryApplication\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const VMGalleryApplication: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"VMGalleryApplication\",\n    modelProperties: {\n      tags: {\n        serializedName: \"tags\",\n        type: {\n          name: \"String\"\n        }\n      },\n      order: {\n        serializedName: \"order\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      packageReferenceId: {\n        serializedName: \"packageReferenceId\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      configurationReference: {\n        serializedName: \"configurationReference\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const VirtualMachineIdentity: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"VirtualMachineIdentity\",\n    modelProperties: {\n      principalId: {\n        serializedName: \"principalId\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      tenantId: {\n        serializedName: \"tenantId\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      type: {\n        serializedName: \"type\",\n        type: {\n          name: \"Enum\",\n          allowedValues: [\n            \"SystemAssigned\",\n            \"UserAssigned\",\n            \"SystemAssigned, UserAssigned\",\n            \"None\"\n          ]\n        }\n      },\n      userAssignedIdentities: {\n        serializedName: \"userAssignedIdentities\",\n        type: {\n          name: \"Dictionary\",\n          value: {\n            type: {\n              name: \"Composite\",\n              className: \"UserAssignedIdentitiesValue\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const UserAssignedIdentitiesValue: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"UserAssignedIdentitiesValue\",\n    modelProperties: {\n      principalId: {\n        serializedName: \"principalId\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      clientId: {\n        serializedName: \"clientId\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const VirtualMachineScaleSetListResult: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"VirtualMachineScaleSetListResult\",\n    modelProperties: {\n      value: {\n        serializedName: \"value\",\n        required: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"VirtualMachineScaleSet\"\n            }\n          }\n        }\n      },\n      nextLink: {\n        serializedName: \"nextLink\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const UpgradePolicy: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"UpgradePolicy\",\n    modelProperties: {\n      mode: {\n        serializedName: \"mode\",\n        type: {\n          name: \"Enum\",\n          allowedValues: [\"Automatic\", \"Manual\", \"Rolling\"]\n        }\n      },\n      rollingUpgradePolicy: {\n        serializedName: \"rollingUpgradePolicy\",\n        type: {\n          name: \"Composite\",\n          className: \"RollingUpgradePolicy\"\n        }\n      },\n      automaticOSUpgradePolicy: {\n        serializedName: \"automaticOSUpgradePolicy\",\n        type: {\n          name: \"Composite\",\n          className: \"AutomaticOSUpgradePolicy\"\n        }\n      }\n    }\n  }\n};\n\nexport const RollingUpgradePolicy: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"RollingUpgradePolicy\",\n    modelProperties: {\n      maxBatchInstancePercent: {\n        constraints: {\n          InclusiveMaximum: 100,\n          InclusiveMinimum: 5\n        },\n        serializedName: \"maxBatchInstancePercent\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      maxUnhealthyInstancePercent: {\n        constraints: {\n          InclusiveMaximum: 100,\n          InclusiveMinimum: 5\n        },\n        serializedName: \"maxUnhealthyInstancePercent\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      maxUnhealthyUpgradedInstancePercent: {\n        constraints: {\n          InclusiveMaximum: 100,\n          InclusiveMinimum: 0\n        },\n        serializedName: \"maxUnhealthyUpgradedInstancePercent\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      pauseTimeBetweenBatches: {\n        serializedName: \"pauseTimeBetweenBatches\",\n        type: {\n          name: \"String\"\n        }\n      },\n      enableCrossZoneUpgrade: {\n        serializedName: \"enableCrossZoneUpgrade\",\n        type: {\n          name: \"Boolean\"\n        }\n      },\n      prioritizeUnhealthyInstances: {\n        serializedName: \"prioritizeUnhealthyInstances\",\n        type: {\n          name: \"Boolean\"\n        }\n      }\n    }\n  }\n};\n\nexport const AutomaticOSUpgradePolicy: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"AutomaticOSUpgradePolicy\",\n    modelProperties: {\n      enableAutomaticOSUpgrade: {\n        serializedName: \"enableAutomaticOSUpgrade\",\n        type: {\n          name: \"Boolean\"\n        }\n      },\n      disableAutomaticRollback: {\n        serializedName: \"disableAutomaticRollback\",\n        type: {\n          name: \"Boolean\"\n        }\n      }\n    }\n  }\n};\n\nexport const AutomaticRepairsPolicy: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"AutomaticRepairsPolicy\",\n    modelProperties: {\n      enabled: {\n        serializedName: \"enabled\",\n        type: {\n          name: \"Boolean\"\n        }\n      },\n      gracePeriod: {\n        serializedName: \"gracePeriod\",\n        type: {\n          name: \"String\"\n        }\n      },\n      repairAction: {\n        serializedName: \"repairAction\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const VirtualMachineScaleSetVMProfile: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"VirtualMachineScaleSetVMProfile\",\n    modelProperties: {\n      osProfile: {\n        serializedName: \"osProfile\",\n        type: {\n          name: \"Composite\",\n          className: \"VirtualMachineScaleSetOSProfile\"\n        }\n      },\n      storageProfile: {\n        serializedName: \"storageProfile\",\n        type: {\n          name: \"Composite\",\n          className: \"VirtualMachineScaleSetStorageProfile\"\n        }\n      },\n      networkProfile: {\n        serializedName: \"networkProfile\",\n        type: {\n          name: \"Composite\",\n          className: \"VirtualMachineScaleSetNetworkProfile\"\n        }\n      },\n      securityProfile: {\n        serializedName: \"securityProfile\",\n        type: {\n          name: \"Composite\",\n          className: \"SecurityProfile\"\n        }\n      },\n      diagnosticsProfile: {\n        serializedName: \"diagnosticsProfile\",\n        type: {\n          name: \"Composite\",\n          className: \"DiagnosticsProfile\"\n        }\n      },\n      extensionProfile: {\n        serializedName: \"extensionProfile\",\n        type: {\n          name: \"Composite\",\n          className: \"VirtualMachineScaleSetExtensionProfile\"\n        }\n      },\n      licenseType: {\n        serializedName: \"licenseType\",\n        type: {\n          name: \"String\"\n        }\n      },\n      priority: {\n        serializedName: \"priority\",\n        type: {\n          name: \"String\"\n        }\n      },\n      evictionPolicy: {\n        serializedName: \"evictionPolicy\",\n        type: {\n          name: \"String\"\n        }\n      },\n      billingProfile: {\n        serializedName: \"billingProfile\",\n        type: {\n          name: \"Composite\",\n          className: \"BillingProfile\"\n        }\n      },\n      scheduledEventsProfile: {\n        serializedName: \"scheduledEventsProfile\",\n        type: {\n          name: \"Composite\",\n          className: \"ScheduledEventsProfile\"\n        }\n      },\n      userData: {\n        serializedName: \"userData\",\n        type: {\n          name: \"String\"\n        }\n      },\n      capacityReservation: {\n        serializedName: \"capacityReservation\",\n        type: {\n          name: \"Composite\",\n          className: \"CapacityReservationProfile\"\n        }\n      },\n      applicationProfile: {\n        serializedName: \"applicationProfile\",\n        type: {\n          name: \"Composite\",\n          className: \"ApplicationProfile\"\n        }\n      },\n      hardwareProfile: {\n        serializedName: \"hardwareProfile\",\n        type: {\n          name: \"Composite\",\n          className: \"VirtualMachineScaleSetHardwareProfile\"\n        }\n      }\n    }\n  }\n};\n\nexport const VirtualMachineScaleSetOSProfile: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"VirtualMachineScaleSetOSProfile\",\n    modelProperties: {\n      computerNamePrefix: {\n        serializedName: \"computerNamePrefix\",\n        type: {\n          name: \"String\"\n        }\n      },\n      adminUsername: {\n        serializedName: \"adminUsername\",\n        type: {\n          name: \"String\"\n        }\n      },\n      adminPassword: {\n        serializedName: \"adminPassword\",\n        type: {\n          name: \"String\"\n        }\n      },\n      customData: {\n        serializedName: \"customData\",\n        type: {\n          name: \"String\"\n        }\n      },\n      windowsConfiguration: {\n        serializedName: \"windowsConfiguration\",\n        type: {\n          name: \"Composite\",\n          className: \"WindowsConfiguration\"\n        }\n      },\n      linuxConfiguration: {\n        serializedName: \"linuxConfiguration\",\n        type: {\n          name: \"Composite\",\n          className: \"LinuxConfiguration\"\n        }\n      },\n      secrets: {\n        serializedName: \"secrets\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"VaultSecretGroup\"\n            }\n          }\n        }\n      },\n      allowExtensionOperations: {\n        serializedName: \"allowExtensionOperations\",\n        type: {\n          name: \"Boolean\"\n        }\n      }\n    }\n  }\n};\n\nexport const VirtualMachineScaleSetStorageProfile: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"VirtualMachineScaleSetStorageProfile\",\n    modelProperties: {\n      imageReference: {\n        serializedName: \"imageReference\",\n        type: {\n          name: \"Composite\",\n          className: \"ImageReference\"\n        }\n      },\n      osDisk: {\n        serializedName: \"osDisk\",\n        type: {\n          name: \"Composite\",\n          className: \"VirtualMachineScaleSetOSDisk\"\n        }\n      },\n      dataDisks: {\n        serializedName: \"dataDisks\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"VirtualMachineScaleSetDataDisk\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const VirtualMachineScaleSetOSDisk: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"VirtualMachineScaleSetOSDisk\",\n    modelProperties: {\n      name: {\n        serializedName: \"name\",\n        type: {\n          name: \"String\"\n        }\n      },\n      caching: {\n        serializedName: \"caching\",\n        type: {\n          name: \"Enum\",\n          allowedValues: [\"None\", \"ReadOnly\", \"ReadWrite\"]\n        }\n      },\n      writeAcceleratorEnabled: {\n        serializedName: \"writeAcceleratorEnabled\",\n        type: {\n          name: \"Boolean\"\n        }\n      },\n      createOption: {\n        serializedName: \"createOption\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      diffDiskSettings: {\n        serializedName: \"diffDiskSettings\",\n        type: {\n          name: \"Composite\",\n          className: \"DiffDiskSettings\"\n        }\n      },\n      diskSizeGB: {\n        serializedName: \"diskSizeGB\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      osType: {\n        serializedName: \"osType\",\n        type: {\n          name: \"Enum\",\n          allowedValues: [\"Windows\", \"Linux\"]\n        }\n      },\n      image: {\n        serializedName: \"image\",\n        type: {\n          name: \"Composite\",\n          className: \"VirtualHardDisk\"\n        }\n      },\n      vhdContainers: {\n        serializedName: \"vhdContainers\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"String\"\n            }\n          }\n        }\n      },\n      managedDisk: {\n        serializedName: \"managedDisk\",\n        type: {\n          name: \"Composite\",\n          className: \"VirtualMachineScaleSetManagedDiskParameters\"\n        }\n      }\n    }\n  }\n};\n\nexport const VirtualMachineScaleSetManagedDiskParameters: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"VirtualMachineScaleSetManagedDiskParameters\",\n    modelProperties: {\n      storageAccountType: {\n        serializedName: \"storageAccountType\",\n        type: {\n          name: \"String\"\n        }\n      },\n      diskEncryptionSet: {\n        serializedName: \"diskEncryptionSet\",\n        type: {\n          name: \"Composite\",\n          className: \"DiskEncryptionSetParameters\"\n        }\n      },\n      securityProfile: {\n        serializedName: \"securityProfile\",\n        type: {\n          name: \"Composite\",\n          className: \"VMDiskSecurityProfile\"\n        }\n      }\n    }\n  }\n};\n\nexport const VirtualMachineScaleSetDataDisk: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"VirtualMachineScaleSetDataDisk\",\n    modelProperties: {\n      name: {\n        serializedName: \"name\",\n        type: {\n          name: \"String\"\n        }\n      },\n      lun: {\n        serializedName: \"lun\",\n        required: true,\n        type: {\n          name: \"Number\"\n        }\n      },\n      caching: {\n        serializedName: \"caching\",\n        type: {\n          name: \"Enum\",\n          allowedValues: [\"None\", \"ReadOnly\", \"ReadWrite\"]\n        }\n      },\n      writeAcceleratorEnabled: {\n        serializedName: \"writeAcceleratorEnabled\",\n        type: {\n          name: \"Boolean\"\n        }\n      },\n      createOption: {\n        serializedName: \"createOption\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      diskSizeGB: {\n        serializedName: \"diskSizeGB\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      managedDisk: {\n        serializedName: \"managedDisk\",\n        type: {\n          name: \"Composite\",\n          className: \"VirtualMachineScaleSetManagedDiskParameters\"\n        }\n      },\n      diskIopsReadWrite: {\n        serializedName: \"diskIOPSReadWrite\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      diskMBpsReadWrite: {\n        serializedName: \"diskMBpsReadWrite\",\n        type: {\n          name: \"Number\"\n        }\n      }\n    }\n  }\n};\n\nexport const VirtualMachineScaleSetNetworkProfile: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"VirtualMachineScaleSetNetworkProfile\",\n    modelProperties: {\n      healthProbe: {\n        serializedName: \"healthProbe\",\n        type: {\n          name: \"Composite\",\n          className: \"ApiEntityReference\"\n        }\n      },\n      networkInterfaceConfigurations: {\n        serializedName: \"networkInterfaceConfigurations\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"VirtualMachineScaleSetNetworkConfiguration\"\n            }\n          }\n        }\n      },\n      networkApiVersion: {\n        serializedName: \"networkApiVersion\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const ApiEntityReference: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ApiEntityReference\",\n    modelProperties: {\n      id: {\n        serializedName: \"id\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const VirtualMachineScaleSetNetworkConfigurationDnsSettings: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"VirtualMachineScaleSetNetworkConfigurationDnsSettings\",\n    modelProperties: {\n      dnsServers: {\n        serializedName: \"dnsServers\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"String\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const VirtualMachineScaleSetPublicIPAddressConfiguration: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"VirtualMachineScaleSetPublicIPAddressConfiguration\",\n    modelProperties: {\n      name: {\n        serializedName: \"name\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      sku: {\n        serializedName: \"sku\",\n        type: {\n          name: \"Composite\",\n          className: \"PublicIPAddressSku\"\n        }\n      },\n      idleTimeoutInMinutes: {\n        serializedName: \"properties.idleTimeoutInMinutes\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      dnsSettings: {\n        serializedName: \"properties.dnsSettings\",\n        type: {\n          name: \"Composite\",\n          className:\n            \"VirtualMachineScaleSetPublicIPAddressConfigurationDnsSettings\"\n        }\n      },\n      ipTags: {\n        serializedName: \"properties.ipTags\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"VirtualMachineScaleSetIpTag\"\n            }\n          }\n        }\n      },\n      publicIPPrefix: {\n        serializedName: \"properties.publicIPPrefix\",\n        type: {\n          name: \"Composite\",\n          className: \"SubResource\"\n        }\n      },\n      publicIPAddressVersion: {\n        serializedName: \"properties.publicIPAddressVersion\",\n        type: {\n          name: \"String\"\n        }\n      },\n      deleteOption: {\n        serializedName: \"properties.deleteOption\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const VirtualMachineScaleSetPublicIPAddressConfigurationDnsSettings: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"VirtualMachineScaleSetPublicIPAddressConfigurationDnsSettings\",\n    modelProperties: {\n      domainNameLabel: {\n        serializedName: \"domainNameLabel\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const VirtualMachineScaleSetIpTag: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"VirtualMachineScaleSetIpTag\",\n    modelProperties: {\n      ipTagType: {\n        serializedName: \"ipTagType\",\n        type: {\n          name: \"String\"\n        }\n      },\n      tag: {\n        serializedName: \"tag\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const VirtualMachineScaleSetExtensionProfile: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"VirtualMachineScaleSetExtensionProfile\",\n    modelProperties: {\n      extensions: {\n        serializedName: \"extensions\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"VirtualMachineScaleSetExtension\"\n            }\n          }\n        }\n      },\n      extensionsTimeBudget: {\n        serializedName: \"extensionsTimeBudget\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const VirtualMachineScaleSetHardwareProfile: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"VirtualMachineScaleSetHardwareProfile\",\n    modelProperties: {\n      vmSizeProperties: {\n        serializedName: \"vmSizeProperties\",\n        type: {\n          name: \"Composite\",\n          className: \"VMSizeProperties\"\n        }\n      }\n    }\n  }\n};\n\nexport const ScaleInPolicy: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ScaleInPolicy\",\n    modelProperties: {\n      rules: {\n        serializedName: \"rules\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"String\"\n            }\n          }\n        }\n      },\n      forceDeletion: {\n        serializedName: \"forceDeletion\",\n        type: {\n          name: \"Boolean\"\n        }\n      }\n    }\n  }\n};\n\nexport const SpotRestorePolicy: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"SpotRestorePolicy\",\n    modelProperties: {\n      enabled: {\n        serializedName: \"enabled\",\n        type: {\n          name: \"Boolean\"\n        }\n      },\n      restoreTimeout: {\n        serializedName: \"restoreTimeout\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const VirtualMachineScaleSetIdentity: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"VirtualMachineScaleSetIdentity\",\n    modelProperties: {\n      principalId: {\n        serializedName: \"principalId\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      tenantId: {\n        serializedName: \"tenantId\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      type: {\n        serializedName: \"type\",\n        type: {\n          name: \"Enum\",\n          allowedValues: [\n            \"SystemAssigned\",\n            \"UserAssigned\",\n            \"SystemAssigned, UserAssigned\",\n            \"None\"\n          ]\n        }\n      },\n      userAssignedIdentities: {\n        serializedName: \"userAssignedIdentities\",\n        type: {\n          name: \"Dictionary\",\n          value: {\n            type: {\n              name: \"Composite\",\n              className:\n                \"VirtualMachineScaleSetIdentityUserAssignedIdentitiesValue\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const VirtualMachineScaleSetIdentityUserAssignedIdentitiesValue: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"VirtualMachineScaleSetIdentityUserAssignedIdentitiesValue\",\n    modelProperties: {\n      principalId: {\n        serializedName: \"principalId\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      clientId: {\n        serializedName: \"clientId\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const ImageStorageProfile: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ImageStorageProfile\",\n    modelProperties: {\n      osDisk: {\n        serializedName: \"osDisk\",\n        type: {\n          name: \"Composite\",\n          className: \"ImageOSDisk\"\n        }\n      },\n      dataDisks: {\n        serializedName: \"dataDisks\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"ImageDataDisk\"\n            }\n          }\n        }\n      },\n      zoneResilient: {\n        serializedName: \"zoneResilient\",\n        type: {\n          name: \"Boolean\"\n        }\n      }\n    }\n  }\n};\n\nexport const ImageDisk: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ImageDisk\",\n    modelProperties: {\n      snapshot: {\n        serializedName: \"snapshot\",\n        type: {\n          name: \"Composite\",\n          className: \"SubResource\"\n        }\n      },\n      managedDisk: {\n        serializedName: \"managedDisk\",\n        type: {\n          name: \"Composite\",\n          className: \"SubResource\"\n        }\n      },\n      blobUri: {\n        serializedName: \"blobUri\",\n        type: {\n          name: \"String\"\n        }\n      },\n      caching: {\n        serializedName: \"caching\",\n        type: {\n          name: \"Enum\",\n          allowedValues: [\"None\", \"ReadOnly\", \"ReadWrite\"]\n        }\n      },\n      diskSizeGB: {\n        serializedName: \"diskSizeGB\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      storageAccountType: {\n        serializedName: \"storageAccountType\",\n        type: {\n          name: \"String\"\n        }\n      },\n      diskEncryptionSet: {\n        serializedName: \"diskEncryptionSet\",\n        type: {\n          name: \"Composite\",\n          className: \"DiskEncryptionSetParameters\"\n        }\n      }\n    }\n  }\n};\n\nexport const ImageListResult: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ImageListResult\",\n    modelProperties: {\n      value: {\n        serializedName: \"value\",\n        required: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"Image\"\n            }\n          }\n        }\n      },\n      nextLink: {\n        serializedName: \"nextLink\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const VirtualMachineCaptureParameters: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"VirtualMachineCaptureParameters\",\n    modelProperties: {\n      vhdPrefix: {\n        serializedName: \"vhdPrefix\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      destinationContainerName: {\n        serializedName: \"destinationContainerName\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      overwriteVhds: {\n        serializedName: \"overwriteVhds\",\n        required: true,\n        type: {\n          name: \"Boolean\"\n        }\n      }\n    }\n  }\n};\n\nexport const RestorePointCollectionSourceProperties: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"RestorePointCollectionSourceProperties\",\n    modelProperties: {\n      location: {\n        serializedName: \"location\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      id: {\n        serializedName: \"id\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const RestorePointSourceMetadata: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"RestorePointSourceMetadata\",\n    modelProperties: {\n      hardwareProfile: {\n        serializedName: \"hardwareProfile\",\n        type: {\n          name: \"Composite\",\n          className: \"HardwareProfile\"\n        }\n      },\n      storageProfile: {\n        serializedName: \"storageProfile\",\n        type: {\n          name: \"Composite\",\n          className: \"RestorePointSourceVMStorageProfile\"\n        }\n      },\n      osProfile: {\n        serializedName: \"osProfile\",\n        type: {\n          name: \"Composite\",\n          className: \"OSProfile\"\n        }\n      },\n      diagnosticsProfile: {\n        serializedName: \"diagnosticsProfile\",\n        type: {\n          name: \"Composite\",\n          className: \"DiagnosticsProfile\"\n        }\n      },\n      licenseType: {\n        serializedName: \"licenseType\",\n        type: {\n          name: \"String\"\n        }\n      },\n      vmId: {\n        serializedName: \"vmId\",\n        type: {\n          name: \"String\"\n        }\n      },\n      securityProfile: {\n        serializedName: \"securityProfile\",\n        type: {\n          name: \"Composite\",\n          className: \"SecurityProfile\"\n        }\n      },\n      location: {\n        serializedName: \"location\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const RestorePointSourceVMStorageProfile: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"RestorePointSourceVMStorageProfile\",\n    modelProperties: {\n      osDisk: {\n        serializedName: \"osDisk\",\n        type: {\n          name: \"Composite\",\n          className: \"RestorePointSourceVmosDisk\"\n        }\n      },\n      dataDisks: {\n        serializedName: \"dataDisks\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"RestorePointSourceVMDataDisk\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const RestorePointSourceVmosDisk: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"RestorePointSourceVmosDisk\",\n    modelProperties: {\n      osType: {\n        serializedName: \"osType\",\n        type: {\n          name: \"String\"\n        }\n      },\n      encryptionSettings: {\n        serializedName: \"encryptionSettings\",\n        type: {\n          name: \"Composite\",\n          className: \"DiskEncryptionSettings\"\n        }\n      },\n      name: {\n        serializedName: \"name\",\n        type: {\n          name: \"String\"\n        }\n      },\n      caching: {\n        serializedName: \"caching\",\n        type: {\n          name: \"Enum\",\n          allowedValues: [\"None\", \"ReadOnly\", \"ReadWrite\"]\n        }\n      },\n      diskSizeGB: {\n        serializedName: \"diskSizeGB\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      managedDisk: {\n        serializedName: \"managedDisk\",\n        type: {\n          name: \"Composite\",\n          className: \"ManagedDiskParameters\"\n        }\n      },\n      diskRestorePoint: {\n        serializedName: \"diskRestorePoint\",\n        type: {\n          name: \"Composite\",\n          className: \"ApiEntityReference\"\n        }\n      }\n    }\n  }\n};\n\nexport const RestorePointSourceVMDataDisk: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"RestorePointSourceVMDataDisk\",\n    modelProperties: {\n      lun: {\n        serializedName: \"lun\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      name: {\n        serializedName: \"name\",\n        type: {\n          name: \"String\"\n        }\n      },\n      caching: {\n        serializedName: \"caching\",\n        type: {\n          name: \"Enum\",\n          allowedValues: [\"None\", \"ReadOnly\", \"ReadWrite\"]\n        }\n      },\n      diskSizeGB: {\n        serializedName: \"diskSizeGB\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      managedDisk: {\n        serializedName: \"managedDisk\",\n        type: {\n          name: \"Composite\",\n          className: \"ManagedDiskParameters\"\n        }\n      },\n      diskRestorePoint: {\n        serializedName: \"diskRestorePoint\",\n        type: {\n          name: \"Composite\",\n          className: \"ApiEntityReference\"\n        }\n      }\n    }\n  }\n};\n\nexport const RestorePointInstanceView: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"RestorePointInstanceView\",\n    modelProperties: {\n      diskRestorePoints: {\n        serializedName: \"diskRestorePoints\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"DiskRestorePointInstanceView\"\n            }\n          }\n        }\n      },\n      statuses: {\n        serializedName: \"statuses\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"InstanceViewStatus\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const DiskRestorePointInstanceView: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"DiskRestorePointInstanceView\",\n    modelProperties: {\n      id: {\n        serializedName: \"id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      replicationStatus: {\n        serializedName: \"replicationStatus\",\n        type: {\n          name: \"Dictionary\",\n          value: { type: { name: \"any\" } }\n        }\n      }\n    }\n  }\n};\n\nexport const ProxyResource: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ProxyResource\",\n    modelProperties: {\n      id: {\n        serializedName: \"id\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      name: {\n        serializedName: \"name\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      type: {\n        serializedName: \"type\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const RestorePointCollectionListResult: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"RestorePointCollectionListResult\",\n    modelProperties: {\n      value: {\n        serializedName: \"value\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"RestorePointCollection\"\n            }\n          }\n        }\n      },\n      nextLink: {\n        serializedName: \"nextLink\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const CapacityReservationGroupInstanceView: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"CapacityReservationGroupInstanceView\",\n    modelProperties: {\n      capacityReservations: {\n        serializedName: \"capacityReservations\",\n        readOnly: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"CapacityReservationInstanceViewWithName\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const CapacityReservationInstanceView: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"CapacityReservationInstanceView\",\n    modelProperties: {\n      utilizationInfo: {\n        serializedName: \"utilizationInfo\",\n        type: {\n          name: \"Composite\",\n          className: \"CapacityReservationUtilization\"\n        }\n      },\n      statuses: {\n        serializedName: \"statuses\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"InstanceViewStatus\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const CapacityReservationUtilization: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"CapacityReservationUtilization\",\n    modelProperties: {\n      virtualMachinesAllocated: {\n        serializedName: \"virtualMachinesAllocated\",\n        readOnly: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"SubResourceReadOnly\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const CapacityReservationGroupListResult: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"CapacityReservationGroupListResult\",\n    modelProperties: {\n      value: {\n        serializedName: \"value\",\n        required: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"CapacityReservationGroup\"\n            }\n          }\n        }\n      },\n      nextLink: {\n        serializedName: \"nextLink\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const CapacityReservationListResult: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"CapacityReservationListResult\",\n    modelProperties: {\n      value: {\n        serializedName: \"value\",\n        required: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"CapacityReservation\"\n            }\n          }\n        }\n      },\n      nextLink: {\n        serializedName: \"nextLink\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const VirtualMachineReimageParameters: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"VirtualMachineReimageParameters\",\n    modelProperties: {\n      tempDisk: {\n        serializedName: \"tempDisk\",\n        type: {\n          name: \"Boolean\"\n        }\n      }\n    }\n  }\n};\n\nexport const RetrieveBootDiagnosticsDataResult: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"RetrieveBootDiagnosticsDataResult\",\n    modelProperties: {\n      consoleScreenshotBlobUri: {\n        serializedName: \"consoleScreenshotBlobUri\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      serialConsoleLogBlobUri: {\n        serializedName: \"serialConsoleLogBlobUri\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const VirtualMachineAssessPatchesResult: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"VirtualMachineAssessPatchesResult\",\n    modelProperties: {\n      status: {\n        serializedName: \"status\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      assessmentActivityId: {\n        serializedName: \"assessmentActivityId\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      rebootPending: {\n        serializedName: \"rebootPending\",\n        readOnly: true,\n        type: {\n          name: \"Boolean\"\n        }\n      },\n      criticalAndSecurityPatchCount: {\n        serializedName: \"criticalAndSecurityPatchCount\",\n        readOnly: true,\n        type: {\n          name: \"Number\"\n        }\n      },\n      otherPatchCount: {\n        serializedName: \"otherPatchCount\",\n        readOnly: true,\n        type: {\n          name: \"Number\"\n        }\n      },\n      startDateTime: {\n        serializedName: \"startDateTime\",\n        readOnly: true,\n        type: {\n          name: \"DateTime\"\n        }\n      },\n      availablePatches: {\n        serializedName: \"availablePatches\",\n        readOnly: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"VirtualMachineSoftwarePatchProperties\"\n            }\n          }\n        }\n      },\n      error: {\n        serializedName: \"error\",\n        type: {\n          name: \"Composite\",\n          className: \"ApiError\"\n        }\n      }\n    }\n  }\n};\n\nexport const VirtualMachineSoftwarePatchProperties: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"VirtualMachineSoftwarePatchProperties\",\n    modelProperties: {\n      patchId: {\n        serializedName: \"patchId\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      name: {\n        serializedName: \"name\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      version: {\n        serializedName: \"version\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      kbId: {\n        serializedName: \"kbId\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      classifications: {\n        serializedName: \"classifications\",\n        readOnly: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"String\"\n            }\n          }\n        }\n      },\n      rebootBehavior: {\n        serializedName: \"rebootBehavior\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      activityId: {\n        serializedName: \"activityId\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      publishedDate: {\n        serializedName: \"publishedDate\",\n        readOnly: true,\n        type: {\n          name: \"DateTime\"\n        }\n      },\n      lastModifiedDateTime: {\n        serializedName: \"lastModifiedDateTime\",\n        readOnly: true,\n        type: {\n          name: \"DateTime\"\n        }\n      },\n      assessmentState: {\n        serializedName: \"assessmentState\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const VirtualMachineInstallPatchesParameters: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"VirtualMachineInstallPatchesParameters\",\n    modelProperties: {\n      maximumDuration: {\n        serializedName: \"maximumDuration\",\n        type: {\n          name: \"String\"\n        }\n      },\n      rebootSetting: {\n        serializedName: \"rebootSetting\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      windowsParameters: {\n        serializedName: \"windowsParameters\",\n        type: {\n          name: \"Composite\",\n          className: \"WindowsParameters\"\n        }\n      },\n      linuxParameters: {\n        serializedName: \"linuxParameters\",\n        type: {\n          name: \"Composite\",\n          className: \"LinuxParameters\"\n        }\n      }\n    }\n  }\n};\n\nexport const WindowsParameters: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"WindowsParameters\",\n    modelProperties: {\n      classificationsToInclude: {\n        serializedName: \"classificationsToInclude\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"String\"\n            }\n          }\n        }\n      },\n      kbNumbersToInclude: {\n        serializedName: \"kbNumbersToInclude\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"String\"\n            }\n          }\n        }\n      },\n      kbNumbersToExclude: {\n        serializedName: \"kbNumbersToExclude\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"String\"\n            }\n          }\n        }\n      },\n      excludeKbsRequiringReboot: {\n        serializedName: \"excludeKbsRequiringReboot\",\n        type: {\n          name: \"Boolean\"\n        }\n      },\n      maxPatchPublishDate: {\n        serializedName: \"maxPatchPublishDate\",\n        type: {\n          name: \"DateTime\"\n        }\n      }\n    }\n  }\n};\n\nexport const LinuxParameters: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"LinuxParameters\",\n    modelProperties: {\n      classificationsToInclude: {\n        serializedName: \"classificationsToInclude\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"String\"\n            }\n          }\n        }\n      },\n      packageNameMasksToInclude: {\n        serializedName: \"packageNameMasksToInclude\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"String\"\n            }\n          }\n        }\n      },\n      packageNameMasksToExclude: {\n        serializedName: \"packageNameMasksToExclude\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"String\"\n            }\n          }\n        }\n      },\n      maintenanceRunId: {\n        serializedName: \"maintenanceRunId\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const VirtualMachineInstallPatchesResult: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"VirtualMachineInstallPatchesResult\",\n    modelProperties: {\n      status: {\n        serializedName: \"status\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      installationActivityId: {\n        serializedName: \"installationActivityId\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      rebootStatus: {\n        serializedName: \"rebootStatus\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      maintenanceWindowExceeded: {\n        serializedName: \"maintenanceWindowExceeded\",\n        readOnly: true,\n        type: {\n          name: \"Boolean\"\n        }\n      },\n      excludedPatchCount: {\n        serializedName: \"excludedPatchCount\",\n        readOnly: true,\n        type: {\n          name: \"Number\"\n        }\n      },\n      notSelectedPatchCount: {\n        serializedName: \"notSelectedPatchCount\",\n        readOnly: true,\n        type: {\n          name: \"Number\"\n        }\n      },\n      pendingPatchCount: {\n        serializedName: \"pendingPatchCount\",\n        readOnly: true,\n        type: {\n          name: \"Number\"\n        }\n      },\n      installedPatchCount: {\n        serializedName: \"installedPatchCount\",\n        readOnly: true,\n        type: {\n          name: \"Number\"\n        }\n      },\n      failedPatchCount: {\n        serializedName: \"failedPatchCount\",\n        readOnly: true,\n        type: {\n          name: \"Number\"\n        }\n      },\n      patches: {\n        serializedName: \"patches\",\n        readOnly: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"PatchInstallationDetail\"\n            }\n          }\n        }\n      },\n      startDateTime: {\n        serializedName: \"startDateTime\",\n        readOnly: true,\n        type: {\n          name: \"DateTime\"\n        }\n      },\n      error: {\n        serializedName: \"error\",\n        type: {\n          name: \"Composite\",\n          className: \"ApiError\"\n        }\n      }\n    }\n  }\n};\n\nexport const PatchInstallationDetail: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"PatchInstallationDetail\",\n    modelProperties: {\n      patchId: {\n        serializedName: \"patchId\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      name: {\n        serializedName: \"name\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      version: {\n        serializedName: \"version\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      kbId: {\n        serializedName: \"kbId\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      classifications: {\n        serializedName: \"classifications\",\n        readOnly: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"String\"\n            }\n          }\n        }\n      },\n      installationState: {\n        serializedName: \"installationState\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const VirtualMachineScaleSetUpdateVMProfile: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"VirtualMachineScaleSetUpdateVMProfile\",\n    modelProperties: {\n      osProfile: {\n        serializedName: \"osProfile\",\n        type: {\n          name: \"Composite\",\n          className: \"VirtualMachineScaleSetUpdateOSProfile\"\n        }\n      },\n      storageProfile: {\n        serializedName: \"storageProfile\",\n        type: {\n          name: \"Composite\",\n          className: \"VirtualMachineScaleSetUpdateStorageProfile\"\n        }\n      },\n      networkProfile: {\n        serializedName: \"networkProfile\",\n        type: {\n          name: \"Composite\",\n          className: \"VirtualMachineScaleSetUpdateNetworkProfile\"\n        }\n      },\n      securityProfile: {\n        serializedName: \"securityProfile\",\n        type: {\n          name: \"Composite\",\n          className: \"SecurityProfile\"\n        }\n      },\n      diagnosticsProfile: {\n        serializedName: \"diagnosticsProfile\",\n        type: {\n          name: \"Composite\",\n          className: \"DiagnosticsProfile\"\n        }\n      },\n      extensionProfile: {\n        serializedName: \"extensionProfile\",\n        type: {\n          name: \"Composite\",\n          className: \"VirtualMachineScaleSetExtensionProfile\"\n        }\n      },\n      licenseType: {\n        serializedName: \"licenseType\",\n        type: {\n          name: \"String\"\n        }\n      },\n      billingProfile: {\n        serializedName: \"billingProfile\",\n        type: {\n          name: \"Composite\",\n          className: \"BillingProfile\"\n        }\n      },\n      scheduledEventsProfile: {\n        serializedName: \"scheduledEventsProfile\",\n        type: {\n          name: \"Composite\",\n          className: \"ScheduledEventsProfile\"\n        }\n      },\n      userData: {\n        serializedName: \"userData\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const VirtualMachineScaleSetUpdateOSProfile: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"VirtualMachineScaleSetUpdateOSProfile\",\n    modelProperties: {\n      customData: {\n        serializedName: \"customData\",\n        type: {\n          name: \"String\"\n        }\n      },\n      windowsConfiguration: {\n        serializedName: \"windowsConfiguration\",\n        type: {\n          name: \"Composite\",\n          className: \"WindowsConfiguration\"\n        }\n      },\n      linuxConfiguration: {\n        serializedName: \"linuxConfiguration\",\n        type: {\n          name: \"Composite\",\n          className: \"LinuxConfiguration\"\n        }\n      },\n      secrets: {\n        serializedName: \"secrets\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"VaultSecretGroup\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const VirtualMachineScaleSetUpdateStorageProfile: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"VirtualMachineScaleSetUpdateStorageProfile\",\n    modelProperties: {\n      imageReference: {\n        serializedName: \"imageReference\",\n        type: {\n          name: \"Composite\",\n          className: \"ImageReference\"\n        }\n      },\n      osDisk: {\n        serializedName: \"osDisk\",\n        type: {\n          name: \"Composite\",\n          className: \"VirtualMachineScaleSetUpdateOSDisk\"\n        }\n      },\n      dataDisks: {\n        serializedName: \"dataDisks\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"VirtualMachineScaleSetDataDisk\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const VirtualMachineScaleSetUpdateOSDisk: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"VirtualMachineScaleSetUpdateOSDisk\",\n    modelProperties: {\n      caching: {\n        serializedName: \"caching\",\n        type: {\n          name: \"Enum\",\n          allowedValues: [\"None\", \"ReadOnly\", \"ReadWrite\"]\n        }\n      },\n      writeAcceleratorEnabled: {\n        serializedName: \"writeAcceleratorEnabled\",\n        type: {\n          name: \"Boolean\"\n        }\n      },\n      diskSizeGB: {\n        serializedName: \"diskSizeGB\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      image: {\n        serializedName: \"image\",\n        type: {\n          name: \"Composite\",\n          className: \"VirtualHardDisk\"\n        }\n      },\n      vhdContainers: {\n        serializedName: \"vhdContainers\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"String\"\n            }\n          }\n        }\n      },\n      managedDisk: {\n        serializedName: \"managedDisk\",\n        type: {\n          name: \"Composite\",\n          className: \"VirtualMachineScaleSetManagedDiskParameters\"\n        }\n      }\n    }\n  }\n};\n\nexport const VirtualMachineScaleSetUpdateNetworkProfile: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"VirtualMachineScaleSetUpdateNetworkProfile\",\n    modelProperties: {\n      healthProbe: {\n        serializedName: \"healthProbe\",\n        type: {\n          name: \"Composite\",\n          className: \"ApiEntityReference\"\n        }\n      },\n      networkInterfaceConfigurations: {\n        serializedName: \"networkInterfaceConfigurations\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"VirtualMachineScaleSetUpdateNetworkConfiguration\"\n            }\n          }\n        }\n      },\n      networkApiVersion: {\n        serializedName: \"networkApiVersion\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const VirtualMachineScaleSetUpdatePublicIPAddressConfiguration: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"VirtualMachineScaleSetUpdatePublicIPAddressConfiguration\",\n    modelProperties: {\n      name: {\n        serializedName: \"name\",\n        type: {\n          name: \"String\"\n        }\n      },\n      idleTimeoutInMinutes: {\n        serializedName: \"properties.idleTimeoutInMinutes\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      dnsSettings: {\n        serializedName: \"properties.dnsSettings\",\n        type: {\n          name: \"Composite\",\n          className:\n            \"VirtualMachineScaleSetPublicIPAddressConfigurationDnsSettings\"\n        }\n      },\n      publicIPPrefix: {\n        serializedName: \"properties.publicIPPrefix\",\n        type: {\n          name: \"Composite\",\n          className: \"SubResource\"\n        }\n      },\n      deleteOption: {\n        serializedName: \"properties.deleteOption\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const VirtualMachineScaleSetVMInstanceIDs: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"VirtualMachineScaleSetVMInstanceIDs\",\n    modelProperties: {\n      instanceIds: {\n        serializedName: \"instanceIds\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"String\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const VirtualMachineScaleSetVMInstanceRequiredIDs: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"VirtualMachineScaleSetVMInstanceRequiredIDs\",\n    modelProperties: {\n      instanceIds: {\n        serializedName: \"instanceIds\",\n        required: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"String\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const VirtualMachineScaleSetInstanceView: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"VirtualMachineScaleSetInstanceView\",\n    modelProperties: {\n      virtualMachine: {\n        serializedName: \"virtualMachine\",\n        type: {\n          name: \"Composite\",\n          className: \"VirtualMachineScaleSetInstanceViewStatusesSummary\"\n        }\n      },\n      extensions: {\n        serializedName: \"extensions\",\n        readOnly: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"VirtualMachineScaleSetVMExtensionsSummary\"\n            }\n          }\n        }\n      },\n      statuses: {\n        serializedName: \"statuses\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"InstanceViewStatus\"\n            }\n          }\n        }\n      },\n      orchestrationServices: {\n        serializedName: \"orchestrationServices\",\n        readOnly: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"OrchestrationServiceSummary\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const VirtualMachineScaleSetInstanceViewStatusesSummary: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"VirtualMachineScaleSetInstanceViewStatusesSummary\",\n    modelProperties: {\n      statusesSummary: {\n        serializedName: \"statusesSummary\",\n        readOnly: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"VirtualMachineStatusCodeCount\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const VirtualMachineStatusCodeCount: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"VirtualMachineStatusCodeCount\",\n    modelProperties: {\n      code: {\n        serializedName: \"code\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      count: {\n        serializedName: \"count\",\n        readOnly: true,\n        type: {\n          name: \"Number\"\n        }\n      }\n    }\n  }\n};\n\nexport const VirtualMachineScaleSetVMExtensionsSummary: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"VirtualMachineScaleSetVMExtensionsSummary\",\n    modelProperties: {\n      name: {\n        serializedName: \"name\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      statusesSummary: {\n        serializedName: \"statusesSummary\",\n        readOnly: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"VirtualMachineStatusCodeCount\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const OrchestrationServiceSummary: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"OrchestrationServiceSummary\",\n    modelProperties: {\n      serviceName: {\n        serializedName: \"serviceName\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      serviceState: {\n        serializedName: \"serviceState\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const VirtualMachineScaleSetExtensionListResult: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"VirtualMachineScaleSetExtensionListResult\",\n    modelProperties: {\n      value: {\n        serializedName: \"value\",\n        required: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"VirtualMachineScaleSetExtension\"\n            }\n          }\n        }\n      },\n      nextLink: {\n        serializedName: \"nextLink\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const VirtualMachineScaleSetListWithLinkResult: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"VirtualMachineScaleSetListWithLinkResult\",\n    modelProperties: {\n      value: {\n        serializedName: \"value\",\n        required: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"VirtualMachineScaleSet\"\n            }\n          }\n        }\n      },\n      nextLink: {\n        serializedName: \"nextLink\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const VirtualMachineScaleSetListSkusResult: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"VirtualMachineScaleSetListSkusResult\",\n    modelProperties: {\n      value: {\n        serializedName: \"value\",\n        required: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"VirtualMachineScaleSetSku\"\n            }\n          }\n        }\n      },\n      nextLink: {\n        serializedName: \"nextLink\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const VirtualMachineScaleSetSku: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"VirtualMachineScaleSetSku\",\n    modelProperties: {\n      resourceType: {\n        serializedName: \"resourceType\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      sku: {\n        serializedName: \"sku\",\n        type: {\n          name: \"Composite\",\n          className: \"Sku\"\n        }\n      },\n      capacity: {\n        serializedName: \"capacity\",\n        type: {\n          name: \"Composite\",\n          className: \"VirtualMachineScaleSetSkuCapacity\"\n        }\n      }\n    }\n  }\n};\n\nexport const VirtualMachineScaleSetSkuCapacity: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"VirtualMachineScaleSetSkuCapacity\",\n    modelProperties: {\n      minimum: {\n        serializedName: \"minimum\",\n        readOnly: true,\n        type: {\n          name: \"Number\"\n        }\n      },\n      maximum: {\n        serializedName: \"maximum\",\n        readOnly: true,\n        type: {\n          name: \"Number\"\n        }\n      },\n      defaultCapacity: {\n        serializedName: \"defaultCapacity\",\n        readOnly: true,\n        type: {\n          name: \"Number\"\n        }\n      },\n      scaleType: {\n        serializedName: \"scaleType\",\n        readOnly: true,\n        type: {\n          name: \"Enum\",\n          allowedValues: [\"Automatic\", \"None\"]\n        }\n      }\n    }\n  }\n};\n\nexport const VirtualMachineScaleSetListOSUpgradeHistory: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"VirtualMachineScaleSetListOSUpgradeHistory\",\n    modelProperties: {\n      value: {\n        serializedName: \"value\",\n        required: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"UpgradeOperationHistoricalStatusInfo\"\n            }\n          }\n        }\n      },\n      nextLink: {\n        serializedName: \"nextLink\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const UpgradeOperationHistoricalStatusInfo: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"UpgradeOperationHistoricalStatusInfo\",\n    modelProperties: {\n      properties: {\n        serializedName: \"properties\",\n        type: {\n          name: \"Composite\",\n          className: \"UpgradeOperationHistoricalStatusInfoProperties\"\n        }\n      },\n      type: {\n        serializedName: \"type\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      location: {\n        serializedName: \"location\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const UpgradeOperationHistoricalStatusInfoProperties: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"UpgradeOperationHistoricalStatusInfoProperties\",\n    modelProperties: {\n      runningStatus: {\n        serializedName: \"runningStatus\",\n        type: {\n          name: \"Composite\",\n          className: \"UpgradeOperationHistoryStatus\"\n        }\n      },\n      progress: {\n        serializedName: \"progress\",\n        type: {\n          name: \"Composite\",\n          className: \"RollingUpgradeProgressInfo\"\n        }\n      },\n      error: {\n        serializedName: \"error\",\n        type: {\n          name: \"Composite\",\n          className: \"ApiError\"\n        }\n      },\n      startedBy: {\n        serializedName: \"startedBy\",\n        readOnly: true,\n        type: {\n          name: \"Enum\",\n          allowedValues: [\"Unknown\", \"User\", \"Platform\"]\n        }\n      },\n      targetImageReference: {\n        serializedName: \"targetImageReference\",\n        type: {\n          name: \"Composite\",\n          className: \"ImageReference\"\n        }\n      },\n      rollbackInfo: {\n        serializedName: \"rollbackInfo\",\n        type: {\n          name: \"Composite\",\n          className: \"RollbackStatusInfo\"\n        }\n      }\n    }\n  }\n};\n\nexport const UpgradeOperationHistoryStatus: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"UpgradeOperationHistoryStatus\",\n    modelProperties: {\n      code: {\n        serializedName: \"code\",\n        readOnly: true,\n        type: {\n          name: \"Enum\",\n          allowedValues: [\"RollingForward\", \"Cancelled\", \"Completed\", \"Faulted\"]\n        }\n      },\n      startTime: {\n        serializedName: \"startTime\",\n        readOnly: true,\n        type: {\n          name: \"DateTime\"\n        }\n      },\n      endTime: {\n        serializedName: \"endTime\",\n        readOnly: true,\n        type: {\n          name: \"DateTime\"\n        }\n      }\n    }\n  }\n};\n\nexport const RollingUpgradeProgressInfo: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"RollingUpgradeProgressInfo\",\n    modelProperties: {\n      successfulInstanceCount: {\n        serializedName: \"successfulInstanceCount\",\n        readOnly: true,\n        type: {\n          name: \"Number\"\n        }\n      },\n      failedInstanceCount: {\n        serializedName: \"failedInstanceCount\",\n        readOnly: true,\n        type: {\n          name: \"Number\"\n        }\n      },\n      inProgressInstanceCount: {\n        serializedName: \"inProgressInstanceCount\",\n        readOnly: true,\n        type: {\n          name: \"Number\"\n        }\n      },\n      pendingInstanceCount: {\n        serializedName: \"pendingInstanceCount\",\n        readOnly: true,\n        type: {\n          name: \"Number\"\n        }\n      }\n    }\n  }\n};\n\nexport const RollbackStatusInfo: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"RollbackStatusInfo\",\n    modelProperties: {\n      successfullyRolledbackInstanceCount: {\n        serializedName: \"successfullyRolledbackInstanceCount\",\n        readOnly: true,\n        type: {\n          name: \"Number\"\n        }\n      },\n      failedRolledbackInstanceCount: {\n        serializedName: \"failedRolledbackInstanceCount\",\n        readOnly: true,\n        type: {\n          name: \"Number\"\n        }\n      },\n      rollbackError: {\n        serializedName: \"rollbackError\",\n        type: {\n          name: \"Composite\",\n          className: \"ApiError\"\n        }\n      }\n    }\n  }\n};\n\nexport const RollingUpgradeRunningStatus: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"RollingUpgradeRunningStatus\",\n    modelProperties: {\n      code: {\n        serializedName: \"code\",\n        readOnly: true,\n        type: {\n          name: \"Enum\",\n          allowedValues: [\"RollingForward\", \"Cancelled\", \"Completed\", \"Faulted\"]\n        }\n      },\n      startTime: {\n        serializedName: \"startTime\",\n        readOnly: true,\n        type: {\n          name: \"DateTime\"\n        }\n      },\n      lastAction: {\n        serializedName: \"lastAction\",\n        readOnly: true,\n        type: {\n          name: \"Enum\",\n          allowedValues: [\"Start\", \"Cancel\"]\n        }\n      },\n      lastActionTime: {\n        serializedName: \"lastActionTime\",\n        readOnly: true,\n        type: {\n          name: \"DateTime\"\n        }\n      }\n    }\n  }\n};\n\nexport const RecoveryWalkResponse: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"RecoveryWalkResponse\",\n    modelProperties: {\n      walkPerformed: {\n        serializedName: \"walkPerformed\",\n        readOnly: true,\n        type: {\n          name: \"Boolean\"\n        }\n      },\n      nextPlatformUpdateDomain: {\n        serializedName: \"nextPlatformUpdateDomain\",\n        readOnly: true,\n        type: {\n          name: \"Number\"\n        }\n      }\n    }\n  }\n};\n\nexport const VMScaleSetConvertToSinglePlacementGroupInput: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"VMScaleSetConvertToSinglePlacementGroupInput\",\n    modelProperties: {\n      activePlacementGroupId: {\n        serializedName: \"activePlacementGroupId\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const OrchestrationServiceStateInput: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"OrchestrationServiceStateInput\",\n    modelProperties: {\n      serviceName: {\n        serializedName: \"serviceName\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      action: {\n        serializedName: \"action\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const VirtualMachineScaleSetVMExtensionsListResult: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"VirtualMachineScaleSetVMExtensionsListResult\",\n    modelProperties: {\n      value: {\n        serializedName: \"value\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"VirtualMachineScaleSetVMExtension\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const VirtualMachineScaleSetVMInstanceView: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"VirtualMachineScaleSetVMInstanceView\",\n    modelProperties: {\n      platformUpdateDomain: {\n        serializedName: \"platformUpdateDomain\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      platformFaultDomain: {\n        serializedName: \"platformFaultDomain\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      rdpThumbPrint: {\n        serializedName: \"rdpThumbPrint\",\n        type: {\n          name: \"String\"\n        }\n      },\n      vmAgent: {\n        serializedName: \"vmAgent\",\n        type: {\n          name: \"Composite\",\n          className: \"VirtualMachineAgentInstanceView\"\n        }\n      },\n      maintenanceRedeployStatus: {\n        serializedName: \"maintenanceRedeployStatus\",\n        type: {\n          name: \"Composite\",\n          className: \"MaintenanceRedeployStatus\"\n        }\n      },\n      disks: {\n        serializedName: \"disks\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"DiskInstanceView\"\n            }\n          }\n        }\n      },\n      extensions: {\n        serializedName: \"extensions\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"VirtualMachineExtensionInstanceView\"\n            }\n          }\n        }\n      },\n      vmHealth: {\n        serializedName: \"vmHealth\",\n        type: {\n          name: \"Composite\",\n          className: \"VirtualMachineHealthStatus\"\n        }\n      },\n      bootDiagnostics: {\n        serializedName: \"bootDiagnostics\",\n        type: {\n          name: \"Composite\",\n          className: \"BootDiagnosticsInstanceView\"\n        }\n      },\n      statuses: {\n        serializedName: \"statuses\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"InstanceViewStatus\"\n            }\n          }\n        }\n      },\n      assignedHost: {\n        serializedName: \"assignedHost\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      placementGroupId: {\n        serializedName: \"placementGroupId\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const VirtualMachineScaleSetVMNetworkProfileConfiguration: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"VirtualMachineScaleSetVMNetworkProfileConfiguration\",\n    modelProperties: {\n      networkInterfaceConfigurations: {\n        serializedName: \"networkInterfaceConfigurations\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"VirtualMachineScaleSetNetworkConfiguration\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const VirtualMachineScaleSetVMProtectionPolicy: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"VirtualMachineScaleSetVMProtectionPolicy\",\n    modelProperties: {\n      protectFromScaleIn: {\n        serializedName: \"protectFromScaleIn\",\n        type: {\n          name: \"Boolean\"\n        }\n      },\n      protectFromScaleSetActions: {\n        serializedName: \"protectFromScaleSetActions\",\n        type: {\n          name: \"Boolean\"\n        }\n      }\n    }\n  }\n};\n\nexport const VirtualMachineScaleSetVMListResult: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"VirtualMachineScaleSetVMListResult\",\n    modelProperties: {\n      value: {\n        serializedName: \"value\",\n        required: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"VirtualMachineScaleSetVM\"\n            }\n          }\n        }\n      },\n      nextLink: {\n        serializedName: \"nextLink\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const LogAnalyticsInputBase: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"LogAnalyticsInputBase\",\n    modelProperties: {\n      blobContainerSasUri: {\n        serializedName: \"blobContainerSasUri\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      fromTime: {\n        serializedName: \"fromTime\",\n        required: true,\n        type: {\n          name: \"DateTime\"\n        }\n      },\n      toTime: {\n        serializedName: \"toTime\",\n        required: true,\n        type: {\n          name: \"DateTime\"\n        }\n      },\n      groupByThrottlePolicy: {\n        serializedName: \"groupByThrottlePolicy\",\n        type: {\n          name: \"Boolean\"\n        }\n      },\n      groupByOperationName: {\n        serializedName: \"groupByOperationName\",\n        type: {\n          name: \"Boolean\"\n        }\n      },\n      groupByResourceName: {\n        serializedName: \"groupByResourceName\",\n        type: {\n          name: \"Boolean\"\n        }\n      },\n      groupByClientApplicationId: {\n        serializedName: \"groupByClientApplicationId\",\n        type: {\n          name: \"Boolean\"\n        }\n      },\n      groupByUserAgent: {\n        serializedName: \"groupByUserAgent\",\n        type: {\n          name: \"Boolean\"\n        }\n      }\n    }\n  }\n};\n\nexport const LogAnalyticsOperationResult: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"LogAnalyticsOperationResult\",\n    modelProperties: {\n      properties: {\n        serializedName: \"properties\",\n        type: {\n          name: \"Composite\",\n          className: \"LogAnalyticsOutput\"\n        }\n      }\n    }\n  }\n};\n\nexport const LogAnalyticsOutput: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"LogAnalyticsOutput\",\n    modelProperties: {\n      output: {\n        serializedName: \"output\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const RunCommandListResult: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"RunCommandListResult\",\n    modelProperties: {\n      value: {\n        serializedName: \"value\",\n        required: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"RunCommandDocumentBase\"\n            }\n          }\n        }\n      },\n      nextLink: {\n        serializedName: \"nextLink\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const RunCommandDocumentBase: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"RunCommandDocumentBase\",\n    modelProperties: {\n      schema: {\n        serializedName: \"$schema\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      id: {\n        serializedName: \"id\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      osType: {\n        serializedName: \"osType\",\n        required: true,\n        type: {\n          name: \"Enum\",\n          allowedValues: [\"Windows\", \"Linux\"]\n        }\n      },\n      label: {\n        serializedName: \"label\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      description: {\n        serializedName: \"description\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const RunCommandParameterDefinition: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"RunCommandParameterDefinition\",\n    modelProperties: {\n      name: {\n        serializedName: \"name\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      type: {\n        serializedName: \"type\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      defaultValue: {\n        serializedName: \"defaultValue\",\n        type: {\n          name: \"String\"\n        }\n      },\n      required: {\n        defaultValue: false,\n        serializedName: \"required\",\n        type: {\n          name: \"Boolean\"\n        }\n      }\n    }\n  }\n};\n\nexport const RunCommandInput: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"RunCommandInput\",\n    modelProperties: {\n      commandId: {\n        serializedName: \"commandId\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      script: {\n        serializedName: \"script\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"String\"\n            }\n          }\n        }\n      },\n      parameters: {\n        serializedName: \"parameters\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"RunCommandInputParameter\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const RunCommandInputParameter: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"RunCommandInputParameter\",\n    modelProperties: {\n      name: {\n        serializedName: \"name\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      value: {\n        serializedName: \"value\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const RunCommandResult: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"RunCommandResult\",\n    modelProperties: {\n      value: {\n        serializedName: \"value\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"InstanceViewStatus\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const VirtualMachineRunCommandScriptSource: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"VirtualMachineRunCommandScriptSource\",\n    modelProperties: {\n      script: {\n        serializedName: \"script\",\n        type: {\n          name: \"String\"\n        }\n      },\n      scriptUri: {\n        serializedName: \"scriptUri\",\n        type: {\n          name: \"String\"\n        }\n      },\n      commandId: {\n        serializedName: \"commandId\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const VirtualMachineRunCommandInstanceView: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"VirtualMachineRunCommandInstanceView\",\n    modelProperties: {\n      executionState: {\n        serializedName: \"executionState\",\n        type: {\n          name: \"String\"\n        }\n      },\n      executionMessage: {\n        serializedName: \"executionMessage\",\n        type: {\n          name: \"String\"\n        }\n      },\n      exitCode: {\n        serializedName: \"exitCode\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      output: {\n        serializedName: \"output\",\n        type: {\n          name: \"String\"\n        }\n      },\n      error: {\n        serializedName: \"error\",\n        type: {\n          name: \"String\"\n        }\n      },\n      startTime: {\n        serializedName: \"startTime\",\n        type: {\n          name: \"DateTime\"\n        }\n      },\n      endTime: {\n        serializedName: \"endTime\",\n        type: {\n          name: \"DateTime\"\n        }\n      },\n      statuses: {\n        serializedName: \"statuses\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"InstanceViewStatus\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const VirtualMachineRunCommandsListResult: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"VirtualMachineRunCommandsListResult\",\n    modelProperties: {\n      value: {\n        serializedName: \"value\",\n        required: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"VirtualMachineRunCommand\"\n            }\n          }\n        }\n      },\n      nextLink: {\n        serializedName: \"nextLink\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const ResourceSkusResult: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ResourceSkusResult\",\n    modelProperties: {\n      value: {\n        serializedName: \"value\",\n        required: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"ResourceSku\"\n            }\n          }\n        }\n      },\n      nextLink: {\n        serializedName: \"nextLink\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const ResourceSku: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ResourceSku\",\n    modelProperties: {\n      resourceType: {\n        serializedName: \"resourceType\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      name: {\n        serializedName: \"name\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      tier: {\n        serializedName: \"tier\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      size: {\n        serializedName: \"size\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      family: {\n        serializedName: \"family\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      kind: {\n        serializedName: \"kind\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      capacity: {\n        serializedName: \"capacity\",\n        type: {\n          name: \"Composite\",\n          className: \"ResourceSkuCapacity\"\n        }\n      },\n      locations: {\n        serializedName: \"locations\",\n        readOnly: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"String\"\n            }\n          }\n        }\n      },\n      locationInfo: {\n        serializedName: \"locationInfo\",\n        readOnly: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"ResourceSkuLocationInfo\"\n            }\n          }\n        }\n      },\n      apiVersions: {\n        serializedName: \"apiVersions\",\n        readOnly: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"String\"\n            }\n          }\n        }\n      },\n      costs: {\n        serializedName: \"costs\",\n        readOnly: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"ResourceSkuCosts\"\n            }\n          }\n        }\n      },\n      capabilities: {\n        serializedName: \"capabilities\",\n        readOnly: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"ResourceSkuCapabilities\"\n            }\n          }\n        }\n      },\n      restrictions: {\n        serializedName: \"restrictions\",\n        readOnly: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"ResourceSkuRestrictions\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const ResourceSkuCapacity: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ResourceSkuCapacity\",\n    modelProperties: {\n      minimum: {\n        serializedName: \"minimum\",\n        readOnly: true,\n        type: {\n          name: \"Number\"\n        }\n      },\n      maximum: {\n        serializedName: \"maximum\",\n        readOnly: true,\n        type: {\n          name: \"Number\"\n        }\n      },\n      default: {\n        serializedName: \"default\",\n        readOnly: true,\n        type: {\n          name: \"Number\"\n        }\n      },\n      scaleType: {\n        serializedName: \"scaleType\",\n        readOnly: true,\n        type: {\n          name: \"Enum\",\n          allowedValues: [\"Automatic\", \"Manual\", \"None\"]\n        }\n      }\n    }\n  }\n};\n\nexport const ResourceSkuLocationInfo: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ResourceSkuLocationInfo\",\n    modelProperties: {\n      location: {\n        serializedName: \"location\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      zones: {\n        serializedName: \"zones\",\n        readOnly: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"String\"\n            }\n          }\n        }\n      },\n      zoneDetails: {\n        serializedName: \"zoneDetails\",\n        readOnly: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"ResourceSkuZoneDetails\"\n            }\n          }\n        }\n      },\n      extendedLocations: {\n        serializedName: \"extendedLocations\",\n        readOnly: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"String\"\n            }\n          }\n        }\n      },\n      type: {\n        serializedName: \"type\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const ResourceSkuZoneDetails: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ResourceSkuZoneDetails\",\n    modelProperties: {\n      name: {\n        serializedName: \"name\",\n        readOnly: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"String\"\n            }\n          }\n        }\n      },\n      capabilities: {\n        serializedName: \"capabilities\",\n        readOnly: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"ResourceSkuCapabilities\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const ResourceSkuCapabilities: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ResourceSkuCapabilities\",\n    modelProperties: {\n      name: {\n        serializedName: \"name\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      value: {\n        serializedName: \"value\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const ResourceSkuCosts: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ResourceSkuCosts\",\n    modelProperties: {\n      meterID: {\n        serializedName: \"meterID\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      quantity: {\n        serializedName: \"quantity\",\n        readOnly: true,\n        type: {\n          name: \"Number\"\n        }\n      },\n      extendedUnit: {\n        serializedName: \"extendedUnit\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const ResourceSkuRestrictions: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ResourceSkuRestrictions\",\n    modelProperties: {\n      type: {\n        serializedName: \"type\",\n        readOnly: true,\n        type: {\n          name: \"Enum\",\n          allowedValues: [\"Location\", \"Zone\"]\n        }\n      },\n      values: {\n        serializedName: \"values\",\n        readOnly: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"String\"\n            }\n          }\n        }\n      },\n      restrictionInfo: {\n        serializedName: \"restrictionInfo\",\n        type: {\n          name: \"Composite\",\n          className: \"ResourceSkuRestrictionInfo\"\n        }\n      },\n      reasonCode: {\n        serializedName: \"reasonCode\",\n        readOnly: true,\n        type: {\n          name: \"Enum\",\n          allowedValues: [\"QuotaId\", \"NotAvailableForSubscription\"]\n        }\n      }\n    }\n  }\n};\n\nexport const ResourceSkuRestrictionInfo: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ResourceSkuRestrictionInfo\",\n    modelProperties: {\n      locations: {\n        serializedName: \"locations\",\n        readOnly: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"String\"\n            }\n          }\n        }\n      },\n      zones: {\n        serializedName: \"zones\",\n        readOnly: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"String\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const DiskSku: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"DiskSku\",\n    modelProperties: {\n      name: {\n        serializedName: \"name\",\n        type: {\n          name: \"String\"\n        }\n      },\n      tier: {\n        serializedName: \"tier\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const PurchasePlanAutoGenerated: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"PurchasePlanAutoGenerated\",\n    modelProperties: {\n      name: {\n        serializedName: \"name\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      publisher: {\n        serializedName: \"publisher\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      product: {\n        serializedName: \"product\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      promotionCode: {\n        serializedName: \"promotionCode\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const SupportedCapabilities: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"SupportedCapabilities\",\n    modelProperties: {\n      acceleratedNetwork: {\n        serializedName: \"acceleratedNetwork\",\n        type: {\n          name: \"Boolean\"\n        }\n      }\n    }\n  }\n};\n\nexport const CreationData: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"CreationData\",\n    modelProperties: {\n      createOption: {\n        serializedName: \"createOption\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      storageAccountId: {\n        serializedName: \"storageAccountId\",\n        type: {\n          name: \"String\"\n        }\n      },\n      imageReference: {\n        serializedName: \"imageReference\",\n        type: {\n          name: \"Composite\",\n          className: \"ImageDiskReference\"\n        }\n      },\n      galleryImageReference: {\n        serializedName: \"galleryImageReference\",\n        type: {\n          name: \"Composite\",\n          className: \"ImageDiskReference\"\n        }\n      },\n      sourceUri: {\n        serializedName: \"sourceUri\",\n        type: {\n          name: \"String\"\n        }\n      },\n      sourceResourceId: {\n        serializedName: \"sourceResourceId\",\n        type: {\n          name: \"String\"\n        }\n      },\n      sourceUniqueId: {\n        serializedName: \"sourceUniqueId\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      uploadSizeBytes: {\n        serializedName: \"uploadSizeBytes\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      logicalSectorSize: {\n        serializedName: \"logicalSectorSize\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      securityDataUri: {\n        serializedName: \"securityDataUri\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const ImageDiskReference: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ImageDiskReference\",\n    modelProperties: {\n      id: {\n        serializedName: \"id\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      lun: {\n        serializedName: \"lun\",\n        type: {\n          name: \"Number\"\n        }\n      }\n    }\n  }\n};\n\nexport const EncryptionSettingsCollection: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"EncryptionSettingsCollection\",\n    modelProperties: {\n      enabled: {\n        serializedName: \"enabled\",\n        required: true,\n        type: {\n          name: \"Boolean\"\n        }\n      },\n      encryptionSettings: {\n        serializedName: \"encryptionSettings\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"EncryptionSettingsElement\"\n            }\n          }\n        }\n      },\n      encryptionSettingsVersion: {\n        serializedName: \"encryptionSettingsVersion\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const EncryptionSettingsElement: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"EncryptionSettingsElement\",\n    modelProperties: {\n      diskEncryptionKey: {\n        serializedName: \"diskEncryptionKey\",\n        type: {\n          name: \"Composite\",\n          className: \"KeyVaultAndSecretReference\"\n        }\n      },\n      keyEncryptionKey: {\n        serializedName: \"keyEncryptionKey\",\n        type: {\n          name: \"Composite\",\n          className: \"KeyVaultAndKeyReference\"\n        }\n      }\n    }\n  }\n};\n\nexport const KeyVaultAndSecretReference: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"KeyVaultAndSecretReference\",\n    modelProperties: {\n      sourceVault: {\n        serializedName: \"sourceVault\",\n        type: {\n          name: \"Composite\",\n          className: \"SourceVault\"\n        }\n      },\n      secretUrl: {\n        serializedName: \"secretUrl\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const SourceVault: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"SourceVault\",\n    modelProperties: {\n      id: {\n        serializedName: \"id\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const KeyVaultAndKeyReference: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"KeyVaultAndKeyReference\",\n    modelProperties: {\n      sourceVault: {\n        serializedName: \"sourceVault\",\n        type: {\n          name: \"Composite\",\n          className: \"SourceVault\"\n        }\n      },\n      keyUrl: {\n        serializedName: \"keyUrl\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const Encryption: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"Encryption\",\n    modelProperties: {\n      diskEncryptionSetId: {\n        serializedName: \"diskEncryptionSetId\",\n        type: {\n          name: \"String\"\n        }\n      },\n      type: {\n        serializedName: \"type\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const ShareInfoElement: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ShareInfoElement\",\n    modelProperties: {\n      vmUri: {\n        serializedName: \"vmUri\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const PropertyUpdatesInProgress: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"PropertyUpdatesInProgress\",\n    modelProperties: {\n      targetTier: {\n        serializedName: \"targetTier\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const DiskSecurityProfile: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"DiskSecurityProfile\",\n    modelProperties: {\n      securityType: {\n        serializedName: \"securityType\",\n        type: {\n          name: \"String\"\n        }\n      },\n      secureVMDiskEncryptionSetId: {\n        serializedName: \"secureVMDiskEncryptionSetId\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const DiskUpdate: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"DiskUpdate\",\n    modelProperties: {\n      tags: {\n        serializedName: \"tags\",\n        type: {\n          name: \"Dictionary\",\n          value: { type: { name: \"String\" } }\n        }\n      },\n      sku: {\n        serializedName: \"sku\",\n        type: {\n          name: \"Composite\",\n          className: \"DiskSku\"\n        }\n      },\n      osType: {\n        serializedName: \"properties.osType\",\n        type: {\n          name: \"Enum\",\n          allowedValues: [\"Windows\", \"Linux\"]\n        }\n      },\n      diskSizeGB: {\n        serializedName: \"properties.diskSizeGB\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      encryptionSettingsCollection: {\n        serializedName: \"properties.encryptionSettingsCollection\",\n        type: {\n          name: \"Composite\",\n          className: \"EncryptionSettingsCollection\"\n        }\n      },\n      diskIopsReadWrite: {\n        serializedName: \"properties.diskIOPSReadWrite\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      diskMBpsReadWrite: {\n        serializedName: \"properties.diskMBpsReadWrite\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      diskIopsReadOnly: {\n        serializedName: \"properties.diskIOPSReadOnly\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      diskMBpsReadOnly: {\n        serializedName: \"properties.diskMBpsReadOnly\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      maxShares: {\n        serializedName: \"properties.maxShares\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      encryption: {\n        serializedName: \"properties.encryption\",\n        type: {\n          name: \"Composite\",\n          className: \"Encryption\"\n        }\n      },\n      networkAccessPolicy: {\n        serializedName: \"properties.networkAccessPolicy\",\n        type: {\n          name: \"String\"\n        }\n      },\n      diskAccessId: {\n        serializedName: \"properties.diskAccessId\",\n        type: {\n          name: \"String\"\n        }\n      },\n      tier: {\n        serializedName: \"properties.tier\",\n        type: {\n          name: \"String\"\n        }\n      },\n      burstingEnabled: {\n        serializedName: \"properties.burstingEnabled\",\n        type: {\n          name: \"Boolean\"\n        }\n      },\n      purchasePlan: {\n        serializedName: \"properties.purchasePlan\",\n        type: {\n          name: \"Composite\",\n          className: \"PurchasePlanAutoGenerated\"\n        }\n      },\n      supportedCapabilities: {\n        serializedName: \"properties.supportedCapabilities\",\n        type: {\n          name: \"Composite\",\n          className: \"SupportedCapabilities\"\n        }\n      },\n      propertyUpdatesInProgress: {\n        serializedName: \"properties.propertyUpdatesInProgress\",\n        type: {\n          name: \"Composite\",\n          className: \"PropertyUpdatesInProgress\"\n        }\n      },\n      supportsHibernation: {\n        serializedName: \"properties.supportsHibernation\",\n        type: {\n          name: \"Boolean\"\n        }\n      },\n      publicNetworkAccess: {\n        serializedName: \"properties.publicNetworkAccess\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const DiskList: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"DiskList\",\n    modelProperties: {\n      value: {\n        serializedName: \"value\",\n        required: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"Disk\"\n            }\n          }\n        }\n      },\n      nextLink: {\n        serializedName: \"nextLink\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const GrantAccessData: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"GrantAccessData\",\n    modelProperties: {\n      access: {\n        serializedName: \"access\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      durationInSeconds: {\n        serializedName: \"durationInSeconds\",\n        required: true,\n        type: {\n          name: \"Number\"\n        }\n      },\n      getSecureVMGuestStateSAS: {\n        serializedName: \"getSecureVMGuestStateSAS\",\n        type: {\n          name: \"Boolean\"\n        }\n      }\n    }\n  }\n};\n\nexport const AccessUri: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"AccessUri\",\n    modelProperties: {\n      accessSAS: {\n        serializedName: \"accessSAS\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      securityDataAccessSAS: {\n        serializedName: \"securityDataAccessSAS\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const SnapshotSku: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"SnapshotSku\",\n    modelProperties: {\n      name: {\n        serializedName: \"name\",\n        type: {\n          name: \"String\"\n        }\n      },\n      tier: {\n        serializedName: \"tier\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const SnapshotUpdate: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"SnapshotUpdate\",\n    modelProperties: {\n      tags: {\n        serializedName: \"tags\",\n        type: {\n          name: \"Dictionary\",\n          value: { type: { name: \"String\" } }\n        }\n      },\n      sku: {\n        serializedName: \"sku\",\n        type: {\n          name: \"Composite\",\n          className: \"SnapshotSku\"\n        }\n      },\n      osType: {\n        serializedName: \"properties.osType\",\n        type: {\n          name: \"Enum\",\n          allowedValues: [\"Windows\", \"Linux\"]\n        }\n      },\n      diskSizeGB: {\n        serializedName: \"properties.diskSizeGB\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      encryptionSettingsCollection: {\n        serializedName: \"properties.encryptionSettingsCollection\",\n        type: {\n          name: \"Composite\",\n          className: \"EncryptionSettingsCollection\"\n        }\n      },\n      encryption: {\n        serializedName: \"properties.encryption\",\n        type: {\n          name: \"Composite\",\n          className: \"Encryption\"\n        }\n      },\n      networkAccessPolicy: {\n        serializedName: \"properties.networkAccessPolicy\",\n        type: {\n          name: \"String\"\n        }\n      },\n      diskAccessId: {\n        serializedName: \"properties.diskAccessId\",\n        type: {\n          name: \"String\"\n        }\n      },\n      supportsHibernation: {\n        serializedName: \"properties.supportsHibernation\",\n        type: {\n          name: \"Boolean\"\n        }\n      },\n      publicNetworkAccess: {\n        serializedName: \"properties.publicNetworkAccess\",\n        type: {\n          name: \"String\"\n        }\n      },\n      supportedCapabilities: {\n        serializedName: \"properties.supportedCapabilities\",\n        type: {\n          name: \"Composite\",\n          className: \"SupportedCapabilities\"\n        }\n      }\n    }\n  }\n};\n\nexport const SnapshotList: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"SnapshotList\",\n    modelProperties: {\n      value: {\n        serializedName: \"value\",\n        required: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"Snapshot\"\n            }\n          }\n        }\n      },\n      nextLink: {\n        serializedName: \"nextLink\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const EncryptionSetIdentity: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"EncryptionSetIdentity\",\n    modelProperties: {\n      type: {\n        serializedName: \"type\",\n        type: {\n          name: \"String\"\n        }\n      },\n      principalId: {\n        serializedName: \"principalId\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      tenantId: {\n        serializedName: \"tenantId\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const KeyForDiskEncryptionSet: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"KeyForDiskEncryptionSet\",\n    modelProperties: {\n      sourceVault: {\n        serializedName: \"sourceVault\",\n        type: {\n          name: \"Composite\",\n          className: \"SourceVault\"\n        }\n      },\n      keyUrl: {\n        serializedName: \"keyUrl\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const DiskEncryptionSetUpdate: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"DiskEncryptionSetUpdate\",\n    modelProperties: {\n      tags: {\n        serializedName: \"tags\",\n        type: {\n          name: \"Dictionary\",\n          value: { type: { name: \"String\" } }\n        }\n      },\n      identity: {\n        serializedName: \"identity\",\n        type: {\n          name: \"Composite\",\n          className: \"EncryptionSetIdentity\"\n        }\n      },\n      encryptionType: {\n        serializedName: \"properties.encryptionType\",\n        type: {\n          name: \"String\"\n        }\n      },\n      activeKey: {\n        serializedName: \"properties.activeKey\",\n        type: {\n          name: \"Composite\",\n          className: \"KeyForDiskEncryptionSet\"\n        }\n      },\n      rotationToLatestKeyVersionEnabled: {\n        serializedName: \"properties.rotationToLatestKeyVersionEnabled\",\n        type: {\n          name: \"Boolean\"\n        }\n      }\n    }\n  }\n};\n\nexport const DiskEncryptionSetList: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"DiskEncryptionSetList\",\n    modelProperties: {\n      value: {\n        serializedName: \"value\",\n        required: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"DiskEncryptionSet\"\n            }\n          }\n        }\n      },\n      nextLink: {\n        serializedName: \"nextLink\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const ResourceUriList: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ResourceUriList\",\n    modelProperties: {\n      value: {\n        serializedName: \"value\",\n        required: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"String\"\n            }\n          }\n        }\n      },\n      nextLink: {\n        serializedName: \"nextLink\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const PrivateEndpointConnection: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"PrivateEndpointConnection\",\n    modelProperties: {\n      id: {\n        serializedName: \"id\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      name: {\n        serializedName: \"name\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      type: {\n        serializedName: \"type\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      privateEndpoint: {\n        serializedName: \"properties.privateEndpoint\",\n        type: {\n          name: \"Composite\",\n          className: \"PrivateEndpoint\"\n        }\n      },\n      privateLinkServiceConnectionState: {\n        serializedName: \"properties.privateLinkServiceConnectionState\",\n        type: {\n          name: \"Composite\",\n          className: \"PrivateLinkServiceConnectionState\"\n        }\n      },\n      provisioningState: {\n        serializedName: \"properties.provisioningState\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const PrivateEndpoint: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"PrivateEndpoint\",\n    modelProperties: {\n      id: {\n        serializedName: \"id\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const PrivateLinkServiceConnectionState: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"PrivateLinkServiceConnectionState\",\n    modelProperties: {\n      status: {\n        serializedName: \"status\",\n        type: {\n          name: \"String\"\n        }\n      },\n      description: {\n        serializedName: \"description\",\n        type: {\n          name: \"String\"\n        }\n      },\n      actionsRequired: {\n        serializedName: \"actionsRequired\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const DiskAccessUpdate: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"DiskAccessUpdate\",\n    modelProperties: {\n      tags: {\n        serializedName: \"tags\",\n        type: {\n          name: \"Dictionary\",\n          value: { type: { name: \"String\" } }\n        }\n      }\n    }\n  }\n};\n\nexport const DiskAccessList: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"DiskAccessList\",\n    modelProperties: {\n      value: {\n        serializedName: \"value\",\n        required: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"DiskAccess\"\n            }\n          }\n        }\n      },\n      nextLink: {\n        serializedName: \"nextLink\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const PrivateLinkResourceListResult: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"PrivateLinkResourceListResult\",\n    modelProperties: {\n      value: {\n        serializedName: \"value\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"PrivateLinkResource\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const PrivateLinkResource: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"PrivateLinkResource\",\n    modelProperties: {\n      id: {\n        serializedName: \"id\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      name: {\n        serializedName: \"name\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      type: {\n        serializedName: \"type\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      groupId: {\n        serializedName: \"properties.groupId\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      requiredMembers: {\n        serializedName: \"properties.requiredMembers\",\n        readOnly: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"String\"\n            }\n          }\n        }\n      },\n      requiredZoneNames: {\n        serializedName: \"properties.requiredZoneNames\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"String\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const PrivateEndpointConnectionListResult: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"PrivateEndpointConnectionListResult\",\n    modelProperties: {\n      value: {\n        serializedName: \"value\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"PrivateEndpointConnection\"\n            }\n          }\n        }\n      },\n      nextLink: {\n        serializedName: \"nextLink\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const ProxyOnlyResource: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ProxyOnlyResource\",\n    modelProperties: {\n      id: {\n        serializedName: \"id\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      name: {\n        serializedName: \"name\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      type: {\n        serializedName: \"type\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const DiskRestorePointList: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"DiskRestorePointList\",\n    modelProperties: {\n      value: {\n        serializedName: \"value\",\n        required: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"DiskRestorePoint\"\n            }\n          }\n        }\n      },\n      nextLink: {\n        serializedName: \"nextLink\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const GalleryIdentifier: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"GalleryIdentifier\",\n    modelProperties: {\n      uniqueName: {\n        serializedName: \"uniqueName\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const SharingProfile: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"SharingProfile\",\n    modelProperties: {\n      permissions: {\n        serializedName: \"permissions\",\n        type: {\n          name: \"String\"\n        }\n      },\n      groups: {\n        serializedName: \"groups\",\n        readOnly: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"SharingProfileGroup\"\n            }\n          }\n        }\n      },\n      communityGalleryInfo: {\n        serializedName: \"communityGalleryInfo\",\n        type: {\n          name: \"any\"\n        }\n      }\n    }\n  }\n};\n\nexport const SharingProfileGroup: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"SharingProfileGroup\",\n    modelProperties: {\n      type: {\n        serializedName: \"type\",\n        type: {\n          name: \"String\"\n        }\n      },\n      ids: {\n        serializedName: \"ids\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"String\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const SoftDeletePolicy: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"SoftDeletePolicy\",\n    modelProperties: {\n      isSoftDeleteEnabled: {\n        serializedName: \"isSoftDeleteEnabled\",\n        type: {\n          name: \"Boolean\"\n        }\n      }\n    }\n  }\n};\n\nexport const SharingStatus: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"SharingStatus\",\n    modelProperties: {\n      aggregatedState: {\n        serializedName: \"aggregatedState\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      summary: {\n        serializedName: \"summary\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"RegionalSharingStatus\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const RegionalSharingStatus: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"RegionalSharingStatus\",\n    modelProperties: {\n      region: {\n        serializedName: \"region\",\n        type: {\n          name: \"String\"\n        }\n      },\n      state: {\n        serializedName: \"state\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      details: {\n        serializedName: \"details\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const UpdateResourceDefinition: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"UpdateResourceDefinition\",\n    modelProperties: {\n      id: {\n        serializedName: \"id\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      name: {\n        serializedName: \"name\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      type: {\n        serializedName: \"type\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      tags: {\n        serializedName: \"tags\",\n        type: {\n          name: \"Dictionary\",\n          value: { type: { name: \"String\" } }\n        }\n      }\n    }\n  }\n};\n\nexport const GalleryImageIdentifier: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"GalleryImageIdentifier\",\n    modelProperties: {\n      publisher: {\n        serializedName: \"publisher\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      offer: {\n        serializedName: \"offer\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      sku: {\n        serializedName: \"sku\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const RecommendedMachineConfiguration: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"RecommendedMachineConfiguration\",\n    modelProperties: {\n      vCPUs: {\n        serializedName: \"vCPUs\",\n        type: {\n          name: \"Composite\",\n          className: \"ResourceRange\"\n        }\n      },\n      memory: {\n        serializedName: \"memory\",\n        type: {\n          name: \"Composite\",\n          className: \"ResourceRange\"\n        }\n      }\n    }\n  }\n};\n\nexport const ResourceRange: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ResourceRange\",\n    modelProperties: {\n      min: {\n        serializedName: \"min\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      max: {\n        serializedName: \"max\",\n        type: {\n          name: \"Number\"\n        }\n      }\n    }\n  }\n};\n\nexport const Disallowed: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"Disallowed\",\n    modelProperties: {\n      diskTypes: {\n        serializedName: \"diskTypes\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"String\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const ImagePurchasePlan: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ImagePurchasePlan\",\n    modelProperties: {\n      name: {\n        serializedName: \"name\",\n        type: {\n          name: \"String\"\n        }\n      },\n      publisher: {\n        serializedName: \"publisher\",\n        type: {\n          name: \"String\"\n        }\n      },\n      product: {\n        serializedName: \"product\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const GalleryImageFeature: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"GalleryImageFeature\",\n    modelProperties: {\n      name: {\n        serializedName: \"name\",\n        type: {\n          name: \"String\"\n        }\n      },\n      value: {\n        serializedName: \"value\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const GalleryArtifactPublishingProfileBase: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"GalleryArtifactPublishingProfileBase\",\n    modelProperties: {\n      targetRegions: {\n        serializedName: \"targetRegions\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"TargetRegion\"\n            }\n          }\n        }\n      },\n      replicaCount: {\n        serializedName: \"replicaCount\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      excludeFromLatest: {\n        serializedName: \"excludeFromLatest\",\n        type: {\n          name: \"Boolean\"\n        }\n      },\n      publishedDate: {\n        serializedName: \"publishedDate\",\n        readOnly: true,\n        type: {\n          name: \"DateTime\"\n        }\n      },\n      endOfLifeDate: {\n        serializedName: \"endOfLifeDate\",\n        type: {\n          name: \"DateTime\"\n        }\n      },\n      storageAccountType: {\n        serializedName: \"storageAccountType\",\n        type: {\n          name: \"String\"\n        }\n      },\n      replicationMode: {\n        serializedName: \"replicationMode\",\n        type: {\n          name: \"String\"\n        }\n      },\n      targetExtendedLocations: {\n        serializedName: \"targetExtendedLocations\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"GalleryTargetExtendedLocation\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const TargetRegion: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"TargetRegion\",\n    modelProperties: {\n      name: {\n        serializedName: \"name\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      regionalReplicaCount: {\n        serializedName: \"regionalReplicaCount\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      storageAccountType: {\n        serializedName: \"storageAccountType\",\n        type: {\n          name: \"String\"\n        }\n      },\n      encryption: {\n        serializedName: \"encryption\",\n        type: {\n          name: \"Composite\",\n          className: \"EncryptionImages\"\n        }\n      }\n    }\n  }\n};\n\nexport const EncryptionImages: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"EncryptionImages\",\n    modelProperties: {\n      osDiskImage: {\n        serializedName: \"osDiskImage\",\n        type: {\n          name: \"Composite\",\n          className: \"OSDiskImageEncryption\"\n        }\n      },\n      dataDiskImages: {\n        serializedName: \"dataDiskImages\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"DataDiskImageEncryption\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const OSDiskImageSecurityProfile: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"OSDiskImageSecurityProfile\",\n    modelProperties: {\n      confidentialVMEncryptionType: {\n        serializedName: \"confidentialVMEncryptionType\",\n        type: {\n          name: \"String\"\n        }\n      },\n      secureVMDiskEncryptionSetId: {\n        serializedName: \"secureVMDiskEncryptionSetId\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const DiskImageEncryption: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"DiskImageEncryption\",\n    modelProperties: {\n      diskEncryptionSetId: {\n        serializedName: \"diskEncryptionSetId\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const GalleryTargetExtendedLocation: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"GalleryTargetExtendedLocation\",\n    modelProperties: {\n      name: {\n        serializedName: \"name\",\n        type: {\n          name: \"String\"\n        }\n      },\n      extendedLocation: {\n        serializedName: \"extendedLocation\",\n        type: {\n          name: \"Composite\",\n          className: \"GalleryExtendedLocation\"\n        }\n      },\n      extendedLocationReplicaCount: {\n        serializedName: \"extendedLocationReplicaCount\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      storageAccountType: {\n        serializedName: \"storageAccountType\",\n        type: {\n          name: \"String\"\n        }\n      },\n      encryption: {\n        serializedName: \"encryption\",\n        type: {\n          name: \"Composite\",\n          className: \"EncryptionImages\"\n        }\n      }\n    }\n  }\n};\n\nexport const GalleryExtendedLocation: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"GalleryExtendedLocation\",\n    modelProperties: {\n      name: {\n        serializedName: \"name\",\n        type: {\n          name: \"String\"\n        }\n      },\n      type: {\n        serializedName: \"type\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const GalleryImageVersionStorageProfile: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"GalleryImageVersionStorageProfile\",\n    modelProperties: {\n      source: {\n        serializedName: \"source\",\n        type: {\n          name: \"Composite\",\n          className: \"GalleryArtifactVersionSource\"\n        }\n      },\n      osDiskImage: {\n        serializedName: \"osDiskImage\",\n        type: {\n          name: \"Composite\",\n          className: \"GalleryOSDiskImage\"\n        }\n      },\n      dataDiskImages: {\n        serializedName: \"dataDiskImages\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"GalleryDataDiskImage\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const GalleryArtifactVersionSource: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"GalleryArtifactVersionSource\",\n    modelProperties: {\n      id: {\n        serializedName: \"id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      uri: {\n        serializedName: \"uri\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const GalleryDiskImage: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"GalleryDiskImage\",\n    modelProperties: {\n      sizeInGB: {\n        serializedName: \"sizeInGB\",\n        readOnly: true,\n        type: {\n          name: \"Number\"\n        }\n      },\n      hostCaching: {\n        serializedName: \"hostCaching\",\n        type: {\n          name: \"Enum\",\n          allowedValues: [\"None\", \"ReadOnly\", \"ReadWrite\"]\n        }\n      },\n      source: {\n        serializedName: \"source\",\n        type: {\n          name: \"Composite\",\n          className: \"GalleryArtifactVersionSource\"\n        }\n      }\n    }\n  }\n};\n\nexport const ReplicationStatus: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ReplicationStatus\",\n    modelProperties: {\n      aggregatedState: {\n        serializedName: \"aggregatedState\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      summary: {\n        serializedName: \"summary\",\n        readOnly: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"RegionalReplicationStatus\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const RegionalReplicationStatus: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"RegionalReplicationStatus\",\n    modelProperties: {\n      region: {\n        serializedName: \"region\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      state: {\n        serializedName: \"state\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      details: {\n        serializedName: \"details\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      progress: {\n        serializedName: \"progress\",\n        readOnly: true,\n        type: {\n          name: \"Number\"\n        }\n      }\n    }\n  }\n};\n\nexport const UserArtifactSource: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"UserArtifactSource\",\n    modelProperties: {\n      mediaLink: {\n        serializedName: \"mediaLink\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      defaultConfigurationLink: {\n        serializedName: \"defaultConfigurationLink\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const UserArtifactManage: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"UserArtifactManage\",\n    modelProperties: {\n      install: {\n        serializedName: \"install\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      remove: {\n        serializedName: \"remove\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      update: {\n        serializedName: \"update\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const GalleryList: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"GalleryList\",\n    modelProperties: {\n      value: {\n        serializedName: \"value\",\n        required: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"Gallery\"\n            }\n          }\n        }\n      },\n      nextLink: {\n        serializedName: \"nextLink\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const GalleryImageList: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"GalleryImageList\",\n    modelProperties: {\n      value: {\n        serializedName: \"value\",\n        required: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"GalleryImage\"\n            }\n          }\n        }\n      },\n      nextLink: {\n        serializedName: \"nextLink\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const GalleryImageVersionList: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"GalleryImageVersionList\",\n    modelProperties: {\n      value: {\n        serializedName: \"value\",\n        required: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"GalleryImageVersion\"\n            }\n          }\n        }\n      },\n      nextLink: {\n        serializedName: \"nextLink\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const GalleryApplicationList: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"GalleryApplicationList\",\n    modelProperties: {\n      value: {\n        serializedName: \"value\",\n        required: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"GalleryApplication\"\n            }\n          }\n        }\n      },\n      nextLink: {\n        serializedName: \"nextLink\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const GalleryApplicationVersionList: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"GalleryApplicationVersionList\",\n    modelProperties: {\n      value: {\n        serializedName: \"value\",\n        required: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"GalleryApplicationVersion\"\n            }\n          }\n        }\n      },\n      nextLink: {\n        serializedName: \"nextLink\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const SharingUpdate: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"SharingUpdate\",\n    modelProperties: {\n      operationType: {\n        serializedName: \"operationType\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      groups: {\n        serializedName: \"groups\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"SharingProfileGroup\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const SharedGalleryList: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"SharedGalleryList\",\n    modelProperties: {\n      value: {\n        serializedName: \"value\",\n        required: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"SharedGallery\"\n            }\n          }\n        }\n      },\n      nextLink: {\n        serializedName: \"nextLink\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const PirResource: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"PirResource\",\n    modelProperties: {\n      name: {\n        serializedName: \"name\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      location: {\n        serializedName: \"location\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const SharedGalleryImageList: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"SharedGalleryImageList\",\n    modelProperties: {\n      value: {\n        serializedName: \"value\",\n        required: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"SharedGalleryImage\"\n            }\n          }\n        }\n      },\n      nextLink: {\n        serializedName: \"nextLink\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const SharedGalleryImageVersionList: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"SharedGalleryImageVersionList\",\n    modelProperties: {\n      value: {\n        serializedName: \"value\",\n        required: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"SharedGalleryImageVersion\"\n            }\n          }\n        }\n      },\n      nextLink: {\n        serializedName: \"nextLink\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const PirCommunityGalleryResource: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"PirCommunityGalleryResource\",\n    modelProperties: {\n      name: {\n        serializedName: \"name\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      location: {\n        serializedName: \"location\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      type: {\n        serializedName: \"type\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      uniqueId: {\n        serializedName: \"identifier.uniqueId\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const RoleInstance: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"RoleInstance\",\n    modelProperties: {\n      id: {\n        serializedName: \"id\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      name: {\n        serializedName: \"name\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      type: {\n        serializedName: \"type\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      location: {\n        serializedName: \"location\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      tags: {\n        serializedName: \"tags\",\n        readOnly: true,\n        type: {\n          name: \"Dictionary\",\n          value: { type: { name: \"String\" } }\n        }\n      },\n      sku: {\n        serializedName: \"sku\",\n        type: {\n          name: \"Composite\",\n          className: \"InstanceSku\"\n        }\n      },\n      properties: {\n        serializedName: \"properties\",\n        type: {\n          name: \"Composite\",\n          className: \"RoleInstanceProperties\"\n        }\n      }\n    }\n  }\n};\n\nexport const InstanceSku: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"InstanceSku\",\n    modelProperties: {\n      name: {\n        serializedName: \"name\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      tier: {\n        serializedName: \"tier\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const RoleInstanceProperties: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"RoleInstanceProperties\",\n    modelProperties: {\n      networkProfile: {\n        serializedName: \"networkProfile\",\n        type: {\n          name: \"Composite\",\n          className: \"RoleInstanceNetworkProfile\"\n        }\n      },\n      instanceView: {\n        serializedName: \"instanceView\",\n        type: {\n          name: \"Composite\",\n          className: \"RoleInstanceView\"\n        }\n      }\n    }\n  }\n};\n\nexport const RoleInstanceNetworkProfile: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"RoleInstanceNetworkProfile\",\n    modelProperties: {\n      networkInterfaces: {\n        serializedName: \"networkInterfaces\",\n        readOnly: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"SubResource\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const RoleInstanceView: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"RoleInstanceView\",\n    modelProperties: {\n      platformUpdateDomain: {\n        serializedName: \"platformUpdateDomain\",\n        readOnly: true,\n        type: {\n          name: \"Number\"\n        }\n      },\n      platformFaultDomain: {\n        serializedName: \"platformFaultDomain\",\n        readOnly: true,\n        type: {\n          name: \"Number\"\n        }\n      },\n      privateId: {\n        serializedName: \"privateId\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      statuses: {\n        serializedName: \"statuses\",\n        readOnly: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"ResourceInstanceViewStatus\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const ResourceInstanceViewStatus: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ResourceInstanceViewStatus\",\n    modelProperties: {\n      code: {\n        serializedName: \"code\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      displayStatus: {\n        serializedName: \"displayStatus\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      message: {\n        serializedName: \"message\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      time: {\n        serializedName: \"time\",\n        readOnly: true,\n        type: {\n          name: \"DateTime\"\n        }\n      },\n      level: {\n        serializedName: \"level\",\n        type: {\n          name: \"Enum\",\n          allowedValues: [\"Info\", \"Warning\", \"Error\"]\n        }\n      }\n    }\n  }\n};\n\nexport const RoleInstanceListResult: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"RoleInstanceListResult\",\n    modelProperties: {\n      value: {\n        serializedName: \"value\",\n        required: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"RoleInstance\"\n            }\n          }\n        }\n      },\n      nextLink: {\n        serializedName: \"nextLink\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const CloudServiceRole: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"CloudServiceRole\",\n    modelProperties: {\n      id: {\n        serializedName: \"id\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      name: {\n        serializedName: \"name\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      type: {\n        serializedName: \"type\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      location: {\n        serializedName: \"location\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      sku: {\n        serializedName: \"sku\",\n        type: {\n          name: \"Composite\",\n          className: \"CloudServiceRoleSku\"\n        }\n      },\n      properties: {\n        serializedName: \"properties\",\n        type: {\n          name: \"Composite\",\n          className: \"CloudServiceRoleProperties\"\n        }\n      }\n    }\n  }\n};\n\nexport const CloudServiceRoleSku: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"CloudServiceRoleSku\",\n    modelProperties: {\n      name: {\n        serializedName: \"name\",\n        type: {\n          name: \"String\"\n        }\n      },\n      tier: {\n        serializedName: \"tier\",\n        type: {\n          name: \"String\"\n        }\n      },\n      capacity: {\n        serializedName: \"capacity\",\n        type: {\n          name: \"Number\"\n        }\n      }\n    }\n  }\n};\n\nexport const CloudServiceRoleProperties: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"CloudServiceRoleProperties\",\n    modelProperties: {\n      uniqueId: {\n        serializedName: \"uniqueId\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const CloudServiceRoleListResult: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"CloudServiceRoleListResult\",\n    modelProperties: {\n      value: {\n        serializedName: \"value\",\n        required: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"CloudServiceRole\"\n            }\n          }\n        }\n      },\n      nextLink: {\n        serializedName: \"nextLink\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const CloudService: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"CloudService\",\n    modelProperties: {\n      id: {\n        serializedName: \"id\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      name: {\n        serializedName: \"name\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      type: {\n        serializedName: \"type\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      location: {\n        serializedName: \"location\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      tags: {\n        serializedName: \"tags\",\n        type: {\n          name: \"Dictionary\",\n          value: { type: { name: \"String\" } }\n        }\n      },\n      properties: {\n        serializedName: \"properties\",\n        type: {\n          name: \"Composite\",\n          className: \"CloudServiceProperties\"\n        }\n      }\n    }\n  }\n};\n\nexport const CloudServiceProperties: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"CloudServiceProperties\",\n    modelProperties: {\n      packageUrl: {\n        serializedName: \"packageUrl\",\n        type: {\n          name: \"String\"\n        }\n      },\n      configuration: {\n        serializedName: \"configuration\",\n        type: {\n          name: \"String\"\n        }\n      },\n      configurationUrl: {\n        serializedName: \"configurationUrl\",\n        type: {\n          name: \"String\"\n        }\n      },\n      startCloudService: {\n        serializedName: \"startCloudService\",\n        type: {\n          name: \"Boolean\"\n        }\n      },\n      allowModelOverride: {\n        serializedName: \"allowModelOverride\",\n        type: {\n          name: \"Boolean\"\n        }\n      },\n      upgradeMode: {\n        serializedName: \"upgradeMode\",\n        type: {\n          name: \"String\"\n        }\n      },\n      roleProfile: {\n        serializedName: \"roleProfile\",\n        type: {\n          name: \"Composite\",\n          className: \"CloudServiceRoleProfile\"\n        }\n      },\n      osProfile: {\n        serializedName: \"osProfile\",\n        type: {\n          name: \"Composite\",\n          className: \"CloudServiceOsProfile\"\n        }\n      },\n      networkProfile: {\n        serializedName: \"networkProfile\",\n        type: {\n          name: \"Composite\",\n          className: \"CloudServiceNetworkProfile\"\n        }\n      },\n      extensionProfile: {\n        serializedName: \"extensionProfile\",\n        type: {\n          name: \"Composite\",\n          className: \"CloudServiceExtensionProfile\"\n        }\n      },\n      provisioningState: {\n        serializedName: \"provisioningState\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      uniqueId: {\n        serializedName: \"uniqueId\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const CloudServiceRoleProfile: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"CloudServiceRoleProfile\",\n    modelProperties: {\n      roles: {\n        serializedName: \"roles\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"CloudServiceRoleProfileProperties\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const CloudServiceRoleProfileProperties: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"CloudServiceRoleProfileProperties\",\n    modelProperties: {\n      name: {\n        serializedName: \"name\",\n        type: {\n          name: \"String\"\n        }\n      },\n      sku: {\n        serializedName: \"sku\",\n        type: {\n          name: \"Composite\",\n          className: \"CloudServiceRoleSku\"\n        }\n      }\n    }\n  }\n};\n\nexport const CloudServiceOsProfile: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"CloudServiceOsProfile\",\n    modelProperties: {\n      secrets: {\n        serializedName: \"secrets\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"CloudServiceVaultSecretGroup\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const CloudServiceVaultSecretGroup: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"CloudServiceVaultSecretGroup\",\n    modelProperties: {\n      sourceVault: {\n        serializedName: \"sourceVault\",\n        type: {\n          name: \"Composite\",\n          className: \"SubResource\"\n        }\n      },\n      vaultCertificates: {\n        serializedName: \"vaultCertificates\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"CloudServiceVaultCertificate\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const CloudServiceVaultCertificate: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"CloudServiceVaultCertificate\",\n    modelProperties: {\n      certificateUrl: {\n        serializedName: \"certificateUrl\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const CloudServiceNetworkProfile: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"CloudServiceNetworkProfile\",\n    modelProperties: {\n      loadBalancerConfigurations: {\n        serializedName: \"loadBalancerConfigurations\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"LoadBalancerConfiguration\"\n            }\n          }\n        }\n      },\n      swappableCloudService: {\n        serializedName: \"swappableCloudService\",\n        type: {\n          name: \"Composite\",\n          className: \"SubResource\"\n        }\n      }\n    }\n  }\n};\n\nexport const LoadBalancerConfiguration: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"LoadBalancerConfiguration\",\n    modelProperties: {\n      id: {\n        serializedName: \"id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      name: {\n        serializedName: \"name\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      properties: {\n        serializedName: \"properties\",\n        type: {\n          name: \"Composite\",\n          className: \"LoadBalancerConfigurationProperties\"\n        }\n      }\n    }\n  }\n};\n\nexport const LoadBalancerConfigurationProperties: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"LoadBalancerConfigurationProperties\",\n    modelProperties: {\n      frontendIPConfigurations: {\n        serializedName: \"frontendIPConfigurations\",\n        required: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"LoadBalancerFrontendIPConfiguration\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const LoadBalancerFrontendIPConfiguration: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"LoadBalancerFrontendIPConfiguration\",\n    modelProperties: {\n      name: {\n        serializedName: \"name\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      properties: {\n        serializedName: \"properties\",\n        type: {\n          name: \"Composite\",\n          className: \"LoadBalancerFrontendIPConfigurationProperties\"\n        }\n      }\n    }\n  }\n};\n\nexport const LoadBalancerFrontendIPConfigurationProperties: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"LoadBalancerFrontendIPConfigurationProperties\",\n    modelProperties: {\n      publicIPAddress: {\n        serializedName: \"publicIPAddress\",\n        type: {\n          name: \"Composite\",\n          className: \"SubResource\"\n        }\n      },\n      subnet: {\n        serializedName: \"subnet\",\n        type: {\n          name: \"Composite\",\n          className: \"SubResource\"\n        }\n      },\n      privateIPAddress: {\n        serializedName: \"privateIPAddress\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const CloudServiceExtensionProfile: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"CloudServiceExtensionProfile\",\n    modelProperties: {\n      extensions: {\n        serializedName: \"extensions\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"Extension\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const Extension: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"Extension\",\n    modelProperties: {\n      name: {\n        serializedName: \"name\",\n        type: {\n          name: \"String\"\n        }\n      },\n      properties: {\n        serializedName: \"properties\",\n        type: {\n          name: \"Composite\",\n          className: \"CloudServiceExtensionProperties\"\n        }\n      }\n    }\n  }\n};\n\nexport const CloudServiceExtensionProperties: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"CloudServiceExtensionProperties\",\n    modelProperties: {\n      publisher: {\n        serializedName: \"publisher\",\n        type: {\n          name: \"String\"\n        }\n      },\n      type: {\n        serializedName: \"type\",\n        type: {\n          name: \"String\"\n        }\n      },\n      typeHandlerVersion: {\n        serializedName: \"typeHandlerVersion\",\n        type: {\n          name: \"String\"\n        }\n      },\n      autoUpgradeMinorVersion: {\n        serializedName: \"autoUpgradeMinorVersion\",\n        type: {\n          name: \"Boolean\"\n        }\n      },\n      settings: {\n        serializedName: \"settings\",\n        type: {\n          name: \"String\"\n        }\n      },\n      protectedSettings: {\n        serializedName: \"protectedSettings\",\n        type: {\n          name: \"String\"\n        }\n      },\n      protectedSettingsFromKeyVault: {\n        serializedName: \"protectedSettingsFromKeyVault\",\n        type: {\n          name: \"Composite\",\n          className: \"CloudServiceVaultAndSecretReference\"\n        }\n      },\n      forceUpdateTag: {\n        serializedName: \"forceUpdateTag\",\n        type: {\n          name: \"String\"\n        }\n      },\n      provisioningState: {\n        serializedName: \"provisioningState\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      rolesAppliedTo: {\n        serializedName: \"rolesAppliedTo\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"String\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const CloudServiceVaultAndSecretReference: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"CloudServiceVaultAndSecretReference\",\n    modelProperties: {\n      sourceVault: {\n        serializedName: \"sourceVault\",\n        type: {\n          name: \"Composite\",\n          className: \"SubResource\"\n        }\n      },\n      secretUrl: {\n        serializedName: \"secretUrl\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const CloudServiceUpdate: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"CloudServiceUpdate\",\n    modelProperties: {\n      tags: {\n        serializedName: \"tags\",\n        type: {\n          name: \"Dictionary\",\n          value: { type: { name: \"String\" } }\n        }\n      }\n    }\n  }\n};\n\nexport const CloudServiceInstanceView: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"CloudServiceInstanceView\",\n    modelProperties: {\n      roleInstance: {\n        serializedName: \"roleInstance\",\n        type: {\n          name: \"Composite\",\n          className: \"InstanceViewStatusesSummary\"\n        }\n      },\n      sdkVersion: {\n        serializedName: \"sdkVersion\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      privateIds: {\n        serializedName: \"privateIds\",\n        readOnly: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"String\"\n            }\n          }\n        }\n      },\n      statuses: {\n        serializedName: \"statuses\",\n        readOnly: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"ResourceInstanceViewStatus\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const InstanceViewStatusesSummary: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"InstanceViewStatusesSummary\",\n    modelProperties: {\n      statusesSummary: {\n        serializedName: \"statusesSummary\",\n        readOnly: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"StatusCodeCount\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const StatusCodeCount: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"StatusCodeCount\",\n    modelProperties: {\n      code: {\n        serializedName: \"code\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      count: {\n        serializedName: \"count\",\n        readOnly: true,\n        type: {\n          name: \"Number\"\n        }\n      }\n    }\n  }\n};\n\nexport const CloudServiceListResult: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"CloudServiceListResult\",\n    modelProperties: {\n      value: {\n        serializedName: \"value\",\n        required: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"CloudService\"\n            }\n          }\n        }\n      },\n      nextLink: {\n        serializedName: \"nextLink\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const RoleInstances: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"RoleInstances\",\n    modelProperties: {\n      roleInstances: {\n        serializedName: \"roleInstances\",\n        required: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"String\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const UpdateDomain: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"UpdateDomain\",\n    modelProperties: {\n      id: {\n        serializedName: \"id\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      name: {\n        serializedName: \"name\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const UpdateDomainListResult: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"UpdateDomainListResult\",\n    modelProperties: {\n      value: {\n        serializedName: \"value\",\n        required: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"UpdateDomain\"\n            }\n          }\n        }\n      },\n      nextLink: {\n        serializedName: \"nextLink\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const OSVersion: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"OSVersion\",\n    modelProperties: {\n      id: {\n        serializedName: \"id\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      name: {\n        serializedName: \"name\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      type: {\n        serializedName: \"type\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      location: {\n        serializedName: \"location\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      properties: {\n        serializedName: \"properties\",\n        type: {\n          name: \"Composite\",\n          className: \"OSVersionProperties\"\n        }\n      }\n    }\n  }\n};\n\nexport const OSVersionProperties: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"OSVersionProperties\",\n    modelProperties: {\n      family: {\n        serializedName: \"family\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      familyLabel: {\n        serializedName: \"familyLabel\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      version: {\n        serializedName: \"version\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      label: {\n        serializedName: \"label\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      isDefault: {\n        serializedName: \"isDefault\",\n        readOnly: true,\n        type: {\n          name: \"Boolean\"\n        }\n      },\n      isActive: {\n        serializedName: \"isActive\",\n        readOnly: true,\n        type: {\n          name: \"Boolean\"\n        }\n      }\n    }\n  }\n};\n\nexport const OSVersionListResult: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"OSVersionListResult\",\n    modelProperties: {\n      value: {\n        serializedName: \"value\",\n        required: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"OSVersion\"\n            }\n          }\n        }\n      },\n      nextLink: {\n        serializedName: \"nextLink\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const OSFamily: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"OSFamily\",\n    modelProperties: {\n      id: {\n        serializedName: \"id\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      name: {\n        serializedName: \"name\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      type: {\n        serializedName: \"type\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      location: {\n        serializedName: \"location\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      properties: {\n        serializedName: \"properties\",\n        type: {\n          name: \"Composite\",\n          className: \"OSFamilyProperties\"\n        }\n      }\n    }\n  }\n};\n\nexport const OSFamilyProperties: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"OSFamilyProperties\",\n    modelProperties: {\n      name: {\n        serializedName: \"name\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      label: {\n        serializedName: \"label\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      versions: {\n        serializedName: \"versions\",\n        readOnly: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"OSVersionPropertiesBase\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const OSVersionPropertiesBase: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"OSVersionPropertiesBase\",\n    modelProperties: {\n      version: {\n        serializedName: \"version\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      label: {\n        serializedName: \"label\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      isDefault: {\n        serializedName: \"isDefault\",\n        readOnly: true,\n        type: {\n          name: \"Boolean\"\n        }\n      },\n      isActive: {\n        serializedName: \"isActive\",\n        readOnly: true,\n        type: {\n          name: \"Boolean\"\n        }\n      }\n    }\n  }\n};\n\nexport const OSFamilyListResult: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"OSFamilyListResult\",\n    modelProperties: {\n      value: {\n        serializedName: \"value\",\n        required: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"OSFamily\"\n            }\n          }\n        }\n      },\n      nextLink: {\n        serializedName: \"nextLink\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const DiskRestorePointReplicationStatus: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"DiskRestorePointReplicationStatus\",\n    modelProperties: {\n      status: {\n        serializedName: \"status\",\n        type: {\n          name: \"Dictionary\",\n          value: { type: { name: \"any\" } }\n        }\n      }\n    }\n  }\n};\n\nexport const CommunityGalleryInfo: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"CommunityGalleryInfo\",\n    modelProperties: {\n      publisherUri: {\n        serializedName: \"publisherUri\",\n        type: {\n          name: \"String\"\n        }\n      },\n      publisherContact: {\n        serializedName: \"publisherContact\",\n        type: {\n          name: \"String\"\n        }\n      },\n      eula: {\n        serializedName: \"eula\",\n        type: {\n          name: \"String\"\n        }\n      },\n      publicNamePrefix: {\n        serializedName: \"publicNamePrefix\",\n        type: {\n          name: \"String\"\n        }\n      },\n      communityGalleryEnabled: {\n        serializedName: \"communityGalleryEnabled\",\n        readOnly: true,\n        type: {\n          name: \"Boolean\"\n        }\n      },\n      publicNames: {\n        serializedName: \"publicNames\",\n        readOnly: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"String\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const GalleryArtifactSource: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"GalleryArtifactSource\",\n    modelProperties: {\n      managedImage: {\n        serializedName: \"managedImage\",\n        type: {\n          name: \"Composite\",\n          className: \"ManagedArtifact\"\n        }\n      }\n    }\n  }\n};\n\nexport const ManagedArtifact: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ManagedArtifact\",\n    modelProperties: {\n      id: {\n        serializedName: \"id\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const SubResourceWithColocationStatus: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"SubResourceWithColocationStatus\",\n    modelProperties: {\n      ...SubResource.type.modelProperties,\n      colocationStatus: {\n        serializedName: \"colocationStatus\",\n        type: {\n          name: \"Composite\",\n          className: \"InstanceViewStatus\"\n        }\n      }\n    }\n  }\n};\n\nexport const VirtualMachineImageResource: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"VirtualMachineImageResource\",\n    modelProperties: {\n      ...SubResource.type.modelProperties,\n      name: {\n        serializedName: \"name\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      location: {\n        serializedName: \"location\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      tags: {\n        serializedName: \"tags\",\n        type: {\n          name: \"Dictionary\",\n          value: { type: { name: \"String\" } }\n        }\n      },\n      extendedLocation: {\n        serializedName: \"extendedLocation\",\n        type: {\n          name: \"Composite\",\n          className: \"ExtendedLocation\"\n        }\n      }\n    }\n  }\n};\n\nexport const ImageReference: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ImageReference\",\n    modelProperties: {\n      ...SubResource.type.modelProperties,\n      publisher: {\n        serializedName: \"publisher\",\n        type: {\n          name: \"String\"\n        }\n      },\n      offer: {\n        serializedName: \"offer\",\n        type: {\n          name: \"String\"\n        }\n      },\n      sku: {\n        serializedName: \"sku\",\n        type: {\n          name: \"String\"\n        }\n      },\n      version: {\n        serializedName: \"version\",\n        type: {\n          name: \"String\"\n        }\n      },\n      exactVersion: {\n        serializedName: \"exactVersion\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      sharedGalleryImageId: {\n        serializedName: \"sharedGalleryImageId\",\n        type: {\n          name: \"String\"\n        }\n      },\n      communityGalleryImageId: {\n        serializedName: \"communityGalleryImageId\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const DiskEncryptionSetParameters: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"DiskEncryptionSetParameters\",\n    modelProperties: {\n      ...SubResource.type.modelProperties\n    }\n  }\n};\n\nexport const ManagedDiskParameters: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ManagedDiskParameters\",\n    modelProperties: {\n      ...SubResource.type.modelProperties,\n      storageAccountType: {\n        serializedName: \"storageAccountType\",\n        type: {\n          name: \"String\"\n        }\n      },\n      diskEncryptionSet: {\n        serializedName: \"diskEncryptionSet\",\n        type: {\n          name: \"Composite\",\n          className: \"DiskEncryptionSetParameters\"\n        }\n      },\n      securityProfile: {\n        serializedName: \"securityProfile\",\n        type: {\n          name: \"Composite\",\n          className: \"VMDiskSecurityProfile\"\n        }\n      }\n    }\n  }\n};\n\nexport const NetworkInterfaceReference: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"NetworkInterfaceReference\",\n    modelProperties: {\n      ...SubResource.type.modelProperties,\n      primary: {\n        serializedName: \"properties.primary\",\n        type: {\n          name: \"Boolean\"\n        }\n      },\n      deleteOption: {\n        serializedName: \"properties.deleteOption\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const VirtualMachineScaleSetIPConfiguration: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"VirtualMachineScaleSetIPConfiguration\",\n    modelProperties: {\n      ...SubResource.type.modelProperties,\n      name: {\n        serializedName: \"name\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      subnet: {\n        serializedName: \"properties.subnet\",\n        type: {\n          name: \"Composite\",\n          className: \"ApiEntityReference\"\n        }\n      },\n      primary: {\n        serializedName: \"properties.primary\",\n        type: {\n          name: \"Boolean\"\n        }\n      },\n      publicIPAddressConfiguration: {\n        serializedName: \"properties.publicIPAddressConfiguration\",\n        type: {\n          name: \"Composite\",\n          className: \"VirtualMachineScaleSetPublicIPAddressConfiguration\"\n        }\n      },\n      privateIPAddressVersion: {\n        serializedName: \"properties.privateIPAddressVersion\",\n        type: {\n          name: \"String\"\n        }\n      },\n      applicationGatewayBackendAddressPools: {\n        serializedName: \"properties.applicationGatewayBackendAddressPools\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"SubResource\"\n            }\n          }\n        }\n      },\n      applicationSecurityGroups: {\n        serializedName: \"properties.applicationSecurityGroups\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"SubResource\"\n            }\n          }\n        }\n      },\n      loadBalancerBackendAddressPools: {\n        serializedName: \"properties.loadBalancerBackendAddressPools\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"SubResource\"\n            }\n          }\n        }\n      },\n      loadBalancerInboundNatPools: {\n        serializedName: \"properties.loadBalancerInboundNatPools\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"SubResource\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const VirtualMachineScaleSetNetworkConfiguration: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"VirtualMachineScaleSetNetworkConfiguration\",\n    modelProperties: {\n      ...SubResource.type.modelProperties,\n      name: {\n        serializedName: \"name\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      primary: {\n        serializedName: \"properties.primary\",\n        type: {\n          name: \"Boolean\"\n        }\n      },\n      enableAcceleratedNetworking: {\n        serializedName: \"properties.enableAcceleratedNetworking\",\n        type: {\n          name: \"Boolean\"\n        }\n      },\n      enableFpga: {\n        serializedName: \"properties.enableFpga\",\n        type: {\n          name: \"Boolean\"\n        }\n      },\n      networkSecurityGroup: {\n        serializedName: \"properties.networkSecurityGroup\",\n        type: {\n          name: \"Composite\",\n          className: \"SubResource\"\n        }\n      },\n      dnsSettings: {\n        serializedName: \"properties.dnsSettings\",\n        type: {\n          name: \"Composite\",\n          className: \"VirtualMachineScaleSetNetworkConfigurationDnsSettings\"\n        }\n      },\n      ipConfigurations: {\n        serializedName: \"properties.ipConfigurations\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"VirtualMachineScaleSetIPConfiguration\"\n            }\n          }\n        }\n      },\n      enableIPForwarding: {\n        serializedName: \"properties.enableIPForwarding\",\n        type: {\n          name: \"Boolean\"\n        }\n      },\n      deleteOption: {\n        serializedName: \"properties.deleteOption\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const VirtualMachineCaptureResult: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"VirtualMachineCaptureResult\",\n    modelProperties: {\n      ...SubResource.type.modelProperties,\n      schema: {\n        serializedName: \"$schema\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      contentVersion: {\n        serializedName: \"contentVersion\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      parameters: {\n        serializedName: \"parameters\",\n        readOnly: true,\n        type: {\n          name: \"Dictionary\",\n          value: { type: { name: \"any\" } }\n        }\n      },\n      resources: {\n        serializedName: \"resources\",\n        readOnly: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Dictionary\",\n              value: { type: { name: \"any\" } }\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const VirtualMachineScaleSetUpdateIPConfiguration: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"VirtualMachineScaleSetUpdateIPConfiguration\",\n    modelProperties: {\n      ...SubResource.type.modelProperties,\n      name: {\n        serializedName: \"name\",\n        type: {\n          name: \"String\"\n        }\n      },\n      subnet: {\n        serializedName: \"properties.subnet\",\n        type: {\n          name: \"Composite\",\n          className: \"ApiEntityReference\"\n        }\n      },\n      primary: {\n        serializedName: \"properties.primary\",\n        type: {\n          name: \"Boolean\"\n        }\n      },\n      publicIPAddressConfiguration: {\n        serializedName: \"properties.publicIPAddressConfiguration\",\n        type: {\n          name: \"Composite\",\n          className: \"VirtualMachineScaleSetUpdatePublicIPAddressConfiguration\"\n        }\n      },\n      privateIPAddressVersion: {\n        serializedName: \"properties.privateIPAddressVersion\",\n        type: {\n          name: \"String\"\n        }\n      },\n      applicationGatewayBackendAddressPools: {\n        serializedName: \"properties.applicationGatewayBackendAddressPools\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"SubResource\"\n            }\n          }\n        }\n      },\n      applicationSecurityGroups: {\n        serializedName: \"properties.applicationSecurityGroups\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"SubResource\"\n            }\n          }\n        }\n      },\n      loadBalancerBackendAddressPools: {\n        serializedName: \"properties.loadBalancerBackendAddressPools\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"SubResource\"\n            }\n          }\n        }\n      },\n      loadBalancerInboundNatPools: {\n        serializedName: \"properties.loadBalancerInboundNatPools\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"SubResource\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const VirtualMachineScaleSetUpdateNetworkConfiguration: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"VirtualMachineScaleSetUpdateNetworkConfiguration\",\n    modelProperties: {\n      ...SubResource.type.modelProperties,\n      name: {\n        serializedName: \"name\",\n        type: {\n          name: \"String\"\n        }\n      },\n      primary: {\n        serializedName: \"properties.primary\",\n        type: {\n          name: \"Boolean\"\n        }\n      },\n      enableAcceleratedNetworking: {\n        serializedName: \"properties.enableAcceleratedNetworking\",\n        type: {\n          name: \"Boolean\"\n        }\n      },\n      enableFpga: {\n        serializedName: \"properties.enableFpga\",\n        type: {\n          name: \"Boolean\"\n        }\n      },\n      networkSecurityGroup: {\n        serializedName: \"properties.networkSecurityGroup\",\n        type: {\n          name: \"Composite\",\n          className: \"SubResource\"\n        }\n      },\n      dnsSettings: {\n        serializedName: \"properties.dnsSettings\",\n        type: {\n          name: \"Composite\",\n          className: \"VirtualMachineScaleSetNetworkConfigurationDnsSettings\"\n        }\n      },\n      ipConfigurations: {\n        serializedName: \"properties.ipConfigurations\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"VirtualMachineScaleSetUpdateIPConfiguration\"\n            }\n          }\n        }\n      },\n      enableIPForwarding: {\n        serializedName: \"properties.enableIPForwarding\",\n        type: {\n          name: \"Boolean\"\n        }\n      },\n      deleteOption: {\n        serializedName: \"properties.deleteOption\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const AvailabilitySet: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"AvailabilitySet\",\n    modelProperties: {\n      ...Resource.type.modelProperties,\n      sku: {\n        serializedName: \"sku\",\n        type: {\n          name: \"Composite\",\n          className: \"Sku\"\n        }\n      },\n      platformUpdateDomainCount: {\n        serializedName: \"properties.platformUpdateDomainCount\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      platformFaultDomainCount: {\n        serializedName: \"properties.platformFaultDomainCount\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      virtualMachines: {\n        serializedName: \"properties.virtualMachines\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"SubResource\"\n            }\n          }\n        }\n      },\n      proximityPlacementGroup: {\n        serializedName: \"properties.proximityPlacementGroup\",\n        type: {\n          name: \"Composite\",\n          className: \"SubResource\"\n        }\n      },\n      statuses: {\n        serializedName: \"properties.statuses\",\n        readOnly: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"InstanceViewStatus\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const ProximityPlacementGroup: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ProximityPlacementGroup\",\n    modelProperties: {\n      ...Resource.type.modelProperties,\n      proximityPlacementGroupType: {\n        serializedName: \"properties.proximityPlacementGroupType\",\n        type: {\n          name: \"String\"\n        }\n      },\n      virtualMachines: {\n        serializedName: \"properties.virtualMachines\",\n        readOnly: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"SubResourceWithColocationStatus\"\n            }\n          }\n        }\n      },\n      virtualMachineScaleSets: {\n        serializedName: \"properties.virtualMachineScaleSets\",\n        readOnly: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"SubResourceWithColocationStatus\"\n            }\n          }\n        }\n      },\n      availabilitySets: {\n        serializedName: \"properties.availabilitySets\",\n        readOnly: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"SubResourceWithColocationStatus\"\n            }\n          }\n        }\n      },\n      colocationStatus: {\n        serializedName: \"properties.colocationStatus\",\n        type: {\n          name: \"Composite\",\n          className: \"InstanceViewStatus\"\n        }\n      }\n    }\n  }\n};\n\nexport const DedicatedHostGroup: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"DedicatedHostGroup\",\n    modelProperties: {\n      ...Resource.type.modelProperties,\n      zones: {\n        serializedName: \"zones\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"String\"\n            }\n          }\n        }\n      },\n      platformFaultDomainCount: {\n        constraints: {\n          InclusiveMinimum: 1\n        },\n        serializedName: \"properties.platformFaultDomainCount\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      hosts: {\n        serializedName: \"properties.hosts\",\n        readOnly: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"SubResourceReadOnly\"\n            }\n          }\n        }\n      },\n      instanceView: {\n        serializedName: \"properties.instanceView\",\n        type: {\n          name: \"Composite\",\n          className: \"DedicatedHostGroupInstanceView\"\n        }\n      },\n      supportAutomaticPlacement: {\n        serializedName: \"properties.supportAutomaticPlacement\",\n        type: {\n          name: \"Boolean\"\n        }\n      }\n    }\n  }\n};\n\nexport const DedicatedHost: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"DedicatedHost\",\n    modelProperties: {\n      ...Resource.type.modelProperties,\n      sku: {\n        serializedName: \"sku\",\n        type: {\n          name: \"Composite\",\n          className: \"Sku\"\n        }\n      },\n      platformFaultDomain: {\n        constraints: {\n          InclusiveMinimum: 0\n        },\n        serializedName: \"properties.platformFaultDomain\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      autoReplaceOnFailure: {\n        serializedName: \"properties.autoReplaceOnFailure\",\n        type: {\n          name: \"Boolean\"\n        }\n      },\n      hostId: {\n        serializedName: \"properties.hostId\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      virtualMachines: {\n        serializedName: \"properties.virtualMachines\",\n        readOnly: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"SubResourceReadOnly\"\n            }\n          }\n        }\n      },\n      licenseType: {\n        serializedName: \"properties.licenseType\",\n        type: {\n          name: \"Enum\",\n          allowedValues: [\n            \"None\",\n            \"Windows_Server_Hybrid\",\n            \"Windows_Server_Perpetual\"\n          ]\n        }\n      },\n      provisioningTime: {\n        serializedName: \"properties.provisioningTime\",\n        readOnly: true,\n        type: {\n          name: \"DateTime\"\n        }\n      },\n      provisioningState: {\n        serializedName: \"properties.provisioningState\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      instanceView: {\n        serializedName: \"properties.instanceView\",\n        type: {\n          name: \"Composite\",\n          className: \"DedicatedHostInstanceView\"\n        }\n      },\n      timeCreated: {\n        serializedName: \"properties.timeCreated\",\n        readOnly: true,\n        type: {\n          name: \"DateTime\"\n        }\n      }\n    }\n  }\n};\n\nexport const SshPublicKeyResource: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"SshPublicKeyResource\",\n    modelProperties: {\n      ...Resource.type.modelProperties,\n      publicKey: {\n        serializedName: \"properties.publicKey\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const VirtualMachineExtensionImage: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"VirtualMachineExtensionImage\",\n    modelProperties: {\n      ...Resource.type.modelProperties,\n      operatingSystem: {\n        serializedName: \"properties.operatingSystem\",\n        type: {\n          name: \"String\"\n        }\n      },\n      computeRole: {\n        serializedName: \"properties.computeRole\",\n        type: {\n          name: \"String\"\n        }\n      },\n      handlerSchema: {\n        serializedName: \"properties.handlerSchema\",\n        type: {\n          name: \"String\"\n        }\n      },\n      vmScaleSetEnabled: {\n        serializedName: \"properties.vmScaleSetEnabled\",\n        type: {\n          name: \"Boolean\"\n        }\n      },\n      supportsMultipleExtensions: {\n        serializedName: \"properties.supportsMultipleExtensions\",\n        type: {\n          name: \"Boolean\"\n        }\n      }\n    }\n  }\n};\n\nexport const VirtualMachineExtension: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"VirtualMachineExtension\",\n    modelProperties: {\n      ...Resource.type.modelProperties,\n      forceUpdateTag: {\n        serializedName: \"properties.forceUpdateTag\",\n        type: {\n          name: \"String\"\n        }\n      },\n      publisher: {\n        serializedName: \"properties.publisher\",\n        type: {\n          name: \"String\"\n        }\n      },\n      typePropertiesType: {\n        serializedName: \"properties.type\",\n        type: {\n          name: \"String\"\n        }\n      },\n      typeHandlerVersion: {\n        serializedName: \"properties.typeHandlerVersion\",\n        type: {\n          name: \"String\"\n        }\n      },\n      autoUpgradeMinorVersion: {\n        serializedName: \"properties.autoUpgradeMinorVersion\",\n        type: {\n          name: \"Boolean\"\n        }\n      },\n      enableAutomaticUpgrade: {\n        serializedName: \"properties.enableAutomaticUpgrade\",\n        type: {\n          name: \"Boolean\"\n        }\n      },\n      settings: {\n        serializedName: \"properties.settings\",\n        type: {\n          name: \"Dictionary\",\n          value: { type: { name: \"any\" } }\n        }\n      },\n      protectedSettings: {\n        serializedName: \"properties.protectedSettings\",\n        type: {\n          name: \"Dictionary\",\n          value: { type: { name: \"any\" } }\n        }\n      },\n      provisioningState: {\n        serializedName: \"properties.provisioningState\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      instanceView: {\n        serializedName: \"properties.instanceView\",\n        type: {\n          name: \"Composite\",\n          className: \"VirtualMachineExtensionInstanceView\"\n        }\n      },\n      suppressFailures: {\n        serializedName: \"properties.suppressFailures\",\n        type: {\n          name: \"Boolean\"\n        }\n      },\n      protectedSettingsFromKeyVault: {\n        serializedName: \"properties.protectedSettingsFromKeyVault\",\n        type: {\n          name: \"Dictionary\",\n          value: { type: { name: \"any\" } }\n        }\n      }\n    }\n  }\n};\n\nexport const VirtualMachine: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"VirtualMachine\",\n    modelProperties: {\n      ...Resource.type.modelProperties,\n      plan: {\n        serializedName: \"plan\",\n        type: {\n          name: \"Composite\",\n          className: \"Plan\"\n        }\n      },\n      resources: {\n        serializedName: \"resources\",\n        readOnly: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"VirtualMachineExtension\"\n            }\n          }\n        }\n      },\n      identity: {\n        serializedName: \"identity\",\n        type: {\n          name: \"Composite\",\n          className: \"VirtualMachineIdentity\"\n        }\n      },\n      zones: {\n        serializedName: \"zones\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"String\"\n            }\n          }\n        }\n      },\n      extendedLocation: {\n        serializedName: \"extendedLocation\",\n        type: {\n          name: \"Composite\",\n          className: \"ExtendedLocation\"\n        }\n      },\n      hardwareProfile: {\n        serializedName: \"properties.hardwareProfile\",\n        type: {\n          name: \"Composite\",\n          className: \"HardwareProfile\"\n        }\n      },\n      storageProfile: {\n        serializedName: \"properties.storageProfile\",\n        type: {\n          name: \"Composite\",\n          className: \"StorageProfile\"\n        }\n      },\n      additionalCapabilities: {\n        serializedName: \"properties.additionalCapabilities\",\n        type: {\n          name: \"Composite\",\n          className: \"AdditionalCapabilities\"\n        }\n      },\n      osProfile: {\n        serializedName: \"properties.osProfile\",\n        type: {\n          name: \"Composite\",\n          className: \"OSProfile\"\n        }\n      },\n      networkProfile: {\n        serializedName: \"properties.networkProfile\",\n        type: {\n          name: \"Composite\",\n          className: \"NetworkProfile\"\n        }\n      },\n      securityProfile: {\n        serializedName: \"properties.securityProfile\",\n        type: {\n          name: \"Composite\",\n          className: \"SecurityProfile\"\n        }\n      },\n      diagnosticsProfile: {\n        serializedName: \"properties.diagnosticsProfile\",\n        type: {\n          name: \"Composite\",\n          className: \"DiagnosticsProfile\"\n        }\n      },\n      availabilitySet: {\n        serializedName: \"properties.availabilitySet\",\n        type: {\n          name: \"Composite\",\n          className: \"SubResource\"\n        }\n      },\n      virtualMachineScaleSet: {\n        serializedName: \"properties.virtualMachineScaleSet\",\n        type: {\n          name: \"Composite\",\n          className: \"SubResource\"\n        }\n      },\n      proximityPlacementGroup: {\n        serializedName: \"properties.proximityPlacementGroup\",\n        type: {\n          name: \"Composite\",\n          className: \"SubResource\"\n        }\n      },\n      priority: {\n        serializedName: \"properties.priority\",\n        type: {\n          name: \"String\"\n        }\n      },\n      evictionPolicy: {\n        serializedName: \"properties.evictionPolicy\",\n        type: {\n          name: \"String\"\n        }\n      },\n      billingProfile: {\n        serializedName: \"properties.billingProfile\",\n        type: {\n          name: \"Composite\",\n          className: \"BillingProfile\"\n        }\n      },\n      host: {\n        serializedName: \"properties.host\",\n        type: {\n          name: \"Composite\",\n          className: \"SubResource\"\n        }\n      },\n      hostGroup: {\n        serializedName: \"properties.hostGroup\",\n        type: {\n          name: \"Composite\",\n          className: \"SubResource\"\n        }\n      },\n      provisioningState: {\n        serializedName: \"properties.provisioningState\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      instanceView: {\n        serializedName: \"properties.instanceView\",\n        type: {\n          name: \"Composite\",\n          className: \"VirtualMachineInstanceView\"\n        }\n      },\n      licenseType: {\n        serializedName: \"properties.licenseType\",\n        type: {\n          name: \"String\"\n        }\n      },\n      vmId: {\n        serializedName: \"properties.vmId\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      extensionsTimeBudget: {\n        serializedName: \"properties.extensionsTimeBudget\",\n        type: {\n          name: \"String\"\n        }\n      },\n      platformFaultDomain: {\n        serializedName: \"properties.platformFaultDomain\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      scheduledEventsProfile: {\n        serializedName: \"properties.scheduledEventsProfile\",\n        type: {\n          name: \"Composite\",\n          className: \"ScheduledEventsProfile\"\n        }\n      },\n      userData: {\n        serializedName: \"properties.userData\",\n        type: {\n          name: \"String\"\n        }\n      },\n      capacityReservation: {\n        serializedName: \"properties.capacityReservation\",\n        type: {\n          name: \"Composite\",\n          className: \"CapacityReservationProfile\"\n        }\n      },\n      applicationProfile: {\n        serializedName: \"properties.applicationProfile\",\n        type: {\n          name: \"Composite\",\n          className: \"ApplicationProfile\"\n        }\n      },\n      timeCreated: {\n        serializedName: \"properties.timeCreated\",\n        readOnly: true,\n        type: {\n          name: \"DateTime\"\n        }\n      }\n    }\n  }\n};\n\nexport const VirtualMachineScaleSet: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"VirtualMachineScaleSet\",\n    modelProperties: {\n      ...Resource.type.modelProperties,\n      sku: {\n        serializedName: \"sku\",\n        type: {\n          name: \"Composite\",\n          className: \"Sku\"\n        }\n      },\n      plan: {\n        serializedName: \"plan\",\n        type: {\n          name: \"Composite\",\n          className: \"Plan\"\n        }\n      },\n      identity: {\n        serializedName: \"identity\",\n        type: {\n          name: \"Composite\",\n          className: \"VirtualMachineScaleSetIdentity\"\n        }\n      },\n      zones: {\n        serializedName: \"zones\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"String\"\n            }\n          }\n        }\n      },\n      extendedLocation: {\n        serializedName: \"extendedLocation\",\n        type: {\n          name: \"Composite\",\n          className: \"ExtendedLocation\"\n        }\n      },\n      upgradePolicy: {\n        serializedName: \"properties.upgradePolicy\",\n        type: {\n          name: \"Composite\",\n          className: \"UpgradePolicy\"\n        }\n      },\n      automaticRepairsPolicy: {\n        serializedName: \"properties.automaticRepairsPolicy\",\n        type: {\n          name: \"Composite\",\n          className: \"AutomaticRepairsPolicy\"\n        }\n      },\n      virtualMachineProfile: {\n        serializedName: \"properties.virtualMachineProfile\",\n        type: {\n          name: \"Composite\",\n          className: \"VirtualMachineScaleSetVMProfile\"\n        }\n      },\n      provisioningState: {\n        serializedName: \"properties.provisioningState\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      overprovision: {\n        serializedName: \"properties.overprovision\",\n        type: {\n          name: \"Boolean\"\n        }\n      },\n      doNotRunExtensionsOnOverprovisionedVMs: {\n        serializedName: \"properties.doNotRunExtensionsOnOverprovisionedVMs\",\n        type: {\n          name: \"Boolean\"\n        }\n      },\n      uniqueId: {\n        serializedName: \"properties.uniqueId\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      singlePlacementGroup: {\n        serializedName: \"properties.singlePlacementGroup\",\n        type: {\n          name: \"Boolean\"\n        }\n      },\n      zoneBalance: {\n        serializedName: \"properties.zoneBalance\",\n        type: {\n          name: \"Boolean\"\n        }\n      },\n      platformFaultDomainCount: {\n        serializedName: \"properties.platformFaultDomainCount\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      proximityPlacementGroup: {\n        serializedName: \"properties.proximityPlacementGroup\",\n        type: {\n          name: \"Composite\",\n          className: \"SubResource\"\n        }\n      },\n      hostGroup: {\n        serializedName: \"properties.hostGroup\",\n        type: {\n          name: \"Composite\",\n          className: \"SubResource\"\n        }\n      },\n      additionalCapabilities: {\n        serializedName: \"properties.additionalCapabilities\",\n        type: {\n          name: \"Composite\",\n          className: \"AdditionalCapabilities\"\n        }\n      },\n      scaleInPolicy: {\n        serializedName: \"properties.scaleInPolicy\",\n        type: {\n          name: \"Composite\",\n          className: \"ScaleInPolicy\"\n        }\n      },\n      orchestrationMode: {\n        serializedName: \"properties.orchestrationMode\",\n        type: {\n          name: \"String\"\n        }\n      },\n      spotRestorePolicy: {\n        serializedName: \"properties.spotRestorePolicy\",\n        type: {\n          name: \"Composite\",\n          className: \"SpotRestorePolicy\"\n        }\n      },\n      timeCreated: {\n        serializedName: \"properties.timeCreated\",\n        readOnly: true,\n        type: {\n          name: \"DateTime\"\n        }\n      }\n    }\n  }\n};\n\nexport const Image: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"Image\",\n    modelProperties: {\n      ...Resource.type.modelProperties,\n      extendedLocation: {\n        serializedName: \"extendedLocation\",\n        type: {\n          name: \"Composite\",\n          className: \"ExtendedLocation\"\n        }\n      },\n      sourceVirtualMachine: {\n        serializedName: \"properties.sourceVirtualMachine\",\n        type: {\n          name: \"Composite\",\n          className: \"SubResource\"\n        }\n      },\n      storageProfile: {\n        serializedName: \"properties.storageProfile\",\n        type: {\n          name: \"Composite\",\n          className: \"ImageStorageProfile\"\n        }\n      },\n      provisioningState: {\n        serializedName: \"properties.provisioningState\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      hyperVGeneration: {\n        serializedName: \"properties.hyperVGeneration\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const RestorePointCollection: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"RestorePointCollection\",\n    modelProperties: {\n      ...Resource.type.modelProperties,\n      source: {\n        serializedName: \"properties.source\",\n        type: {\n          name: \"Composite\",\n          className: \"RestorePointCollectionSourceProperties\"\n        }\n      },\n      provisioningState: {\n        serializedName: \"properties.provisioningState\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      restorePointCollectionId: {\n        serializedName: \"properties.restorePointCollectionId\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      restorePoints: {\n        serializedName: \"properties.restorePoints\",\n        readOnly: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"RestorePoint\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const CapacityReservationGroup: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"CapacityReservationGroup\",\n    modelProperties: {\n      ...Resource.type.modelProperties,\n      zones: {\n        serializedName: \"zones\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"String\"\n            }\n          }\n        }\n      },\n      capacityReservations: {\n        serializedName: \"properties.capacityReservations\",\n        readOnly: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"SubResourceReadOnly\"\n            }\n          }\n        }\n      },\n      virtualMachinesAssociated: {\n        serializedName: \"properties.virtualMachinesAssociated\",\n        readOnly: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"SubResourceReadOnly\"\n            }\n          }\n        }\n      },\n      instanceView: {\n        serializedName: \"properties.instanceView\",\n        type: {\n          name: \"Composite\",\n          className: \"CapacityReservationGroupInstanceView\"\n        }\n      }\n    }\n  }\n};\n\nexport const CapacityReservation: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"CapacityReservation\",\n    modelProperties: {\n      ...Resource.type.modelProperties,\n      sku: {\n        serializedName: \"sku\",\n        type: {\n          name: \"Composite\",\n          className: \"Sku\"\n        }\n      },\n      zones: {\n        serializedName: \"zones\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"String\"\n            }\n          }\n        }\n      },\n      reservationId: {\n        serializedName: \"properties.reservationId\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      virtualMachinesAssociated: {\n        serializedName: \"properties.virtualMachinesAssociated\",\n        readOnly: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"SubResourceReadOnly\"\n            }\n          }\n        }\n      },\n      provisioningTime: {\n        serializedName: \"properties.provisioningTime\",\n        readOnly: true,\n        type: {\n          name: \"DateTime\"\n        }\n      },\n      provisioningState: {\n        serializedName: \"properties.provisioningState\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      instanceView: {\n        serializedName: \"properties.instanceView\",\n        type: {\n          name: \"Composite\",\n          className: \"CapacityReservationInstanceView\"\n        }\n      },\n      timeCreated: {\n        serializedName: \"properties.timeCreated\",\n        readOnly: true,\n        type: {\n          name: \"DateTime\"\n        }\n      }\n    }\n  }\n};\n\nexport const RollingUpgradeStatusInfo: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"RollingUpgradeStatusInfo\",\n    modelProperties: {\n      ...Resource.type.modelProperties,\n      policy: {\n        serializedName: \"properties.policy\",\n        type: {\n          name: \"Composite\",\n          className: \"RollingUpgradePolicy\"\n        }\n      },\n      runningStatus: {\n        serializedName: \"properties.runningStatus\",\n        type: {\n          name: \"Composite\",\n          className: \"RollingUpgradeRunningStatus\"\n        }\n      },\n      progress: {\n        serializedName: \"properties.progress\",\n        type: {\n          name: \"Composite\",\n          className: \"RollingUpgradeProgressInfo\"\n        }\n      },\n      error: {\n        serializedName: \"properties.error\",\n        type: {\n          name: \"Composite\",\n          className: \"ApiError\"\n        }\n      }\n    }\n  }\n};\n\nexport const VirtualMachineScaleSetVM: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"VirtualMachineScaleSetVM\",\n    modelProperties: {\n      ...Resource.type.modelProperties,\n      instanceId: {\n        serializedName: \"instanceId\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      sku: {\n        serializedName: \"sku\",\n        type: {\n          name: \"Composite\",\n          className: \"Sku\"\n        }\n      },\n      plan: {\n        serializedName: \"plan\",\n        type: {\n          name: \"Composite\",\n          className: \"Plan\"\n        }\n      },\n      resources: {\n        serializedName: \"resources\",\n        readOnly: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"VirtualMachineExtension\"\n            }\n          }\n        }\n      },\n      zones: {\n        serializedName: \"zones\",\n        readOnly: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"String\"\n            }\n          }\n        }\n      },\n      latestModelApplied: {\n        serializedName: \"properties.latestModelApplied\",\n        readOnly: true,\n        type: {\n          name: \"Boolean\"\n        }\n      },\n      vmId: {\n        serializedName: \"properties.vmId\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      instanceView: {\n        serializedName: \"properties.instanceView\",\n        type: {\n          name: \"Composite\",\n          className: \"VirtualMachineScaleSetVMInstanceView\"\n        }\n      },\n      hardwareProfile: {\n        serializedName: \"properties.hardwareProfile\",\n        type: {\n          name: \"Composite\",\n          className: \"HardwareProfile\"\n        }\n      },\n      storageProfile: {\n        serializedName: \"properties.storageProfile\",\n        type: {\n          name: \"Composite\",\n          className: \"StorageProfile\"\n        }\n      },\n      additionalCapabilities: {\n        serializedName: \"properties.additionalCapabilities\",\n        type: {\n          name: \"Composite\",\n          className: \"AdditionalCapabilities\"\n        }\n      },\n      osProfile: {\n        serializedName: \"properties.osProfile\",\n        type: {\n          name: \"Composite\",\n          className: \"OSProfile\"\n        }\n      },\n      securityProfile: {\n        serializedName: \"properties.securityProfile\",\n        type: {\n          name: \"Composite\",\n          className: \"SecurityProfile\"\n        }\n      },\n      networkProfile: {\n        serializedName: \"properties.networkProfile\",\n        type: {\n          name: \"Composite\",\n          className: \"NetworkProfile\"\n        }\n      },\n      networkProfileConfiguration: {\n        serializedName: \"properties.networkProfileConfiguration\",\n        type: {\n          name: \"Composite\",\n          className: \"VirtualMachineScaleSetVMNetworkProfileConfiguration\"\n        }\n      },\n      diagnosticsProfile: {\n        serializedName: \"properties.diagnosticsProfile\",\n        type: {\n          name: \"Composite\",\n          className: \"DiagnosticsProfile\"\n        }\n      },\n      availabilitySet: {\n        serializedName: \"properties.availabilitySet\",\n        type: {\n          name: \"Composite\",\n          className: \"SubResource\"\n        }\n      },\n      provisioningState: {\n        serializedName: \"properties.provisioningState\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      licenseType: {\n        serializedName: \"properties.licenseType\",\n        type: {\n          name: \"String\"\n        }\n      },\n      modelDefinitionApplied: {\n        serializedName: \"properties.modelDefinitionApplied\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      protectionPolicy: {\n        serializedName: \"properties.protectionPolicy\",\n        type: {\n          name: \"Composite\",\n          className: \"VirtualMachineScaleSetVMProtectionPolicy\"\n        }\n      },\n      userData: {\n        serializedName: \"properties.userData\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const VirtualMachineRunCommand: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"VirtualMachineRunCommand\",\n    modelProperties: {\n      ...Resource.type.modelProperties,\n      source: {\n        serializedName: \"properties.source\",\n        type: {\n          name: \"Composite\",\n          className: \"VirtualMachineRunCommandScriptSource\"\n        }\n      },\n      parameters: {\n        serializedName: \"properties.parameters\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"RunCommandInputParameter\"\n            }\n          }\n        }\n      },\n      protectedParameters: {\n        serializedName: \"properties.protectedParameters\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"RunCommandInputParameter\"\n            }\n          }\n        }\n      },\n      asyncExecution: {\n        defaultValue: false,\n        serializedName: \"properties.asyncExecution\",\n        type: {\n          name: \"Boolean\"\n        }\n      },\n      runAsUser: {\n        serializedName: \"properties.runAsUser\",\n        type: {\n          name: \"String\"\n        }\n      },\n      runAsPassword: {\n        serializedName: \"properties.runAsPassword\",\n        type: {\n          name: \"String\"\n        }\n      },\n      timeoutInSeconds: {\n        serializedName: \"properties.timeoutInSeconds\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      outputBlobUri: {\n        serializedName: \"properties.outputBlobUri\",\n        type: {\n          name: \"String\"\n        }\n      },\n      errorBlobUri: {\n        serializedName: \"properties.errorBlobUri\",\n        type: {\n          name: \"String\"\n        }\n      },\n      provisioningState: {\n        serializedName: \"properties.provisioningState\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      instanceView: {\n        serializedName: \"properties.instanceView\",\n        type: {\n          name: \"Composite\",\n          className: \"VirtualMachineRunCommandInstanceView\"\n        }\n      }\n    }\n  }\n};\n\nexport const Disk: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"Disk\",\n    modelProperties: {\n      ...Resource.type.modelProperties,\n      managedBy: {\n        serializedName: \"managedBy\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      managedByExtended: {\n        serializedName: \"managedByExtended\",\n        readOnly: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"String\"\n            }\n          }\n        }\n      },\n      sku: {\n        serializedName: \"sku\",\n        type: {\n          name: \"Composite\",\n          className: \"DiskSku\"\n        }\n      },\n      zones: {\n        serializedName: \"zones\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"String\"\n            }\n          }\n        }\n      },\n      extendedLocation: {\n        serializedName: \"extendedLocation\",\n        type: {\n          name: \"Composite\",\n          className: \"ExtendedLocation\"\n        }\n      },\n      timeCreated: {\n        serializedName: \"properties.timeCreated\",\n        readOnly: true,\n        type: {\n          name: \"DateTime\"\n        }\n      },\n      osType: {\n        serializedName: \"properties.osType\",\n        type: {\n          name: \"Enum\",\n          allowedValues: [\"Windows\", \"Linux\"]\n        }\n      },\n      hyperVGeneration: {\n        serializedName: \"properties.hyperVGeneration\",\n        type: {\n          name: \"String\"\n        }\n      },\n      purchasePlan: {\n        serializedName: \"properties.purchasePlan\",\n        type: {\n          name: \"Composite\",\n          className: \"PurchasePlanAutoGenerated\"\n        }\n      },\n      supportedCapabilities: {\n        serializedName: \"properties.supportedCapabilities\",\n        type: {\n          name: \"Composite\",\n          className: \"SupportedCapabilities\"\n        }\n      },\n      creationData: {\n        serializedName: \"properties.creationData\",\n        type: {\n          name: \"Composite\",\n          className: \"CreationData\"\n        }\n      },\n      diskSizeGB: {\n        serializedName: \"properties.diskSizeGB\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      diskSizeBytes: {\n        serializedName: \"properties.diskSizeBytes\",\n        readOnly: true,\n        type: {\n          name: \"Number\"\n        }\n      },\n      uniqueId: {\n        serializedName: \"properties.uniqueId\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      encryptionSettingsCollection: {\n        serializedName: \"properties.encryptionSettingsCollection\",\n        type: {\n          name: \"Composite\",\n          className: \"EncryptionSettingsCollection\"\n        }\n      },\n      provisioningState: {\n        serializedName: \"properties.provisioningState\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      diskIopsReadWrite: {\n        serializedName: \"properties.diskIOPSReadWrite\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      diskMBpsReadWrite: {\n        serializedName: \"properties.diskMBpsReadWrite\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      diskIopsReadOnly: {\n        serializedName: \"properties.diskIOPSReadOnly\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      diskMBpsReadOnly: {\n        serializedName: \"properties.diskMBpsReadOnly\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      diskState: {\n        serializedName: \"properties.diskState\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      encryption: {\n        serializedName: \"properties.encryption\",\n        type: {\n          name: \"Composite\",\n          className: \"Encryption\"\n        }\n      },\n      maxShares: {\n        serializedName: \"properties.maxShares\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      shareInfo: {\n        serializedName: \"properties.shareInfo\",\n        readOnly: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"ShareInfoElement\"\n            }\n          }\n        }\n      },\n      networkAccessPolicy: {\n        serializedName: \"properties.networkAccessPolicy\",\n        type: {\n          name: \"String\"\n        }\n      },\n      diskAccessId: {\n        serializedName: \"properties.diskAccessId\",\n        type: {\n          name: \"String\"\n        }\n      },\n      tier: {\n        serializedName: \"properties.tier\",\n        type: {\n          name: \"String\"\n        }\n      },\n      burstingEnabled: {\n        serializedName: \"properties.burstingEnabled\",\n        type: {\n          name: \"Boolean\"\n        }\n      },\n      propertyUpdatesInProgress: {\n        serializedName: \"properties.propertyUpdatesInProgress\",\n        type: {\n          name: \"Composite\",\n          className: \"PropertyUpdatesInProgress\"\n        }\n      },\n      supportsHibernation: {\n        serializedName: \"properties.supportsHibernation\",\n        type: {\n          name: \"Boolean\"\n        }\n      },\n      securityProfile: {\n        serializedName: \"properties.securityProfile\",\n        type: {\n          name: \"Composite\",\n          className: \"DiskSecurityProfile\"\n        }\n      },\n      completionPercent: {\n        serializedName: \"properties.completionPercent\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      publicNetworkAccess: {\n        serializedName: \"properties.publicNetworkAccess\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const Snapshot: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"Snapshot\",\n    modelProperties: {\n      ...Resource.type.modelProperties,\n      managedBy: {\n        serializedName: \"managedBy\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      sku: {\n        serializedName: \"sku\",\n        type: {\n          name: \"Composite\",\n          className: \"SnapshotSku\"\n        }\n      },\n      extendedLocation: {\n        serializedName: \"extendedLocation\",\n        type: {\n          name: \"Composite\",\n          className: \"ExtendedLocation\"\n        }\n      },\n      timeCreated: {\n        serializedName: \"properties.timeCreated\",\n        readOnly: true,\n        type: {\n          name: \"DateTime\"\n        }\n      },\n      osType: {\n        serializedName: \"properties.osType\",\n        type: {\n          name: \"Enum\",\n          allowedValues: [\"Windows\", \"Linux\"]\n        }\n      },\n      hyperVGeneration: {\n        serializedName: \"properties.hyperVGeneration\",\n        type: {\n          name: \"String\"\n        }\n      },\n      purchasePlan: {\n        serializedName: \"properties.purchasePlan\",\n        type: {\n          name: \"Composite\",\n          className: \"PurchasePlanAutoGenerated\"\n        }\n      },\n      supportedCapabilities: {\n        serializedName: \"properties.supportedCapabilities\",\n        type: {\n          name: \"Composite\",\n          className: \"SupportedCapabilities\"\n        }\n      },\n      creationData: {\n        serializedName: \"properties.creationData\",\n        type: {\n          name: \"Composite\",\n          className: \"CreationData\"\n        }\n      },\n      diskSizeGB: {\n        serializedName: \"properties.diskSizeGB\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      diskSizeBytes: {\n        serializedName: \"properties.diskSizeBytes\",\n        readOnly: true,\n        type: {\n          name: \"Number\"\n        }\n      },\n      diskState: {\n        serializedName: \"properties.diskState\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      uniqueId: {\n        serializedName: \"properties.uniqueId\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      encryptionSettingsCollection: {\n        serializedName: \"properties.encryptionSettingsCollection\",\n        type: {\n          name: \"Composite\",\n          className: \"EncryptionSettingsCollection\"\n        }\n      },\n      provisioningState: {\n        serializedName: \"properties.provisioningState\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      incremental: {\n        serializedName: \"properties.incremental\",\n        type: {\n          name: \"Boolean\"\n        }\n      },\n      encryption: {\n        serializedName: \"properties.encryption\",\n        type: {\n          name: \"Composite\",\n          className: \"Encryption\"\n        }\n      },\n      networkAccessPolicy: {\n        serializedName: \"properties.networkAccessPolicy\",\n        type: {\n          name: \"String\"\n        }\n      },\n      diskAccessId: {\n        serializedName: \"properties.diskAccessId\",\n        type: {\n          name: \"String\"\n        }\n      },\n      securityProfile: {\n        serializedName: \"properties.securityProfile\",\n        type: {\n          name: \"Composite\",\n          className: \"DiskSecurityProfile\"\n        }\n      },\n      supportsHibernation: {\n        serializedName: \"properties.supportsHibernation\",\n        type: {\n          name: \"Boolean\"\n        }\n      },\n      publicNetworkAccess: {\n        serializedName: \"properties.publicNetworkAccess\",\n        type: {\n          name: \"String\"\n        }\n      },\n      completionPercent: {\n        serializedName: \"properties.completionPercent\",\n        type: {\n          name: \"Number\"\n        }\n      }\n    }\n  }\n};\n\nexport const DiskEncryptionSet: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"DiskEncryptionSet\",\n    modelProperties: {\n      ...Resource.type.modelProperties,\n      identity: {\n        serializedName: \"identity\",\n        type: {\n          name: \"Composite\",\n          className: \"EncryptionSetIdentity\"\n        }\n      },\n      encryptionType: {\n        serializedName: \"properties.encryptionType\",\n        type: {\n          name: \"String\"\n        }\n      },\n      activeKey: {\n        serializedName: \"properties.activeKey\",\n        type: {\n          name: \"Composite\",\n          className: \"KeyForDiskEncryptionSet\"\n        }\n      },\n      previousKeys: {\n        serializedName: \"properties.previousKeys\",\n        readOnly: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"KeyForDiskEncryptionSet\"\n            }\n          }\n        }\n      },\n      provisioningState: {\n        serializedName: \"properties.provisioningState\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      rotationToLatestKeyVersionEnabled: {\n        serializedName: \"properties.rotationToLatestKeyVersionEnabled\",\n        type: {\n          name: \"Boolean\"\n        }\n      },\n      lastKeyRotationTimestamp: {\n        serializedName: \"properties.lastKeyRotationTimestamp\",\n        readOnly: true,\n        type: {\n          name: \"DateTime\"\n        }\n      },\n      autoKeyRotationError: {\n        serializedName: \"properties.autoKeyRotationError\",\n        type: {\n          name: \"Composite\",\n          className: \"ApiError\"\n        }\n      }\n    }\n  }\n};\n\nexport const DiskAccess: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"DiskAccess\",\n    modelProperties: {\n      ...Resource.type.modelProperties,\n      extendedLocation: {\n        serializedName: \"extendedLocation\",\n        type: {\n          name: \"Composite\",\n          className: \"ExtendedLocation\"\n        }\n      },\n      privateEndpointConnections: {\n        serializedName: \"properties.privateEndpointConnections\",\n        readOnly: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"PrivateEndpointConnection\"\n            }\n          }\n        }\n      },\n      provisioningState: {\n        serializedName: \"properties.provisioningState\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      timeCreated: {\n        serializedName: \"properties.timeCreated\",\n        readOnly: true,\n        type: {\n          name: \"DateTime\"\n        }\n      }\n    }\n  }\n};\n\nexport const Gallery: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"Gallery\",\n    modelProperties: {\n      ...Resource.type.modelProperties,\n      description: {\n        serializedName: \"properties.description\",\n        type: {\n          name: \"String\"\n        }\n      },\n      identifier: {\n        serializedName: \"properties.identifier\",\n        type: {\n          name: \"Composite\",\n          className: \"GalleryIdentifier\"\n        }\n      },\n      provisioningState: {\n        serializedName: \"properties.provisioningState\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      sharingProfile: {\n        serializedName: \"properties.sharingProfile\",\n        type: {\n          name: \"Composite\",\n          className: \"SharingProfile\"\n        }\n      },\n      softDeletePolicy: {\n        serializedName: \"properties.softDeletePolicy\",\n        type: {\n          name: \"Composite\",\n          className: \"SoftDeletePolicy\"\n        }\n      },\n      sharingStatus: {\n        serializedName: \"properties.sharingStatus\",\n        type: {\n          name: \"Composite\",\n          className: \"SharingStatus\"\n        }\n      }\n    }\n  }\n};\n\nexport const GalleryImage: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"GalleryImage\",\n    modelProperties: {\n      ...Resource.type.modelProperties,\n      description: {\n        serializedName: \"properties.description\",\n        type: {\n          name: \"String\"\n        }\n      },\n      eula: {\n        serializedName: \"properties.eula\",\n        type: {\n          name: \"String\"\n        }\n      },\n      privacyStatementUri: {\n        serializedName: \"properties.privacyStatementUri\",\n        type: {\n          name: \"String\"\n        }\n      },\n      releaseNoteUri: {\n        serializedName: \"properties.releaseNoteUri\",\n        type: {\n          name: \"String\"\n        }\n      },\n      osType: {\n        serializedName: \"properties.osType\",\n        type: {\n          name: \"Enum\",\n          allowedValues: [\"Windows\", \"Linux\"]\n        }\n      },\n      osState: {\n        serializedName: \"properties.osState\",\n        type: {\n          name: \"Enum\",\n          allowedValues: [\"Generalized\", \"Specialized\"]\n        }\n      },\n      hyperVGeneration: {\n        serializedName: \"properties.hyperVGeneration\",\n        type: {\n          name: \"String\"\n        }\n      },\n      endOfLifeDate: {\n        serializedName: \"properties.endOfLifeDate\",\n        type: {\n          name: \"DateTime\"\n        }\n      },\n      identifier: {\n        serializedName: \"properties.identifier\",\n        type: {\n          name: \"Composite\",\n          className: \"GalleryImageIdentifier\"\n        }\n      },\n      recommended: {\n        serializedName: \"properties.recommended\",\n        type: {\n          name: \"Composite\",\n          className: \"RecommendedMachineConfiguration\"\n        }\n      },\n      disallowed: {\n        serializedName: \"properties.disallowed\",\n        type: {\n          name: \"Composite\",\n          className: \"Disallowed\"\n        }\n      },\n      purchasePlan: {\n        serializedName: \"properties.purchasePlan\",\n        type: {\n          name: \"Composite\",\n          className: \"ImagePurchasePlan\"\n        }\n      },\n      provisioningState: {\n        serializedName: \"properties.provisioningState\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      features: {\n        serializedName: \"properties.features\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"GalleryImageFeature\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const GalleryImageVersion: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"GalleryImageVersion\",\n    modelProperties: {\n      ...Resource.type.modelProperties,\n      publishingProfile: {\n        serializedName: \"properties.publishingProfile\",\n        type: {\n          name: \"Composite\",\n          className: \"GalleryImageVersionPublishingProfile\"\n        }\n      },\n      provisioningState: {\n        serializedName: \"properties.provisioningState\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      storageProfile: {\n        serializedName: \"properties.storageProfile\",\n        type: {\n          name: \"Composite\",\n          className: \"GalleryImageVersionStorageProfile\"\n        }\n      },\n      replicationStatus: {\n        serializedName: \"properties.replicationStatus\",\n        type: {\n          name: \"Composite\",\n          className: \"ReplicationStatus\"\n        }\n      }\n    }\n  }\n};\n\nexport const GalleryApplication: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"GalleryApplication\",\n    modelProperties: {\n      ...Resource.type.modelProperties,\n      description: {\n        serializedName: \"properties.description\",\n        type: {\n          name: \"String\"\n        }\n      },\n      eula: {\n        serializedName: \"properties.eula\",\n        type: {\n          name: \"String\"\n        }\n      },\n      privacyStatementUri: {\n        serializedName: \"properties.privacyStatementUri\",\n        type: {\n          name: \"String\"\n        }\n      },\n      releaseNoteUri: {\n        serializedName: \"properties.releaseNoteUri\",\n        type: {\n          name: \"String\"\n        }\n      },\n      endOfLifeDate: {\n        serializedName: \"properties.endOfLifeDate\",\n        type: {\n          name: \"DateTime\"\n        }\n      },\n      supportedOSType: {\n        serializedName: \"properties.supportedOSType\",\n        type: {\n          name: \"Enum\",\n          allowedValues: [\"Windows\", \"Linux\"]\n        }\n      }\n    }\n  }\n};\n\nexport const GalleryApplicationVersion: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"GalleryApplicationVersion\",\n    modelProperties: {\n      ...Resource.type.modelProperties,\n      publishingProfile: {\n        serializedName: \"properties.publishingProfile\",\n        type: {\n          name: \"Composite\",\n          className: \"GalleryApplicationVersionPublishingProfile\"\n        }\n      },\n      provisioningState: {\n        serializedName: \"properties.provisioningState\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      replicationStatus: {\n        serializedName: \"properties.replicationStatus\",\n        type: {\n          name: \"Composite\",\n          className: \"ReplicationStatus\"\n        }\n      }\n    }\n  }\n};\n\nexport const AvailabilitySetUpdate: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"AvailabilitySetUpdate\",\n    modelProperties: {\n      ...UpdateResource.type.modelProperties,\n      sku: {\n        serializedName: \"sku\",\n        type: {\n          name: \"Composite\",\n          className: \"Sku\"\n        }\n      },\n      platformUpdateDomainCount: {\n        serializedName: \"properties.platformUpdateDomainCount\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      platformFaultDomainCount: {\n        serializedName: \"properties.platformFaultDomainCount\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      virtualMachines: {\n        serializedName: \"properties.virtualMachines\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"SubResource\"\n            }\n          }\n        }\n      },\n      proximityPlacementGroup: {\n        serializedName: \"properties.proximityPlacementGroup\",\n        type: {\n          name: \"Composite\",\n          className: \"SubResource\"\n        }\n      },\n      statuses: {\n        serializedName: \"properties.statuses\",\n        readOnly: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"InstanceViewStatus\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const ProximityPlacementGroupUpdate: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ProximityPlacementGroupUpdate\",\n    modelProperties: {\n      ...UpdateResource.type.modelProperties\n    }\n  }\n};\n\nexport const DedicatedHostGroupUpdate: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"DedicatedHostGroupUpdate\",\n    modelProperties: {\n      ...UpdateResource.type.modelProperties,\n      zones: {\n        serializedName: \"zones\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"String\"\n            }\n          }\n        }\n      },\n      platformFaultDomainCount: {\n        constraints: {\n          InclusiveMinimum: 1\n        },\n        serializedName: \"properties.platformFaultDomainCount\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      hosts: {\n        serializedName: \"properties.hosts\",\n        readOnly: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"SubResourceReadOnly\"\n            }\n          }\n        }\n      },\n      instanceView: {\n        serializedName: \"properties.instanceView\",\n        type: {\n          name: \"Composite\",\n          className: \"DedicatedHostGroupInstanceView\"\n        }\n      },\n      supportAutomaticPlacement: {\n        serializedName: \"properties.supportAutomaticPlacement\",\n        type: {\n          name: \"Boolean\"\n        }\n      }\n    }\n  }\n};\n\nexport const DedicatedHostUpdate: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"DedicatedHostUpdate\",\n    modelProperties: {\n      ...UpdateResource.type.modelProperties,\n      platformFaultDomain: {\n        constraints: {\n          InclusiveMinimum: 0\n        },\n        serializedName: \"properties.platformFaultDomain\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      autoReplaceOnFailure: {\n        serializedName: \"properties.autoReplaceOnFailure\",\n        type: {\n          name: \"Boolean\"\n        }\n      },\n      hostId: {\n        serializedName: \"properties.hostId\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      virtualMachines: {\n        serializedName: \"properties.virtualMachines\",\n        readOnly: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"SubResourceReadOnly\"\n            }\n          }\n        }\n      },\n      licenseType: {\n        serializedName: \"properties.licenseType\",\n        type: {\n          name: \"Enum\",\n          allowedValues: [\n            \"None\",\n            \"Windows_Server_Hybrid\",\n            \"Windows_Server_Perpetual\"\n          ]\n        }\n      },\n      provisioningTime: {\n        serializedName: \"properties.provisioningTime\",\n        readOnly: true,\n        type: {\n          name: \"DateTime\"\n        }\n      },\n      provisioningState: {\n        serializedName: \"properties.provisioningState\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      instanceView: {\n        serializedName: \"properties.instanceView\",\n        type: {\n          name: \"Composite\",\n          className: \"DedicatedHostInstanceView\"\n        }\n      },\n      timeCreated: {\n        serializedName: \"properties.timeCreated\",\n        readOnly: true,\n        type: {\n          name: \"DateTime\"\n        }\n      }\n    }\n  }\n};\n\nexport const SshPublicKeyUpdateResource: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"SshPublicKeyUpdateResource\",\n    modelProperties: {\n      ...UpdateResource.type.modelProperties,\n      publicKey: {\n        serializedName: \"properties.publicKey\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const VirtualMachineExtensionUpdate: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"VirtualMachineExtensionUpdate\",\n    modelProperties: {\n      ...UpdateResource.type.modelProperties,\n      forceUpdateTag: {\n        serializedName: \"properties.forceUpdateTag\",\n        type: {\n          name: \"String\"\n        }\n      },\n      publisher: {\n        serializedName: \"properties.publisher\",\n        type: {\n          name: \"String\"\n        }\n      },\n      type: {\n        serializedName: \"properties.type\",\n        type: {\n          name: \"String\"\n        }\n      },\n      typeHandlerVersion: {\n        serializedName: \"properties.typeHandlerVersion\",\n        type: {\n          name: \"String\"\n        }\n      },\n      autoUpgradeMinorVersion: {\n        serializedName: \"properties.autoUpgradeMinorVersion\",\n        type: {\n          name: \"Boolean\"\n        }\n      },\n      enableAutomaticUpgrade: {\n        serializedName: \"properties.enableAutomaticUpgrade\",\n        type: {\n          name: \"Boolean\"\n        }\n      },\n      settings: {\n        serializedName: \"properties.settings\",\n        type: {\n          name: \"Dictionary\",\n          value: { type: { name: \"any\" } }\n        }\n      },\n      protectedSettings: {\n        serializedName: \"properties.protectedSettings\",\n        type: {\n          name: \"Dictionary\",\n          value: { type: { name: \"any\" } }\n        }\n      },\n      suppressFailures: {\n        serializedName: \"properties.suppressFailures\",\n        type: {\n          name: \"Boolean\"\n        }\n      },\n      protectedSettingsFromKeyVault: {\n        serializedName: \"properties.protectedSettingsFromKeyVault\",\n        type: {\n          name: \"Dictionary\",\n          value: { type: { name: \"any\" } }\n        }\n      }\n    }\n  }\n};\n\nexport const ImageUpdate: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ImageUpdate\",\n    modelProperties: {\n      ...UpdateResource.type.modelProperties,\n      sourceVirtualMachine: {\n        serializedName: \"properties.sourceVirtualMachine\",\n        type: {\n          name: \"Composite\",\n          className: \"SubResource\"\n        }\n      },\n      storageProfile: {\n        serializedName: \"properties.storageProfile\",\n        type: {\n          name: \"Composite\",\n          className: \"ImageStorageProfile\"\n        }\n      },\n      provisioningState: {\n        serializedName: \"properties.provisioningState\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      hyperVGeneration: {\n        serializedName: \"properties.hyperVGeneration\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const VirtualMachineUpdate: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"VirtualMachineUpdate\",\n    modelProperties: {\n      ...UpdateResource.type.modelProperties,\n      plan: {\n        serializedName: \"plan\",\n        type: {\n          name: \"Composite\",\n          className: \"Plan\"\n        }\n      },\n      identity: {\n        serializedName: \"identity\",\n        type: {\n          name: \"Composite\",\n          className: \"VirtualMachineIdentity\"\n        }\n      },\n      zones: {\n        serializedName: \"zones\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"String\"\n            }\n          }\n        }\n      },\n      hardwareProfile: {\n        serializedName: \"properties.hardwareProfile\",\n        type: {\n          name: \"Composite\",\n          className: \"HardwareProfile\"\n        }\n      },\n      storageProfile: {\n        serializedName: \"properties.storageProfile\",\n        type: {\n          name: \"Composite\",\n          className: \"StorageProfile\"\n        }\n      },\n      additionalCapabilities: {\n        serializedName: \"properties.additionalCapabilities\",\n        type: {\n          name: \"Composite\",\n          className: \"AdditionalCapabilities\"\n        }\n      },\n      osProfile: {\n        serializedName: \"properties.osProfile\",\n        type: {\n          name: \"Composite\",\n          className: \"OSProfile\"\n        }\n      },\n      networkProfile: {\n        serializedName: \"properties.networkProfile\",\n        type: {\n          name: \"Composite\",\n          className: \"NetworkProfile\"\n        }\n      },\n      securityProfile: {\n        serializedName: \"properties.securityProfile\",\n        type: {\n          name: \"Composite\",\n          className: \"SecurityProfile\"\n        }\n      },\n      diagnosticsProfile: {\n        serializedName: \"properties.diagnosticsProfile\",\n        type: {\n          name: \"Composite\",\n          className: \"DiagnosticsProfile\"\n        }\n      },\n      availabilitySet: {\n        serializedName: \"properties.availabilitySet\",\n        type: {\n          name: \"Composite\",\n          className: \"SubResource\"\n        }\n      },\n      virtualMachineScaleSet: {\n        serializedName: \"properties.virtualMachineScaleSet\",\n        type: {\n          name: \"Composite\",\n          className: \"SubResource\"\n        }\n      },\n      proximityPlacementGroup: {\n        serializedName: \"properties.proximityPlacementGroup\",\n        type: {\n          name: \"Composite\",\n          className: \"SubResource\"\n        }\n      },\n      priority: {\n        serializedName: \"properties.priority\",\n        type: {\n          name: \"String\"\n        }\n      },\n      evictionPolicy: {\n        serializedName: \"properties.evictionPolicy\",\n        type: {\n          name: \"String\"\n        }\n      },\n      billingProfile: {\n        serializedName: \"properties.billingProfile\",\n        type: {\n          name: \"Composite\",\n          className: \"BillingProfile\"\n        }\n      },\n      host: {\n        serializedName: \"properties.host\",\n        type: {\n          name: \"Composite\",\n          className: \"SubResource\"\n        }\n      },\n      hostGroup: {\n        serializedName: \"properties.hostGroup\",\n        type: {\n          name: \"Composite\",\n          className: \"SubResource\"\n        }\n      },\n      provisioningState: {\n        serializedName: \"properties.provisioningState\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      instanceView: {\n        serializedName: \"properties.instanceView\",\n        type: {\n          name: \"Composite\",\n          className: \"VirtualMachineInstanceView\"\n        }\n      },\n      licenseType: {\n        serializedName: \"properties.licenseType\",\n        type: {\n          name: \"String\"\n        }\n      },\n      vmId: {\n        serializedName: \"properties.vmId\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      extensionsTimeBudget: {\n        serializedName: \"properties.extensionsTimeBudget\",\n        type: {\n          name: \"String\"\n        }\n      },\n      platformFaultDomain: {\n        serializedName: \"properties.platformFaultDomain\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      scheduledEventsProfile: {\n        serializedName: \"properties.scheduledEventsProfile\",\n        type: {\n          name: \"Composite\",\n          className: \"ScheduledEventsProfile\"\n        }\n      },\n      userData: {\n        serializedName: \"properties.userData\",\n        type: {\n          name: \"String\"\n        }\n      },\n      capacityReservation: {\n        serializedName: \"properties.capacityReservation\",\n        type: {\n          name: \"Composite\",\n          className: \"CapacityReservationProfile\"\n        }\n      },\n      applicationProfile: {\n        serializedName: \"properties.applicationProfile\",\n        type: {\n          name: \"Composite\",\n          className: \"ApplicationProfile\"\n        }\n      },\n      timeCreated: {\n        serializedName: \"properties.timeCreated\",\n        readOnly: true,\n        type: {\n          name: \"DateTime\"\n        }\n      }\n    }\n  }\n};\n\nexport const RestorePointCollectionUpdate: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"RestorePointCollectionUpdate\",\n    modelProperties: {\n      ...UpdateResource.type.modelProperties,\n      source: {\n        serializedName: \"properties.source\",\n        type: {\n          name: \"Composite\",\n          className: \"RestorePointCollectionSourceProperties\"\n        }\n      },\n      provisioningState: {\n        serializedName: \"properties.provisioningState\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      restorePointCollectionId: {\n        serializedName: \"properties.restorePointCollectionId\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      restorePoints: {\n        serializedName: \"properties.restorePoints\",\n        readOnly: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"RestorePoint\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const CapacityReservationGroupUpdate: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"CapacityReservationGroupUpdate\",\n    modelProperties: {\n      ...UpdateResource.type.modelProperties,\n      capacityReservations: {\n        serializedName: \"properties.capacityReservations\",\n        readOnly: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"SubResourceReadOnly\"\n            }\n          }\n        }\n      },\n      virtualMachinesAssociated: {\n        serializedName: \"properties.virtualMachinesAssociated\",\n        readOnly: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"SubResourceReadOnly\"\n            }\n          }\n        }\n      },\n      instanceView: {\n        serializedName: \"properties.instanceView\",\n        type: {\n          name: \"Composite\",\n          className: \"CapacityReservationGroupInstanceView\"\n        }\n      }\n    }\n  }\n};\n\nexport const CapacityReservationUpdate: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"CapacityReservationUpdate\",\n    modelProperties: {\n      ...UpdateResource.type.modelProperties,\n      sku: {\n        serializedName: \"sku\",\n        type: {\n          name: \"Composite\",\n          className: \"Sku\"\n        }\n      },\n      reservationId: {\n        serializedName: \"properties.reservationId\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      virtualMachinesAssociated: {\n        serializedName: \"properties.virtualMachinesAssociated\",\n        readOnly: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"SubResourceReadOnly\"\n            }\n          }\n        }\n      },\n      provisioningTime: {\n        serializedName: \"properties.provisioningTime\",\n        readOnly: true,\n        type: {\n          name: \"DateTime\"\n        }\n      },\n      provisioningState: {\n        serializedName: \"properties.provisioningState\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      instanceView: {\n        serializedName: \"properties.instanceView\",\n        type: {\n          name: \"Composite\",\n          className: \"CapacityReservationInstanceView\"\n        }\n      },\n      timeCreated: {\n        serializedName: \"properties.timeCreated\",\n        readOnly: true,\n        type: {\n          name: \"DateTime\"\n        }\n      }\n    }\n  }\n};\n\nexport const VirtualMachineScaleSetUpdate: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"VirtualMachineScaleSetUpdate\",\n    modelProperties: {\n      ...UpdateResource.type.modelProperties,\n      sku: {\n        serializedName: \"sku\",\n        type: {\n          name: \"Composite\",\n          className: \"Sku\"\n        }\n      },\n      plan: {\n        serializedName: \"plan\",\n        type: {\n          name: \"Composite\",\n          className: \"Plan\"\n        }\n      },\n      identity: {\n        serializedName: \"identity\",\n        type: {\n          name: \"Composite\",\n          className: \"VirtualMachineScaleSetIdentity\"\n        }\n      },\n      upgradePolicy: {\n        serializedName: \"properties.upgradePolicy\",\n        type: {\n          name: \"Composite\",\n          className: \"UpgradePolicy\"\n        }\n      },\n      automaticRepairsPolicy: {\n        serializedName: \"properties.automaticRepairsPolicy\",\n        type: {\n          name: \"Composite\",\n          className: \"AutomaticRepairsPolicy\"\n        }\n      },\n      virtualMachineProfile: {\n        serializedName: \"properties.virtualMachineProfile\",\n        type: {\n          name: \"Composite\",\n          className: \"VirtualMachineScaleSetUpdateVMProfile\"\n        }\n      },\n      overprovision: {\n        serializedName: \"properties.overprovision\",\n        type: {\n          name: \"Boolean\"\n        }\n      },\n      doNotRunExtensionsOnOverprovisionedVMs: {\n        serializedName: \"properties.doNotRunExtensionsOnOverprovisionedVMs\",\n        type: {\n          name: \"Boolean\"\n        }\n      },\n      singlePlacementGroup: {\n        serializedName: \"properties.singlePlacementGroup\",\n        type: {\n          name: \"Boolean\"\n        }\n      },\n      additionalCapabilities: {\n        serializedName: \"properties.additionalCapabilities\",\n        type: {\n          name: \"Composite\",\n          className: \"AdditionalCapabilities\"\n        }\n      },\n      scaleInPolicy: {\n        serializedName: \"properties.scaleInPolicy\",\n        type: {\n          name: \"Composite\",\n          className: \"ScaleInPolicy\"\n        }\n      },\n      proximityPlacementGroup: {\n        serializedName: \"properties.proximityPlacementGroup\",\n        type: {\n          name: \"Composite\",\n          className: \"SubResource\"\n        }\n      }\n    }\n  }\n};\n\nexport const VirtualMachineRunCommandUpdate: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"VirtualMachineRunCommandUpdate\",\n    modelProperties: {\n      ...UpdateResource.type.modelProperties,\n      source: {\n        serializedName: \"properties.source\",\n        type: {\n          name: \"Composite\",\n          className: \"VirtualMachineRunCommandScriptSource\"\n        }\n      },\n      parameters: {\n        serializedName: \"properties.parameters\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"RunCommandInputParameter\"\n            }\n          }\n        }\n      },\n      protectedParameters: {\n        serializedName: \"properties.protectedParameters\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"RunCommandInputParameter\"\n            }\n          }\n        }\n      },\n      asyncExecution: {\n        defaultValue: false,\n        serializedName: \"properties.asyncExecution\",\n        type: {\n          name: \"Boolean\"\n        }\n      },\n      runAsUser: {\n        serializedName: \"properties.runAsUser\",\n        type: {\n          name: \"String\"\n        }\n      },\n      runAsPassword: {\n        serializedName: \"properties.runAsPassword\",\n        type: {\n          name: \"String\"\n        }\n      },\n      timeoutInSeconds: {\n        serializedName: \"properties.timeoutInSeconds\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      outputBlobUri: {\n        serializedName: \"properties.outputBlobUri\",\n        type: {\n          name: \"String\"\n        }\n      },\n      errorBlobUri: {\n        serializedName: \"properties.errorBlobUri\",\n        type: {\n          name: \"String\"\n        }\n      },\n      provisioningState: {\n        serializedName: \"properties.provisioningState\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      instanceView: {\n        serializedName: \"properties.instanceView\",\n        type: {\n          name: \"Composite\",\n          className: \"VirtualMachineRunCommandInstanceView\"\n        }\n      }\n    }\n  }\n};\n\nexport const VirtualMachineScaleSetExtension: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"VirtualMachineScaleSetExtension\",\n    modelProperties: {\n      ...SubResourceReadOnly.type.modelProperties,\n      name: {\n        serializedName: \"name\",\n        type: {\n          name: \"String\"\n        }\n      },\n      type: {\n        serializedName: \"type\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      forceUpdateTag: {\n        serializedName: \"properties.forceUpdateTag\",\n        type: {\n          name: \"String\"\n        }\n      },\n      publisher: {\n        serializedName: \"properties.publisher\",\n        type: {\n          name: \"String\"\n        }\n      },\n      typePropertiesType: {\n        serializedName: \"properties.type\",\n        type: {\n          name: \"String\"\n        }\n      },\n      typeHandlerVersion: {\n        serializedName: \"properties.typeHandlerVersion\",\n        type: {\n          name: \"String\"\n        }\n      },\n      autoUpgradeMinorVersion: {\n        serializedName: \"properties.autoUpgradeMinorVersion\",\n        type: {\n          name: \"Boolean\"\n        }\n      },\n      enableAutomaticUpgrade: {\n        serializedName: \"properties.enableAutomaticUpgrade\",\n        type: {\n          name: \"Boolean\"\n        }\n      },\n      settings: {\n        serializedName: \"properties.settings\",\n        type: {\n          name: \"Dictionary\",\n          value: { type: { name: \"any\" } }\n        }\n      },\n      protectedSettings: {\n        serializedName: \"properties.protectedSettings\",\n        type: {\n          name: \"Dictionary\",\n          value: { type: { name: \"any\" } }\n        }\n      },\n      provisioningState: {\n        serializedName: \"properties.provisioningState\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      provisionAfterExtensions: {\n        serializedName: \"properties.provisionAfterExtensions\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"String\"\n            }\n          }\n        }\n      },\n      suppressFailures: {\n        serializedName: \"properties.suppressFailures\",\n        type: {\n          name: \"Boolean\"\n        }\n      },\n      protectedSettingsFromKeyVault: {\n        serializedName: \"properties.protectedSettingsFromKeyVault\",\n        type: {\n          name: \"Dictionary\",\n          value: { type: { name: \"any\" } }\n        }\n      }\n    }\n  }\n};\n\nexport const VirtualMachineScaleSetExtensionUpdate: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"VirtualMachineScaleSetExtensionUpdate\",\n    modelProperties: {\n      ...SubResourceReadOnly.type.modelProperties,\n      name: {\n        serializedName: \"name\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      type: {\n        serializedName: \"type\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      forceUpdateTag: {\n        serializedName: \"properties.forceUpdateTag\",\n        type: {\n          name: \"String\"\n        }\n      },\n      publisher: {\n        serializedName: \"properties.publisher\",\n        type: {\n          name: \"String\"\n        }\n      },\n      typePropertiesType: {\n        serializedName: \"properties.type\",\n        type: {\n          name: \"String\"\n        }\n      },\n      typeHandlerVersion: {\n        serializedName: \"properties.typeHandlerVersion\",\n        type: {\n          name: \"String\"\n        }\n      },\n      autoUpgradeMinorVersion: {\n        serializedName: \"properties.autoUpgradeMinorVersion\",\n        type: {\n          name: \"Boolean\"\n        }\n      },\n      enableAutomaticUpgrade: {\n        serializedName: \"properties.enableAutomaticUpgrade\",\n        type: {\n          name: \"Boolean\"\n        }\n      },\n      settings: {\n        serializedName: \"properties.settings\",\n        type: {\n          name: \"Dictionary\",\n          value: { type: { name: \"any\" } }\n        }\n      },\n      protectedSettings: {\n        serializedName: \"properties.protectedSettings\",\n        type: {\n          name: \"Dictionary\",\n          value: { type: { name: \"any\" } }\n        }\n      },\n      provisioningState: {\n        serializedName: \"properties.provisioningState\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      provisionAfterExtensions: {\n        serializedName: \"properties.provisionAfterExtensions\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"String\"\n            }\n          }\n        }\n      },\n      suppressFailures: {\n        serializedName: \"properties.suppressFailures\",\n        type: {\n          name: \"Boolean\"\n        }\n      },\n      protectedSettingsFromKeyVault: {\n        serializedName: \"properties.protectedSettingsFromKeyVault\",\n        type: {\n          name: \"Dictionary\",\n          value: { type: { name: \"any\" } }\n        }\n      }\n    }\n  }\n};\n\nexport const VirtualMachineScaleSetVMExtension: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"VirtualMachineScaleSetVMExtension\",\n    modelProperties: {\n      ...SubResourceReadOnly.type.modelProperties,\n      name: {\n        serializedName: \"name\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      type: {\n        serializedName: \"type\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      forceUpdateTag: {\n        serializedName: \"properties.forceUpdateTag\",\n        type: {\n          name: \"String\"\n        }\n      },\n      publisher: {\n        serializedName: \"properties.publisher\",\n        type: {\n          name: \"String\"\n        }\n      },\n      typePropertiesType: {\n        serializedName: \"properties.type\",\n        type: {\n          name: \"String\"\n        }\n      },\n      typeHandlerVersion: {\n        serializedName: \"properties.typeHandlerVersion\",\n        type: {\n          name: \"String\"\n        }\n      },\n      autoUpgradeMinorVersion: {\n        serializedName: \"properties.autoUpgradeMinorVersion\",\n        type: {\n          name: \"Boolean\"\n        }\n      },\n      enableAutomaticUpgrade: {\n        serializedName: \"properties.enableAutomaticUpgrade\",\n        type: {\n          name: \"Boolean\"\n        }\n      },\n      settings: {\n        serializedName: \"properties.settings\",\n        type: {\n          name: \"Dictionary\",\n          value: { type: { name: \"any\" } }\n        }\n      },\n      protectedSettings: {\n        serializedName: \"properties.protectedSettings\",\n        type: {\n          name: \"Dictionary\",\n          value: { type: { name: \"any\" } }\n        }\n      },\n      provisioningState: {\n        serializedName: \"properties.provisioningState\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      instanceView: {\n        serializedName: \"properties.instanceView\",\n        type: {\n          name: \"Composite\",\n          className: \"VirtualMachineExtensionInstanceView\"\n        }\n      },\n      suppressFailures: {\n        serializedName: \"properties.suppressFailures\",\n        type: {\n          name: \"Boolean\"\n        }\n      },\n      protectedSettingsFromKeyVault: {\n        serializedName: \"properties.protectedSettingsFromKeyVault\",\n        type: {\n          name: \"Dictionary\",\n          value: { type: { name: \"any\" } }\n        }\n      }\n    }\n  }\n};\n\nexport const VirtualMachineScaleSetVMExtensionUpdate: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"VirtualMachineScaleSetVMExtensionUpdate\",\n    modelProperties: {\n      ...SubResourceReadOnly.type.modelProperties,\n      name: {\n        serializedName: \"name\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      type: {\n        serializedName: \"type\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      forceUpdateTag: {\n        serializedName: \"properties.forceUpdateTag\",\n        type: {\n          name: \"String\"\n        }\n      },\n      publisher: {\n        serializedName: \"properties.publisher\",\n        type: {\n          name: \"String\"\n        }\n      },\n      typePropertiesType: {\n        serializedName: \"properties.type\",\n        type: {\n          name: \"String\"\n        }\n      },\n      typeHandlerVersion: {\n        serializedName: \"properties.typeHandlerVersion\",\n        type: {\n          name: \"String\"\n        }\n      },\n      autoUpgradeMinorVersion: {\n        serializedName: \"properties.autoUpgradeMinorVersion\",\n        type: {\n          name: \"Boolean\"\n        }\n      },\n      enableAutomaticUpgrade: {\n        serializedName: \"properties.enableAutomaticUpgrade\",\n        type: {\n          name: \"Boolean\"\n        }\n      },\n      settings: {\n        serializedName: \"properties.settings\",\n        type: {\n          name: \"Dictionary\",\n          value: { type: { name: \"any\" } }\n        }\n      },\n      protectedSettings: {\n        serializedName: \"properties.protectedSettings\",\n        type: {\n          name: \"Dictionary\",\n          value: { type: { name: \"any\" } }\n        }\n      },\n      suppressFailures: {\n        serializedName: \"properties.suppressFailures\",\n        type: {\n          name: \"Boolean\"\n        }\n      },\n      protectedSettingsFromKeyVault: {\n        serializedName: \"properties.protectedSettingsFromKeyVault\",\n        type: {\n          name: \"Dictionary\",\n          value: { type: { name: \"any\" } }\n        }\n      }\n    }\n  }\n};\n\nexport const DedicatedHostInstanceViewWithName: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"DedicatedHostInstanceViewWithName\",\n    modelProperties: {\n      ...DedicatedHostInstanceView.type.modelProperties,\n      name: {\n        serializedName: \"name\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const ImageOSDisk: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ImageOSDisk\",\n    modelProperties: {\n      ...ImageDisk.type.modelProperties,\n      osType: {\n        serializedName: \"osType\",\n        required: true,\n        type: {\n          name: \"Enum\",\n          allowedValues: [\"Windows\", \"Linux\"]\n        }\n      },\n      osState: {\n        serializedName: \"osState\",\n        required: true,\n        type: {\n          name: \"Enum\",\n          allowedValues: [\"Generalized\", \"Specialized\"]\n        }\n      }\n    }\n  }\n};\n\nexport const ImageDataDisk: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ImageDataDisk\",\n    modelProperties: {\n      ...ImageDisk.type.modelProperties,\n      lun: {\n        serializedName: \"lun\",\n        required: true,\n        type: {\n          name: \"Number\"\n        }\n      }\n    }\n  }\n};\n\nexport const RestorePoint: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"RestorePoint\",\n    modelProperties: {\n      ...ProxyResource.type.modelProperties,\n      excludeDisks: {\n        serializedName: \"properties.excludeDisks\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"ApiEntityReference\"\n            }\n          }\n        }\n      },\n      sourceMetadata: {\n        serializedName: \"properties.sourceMetadata\",\n        type: {\n          name: \"Composite\",\n          className: \"RestorePointSourceMetadata\"\n        }\n      },\n      provisioningState: {\n        serializedName: \"properties.provisioningState\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      consistencyMode: {\n        serializedName: \"properties.consistencyMode\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      timeCreated: {\n        serializedName: \"properties.timeCreated\",\n        type: {\n          name: \"DateTime\"\n        }\n      },\n      sourceRestorePoint: {\n        serializedName: \"properties.sourceRestorePoint\",\n        type: {\n          name: \"Composite\",\n          className: \"ApiEntityReference\"\n        }\n      },\n      instanceView: {\n        serializedName: \"properties.instanceView\",\n        type: {\n          name: \"Composite\",\n          className: \"RestorePointInstanceView\"\n        }\n      }\n    }\n  }\n};\n\nexport const CapacityReservationInstanceViewWithName: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"CapacityReservationInstanceViewWithName\",\n    modelProperties: {\n      ...CapacityReservationInstanceView.type.modelProperties,\n      name: {\n        serializedName: \"name\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const VirtualMachineScaleSetVMReimageParameters: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"VirtualMachineScaleSetVMReimageParameters\",\n    modelProperties: {\n      ...VirtualMachineReimageParameters.type.modelProperties\n    }\n  }\n};\n\nexport const RequestRateByIntervalInput: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"RequestRateByIntervalInput\",\n    modelProperties: {\n      ...LogAnalyticsInputBase.type.modelProperties,\n      intervalLength: {\n        serializedName: \"intervalLength\",\n        required: true,\n        type: {\n          name: \"Enum\",\n          allowedValues: [\"ThreeMins\", \"FiveMins\", \"ThirtyMins\", \"SixtyMins\"]\n        }\n      }\n    }\n  }\n};\n\nexport const ThrottledRequestsInput: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ThrottledRequestsInput\",\n    modelProperties: {\n      ...LogAnalyticsInputBase.type.modelProperties\n    }\n  }\n};\n\nexport const RunCommandDocument: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"RunCommandDocument\",\n    modelProperties: {\n      ...RunCommandDocumentBase.type.modelProperties,\n      script: {\n        serializedName: \"script\",\n        required: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"String\"\n            }\n          }\n        }\n      },\n      parameters: {\n        serializedName: \"parameters\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"RunCommandParameterDefinition\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const DiskRestorePoint: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"DiskRestorePoint\",\n    modelProperties: {\n      ...ProxyOnlyResource.type.modelProperties,\n      timeCreated: {\n        serializedName: \"properties.timeCreated\",\n        readOnly: true,\n        type: {\n          name: \"DateTime\"\n        }\n      },\n      sourceResourceId: {\n        serializedName: \"properties.sourceResourceId\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      osType: {\n        serializedName: \"properties.osType\",\n        readOnly: true,\n        type: {\n          name: \"Enum\",\n          allowedValues: [\"Windows\", \"Linux\"]\n        }\n      },\n      hyperVGeneration: {\n        serializedName: \"properties.hyperVGeneration\",\n        type: {\n          name: \"String\"\n        }\n      },\n      purchasePlan: {\n        serializedName: \"properties.purchasePlan\",\n        type: {\n          name: \"Composite\",\n          className: \"PurchasePlanAutoGenerated\"\n        }\n      },\n      supportedCapabilities: {\n        serializedName: \"properties.supportedCapabilities\",\n        type: {\n          name: \"Composite\",\n          className: \"SupportedCapabilities\"\n        }\n      },\n      familyId: {\n        serializedName: \"properties.familyId\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      sourceUniqueId: {\n        serializedName: \"properties.sourceUniqueId\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      encryption: {\n        serializedName: \"properties.encryption\",\n        type: {\n          name: \"Composite\",\n          className: \"Encryption\"\n        }\n      },\n      supportsHibernation: {\n        serializedName: \"properties.supportsHibernation\",\n        type: {\n          name: \"Boolean\"\n        }\n      },\n      networkAccessPolicy: {\n        serializedName: \"properties.networkAccessPolicy\",\n        type: {\n          name: \"String\"\n        }\n      },\n      publicNetworkAccess: {\n        serializedName: \"properties.publicNetworkAccess\",\n        type: {\n          name: \"String\"\n        }\n      },\n      diskAccessId: {\n        serializedName: \"properties.diskAccessId\",\n        type: {\n          name: \"String\"\n        }\n      },\n      completionPercent: {\n        serializedName: \"properties.completionPercent\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      replicationState: {\n        serializedName: \"properties.replicationState\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      sourceResourceLocation: {\n        serializedName: \"properties.sourceResourceLocation\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const GalleryUpdate: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"GalleryUpdate\",\n    modelProperties: {\n      ...UpdateResourceDefinition.type.modelProperties,\n      description: {\n        serializedName: \"properties.description\",\n        type: {\n          name: \"String\"\n        }\n      },\n      identifier: {\n        serializedName: \"properties.identifier\",\n        type: {\n          name: \"Composite\",\n          className: \"GalleryIdentifier\"\n        }\n      },\n      provisioningState: {\n        serializedName: \"properties.provisioningState\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      sharingProfile: {\n        serializedName: \"properties.sharingProfile\",\n        type: {\n          name: \"Composite\",\n          className: \"SharingProfile\"\n        }\n      },\n      softDeletePolicy: {\n        serializedName: \"properties.softDeletePolicy\",\n        type: {\n          name: \"Composite\",\n          className: \"SoftDeletePolicy\"\n        }\n      },\n      sharingStatus: {\n        serializedName: \"properties.sharingStatus\",\n        type: {\n          name: \"Composite\",\n          className: \"SharingStatus\"\n        }\n      }\n    }\n  }\n};\n\nexport const GalleryImageUpdate: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"GalleryImageUpdate\",\n    modelProperties: {\n      ...UpdateResourceDefinition.type.modelProperties,\n      description: {\n        serializedName: \"properties.description\",\n        type: {\n          name: \"String\"\n        }\n      },\n      eula: {\n        serializedName: \"properties.eula\",\n        type: {\n          name: \"String\"\n        }\n      },\n      privacyStatementUri: {\n        serializedName: \"properties.privacyStatementUri\",\n        type: {\n          name: \"String\"\n        }\n      },\n      releaseNoteUri: {\n        serializedName: \"properties.releaseNoteUri\",\n        type: {\n          name: \"String\"\n        }\n      },\n      osType: {\n        serializedName: \"properties.osType\",\n        type: {\n          name: \"Enum\",\n          allowedValues: [\"Windows\", \"Linux\"]\n        }\n      },\n      osState: {\n        serializedName: \"properties.osState\",\n        type: {\n          name: \"Enum\",\n          allowedValues: [\"Generalized\", \"Specialized\"]\n        }\n      },\n      hyperVGeneration: {\n        serializedName: \"properties.hyperVGeneration\",\n        type: {\n          name: \"String\"\n        }\n      },\n      endOfLifeDate: {\n        serializedName: \"properties.endOfLifeDate\",\n        type: {\n          name: \"DateTime\"\n        }\n      },\n      identifier: {\n        serializedName: \"properties.identifier\",\n        type: {\n          name: \"Composite\",\n          className: \"GalleryImageIdentifier\"\n        }\n      },\n      recommended: {\n        serializedName: \"properties.recommended\",\n        type: {\n          name: \"Composite\",\n          className: \"RecommendedMachineConfiguration\"\n        }\n      },\n      disallowed: {\n        serializedName: \"properties.disallowed\",\n        type: {\n          name: \"Composite\",\n          className: \"Disallowed\"\n        }\n      },\n      purchasePlan: {\n        serializedName: \"properties.purchasePlan\",\n        type: {\n          name: \"Composite\",\n          className: \"ImagePurchasePlan\"\n        }\n      },\n      provisioningState: {\n        serializedName: \"properties.provisioningState\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      features: {\n        serializedName: \"properties.features\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"GalleryImageFeature\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const GalleryImageVersionUpdate: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"GalleryImageVersionUpdate\",\n    modelProperties: {\n      ...UpdateResourceDefinition.type.modelProperties,\n      publishingProfile: {\n        serializedName: \"properties.publishingProfile\",\n        type: {\n          name: \"Composite\",\n          className: \"GalleryImageVersionPublishingProfile\"\n        }\n      },\n      provisioningState: {\n        serializedName: \"properties.provisioningState\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      storageProfile: {\n        serializedName: \"properties.storageProfile\",\n        type: {\n          name: \"Composite\",\n          className: \"GalleryImageVersionStorageProfile\"\n        }\n      },\n      replicationStatus: {\n        serializedName: \"properties.replicationStatus\",\n        type: {\n          name: \"Composite\",\n          className: \"ReplicationStatus\"\n        }\n      }\n    }\n  }\n};\n\nexport const GalleryApplicationUpdate: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"GalleryApplicationUpdate\",\n    modelProperties: {\n      ...UpdateResourceDefinition.type.modelProperties,\n      description: {\n        serializedName: \"properties.description\",\n        type: {\n          name: \"String\"\n        }\n      },\n      eula: {\n        serializedName: \"properties.eula\",\n        type: {\n          name: \"String\"\n        }\n      },\n      privacyStatementUri: {\n        serializedName: \"properties.privacyStatementUri\",\n        type: {\n          name: \"String\"\n        }\n      },\n      releaseNoteUri: {\n        serializedName: \"properties.releaseNoteUri\",\n        type: {\n          name: \"String\"\n        }\n      },\n      endOfLifeDate: {\n        serializedName: \"properties.endOfLifeDate\",\n        type: {\n          name: \"DateTime\"\n        }\n      },\n      supportedOSType: {\n        serializedName: \"properties.supportedOSType\",\n        type: {\n          name: \"Enum\",\n          allowedValues: [\"Windows\", \"Linux\"]\n        }\n      }\n    }\n  }\n};\n\nexport const GalleryApplicationVersionUpdate: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"GalleryApplicationVersionUpdate\",\n    modelProperties: {\n      ...UpdateResourceDefinition.type.modelProperties,\n      publishingProfile: {\n        serializedName: \"properties.publishingProfile\",\n        type: {\n          name: \"Composite\",\n          className: \"GalleryApplicationVersionPublishingProfile\"\n        }\n      },\n      provisioningState: {\n        serializedName: \"properties.provisioningState\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      replicationStatus: {\n        serializedName: \"properties.replicationStatus\",\n        type: {\n          name: \"Composite\",\n          className: \"ReplicationStatus\"\n        }\n      }\n    }\n  }\n};\n\nexport const GalleryImageVersionPublishingProfile: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"GalleryImageVersionPublishingProfile\",\n    modelProperties: {\n      ...GalleryArtifactPublishingProfileBase.type.modelProperties\n    }\n  }\n};\n\nexport const GalleryApplicationVersionPublishingProfile: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"GalleryApplicationVersionPublishingProfile\",\n    modelProperties: {\n      ...GalleryArtifactPublishingProfileBase.type.modelProperties,\n      source: {\n        serializedName: \"source\",\n        type: {\n          name: \"Composite\",\n          className: \"UserArtifactSource\"\n        }\n      },\n      manageActions: {\n        serializedName: \"manageActions\",\n        type: {\n          name: \"Composite\",\n          className: \"UserArtifactManage\"\n        }\n      },\n      enableHealthCheck: {\n        serializedName: \"enableHealthCheck\",\n        type: {\n          name: \"Boolean\"\n        }\n      }\n    }\n  }\n};\n\nexport const OSDiskImageEncryption: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"OSDiskImageEncryption\",\n    modelProperties: {\n      ...DiskImageEncryption.type.modelProperties,\n      securityProfile: {\n        serializedName: \"securityProfile\",\n        type: {\n          name: \"Composite\",\n          className: \"OSDiskImageSecurityProfile\"\n        }\n      }\n    }\n  }\n};\n\nexport const DataDiskImageEncryption: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"DataDiskImageEncryption\",\n    modelProperties: {\n      ...DiskImageEncryption.type.modelProperties,\n      lun: {\n        serializedName: \"lun\",\n        required: true,\n        type: {\n          name: \"Number\"\n        }\n      }\n    }\n  }\n};\n\nexport const GalleryOSDiskImage: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"GalleryOSDiskImage\",\n    modelProperties: {\n      ...GalleryDiskImage.type.modelProperties\n    }\n  }\n};\n\nexport const GalleryDataDiskImage: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"GalleryDataDiskImage\",\n    modelProperties: {\n      ...GalleryDiskImage.type.modelProperties,\n      lun: {\n        serializedName: \"lun\",\n        required: true,\n        type: {\n          name: \"Number\"\n        }\n      }\n    }\n  }\n};\n\nexport const PirSharedGalleryResource: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"PirSharedGalleryResource\",\n    modelProperties: {\n      ...PirResource.type.modelProperties,\n      uniqueId: {\n        serializedName: \"identifier.uniqueId\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const CommunityGallery: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"CommunityGallery\",\n    modelProperties: {\n      ...PirCommunityGalleryResource.type.modelProperties\n    }\n  }\n};\n\nexport const CommunityGalleryImage: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"CommunityGalleryImage\",\n    modelProperties: {\n      ...PirCommunityGalleryResource.type.modelProperties,\n      osType: {\n        serializedName: \"properties.osType\",\n        type: {\n          name: \"Enum\",\n          allowedValues: [\"Windows\", \"Linux\"]\n        }\n      },\n      osState: {\n        serializedName: \"properties.osState\",\n        type: {\n          name: \"Enum\",\n          allowedValues: [\"Generalized\", \"Specialized\"]\n        }\n      },\n      endOfLifeDate: {\n        serializedName: \"properties.endOfLifeDate\",\n        type: {\n          name: \"DateTime\"\n        }\n      },\n      identifier: {\n        serializedName: \"properties.identifier\",\n        type: {\n          name: \"Composite\",\n          className: \"GalleryImageIdentifier\"\n        }\n      },\n      recommended: {\n        serializedName: \"properties.recommended\",\n        type: {\n          name: \"Composite\",\n          className: \"RecommendedMachineConfiguration\"\n        }\n      },\n      disallowed: {\n        serializedName: \"properties.disallowed\",\n        type: {\n          name: \"Composite\",\n          className: \"Disallowed\"\n        }\n      },\n      hyperVGeneration: {\n        serializedName: \"properties.hyperVGeneration\",\n        type: {\n          name: \"String\"\n        }\n      },\n      features: {\n        serializedName: \"properties.features\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"GalleryImageFeature\"\n            }\n          }\n        }\n      },\n      purchasePlan: {\n        serializedName: \"properties.purchasePlan\",\n        type: {\n          name: \"Composite\",\n          className: \"ImagePurchasePlan\"\n        }\n      }\n    }\n  }\n};\n\nexport const CommunityGalleryImageVersion: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"CommunityGalleryImageVersion\",\n    modelProperties: {\n      ...PirCommunityGalleryResource.type.modelProperties,\n      publishedDate: {\n        serializedName: \"properties.publishedDate\",\n        type: {\n          name: \"DateTime\"\n        }\n      },\n      endOfLifeDate: {\n        serializedName: \"properties.endOfLifeDate\",\n        type: {\n          name: \"DateTime\"\n        }\n      }\n    }\n  }\n};\n\nexport const VirtualMachineImage: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"VirtualMachineImage\",\n    modelProperties: {\n      ...VirtualMachineImageResource.type.modelProperties,\n      plan: {\n        serializedName: \"properties.plan\",\n        type: {\n          name: \"Composite\",\n          className: \"PurchasePlan\"\n        }\n      },\n      osDiskImage: {\n        serializedName: \"properties.osDiskImage\",\n        type: {\n          name: \"Composite\",\n          className: \"OSDiskImage\"\n        }\n      },\n      dataDiskImages: {\n        serializedName: \"properties.dataDiskImages\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"DataDiskImage\"\n            }\n          }\n        }\n      },\n      automaticOSUpgradeProperties: {\n        serializedName: \"properties.automaticOSUpgradeProperties\",\n        type: {\n          name: \"Composite\",\n          className: \"AutomaticOSUpgradeProperties\"\n        }\n      },\n      hyperVGeneration: {\n        serializedName: \"properties.hyperVGeneration\",\n        type: {\n          name: \"String\"\n        }\n      },\n      disallowed: {\n        serializedName: \"properties.disallowed\",\n        type: {\n          name: \"Composite\",\n          className: \"DisallowedConfiguration\"\n        }\n      },\n      features: {\n        serializedName: \"properties.features\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"VirtualMachineImageFeature\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const VirtualMachineScaleSetReimageParameters: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"VirtualMachineScaleSetReimageParameters\",\n    modelProperties: {\n      ...VirtualMachineScaleSetVMReimageParameters.type.modelProperties,\n      instanceIds: {\n        serializedName: \"instanceIds\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"String\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const SharedGallery: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"SharedGallery\",\n    modelProperties: {\n      ...PirSharedGalleryResource.type.modelProperties\n    }\n  }\n};\n\nexport const SharedGalleryImage: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"SharedGalleryImage\",\n    modelProperties: {\n      ...PirSharedGalleryResource.type.modelProperties,\n      osType: {\n        serializedName: \"properties.osType\",\n        type: {\n          name: \"Enum\",\n          allowedValues: [\"Windows\", \"Linux\"]\n        }\n      },\n      osState: {\n        serializedName: \"properties.osState\",\n        type: {\n          name: \"Enum\",\n          allowedValues: [\"Generalized\", \"Specialized\"]\n        }\n      },\n      endOfLifeDate: {\n        serializedName: \"properties.endOfLifeDate\",\n        type: {\n          name: \"DateTime\"\n        }\n      },\n      identifier: {\n        serializedName: \"properties.identifier\",\n        type: {\n          name: \"Composite\",\n          className: \"GalleryImageIdentifier\"\n        }\n      },\n      recommended: {\n        serializedName: \"properties.recommended\",\n        type: {\n          name: \"Composite\",\n          className: \"RecommendedMachineConfiguration\"\n        }\n      },\n      disallowed: {\n        serializedName: \"properties.disallowed\",\n        type: {\n          name: \"Composite\",\n          className: \"Disallowed\"\n        }\n      },\n      hyperVGeneration: {\n        serializedName: \"properties.hyperVGeneration\",\n        type: {\n          name: \"String\"\n        }\n      },\n      features: {\n        serializedName: \"properties.features\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"GalleryImageFeature\"\n            }\n          }\n        }\n      },\n      purchasePlan: {\n        serializedName: \"properties.purchasePlan\",\n        type: {\n          name: \"Composite\",\n          className: \"ImagePurchasePlan\"\n        }\n      }\n    }\n  }\n};\n\nexport const SharedGalleryImageVersion: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"SharedGalleryImageVersion\",\n    modelProperties: {\n      ...PirSharedGalleryResource.type.modelProperties,\n      publishedDate: {\n        serializedName: \"properties.publishedDate\",\n        type: {\n          name: \"DateTime\"\n        }\n      },\n      endOfLifeDate: {\n        serializedName: \"properties.endOfLifeDate\",\n        type: {\n          name: \"DateTime\"\n        }\n      }\n    }\n  }\n};\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport {\n  OperationParameter,\n  OperationURLParameter,\n  OperationQueryParameter\n} from \"@azure/core-client\";\nimport {\n  AvailabilitySet as AvailabilitySetMapper,\n  AvailabilitySetUpdate as AvailabilitySetUpdateMapper,\n  ProximityPlacementGroup as ProximityPlacementGroupMapper,\n  ProximityPlacementGroupUpdate as ProximityPlacementGroupUpdateMapper,\n  DedicatedHostGroup as DedicatedHostGroupMapper,\n  DedicatedHostGroupUpdate as DedicatedHostGroupUpdateMapper,\n  DedicatedHost as DedicatedHostMapper,\n  DedicatedHostUpdate as DedicatedHostUpdateMapper,\n  SshPublicKeyResource as SshPublicKeyResourceMapper,\n  SshPublicKeyUpdateResource as SshPublicKeyUpdateResourceMapper,\n  VirtualMachineExtension as VirtualMachineExtensionMapper,\n  VirtualMachineExtensionUpdate as VirtualMachineExtensionUpdateMapper,\n  VirtualMachineCaptureParameters as VirtualMachineCaptureParametersMapper,\n  VirtualMachine as VirtualMachineMapper,\n  VirtualMachineUpdate as VirtualMachineUpdateMapper,\n  VirtualMachineReimageParameters as VirtualMachineReimageParametersMapper,\n  VirtualMachineInstallPatchesParameters as VirtualMachineInstallPatchesParametersMapper,\n  RunCommandInput as RunCommandInputMapper,\n  VirtualMachineScaleSet as VirtualMachineScaleSetMapper,\n  VirtualMachineScaleSetUpdate as VirtualMachineScaleSetUpdateMapper,\n  VirtualMachineScaleSetVMInstanceIDs as VirtualMachineScaleSetVMInstanceIDsMapper,\n  VirtualMachineScaleSetVMInstanceRequiredIDs as VirtualMachineScaleSetVMInstanceRequiredIDsMapper,\n  VirtualMachineScaleSetReimageParameters as VirtualMachineScaleSetReimageParametersMapper,\n  VMScaleSetConvertToSinglePlacementGroupInput as VMScaleSetConvertToSinglePlacementGroupInputMapper,\n  OrchestrationServiceStateInput as OrchestrationServiceStateInputMapper,\n  Image as ImageMapper,\n  ImageUpdate as ImageUpdateMapper,\n  RestorePointCollection as RestorePointCollectionMapper,\n  RestorePointCollectionUpdate as RestorePointCollectionUpdateMapper,\n  RestorePoint as RestorePointMapper,\n  CapacityReservationGroup as CapacityReservationGroupMapper,\n  CapacityReservationGroupUpdate as CapacityReservationGroupUpdateMapper,\n  CapacityReservation as CapacityReservationMapper,\n  CapacityReservationUpdate as CapacityReservationUpdateMapper,\n  VirtualMachineScaleSetExtension as VirtualMachineScaleSetExtensionMapper,\n  VirtualMachineScaleSetExtensionUpdate as VirtualMachineScaleSetExtensionUpdateMapper,\n  VirtualMachineScaleSetVMExtension as VirtualMachineScaleSetVMExtensionMapper,\n  VirtualMachineScaleSetVMExtensionUpdate as VirtualMachineScaleSetVMExtensionUpdateMapper,\n  VirtualMachineScaleSetVMReimageParameters as VirtualMachineScaleSetVMReimageParametersMapper,\n  VirtualMachineScaleSetVM as VirtualMachineScaleSetVMMapper,\n  RequestRateByIntervalInput as RequestRateByIntervalInputMapper,\n  ThrottledRequestsInput as ThrottledRequestsInputMapper,\n  VirtualMachineRunCommand as VirtualMachineRunCommandMapper,\n  VirtualMachineRunCommandUpdate as VirtualMachineRunCommandUpdateMapper,\n  Disk as DiskMapper,\n  DiskUpdate as DiskUpdateMapper,\n  GrantAccessData as GrantAccessDataMapper,\n  Snapshot as SnapshotMapper,\n  SnapshotUpdate as SnapshotUpdateMapper,\n  DiskEncryptionSet as DiskEncryptionSetMapper,\n  DiskEncryptionSetUpdate as DiskEncryptionSetUpdateMapper,\n  DiskAccess as DiskAccessMapper,\n  DiskAccessUpdate as DiskAccessUpdateMapper,\n  PrivateEndpointConnection as PrivateEndpointConnectionMapper,\n  Gallery as GalleryMapper,\n  GalleryUpdate as GalleryUpdateMapper,\n  GalleryImage as GalleryImageMapper,\n  GalleryImageUpdate as GalleryImageUpdateMapper,\n  GalleryImageVersion as GalleryImageVersionMapper,\n  GalleryImageVersionUpdate as GalleryImageVersionUpdateMapper,\n  GalleryApplication as GalleryApplicationMapper,\n  GalleryApplicationUpdate as GalleryApplicationUpdateMapper,\n  GalleryApplicationVersion as GalleryApplicationVersionMapper,\n  GalleryApplicationVersionUpdate as GalleryApplicationVersionUpdateMapper,\n  SharingUpdate as SharingUpdateMapper,\n  CloudService as CloudServiceMapper,\n  CloudServiceUpdate as CloudServiceUpdateMapper,\n  RoleInstances as RoleInstancesMapper,\n  UpdateDomain as UpdateDomainMapper\n} from \"../models/mappers\";\n\nexport const accept: OperationParameter = {\n  parameterPath: \"accept\",\n  mapper: {\n    defaultValue: \"application/json\",\n    isConstant: true,\n    serializedName: \"Accept\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const $host: OperationURLParameter = {\n  parameterPath: \"$host\",\n  mapper: {\n    serializedName: \"$host\",\n    required: true,\n    type: {\n      name: \"String\"\n    }\n  },\n  skipEncoding: true\n};\n\nexport const apiVersion: OperationQueryParameter = {\n  parameterPath: \"apiVersion\",\n  mapper: {\n    defaultValue: \"2021-11-01\",\n    isConstant: true,\n    serializedName: \"api-version\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const contentType: OperationParameter = {\n  parameterPath: [\"options\", \"contentType\"],\n  mapper: {\n    defaultValue: \"application/json\",\n    isConstant: true,\n    serializedName: \"Content-Type\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const parameters: OperationParameter = {\n  parameterPath: \"parameters\",\n  mapper: AvailabilitySetMapper\n};\n\nexport const resourceGroupName: OperationURLParameter = {\n  parameterPath: \"resourceGroupName\",\n  mapper: {\n    serializedName: \"resourceGroupName\",\n    required: true,\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const availabilitySetName: OperationURLParameter = {\n  parameterPath: \"availabilitySetName\",\n  mapper: {\n    serializedName: \"availabilitySetName\",\n    required: true,\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const subscriptionId: OperationURLParameter = {\n  parameterPath: \"subscriptionId\",\n  mapper: {\n    serializedName: \"subscriptionId\",\n    required: true,\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const parameters1: OperationParameter = {\n  parameterPath: \"parameters\",\n  mapper: AvailabilitySetUpdateMapper\n};\n\nexport const expand: OperationQueryParameter = {\n  parameterPath: [\"options\", \"expand\"],\n  mapper: {\n    serializedName: \"$expand\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const nextLink: OperationURLParameter = {\n  parameterPath: \"nextLink\",\n  mapper: {\n    serializedName: \"nextLink\",\n    required: true,\n    type: {\n      name: \"String\"\n    }\n  },\n  skipEncoding: true\n};\n\nexport const parameters2: OperationParameter = {\n  parameterPath: \"parameters\",\n  mapper: ProximityPlacementGroupMapper\n};\n\nexport const proximityPlacementGroupName: OperationURLParameter = {\n  parameterPath: \"proximityPlacementGroupName\",\n  mapper: {\n    serializedName: \"proximityPlacementGroupName\",\n    required: true,\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const parameters3: OperationParameter = {\n  parameterPath: \"parameters\",\n  mapper: ProximityPlacementGroupUpdateMapper\n};\n\nexport const includeColocationStatus: OperationQueryParameter = {\n  parameterPath: [\"options\", \"includeColocationStatus\"],\n  mapper: {\n    serializedName: \"includeColocationStatus\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const parameters4: OperationParameter = {\n  parameterPath: \"parameters\",\n  mapper: DedicatedHostGroupMapper\n};\n\nexport const hostGroupName: OperationURLParameter = {\n  parameterPath: \"hostGroupName\",\n  mapper: {\n    serializedName: \"hostGroupName\",\n    required: true,\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const parameters5: OperationParameter = {\n  parameterPath: \"parameters\",\n  mapper: DedicatedHostGroupUpdateMapper\n};\n\nexport const expand1: OperationQueryParameter = {\n  parameterPath: [\"options\", \"expand\"],\n  mapper: {\n    serializedName: \"$expand\",\n    type: {\n      name: \"Enum\",\n      allowedValues: [\"instanceView\", \"userData\"]\n    }\n  }\n};\n\nexport const parameters6: OperationParameter = {\n  parameterPath: \"parameters\",\n  mapper: DedicatedHostMapper\n};\n\nexport const hostName: OperationURLParameter = {\n  parameterPath: \"hostName\",\n  mapper: {\n    serializedName: \"hostName\",\n    required: true,\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const parameters7: OperationParameter = {\n  parameterPath: \"parameters\",\n  mapper: DedicatedHostUpdateMapper\n};\n\nexport const parameters8: OperationParameter = {\n  parameterPath: \"parameters\",\n  mapper: SshPublicKeyResourceMapper\n};\n\nexport const sshPublicKeyName: OperationURLParameter = {\n  parameterPath: \"sshPublicKeyName\",\n  mapper: {\n    serializedName: \"sshPublicKeyName\",\n    required: true,\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const parameters9: OperationParameter = {\n  parameterPath: \"parameters\",\n  mapper: SshPublicKeyUpdateResourceMapper\n};\n\nexport const location: OperationURLParameter = {\n  parameterPath: \"location\",\n  mapper: {\n    serializedName: \"location\",\n    required: true,\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const publisherName: OperationURLParameter = {\n  parameterPath: \"publisherName\",\n  mapper: {\n    serializedName: \"publisherName\",\n    required: true,\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const typeParam: OperationURLParameter = {\n  parameterPath: \"typeParam\",\n  mapper: {\n    serializedName: \"type\",\n    required: true,\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const version: OperationURLParameter = {\n  parameterPath: \"version\",\n  mapper: {\n    serializedName: \"version\",\n    required: true,\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const filter: OperationQueryParameter = {\n  parameterPath: [\"options\", \"filter\"],\n  mapper: {\n    serializedName: \"$filter\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const top: OperationQueryParameter = {\n  parameterPath: [\"options\", \"top\"],\n  mapper: {\n    serializedName: \"$top\",\n    type: {\n      name: \"Number\"\n    }\n  }\n};\n\nexport const orderby: OperationQueryParameter = {\n  parameterPath: [\"options\", \"orderby\"],\n  mapper: {\n    serializedName: \"$orderby\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const extensionParameters: OperationParameter = {\n  parameterPath: \"extensionParameters\",\n  mapper: VirtualMachineExtensionMapper\n};\n\nexport const vmName: OperationURLParameter = {\n  parameterPath: \"vmName\",\n  mapper: {\n    serializedName: \"vmName\",\n    required: true,\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const vmExtensionName: OperationURLParameter = {\n  parameterPath: \"vmExtensionName\",\n  mapper: {\n    serializedName: \"vmExtensionName\",\n    required: true,\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const extensionParameters1: OperationParameter = {\n  parameterPath: \"extensionParameters\",\n  mapper: VirtualMachineExtensionUpdateMapper\n};\n\nexport const offer: OperationURLParameter = {\n  parameterPath: \"offer\",\n  mapper: {\n    serializedName: \"offer\",\n    required: true,\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const skus: OperationURLParameter = {\n  parameterPath: \"skus\",\n  mapper: {\n    serializedName: \"skus\",\n    required: true,\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const edgeZone: OperationURLParameter = {\n  parameterPath: \"edgeZone\",\n  mapper: {\n    serializedName: \"edgeZone\",\n    required: true,\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const location1: OperationURLParameter = {\n  parameterPath: \"location\",\n  mapper: {\n    constraints: {\n      Pattern: new RegExp(\"^[-\\\\w\\\\._]+$\")\n    },\n    serializedName: \"location\",\n    required: true,\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const parameters10: OperationParameter = {\n  parameterPath: \"parameters\",\n  mapper: VirtualMachineCaptureParametersMapper\n};\n\nexport const parameters11: OperationParameter = {\n  parameterPath: \"parameters\",\n  mapper: VirtualMachineMapper\n};\n\nexport const parameters12: OperationParameter = {\n  parameterPath: \"parameters\",\n  mapper: VirtualMachineUpdateMapper\n};\n\nexport const forceDeletion: OperationQueryParameter = {\n  parameterPath: [\"options\", \"forceDeletion\"],\n  mapper: {\n    serializedName: \"forceDeletion\",\n    type: {\n      name: \"Boolean\"\n    }\n  }\n};\n\nexport const hibernate: OperationQueryParameter = {\n  parameterPath: [\"options\", \"hibernate\"],\n  mapper: {\n    serializedName: \"hibernate\",\n    type: {\n      name: \"Boolean\"\n    }\n  }\n};\n\nexport const statusOnly: OperationQueryParameter = {\n  parameterPath: [\"options\", \"statusOnly\"],\n  mapper: {\n    serializedName: \"statusOnly\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const skipShutdown: OperationQueryParameter = {\n  parameterPath: [\"options\", \"skipShutdown\"],\n  mapper: {\n    defaultValue: false,\n    serializedName: \"skipShutdown\",\n    type: {\n      name: \"Boolean\"\n    }\n  }\n};\n\nexport const parameters13: OperationParameter = {\n  parameterPath: [\"options\", \"parameters\"],\n  mapper: VirtualMachineReimageParametersMapper\n};\n\nexport const sasUriExpirationTimeInMinutes: OperationQueryParameter = {\n  parameterPath: [\"options\", \"sasUriExpirationTimeInMinutes\"],\n  mapper: {\n    serializedName: \"sasUriExpirationTimeInMinutes\",\n    type: {\n      name: \"Number\"\n    }\n  }\n};\n\nexport const installPatchesInput: OperationParameter = {\n  parameterPath: \"installPatchesInput\",\n  mapper: VirtualMachineInstallPatchesParametersMapper\n};\n\nexport const parameters14: OperationParameter = {\n  parameterPath: \"parameters\",\n  mapper: RunCommandInputMapper\n};\n\nexport const accept1: OperationParameter = {\n  parameterPath: \"accept\",\n  mapper: {\n    defaultValue: \"application/json, text/json\",\n    isConstant: true,\n    serializedName: \"Accept\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const parameters15: OperationParameter = {\n  parameterPath: \"parameters\",\n  mapper: VirtualMachineScaleSetMapper\n};\n\nexport const vmScaleSetName: OperationURLParameter = {\n  parameterPath: \"vmScaleSetName\",\n  mapper: {\n    serializedName: \"vmScaleSetName\",\n    required: true,\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const parameters16: OperationParameter = {\n  parameterPath: \"parameters\",\n  mapper: VirtualMachineScaleSetUpdateMapper\n};\n\nexport const expand2: OperationQueryParameter = {\n  parameterPath: [\"options\", \"expand\"],\n  mapper: {\n    serializedName: \"$expand\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const vmInstanceIDs: OperationParameter = {\n  parameterPath: [\"options\", \"vmInstanceIDs\"],\n  mapper: VirtualMachineScaleSetVMInstanceIDsMapper\n};\n\nexport const vmInstanceIDs1: OperationParameter = {\n  parameterPath: \"vmInstanceIDs\",\n  mapper: VirtualMachineScaleSetVMInstanceRequiredIDsMapper\n};\n\nexport const vmScaleSetReimageInput: OperationParameter = {\n  parameterPath: [\"options\", \"vmScaleSetReimageInput\"],\n  mapper: VirtualMachineScaleSetReimageParametersMapper\n};\n\nexport const platformUpdateDomain: OperationQueryParameter = {\n  parameterPath: \"platformUpdateDomain\",\n  mapper: {\n    serializedName: \"platformUpdateDomain\",\n    required: true,\n    type: {\n      name: \"Number\"\n    }\n  }\n};\n\nexport const zone: OperationQueryParameter = {\n  parameterPath: [\"options\", \"zone\"],\n  mapper: {\n    serializedName: \"zone\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const placementGroupId: OperationQueryParameter = {\n  parameterPath: [\"options\", \"placementGroupId\"],\n  mapper: {\n    serializedName: \"placementGroupId\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const parameters17: OperationParameter = {\n  parameterPath: \"parameters\",\n  mapper: VMScaleSetConvertToSinglePlacementGroupInputMapper\n};\n\nexport const parameters18: OperationParameter = {\n  parameterPath: \"parameters\",\n  mapper: OrchestrationServiceStateInputMapper\n};\n\nexport const parameters19: OperationParameter = {\n  parameterPath: \"parameters\",\n  mapper: ImageMapper\n};\n\nexport const imageName: OperationURLParameter = {\n  parameterPath: \"imageName\",\n  mapper: {\n    serializedName: \"imageName\",\n    required: true,\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const parameters20: OperationParameter = {\n  parameterPath: \"parameters\",\n  mapper: ImageUpdateMapper\n};\n\nexport const parameters21: OperationParameter = {\n  parameterPath: \"parameters\",\n  mapper: RestorePointCollectionMapper\n};\n\nexport const restorePointCollectionName: OperationURLParameter = {\n  parameterPath: \"restorePointCollectionName\",\n  mapper: {\n    serializedName: \"restorePointCollectionName\",\n    required: true,\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const parameters22: OperationParameter = {\n  parameterPath: \"parameters\",\n  mapper: RestorePointCollectionUpdateMapper\n};\n\nexport const expand3: OperationQueryParameter = {\n  parameterPath: [\"options\", \"expand\"],\n  mapper: {\n    serializedName: \"$expand\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const parameters23: OperationParameter = {\n  parameterPath: \"parameters\",\n  mapper: RestorePointMapper\n};\n\nexport const restorePointName: OperationURLParameter = {\n  parameterPath: \"restorePointName\",\n  mapper: {\n    serializedName: \"restorePointName\",\n    required: true,\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const expand4: OperationQueryParameter = {\n  parameterPath: [\"options\", \"expand\"],\n  mapper: {\n    serializedName: \"$expand\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const parameters24: OperationParameter = {\n  parameterPath: \"parameters\",\n  mapper: CapacityReservationGroupMapper\n};\n\nexport const capacityReservationGroupName: OperationURLParameter = {\n  parameterPath: \"capacityReservationGroupName\",\n  mapper: {\n    serializedName: \"capacityReservationGroupName\",\n    required: true,\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const parameters25: OperationParameter = {\n  parameterPath: \"parameters\",\n  mapper: CapacityReservationGroupUpdateMapper\n};\n\nexport const expand5: OperationQueryParameter = {\n  parameterPath: [\"options\", \"expand\"],\n  mapper: {\n    serializedName: \"$expand\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const expand6: OperationQueryParameter = {\n  parameterPath: [\"options\", \"expand\"],\n  mapper: {\n    serializedName: \"$expand\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const parameters26: OperationParameter = {\n  parameterPath: \"parameters\",\n  mapper: CapacityReservationMapper\n};\n\nexport const capacityReservationName: OperationURLParameter = {\n  parameterPath: \"capacityReservationName\",\n  mapper: {\n    serializedName: \"capacityReservationName\",\n    required: true,\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const parameters27: OperationParameter = {\n  parameterPath: \"parameters\",\n  mapper: CapacityReservationUpdateMapper\n};\n\nexport const expand7: OperationQueryParameter = {\n  parameterPath: [\"options\", \"expand\"],\n  mapper: {\n    serializedName: \"$expand\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const extensionParameters2: OperationParameter = {\n  parameterPath: \"extensionParameters\",\n  mapper: VirtualMachineScaleSetExtensionMapper\n};\n\nexport const vmssExtensionName: OperationURLParameter = {\n  parameterPath: \"vmssExtensionName\",\n  mapper: {\n    serializedName: \"vmssExtensionName\",\n    required: true,\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const extensionParameters3: OperationParameter = {\n  parameterPath: \"extensionParameters\",\n  mapper: VirtualMachineScaleSetExtensionUpdateMapper\n};\n\nexport const extensionParameters4: OperationParameter = {\n  parameterPath: \"extensionParameters\",\n  mapper: VirtualMachineScaleSetVMExtensionMapper\n};\n\nexport const instanceId: OperationURLParameter = {\n  parameterPath: \"instanceId\",\n  mapper: {\n    serializedName: \"instanceId\",\n    required: true,\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const extensionParameters5: OperationParameter = {\n  parameterPath: \"extensionParameters\",\n  mapper: VirtualMachineScaleSetVMExtensionUpdateMapper\n};\n\nexport const vmScaleSetVMReimageInput: OperationParameter = {\n  parameterPath: [\"options\", \"vmScaleSetVMReimageInput\"],\n  mapper: VirtualMachineScaleSetVMReimageParametersMapper\n};\n\nexport const parameters28: OperationParameter = {\n  parameterPath: \"parameters\",\n  mapper: VirtualMachineScaleSetVMMapper\n};\n\nexport const virtualMachineScaleSetName: OperationURLParameter = {\n  parameterPath: \"virtualMachineScaleSetName\",\n  mapper: {\n    serializedName: \"virtualMachineScaleSetName\",\n    required: true,\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const select: OperationQueryParameter = {\n  parameterPath: [\"options\", \"select\"],\n  mapper: {\n    serializedName: \"$select\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const parameters29: OperationParameter = {\n  parameterPath: \"parameters\",\n  mapper: RequestRateByIntervalInputMapper\n};\n\nexport const parameters30: OperationParameter = {\n  parameterPath: \"parameters\",\n  mapper: ThrottledRequestsInputMapper\n};\n\nexport const commandId: OperationURLParameter = {\n  parameterPath: \"commandId\",\n  mapper: {\n    serializedName: \"commandId\",\n    required: true,\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const runCommand: OperationParameter = {\n  parameterPath: \"runCommand\",\n  mapper: VirtualMachineRunCommandMapper\n};\n\nexport const runCommandName: OperationURLParameter = {\n  parameterPath: \"runCommandName\",\n  mapper: {\n    serializedName: \"runCommandName\",\n    required: true,\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const runCommand1: OperationParameter = {\n  parameterPath: \"runCommand\",\n  mapper: VirtualMachineRunCommandUpdateMapper\n};\n\nexport const apiVersion1: OperationQueryParameter = {\n  parameterPath: \"apiVersion\",\n  mapper: {\n    defaultValue: \"2021-07-01\",\n    isConstant: true,\n    serializedName: \"api-version\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const includeExtendedLocations: OperationQueryParameter = {\n  parameterPath: [\"options\", \"includeExtendedLocations\"],\n  mapper: {\n    serializedName: \"includeExtendedLocations\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const disk: OperationParameter = {\n  parameterPath: \"disk\",\n  mapper: DiskMapper\n};\n\nexport const diskName: OperationURLParameter = {\n  parameterPath: \"diskName\",\n  mapper: {\n    serializedName: \"diskName\",\n    required: true,\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const apiVersion2: OperationQueryParameter = {\n  parameterPath: \"apiVersion\",\n  mapper: {\n    defaultValue: \"2021-08-01\",\n    isConstant: true,\n    serializedName: \"api-version\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const disk1: OperationParameter = {\n  parameterPath: \"disk\",\n  mapper: DiskUpdateMapper\n};\n\nexport const grantAccessData: OperationParameter = {\n  parameterPath: \"grantAccessData\",\n  mapper: GrantAccessDataMapper\n};\n\nexport const snapshot: OperationParameter = {\n  parameterPath: \"snapshot\",\n  mapper: SnapshotMapper\n};\n\nexport const snapshotName: OperationURLParameter = {\n  parameterPath: \"snapshotName\",\n  mapper: {\n    serializedName: \"snapshotName\",\n    required: true,\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const snapshot1: OperationParameter = {\n  parameterPath: \"snapshot\",\n  mapper: SnapshotUpdateMapper\n};\n\nexport const diskEncryptionSet: OperationParameter = {\n  parameterPath: \"diskEncryptionSet\",\n  mapper: DiskEncryptionSetMapper\n};\n\nexport const diskEncryptionSetName: OperationURLParameter = {\n  parameterPath: \"diskEncryptionSetName\",\n  mapper: {\n    serializedName: \"diskEncryptionSetName\",\n    required: true,\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const diskEncryptionSet1: OperationParameter = {\n  parameterPath: \"diskEncryptionSet\",\n  mapper: DiskEncryptionSetUpdateMapper\n};\n\nexport const diskAccess: OperationParameter = {\n  parameterPath: \"diskAccess\",\n  mapper: DiskAccessMapper\n};\n\nexport const diskAccessName: OperationURLParameter = {\n  parameterPath: \"diskAccessName\",\n  mapper: {\n    serializedName: \"diskAccessName\",\n    required: true,\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const diskAccess1: OperationParameter = {\n  parameterPath: \"diskAccess\",\n  mapper: DiskAccessUpdateMapper\n};\n\nexport const privateEndpointConnection: OperationParameter = {\n  parameterPath: \"privateEndpointConnection\",\n  mapper: PrivateEndpointConnectionMapper\n};\n\nexport const privateEndpointConnectionName: OperationURLParameter = {\n  parameterPath: \"privateEndpointConnectionName\",\n  mapper: {\n    serializedName: \"privateEndpointConnectionName\",\n    required: true,\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const vmRestorePointName: OperationURLParameter = {\n  parameterPath: \"vmRestorePointName\",\n  mapper: {\n    serializedName: \"vmRestorePointName\",\n    required: true,\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const diskRestorePointName: OperationURLParameter = {\n  parameterPath: \"diskRestorePointName\",\n  mapper: {\n    serializedName: \"diskRestorePointName\",\n    required: true,\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const gallery: OperationParameter = {\n  parameterPath: \"gallery\",\n  mapper: GalleryMapper\n};\n\nexport const galleryName: OperationURLParameter = {\n  parameterPath: \"galleryName\",\n  mapper: {\n    serializedName: \"galleryName\",\n    required: true,\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const apiVersion3: OperationQueryParameter = {\n  parameterPath: \"apiVersion\",\n  mapper: {\n    defaultValue: \"2021-10-01\",\n    isConstant: true,\n    serializedName: \"api-version\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const gallery1: OperationParameter = {\n  parameterPath: \"gallery\",\n  mapper: GalleryUpdateMapper\n};\n\nexport const select1: OperationQueryParameter = {\n  parameterPath: [\"options\", \"select\"],\n  mapper: {\n    serializedName: \"$select\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const expand8: OperationQueryParameter = {\n  parameterPath: [\"options\", \"expand\"],\n  mapper: {\n    serializedName: \"$expand\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const galleryImage: OperationParameter = {\n  parameterPath: \"galleryImage\",\n  mapper: GalleryImageMapper\n};\n\nexport const galleryImageName: OperationURLParameter = {\n  parameterPath: \"galleryImageName\",\n  mapper: {\n    serializedName: \"galleryImageName\",\n    required: true,\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const galleryImage1: OperationParameter = {\n  parameterPath: \"galleryImage\",\n  mapper: GalleryImageUpdateMapper\n};\n\nexport const galleryImageVersion: OperationParameter = {\n  parameterPath: \"galleryImageVersion\",\n  mapper: GalleryImageVersionMapper\n};\n\nexport const galleryImageVersionName: OperationURLParameter = {\n  parameterPath: \"galleryImageVersionName\",\n  mapper: {\n    serializedName: \"galleryImageVersionName\",\n    required: true,\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const galleryImageVersion1: OperationParameter = {\n  parameterPath: \"galleryImageVersion\",\n  mapper: GalleryImageVersionUpdateMapper\n};\n\nexport const expand9: OperationQueryParameter = {\n  parameterPath: [\"options\", \"expand\"],\n  mapper: {\n    serializedName: \"$expand\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const galleryApplication: OperationParameter = {\n  parameterPath: \"galleryApplication\",\n  mapper: GalleryApplicationMapper\n};\n\nexport const galleryApplicationName: OperationURLParameter = {\n  parameterPath: \"galleryApplicationName\",\n  mapper: {\n    serializedName: \"galleryApplicationName\",\n    required: true,\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const galleryApplication1: OperationParameter = {\n  parameterPath: \"galleryApplication\",\n  mapper: GalleryApplicationUpdateMapper\n};\n\nexport const galleryApplicationVersion: OperationParameter = {\n  parameterPath: \"galleryApplicationVersion\",\n  mapper: GalleryApplicationVersionMapper\n};\n\nexport const galleryApplicationVersionName: OperationURLParameter = {\n  parameterPath: \"galleryApplicationVersionName\",\n  mapper: {\n    serializedName: \"galleryApplicationVersionName\",\n    required: true,\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const galleryApplicationVersion1: OperationParameter = {\n  parameterPath: \"galleryApplicationVersion\",\n  mapper: GalleryApplicationVersionUpdateMapper\n};\n\nexport const sharingUpdate: OperationParameter = {\n  parameterPath: \"sharingUpdate\",\n  mapper: SharingUpdateMapper\n};\n\nexport const sharedTo: OperationQueryParameter = {\n  parameterPath: [\"options\", \"sharedTo\"],\n  mapper: {\n    serializedName: \"sharedTo\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const galleryUniqueName: OperationURLParameter = {\n  parameterPath: \"galleryUniqueName\",\n  mapper: {\n    serializedName: \"galleryUniqueName\",\n    required: true,\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const publicGalleryName: OperationURLParameter = {\n  parameterPath: \"publicGalleryName\",\n  mapper: {\n    serializedName: \"publicGalleryName\",\n    required: true,\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const roleInstanceName: OperationURLParameter = {\n  parameterPath: \"roleInstanceName\",\n  mapper: {\n    serializedName: \"roleInstanceName\",\n    required: true,\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const cloudServiceName: OperationURLParameter = {\n  parameterPath: \"cloudServiceName\",\n  mapper: {\n    serializedName: \"cloudServiceName\",\n    required: true,\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const apiVersion4: OperationQueryParameter = {\n  parameterPath: \"apiVersion\",\n  mapper: {\n    defaultValue: \"2021-03-01\",\n    isConstant: true,\n    serializedName: \"api-version\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const accept2: OperationParameter = {\n  parameterPath: \"accept\",\n  mapper: {\n    defaultValue: \"application/x-rdp\",\n    isConstant: true,\n    serializedName: \"Accept\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const roleName: OperationURLParameter = {\n  parameterPath: \"roleName\",\n  mapper: {\n    serializedName: \"roleName\",\n    required: true,\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const parameters31: OperationParameter = {\n  parameterPath: [\"options\", \"parameters\"],\n  mapper: CloudServiceMapper\n};\n\nexport const parameters32: OperationParameter = {\n  parameterPath: [\"options\", \"parameters\"],\n  mapper: CloudServiceUpdateMapper\n};\n\nexport const parameters33: OperationParameter = {\n  parameterPath: [\"options\", \"parameters\"],\n  mapper: RoleInstancesMapper\n};\n\nexport const parameters34: OperationParameter = {\n  parameterPath: [\"options\", \"parameters\"],\n  mapper: UpdateDomainMapper\n};\n\nexport const updateDomain: OperationURLParameter = {\n  parameterPath: \"updateDomain\",\n  mapper: {\n    serializedName: \"updateDomain\",\n    required: true,\n    type: {\n      name: \"Number\"\n    }\n  }\n};\n\nexport const osVersionName: OperationURLParameter = {\n  parameterPath: \"osVersionName\",\n  mapper: {\n    serializedName: \"osVersionName\",\n    required: true,\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const osFamilyName: OperationURLParameter = {\n  parameterPath: \"osFamilyName\",\n  mapper: {\n    serializedName: \"osFamilyName\",\n    required: true,\n    type: {\n      name: \"String\"\n    }\n  }\n};\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport { PagedAsyncIterableIterator } from \"@azure/core-paging\";\nimport { Operations } from \"../operationsInterfaces\";\nimport * as coreClient from \"@azure/core-client\";\nimport * as Mappers from \"../models/mappers\";\nimport * as Parameters from \"../models/parameters\";\nimport { ComputeManagementClient } from \"../computeManagementClient\";\nimport {\n  ComputeOperationValue,\n  OperationsListOptionalParams,\n  OperationsListResponse\n} from \"../models\";\n\n/// <reference lib=\"esnext.asynciterable\" />\n/** Class containing Operations operations. */\nexport class OperationsImpl implements Operations {\n  private readonly client: ComputeManagementClient;\n\n  /**\n   * Initialize a new instance of the class Operations class.\n   * @param client Reference to the service client\n   */\n  constructor(client: ComputeManagementClient) {\n    this.client = client;\n  }\n\n  /**\n   * Gets a list of compute operations.\n   * @param options The options parameters.\n   */\n  public list(\n    options?: OperationsListOptionalParams\n  ): PagedAsyncIterableIterator<ComputeOperationValue> {\n    const iter = this.listPagingAll(options);\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: () => {\n        return this.listPagingPage(options);\n      }\n    };\n  }\n\n  private async *listPagingPage(\n    options?: OperationsListOptionalParams\n  ): AsyncIterableIterator<ComputeOperationValue[]> {\n    let result = await this._list(options);\n    yield result.value || [];\n  }\n\n  private async *listPagingAll(\n    options?: OperationsListOptionalParams\n  ): AsyncIterableIterator<ComputeOperationValue> {\n    for await (const page of this.listPagingPage(options)) {\n      yield* page;\n    }\n  }\n\n  /**\n   * Gets a list of compute operations.\n   * @param options The options parameters.\n   */\n  private _list(\n    options?: OperationsListOptionalParams\n  ): Promise<OperationsListResponse> {\n    return this.client.sendOperationRequest({ options }, listOperationSpec);\n  }\n}\n// Operation Specifications\nconst serializer = coreClient.createSerializer(Mappers, /* isXml */ false);\n\nconst listOperationSpec: coreClient.OperationSpec = {\n  path: \"/providers/Microsoft.Compute/operations\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.ComputeOperationListResult\n    },\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [Parameters.$host],\n  headerParameters: [Parameters.accept],\n  serializer\n};\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport { PagedAsyncIterableIterator } from \"@azure/core-paging\";\nimport { AvailabilitySets } from \"../operationsInterfaces\";\nimport * as coreClient from \"@azure/core-client\";\nimport * as Mappers from \"../models/mappers\";\nimport * as Parameters from \"../models/parameters\";\nimport { ComputeManagementClient } from \"../computeManagementClient\";\nimport {\n  AvailabilitySet,\n  AvailabilitySetsListBySubscriptionNextOptionalParams,\n  AvailabilitySetsListBySubscriptionOptionalParams,\n  AvailabilitySetsListNextOptionalParams,\n  AvailabilitySetsListOptionalParams,\n  VirtualMachineSize,\n  AvailabilitySetsListAvailableSizesOptionalParams,\n  AvailabilitySetsCreateOrUpdateOptionalParams,\n  AvailabilitySetsCreateOrUpdateResponse,\n  AvailabilitySetUpdate,\n  AvailabilitySetsUpdateOptionalParams,\n  AvailabilitySetsUpdateResponse,\n  AvailabilitySetsDeleteOptionalParams,\n  AvailabilitySetsGetOptionalParams,\n  AvailabilitySetsGetResponse,\n  AvailabilitySetsListBySubscriptionResponse,\n  AvailabilitySetsListResponse,\n  AvailabilitySetsListAvailableSizesResponse,\n  AvailabilitySetsListBySubscriptionNextResponse,\n  AvailabilitySetsListNextResponse\n} from \"../models\";\n\n/// <reference lib=\"esnext.asynciterable\" />\n/** Class containing AvailabilitySets operations. */\nexport class AvailabilitySetsImpl implements AvailabilitySets {\n  private readonly client: ComputeManagementClient;\n\n  /**\n   * Initialize a new instance of the class AvailabilitySets class.\n   * @param client Reference to the service client\n   */\n  constructor(client: ComputeManagementClient) {\n    this.client = client;\n  }\n\n  /**\n   * Lists all availability sets in a subscription.\n   * @param options The options parameters.\n   */\n  public listBySubscription(\n    options?: AvailabilitySetsListBySubscriptionOptionalParams\n  ): PagedAsyncIterableIterator<AvailabilitySet> {\n    const iter = this.listBySubscriptionPagingAll(options);\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: () => {\n        return this.listBySubscriptionPagingPage(options);\n      }\n    };\n  }\n\n  private async *listBySubscriptionPagingPage(\n    options?: AvailabilitySetsListBySubscriptionOptionalParams\n  ): AsyncIterableIterator<AvailabilitySet[]> {\n    let result = await this._listBySubscription(options);\n    yield result.value || [];\n    let continuationToken = result.nextLink;\n    while (continuationToken) {\n      result = await this._listBySubscriptionNext(continuationToken, options);\n      continuationToken = result.nextLink;\n      yield result.value || [];\n    }\n  }\n\n  private async *listBySubscriptionPagingAll(\n    options?: AvailabilitySetsListBySubscriptionOptionalParams\n  ): AsyncIterableIterator<AvailabilitySet> {\n    for await (const page of this.listBySubscriptionPagingPage(options)) {\n      yield* page;\n    }\n  }\n\n  /**\n   * Lists all availability sets in a resource group.\n   * @param resourceGroupName The name of the resource group.\n   * @param options The options parameters.\n   */\n  public list(\n    resourceGroupName: string,\n    options?: AvailabilitySetsListOptionalParams\n  ): PagedAsyncIterableIterator<AvailabilitySet> {\n    const iter = this.listPagingAll(resourceGroupName, options);\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: () => {\n        return this.listPagingPage(resourceGroupName, options);\n      }\n    };\n  }\n\n  private async *listPagingPage(\n    resourceGroupName: string,\n    options?: AvailabilitySetsListOptionalParams\n  ): AsyncIterableIterator<AvailabilitySet[]> {\n    let result = await this._list(resourceGroupName, options);\n    yield result.value || [];\n    let continuationToken = result.nextLink;\n    while (continuationToken) {\n      result = await this._listNext(\n        resourceGroupName,\n        continuationToken,\n        options\n      );\n      continuationToken = result.nextLink;\n      yield result.value || [];\n    }\n  }\n\n  private async *listPagingAll(\n    resourceGroupName: string,\n    options?: AvailabilitySetsListOptionalParams\n  ): AsyncIterableIterator<AvailabilitySet> {\n    for await (const page of this.listPagingPage(resourceGroupName, options)) {\n      yield* page;\n    }\n  }\n\n  /**\n   * Lists all available virtual machine sizes that can be used to create a new virtual machine in an\n   * existing availability set.\n   * @param resourceGroupName The name of the resource group.\n   * @param availabilitySetName The name of the availability set.\n   * @param options The options parameters.\n   */\n  public listAvailableSizes(\n    resourceGroupName: string,\n    availabilitySetName: string,\n    options?: AvailabilitySetsListAvailableSizesOptionalParams\n  ): PagedAsyncIterableIterator<VirtualMachineSize> {\n    const iter = this.listAvailableSizesPagingAll(\n      resourceGroupName,\n      availabilitySetName,\n      options\n    );\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: () => {\n        return this.listAvailableSizesPagingPage(\n          resourceGroupName,\n          availabilitySetName,\n          options\n        );\n      }\n    };\n  }\n\n  private async *listAvailableSizesPagingPage(\n    resourceGroupName: string,\n    availabilitySetName: string,\n    options?: AvailabilitySetsListAvailableSizesOptionalParams\n  ): AsyncIterableIterator<VirtualMachineSize[]> {\n    let result = await this._listAvailableSizes(\n      resourceGroupName,\n      availabilitySetName,\n      options\n    );\n    yield result.value || [];\n  }\n\n  private async *listAvailableSizesPagingAll(\n    resourceGroupName: string,\n    availabilitySetName: string,\n    options?: AvailabilitySetsListAvailableSizesOptionalParams\n  ): AsyncIterableIterator<VirtualMachineSize> {\n    for await (const page of this.listAvailableSizesPagingPage(\n      resourceGroupName,\n      availabilitySetName,\n      options\n    )) {\n      yield* page;\n    }\n  }\n\n  /**\n   * Create or update an availability set.\n   * @param resourceGroupName The name of the resource group.\n   * @param availabilitySetName The name of the availability set.\n   * @param parameters Parameters supplied to the Create Availability Set operation.\n   * @param options The options parameters.\n   */\n  createOrUpdate(\n    resourceGroupName: string,\n    availabilitySetName: string,\n    parameters: AvailabilitySet,\n    options?: AvailabilitySetsCreateOrUpdateOptionalParams\n  ): Promise<AvailabilitySetsCreateOrUpdateResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, availabilitySetName, parameters, options },\n      createOrUpdateOperationSpec\n    );\n  }\n\n  /**\n   * Update an availability set.\n   * @param resourceGroupName The name of the resource group.\n   * @param availabilitySetName The name of the availability set.\n   * @param parameters Parameters supplied to the Update Availability Set operation.\n   * @param options The options parameters.\n   */\n  update(\n    resourceGroupName: string,\n    availabilitySetName: string,\n    parameters: AvailabilitySetUpdate,\n    options?: AvailabilitySetsUpdateOptionalParams\n  ): Promise<AvailabilitySetsUpdateResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, availabilitySetName, parameters, options },\n      updateOperationSpec\n    );\n  }\n\n  /**\n   * Delete an availability set.\n   * @param resourceGroupName The name of the resource group.\n   * @param availabilitySetName The name of the availability set.\n   * @param options The options parameters.\n   */\n  delete(\n    resourceGroupName: string,\n    availabilitySetName: string,\n    options?: AvailabilitySetsDeleteOptionalParams\n  ): Promise<void> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, availabilitySetName, options },\n      deleteOperationSpec\n    );\n  }\n\n  /**\n   * Retrieves information about an availability set.\n   * @param resourceGroupName The name of the resource group.\n   * @param availabilitySetName The name of the availability set.\n   * @param options The options parameters.\n   */\n  get(\n    resourceGroupName: string,\n    availabilitySetName: string,\n    options?: AvailabilitySetsGetOptionalParams\n  ): Promise<AvailabilitySetsGetResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, availabilitySetName, options },\n      getOperationSpec\n    );\n  }\n\n  /**\n   * Lists all availability sets in a subscription.\n   * @param options The options parameters.\n   */\n  private _listBySubscription(\n    options?: AvailabilitySetsListBySubscriptionOptionalParams\n  ): Promise<AvailabilitySetsListBySubscriptionResponse> {\n    return this.client.sendOperationRequest(\n      { options },\n      listBySubscriptionOperationSpec\n    );\n  }\n\n  /**\n   * Lists all availability sets in a resource group.\n   * @param resourceGroupName The name of the resource group.\n   * @param options The options parameters.\n   */\n  private _list(\n    resourceGroupName: string,\n    options?: AvailabilitySetsListOptionalParams\n  ): Promise<AvailabilitySetsListResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, options },\n      listOperationSpec\n    );\n  }\n\n  /**\n   * Lists all available virtual machine sizes that can be used to create a new virtual machine in an\n   * existing availability set.\n   * @param resourceGroupName The name of the resource group.\n   * @param availabilitySetName The name of the availability set.\n   * @param options The options parameters.\n   */\n  private _listAvailableSizes(\n    resourceGroupName: string,\n    availabilitySetName: string,\n    options?: AvailabilitySetsListAvailableSizesOptionalParams\n  ): Promise<AvailabilitySetsListAvailableSizesResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, availabilitySetName, options },\n      listAvailableSizesOperationSpec\n    );\n  }\n\n  /**\n   * ListBySubscriptionNext\n   * @param nextLink The nextLink from the previous successful call to the ListBySubscription method.\n   * @param options The options parameters.\n   */\n  private _listBySubscriptionNext(\n    nextLink: string,\n    options?: AvailabilitySetsListBySubscriptionNextOptionalParams\n  ): Promise<AvailabilitySetsListBySubscriptionNextResponse> {\n    return this.client.sendOperationRequest(\n      { nextLink, options },\n      listBySubscriptionNextOperationSpec\n    );\n  }\n\n  /**\n   * ListNext\n   * @param resourceGroupName The name of the resource group.\n   * @param nextLink The nextLink from the previous successful call to the List method.\n   * @param options The options parameters.\n   */\n  private _listNext(\n    resourceGroupName: string,\n    nextLink: string,\n    options?: AvailabilitySetsListNextOptionalParams\n  ): Promise<AvailabilitySetsListNextResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, nextLink, options },\n      listNextOperationSpec\n    );\n  }\n}\n// Operation Specifications\nconst serializer = coreClient.createSerializer(Mappers, /* isXml */ false);\n\nconst createOrUpdateOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/availabilitySets/{availabilitySetName}\",\n  httpMethod: \"PUT\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.AvailabilitySet\n    },\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  requestBody: Parameters.parameters,\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.resourceGroupName,\n    Parameters.availabilitySetName,\n    Parameters.subscriptionId\n  ],\n  headerParameters: [Parameters.accept, Parameters.contentType],\n  mediaType: \"json\",\n  serializer\n};\nconst updateOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/availabilitySets/{availabilitySetName}\",\n  httpMethod: \"PATCH\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.AvailabilitySet\n    },\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  requestBody: Parameters.parameters1,\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.resourceGroupName,\n    Parameters.availabilitySetName,\n    Parameters.subscriptionId\n  ],\n  headerParameters: [Parameters.accept, Parameters.contentType],\n  mediaType: \"json\",\n  serializer\n};\nconst deleteOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/availabilitySets/{availabilitySetName}\",\n  httpMethod: \"DELETE\",\n  responses: {\n    200: {},\n    204: {},\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.resourceGroupName,\n    Parameters.availabilitySetName,\n    Parameters.subscriptionId\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst getOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/availabilitySets/{availabilitySetName}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.AvailabilitySet\n    },\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.resourceGroupName,\n    Parameters.availabilitySetName,\n    Parameters.subscriptionId\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst listBySubscriptionOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/providers/Microsoft.Compute/availabilitySets\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.AvailabilitySetListResult\n    },\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  queryParameters: [Parameters.apiVersion, Parameters.expand],\n  urlParameters: [Parameters.$host, Parameters.subscriptionId],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst listOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/availabilitySets\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.AvailabilitySetListResult\n    },\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.resourceGroupName,\n    Parameters.subscriptionId\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst listAvailableSizesOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/availabilitySets/{availabilitySetName}/vmSizes\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.VirtualMachineSizeListResult\n    },\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.resourceGroupName,\n    Parameters.availabilitySetName,\n    Parameters.subscriptionId\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst listBySubscriptionNextOperationSpec: coreClient.OperationSpec = {\n  path: \"{nextLink}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.AvailabilitySetListResult\n    },\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  queryParameters: [Parameters.apiVersion, Parameters.expand],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.nextLink\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst listNextOperationSpec: coreClient.OperationSpec = {\n  path: \"{nextLink}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.AvailabilitySetListResult\n    },\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.resourceGroupName,\n    Parameters.subscriptionId,\n    Parameters.nextLink\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport { PagedAsyncIterableIterator } from \"@azure/core-paging\";\nimport { ProximityPlacementGroups } from \"../operationsInterfaces\";\nimport * as coreClient from \"@azure/core-client\";\nimport * as Mappers from \"../models/mappers\";\nimport * as Parameters from \"../models/parameters\";\nimport { ComputeManagementClient } from \"../computeManagementClient\";\nimport {\n  ProximityPlacementGroup,\n  ProximityPlacementGroupsListBySubscriptionNextOptionalParams,\n  ProximityPlacementGroupsListBySubscriptionOptionalParams,\n  ProximityPlacementGroupsListByResourceGroupNextOptionalParams,\n  ProximityPlacementGroupsListByResourceGroupOptionalParams,\n  ProximityPlacementGroupsCreateOrUpdateOptionalParams,\n  ProximityPlacementGroupsCreateOrUpdateResponse,\n  ProximityPlacementGroupUpdate,\n  ProximityPlacementGroupsUpdateOptionalParams,\n  ProximityPlacementGroupsUpdateResponse,\n  ProximityPlacementGroupsDeleteOptionalParams,\n  ProximityPlacementGroupsGetOptionalParams,\n  ProximityPlacementGroupsGetResponse,\n  ProximityPlacementGroupsListBySubscriptionResponse,\n  ProximityPlacementGroupsListByResourceGroupResponse,\n  ProximityPlacementGroupsListBySubscriptionNextResponse,\n  ProximityPlacementGroupsListByResourceGroupNextResponse\n} from \"../models\";\n\n/// <reference lib=\"esnext.asynciterable\" />\n/** Class containing ProximityPlacementGroups operations. */\nexport class ProximityPlacementGroupsImpl implements ProximityPlacementGroups {\n  private readonly client: ComputeManagementClient;\n\n  /**\n   * Initialize a new instance of the class ProximityPlacementGroups class.\n   * @param client Reference to the service client\n   */\n  constructor(client: ComputeManagementClient) {\n    this.client = client;\n  }\n\n  /**\n   * Lists all proximity placement groups in a subscription.\n   * @param options The options parameters.\n   */\n  public listBySubscription(\n    options?: ProximityPlacementGroupsListBySubscriptionOptionalParams\n  ): PagedAsyncIterableIterator<ProximityPlacementGroup> {\n    const iter = this.listBySubscriptionPagingAll(options);\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: () => {\n        return this.listBySubscriptionPagingPage(options);\n      }\n    };\n  }\n\n  private async *listBySubscriptionPagingPage(\n    options?: ProximityPlacementGroupsListBySubscriptionOptionalParams\n  ): AsyncIterableIterator<ProximityPlacementGroup[]> {\n    let result = await this._listBySubscription(options);\n    yield result.value || [];\n    let continuationToken = result.nextLink;\n    while (continuationToken) {\n      result = await this._listBySubscriptionNext(continuationToken, options);\n      continuationToken = result.nextLink;\n      yield result.value || [];\n    }\n  }\n\n  private async *listBySubscriptionPagingAll(\n    options?: ProximityPlacementGroupsListBySubscriptionOptionalParams\n  ): AsyncIterableIterator<ProximityPlacementGroup> {\n    for await (const page of this.listBySubscriptionPagingPage(options)) {\n      yield* page;\n    }\n  }\n\n  /**\n   * Lists all proximity placement groups in a resource group.\n   * @param resourceGroupName The name of the resource group.\n   * @param options The options parameters.\n   */\n  public listByResourceGroup(\n    resourceGroupName: string,\n    options?: ProximityPlacementGroupsListByResourceGroupOptionalParams\n  ): PagedAsyncIterableIterator<ProximityPlacementGroup> {\n    const iter = this.listByResourceGroupPagingAll(resourceGroupName, options);\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: () => {\n        return this.listByResourceGroupPagingPage(resourceGroupName, options);\n      }\n    };\n  }\n\n  private async *listByResourceGroupPagingPage(\n    resourceGroupName: string,\n    options?: ProximityPlacementGroupsListByResourceGroupOptionalParams\n  ): AsyncIterableIterator<ProximityPlacementGroup[]> {\n    let result = await this._listByResourceGroup(resourceGroupName, options);\n    yield result.value || [];\n    let continuationToken = result.nextLink;\n    while (continuationToken) {\n      result = await this._listByResourceGroupNext(\n        resourceGroupName,\n        continuationToken,\n        options\n      );\n      continuationToken = result.nextLink;\n      yield result.value || [];\n    }\n  }\n\n  private async *listByResourceGroupPagingAll(\n    resourceGroupName: string,\n    options?: ProximityPlacementGroupsListByResourceGroupOptionalParams\n  ): AsyncIterableIterator<ProximityPlacementGroup> {\n    for await (const page of this.listByResourceGroupPagingPage(\n      resourceGroupName,\n      options\n    )) {\n      yield* page;\n    }\n  }\n\n  /**\n   * Create or update a proximity placement group.\n   * @param resourceGroupName The name of the resource group.\n   * @param proximityPlacementGroupName The name of the proximity placement group.\n   * @param parameters Parameters supplied to the Create Proximity Placement Group operation.\n   * @param options The options parameters.\n   */\n  createOrUpdate(\n    resourceGroupName: string,\n    proximityPlacementGroupName: string,\n    parameters: ProximityPlacementGroup,\n    options?: ProximityPlacementGroupsCreateOrUpdateOptionalParams\n  ): Promise<ProximityPlacementGroupsCreateOrUpdateResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, proximityPlacementGroupName, parameters, options },\n      createOrUpdateOperationSpec\n    );\n  }\n\n  /**\n   * Update a proximity placement group.\n   * @param resourceGroupName The name of the resource group.\n   * @param proximityPlacementGroupName The name of the proximity placement group.\n   * @param parameters Parameters supplied to the Update Proximity Placement Group operation.\n   * @param options The options parameters.\n   */\n  update(\n    resourceGroupName: string,\n    proximityPlacementGroupName: string,\n    parameters: ProximityPlacementGroupUpdate,\n    options?: ProximityPlacementGroupsUpdateOptionalParams\n  ): Promise<ProximityPlacementGroupsUpdateResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, proximityPlacementGroupName, parameters, options },\n      updateOperationSpec\n    );\n  }\n\n  /**\n   * Delete a proximity placement group.\n   * @param resourceGroupName The name of the resource group.\n   * @param proximityPlacementGroupName The name of the proximity placement group.\n   * @param options The options parameters.\n   */\n  delete(\n    resourceGroupName: string,\n    proximityPlacementGroupName: string,\n    options?: ProximityPlacementGroupsDeleteOptionalParams\n  ): Promise<void> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, proximityPlacementGroupName, options },\n      deleteOperationSpec\n    );\n  }\n\n  /**\n   * Retrieves information about a proximity placement group .\n   * @param resourceGroupName The name of the resource group.\n   * @param proximityPlacementGroupName The name of the proximity placement group.\n   * @param options The options parameters.\n   */\n  get(\n    resourceGroupName: string,\n    proximityPlacementGroupName: string,\n    options?: ProximityPlacementGroupsGetOptionalParams\n  ): Promise<ProximityPlacementGroupsGetResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, proximityPlacementGroupName, options },\n      getOperationSpec\n    );\n  }\n\n  /**\n   * Lists all proximity placement groups in a subscription.\n   * @param options The options parameters.\n   */\n  private _listBySubscription(\n    options?: ProximityPlacementGroupsListBySubscriptionOptionalParams\n  ): Promise<ProximityPlacementGroupsListBySubscriptionResponse> {\n    return this.client.sendOperationRequest(\n      { options },\n      listBySubscriptionOperationSpec\n    );\n  }\n\n  /**\n   * Lists all proximity placement groups in a resource group.\n   * @param resourceGroupName The name of the resource group.\n   * @param options The options parameters.\n   */\n  private _listByResourceGroup(\n    resourceGroupName: string,\n    options?: ProximityPlacementGroupsListByResourceGroupOptionalParams\n  ): Promise<ProximityPlacementGroupsListByResourceGroupResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, options },\n      listByResourceGroupOperationSpec\n    );\n  }\n\n  /**\n   * ListBySubscriptionNext\n   * @param nextLink The nextLink from the previous successful call to the ListBySubscription method.\n   * @param options The options parameters.\n   */\n  private _listBySubscriptionNext(\n    nextLink: string,\n    options?: ProximityPlacementGroupsListBySubscriptionNextOptionalParams\n  ): Promise<ProximityPlacementGroupsListBySubscriptionNextResponse> {\n    return this.client.sendOperationRequest(\n      { nextLink, options },\n      listBySubscriptionNextOperationSpec\n    );\n  }\n\n  /**\n   * ListByResourceGroupNext\n   * @param resourceGroupName The name of the resource group.\n   * @param nextLink The nextLink from the previous successful call to the ListByResourceGroup method.\n   * @param options The options parameters.\n   */\n  private _listByResourceGroupNext(\n    resourceGroupName: string,\n    nextLink: string,\n    options?: ProximityPlacementGroupsListByResourceGroupNextOptionalParams\n  ): Promise<ProximityPlacementGroupsListByResourceGroupNextResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, nextLink, options },\n      listByResourceGroupNextOperationSpec\n    );\n  }\n}\n// Operation Specifications\nconst serializer = coreClient.createSerializer(Mappers, /* isXml */ false);\n\nconst createOrUpdateOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/proximityPlacementGroups/{proximityPlacementGroupName}\",\n  httpMethod: \"PUT\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.ProximityPlacementGroup\n    },\n    201: {\n      bodyMapper: Mappers.ProximityPlacementGroup\n    },\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  requestBody: Parameters.parameters2,\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.resourceGroupName,\n    Parameters.subscriptionId,\n    Parameters.proximityPlacementGroupName\n  ],\n  headerParameters: [Parameters.accept, Parameters.contentType],\n  mediaType: \"json\",\n  serializer\n};\nconst updateOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/proximityPlacementGroups/{proximityPlacementGroupName}\",\n  httpMethod: \"PATCH\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.ProximityPlacementGroup\n    },\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  requestBody: Parameters.parameters3,\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.resourceGroupName,\n    Parameters.subscriptionId,\n    Parameters.proximityPlacementGroupName\n  ],\n  headerParameters: [Parameters.accept, Parameters.contentType],\n  mediaType: \"json\",\n  serializer\n};\nconst deleteOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/proximityPlacementGroups/{proximityPlacementGroupName}\",\n  httpMethod: \"DELETE\",\n  responses: {\n    200: {},\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.resourceGroupName,\n    Parameters.subscriptionId,\n    Parameters.proximityPlacementGroupName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst getOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/proximityPlacementGroups/{proximityPlacementGroupName}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.ProximityPlacementGroup\n    },\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  queryParameters: [Parameters.apiVersion, Parameters.includeColocationStatus],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.resourceGroupName,\n    Parameters.subscriptionId,\n    Parameters.proximityPlacementGroupName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst listBySubscriptionOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/providers/Microsoft.Compute/proximityPlacementGroups\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.ProximityPlacementGroupListResult\n    },\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [Parameters.$host, Parameters.subscriptionId],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst listByResourceGroupOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/proximityPlacementGroups\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.ProximityPlacementGroupListResult\n    },\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.resourceGroupName,\n    Parameters.subscriptionId\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst listBySubscriptionNextOperationSpec: coreClient.OperationSpec = {\n  path: \"{nextLink}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.ProximityPlacementGroupListResult\n    },\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.nextLink\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst listByResourceGroupNextOperationSpec: coreClient.OperationSpec = {\n  path: \"{nextLink}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.ProximityPlacementGroupListResult\n    },\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.resourceGroupName,\n    Parameters.subscriptionId,\n    Parameters.nextLink\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport { PagedAsyncIterableIterator } from \"@azure/core-paging\";\nimport { DedicatedHostGroups } from \"../operationsInterfaces\";\nimport * as coreClient from \"@azure/core-client\";\nimport * as Mappers from \"../models/mappers\";\nimport * as Parameters from \"../models/parameters\";\nimport { ComputeManagementClient } from \"../computeManagementClient\";\nimport {\n  DedicatedHostGroup,\n  DedicatedHostGroupsListByResourceGroupNextOptionalParams,\n  DedicatedHostGroupsListByResourceGroupOptionalParams,\n  DedicatedHostGroupsListBySubscriptionNextOptionalParams,\n  DedicatedHostGroupsListBySubscriptionOptionalParams,\n  DedicatedHostGroupsCreateOrUpdateOptionalParams,\n  DedicatedHostGroupsCreateOrUpdateResponse,\n  DedicatedHostGroupUpdate,\n  DedicatedHostGroupsUpdateOptionalParams,\n  DedicatedHostGroupsUpdateResponse,\n  DedicatedHostGroupsDeleteOptionalParams,\n  DedicatedHostGroupsGetOptionalParams,\n  DedicatedHostGroupsGetResponse,\n  DedicatedHostGroupsListByResourceGroupResponse,\n  DedicatedHostGroupsListBySubscriptionResponse,\n  DedicatedHostGroupsListByResourceGroupNextResponse,\n  DedicatedHostGroupsListBySubscriptionNextResponse\n} from \"../models\";\n\n/// <reference lib=\"esnext.asynciterable\" />\n/** Class containing DedicatedHostGroups operations. */\nexport class DedicatedHostGroupsImpl implements DedicatedHostGroups {\n  private readonly client: ComputeManagementClient;\n\n  /**\n   * Initialize a new instance of the class DedicatedHostGroups class.\n   * @param client Reference to the service client\n   */\n  constructor(client: ComputeManagementClient) {\n    this.client = client;\n  }\n\n  /**\n   * Lists all of the dedicated host groups in the specified resource group. Use the nextLink property in\n   * the response to get the next page of dedicated host groups.\n   * @param resourceGroupName The name of the resource group.\n   * @param options The options parameters.\n   */\n  public listByResourceGroup(\n    resourceGroupName: string,\n    options?: DedicatedHostGroupsListByResourceGroupOptionalParams\n  ): PagedAsyncIterableIterator<DedicatedHostGroup> {\n    const iter = this.listByResourceGroupPagingAll(resourceGroupName, options);\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: () => {\n        return this.listByResourceGroupPagingPage(resourceGroupName, options);\n      }\n    };\n  }\n\n  private async *listByResourceGroupPagingPage(\n    resourceGroupName: string,\n    options?: DedicatedHostGroupsListByResourceGroupOptionalParams\n  ): AsyncIterableIterator<DedicatedHostGroup[]> {\n    let result = await this._listByResourceGroup(resourceGroupName, options);\n    yield result.value || [];\n    let continuationToken = result.nextLink;\n    while (continuationToken) {\n      result = await this._listByResourceGroupNext(\n        resourceGroupName,\n        continuationToken,\n        options\n      );\n      continuationToken = result.nextLink;\n      yield result.value || [];\n    }\n  }\n\n  private async *listByResourceGroupPagingAll(\n    resourceGroupName: string,\n    options?: DedicatedHostGroupsListByResourceGroupOptionalParams\n  ): AsyncIterableIterator<DedicatedHostGroup> {\n    for await (const page of this.listByResourceGroupPagingPage(\n      resourceGroupName,\n      options\n    )) {\n      yield* page;\n    }\n  }\n\n  /**\n   * Lists all of the dedicated host groups in the subscription. Use the nextLink property in the\n   * response to get the next page of dedicated host groups.\n   * @param options The options parameters.\n   */\n  public listBySubscription(\n    options?: DedicatedHostGroupsListBySubscriptionOptionalParams\n  ): PagedAsyncIterableIterator<DedicatedHostGroup> {\n    const iter = this.listBySubscriptionPagingAll(options);\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: () => {\n        return this.listBySubscriptionPagingPage(options);\n      }\n    };\n  }\n\n  private async *listBySubscriptionPagingPage(\n    options?: DedicatedHostGroupsListBySubscriptionOptionalParams\n  ): AsyncIterableIterator<DedicatedHostGroup[]> {\n    let result = await this._listBySubscription(options);\n    yield result.value || [];\n    let continuationToken = result.nextLink;\n    while (continuationToken) {\n      result = await this._listBySubscriptionNext(continuationToken, options);\n      continuationToken = result.nextLink;\n      yield result.value || [];\n    }\n  }\n\n  private async *listBySubscriptionPagingAll(\n    options?: DedicatedHostGroupsListBySubscriptionOptionalParams\n  ): AsyncIterableIterator<DedicatedHostGroup> {\n    for await (const page of this.listBySubscriptionPagingPage(options)) {\n      yield* page;\n    }\n  }\n\n  /**\n   * Create or update a dedicated host group. For details of Dedicated Host and Dedicated Host Groups\n   * please see [Dedicated Host Documentation] (https://go.microsoft.com/fwlink/?linkid=2082596)\n   * @param resourceGroupName The name of the resource group.\n   * @param hostGroupName The name of the dedicated host group.\n   * @param parameters Parameters supplied to the Create Dedicated Host Group.\n   * @param options The options parameters.\n   */\n  createOrUpdate(\n    resourceGroupName: string,\n    hostGroupName: string,\n    parameters: DedicatedHostGroup,\n    options?: DedicatedHostGroupsCreateOrUpdateOptionalParams\n  ): Promise<DedicatedHostGroupsCreateOrUpdateResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, hostGroupName, parameters, options },\n      createOrUpdateOperationSpec\n    );\n  }\n\n  /**\n   * Update an dedicated host group.\n   * @param resourceGroupName The name of the resource group.\n   * @param hostGroupName The name of the dedicated host group.\n   * @param parameters Parameters supplied to the Update Dedicated Host Group operation.\n   * @param options The options parameters.\n   */\n  update(\n    resourceGroupName: string,\n    hostGroupName: string,\n    parameters: DedicatedHostGroupUpdate,\n    options?: DedicatedHostGroupsUpdateOptionalParams\n  ): Promise<DedicatedHostGroupsUpdateResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, hostGroupName, parameters, options },\n      updateOperationSpec\n    );\n  }\n\n  /**\n   * Delete a dedicated host group.\n   * @param resourceGroupName The name of the resource group.\n   * @param hostGroupName The name of the dedicated host group.\n   * @param options The options parameters.\n   */\n  delete(\n    resourceGroupName: string,\n    hostGroupName: string,\n    options?: DedicatedHostGroupsDeleteOptionalParams\n  ): Promise<void> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, hostGroupName, options },\n      deleteOperationSpec\n    );\n  }\n\n  /**\n   * Retrieves information about a dedicated host group.\n   * @param resourceGroupName The name of the resource group.\n   * @param hostGroupName The name of the dedicated host group.\n   * @param options The options parameters.\n   */\n  get(\n    resourceGroupName: string,\n    hostGroupName: string,\n    options?: DedicatedHostGroupsGetOptionalParams\n  ): Promise<DedicatedHostGroupsGetResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, hostGroupName, options },\n      getOperationSpec\n    );\n  }\n\n  /**\n   * Lists all of the dedicated host groups in the specified resource group. Use the nextLink property in\n   * the response to get the next page of dedicated host groups.\n   * @param resourceGroupName The name of the resource group.\n   * @param options The options parameters.\n   */\n  private _listByResourceGroup(\n    resourceGroupName: string,\n    options?: DedicatedHostGroupsListByResourceGroupOptionalParams\n  ): Promise<DedicatedHostGroupsListByResourceGroupResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, options },\n      listByResourceGroupOperationSpec\n    );\n  }\n\n  /**\n   * Lists all of the dedicated host groups in the subscription. Use the nextLink property in the\n   * response to get the next page of dedicated host groups.\n   * @param options The options parameters.\n   */\n  private _listBySubscription(\n    options?: DedicatedHostGroupsListBySubscriptionOptionalParams\n  ): Promise<DedicatedHostGroupsListBySubscriptionResponse> {\n    return this.client.sendOperationRequest(\n      { options },\n      listBySubscriptionOperationSpec\n    );\n  }\n\n  /**\n   * ListByResourceGroupNext\n   * @param resourceGroupName The name of the resource group.\n   * @param nextLink The nextLink from the previous successful call to the ListByResourceGroup method.\n   * @param options The options parameters.\n   */\n  private _listByResourceGroupNext(\n    resourceGroupName: string,\n    nextLink: string,\n    options?: DedicatedHostGroupsListByResourceGroupNextOptionalParams\n  ): Promise<DedicatedHostGroupsListByResourceGroupNextResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, nextLink, options },\n      listByResourceGroupNextOperationSpec\n    );\n  }\n\n  /**\n   * ListBySubscriptionNext\n   * @param nextLink The nextLink from the previous successful call to the ListBySubscription method.\n   * @param options The options parameters.\n   */\n  private _listBySubscriptionNext(\n    nextLink: string,\n    options?: DedicatedHostGroupsListBySubscriptionNextOptionalParams\n  ): Promise<DedicatedHostGroupsListBySubscriptionNextResponse> {\n    return this.client.sendOperationRequest(\n      { nextLink, options },\n      listBySubscriptionNextOperationSpec\n    );\n  }\n}\n// Operation Specifications\nconst serializer = coreClient.createSerializer(Mappers, /* isXml */ false);\n\nconst createOrUpdateOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/hostGroups/{hostGroupName}\",\n  httpMethod: \"PUT\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.DedicatedHostGroup\n    },\n    201: {\n      bodyMapper: Mappers.DedicatedHostGroup\n    },\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  requestBody: Parameters.parameters4,\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.resourceGroupName,\n    Parameters.subscriptionId,\n    Parameters.hostGroupName\n  ],\n  headerParameters: [Parameters.accept, Parameters.contentType],\n  mediaType: \"json\",\n  serializer\n};\nconst updateOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/hostGroups/{hostGroupName}\",\n  httpMethod: \"PATCH\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.DedicatedHostGroup\n    },\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  requestBody: Parameters.parameters5,\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.resourceGroupName,\n    Parameters.subscriptionId,\n    Parameters.hostGroupName\n  ],\n  headerParameters: [Parameters.accept, Parameters.contentType],\n  mediaType: \"json\",\n  serializer\n};\nconst deleteOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/hostGroups/{hostGroupName}\",\n  httpMethod: \"DELETE\",\n  responses: {\n    200: {},\n    204: {},\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.resourceGroupName,\n    Parameters.subscriptionId,\n    Parameters.hostGroupName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst getOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/hostGroups/{hostGroupName}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.DedicatedHostGroup\n    },\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  queryParameters: [Parameters.apiVersion, Parameters.expand1],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.resourceGroupName,\n    Parameters.subscriptionId,\n    Parameters.hostGroupName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst listByResourceGroupOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/hostGroups\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.DedicatedHostGroupListResult\n    },\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.resourceGroupName,\n    Parameters.subscriptionId\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst listBySubscriptionOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/providers/Microsoft.Compute/hostGroups\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.DedicatedHostGroupListResult\n    },\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [Parameters.$host, Parameters.subscriptionId],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst listByResourceGroupNextOperationSpec: coreClient.OperationSpec = {\n  path: \"{nextLink}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.DedicatedHostGroupListResult\n    },\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.resourceGroupName,\n    Parameters.subscriptionId,\n    Parameters.nextLink\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst listBySubscriptionNextOperationSpec: coreClient.OperationSpec = {\n  path: \"{nextLink}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.DedicatedHostGroupListResult\n    },\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.nextLink\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport { LongRunningOperation, LroResponse } from \"@azure/core-lro\";\n\nexport class LroImpl<T> implements LongRunningOperation<T> {\n  constructor(\n    private sendOperationFn: (args: any, spec: any) => Promise<LroResponse<T>>,\n    private args: Record<string, unknown>,\n    private spec: {\n      readonly requestBody?: unknown;\n      readonly path?: string;\n      readonly httpMethod: string;\n    } & Record<string, any>,\n    public requestPath: string = spec.path!,\n    public requestMethod: string = spec.httpMethod\n  ) {}\n  public async sendInitialRequest(): Promise<LroResponse<T>> {\n    return this.sendOperationFn(this.args, this.spec);\n  }\n  public async sendPollRequest(path: string): Promise<LroResponse<T>> {\n    const { requestBody, ...restSpec } = this.spec;\n    return this.sendOperationFn(this.args, {\n      ...restSpec,\n      path,\n      httpMethod: \"GET\"\n    });\n  }\n}\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport { PagedAsyncIterableIterator } from \"@azure/core-paging\";\nimport { DedicatedHosts } from \"../operationsInterfaces\";\nimport * as coreClient from \"@azure/core-client\";\nimport * as Mappers from \"../models/mappers\";\nimport * as Parameters from \"../models/parameters\";\nimport { ComputeManagementClient } from \"../computeManagementClient\";\nimport { PollerLike, PollOperationState, LroEngine } from \"@azure/core-lro\";\nimport { LroImpl } from \"../lroImpl\";\nimport {\n  DedicatedHost,\n  DedicatedHostsListByHostGroupNextOptionalParams,\n  DedicatedHostsListByHostGroupOptionalParams,\n  DedicatedHostsCreateOrUpdateOptionalParams,\n  DedicatedHostsCreateOrUpdateResponse,\n  DedicatedHostUpdate,\n  DedicatedHostsUpdateOptionalParams,\n  DedicatedHostsUpdateResponse,\n  DedicatedHostsDeleteOptionalParams,\n  DedicatedHostsGetOptionalParams,\n  DedicatedHostsGetResponse,\n  DedicatedHostsListByHostGroupResponse,\n  DedicatedHostsRestartOptionalParams,\n  DedicatedHostsListByHostGroupNextResponse\n} from \"../models\";\n\n/// <reference lib=\"esnext.asynciterable\" />\n/** Class containing DedicatedHosts operations. */\nexport class DedicatedHostsImpl implements DedicatedHosts {\n  private readonly client: ComputeManagementClient;\n\n  /**\n   * Initialize a new instance of the class DedicatedHosts class.\n   * @param client Reference to the service client\n   */\n  constructor(client: ComputeManagementClient) {\n    this.client = client;\n  }\n\n  /**\n   * Lists all of the dedicated hosts in the specified dedicated host group. Use the nextLink property in\n   * the response to get the next page of dedicated hosts.\n   * @param resourceGroupName The name of the resource group.\n   * @param hostGroupName The name of the dedicated host group.\n   * @param options The options parameters.\n   */\n  public listByHostGroup(\n    resourceGroupName: string,\n    hostGroupName: string,\n    options?: DedicatedHostsListByHostGroupOptionalParams\n  ): PagedAsyncIterableIterator<DedicatedHost> {\n    const iter = this.listByHostGroupPagingAll(\n      resourceGroupName,\n      hostGroupName,\n      options\n    );\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: () => {\n        return this.listByHostGroupPagingPage(\n          resourceGroupName,\n          hostGroupName,\n          options\n        );\n      }\n    };\n  }\n\n  private async *listByHostGroupPagingPage(\n    resourceGroupName: string,\n    hostGroupName: string,\n    options?: DedicatedHostsListByHostGroupOptionalParams\n  ): AsyncIterableIterator<DedicatedHost[]> {\n    let result = await this._listByHostGroup(\n      resourceGroupName,\n      hostGroupName,\n      options\n    );\n    yield result.value || [];\n    let continuationToken = result.nextLink;\n    while (continuationToken) {\n      result = await this._listByHostGroupNext(\n        resourceGroupName,\n        hostGroupName,\n        continuationToken,\n        options\n      );\n      continuationToken = result.nextLink;\n      yield result.value || [];\n    }\n  }\n\n  private async *listByHostGroupPagingAll(\n    resourceGroupName: string,\n    hostGroupName: string,\n    options?: DedicatedHostsListByHostGroupOptionalParams\n  ): AsyncIterableIterator<DedicatedHost> {\n    for await (const page of this.listByHostGroupPagingPage(\n      resourceGroupName,\n      hostGroupName,\n      options\n    )) {\n      yield* page;\n    }\n  }\n\n  /**\n   * Create or update a dedicated host .\n   * @param resourceGroupName The name of the resource group.\n   * @param hostGroupName The name of the dedicated host group.\n   * @param hostName The name of the dedicated host .\n   * @param parameters Parameters supplied to the Create Dedicated Host.\n   * @param options The options parameters.\n   */\n  async beginCreateOrUpdate(\n    resourceGroupName: string,\n    hostGroupName: string,\n    hostName: string,\n    parameters: DedicatedHost,\n    options?: DedicatedHostsCreateOrUpdateOptionalParams\n  ): Promise<\n    PollerLike<\n      PollOperationState<DedicatedHostsCreateOrUpdateResponse>,\n      DedicatedHostsCreateOrUpdateResponse\n    >\n  > {\n    const directSendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ): Promise<DedicatedHostsCreateOrUpdateResponse> => {\n      return this.client.sendOperationRequest(args, spec);\n    };\n    const sendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ) => {\n      let currentRawResponse:\n        | coreClient.FullOperationResponse\n        | undefined = undefined;\n      const providedCallback = args.options?.onResponse;\n      const callback: coreClient.RawResponseCallback = (\n        rawResponse: coreClient.FullOperationResponse,\n        flatResponse: unknown\n      ) => {\n        currentRawResponse = rawResponse;\n        providedCallback?.(rawResponse, flatResponse);\n      };\n      const updatedArgs = {\n        ...args,\n        options: {\n          ...args.options,\n          onResponse: callback\n        }\n      };\n      const flatResponse = await directSendOperation(updatedArgs, spec);\n      return {\n        flatResponse,\n        rawResponse: {\n          statusCode: currentRawResponse!.status,\n          body: currentRawResponse!.parsedBody,\n          headers: currentRawResponse!.headers.toJSON()\n        }\n      };\n    };\n\n    const lro = new LroImpl(\n      sendOperation,\n      { resourceGroupName, hostGroupName, hostName, parameters, options },\n      createOrUpdateOperationSpec\n    );\n    return new LroEngine(lro, {\n      resumeFrom: options?.resumeFrom,\n      intervalInMs: options?.updateIntervalInMs\n    });\n  }\n\n  /**\n   * Create or update a dedicated host .\n   * @param resourceGroupName The name of the resource group.\n   * @param hostGroupName The name of the dedicated host group.\n   * @param hostName The name of the dedicated host .\n   * @param parameters Parameters supplied to the Create Dedicated Host.\n   * @param options The options parameters.\n   */\n  async beginCreateOrUpdateAndWait(\n    resourceGroupName: string,\n    hostGroupName: string,\n    hostName: string,\n    parameters: DedicatedHost,\n    options?: DedicatedHostsCreateOrUpdateOptionalParams\n  ): Promise<DedicatedHostsCreateOrUpdateResponse> {\n    const poller = await this.beginCreateOrUpdate(\n      resourceGroupName,\n      hostGroupName,\n      hostName,\n      parameters,\n      options\n    );\n    return poller.pollUntilDone();\n  }\n\n  /**\n   * Update an dedicated host .\n   * @param resourceGroupName The name of the resource group.\n   * @param hostGroupName The name of the dedicated host group.\n   * @param hostName The name of the dedicated host .\n   * @param parameters Parameters supplied to the Update Dedicated Host operation.\n   * @param options The options parameters.\n   */\n  async beginUpdate(\n    resourceGroupName: string,\n    hostGroupName: string,\n    hostName: string,\n    parameters: DedicatedHostUpdate,\n    options?: DedicatedHostsUpdateOptionalParams\n  ): Promise<\n    PollerLike<\n      PollOperationState<DedicatedHostsUpdateResponse>,\n      DedicatedHostsUpdateResponse\n    >\n  > {\n    const directSendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ): Promise<DedicatedHostsUpdateResponse> => {\n      return this.client.sendOperationRequest(args, spec);\n    };\n    const sendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ) => {\n      let currentRawResponse:\n        | coreClient.FullOperationResponse\n        | undefined = undefined;\n      const providedCallback = args.options?.onResponse;\n      const callback: coreClient.RawResponseCallback = (\n        rawResponse: coreClient.FullOperationResponse,\n        flatResponse: unknown\n      ) => {\n        currentRawResponse = rawResponse;\n        providedCallback?.(rawResponse, flatResponse);\n      };\n      const updatedArgs = {\n        ...args,\n        options: {\n          ...args.options,\n          onResponse: callback\n        }\n      };\n      const flatResponse = await directSendOperation(updatedArgs, spec);\n      return {\n        flatResponse,\n        rawResponse: {\n          statusCode: currentRawResponse!.status,\n          body: currentRawResponse!.parsedBody,\n          headers: currentRawResponse!.headers.toJSON()\n        }\n      };\n    };\n\n    const lro = new LroImpl(\n      sendOperation,\n      { resourceGroupName, hostGroupName, hostName, parameters, options },\n      updateOperationSpec\n    );\n    return new LroEngine(lro, {\n      resumeFrom: options?.resumeFrom,\n      intervalInMs: options?.updateIntervalInMs\n    });\n  }\n\n  /**\n   * Update an dedicated host .\n   * @param resourceGroupName The name of the resource group.\n   * @param hostGroupName The name of the dedicated host group.\n   * @param hostName The name of the dedicated host .\n   * @param parameters Parameters supplied to the Update Dedicated Host operation.\n   * @param options The options parameters.\n   */\n  async beginUpdateAndWait(\n    resourceGroupName: string,\n    hostGroupName: string,\n    hostName: string,\n    parameters: DedicatedHostUpdate,\n    options?: DedicatedHostsUpdateOptionalParams\n  ): Promise<DedicatedHostsUpdateResponse> {\n    const poller = await this.beginUpdate(\n      resourceGroupName,\n      hostGroupName,\n      hostName,\n      parameters,\n      options\n    );\n    return poller.pollUntilDone();\n  }\n\n  /**\n   * Delete a dedicated host.\n   * @param resourceGroupName The name of the resource group.\n   * @param hostGroupName The name of the dedicated host group.\n   * @param hostName The name of the dedicated host.\n   * @param options The options parameters.\n   */\n  async beginDelete(\n    resourceGroupName: string,\n    hostGroupName: string,\n    hostName: string,\n    options?: DedicatedHostsDeleteOptionalParams\n  ): Promise<PollerLike<PollOperationState<void>, void>> {\n    const directSendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ): Promise<void> => {\n      return this.client.sendOperationRequest(args, spec);\n    };\n    const sendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ) => {\n      let currentRawResponse:\n        | coreClient.FullOperationResponse\n        | undefined = undefined;\n      const providedCallback = args.options?.onResponse;\n      const callback: coreClient.RawResponseCallback = (\n        rawResponse: coreClient.FullOperationResponse,\n        flatResponse: unknown\n      ) => {\n        currentRawResponse = rawResponse;\n        providedCallback?.(rawResponse, flatResponse);\n      };\n      const updatedArgs = {\n        ...args,\n        options: {\n          ...args.options,\n          onResponse: callback\n        }\n      };\n      const flatResponse = await directSendOperation(updatedArgs, spec);\n      return {\n        flatResponse,\n        rawResponse: {\n          statusCode: currentRawResponse!.status,\n          body: currentRawResponse!.parsedBody,\n          headers: currentRawResponse!.headers.toJSON()\n        }\n      };\n    };\n\n    const lro = new LroImpl(\n      sendOperation,\n      { resourceGroupName, hostGroupName, hostName, options },\n      deleteOperationSpec\n    );\n    return new LroEngine(lro, {\n      resumeFrom: options?.resumeFrom,\n      intervalInMs: options?.updateIntervalInMs\n    });\n  }\n\n  /**\n   * Delete a dedicated host.\n   * @param resourceGroupName The name of the resource group.\n   * @param hostGroupName The name of the dedicated host group.\n   * @param hostName The name of the dedicated host.\n   * @param options The options parameters.\n   */\n  async beginDeleteAndWait(\n    resourceGroupName: string,\n    hostGroupName: string,\n    hostName: string,\n    options?: DedicatedHostsDeleteOptionalParams\n  ): Promise<void> {\n    const poller = await this.beginDelete(\n      resourceGroupName,\n      hostGroupName,\n      hostName,\n      options\n    );\n    return poller.pollUntilDone();\n  }\n\n  /**\n   * Retrieves information about a dedicated host.\n   * @param resourceGroupName The name of the resource group.\n   * @param hostGroupName The name of the dedicated host group.\n   * @param hostName The name of the dedicated host.\n   * @param options The options parameters.\n   */\n  get(\n    resourceGroupName: string,\n    hostGroupName: string,\n    hostName: string,\n    options?: DedicatedHostsGetOptionalParams\n  ): Promise<DedicatedHostsGetResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, hostGroupName, hostName, options },\n      getOperationSpec\n    );\n  }\n\n  /**\n   * Lists all of the dedicated hosts in the specified dedicated host group. Use the nextLink property in\n   * the response to get the next page of dedicated hosts.\n   * @param resourceGroupName The name of the resource group.\n   * @param hostGroupName The name of the dedicated host group.\n   * @param options The options parameters.\n   */\n  private _listByHostGroup(\n    resourceGroupName: string,\n    hostGroupName: string,\n    options?: DedicatedHostsListByHostGroupOptionalParams\n  ): Promise<DedicatedHostsListByHostGroupResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, hostGroupName, options },\n      listByHostGroupOperationSpec\n    );\n  }\n\n  /**\n   * Restart the dedicated host. The operation will complete successfully once the dedicated host has\n   * restarted and is running. To determine the health of VMs deployed on the dedicated host after the\n   * restart check the Resource Health Center in the Azure Portal. Please refer to\n   * https://docs.microsoft.com/en-us/azure/service-health/resource-health-overview for more details.\n   * @param resourceGroupName The name of the resource group.\n   * @param hostGroupName The name of the dedicated host group.\n   * @param hostName The name of the dedicated host.\n   * @param options The options parameters.\n   */\n  async beginRestart(\n    resourceGroupName: string,\n    hostGroupName: string,\n    hostName: string,\n    options?: DedicatedHostsRestartOptionalParams\n  ): Promise<PollerLike<PollOperationState<void>, void>> {\n    const directSendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ): Promise<void> => {\n      return this.client.sendOperationRequest(args, spec);\n    };\n    const sendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ) => {\n      let currentRawResponse:\n        | coreClient.FullOperationResponse\n        | undefined = undefined;\n      const providedCallback = args.options?.onResponse;\n      const callback: coreClient.RawResponseCallback = (\n        rawResponse: coreClient.FullOperationResponse,\n        flatResponse: unknown\n      ) => {\n        currentRawResponse = rawResponse;\n        providedCallback?.(rawResponse, flatResponse);\n      };\n      const updatedArgs = {\n        ...args,\n        options: {\n          ...args.options,\n          onResponse: callback\n        }\n      };\n      const flatResponse = await directSendOperation(updatedArgs, spec);\n      return {\n        flatResponse,\n        rawResponse: {\n          statusCode: currentRawResponse!.status,\n          body: currentRawResponse!.parsedBody,\n          headers: currentRawResponse!.headers.toJSON()\n        }\n      };\n    };\n\n    const lro = new LroImpl(\n      sendOperation,\n      { resourceGroupName, hostGroupName, hostName, options },\n      restartOperationSpec\n    );\n    return new LroEngine(lro, {\n      resumeFrom: options?.resumeFrom,\n      intervalInMs: options?.updateIntervalInMs\n    });\n  }\n\n  /**\n   * Restart the dedicated host. The operation will complete successfully once the dedicated host has\n   * restarted and is running. To determine the health of VMs deployed on the dedicated host after the\n   * restart check the Resource Health Center in the Azure Portal. Please refer to\n   * https://docs.microsoft.com/en-us/azure/service-health/resource-health-overview for more details.\n   * @param resourceGroupName The name of the resource group.\n   * @param hostGroupName The name of the dedicated host group.\n   * @param hostName The name of the dedicated host.\n   * @param options The options parameters.\n   */\n  async beginRestartAndWait(\n    resourceGroupName: string,\n    hostGroupName: string,\n    hostName: string,\n    options?: DedicatedHostsRestartOptionalParams\n  ): Promise<void> {\n    const poller = await this.beginRestart(\n      resourceGroupName,\n      hostGroupName,\n      hostName,\n      options\n    );\n    return poller.pollUntilDone();\n  }\n\n  /**\n   * ListByHostGroupNext\n   * @param resourceGroupName The name of the resource group.\n   * @param hostGroupName The name of the dedicated host group.\n   * @param nextLink The nextLink from the previous successful call to the ListByHostGroup method.\n   * @param options The options parameters.\n   */\n  private _listByHostGroupNext(\n    resourceGroupName: string,\n    hostGroupName: string,\n    nextLink: string,\n    options?: DedicatedHostsListByHostGroupNextOptionalParams\n  ): Promise<DedicatedHostsListByHostGroupNextResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, hostGroupName, nextLink, options },\n      listByHostGroupNextOperationSpec\n    );\n  }\n}\n// Operation Specifications\nconst serializer = coreClient.createSerializer(Mappers, /* isXml */ false);\n\nconst createOrUpdateOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/hostGroups/{hostGroupName}/hosts/{hostName}\",\n  httpMethod: \"PUT\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.DedicatedHost\n    },\n    201: {\n      bodyMapper: Mappers.DedicatedHost\n    },\n    202: {\n      bodyMapper: Mappers.DedicatedHost\n    },\n    204: {\n      bodyMapper: Mappers.DedicatedHost\n    },\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  requestBody: Parameters.parameters6,\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.resourceGroupName,\n    Parameters.subscriptionId,\n    Parameters.hostGroupName,\n    Parameters.hostName\n  ],\n  headerParameters: [Parameters.accept, Parameters.contentType],\n  mediaType: \"json\",\n  serializer\n};\nconst updateOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/hostGroups/{hostGroupName}/hosts/{hostName}\",\n  httpMethod: \"PATCH\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.DedicatedHost\n    },\n    201: {\n      bodyMapper: Mappers.DedicatedHost\n    },\n    202: {\n      bodyMapper: Mappers.DedicatedHost\n    },\n    204: {\n      bodyMapper: Mappers.DedicatedHost\n    },\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  requestBody: Parameters.parameters7,\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.resourceGroupName,\n    Parameters.subscriptionId,\n    Parameters.hostGroupName,\n    Parameters.hostName\n  ],\n  headerParameters: [Parameters.accept, Parameters.contentType],\n  mediaType: \"json\",\n  serializer\n};\nconst deleteOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/hostGroups/{hostGroupName}/hosts/{hostName}\",\n  httpMethod: \"DELETE\",\n  responses: {\n    200: {},\n    201: {},\n    202: {},\n    204: {},\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.resourceGroupName,\n    Parameters.subscriptionId,\n    Parameters.hostGroupName,\n    Parameters.hostName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst getOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/hostGroups/{hostGroupName}/hosts/{hostName}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.DedicatedHost\n    },\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  queryParameters: [Parameters.apiVersion, Parameters.expand1],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.resourceGroupName,\n    Parameters.subscriptionId,\n    Parameters.hostGroupName,\n    Parameters.hostName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst listByHostGroupOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/hostGroups/{hostGroupName}/hosts\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.DedicatedHostListResult\n    },\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.resourceGroupName,\n    Parameters.subscriptionId,\n    Parameters.hostGroupName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst restartOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/hostGroups/{hostGroupName}/hosts/{hostName}/restart\",\n  httpMethod: \"POST\",\n  responses: {\n    200: {},\n    201: {},\n    202: {},\n    204: {},\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.resourceGroupName,\n    Parameters.subscriptionId,\n    Parameters.hostGroupName,\n    Parameters.hostName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst listByHostGroupNextOperationSpec: coreClient.OperationSpec = {\n  path: \"{nextLink}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.DedicatedHostListResult\n    },\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.resourceGroupName,\n    Parameters.subscriptionId,\n    Parameters.nextLink,\n    Parameters.hostGroupName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport { PagedAsyncIterableIterator } from \"@azure/core-paging\";\nimport { SshPublicKeys } from \"../operationsInterfaces\";\nimport * as coreClient from \"@azure/core-client\";\nimport * as Mappers from \"../models/mappers\";\nimport * as Parameters from \"../models/parameters\";\nimport { ComputeManagementClient } from \"../computeManagementClient\";\nimport {\n  SshPublicKeyResource,\n  SshPublicKeysListBySubscriptionNextOptionalParams,\n  SshPublicKeysListBySubscriptionOptionalParams,\n  SshPublicKeysListByResourceGroupNextOptionalParams,\n  SshPublicKeysListByResourceGroupOptionalParams,\n  SshPublicKeysListBySubscriptionResponse,\n  SshPublicKeysListByResourceGroupResponse,\n  SshPublicKeysCreateOptionalParams,\n  SshPublicKeysCreateResponse,\n  SshPublicKeyUpdateResource,\n  SshPublicKeysUpdateOptionalParams,\n  SshPublicKeysUpdateResponse,\n  SshPublicKeysDeleteOptionalParams,\n  SshPublicKeysGetOptionalParams,\n  SshPublicKeysGetResponse,\n  SshPublicKeysGenerateKeyPairOptionalParams,\n  SshPublicKeysGenerateKeyPairResponse,\n  SshPublicKeysListBySubscriptionNextResponse,\n  SshPublicKeysListByResourceGroupNextResponse\n} from \"../models\";\n\n/// <reference lib=\"esnext.asynciterable\" />\n/** Class containing SshPublicKeys operations. */\nexport class SshPublicKeysImpl implements SshPublicKeys {\n  private readonly client: ComputeManagementClient;\n\n  /**\n   * Initialize a new instance of the class SshPublicKeys class.\n   * @param client Reference to the service client\n   */\n  constructor(client: ComputeManagementClient) {\n    this.client = client;\n  }\n\n  /**\n   * Lists all of the SSH public keys in the subscription. Use the nextLink property in the response to\n   * get the next page of SSH public keys.\n   * @param options The options parameters.\n   */\n  public listBySubscription(\n    options?: SshPublicKeysListBySubscriptionOptionalParams\n  ): PagedAsyncIterableIterator<SshPublicKeyResource> {\n    const iter = this.listBySubscriptionPagingAll(options);\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: () => {\n        return this.listBySubscriptionPagingPage(options);\n      }\n    };\n  }\n\n  private async *listBySubscriptionPagingPage(\n    options?: SshPublicKeysListBySubscriptionOptionalParams\n  ): AsyncIterableIterator<SshPublicKeyResource[]> {\n    let result = await this._listBySubscription(options);\n    yield result.value || [];\n    let continuationToken = result.nextLink;\n    while (continuationToken) {\n      result = await this._listBySubscriptionNext(continuationToken, options);\n      continuationToken = result.nextLink;\n      yield result.value || [];\n    }\n  }\n\n  private async *listBySubscriptionPagingAll(\n    options?: SshPublicKeysListBySubscriptionOptionalParams\n  ): AsyncIterableIterator<SshPublicKeyResource> {\n    for await (const page of this.listBySubscriptionPagingPage(options)) {\n      yield* page;\n    }\n  }\n\n  /**\n   * Lists all of the SSH public keys in the specified resource group. Use the nextLink property in the\n   * response to get the next page of SSH public keys.\n   * @param resourceGroupName The name of the resource group.\n   * @param options The options parameters.\n   */\n  public listByResourceGroup(\n    resourceGroupName: string,\n    options?: SshPublicKeysListByResourceGroupOptionalParams\n  ): PagedAsyncIterableIterator<SshPublicKeyResource> {\n    const iter = this.listByResourceGroupPagingAll(resourceGroupName, options);\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: () => {\n        return this.listByResourceGroupPagingPage(resourceGroupName, options);\n      }\n    };\n  }\n\n  private async *listByResourceGroupPagingPage(\n    resourceGroupName: string,\n    options?: SshPublicKeysListByResourceGroupOptionalParams\n  ): AsyncIterableIterator<SshPublicKeyResource[]> {\n    let result = await this._listByResourceGroup(resourceGroupName, options);\n    yield result.value || [];\n    let continuationToken = result.nextLink;\n    while (continuationToken) {\n      result = await this._listByResourceGroupNext(\n        resourceGroupName,\n        continuationToken,\n        options\n      );\n      continuationToken = result.nextLink;\n      yield result.value || [];\n    }\n  }\n\n  private async *listByResourceGroupPagingAll(\n    resourceGroupName: string,\n    options?: SshPublicKeysListByResourceGroupOptionalParams\n  ): AsyncIterableIterator<SshPublicKeyResource> {\n    for await (const page of this.listByResourceGroupPagingPage(\n      resourceGroupName,\n      options\n    )) {\n      yield* page;\n    }\n  }\n\n  /**\n   * Lists all of the SSH public keys in the subscription. Use the nextLink property in the response to\n   * get the next page of SSH public keys.\n   * @param options The options parameters.\n   */\n  private _listBySubscription(\n    options?: SshPublicKeysListBySubscriptionOptionalParams\n  ): Promise<SshPublicKeysListBySubscriptionResponse> {\n    return this.client.sendOperationRequest(\n      { options },\n      listBySubscriptionOperationSpec\n    );\n  }\n\n  /**\n   * Lists all of the SSH public keys in the specified resource group. Use the nextLink property in the\n   * response to get the next page of SSH public keys.\n   * @param resourceGroupName The name of the resource group.\n   * @param options The options parameters.\n   */\n  private _listByResourceGroup(\n    resourceGroupName: string,\n    options?: SshPublicKeysListByResourceGroupOptionalParams\n  ): Promise<SshPublicKeysListByResourceGroupResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, options },\n      listByResourceGroupOperationSpec\n    );\n  }\n\n  /**\n   * Creates a new SSH public key resource.\n   * @param resourceGroupName The name of the resource group.\n   * @param sshPublicKeyName The name of the SSH public key.\n   * @param parameters Parameters supplied to create the SSH public key.\n   * @param options The options parameters.\n   */\n  create(\n    resourceGroupName: string,\n    sshPublicKeyName: string,\n    parameters: SshPublicKeyResource,\n    options?: SshPublicKeysCreateOptionalParams\n  ): Promise<SshPublicKeysCreateResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, sshPublicKeyName, parameters, options },\n      createOperationSpec\n    );\n  }\n\n  /**\n   * Updates a new SSH public key resource.\n   * @param resourceGroupName The name of the resource group.\n   * @param sshPublicKeyName The name of the SSH public key.\n   * @param parameters Parameters supplied to update the SSH public key.\n   * @param options The options parameters.\n   */\n  update(\n    resourceGroupName: string,\n    sshPublicKeyName: string,\n    parameters: SshPublicKeyUpdateResource,\n    options?: SshPublicKeysUpdateOptionalParams\n  ): Promise<SshPublicKeysUpdateResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, sshPublicKeyName, parameters, options },\n      updateOperationSpec\n    );\n  }\n\n  /**\n   * Delete an SSH public key.\n   * @param resourceGroupName The name of the resource group.\n   * @param sshPublicKeyName The name of the SSH public key.\n   * @param options The options parameters.\n   */\n  delete(\n    resourceGroupName: string,\n    sshPublicKeyName: string,\n    options?: SshPublicKeysDeleteOptionalParams\n  ): Promise<void> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, sshPublicKeyName, options },\n      deleteOperationSpec\n    );\n  }\n\n  /**\n   * Retrieves information about an SSH public key.\n   * @param resourceGroupName The name of the resource group.\n   * @param sshPublicKeyName The name of the SSH public key.\n   * @param options The options parameters.\n   */\n  get(\n    resourceGroupName: string,\n    sshPublicKeyName: string,\n    options?: SshPublicKeysGetOptionalParams\n  ): Promise<SshPublicKeysGetResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, sshPublicKeyName, options },\n      getOperationSpec\n    );\n  }\n\n  /**\n   * Generates and returns a public/private key pair and populates the SSH public key resource with the\n   * public key. The length of the key will be 3072 bits. This operation can only be performed once per\n   * SSH public key resource.\n   * @param resourceGroupName The name of the resource group.\n   * @param sshPublicKeyName The name of the SSH public key.\n   * @param options The options parameters.\n   */\n  generateKeyPair(\n    resourceGroupName: string,\n    sshPublicKeyName: string,\n    options?: SshPublicKeysGenerateKeyPairOptionalParams\n  ): Promise<SshPublicKeysGenerateKeyPairResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, sshPublicKeyName, options },\n      generateKeyPairOperationSpec\n    );\n  }\n\n  /**\n   * ListBySubscriptionNext\n   * @param nextLink The nextLink from the previous successful call to the ListBySubscription method.\n   * @param options The options parameters.\n   */\n  private _listBySubscriptionNext(\n    nextLink: string,\n    options?: SshPublicKeysListBySubscriptionNextOptionalParams\n  ): Promise<SshPublicKeysListBySubscriptionNextResponse> {\n    return this.client.sendOperationRequest(\n      { nextLink, options },\n      listBySubscriptionNextOperationSpec\n    );\n  }\n\n  /**\n   * ListByResourceGroupNext\n   * @param resourceGroupName The name of the resource group.\n   * @param nextLink The nextLink from the previous successful call to the ListByResourceGroup method.\n   * @param options The options parameters.\n   */\n  private _listByResourceGroupNext(\n    resourceGroupName: string,\n    nextLink: string,\n    options?: SshPublicKeysListByResourceGroupNextOptionalParams\n  ): Promise<SshPublicKeysListByResourceGroupNextResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, nextLink, options },\n      listByResourceGroupNextOperationSpec\n    );\n  }\n}\n// Operation Specifications\nconst serializer = coreClient.createSerializer(Mappers, /* isXml */ false);\n\nconst listBySubscriptionOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/providers/Microsoft.Compute/sshPublicKeys\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.SshPublicKeysGroupListResult\n    },\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [Parameters.$host, Parameters.subscriptionId],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst listByResourceGroupOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/sshPublicKeys\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.SshPublicKeysGroupListResult\n    },\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.resourceGroupName,\n    Parameters.subscriptionId\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst createOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/sshPublicKeys/{sshPublicKeyName}\",\n  httpMethod: \"PUT\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.SshPublicKeyResource\n    },\n    201: {\n      bodyMapper: Mappers.SshPublicKeyResource\n    },\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  requestBody: Parameters.parameters8,\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.resourceGroupName,\n    Parameters.subscriptionId,\n    Parameters.sshPublicKeyName\n  ],\n  headerParameters: [Parameters.accept, Parameters.contentType],\n  mediaType: \"json\",\n  serializer\n};\nconst updateOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/sshPublicKeys/{sshPublicKeyName}\",\n  httpMethod: \"PATCH\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.SshPublicKeyResource\n    },\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  requestBody: Parameters.parameters9,\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.resourceGroupName,\n    Parameters.subscriptionId,\n    Parameters.sshPublicKeyName\n  ],\n  headerParameters: [Parameters.accept, Parameters.contentType],\n  mediaType: \"json\",\n  serializer\n};\nconst deleteOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/sshPublicKeys/{sshPublicKeyName}\",\n  httpMethod: \"DELETE\",\n  responses: {\n    200: {},\n    204: {},\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.resourceGroupName,\n    Parameters.subscriptionId,\n    Parameters.sshPublicKeyName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst getOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/sshPublicKeys/{sshPublicKeyName}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.SshPublicKeyResource\n    },\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.resourceGroupName,\n    Parameters.subscriptionId,\n    Parameters.sshPublicKeyName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst generateKeyPairOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/sshPublicKeys/{sshPublicKeyName}/generateKeyPair\",\n  httpMethod: \"POST\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.SshPublicKeyGenerateKeyPairResult\n    },\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.resourceGroupName,\n    Parameters.subscriptionId,\n    Parameters.sshPublicKeyName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst listBySubscriptionNextOperationSpec: coreClient.OperationSpec = {\n  path: \"{nextLink}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.SshPublicKeysGroupListResult\n    },\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.nextLink\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst listByResourceGroupNextOperationSpec: coreClient.OperationSpec = {\n  path: \"{nextLink}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.SshPublicKeysGroupListResult\n    },\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.resourceGroupName,\n    Parameters.subscriptionId,\n    Parameters.nextLink\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport { VirtualMachineExtensionImages } from \"../operationsInterfaces\";\nimport * as coreClient from \"@azure/core-client\";\nimport * as Mappers from \"../models/mappers\";\nimport * as Parameters from \"../models/parameters\";\nimport { ComputeManagementClient } from \"../computeManagementClient\";\nimport {\n  VirtualMachineExtensionImagesGetOptionalParams,\n  VirtualMachineExtensionImagesGetResponse,\n  VirtualMachineExtensionImagesListTypesOptionalParams,\n  VirtualMachineExtensionImagesListTypesResponse,\n  VirtualMachineExtensionImagesListVersionsOptionalParams,\n  VirtualMachineExtensionImagesListVersionsResponse\n} from \"../models\";\n\n/** Class containing VirtualMachineExtensionImages operations. */\nexport class VirtualMachineExtensionImagesImpl\n  implements VirtualMachineExtensionImages {\n  private readonly client: ComputeManagementClient;\n\n  /**\n   * Initialize a new instance of the class VirtualMachineExtensionImages class.\n   * @param client Reference to the service client\n   */\n  constructor(client: ComputeManagementClient) {\n    this.client = client;\n  }\n\n  /**\n   * Gets a virtual machine extension image.\n   * @param location The name of a supported Azure region.\n   * @param publisherName\n   * @param version\n   * @param typeParam\n   * @param options The options parameters.\n   */\n  get(\n    location: string,\n    publisherName: string,\n    version: string,\n    typeParam: string,\n    options?: VirtualMachineExtensionImagesGetOptionalParams\n  ): Promise<VirtualMachineExtensionImagesGetResponse> {\n    return this.client.sendOperationRequest(\n      { location, publisherName, version, typeParam, options },\n      getOperationSpec\n    );\n  }\n\n  /**\n   * Gets a list of virtual machine extension image types.\n   * @param location The name of a supported Azure region.\n   * @param publisherName\n   * @param options The options parameters.\n   */\n  listTypes(\n    location: string,\n    publisherName: string,\n    options?: VirtualMachineExtensionImagesListTypesOptionalParams\n  ): Promise<VirtualMachineExtensionImagesListTypesResponse> {\n    return this.client.sendOperationRequest(\n      { location, publisherName, options },\n      listTypesOperationSpec\n    );\n  }\n\n  /**\n   * Gets a list of virtual machine extension image versions.\n   * @param location The name of a supported Azure region.\n   * @param publisherName\n   * @param typeParam\n   * @param options The options parameters.\n   */\n  listVersions(\n    location: string,\n    publisherName: string,\n    typeParam: string,\n    options?: VirtualMachineExtensionImagesListVersionsOptionalParams\n  ): Promise<VirtualMachineExtensionImagesListVersionsResponse> {\n    return this.client.sendOperationRequest(\n      { location, publisherName, typeParam, options },\n      listVersionsOperationSpec\n    );\n  }\n}\n// Operation Specifications\nconst serializer = coreClient.createSerializer(Mappers, /* isXml */ false);\n\nconst getOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/providers/Microsoft.Compute/locations/{location}/publishers/{publisherName}/artifacttypes/vmextension/types/{type}/versions/{version}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.VirtualMachineExtensionImage\n    },\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.location,\n    Parameters.publisherName,\n    Parameters.typeParam,\n    Parameters.version\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst listTypesOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/providers/Microsoft.Compute/locations/{location}/publishers/{publisherName}/artifacttypes/vmextension/types\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: {\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"VirtualMachineExtensionImage\"\n            }\n          }\n        }\n      }\n    },\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.location,\n    Parameters.publisherName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst listVersionsOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/providers/Microsoft.Compute/locations/{location}/publishers/{publisherName}/artifacttypes/vmextension/types/{type}/versions\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: {\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"VirtualMachineExtensionImage\"\n            }\n          }\n        }\n      }\n    },\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  queryParameters: [\n    Parameters.apiVersion,\n    Parameters.filter,\n    Parameters.top,\n    Parameters.orderby\n  ],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.location,\n    Parameters.publisherName,\n    Parameters.typeParam\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport { VirtualMachineExtensions } from \"../operationsInterfaces\";\nimport * as coreClient from \"@azure/core-client\";\nimport * as Mappers from \"../models/mappers\";\nimport * as Parameters from \"../models/parameters\";\nimport { ComputeManagementClient } from \"../computeManagementClient\";\nimport { PollerLike, PollOperationState, LroEngine } from \"@azure/core-lro\";\nimport { LroImpl } from \"../lroImpl\";\nimport {\n  VirtualMachineExtension,\n  VirtualMachineExtensionsCreateOrUpdateOptionalParams,\n  VirtualMachineExtensionsCreateOrUpdateResponse,\n  VirtualMachineExtensionUpdate,\n  VirtualMachineExtensionsUpdateOptionalParams,\n  VirtualMachineExtensionsUpdateResponse,\n  VirtualMachineExtensionsDeleteOptionalParams,\n  VirtualMachineExtensionsGetOptionalParams,\n  VirtualMachineExtensionsGetResponse,\n  VirtualMachineExtensionsListOptionalParams,\n  VirtualMachineExtensionsListResponse\n} from \"../models\";\n\n/** Class containing VirtualMachineExtensions operations. */\nexport class VirtualMachineExtensionsImpl implements VirtualMachineExtensions {\n  private readonly client: ComputeManagementClient;\n\n  /**\n   * Initialize a new instance of the class VirtualMachineExtensions class.\n   * @param client Reference to the service client\n   */\n  constructor(client: ComputeManagementClient) {\n    this.client = client;\n  }\n\n  /**\n   * The operation to create or update the extension.\n   * @param resourceGroupName The name of the resource group.\n   * @param vmName The name of the virtual machine where the extension should be created or updated.\n   * @param vmExtensionName The name of the virtual machine extension.\n   * @param extensionParameters Parameters supplied to the Create Virtual Machine Extension operation.\n   * @param options The options parameters.\n   */\n  async beginCreateOrUpdate(\n    resourceGroupName: string,\n    vmName: string,\n    vmExtensionName: string,\n    extensionParameters: VirtualMachineExtension,\n    options?: VirtualMachineExtensionsCreateOrUpdateOptionalParams\n  ): Promise<\n    PollerLike<\n      PollOperationState<VirtualMachineExtensionsCreateOrUpdateResponse>,\n      VirtualMachineExtensionsCreateOrUpdateResponse\n    >\n  > {\n    const directSendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ): Promise<VirtualMachineExtensionsCreateOrUpdateResponse> => {\n      return this.client.sendOperationRequest(args, spec);\n    };\n    const sendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ) => {\n      let currentRawResponse:\n        | coreClient.FullOperationResponse\n        | undefined = undefined;\n      const providedCallback = args.options?.onResponse;\n      const callback: coreClient.RawResponseCallback = (\n        rawResponse: coreClient.FullOperationResponse,\n        flatResponse: unknown\n      ) => {\n        currentRawResponse = rawResponse;\n        providedCallback?.(rawResponse, flatResponse);\n      };\n      const updatedArgs = {\n        ...args,\n        options: {\n          ...args.options,\n          onResponse: callback\n        }\n      };\n      const flatResponse = await directSendOperation(updatedArgs, spec);\n      return {\n        flatResponse,\n        rawResponse: {\n          statusCode: currentRawResponse!.status,\n          body: currentRawResponse!.parsedBody,\n          headers: currentRawResponse!.headers.toJSON()\n        }\n      };\n    };\n\n    const lro = new LroImpl(\n      sendOperation,\n      {\n        resourceGroupName,\n        vmName,\n        vmExtensionName,\n        extensionParameters,\n        options\n      },\n      createOrUpdateOperationSpec\n    );\n    return new LroEngine(lro, {\n      resumeFrom: options?.resumeFrom,\n      intervalInMs: options?.updateIntervalInMs\n    });\n  }\n\n  /**\n   * The operation to create or update the extension.\n   * @param resourceGroupName The name of the resource group.\n   * @param vmName The name of the virtual machine where the extension should be created or updated.\n   * @param vmExtensionName The name of the virtual machine extension.\n   * @param extensionParameters Parameters supplied to the Create Virtual Machine Extension operation.\n   * @param options The options parameters.\n   */\n  async beginCreateOrUpdateAndWait(\n    resourceGroupName: string,\n    vmName: string,\n    vmExtensionName: string,\n    extensionParameters: VirtualMachineExtension,\n    options?: VirtualMachineExtensionsCreateOrUpdateOptionalParams\n  ): Promise<VirtualMachineExtensionsCreateOrUpdateResponse> {\n    const poller = await this.beginCreateOrUpdate(\n      resourceGroupName,\n      vmName,\n      vmExtensionName,\n      extensionParameters,\n      options\n    );\n    return poller.pollUntilDone();\n  }\n\n  /**\n   * The operation to update the extension.\n   * @param resourceGroupName The name of the resource group.\n   * @param vmName The name of the virtual machine where the extension should be updated.\n   * @param vmExtensionName The name of the virtual machine extension.\n   * @param extensionParameters Parameters supplied to the Update Virtual Machine Extension operation.\n   * @param options The options parameters.\n   */\n  async beginUpdate(\n    resourceGroupName: string,\n    vmName: string,\n    vmExtensionName: string,\n    extensionParameters: VirtualMachineExtensionUpdate,\n    options?: VirtualMachineExtensionsUpdateOptionalParams\n  ): Promise<\n    PollerLike<\n      PollOperationState<VirtualMachineExtensionsUpdateResponse>,\n      VirtualMachineExtensionsUpdateResponse\n    >\n  > {\n    const directSendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ): Promise<VirtualMachineExtensionsUpdateResponse> => {\n      return this.client.sendOperationRequest(args, spec);\n    };\n    const sendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ) => {\n      let currentRawResponse:\n        | coreClient.FullOperationResponse\n        | undefined = undefined;\n      const providedCallback = args.options?.onResponse;\n      const callback: coreClient.RawResponseCallback = (\n        rawResponse: coreClient.FullOperationResponse,\n        flatResponse: unknown\n      ) => {\n        currentRawResponse = rawResponse;\n        providedCallback?.(rawResponse, flatResponse);\n      };\n      const updatedArgs = {\n        ...args,\n        options: {\n          ...args.options,\n          onResponse: callback\n        }\n      };\n      const flatResponse = await directSendOperation(updatedArgs, spec);\n      return {\n        flatResponse,\n        rawResponse: {\n          statusCode: currentRawResponse!.status,\n          body: currentRawResponse!.parsedBody,\n          headers: currentRawResponse!.headers.toJSON()\n        }\n      };\n    };\n\n    const lro = new LroImpl(\n      sendOperation,\n      {\n        resourceGroupName,\n        vmName,\n        vmExtensionName,\n        extensionParameters,\n        options\n      },\n      updateOperationSpec\n    );\n    return new LroEngine(lro, {\n      resumeFrom: options?.resumeFrom,\n      intervalInMs: options?.updateIntervalInMs\n    });\n  }\n\n  /**\n   * The operation to update the extension.\n   * @param resourceGroupName The name of the resource group.\n   * @param vmName The name of the virtual machine where the extension should be updated.\n   * @param vmExtensionName The name of the virtual machine extension.\n   * @param extensionParameters Parameters supplied to the Update Virtual Machine Extension operation.\n   * @param options The options parameters.\n   */\n  async beginUpdateAndWait(\n    resourceGroupName: string,\n    vmName: string,\n    vmExtensionName: string,\n    extensionParameters: VirtualMachineExtensionUpdate,\n    options?: VirtualMachineExtensionsUpdateOptionalParams\n  ): Promise<VirtualMachineExtensionsUpdateResponse> {\n    const poller = await this.beginUpdate(\n      resourceGroupName,\n      vmName,\n      vmExtensionName,\n      extensionParameters,\n      options\n    );\n    return poller.pollUntilDone();\n  }\n\n  /**\n   * The operation to delete the extension.\n   * @param resourceGroupName The name of the resource group.\n   * @param vmName The name of the virtual machine where the extension should be deleted.\n   * @param vmExtensionName The name of the virtual machine extension.\n   * @param options The options parameters.\n   */\n  async beginDelete(\n    resourceGroupName: string,\n    vmName: string,\n    vmExtensionName: string,\n    options?: VirtualMachineExtensionsDeleteOptionalParams\n  ): Promise<PollerLike<PollOperationState<void>, void>> {\n    const directSendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ): Promise<void> => {\n      return this.client.sendOperationRequest(args, spec);\n    };\n    const sendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ) => {\n      let currentRawResponse:\n        | coreClient.FullOperationResponse\n        | undefined = undefined;\n      const providedCallback = args.options?.onResponse;\n      const callback: coreClient.RawResponseCallback = (\n        rawResponse: coreClient.FullOperationResponse,\n        flatResponse: unknown\n      ) => {\n        currentRawResponse = rawResponse;\n        providedCallback?.(rawResponse, flatResponse);\n      };\n      const updatedArgs = {\n        ...args,\n        options: {\n          ...args.options,\n          onResponse: callback\n        }\n      };\n      const flatResponse = await directSendOperation(updatedArgs, spec);\n      return {\n        flatResponse,\n        rawResponse: {\n          statusCode: currentRawResponse!.status,\n          body: currentRawResponse!.parsedBody,\n          headers: currentRawResponse!.headers.toJSON()\n        }\n      };\n    };\n\n    const lro = new LroImpl(\n      sendOperation,\n      { resourceGroupName, vmName, vmExtensionName, options },\n      deleteOperationSpec\n    );\n    return new LroEngine(lro, {\n      resumeFrom: options?.resumeFrom,\n      intervalInMs: options?.updateIntervalInMs\n    });\n  }\n\n  /**\n   * The operation to delete the extension.\n   * @param resourceGroupName The name of the resource group.\n   * @param vmName The name of the virtual machine where the extension should be deleted.\n   * @param vmExtensionName The name of the virtual machine extension.\n   * @param options The options parameters.\n   */\n  async beginDeleteAndWait(\n    resourceGroupName: string,\n    vmName: string,\n    vmExtensionName: string,\n    options?: VirtualMachineExtensionsDeleteOptionalParams\n  ): Promise<void> {\n    const poller = await this.beginDelete(\n      resourceGroupName,\n      vmName,\n      vmExtensionName,\n      options\n    );\n    return poller.pollUntilDone();\n  }\n\n  /**\n   * The operation to get the extension.\n   * @param resourceGroupName The name of the resource group.\n   * @param vmName The name of the virtual machine containing the extension.\n   * @param vmExtensionName The name of the virtual machine extension.\n   * @param options The options parameters.\n   */\n  get(\n    resourceGroupName: string,\n    vmName: string,\n    vmExtensionName: string,\n    options?: VirtualMachineExtensionsGetOptionalParams\n  ): Promise<VirtualMachineExtensionsGetResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, vmName, vmExtensionName, options },\n      getOperationSpec\n    );\n  }\n\n  /**\n   * The operation to get all extensions of a Virtual Machine.\n   * @param resourceGroupName The name of the resource group.\n   * @param vmName The name of the virtual machine containing the extension.\n   * @param options The options parameters.\n   */\n  list(\n    resourceGroupName: string,\n    vmName: string,\n    options?: VirtualMachineExtensionsListOptionalParams\n  ): Promise<VirtualMachineExtensionsListResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, vmName, options },\n      listOperationSpec\n    );\n  }\n}\n// Operation Specifications\nconst serializer = coreClient.createSerializer(Mappers, /* isXml */ false);\n\nconst createOrUpdateOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/virtualMachines/{vmName}/extensions/{vmExtensionName}\",\n  httpMethod: \"PUT\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.VirtualMachineExtension\n    },\n    201: {\n      bodyMapper: Mappers.VirtualMachineExtension\n    },\n    202: {\n      bodyMapper: Mappers.VirtualMachineExtension\n    },\n    204: {\n      bodyMapper: Mappers.VirtualMachineExtension\n    },\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  requestBody: Parameters.extensionParameters,\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.resourceGroupName,\n    Parameters.subscriptionId,\n    Parameters.vmName,\n    Parameters.vmExtensionName\n  ],\n  headerParameters: [Parameters.accept, Parameters.contentType],\n  mediaType: \"json\",\n  serializer\n};\nconst updateOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/virtualMachines/{vmName}/extensions/{vmExtensionName}\",\n  httpMethod: \"PATCH\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.VirtualMachineExtension\n    },\n    201: {\n      bodyMapper: Mappers.VirtualMachineExtension\n    },\n    202: {\n      bodyMapper: Mappers.VirtualMachineExtension\n    },\n    204: {\n      bodyMapper: Mappers.VirtualMachineExtension\n    },\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  requestBody: Parameters.extensionParameters1,\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.resourceGroupName,\n    Parameters.subscriptionId,\n    Parameters.vmName,\n    Parameters.vmExtensionName\n  ],\n  headerParameters: [Parameters.accept, Parameters.contentType],\n  mediaType: \"json\",\n  serializer\n};\nconst deleteOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/virtualMachines/{vmName}/extensions/{vmExtensionName}\",\n  httpMethod: \"DELETE\",\n  responses: {\n    200: {},\n    201: {},\n    202: {},\n    204: {},\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.resourceGroupName,\n    Parameters.subscriptionId,\n    Parameters.vmName,\n    Parameters.vmExtensionName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst getOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/virtualMachines/{vmName}/extensions/{vmExtensionName}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.VirtualMachineExtension\n    },\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  queryParameters: [Parameters.apiVersion, Parameters.expand],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.resourceGroupName,\n    Parameters.subscriptionId,\n    Parameters.vmName,\n    Parameters.vmExtensionName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst listOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/virtualMachines/{vmName}/extensions\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.VirtualMachineExtensionsListResult\n    },\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  queryParameters: [Parameters.apiVersion, Parameters.expand],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.resourceGroupName,\n    Parameters.subscriptionId,\n    Parameters.vmName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport { VirtualMachineImages } from \"../operationsInterfaces\";\nimport * as coreClient from \"@azure/core-client\";\nimport * as Mappers from \"../models/mappers\";\nimport * as Parameters from \"../models/parameters\";\nimport { ComputeManagementClient } from \"../computeManagementClient\";\nimport {\n  VirtualMachineImagesGetOptionalParams,\n  VirtualMachineImagesGetResponse,\n  VirtualMachineImagesListOptionalParams,\n  VirtualMachineImagesListResponse,\n  VirtualMachineImagesListOffersOptionalParams,\n  VirtualMachineImagesListOffersResponse,\n  VirtualMachineImagesListPublishersOptionalParams,\n  VirtualMachineImagesListPublishersResponse,\n  VirtualMachineImagesListSkusOptionalParams,\n  VirtualMachineImagesListSkusResponse\n} from \"../models\";\n\n/** Class containing VirtualMachineImages operations. */\nexport class VirtualMachineImagesImpl implements VirtualMachineImages {\n  private readonly client: ComputeManagementClient;\n\n  /**\n   * Initialize a new instance of the class VirtualMachineImages class.\n   * @param client Reference to the service client\n   */\n  constructor(client: ComputeManagementClient) {\n    this.client = client;\n  }\n\n  /**\n   * Gets a virtual machine image.\n   * @param location The name of a supported Azure region.\n   * @param publisherName A valid image publisher.\n   * @param offer A valid image publisher offer.\n   * @param skus A valid image SKU.\n   * @param version A valid image SKU version.\n   * @param options The options parameters.\n   */\n  get(\n    location: string,\n    publisherName: string,\n    offer: string,\n    skus: string,\n    version: string,\n    options?: VirtualMachineImagesGetOptionalParams\n  ): Promise<VirtualMachineImagesGetResponse> {\n    return this.client.sendOperationRequest(\n      { location, publisherName, offer, skus, version, options },\n      getOperationSpec\n    );\n  }\n\n  /**\n   * Gets a list of all virtual machine image versions for the specified location, publisher, offer, and\n   * SKU.\n   * @param location The name of a supported Azure region.\n   * @param publisherName A valid image publisher.\n   * @param offer A valid image publisher offer.\n   * @param skus A valid image SKU.\n   * @param options The options parameters.\n   */\n  list(\n    location: string,\n    publisherName: string,\n    offer: string,\n    skus: string,\n    options?: VirtualMachineImagesListOptionalParams\n  ): Promise<VirtualMachineImagesListResponse> {\n    return this.client.sendOperationRequest(\n      { location, publisherName, offer, skus, options },\n      listOperationSpec\n    );\n  }\n\n  /**\n   * Gets a list of virtual machine image offers for the specified location and publisher.\n   * @param location The name of a supported Azure region.\n   * @param publisherName A valid image publisher.\n   * @param options The options parameters.\n   */\n  listOffers(\n    location: string,\n    publisherName: string,\n    options?: VirtualMachineImagesListOffersOptionalParams\n  ): Promise<VirtualMachineImagesListOffersResponse> {\n    return this.client.sendOperationRequest(\n      { location, publisherName, options },\n      listOffersOperationSpec\n    );\n  }\n\n  /**\n   * Gets a list of virtual machine image publishers for the specified Azure location.\n   * @param location The name of a supported Azure region.\n   * @param options The options parameters.\n   */\n  listPublishers(\n    location: string,\n    options?: VirtualMachineImagesListPublishersOptionalParams\n  ): Promise<VirtualMachineImagesListPublishersResponse> {\n    return this.client.sendOperationRequest(\n      { location, options },\n      listPublishersOperationSpec\n    );\n  }\n\n  /**\n   * Gets a list of virtual machine image SKUs for the specified location, publisher, and offer.\n   * @param location The name of a supported Azure region.\n   * @param publisherName A valid image publisher.\n   * @param offer A valid image publisher offer.\n   * @param options The options parameters.\n   */\n  listSkus(\n    location: string,\n    publisherName: string,\n    offer: string,\n    options?: VirtualMachineImagesListSkusOptionalParams\n  ): Promise<VirtualMachineImagesListSkusResponse> {\n    return this.client.sendOperationRequest(\n      { location, publisherName, offer, options },\n      listSkusOperationSpec\n    );\n  }\n}\n// Operation Specifications\nconst serializer = coreClient.createSerializer(Mappers, /* isXml */ false);\n\nconst getOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/providers/Microsoft.Compute/locations/{location}/publishers/{publisherName}/artifacttypes/vmimage/offers/{offer}/skus/{skus}/versions/{version}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.VirtualMachineImage\n    },\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.location,\n    Parameters.publisherName,\n    Parameters.version,\n    Parameters.offer,\n    Parameters.skus\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst listOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/providers/Microsoft.Compute/locations/{location}/publishers/{publisherName}/artifacttypes/vmimage/offers/{offer}/skus/{skus}/versions\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: {\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"VirtualMachineImageResource\"\n            }\n          }\n        }\n      }\n    },\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  queryParameters: [\n    Parameters.apiVersion,\n    Parameters.expand,\n    Parameters.top,\n    Parameters.orderby\n  ],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.location,\n    Parameters.publisherName,\n    Parameters.offer,\n    Parameters.skus\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst listOffersOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/providers/Microsoft.Compute/locations/{location}/publishers/{publisherName}/artifacttypes/vmimage/offers\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: {\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"VirtualMachineImageResource\"\n            }\n          }\n        }\n      }\n    },\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.location,\n    Parameters.publisherName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst listPublishersOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/providers/Microsoft.Compute/locations/{location}/publishers\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: {\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"VirtualMachineImageResource\"\n            }\n          }\n        }\n      }\n    },\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.location\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst listSkusOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/providers/Microsoft.Compute/locations/{location}/publishers/{publisherName}/artifacttypes/vmimage/offers/{offer}/skus\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: {\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"VirtualMachineImageResource\"\n            }\n          }\n        }\n      }\n    },\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.location,\n    Parameters.publisherName,\n    Parameters.offer\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport { VirtualMachineImagesEdgeZone } from \"../operationsInterfaces\";\nimport * as coreClient from \"@azure/core-client\";\nimport * as Mappers from \"../models/mappers\";\nimport * as Parameters from \"../models/parameters\";\nimport { ComputeManagementClient } from \"../computeManagementClient\";\nimport {\n  VirtualMachineImagesEdgeZoneGetOptionalParams,\n  VirtualMachineImagesEdgeZoneGetResponse,\n  VirtualMachineImagesEdgeZoneListOptionalParams,\n  VirtualMachineImagesEdgeZoneListResponse,\n  VirtualMachineImagesEdgeZoneListOffersOptionalParams,\n  VirtualMachineImagesEdgeZoneListOffersResponse,\n  VirtualMachineImagesEdgeZoneListPublishersOptionalParams,\n  VirtualMachineImagesEdgeZoneListPublishersResponse,\n  VirtualMachineImagesEdgeZoneListSkusOptionalParams,\n  VirtualMachineImagesEdgeZoneListSkusResponse\n} from \"../models\";\n\n/** Class containing VirtualMachineImagesEdgeZone operations. */\nexport class VirtualMachineImagesEdgeZoneImpl\n  implements VirtualMachineImagesEdgeZone {\n  private readonly client: ComputeManagementClient;\n\n  /**\n   * Initialize a new instance of the class VirtualMachineImagesEdgeZone class.\n   * @param client Reference to the service client\n   */\n  constructor(client: ComputeManagementClient) {\n    this.client = client;\n  }\n\n  /**\n   * Gets a virtual machine image in an edge zone.\n   * @param location The name of a supported Azure region.\n   * @param edgeZone The name of the edge zone.\n   * @param publisherName A valid image publisher.\n   * @param offer A valid image publisher offer.\n   * @param skus A valid image SKU.\n   * @param version A valid image SKU version.\n   * @param options The options parameters.\n   */\n  get(\n    location: string,\n    edgeZone: string,\n    publisherName: string,\n    offer: string,\n    skus: string,\n    version: string,\n    options?: VirtualMachineImagesEdgeZoneGetOptionalParams\n  ): Promise<VirtualMachineImagesEdgeZoneGetResponse> {\n    return this.client.sendOperationRequest(\n      { location, edgeZone, publisherName, offer, skus, version, options },\n      getOperationSpec\n    );\n  }\n\n  /**\n   * Gets a list of all virtual machine image versions for the specified location, edge zone, publisher,\n   * offer, and SKU.\n   * @param location The name of a supported Azure region.\n   * @param edgeZone The name of the edge zone.\n   * @param publisherName A valid image publisher.\n   * @param offer A valid image publisher offer.\n   * @param skus A valid image SKU.\n   * @param options The options parameters.\n   */\n  list(\n    location: string,\n    edgeZone: string,\n    publisherName: string,\n    offer: string,\n    skus: string,\n    options?: VirtualMachineImagesEdgeZoneListOptionalParams\n  ): Promise<VirtualMachineImagesEdgeZoneListResponse> {\n    return this.client.sendOperationRequest(\n      { location, edgeZone, publisherName, offer, skus, options },\n      listOperationSpec\n    );\n  }\n\n  /**\n   * Gets a list of virtual machine image offers for the specified location, edge zone and publisher.\n   * @param location The name of a supported Azure region.\n   * @param edgeZone The name of the edge zone.\n   * @param publisherName A valid image publisher.\n   * @param options The options parameters.\n   */\n  listOffers(\n    location: string,\n    edgeZone: string,\n    publisherName: string,\n    options?: VirtualMachineImagesEdgeZoneListOffersOptionalParams\n  ): Promise<VirtualMachineImagesEdgeZoneListOffersResponse> {\n    return this.client.sendOperationRequest(\n      { location, edgeZone, publisherName, options },\n      listOffersOperationSpec\n    );\n  }\n\n  /**\n   * Gets a list of virtual machine image publishers for the specified Azure location and edge zone.\n   * @param location The name of a supported Azure region.\n   * @param edgeZone The name of the edge zone.\n   * @param options The options parameters.\n   */\n  listPublishers(\n    location: string,\n    edgeZone: string,\n    options?: VirtualMachineImagesEdgeZoneListPublishersOptionalParams\n  ): Promise<VirtualMachineImagesEdgeZoneListPublishersResponse> {\n    return this.client.sendOperationRequest(\n      { location, edgeZone, options },\n      listPublishersOperationSpec\n    );\n  }\n\n  /**\n   * Gets a list of virtual machine image SKUs for the specified location, edge zone, publisher, and\n   * offer.\n   * @param location The name of a supported Azure region.\n   * @param edgeZone The name of the edge zone.\n   * @param publisherName A valid image publisher.\n   * @param offer A valid image publisher offer.\n   * @param options The options parameters.\n   */\n  listSkus(\n    location: string,\n    edgeZone: string,\n    publisherName: string,\n    offer: string,\n    options?: VirtualMachineImagesEdgeZoneListSkusOptionalParams\n  ): Promise<VirtualMachineImagesEdgeZoneListSkusResponse> {\n    return this.client.sendOperationRequest(\n      { location, edgeZone, publisherName, offer, options },\n      listSkusOperationSpec\n    );\n  }\n}\n// Operation Specifications\nconst serializer = coreClient.createSerializer(Mappers, /* isXml */ false);\n\nconst getOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/providers/Microsoft.Compute/locations/{location}/edgeZones/{edgeZone}/publishers/{publisherName}/artifacttypes/vmimage/offers/{offer}/skus/{skus}/versions/{version}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.VirtualMachineImage\n    },\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.location,\n    Parameters.publisherName,\n    Parameters.version,\n    Parameters.offer,\n    Parameters.skus,\n    Parameters.edgeZone\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst listOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/providers/Microsoft.Compute/locations/{location}/edgeZones/{edgeZone}/publishers/{publisherName}/artifacttypes/vmimage/offers/{offer}/skus/{skus}/versions\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: {\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"VirtualMachineImageResource\"\n            }\n          }\n        }\n      }\n    },\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  queryParameters: [\n    Parameters.apiVersion,\n    Parameters.expand,\n    Parameters.top,\n    Parameters.orderby\n  ],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.location,\n    Parameters.publisherName,\n    Parameters.offer,\n    Parameters.skus,\n    Parameters.edgeZone\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst listOffersOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/providers/Microsoft.Compute/locations/{location}/edgeZones/{edgeZone}/publishers/{publisherName}/artifacttypes/vmimage/offers\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: {\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"VirtualMachineImageResource\"\n            }\n          }\n        }\n      }\n    },\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.location,\n    Parameters.publisherName,\n    Parameters.edgeZone\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst listPublishersOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/providers/Microsoft.Compute/locations/{location}/edgeZones/{edgeZone}/publishers\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: {\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"VirtualMachineImageResource\"\n            }\n          }\n        }\n      }\n    },\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.location,\n    Parameters.edgeZone\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst listSkusOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/providers/Microsoft.Compute/locations/{location}/edgeZones/{edgeZone}/publishers/{publisherName}/artifacttypes/vmimage/offers/{offer}/skus\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: {\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"VirtualMachineImageResource\"\n            }\n          }\n        }\n      }\n    },\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.location,\n    Parameters.publisherName,\n    Parameters.offer,\n    Parameters.edgeZone\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport { PagedAsyncIterableIterator } from \"@azure/core-paging\";\nimport { UsageOperations } from \"../operationsInterfaces\";\nimport * as coreClient from \"@azure/core-client\";\nimport * as Mappers from \"../models/mappers\";\nimport * as Parameters from \"../models/parameters\";\nimport { ComputeManagementClient } from \"../computeManagementClient\";\nimport {\n  Usage,\n  UsageListNextOptionalParams,\n  UsageListOptionalParams,\n  UsageListResponse,\n  UsageListNextResponse\n} from \"../models\";\n\n/// <reference lib=\"esnext.asynciterable\" />\n/** Class containing UsageOperations operations. */\nexport class UsageOperationsImpl implements UsageOperations {\n  private readonly client: ComputeManagementClient;\n\n  /**\n   * Initialize a new instance of the class UsageOperations class.\n   * @param client Reference to the service client\n   */\n  constructor(client: ComputeManagementClient) {\n    this.client = client;\n  }\n\n  /**\n   * Gets, for the specified location, the current compute resource usage information as well as the\n   * limits for compute resources under the subscription.\n   * @param location The location for which resource usage is queried.\n   * @param options The options parameters.\n   */\n  public list(\n    location: string,\n    options?: UsageListOptionalParams\n  ): PagedAsyncIterableIterator<Usage> {\n    const iter = this.listPagingAll(location, options);\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: () => {\n        return this.listPagingPage(location, options);\n      }\n    };\n  }\n\n  private async *listPagingPage(\n    location: string,\n    options?: UsageListOptionalParams\n  ): AsyncIterableIterator<Usage[]> {\n    let result = await this._list(location, options);\n    yield result.value || [];\n    let continuationToken = result.nextLink;\n    while (continuationToken) {\n      result = await this._listNext(location, continuationToken, options);\n      continuationToken = result.nextLink;\n      yield result.value || [];\n    }\n  }\n\n  private async *listPagingAll(\n    location: string,\n    options?: UsageListOptionalParams\n  ): AsyncIterableIterator<Usage> {\n    for await (const page of this.listPagingPage(location, options)) {\n      yield* page;\n    }\n  }\n\n  /**\n   * Gets, for the specified location, the current compute resource usage information as well as the\n   * limits for compute resources under the subscription.\n   * @param location The location for which resource usage is queried.\n   * @param options The options parameters.\n   */\n  private _list(\n    location: string,\n    options?: UsageListOptionalParams\n  ): Promise<UsageListResponse> {\n    return this.client.sendOperationRequest(\n      { location, options },\n      listOperationSpec\n    );\n  }\n\n  /**\n   * ListNext\n   * @param location The location for which resource usage is queried.\n   * @param nextLink The nextLink from the previous successful call to the List method.\n   * @param options The options parameters.\n   */\n  private _listNext(\n    location: string,\n    nextLink: string,\n    options?: UsageListNextOptionalParams\n  ): Promise<UsageListNextResponse> {\n    return this.client.sendOperationRequest(\n      { location, nextLink, options },\n      listNextOperationSpec\n    );\n  }\n}\n// Operation Specifications\nconst serializer = coreClient.createSerializer(Mappers, /* isXml */ false);\n\nconst listOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/providers/Microsoft.Compute/locations/{location}/usages\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.ListUsagesResult\n    },\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.location1\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst listNextOperationSpec: coreClient.OperationSpec = {\n  path: \"{nextLink}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.ListUsagesResult\n    },\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.nextLink,\n    Parameters.location1\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport { PagedAsyncIterableIterator } from \"@azure/core-paging\";\nimport { VirtualMachines } from \"../operationsInterfaces\";\nimport * as coreClient from \"@azure/core-client\";\nimport * as Mappers from \"../models/mappers\";\nimport * as Parameters from \"../models/parameters\";\nimport { ComputeManagementClient } from \"../computeManagementClient\";\nimport { PollerLike, PollOperationState, LroEngine } from \"@azure/core-lro\";\nimport { LroImpl } from \"../lroImpl\";\nimport {\n  VirtualMachine,\n  VirtualMachinesListByLocationNextOptionalParams,\n  VirtualMachinesListByLocationOptionalParams,\n  VirtualMachinesListNextOptionalParams,\n  VirtualMachinesListOptionalParams,\n  VirtualMachinesListAllNextOptionalParams,\n  VirtualMachinesListAllOptionalParams,\n  VirtualMachineSize,\n  VirtualMachinesListAvailableSizesOptionalParams,\n  VirtualMachinesListByLocationResponse,\n  VirtualMachineCaptureParameters,\n  VirtualMachinesCaptureOptionalParams,\n  VirtualMachinesCaptureResponse,\n  VirtualMachinesCreateOrUpdateOptionalParams,\n  VirtualMachinesCreateOrUpdateResponse,\n  VirtualMachineUpdate,\n  VirtualMachinesUpdateOptionalParams,\n  VirtualMachinesUpdateResponse,\n  VirtualMachinesDeleteOptionalParams,\n  VirtualMachinesGetOptionalParams,\n  VirtualMachinesGetResponse,\n  VirtualMachinesInstanceViewOptionalParams,\n  VirtualMachinesInstanceViewResponse,\n  VirtualMachinesConvertToManagedDisksOptionalParams,\n  VirtualMachinesDeallocateOptionalParams,\n  VirtualMachinesGeneralizeOptionalParams,\n  VirtualMachinesListResponse,\n  VirtualMachinesListAllResponse,\n  VirtualMachinesListAvailableSizesResponse,\n  VirtualMachinesPowerOffOptionalParams,\n  VirtualMachinesReapplyOptionalParams,\n  VirtualMachinesRestartOptionalParams,\n  VirtualMachinesStartOptionalParams,\n  VirtualMachinesRedeployOptionalParams,\n  VirtualMachinesReimageOptionalParams,\n  VirtualMachinesRetrieveBootDiagnosticsDataOptionalParams,\n  VirtualMachinesRetrieveBootDiagnosticsDataResponse,\n  VirtualMachinesPerformMaintenanceOptionalParams,\n  VirtualMachinesSimulateEvictionOptionalParams,\n  VirtualMachinesAssessPatchesOptionalParams,\n  VirtualMachinesAssessPatchesResponse,\n  VirtualMachineInstallPatchesParameters,\n  VirtualMachinesInstallPatchesOptionalParams,\n  VirtualMachinesInstallPatchesResponse,\n  RunCommandInput,\n  VirtualMachinesRunCommandOptionalParams,\n  VirtualMachinesRunCommandResponse,\n  VirtualMachinesListByLocationNextResponse,\n  VirtualMachinesListNextResponse,\n  VirtualMachinesListAllNextResponse\n} from \"../models\";\n\n/// <reference lib=\"esnext.asynciterable\" />\n/** Class containing VirtualMachines operations. */\nexport class VirtualMachinesImpl implements VirtualMachines {\n  private readonly client: ComputeManagementClient;\n\n  /**\n   * Initialize a new instance of the class VirtualMachines class.\n   * @param client Reference to the service client\n   */\n  constructor(client: ComputeManagementClient) {\n    this.client = client;\n  }\n\n  /**\n   * Gets all the virtual machines under the specified subscription for the specified location.\n   * @param location The location for which virtual machines under the subscription are queried.\n   * @param options The options parameters.\n   */\n  public listByLocation(\n    location: string,\n    options?: VirtualMachinesListByLocationOptionalParams\n  ): PagedAsyncIterableIterator<VirtualMachine> {\n    const iter = this.listByLocationPagingAll(location, options);\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: () => {\n        return this.listByLocationPagingPage(location, options);\n      }\n    };\n  }\n\n  private async *listByLocationPagingPage(\n    location: string,\n    options?: VirtualMachinesListByLocationOptionalParams\n  ): AsyncIterableIterator<VirtualMachine[]> {\n    let result = await this._listByLocation(location, options);\n    yield result.value || [];\n    let continuationToken = result.nextLink;\n    while (continuationToken) {\n      result = await this._listByLocationNext(\n        location,\n        continuationToken,\n        options\n      );\n      continuationToken = result.nextLink;\n      yield result.value || [];\n    }\n  }\n\n  private async *listByLocationPagingAll(\n    location: string,\n    options?: VirtualMachinesListByLocationOptionalParams\n  ): AsyncIterableIterator<VirtualMachine> {\n    for await (const page of this.listByLocationPagingPage(location, options)) {\n      yield* page;\n    }\n  }\n\n  /**\n   * Lists all of the virtual machines in the specified resource group. Use the nextLink property in the\n   * response to get the next page of virtual machines.\n   * @param resourceGroupName The name of the resource group.\n   * @param options The options parameters.\n   */\n  public list(\n    resourceGroupName: string,\n    options?: VirtualMachinesListOptionalParams\n  ): PagedAsyncIterableIterator<VirtualMachine> {\n    const iter = this.listPagingAll(resourceGroupName, options);\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: () => {\n        return this.listPagingPage(resourceGroupName, options);\n      }\n    };\n  }\n\n  private async *listPagingPage(\n    resourceGroupName: string,\n    options?: VirtualMachinesListOptionalParams\n  ): AsyncIterableIterator<VirtualMachine[]> {\n    let result = await this._list(resourceGroupName, options);\n    yield result.value || [];\n    let continuationToken = result.nextLink;\n    while (continuationToken) {\n      result = await this._listNext(\n        resourceGroupName,\n        continuationToken,\n        options\n      );\n      continuationToken = result.nextLink;\n      yield result.value || [];\n    }\n  }\n\n  private async *listPagingAll(\n    resourceGroupName: string,\n    options?: VirtualMachinesListOptionalParams\n  ): AsyncIterableIterator<VirtualMachine> {\n    for await (const page of this.listPagingPage(resourceGroupName, options)) {\n      yield* page;\n    }\n  }\n\n  /**\n   * Lists all of the virtual machines in the specified subscription. Use the nextLink property in the\n   * response to get the next page of virtual machines.\n   * @param options The options parameters.\n   */\n  public listAll(\n    options?: VirtualMachinesListAllOptionalParams\n  ): PagedAsyncIterableIterator<VirtualMachine> {\n    const iter = this.listAllPagingAll(options);\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: () => {\n        return this.listAllPagingPage(options);\n      }\n    };\n  }\n\n  private async *listAllPagingPage(\n    options?: VirtualMachinesListAllOptionalParams\n  ): AsyncIterableIterator<VirtualMachine[]> {\n    let result = await this._listAll(options);\n    yield result.value || [];\n    let continuationToken = result.nextLink;\n    while (continuationToken) {\n      result = await this._listAllNext(continuationToken, options);\n      continuationToken = result.nextLink;\n      yield result.value || [];\n    }\n  }\n\n  private async *listAllPagingAll(\n    options?: VirtualMachinesListAllOptionalParams\n  ): AsyncIterableIterator<VirtualMachine> {\n    for await (const page of this.listAllPagingPage(options)) {\n      yield* page;\n    }\n  }\n\n  /**\n   * Lists all available virtual machine sizes to which the specified virtual machine can be resized.\n   * @param resourceGroupName The name of the resource group.\n   * @param vmName The name of the virtual machine.\n   * @param options The options parameters.\n   */\n  public listAvailableSizes(\n    resourceGroupName: string,\n    vmName: string,\n    options?: VirtualMachinesListAvailableSizesOptionalParams\n  ): PagedAsyncIterableIterator<VirtualMachineSize> {\n    const iter = this.listAvailableSizesPagingAll(\n      resourceGroupName,\n      vmName,\n      options\n    );\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: () => {\n        return this.listAvailableSizesPagingPage(\n          resourceGroupName,\n          vmName,\n          options\n        );\n      }\n    };\n  }\n\n  private async *listAvailableSizesPagingPage(\n    resourceGroupName: string,\n    vmName: string,\n    options?: VirtualMachinesListAvailableSizesOptionalParams\n  ): AsyncIterableIterator<VirtualMachineSize[]> {\n    let result = await this._listAvailableSizes(\n      resourceGroupName,\n      vmName,\n      options\n    );\n    yield result.value || [];\n  }\n\n  private async *listAvailableSizesPagingAll(\n    resourceGroupName: string,\n    vmName: string,\n    options?: VirtualMachinesListAvailableSizesOptionalParams\n  ): AsyncIterableIterator<VirtualMachineSize> {\n    for await (const page of this.listAvailableSizesPagingPage(\n      resourceGroupName,\n      vmName,\n      options\n    )) {\n      yield* page;\n    }\n  }\n\n  /**\n   * Gets all the virtual machines under the specified subscription for the specified location.\n   * @param location The location for which virtual machines under the subscription are queried.\n   * @param options The options parameters.\n   */\n  private _listByLocation(\n    location: string,\n    options?: VirtualMachinesListByLocationOptionalParams\n  ): Promise<VirtualMachinesListByLocationResponse> {\n    return this.client.sendOperationRequest(\n      { location, options },\n      listByLocationOperationSpec\n    );\n  }\n\n  /**\n   * Captures the VM by copying virtual hard disks of the VM and outputs a template that can be used to\n   * create similar VMs.\n   * @param resourceGroupName The name of the resource group.\n   * @param vmName The name of the virtual machine.\n   * @param parameters Parameters supplied to the Capture Virtual Machine operation.\n   * @param options The options parameters.\n   */\n  async beginCapture(\n    resourceGroupName: string,\n    vmName: string,\n    parameters: VirtualMachineCaptureParameters,\n    options?: VirtualMachinesCaptureOptionalParams\n  ): Promise<\n    PollerLike<\n      PollOperationState<VirtualMachinesCaptureResponse>,\n      VirtualMachinesCaptureResponse\n    >\n  > {\n    const directSendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ): Promise<VirtualMachinesCaptureResponse> => {\n      return this.client.sendOperationRequest(args, spec);\n    };\n    const sendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ) => {\n      let currentRawResponse:\n        | coreClient.FullOperationResponse\n        | undefined = undefined;\n      const providedCallback = args.options?.onResponse;\n      const callback: coreClient.RawResponseCallback = (\n        rawResponse: coreClient.FullOperationResponse,\n        flatResponse: unknown\n      ) => {\n        currentRawResponse = rawResponse;\n        providedCallback?.(rawResponse, flatResponse);\n      };\n      const updatedArgs = {\n        ...args,\n        options: {\n          ...args.options,\n          onResponse: callback\n        }\n      };\n      const flatResponse = await directSendOperation(updatedArgs, spec);\n      return {\n        flatResponse,\n        rawResponse: {\n          statusCode: currentRawResponse!.status,\n          body: currentRawResponse!.parsedBody,\n          headers: currentRawResponse!.headers.toJSON()\n        }\n      };\n    };\n\n    const lro = new LroImpl(\n      sendOperation,\n      { resourceGroupName, vmName, parameters, options },\n      captureOperationSpec\n    );\n    return new LroEngine(lro, {\n      resumeFrom: options?.resumeFrom,\n      intervalInMs: options?.updateIntervalInMs,\n      lroResourceLocationConfig: \"location\"\n    });\n  }\n\n  /**\n   * Captures the VM by copying virtual hard disks of the VM and outputs a template that can be used to\n   * create similar VMs.\n   * @param resourceGroupName The name of the resource group.\n   * @param vmName The name of the virtual machine.\n   * @param parameters Parameters supplied to the Capture Virtual Machine operation.\n   * @param options The options parameters.\n   */\n  async beginCaptureAndWait(\n    resourceGroupName: string,\n    vmName: string,\n    parameters: VirtualMachineCaptureParameters,\n    options?: VirtualMachinesCaptureOptionalParams\n  ): Promise<VirtualMachinesCaptureResponse> {\n    const poller = await this.beginCapture(\n      resourceGroupName,\n      vmName,\n      parameters,\n      options\n    );\n    return poller.pollUntilDone();\n  }\n\n  /**\n   * The operation to create or update a virtual machine. Please note some properties can be set only\n   * during virtual machine creation.\n   * @param resourceGroupName The name of the resource group.\n   * @param vmName The name of the virtual machine.\n   * @param parameters Parameters supplied to the Create Virtual Machine operation.\n   * @param options The options parameters.\n   */\n  async beginCreateOrUpdate(\n    resourceGroupName: string,\n    vmName: string,\n    parameters: VirtualMachine,\n    options?: VirtualMachinesCreateOrUpdateOptionalParams\n  ): Promise<\n    PollerLike<\n      PollOperationState<VirtualMachinesCreateOrUpdateResponse>,\n      VirtualMachinesCreateOrUpdateResponse\n    >\n  > {\n    const directSendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ): Promise<VirtualMachinesCreateOrUpdateResponse> => {\n      return this.client.sendOperationRequest(args, spec);\n    };\n    const sendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ) => {\n      let currentRawResponse:\n        | coreClient.FullOperationResponse\n        | undefined = undefined;\n      const providedCallback = args.options?.onResponse;\n      const callback: coreClient.RawResponseCallback = (\n        rawResponse: coreClient.FullOperationResponse,\n        flatResponse: unknown\n      ) => {\n        currentRawResponse = rawResponse;\n        providedCallback?.(rawResponse, flatResponse);\n      };\n      const updatedArgs = {\n        ...args,\n        options: {\n          ...args.options,\n          onResponse: callback\n        }\n      };\n      const flatResponse = await directSendOperation(updatedArgs, spec);\n      return {\n        flatResponse,\n        rawResponse: {\n          statusCode: currentRawResponse!.status,\n          body: currentRawResponse!.parsedBody,\n          headers: currentRawResponse!.headers.toJSON()\n        }\n      };\n    };\n\n    const lro = new LroImpl(\n      sendOperation,\n      { resourceGroupName, vmName, parameters, options },\n      createOrUpdateOperationSpec\n    );\n    return new LroEngine(lro, {\n      resumeFrom: options?.resumeFrom,\n      intervalInMs: options?.updateIntervalInMs\n    });\n  }\n\n  /**\n   * The operation to create or update a virtual machine. Please note some properties can be set only\n   * during virtual machine creation.\n   * @param resourceGroupName The name of the resource group.\n   * @param vmName The name of the virtual machine.\n   * @param parameters Parameters supplied to the Create Virtual Machine operation.\n   * @param options The options parameters.\n   */\n  async beginCreateOrUpdateAndWait(\n    resourceGroupName: string,\n    vmName: string,\n    parameters: VirtualMachine,\n    options?: VirtualMachinesCreateOrUpdateOptionalParams\n  ): Promise<VirtualMachinesCreateOrUpdateResponse> {\n    const poller = await this.beginCreateOrUpdate(\n      resourceGroupName,\n      vmName,\n      parameters,\n      options\n    );\n    return poller.pollUntilDone();\n  }\n\n  /**\n   * The operation to update a virtual machine.\n   * @param resourceGroupName The name of the resource group.\n   * @param vmName The name of the virtual machine.\n   * @param parameters Parameters supplied to the Update Virtual Machine operation.\n   * @param options The options parameters.\n   */\n  async beginUpdate(\n    resourceGroupName: string,\n    vmName: string,\n    parameters: VirtualMachineUpdate,\n    options?: VirtualMachinesUpdateOptionalParams\n  ): Promise<\n    PollerLike<\n      PollOperationState<VirtualMachinesUpdateResponse>,\n      VirtualMachinesUpdateResponse\n    >\n  > {\n    const directSendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ): Promise<VirtualMachinesUpdateResponse> => {\n      return this.client.sendOperationRequest(args, spec);\n    };\n    const sendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ) => {\n      let currentRawResponse:\n        | coreClient.FullOperationResponse\n        | undefined = undefined;\n      const providedCallback = args.options?.onResponse;\n      const callback: coreClient.RawResponseCallback = (\n        rawResponse: coreClient.FullOperationResponse,\n        flatResponse: unknown\n      ) => {\n        currentRawResponse = rawResponse;\n        providedCallback?.(rawResponse, flatResponse);\n      };\n      const updatedArgs = {\n        ...args,\n        options: {\n          ...args.options,\n          onResponse: callback\n        }\n      };\n      const flatResponse = await directSendOperation(updatedArgs, spec);\n      return {\n        flatResponse,\n        rawResponse: {\n          statusCode: currentRawResponse!.status,\n          body: currentRawResponse!.parsedBody,\n          headers: currentRawResponse!.headers.toJSON()\n        }\n      };\n    };\n\n    const lro = new LroImpl(\n      sendOperation,\n      { resourceGroupName, vmName, parameters, options },\n      updateOperationSpec\n    );\n    return new LroEngine(lro, {\n      resumeFrom: options?.resumeFrom,\n      intervalInMs: options?.updateIntervalInMs\n    });\n  }\n\n  /**\n   * The operation to update a virtual machine.\n   * @param resourceGroupName The name of the resource group.\n   * @param vmName The name of the virtual machine.\n   * @param parameters Parameters supplied to the Update Virtual Machine operation.\n   * @param options The options parameters.\n   */\n  async beginUpdateAndWait(\n    resourceGroupName: string,\n    vmName: string,\n    parameters: VirtualMachineUpdate,\n    options?: VirtualMachinesUpdateOptionalParams\n  ): Promise<VirtualMachinesUpdateResponse> {\n    const poller = await this.beginUpdate(\n      resourceGroupName,\n      vmName,\n      parameters,\n      options\n    );\n    return poller.pollUntilDone();\n  }\n\n  /**\n   * The operation to delete a virtual machine.\n   * @param resourceGroupName The name of the resource group.\n   * @param vmName The name of the virtual machine.\n   * @param options The options parameters.\n   */\n  async beginDelete(\n    resourceGroupName: string,\n    vmName: string,\n    options?: VirtualMachinesDeleteOptionalParams\n  ): Promise<PollerLike<PollOperationState<void>, void>> {\n    const directSendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ): Promise<void> => {\n      return this.client.sendOperationRequest(args, spec);\n    };\n    const sendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ) => {\n      let currentRawResponse:\n        | coreClient.FullOperationResponse\n        | undefined = undefined;\n      const providedCallback = args.options?.onResponse;\n      const callback: coreClient.RawResponseCallback = (\n        rawResponse: coreClient.FullOperationResponse,\n        flatResponse: unknown\n      ) => {\n        currentRawResponse = rawResponse;\n        providedCallback?.(rawResponse, flatResponse);\n      };\n      const updatedArgs = {\n        ...args,\n        options: {\n          ...args.options,\n          onResponse: callback\n        }\n      };\n      const flatResponse = await directSendOperation(updatedArgs, spec);\n      return {\n        flatResponse,\n        rawResponse: {\n          statusCode: currentRawResponse!.status,\n          body: currentRawResponse!.parsedBody,\n          headers: currentRawResponse!.headers.toJSON()\n        }\n      };\n    };\n\n    const lro = new LroImpl(\n      sendOperation,\n      { resourceGroupName, vmName, options },\n      deleteOperationSpec\n    );\n    return new LroEngine(lro, {\n      resumeFrom: options?.resumeFrom,\n      intervalInMs: options?.updateIntervalInMs\n    });\n  }\n\n  /**\n   * The operation to delete a virtual machine.\n   * @param resourceGroupName The name of the resource group.\n   * @param vmName The name of the virtual machine.\n   * @param options The options parameters.\n   */\n  async beginDeleteAndWait(\n    resourceGroupName: string,\n    vmName: string,\n    options?: VirtualMachinesDeleteOptionalParams\n  ): Promise<void> {\n    const poller = await this.beginDelete(resourceGroupName, vmName, options);\n    return poller.pollUntilDone();\n  }\n\n  /**\n   * Retrieves information about the model view or the instance view of a virtual machine.\n   * @param resourceGroupName The name of the resource group.\n   * @param vmName The name of the virtual machine.\n   * @param options The options parameters.\n   */\n  get(\n    resourceGroupName: string,\n    vmName: string,\n    options?: VirtualMachinesGetOptionalParams\n  ): Promise<VirtualMachinesGetResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, vmName, options },\n      getOperationSpec\n    );\n  }\n\n  /**\n   * Retrieves information about the run-time state of a virtual machine.\n   * @param resourceGroupName The name of the resource group.\n   * @param vmName The name of the virtual machine.\n   * @param options The options parameters.\n   */\n  instanceView(\n    resourceGroupName: string,\n    vmName: string,\n    options?: VirtualMachinesInstanceViewOptionalParams\n  ): Promise<VirtualMachinesInstanceViewResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, vmName, options },\n      instanceViewOperationSpec\n    );\n  }\n\n  /**\n   * Converts virtual machine disks from blob-based to managed disks. Virtual machine must be\n   * stop-deallocated before invoking this operation.\n   * @param resourceGroupName The name of the resource group.\n   * @param vmName The name of the virtual machine.\n   * @param options The options parameters.\n   */\n  async beginConvertToManagedDisks(\n    resourceGroupName: string,\n    vmName: string,\n    options?: VirtualMachinesConvertToManagedDisksOptionalParams\n  ): Promise<PollerLike<PollOperationState<void>, void>> {\n    const directSendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ): Promise<void> => {\n      return this.client.sendOperationRequest(args, spec);\n    };\n    const sendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ) => {\n      let currentRawResponse:\n        | coreClient.FullOperationResponse\n        | undefined = undefined;\n      const providedCallback = args.options?.onResponse;\n      const callback: coreClient.RawResponseCallback = (\n        rawResponse: coreClient.FullOperationResponse,\n        flatResponse: unknown\n      ) => {\n        currentRawResponse = rawResponse;\n        providedCallback?.(rawResponse, flatResponse);\n      };\n      const updatedArgs = {\n        ...args,\n        options: {\n          ...args.options,\n          onResponse: callback\n        }\n      };\n      const flatResponse = await directSendOperation(updatedArgs, spec);\n      return {\n        flatResponse,\n        rawResponse: {\n          statusCode: currentRawResponse!.status,\n          body: currentRawResponse!.parsedBody,\n          headers: currentRawResponse!.headers.toJSON()\n        }\n      };\n    };\n\n    const lro = new LroImpl(\n      sendOperation,\n      { resourceGroupName, vmName, options },\n      convertToManagedDisksOperationSpec\n    );\n    return new LroEngine(lro, {\n      resumeFrom: options?.resumeFrom,\n      intervalInMs: options?.updateIntervalInMs\n    });\n  }\n\n  /**\n   * Converts virtual machine disks from blob-based to managed disks. Virtual machine must be\n   * stop-deallocated before invoking this operation.\n   * @param resourceGroupName The name of the resource group.\n   * @param vmName The name of the virtual machine.\n   * @param options The options parameters.\n   */\n  async beginConvertToManagedDisksAndWait(\n    resourceGroupName: string,\n    vmName: string,\n    options?: VirtualMachinesConvertToManagedDisksOptionalParams\n  ): Promise<void> {\n    const poller = await this.beginConvertToManagedDisks(\n      resourceGroupName,\n      vmName,\n      options\n    );\n    return poller.pollUntilDone();\n  }\n\n  /**\n   * Shuts down the virtual machine and releases the compute resources. You are not billed for the\n   * compute resources that this virtual machine uses.\n   * @param resourceGroupName The name of the resource group.\n   * @param vmName The name of the virtual machine.\n   * @param options The options parameters.\n   */\n  async beginDeallocate(\n    resourceGroupName: string,\n    vmName: string,\n    options?: VirtualMachinesDeallocateOptionalParams\n  ): Promise<PollerLike<PollOperationState<void>, void>> {\n    const directSendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ): Promise<void> => {\n      return this.client.sendOperationRequest(args, spec);\n    };\n    const sendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ) => {\n      let currentRawResponse:\n        | coreClient.FullOperationResponse\n        | undefined = undefined;\n      const providedCallback = args.options?.onResponse;\n      const callback: coreClient.RawResponseCallback = (\n        rawResponse: coreClient.FullOperationResponse,\n        flatResponse: unknown\n      ) => {\n        currentRawResponse = rawResponse;\n        providedCallback?.(rawResponse, flatResponse);\n      };\n      const updatedArgs = {\n        ...args,\n        options: {\n          ...args.options,\n          onResponse: callback\n        }\n      };\n      const flatResponse = await directSendOperation(updatedArgs, spec);\n      return {\n        flatResponse,\n        rawResponse: {\n          statusCode: currentRawResponse!.status,\n          body: currentRawResponse!.parsedBody,\n          headers: currentRawResponse!.headers.toJSON()\n        }\n      };\n    };\n\n    const lro = new LroImpl(\n      sendOperation,\n      { resourceGroupName, vmName, options },\n      deallocateOperationSpec\n    );\n    return new LroEngine(lro, {\n      resumeFrom: options?.resumeFrom,\n      intervalInMs: options?.updateIntervalInMs\n    });\n  }\n\n  /**\n   * Shuts down the virtual machine and releases the compute resources. You are not billed for the\n   * compute resources that this virtual machine uses.\n   * @param resourceGroupName The name of the resource group.\n   * @param vmName The name of the virtual machine.\n   * @param options The options parameters.\n   */\n  async beginDeallocateAndWait(\n    resourceGroupName: string,\n    vmName: string,\n    options?: VirtualMachinesDeallocateOptionalParams\n  ): Promise<void> {\n    const poller = await this.beginDeallocate(\n      resourceGroupName,\n      vmName,\n      options\n    );\n    return poller.pollUntilDone();\n  }\n\n  /**\n   * Sets the OS state of the virtual machine to generalized. It is recommended to sysprep the virtual\n   * machine before performing this operation. <br>For Windows, please refer to [Create a managed image\n   * of a generalized VM in\n   * Azure](https://docs.microsoft.com/azure/virtual-machines/windows/capture-image-resource).<br>For\n   * Linux, please refer to [How to create an image of a virtual machine or\n   * VHD](https://docs.microsoft.com/azure/virtual-machines/linux/capture-image).\n   * @param resourceGroupName The name of the resource group.\n   * @param vmName The name of the virtual machine.\n   * @param options The options parameters.\n   */\n  generalize(\n    resourceGroupName: string,\n    vmName: string,\n    options?: VirtualMachinesGeneralizeOptionalParams\n  ): Promise<void> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, vmName, options },\n      generalizeOperationSpec\n    );\n  }\n\n  /**\n   * Lists all of the virtual machines in the specified resource group. Use the nextLink property in the\n   * response to get the next page of virtual machines.\n   * @param resourceGroupName The name of the resource group.\n   * @param options The options parameters.\n   */\n  private _list(\n    resourceGroupName: string,\n    options?: VirtualMachinesListOptionalParams\n  ): Promise<VirtualMachinesListResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, options },\n      listOperationSpec\n    );\n  }\n\n  /**\n   * Lists all of the virtual machines in the specified subscription. Use the nextLink property in the\n   * response to get the next page of virtual machines.\n   * @param options The options parameters.\n   */\n  private _listAll(\n    options?: VirtualMachinesListAllOptionalParams\n  ): Promise<VirtualMachinesListAllResponse> {\n    return this.client.sendOperationRequest({ options }, listAllOperationSpec);\n  }\n\n  /**\n   * Lists all available virtual machine sizes to which the specified virtual machine can be resized.\n   * @param resourceGroupName The name of the resource group.\n   * @param vmName The name of the virtual machine.\n   * @param options The options parameters.\n   */\n  private _listAvailableSizes(\n    resourceGroupName: string,\n    vmName: string,\n    options?: VirtualMachinesListAvailableSizesOptionalParams\n  ): Promise<VirtualMachinesListAvailableSizesResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, vmName, options },\n      listAvailableSizesOperationSpec\n    );\n  }\n\n  /**\n   * The operation to power off (stop) a virtual machine. The virtual machine can be restarted with the\n   * same provisioned resources. You are still charged for this virtual machine.\n   * @param resourceGroupName The name of the resource group.\n   * @param vmName The name of the virtual machine.\n   * @param options The options parameters.\n   */\n  async beginPowerOff(\n    resourceGroupName: string,\n    vmName: string,\n    options?: VirtualMachinesPowerOffOptionalParams\n  ): Promise<PollerLike<PollOperationState<void>, void>> {\n    const directSendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ): Promise<void> => {\n      return this.client.sendOperationRequest(args, spec);\n    };\n    const sendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ) => {\n      let currentRawResponse:\n        | coreClient.FullOperationResponse\n        | undefined = undefined;\n      const providedCallback = args.options?.onResponse;\n      const callback: coreClient.RawResponseCallback = (\n        rawResponse: coreClient.FullOperationResponse,\n        flatResponse: unknown\n      ) => {\n        currentRawResponse = rawResponse;\n        providedCallback?.(rawResponse, flatResponse);\n      };\n      const updatedArgs = {\n        ...args,\n        options: {\n          ...args.options,\n          onResponse: callback\n        }\n      };\n      const flatResponse = await directSendOperation(updatedArgs, spec);\n      return {\n        flatResponse,\n        rawResponse: {\n          statusCode: currentRawResponse!.status,\n          body: currentRawResponse!.parsedBody,\n          headers: currentRawResponse!.headers.toJSON()\n        }\n      };\n    };\n\n    const lro = new LroImpl(\n      sendOperation,\n      { resourceGroupName, vmName, options },\n      powerOffOperationSpec\n    );\n    return new LroEngine(lro, {\n      resumeFrom: options?.resumeFrom,\n      intervalInMs: options?.updateIntervalInMs\n    });\n  }\n\n  /**\n   * The operation to power off (stop) a virtual machine. The virtual machine can be restarted with the\n   * same provisioned resources. You are still charged for this virtual machine.\n   * @param resourceGroupName The name of the resource group.\n   * @param vmName The name of the virtual machine.\n   * @param options The options parameters.\n   */\n  async beginPowerOffAndWait(\n    resourceGroupName: string,\n    vmName: string,\n    options?: VirtualMachinesPowerOffOptionalParams\n  ): Promise<void> {\n    const poller = await this.beginPowerOff(resourceGroupName, vmName, options);\n    return poller.pollUntilDone();\n  }\n\n  /**\n   * The operation to reapply a virtual machine's state.\n   * @param resourceGroupName The name of the resource group.\n   * @param vmName The name of the virtual machine.\n   * @param options The options parameters.\n   */\n  async beginReapply(\n    resourceGroupName: string,\n    vmName: string,\n    options?: VirtualMachinesReapplyOptionalParams\n  ): Promise<PollerLike<PollOperationState<void>, void>> {\n    const directSendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ): Promise<void> => {\n      return this.client.sendOperationRequest(args, spec);\n    };\n    const sendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ) => {\n      let currentRawResponse:\n        | coreClient.FullOperationResponse\n        | undefined = undefined;\n      const providedCallback = args.options?.onResponse;\n      const callback: coreClient.RawResponseCallback = (\n        rawResponse: coreClient.FullOperationResponse,\n        flatResponse: unknown\n      ) => {\n        currentRawResponse = rawResponse;\n        providedCallback?.(rawResponse, flatResponse);\n      };\n      const updatedArgs = {\n        ...args,\n        options: {\n          ...args.options,\n          onResponse: callback\n        }\n      };\n      const flatResponse = await directSendOperation(updatedArgs, spec);\n      return {\n        flatResponse,\n        rawResponse: {\n          statusCode: currentRawResponse!.status,\n          body: currentRawResponse!.parsedBody,\n          headers: currentRawResponse!.headers.toJSON()\n        }\n      };\n    };\n\n    const lro = new LroImpl(\n      sendOperation,\n      { resourceGroupName, vmName, options },\n      reapplyOperationSpec\n    );\n    return new LroEngine(lro, {\n      resumeFrom: options?.resumeFrom,\n      intervalInMs: options?.updateIntervalInMs\n    });\n  }\n\n  /**\n   * The operation to reapply a virtual machine's state.\n   * @param resourceGroupName The name of the resource group.\n   * @param vmName The name of the virtual machine.\n   * @param options The options parameters.\n   */\n  async beginReapplyAndWait(\n    resourceGroupName: string,\n    vmName: string,\n    options?: VirtualMachinesReapplyOptionalParams\n  ): Promise<void> {\n    const poller = await this.beginReapply(resourceGroupName, vmName, options);\n    return poller.pollUntilDone();\n  }\n\n  /**\n   * The operation to restart a virtual machine.\n   * @param resourceGroupName The name of the resource group.\n   * @param vmName The name of the virtual machine.\n   * @param options The options parameters.\n   */\n  async beginRestart(\n    resourceGroupName: string,\n    vmName: string,\n    options?: VirtualMachinesRestartOptionalParams\n  ): Promise<PollerLike<PollOperationState<void>, void>> {\n    const directSendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ): Promise<void> => {\n      return this.client.sendOperationRequest(args, spec);\n    };\n    const sendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ) => {\n      let currentRawResponse:\n        | coreClient.FullOperationResponse\n        | undefined = undefined;\n      const providedCallback = args.options?.onResponse;\n      const callback: coreClient.RawResponseCallback = (\n        rawResponse: coreClient.FullOperationResponse,\n        flatResponse: unknown\n      ) => {\n        currentRawResponse = rawResponse;\n        providedCallback?.(rawResponse, flatResponse);\n      };\n      const updatedArgs = {\n        ...args,\n        options: {\n          ...args.options,\n          onResponse: callback\n        }\n      };\n      const flatResponse = await directSendOperation(updatedArgs, spec);\n      return {\n        flatResponse,\n        rawResponse: {\n          statusCode: currentRawResponse!.status,\n          body: currentRawResponse!.parsedBody,\n          headers: currentRawResponse!.headers.toJSON()\n        }\n      };\n    };\n\n    const lro = new LroImpl(\n      sendOperation,\n      { resourceGroupName, vmName, options },\n      restartOperationSpec\n    );\n    return new LroEngine(lro, {\n      resumeFrom: options?.resumeFrom,\n      intervalInMs: options?.updateIntervalInMs\n    });\n  }\n\n  /**\n   * The operation to restart a virtual machine.\n   * @param resourceGroupName The name of the resource group.\n   * @param vmName The name of the virtual machine.\n   * @param options The options parameters.\n   */\n  async beginRestartAndWait(\n    resourceGroupName: string,\n    vmName: string,\n    options?: VirtualMachinesRestartOptionalParams\n  ): Promise<void> {\n    const poller = await this.beginRestart(resourceGroupName, vmName, options);\n    return poller.pollUntilDone();\n  }\n\n  /**\n   * The operation to start a virtual machine.\n   * @param resourceGroupName The name of the resource group.\n   * @param vmName The name of the virtual machine.\n   * @param options The options parameters.\n   */\n  async beginStart(\n    resourceGroupName: string,\n    vmName: string,\n    options?: VirtualMachinesStartOptionalParams\n  ): Promise<PollerLike<PollOperationState<void>, void>> {\n    const directSendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ): Promise<void> => {\n      return this.client.sendOperationRequest(args, spec);\n    };\n    const sendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ) => {\n      let currentRawResponse:\n        | coreClient.FullOperationResponse\n        | undefined = undefined;\n      const providedCallback = args.options?.onResponse;\n      const callback: coreClient.RawResponseCallback = (\n        rawResponse: coreClient.FullOperationResponse,\n        flatResponse: unknown\n      ) => {\n        currentRawResponse = rawResponse;\n        providedCallback?.(rawResponse, flatResponse);\n      };\n      const updatedArgs = {\n        ...args,\n        options: {\n          ...args.options,\n          onResponse: callback\n        }\n      };\n      const flatResponse = await directSendOperation(updatedArgs, spec);\n      return {\n        flatResponse,\n        rawResponse: {\n          statusCode: currentRawResponse!.status,\n          body: currentRawResponse!.parsedBody,\n          headers: currentRawResponse!.headers.toJSON()\n        }\n      };\n    };\n\n    const lro = new LroImpl(\n      sendOperation,\n      { resourceGroupName, vmName, options },\n      startOperationSpec\n    );\n    return new LroEngine(lro, {\n      resumeFrom: options?.resumeFrom,\n      intervalInMs: options?.updateIntervalInMs\n    });\n  }\n\n  /**\n   * The operation to start a virtual machine.\n   * @param resourceGroupName The name of the resource group.\n   * @param vmName The name of the virtual machine.\n   * @param options The options parameters.\n   */\n  async beginStartAndWait(\n    resourceGroupName: string,\n    vmName: string,\n    options?: VirtualMachinesStartOptionalParams\n  ): Promise<void> {\n    const poller = await this.beginStart(resourceGroupName, vmName, options);\n    return poller.pollUntilDone();\n  }\n\n  /**\n   * Shuts down the virtual machine, moves it to a new node, and powers it back on.\n   * @param resourceGroupName The name of the resource group.\n   * @param vmName The name of the virtual machine.\n   * @param options The options parameters.\n   */\n  async beginRedeploy(\n    resourceGroupName: string,\n    vmName: string,\n    options?: VirtualMachinesRedeployOptionalParams\n  ): Promise<PollerLike<PollOperationState<void>, void>> {\n    const directSendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ): Promise<void> => {\n      return this.client.sendOperationRequest(args, spec);\n    };\n    const sendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ) => {\n      let currentRawResponse:\n        | coreClient.FullOperationResponse\n        | undefined = undefined;\n      const providedCallback = args.options?.onResponse;\n      const callback: coreClient.RawResponseCallback = (\n        rawResponse: coreClient.FullOperationResponse,\n        flatResponse: unknown\n      ) => {\n        currentRawResponse = rawResponse;\n        providedCallback?.(rawResponse, flatResponse);\n      };\n      const updatedArgs = {\n        ...args,\n        options: {\n          ...args.options,\n          onResponse: callback\n        }\n      };\n      const flatResponse = await directSendOperation(updatedArgs, spec);\n      return {\n        flatResponse,\n        rawResponse: {\n          statusCode: currentRawResponse!.status,\n          body: currentRawResponse!.parsedBody,\n          headers: currentRawResponse!.headers.toJSON()\n        }\n      };\n    };\n\n    const lro = new LroImpl(\n      sendOperation,\n      { resourceGroupName, vmName, options },\n      redeployOperationSpec\n    );\n    return new LroEngine(lro, {\n      resumeFrom: options?.resumeFrom,\n      intervalInMs: options?.updateIntervalInMs\n    });\n  }\n\n  /**\n   * Shuts down the virtual machine, moves it to a new node, and powers it back on.\n   * @param resourceGroupName The name of the resource group.\n   * @param vmName The name of the virtual machine.\n   * @param options The options parameters.\n   */\n  async beginRedeployAndWait(\n    resourceGroupName: string,\n    vmName: string,\n    options?: VirtualMachinesRedeployOptionalParams\n  ): Promise<void> {\n    const poller = await this.beginRedeploy(resourceGroupName, vmName, options);\n    return poller.pollUntilDone();\n  }\n\n  /**\n   * Reimages the virtual machine which has an ephemeral OS disk back to its initial state.\n   * @param resourceGroupName The name of the resource group.\n   * @param vmName The name of the virtual machine.\n   * @param options The options parameters.\n   */\n  async beginReimage(\n    resourceGroupName: string,\n    vmName: string,\n    options?: VirtualMachinesReimageOptionalParams\n  ): Promise<PollerLike<PollOperationState<void>, void>> {\n    const directSendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ): Promise<void> => {\n      return this.client.sendOperationRequest(args, spec);\n    };\n    const sendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ) => {\n      let currentRawResponse:\n        | coreClient.FullOperationResponse\n        | undefined = undefined;\n      const providedCallback = args.options?.onResponse;\n      const callback: coreClient.RawResponseCallback = (\n        rawResponse: coreClient.FullOperationResponse,\n        flatResponse: unknown\n      ) => {\n        currentRawResponse = rawResponse;\n        providedCallback?.(rawResponse, flatResponse);\n      };\n      const updatedArgs = {\n        ...args,\n        options: {\n          ...args.options,\n          onResponse: callback\n        }\n      };\n      const flatResponse = await directSendOperation(updatedArgs, spec);\n      return {\n        flatResponse,\n        rawResponse: {\n          statusCode: currentRawResponse!.status,\n          body: currentRawResponse!.parsedBody,\n          headers: currentRawResponse!.headers.toJSON()\n        }\n      };\n    };\n\n    const lro = new LroImpl(\n      sendOperation,\n      { resourceGroupName, vmName, options },\n      reimageOperationSpec\n    );\n    return new LroEngine(lro, {\n      resumeFrom: options?.resumeFrom,\n      intervalInMs: options?.updateIntervalInMs\n    });\n  }\n\n  /**\n   * Reimages the virtual machine which has an ephemeral OS disk back to its initial state.\n   * @param resourceGroupName The name of the resource group.\n   * @param vmName The name of the virtual machine.\n   * @param options The options parameters.\n   */\n  async beginReimageAndWait(\n    resourceGroupName: string,\n    vmName: string,\n    options?: VirtualMachinesReimageOptionalParams\n  ): Promise<void> {\n    const poller = await this.beginReimage(resourceGroupName, vmName, options);\n    return poller.pollUntilDone();\n  }\n\n  /**\n   * The operation to retrieve SAS URIs for a virtual machine's boot diagnostic logs.\n   * @param resourceGroupName The name of the resource group.\n   * @param vmName The name of the virtual machine.\n   * @param options The options parameters.\n   */\n  retrieveBootDiagnosticsData(\n    resourceGroupName: string,\n    vmName: string,\n    options?: VirtualMachinesRetrieveBootDiagnosticsDataOptionalParams\n  ): Promise<VirtualMachinesRetrieveBootDiagnosticsDataResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, vmName, options },\n      retrieveBootDiagnosticsDataOperationSpec\n    );\n  }\n\n  /**\n   * The operation to perform maintenance on a virtual machine.\n   * @param resourceGroupName The name of the resource group.\n   * @param vmName The name of the virtual machine.\n   * @param options The options parameters.\n   */\n  async beginPerformMaintenance(\n    resourceGroupName: string,\n    vmName: string,\n    options?: VirtualMachinesPerformMaintenanceOptionalParams\n  ): Promise<PollerLike<PollOperationState<void>, void>> {\n    const directSendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ): Promise<void> => {\n      return this.client.sendOperationRequest(args, spec);\n    };\n    const sendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ) => {\n      let currentRawResponse:\n        | coreClient.FullOperationResponse\n        | undefined = undefined;\n      const providedCallback = args.options?.onResponse;\n      const callback: coreClient.RawResponseCallback = (\n        rawResponse: coreClient.FullOperationResponse,\n        flatResponse: unknown\n      ) => {\n        currentRawResponse = rawResponse;\n        providedCallback?.(rawResponse, flatResponse);\n      };\n      const updatedArgs = {\n        ...args,\n        options: {\n          ...args.options,\n          onResponse: callback\n        }\n      };\n      const flatResponse = await directSendOperation(updatedArgs, spec);\n      return {\n        flatResponse,\n        rawResponse: {\n          statusCode: currentRawResponse!.status,\n          body: currentRawResponse!.parsedBody,\n          headers: currentRawResponse!.headers.toJSON()\n        }\n      };\n    };\n\n    const lro = new LroImpl(\n      sendOperation,\n      { resourceGroupName, vmName, options },\n      performMaintenanceOperationSpec\n    );\n    return new LroEngine(lro, {\n      resumeFrom: options?.resumeFrom,\n      intervalInMs: options?.updateIntervalInMs\n    });\n  }\n\n  /**\n   * The operation to perform maintenance on a virtual machine.\n   * @param resourceGroupName The name of the resource group.\n   * @param vmName The name of the virtual machine.\n   * @param options The options parameters.\n   */\n  async beginPerformMaintenanceAndWait(\n    resourceGroupName: string,\n    vmName: string,\n    options?: VirtualMachinesPerformMaintenanceOptionalParams\n  ): Promise<void> {\n    const poller = await this.beginPerformMaintenance(\n      resourceGroupName,\n      vmName,\n      options\n    );\n    return poller.pollUntilDone();\n  }\n\n  /**\n   * The operation to simulate the eviction of spot virtual machine.\n   * @param resourceGroupName The name of the resource group.\n   * @param vmName The name of the virtual machine.\n   * @param options The options parameters.\n   */\n  simulateEviction(\n    resourceGroupName: string,\n    vmName: string,\n    options?: VirtualMachinesSimulateEvictionOptionalParams\n  ): Promise<void> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, vmName, options },\n      simulateEvictionOperationSpec\n    );\n  }\n\n  /**\n   * Assess patches on the VM.\n   * @param resourceGroupName The name of the resource group.\n   * @param vmName The name of the virtual machine.\n   * @param options The options parameters.\n   */\n  async beginAssessPatches(\n    resourceGroupName: string,\n    vmName: string,\n    options?: VirtualMachinesAssessPatchesOptionalParams\n  ): Promise<\n    PollerLike<\n      PollOperationState<VirtualMachinesAssessPatchesResponse>,\n      VirtualMachinesAssessPatchesResponse\n    >\n  > {\n    const directSendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ): Promise<VirtualMachinesAssessPatchesResponse> => {\n      return this.client.sendOperationRequest(args, spec);\n    };\n    const sendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ) => {\n      let currentRawResponse:\n        | coreClient.FullOperationResponse\n        | undefined = undefined;\n      const providedCallback = args.options?.onResponse;\n      const callback: coreClient.RawResponseCallback = (\n        rawResponse: coreClient.FullOperationResponse,\n        flatResponse: unknown\n      ) => {\n        currentRawResponse = rawResponse;\n        providedCallback?.(rawResponse, flatResponse);\n      };\n      const updatedArgs = {\n        ...args,\n        options: {\n          ...args.options,\n          onResponse: callback\n        }\n      };\n      const flatResponse = await directSendOperation(updatedArgs, spec);\n      return {\n        flatResponse,\n        rawResponse: {\n          statusCode: currentRawResponse!.status,\n          body: currentRawResponse!.parsedBody,\n          headers: currentRawResponse!.headers.toJSON()\n        }\n      };\n    };\n\n    const lro = new LroImpl(\n      sendOperation,\n      { resourceGroupName, vmName, options },\n      assessPatchesOperationSpec\n    );\n    return new LroEngine(lro, {\n      resumeFrom: options?.resumeFrom,\n      intervalInMs: options?.updateIntervalInMs,\n      lroResourceLocationConfig: \"location\"\n    });\n  }\n\n  /**\n   * Assess patches on the VM.\n   * @param resourceGroupName The name of the resource group.\n   * @param vmName The name of the virtual machine.\n   * @param options The options parameters.\n   */\n  async beginAssessPatchesAndWait(\n    resourceGroupName: string,\n    vmName: string,\n    options?: VirtualMachinesAssessPatchesOptionalParams\n  ): Promise<VirtualMachinesAssessPatchesResponse> {\n    const poller = await this.beginAssessPatches(\n      resourceGroupName,\n      vmName,\n      options\n    );\n    return poller.pollUntilDone();\n  }\n\n  /**\n   * Installs patches on the VM.\n   * @param resourceGroupName The name of the resource group.\n   * @param vmName The name of the virtual machine.\n   * @param installPatchesInput Input for InstallPatches as directly received by the API\n   * @param options The options parameters.\n   */\n  async beginInstallPatches(\n    resourceGroupName: string,\n    vmName: string,\n    installPatchesInput: VirtualMachineInstallPatchesParameters,\n    options?: VirtualMachinesInstallPatchesOptionalParams\n  ): Promise<\n    PollerLike<\n      PollOperationState<VirtualMachinesInstallPatchesResponse>,\n      VirtualMachinesInstallPatchesResponse\n    >\n  > {\n    const directSendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ): Promise<VirtualMachinesInstallPatchesResponse> => {\n      return this.client.sendOperationRequest(args, spec);\n    };\n    const sendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ) => {\n      let currentRawResponse:\n        | coreClient.FullOperationResponse\n        | undefined = undefined;\n      const providedCallback = args.options?.onResponse;\n      const callback: coreClient.RawResponseCallback = (\n        rawResponse: coreClient.FullOperationResponse,\n        flatResponse: unknown\n      ) => {\n        currentRawResponse = rawResponse;\n        providedCallback?.(rawResponse, flatResponse);\n      };\n      const updatedArgs = {\n        ...args,\n        options: {\n          ...args.options,\n          onResponse: callback\n        }\n      };\n      const flatResponse = await directSendOperation(updatedArgs, spec);\n      return {\n        flatResponse,\n        rawResponse: {\n          statusCode: currentRawResponse!.status,\n          body: currentRawResponse!.parsedBody,\n          headers: currentRawResponse!.headers.toJSON()\n        }\n      };\n    };\n\n    const lro = new LroImpl(\n      sendOperation,\n      { resourceGroupName, vmName, installPatchesInput, options },\n      installPatchesOperationSpec\n    );\n    return new LroEngine(lro, {\n      resumeFrom: options?.resumeFrom,\n      intervalInMs: options?.updateIntervalInMs,\n      lroResourceLocationConfig: \"location\"\n    });\n  }\n\n  /**\n   * Installs patches on the VM.\n   * @param resourceGroupName The name of the resource group.\n   * @param vmName The name of the virtual machine.\n   * @param installPatchesInput Input for InstallPatches as directly received by the API\n   * @param options The options parameters.\n   */\n  async beginInstallPatchesAndWait(\n    resourceGroupName: string,\n    vmName: string,\n    installPatchesInput: VirtualMachineInstallPatchesParameters,\n    options?: VirtualMachinesInstallPatchesOptionalParams\n  ): Promise<VirtualMachinesInstallPatchesResponse> {\n    const poller = await this.beginInstallPatches(\n      resourceGroupName,\n      vmName,\n      installPatchesInput,\n      options\n    );\n    return poller.pollUntilDone();\n  }\n\n  /**\n   * Run command on the VM.\n   * @param resourceGroupName The name of the resource group.\n   * @param vmName The name of the virtual machine.\n   * @param parameters Parameters supplied to the Run command operation.\n   * @param options The options parameters.\n   */\n  async beginRunCommand(\n    resourceGroupName: string,\n    vmName: string,\n    parameters: RunCommandInput,\n    options?: VirtualMachinesRunCommandOptionalParams\n  ): Promise<\n    PollerLike<\n      PollOperationState<VirtualMachinesRunCommandResponse>,\n      VirtualMachinesRunCommandResponse\n    >\n  > {\n    const directSendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ): Promise<VirtualMachinesRunCommandResponse> => {\n      return this.client.sendOperationRequest(args, spec);\n    };\n    const sendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ) => {\n      let currentRawResponse:\n        | coreClient.FullOperationResponse\n        | undefined = undefined;\n      const providedCallback = args.options?.onResponse;\n      const callback: coreClient.RawResponseCallback = (\n        rawResponse: coreClient.FullOperationResponse,\n        flatResponse: unknown\n      ) => {\n        currentRawResponse = rawResponse;\n        providedCallback?.(rawResponse, flatResponse);\n      };\n      const updatedArgs = {\n        ...args,\n        options: {\n          ...args.options,\n          onResponse: callback\n        }\n      };\n      const flatResponse = await directSendOperation(updatedArgs, spec);\n      return {\n        flatResponse,\n        rawResponse: {\n          statusCode: currentRawResponse!.status,\n          body: currentRawResponse!.parsedBody,\n          headers: currentRawResponse!.headers.toJSON()\n        }\n      };\n    };\n\n    const lro = new LroImpl(\n      sendOperation,\n      { resourceGroupName, vmName, parameters, options },\n      runCommandOperationSpec\n    );\n    return new LroEngine(lro, {\n      resumeFrom: options?.resumeFrom,\n      intervalInMs: options?.updateIntervalInMs,\n      lroResourceLocationConfig: \"location\"\n    });\n  }\n\n  /**\n   * Run command on the VM.\n   * @param resourceGroupName The name of the resource group.\n   * @param vmName The name of the virtual machine.\n   * @param parameters Parameters supplied to the Run command operation.\n   * @param options The options parameters.\n   */\n  async beginRunCommandAndWait(\n    resourceGroupName: string,\n    vmName: string,\n    parameters: RunCommandInput,\n    options?: VirtualMachinesRunCommandOptionalParams\n  ): Promise<VirtualMachinesRunCommandResponse> {\n    const poller = await this.beginRunCommand(\n      resourceGroupName,\n      vmName,\n      parameters,\n      options\n    );\n    return poller.pollUntilDone();\n  }\n\n  /**\n   * ListByLocationNext\n   * @param location The location for which virtual machines under the subscription are queried.\n   * @param nextLink The nextLink from the previous successful call to the ListByLocation method.\n   * @param options The options parameters.\n   */\n  private _listByLocationNext(\n    location: string,\n    nextLink: string,\n    options?: VirtualMachinesListByLocationNextOptionalParams\n  ): Promise<VirtualMachinesListByLocationNextResponse> {\n    return this.client.sendOperationRequest(\n      { location, nextLink, options },\n      listByLocationNextOperationSpec\n    );\n  }\n\n  /**\n   * ListNext\n   * @param resourceGroupName The name of the resource group.\n   * @param nextLink The nextLink from the previous successful call to the List method.\n   * @param options The options parameters.\n   */\n  private _listNext(\n    resourceGroupName: string,\n    nextLink: string,\n    options?: VirtualMachinesListNextOptionalParams\n  ): Promise<VirtualMachinesListNextResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, nextLink, options },\n      listNextOperationSpec\n    );\n  }\n\n  /**\n   * ListAllNext\n   * @param nextLink The nextLink from the previous successful call to the ListAll method.\n   * @param options The options parameters.\n   */\n  private _listAllNext(\n    nextLink: string,\n    options?: VirtualMachinesListAllNextOptionalParams\n  ): Promise<VirtualMachinesListAllNextResponse> {\n    return this.client.sendOperationRequest(\n      { nextLink, options },\n      listAllNextOperationSpec\n    );\n  }\n}\n// Operation Specifications\nconst serializer = coreClient.createSerializer(Mappers, /* isXml */ false);\n\nconst listByLocationOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/providers/Microsoft.Compute/locations/{location}/virtualMachines\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.VirtualMachineListResult\n    },\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.location1\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst captureOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/virtualMachines/{vmName}/capture\",\n  httpMethod: \"POST\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.VirtualMachineCaptureResult\n    },\n    201: {\n      bodyMapper: Mappers.VirtualMachineCaptureResult\n    },\n    202: {\n      bodyMapper: Mappers.VirtualMachineCaptureResult\n    },\n    204: {\n      bodyMapper: Mappers.VirtualMachineCaptureResult\n    },\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  requestBody: Parameters.parameters10,\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.resourceGroupName,\n    Parameters.subscriptionId,\n    Parameters.vmName\n  ],\n  headerParameters: [Parameters.accept, Parameters.contentType],\n  mediaType: \"json\",\n  serializer\n};\nconst createOrUpdateOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/virtualMachines/{vmName}\",\n  httpMethod: \"PUT\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.VirtualMachine\n    },\n    201: {\n      bodyMapper: Mappers.VirtualMachine\n    },\n    202: {\n      bodyMapper: Mappers.VirtualMachine\n    },\n    204: {\n      bodyMapper: Mappers.VirtualMachine\n    },\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  requestBody: Parameters.parameters11,\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.resourceGroupName,\n    Parameters.subscriptionId,\n    Parameters.vmName\n  ],\n  headerParameters: [Parameters.accept, Parameters.contentType],\n  mediaType: \"json\",\n  serializer\n};\nconst updateOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/virtualMachines/{vmName}\",\n  httpMethod: \"PATCH\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.VirtualMachine\n    },\n    201: {\n      bodyMapper: Mappers.VirtualMachine\n    },\n    202: {\n      bodyMapper: Mappers.VirtualMachine\n    },\n    204: {\n      bodyMapper: Mappers.VirtualMachine\n    },\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  requestBody: Parameters.parameters12,\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.resourceGroupName,\n    Parameters.subscriptionId,\n    Parameters.vmName\n  ],\n  headerParameters: [Parameters.accept, Parameters.contentType],\n  mediaType: \"json\",\n  serializer\n};\nconst deleteOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/virtualMachines/{vmName}\",\n  httpMethod: \"DELETE\",\n  responses: {\n    200: {},\n    201: {},\n    202: {},\n    204: {},\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  queryParameters: [Parameters.apiVersion, Parameters.forceDeletion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.resourceGroupName,\n    Parameters.subscriptionId,\n    Parameters.vmName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst getOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/virtualMachines/{vmName}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.VirtualMachine\n    },\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  queryParameters: [Parameters.apiVersion, Parameters.expand1],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.resourceGroupName,\n    Parameters.subscriptionId,\n    Parameters.vmName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst instanceViewOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/virtualMachines/{vmName}/instanceView\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.VirtualMachineInstanceView\n    },\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.resourceGroupName,\n    Parameters.subscriptionId,\n    Parameters.vmName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst convertToManagedDisksOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/virtualMachines/{vmName}/convertToManagedDisks\",\n  httpMethod: \"POST\",\n  responses: {\n    200: {},\n    201: {},\n    202: {},\n    204: {},\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.resourceGroupName,\n    Parameters.subscriptionId,\n    Parameters.vmName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst deallocateOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/virtualMachines/{vmName}/deallocate\",\n  httpMethod: \"POST\",\n  responses: {\n    200: {},\n    201: {},\n    202: {},\n    204: {},\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  queryParameters: [Parameters.apiVersion, Parameters.hibernate],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.resourceGroupName,\n    Parameters.subscriptionId,\n    Parameters.vmName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst generalizeOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/virtualMachines/{vmName}/generalize\",\n  httpMethod: \"POST\",\n  responses: {\n    200: {},\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.resourceGroupName,\n    Parameters.subscriptionId,\n    Parameters.vmName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst listOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/virtualMachines\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.VirtualMachineListResult\n    },\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  queryParameters: [Parameters.apiVersion, Parameters.filter],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.resourceGroupName,\n    Parameters.subscriptionId\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst listAllOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/providers/Microsoft.Compute/virtualMachines\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.VirtualMachineListResult\n    },\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  queryParameters: [\n    Parameters.apiVersion,\n    Parameters.filter,\n    Parameters.statusOnly\n  ],\n  urlParameters: [Parameters.$host, Parameters.subscriptionId],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst listAvailableSizesOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/virtualMachines/{vmName}/vmSizes\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.VirtualMachineSizeListResult\n    },\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.resourceGroupName,\n    Parameters.subscriptionId,\n    Parameters.vmName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst powerOffOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/virtualMachines/{vmName}/powerOff\",\n  httpMethod: \"POST\",\n  responses: {\n    200: {},\n    201: {},\n    202: {},\n    204: {},\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  queryParameters: [Parameters.apiVersion, Parameters.skipShutdown],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.resourceGroupName,\n    Parameters.subscriptionId,\n    Parameters.vmName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst reapplyOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/virtualMachines/{vmName}/reapply\",\n  httpMethod: \"POST\",\n  responses: {\n    200: {},\n    201: {},\n    202: {},\n    204: {},\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.resourceGroupName,\n    Parameters.subscriptionId,\n    Parameters.vmName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst restartOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/virtualMachines/{vmName}/restart\",\n  httpMethod: \"POST\",\n  responses: {\n    200: {},\n    201: {},\n    202: {},\n    204: {},\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.resourceGroupName,\n    Parameters.subscriptionId,\n    Parameters.vmName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst startOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/virtualMachines/{vmName}/start\",\n  httpMethod: \"POST\",\n  responses: {\n    200: {},\n    201: {},\n    202: {},\n    204: {},\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.resourceGroupName,\n    Parameters.subscriptionId,\n    Parameters.vmName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst redeployOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/virtualMachines/{vmName}/redeploy\",\n  httpMethod: \"POST\",\n  responses: {\n    200: {},\n    201: {},\n    202: {},\n    204: {},\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.resourceGroupName,\n    Parameters.subscriptionId,\n    Parameters.vmName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst reimageOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/virtualMachines/{vmName}/reimage\",\n  httpMethod: \"POST\",\n  responses: {\n    200: {},\n    201: {},\n    202: {},\n    204: {},\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  requestBody: Parameters.parameters13,\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.resourceGroupName,\n    Parameters.subscriptionId,\n    Parameters.vmName\n  ],\n  headerParameters: [Parameters.accept, Parameters.contentType],\n  mediaType: \"json\",\n  serializer\n};\nconst retrieveBootDiagnosticsDataOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/virtualMachines/{vmName}/retrieveBootDiagnosticsData\",\n  httpMethod: \"POST\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.RetrieveBootDiagnosticsDataResult\n    },\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  queryParameters: [\n    Parameters.apiVersion,\n    Parameters.sasUriExpirationTimeInMinutes\n  ],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.resourceGroupName,\n    Parameters.subscriptionId,\n    Parameters.vmName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst performMaintenanceOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/virtualMachines/{vmName}/performMaintenance\",\n  httpMethod: \"POST\",\n  responses: {\n    200: {},\n    201: {},\n    202: {},\n    204: {},\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.resourceGroupName,\n    Parameters.subscriptionId,\n    Parameters.vmName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst simulateEvictionOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/virtualMachines/{vmName}/simulateEviction\",\n  httpMethod: \"POST\",\n  responses: {\n    204: {},\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.resourceGroupName,\n    Parameters.subscriptionId,\n    Parameters.vmName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst assessPatchesOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/virtualMachines/{vmName}/assessPatches\",\n  httpMethod: \"POST\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.VirtualMachineAssessPatchesResult\n    },\n    201: {\n      bodyMapper: Mappers.VirtualMachineAssessPatchesResult\n    },\n    202: {\n      bodyMapper: Mappers.VirtualMachineAssessPatchesResult\n    },\n    204: {\n      bodyMapper: Mappers.VirtualMachineAssessPatchesResult\n    },\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.resourceGroupName,\n    Parameters.subscriptionId,\n    Parameters.vmName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst installPatchesOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/virtualMachines/{vmName}/installPatches\",\n  httpMethod: \"POST\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.VirtualMachineInstallPatchesResult\n    },\n    201: {\n      bodyMapper: Mappers.VirtualMachineInstallPatchesResult\n    },\n    202: {\n      bodyMapper: Mappers.VirtualMachineInstallPatchesResult\n    },\n    204: {\n      bodyMapper: Mappers.VirtualMachineInstallPatchesResult\n    },\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  requestBody: Parameters.installPatchesInput,\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.resourceGroupName,\n    Parameters.subscriptionId,\n    Parameters.vmName\n  ],\n  headerParameters: [Parameters.accept, Parameters.contentType],\n  mediaType: \"json\",\n  serializer\n};\nconst runCommandOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/virtualMachines/{vmName}/runCommand\",\n  httpMethod: \"POST\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.RunCommandResult\n    },\n    201: {\n      bodyMapper: Mappers.RunCommandResult\n    },\n    202: {\n      bodyMapper: Mappers.RunCommandResult\n    },\n    204: {\n      bodyMapper: Mappers.RunCommandResult\n    }\n  },\n  requestBody: Parameters.parameters14,\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.resourceGroupName,\n    Parameters.subscriptionId,\n    Parameters.vmName\n  ],\n  headerParameters: [Parameters.contentType, Parameters.accept1],\n  mediaType: \"json\",\n  serializer\n};\nconst listByLocationNextOperationSpec: coreClient.OperationSpec = {\n  path: \"{nextLink}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.VirtualMachineListResult\n    },\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.nextLink,\n    Parameters.location1\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst listNextOperationSpec: coreClient.OperationSpec = {\n  path: \"{nextLink}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.VirtualMachineListResult\n    },\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  queryParameters: [Parameters.apiVersion, Parameters.filter],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.resourceGroupName,\n    Parameters.subscriptionId,\n    Parameters.nextLink\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst listAllNextOperationSpec: coreClient.OperationSpec = {\n  path: \"{nextLink}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.VirtualMachineListResult\n    },\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  queryParameters: [\n    Parameters.apiVersion,\n    Parameters.filter,\n    Parameters.statusOnly\n  ],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.nextLink\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport { PagedAsyncIterableIterator } from \"@azure/core-paging\";\nimport { VirtualMachineScaleSets } from \"../operationsInterfaces\";\nimport * as coreClient from \"@azure/core-client\";\nimport * as Mappers from \"../models/mappers\";\nimport * as Parameters from \"../models/parameters\";\nimport { ComputeManagementClient } from \"../computeManagementClient\";\nimport { PollerLike, PollOperationState, LroEngine } from \"@azure/core-lro\";\nimport { LroImpl } from \"../lroImpl\";\nimport {\n  VirtualMachineScaleSet,\n  VirtualMachineScaleSetsListByLocationNextOptionalParams,\n  VirtualMachineScaleSetsListByLocationOptionalParams,\n  VirtualMachineScaleSetsListNextOptionalParams,\n  VirtualMachineScaleSetsListOptionalParams,\n  VirtualMachineScaleSetsListAllNextOptionalParams,\n  VirtualMachineScaleSetsListAllOptionalParams,\n  VirtualMachineScaleSetSku,\n  VirtualMachineScaleSetsListSkusNextOptionalParams,\n  VirtualMachineScaleSetsListSkusOptionalParams,\n  UpgradeOperationHistoricalStatusInfo,\n  VirtualMachineScaleSetsGetOSUpgradeHistoryNextOptionalParams,\n  VirtualMachineScaleSetsGetOSUpgradeHistoryOptionalParams,\n  VirtualMachineScaleSetsListByLocationResponse,\n  VirtualMachineScaleSetsCreateOrUpdateOptionalParams,\n  VirtualMachineScaleSetsCreateOrUpdateResponse,\n  VirtualMachineScaleSetUpdate,\n  VirtualMachineScaleSetsUpdateOptionalParams,\n  VirtualMachineScaleSetsUpdateResponse,\n  VirtualMachineScaleSetsDeleteOptionalParams,\n  VirtualMachineScaleSetsGetOptionalParams,\n  VirtualMachineScaleSetsGetResponse,\n  VirtualMachineScaleSetsDeallocateOptionalParams,\n  VirtualMachineScaleSetVMInstanceRequiredIDs,\n  VirtualMachineScaleSetsDeleteInstancesOptionalParams,\n  VirtualMachineScaleSetsGetInstanceViewOptionalParams,\n  VirtualMachineScaleSetsGetInstanceViewResponse,\n  VirtualMachineScaleSetsListResponse,\n  VirtualMachineScaleSetsListAllResponse,\n  VirtualMachineScaleSetsListSkusResponse,\n  VirtualMachineScaleSetsGetOSUpgradeHistoryResponse,\n  VirtualMachineScaleSetsPowerOffOptionalParams,\n  VirtualMachineScaleSetsRestartOptionalParams,\n  VirtualMachineScaleSetsStartOptionalParams,\n  VirtualMachineScaleSetsRedeployOptionalParams,\n  VirtualMachineScaleSetsPerformMaintenanceOptionalParams,\n  VirtualMachineScaleSetsUpdateInstancesOptionalParams,\n  VirtualMachineScaleSetsReimageOptionalParams,\n  VirtualMachineScaleSetsReimageAllOptionalParams,\n  VirtualMachineScaleSetsForceRecoveryServiceFabricPlatformUpdateDomainWalkOptionalParams,\n  VirtualMachineScaleSetsForceRecoveryServiceFabricPlatformUpdateDomainWalkResponse,\n  VMScaleSetConvertToSinglePlacementGroupInput,\n  VirtualMachineScaleSetsConvertToSinglePlacementGroupOptionalParams,\n  OrchestrationServiceStateInput,\n  VirtualMachineScaleSetsSetOrchestrationServiceStateOptionalParams,\n  VirtualMachineScaleSetsListByLocationNextResponse,\n  VirtualMachineScaleSetsListNextResponse,\n  VirtualMachineScaleSetsListAllNextResponse,\n  VirtualMachineScaleSetsListSkusNextResponse,\n  VirtualMachineScaleSetsGetOSUpgradeHistoryNextResponse\n} from \"../models\";\n\n/// <reference lib=\"esnext.asynciterable\" />\n/** Class containing VirtualMachineScaleSets operations. */\nexport class VirtualMachineScaleSetsImpl implements VirtualMachineScaleSets {\n  private readonly client: ComputeManagementClient;\n\n  /**\n   * Initialize a new instance of the class VirtualMachineScaleSets class.\n   * @param client Reference to the service client\n   */\n  constructor(client: ComputeManagementClient) {\n    this.client = client;\n  }\n\n  /**\n   * Gets all the VM scale sets under the specified subscription for the specified location.\n   * @param location The location for which VM scale sets under the subscription are queried.\n   * @param options The options parameters.\n   */\n  public listByLocation(\n    location: string,\n    options?: VirtualMachineScaleSetsListByLocationOptionalParams\n  ): PagedAsyncIterableIterator<VirtualMachineScaleSet> {\n    const iter = this.listByLocationPagingAll(location, options);\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: () => {\n        return this.listByLocationPagingPage(location, options);\n      }\n    };\n  }\n\n  private async *listByLocationPagingPage(\n    location: string,\n    options?: VirtualMachineScaleSetsListByLocationOptionalParams\n  ): AsyncIterableIterator<VirtualMachineScaleSet[]> {\n    let result = await this._listByLocation(location, options);\n    yield result.value || [];\n    let continuationToken = result.nextLink;\n    while (continuationToken) {\n      result = await this._listByLocationNext(\n        location,\n        continuationToken,\n        options\n      );\n      continuationToken = result.nextLink;\n      yield result.value || [];\n    }\n  }\n\n  private async *listByLocationPagingAll(\n    location: string,\n    options?: VirtualMachineScaleSetsListByLocationOptionalParams\n  ): AsyncIterableIterator<VirtualMachineScaleSet> {\n    for await (const page of this.listByLocationPagingPage(location, options)) {\n      yield* page;\n    }\n  }\n\n  /**\n   * Gets a list of all VM scale sets under a resource group.\n   * @param resourceGroupName The name of the resource group.\n   * @param options The options parameters.\n   */\n  public list(\n    resourceGroupName: string,\n    options?: VirtualMachineScaleSetsListOptionalParams\n  ): PagedAsyncIterableIterator<VirtualMachineScaleSet> {\n    const iter = this.listPagingAll(resourceGroupName, options);\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: () => {\n        return this.listPagingPage(resourceGroupName, options);\n      }\n    };\n  }\n\n  private async *listPagingPage(\n    resourceGroupName: string,\n    options?: VirtualMachineScaleSetsListOptionalParams\n  ): AsyncIterableIterator<VirtualMachineScaleSet[]> {\n    let result = await this._list(resourceGroupName, options);\n    yield result.value || [];\n    let continuationToken = result.nextLink;\n    while (continuationToken) {\n      result = await this._listNext(\n        resourceGroupName,\n        continuationToken,\n        options\n      );\n      continuationToken = result.nextLink;\n      yield result.value || [];\n    }\n  }\n\n  private async *listPagingAll(\n    resourceGroupName: string,\n    options?: VirtualMachineScaleSetsListOptionalParams\n  ): AsyncIterableIterator<VirtualMachineScaleSet> {\n    for await (const page of this.listPagingPage(resourceGroupName, options)) {\n      yield* page;\n    }\n  }\n\n  /**\n   * Gets a list of all VM Scale Sets in the subscription, regardless of the associated resource group.\n   * Use nextLink property in the response to get the next page of VM Scale Sets. Do this till nextLink\n   * is null to fetch all the VM Scale Sets.\n   * @param options The options parameters.\n   */\n  public listAll(\n    options?: VirtualMachineScaleSetsListAllOptionalParams\n  ): PagedAsyncIterableIterator<VirtualMachineScaleSet> {\n    const iter = this.listAllPagingAll(options);\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: () => {\n        return this.listAllPagingPage(options);\n      }\n    };\n  }\n\n  private async *listAllPagingPage(\n    options?: VirtualMachineScaleSetsListAllOptionalParams\n  ): AsyncIterableIterator<VirtualMachineScaleSet[]> {\n    let result = await this._listAll(options);\n    yield result.value || [];\n    let continuationToken = result.nextLink;\n    while (continuationToken) {\n      result = await this._listAllNext(continuationToken, options);\n      continuationToken = result.nextLink;\n      yield result.value || [];\n    }\n  }\n\n  private async *listAllPagingAll(\n    options?: VirtualMachineScaleSetsListAllOptionalParams\n  ): AsyncIterableIterator<VirtualMachineScaleSet> {\n    for await (const page of this.listAllPagingPage(options)) {\n      yield* page;\n    }\n  }\n\n  /**\n   * Gets a list of SKUs available for your VM scale set, including the minimum and maximum VM instances\n   * allowed for each SKU.\n   * @param resourceGroupName The name of the resource group.\n   * @param vmScaleSetName The name of the VM scale set.\n   * @param options The options parameters.\n   */\n  public listSkus(\n    resourceGroupName: string,\n    vmScaleSetName: string,\n    options?: VirtualMachineScaleSetsListSkusOptionalParams\n  ): PagedAsyncIterableIterator<VirtualMachineScaleSetSku> {\n    const iter = this.listSkusPagingAll(\n      resourceGroupName,\n      vmScaleSetName,\n      options\n    );\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: () => {\n        return this.listSkusPagingPage(\n          resourceGroupName,\n          vmScaleSetName,\n          options\n        );\n      }\n    };\n  }\n\n  private async *listSkusPagingPage(\n    resourceGroupName: string,\n    vmScaleSetName: string,\n    options?: VirtualMachineScaleSetsListSkusOptionalParams\n  ): AsyncIterableIterator<VirtualMachineScaleSetSku[]> {\n    let result = await this._listSkus(\n      resourceGroupName,\n      vmScaleSetName,\n      options\n    );\n    yield result.value || [];\n    let continuationToken = result.nextLink;\n    while (continuationToken) {\n      result = await this._listSkusNext(\n        resourceGroupName,\n        vmScaleSetName,\n        continuationToken,\n        options\n      );\n      continuationToken = result.nextLink;\n      yield result.value || [];\n    }\n  }\n\n  private async *listSkusPagingAll(\n    resourceGroupName: string,\n    vmScaleSetName: string,\n    options?: VirtualMachineScaleSetsListSkusOptionalParams\n  ): AsyncIterableIterator<VirtualMachineScaleSetSku> {\n    for await (const page of this.listSkusPagingPage(\n      resourceGroupName,\n      vmScaleSetName,\n      options\n    )) {\n      yield* page;\n    }\n  }\n\n  /**\n   * Gets list of OS upgrades on a VM scale set instance.\n   * @param resourceGroupName The name of the resource group.\n   * @param vmScaleSetName The name of the VM scale set.\n   * @param options The options parameters.\n   */\n  public listOSUpgradeHistory(\n    resourceGroupName: string,\n    vmScaleSetName: string,\n    options?: VirtualMachineScaleSetsGetOSUpgradeHistoryOptionalParams\n  ): PagedAsyncIterableIterator<UpgradeOperationHistoricalStatusInfo> {\n    const iter = this.getOSUpgradeHistoryPagingAll(\n      resourceGroupName,\n      vmScaleSetName,\n      options\n    );\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: () => {\n        return this.getOSUpgradeHistoryPagingPage(\n          resourceGroupName,\n          vmScaleSetName,\n          options\n        );\n      }\n    };\n  }\n\n  private async *getOSUpgradeHistoryPagingPage(\n    resourceGroupName: string,\n    vmScaleSetName: string,\n    options?: VirtualMachineScaleSetsGetOSUpgradeHistoryOptionalParams\n  ): AsyncIterableIterator<UpgradeOperationHistoricalStatusInfo[]> {\n    let result = await this._getOSUpgradeHistory(\n      resourceGroupName,\n      vmScaleSetName,\n      options\n    );\n    yield result.value || [];\n    let continuationToken = result.nextLink;\n    while (continuationToken) {\n      result = await this._getOSUpgradeHistoryNext(\n        resourceGroupName,\n        vmScaleSetName,\n        continuationToken,\n        options\n      );\n      continuationToken = result.nextLink;\n      yield result.value || [];\n    }\n  }\n\n  private async *getOSUpgradeHistoryPagingAll(\n    resourceGroupName: string,\n    vmScaleSetName: string,\n    options?: VirtualMachineScaleSetsGetOSUpgradeHistoryOptionalParams\n  ): AsyncIterableIterator<UpgradeOperationHistoricalStatusInfo> {\n    for await (const page of this.getOSUpgradeHistoryPagingPage(\n      resourceGroupName,\n      vmScaleSetName,\n      options\n    )) {\n      yield* page;\n    }\n  }\n\n  /**\n   * Gets all the VM scale sets under the specified subscription for the specified location.\n   * @param location The location for which VM scale sets under the subscription are queried.\n   * @param options The options parameters.\n   */\n  private _listByLocation(\n    location: string,\n    options?: VirtualMachineScaleSetsListByLocationOptionalParams\n  ): Promise<VirtualMachineScaleSetsListByLocationResponse> {\n    return this.client.sendOperationRequest(\n      { location, options },\n      listByLocationOperationSpec\n    );\n  }\n\n  /**\n   * Create or update a VM scale set.\n   * @param resourceGroupName The name of the resource group.\n   * @param vmScaleSetName The name of the VM scale set to create or update.\n   * @param parameters The scale set object.\n   * @param options The options parameters.\n   */\n  async beginCreateOrUpdate(\n    resourceGroupName: string,\n    vmScaleSetName: string,\n    parameters: VirtualMachineScaleSet,\n    options?: VirtualMachineScaleSetsCreateOrUpdateOptionalParams\n  ): Promise<\n    PollerLike<\n      PollOperationState<VirtualMachineScaleSetsCreateOrUpdateResponse>,\n      VirtualMachineScaleSetsCreateOrUpdateResponse\n    >\n  > {\n    const directSendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ): Promise<VirtualMachineScaleSetsCreateOrUpdateResponse> => {\n      return this.client.sendOperationRequest(args, spec);\n    };\n    const sendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ) => {\n      let currentRawResponse:\n        | coreClient.FullOperationResponse\n        | undefined = undefined;\n      const providedCallback = args.options?.onResponse;\n      const callback: coreClient.RawResponseCallback = (\n        rawResponse: coreClient.FullOperationResponse,\n        flatResponse: unknown\n      ) => {\n        currentRawResponse = rawResponse;\n        providedCallback?.(rawResponse, flatResponse);\n      };\n      const updatedArgs = {\n        ...args,\n        options: {\n          ...args.options,\n          onResponse: callback\n        }\n      };\n      const flatResponse = await directSendOperation(updatedArgs, spec);\n      return {\n        flatResponse,\n        rawResponse: {\n          statusCode: currentRawResponse!.status,\n          body: currentRawResponse!.parsedBody,\n          headers: currentRawResponse!.headers.toJSON()\n        }\n      };\n    };\n\n    const lro = new LroImpl(\n      sendOperation,\n      { resourceGroupName, vmScaleSetName, parameters, options },\n      createOrUpdateOperationSpec\n    );\n    return new LroEngine(lro, {\n      resumeFrom: options?.resumeFrom,\n      intervalInMs: options?.updateIntervalInMs\n    });\n  }\n\n  /**\n   * Create or update a VM scale set.\n   * @param resourceGroupName The name of the resource group.\n   * @param vmScaleSetName The name of the VM scale set to create or update.\n   * @param parameters The scale set object.\n   * @param options The options parameters.\n   */\n  async beginCreateOrUpdateAndWait(\n    resourceGroupName: string,\n    vmScaleSetName: string,\n    parameters: VirtualMachineScaleSet,\n    options?: VirtualMachineScaleSetsCreateOrUpdateOptionalParams\n  ): Promise<VirtualMachineScaleSetsCreateOrUpdateResponse> {\n    const poller = await this.beginCreateOrUpdate(\n      resourceGroupName,\n      vmScaleSetName,\n      parameters,\n      options\n    );\n    return poller.pollUntilDone();\n  }\n\n  /**\n   * Update a VM scale set.\n   * @param resourceGroupName The name of the resource group.\n   * @param vmScaleSetName The name of the VM scale set to create or update.\n   * @param parameters The scale set object.\n   * @param options The options parameters.\n   */\n  async beginUpdate(\n    resourceGroupName: string,\n    vmScaleSetName: string,\n    parameters: VirtualMachineScaleSetUpdate,\n    options?: VirtualMachineScaleSetsUpdateOptionalParams\n  ): Promise<\n    PollerLike<\n      PollOperationState<VirtualMachineScaleSetsUpdateResponse>,\n      VirtualMachineScaleSetsUpdateResponse\n    >\n  > {\n    const directSendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ): Promise<VirtualMachineScaleSetsUpdateResponse> => {\n      return this.client.sendOperationRequest(args, spec);\n    };\n    const sendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ) => {\n      let currentRawResponse:\n        | coreClient.FullOperationResponse\n        | undefined = undefined;\n      const providedCallback = args.options?.onResponse;\n      const callback: coreClient.RawResponseCallback = (\n        rawResponse: coreClient.FullOperationResponse,\n        flatResponse: unknown\n      ) => {\n        currentRawResponse = rawResponse;\n        providedCallback?.(rawResponse, flatResponse);\n      };\n      const updatedArgs = {\n        ...args,\n        options: {\n          ...args.options,\n          onResponse: callback\n        }\n      };\n      const flatResponse = await directSendOperation(updatedArgs, spec);\n      return {\n        flatResponse,\n        rawResponse: {\n          statusCode: currentRawResponse!.status,\n          body: currentRawResponse!.parsedBody,\n          headers: currentRawResponse!.headers.toJSON()\n        }\n      };\n    };\n\n    const lro = new LroImpl(\n      sendOperation,\n      { resourceGroupName, vmScaleSetName, parameters, options },\n      updateOperationSpec\n    );\n    return new LroEngine(lro, {\n      resumeFrom: options?.resumeFrom,\n      intervalInMs: options?.updateIntervalInMs\n    });\n  }\n\n  /**\n   * Update a VM scale set.\n   * @param resourceGroupName The name of the resource group.\n   * @param vmScaleSetName The name of the VM scale set to create or update.\n   * @param parameters The scale set object.\n   * @param options The options parameters.\n   */\n  async beginUpdateAndWait(\n    resourceGroupName: string,\n    vmScaleSetName: string,\n    parameters: VirtualMachineScaleSetUpdate,\n    options?: VirtualMachineScaleSetsUpdateOptionalParams\n  ): Promise<VirtualMachineScaleSetsUpdateResponse> {\n    const poller = await this.beginUpdate(\n      resourceGroupName,\n      vmScaleSetName,\n      parameters,\n      options\n    );\n    return poller.pollUntilDone();\n  }\n\n  /**\n   * Deletes a VM scale set.\n   * @param resourceGroupName The name of the resource group.\n   * @param vmScaleSetName The name of the VM scale set.\n   * @param options The options parameters.\n   */\n  async beginDelete(\n    resourceGroupName: string,\n    vmScaleSetName: string,\n    options?: VirtualMachineScaleSetsDeleteOptionalParams\n  ): Promise<PollerLike<PollOperationState<void>, void>> {\n    const directSendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ): Promise<void> => {\n      return this.client.sendOperationRequest(args, spec);\n    };\n    const sendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ) => {\n      let currentRawResponse:\n        | coreClient.FullOperationResponse\n        | undefined = undefined;\n      const providedCallback = args.options?.onResponse;\n      const callback: coreClient.RawResponseCallback = (\n        rawResponse: coreClient.FullOperationResponse,\n        flatResponse: unknown\n      ) => {\n        currentRawResponse = rawResponse;\n        providedCallback?.(rawResponse, flatResponse);\n      };\n      const updatedArgs = {\n        ...args,\n        options: {\n          ...args.options,\n          onResponse: callback\n        }\n      };\n      const flatResponse = await directSendOperation(updatedArgs, spec);\n      return {\n        flatResponse,\n        rawResponse: {\n          statusCode: currentRawResponse!.status,\n          body: currentRawResponse!.parsedBody,\n          headers: currentRawResponse!.headers.toJSON()\n        }\n      };\n    };\n\n    const lro = new LroImpl(\n      sendOperation,\n      { resourceGroupName, vmScaleSetName, options },\n      deleteOperationSpec\n    );\n    return new LroEngine(lro, {\n      resumeFrom: options?.resumeFrom,\n      intervalInMs: options?.updateIntervalInMs\n    });\n  }\n\n  /**\n   * Deletes a VM scale set.\n   * @param resourceGroupName The name of the resource group.\n   * @param vmScaleSetName The name of the VM scale set.\n   * @param options The options parameters.\n   */\n  async beginDeleteAndWait(\n    resourceGroupName: string,\n    vmScaleSetName: string,\n    options?: VirtualMachineScaleSetsDeleteOptionalParams\n  ): Promise<void> {\n    const poller = await this.beginDelete(\n      resourceGroupName,\n      vmScaleSetName,\n      options\n    );\n    return poller.pollUntilDone();\n  }\n\n  /**\n   * Display information about a virtual machine scale set.\n   * @param resourceGroupName The name of the resource group.\n   * @param vmScaleSetName The name of the VM scale set.\n   * @param options The options parameters.\n   */\n  get(\n    resourceGroupName: string,\n    vmScaleSetName: string,\n    options?: VirtualMachineScaleSetsGetOptionalParams\n  ): Promise<VirtualMachineScaleSetsGetResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, vmScaleSetName, options },\n      getOperationSpec\n    );\n  }\n\n  /**\n   * Deallocates specific virtual machines in a VM scale set. Shuts down the virtual machines and\n   * releases the compute resources. You are not billed for the compute resources that this virtual\n   * machine scale set deallocates.\n   * @param resourceGroupName The name of the resource group.\n   * @param vmScaleSetName The name of the VM scale set.\n   * @param options The options parameters.\n   */\n  async beginDeallocate(\n    resourceGroupName: string,\n    vmScaleSetName: string,\n    options?: VirtualMachineScaleSetsDeallocateOptionalParams\n  ): Promise<PollerLike<PollOperationState<void>, void>> {\n    const directSendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ): Promise<void> => {\n      return this.client.sendOperationRequest(args, spec);\n    };\n    const sendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ) => {\n      let currentRawResponse:\n        | coreClient.FullOperationResponse\n        | undefined = undefined;\n      const providedCallback = args.options?.onResponse;\n      const callback: coreClient.RawResponseCallback = (\n        rawResponse: coreClient.FullOperationResponse,\n        flatResponse: unknown\n      ) => {\n        currentRawResponse = rawResponse;\n        providedCallback?.(rawResponse, flatResponse);\n      };\n      const updatedArgs = {\n        ...args,\n        options: {\n          ...args.options,\n          onResponse: callback\n        }\n      };\n      const flatResponse = await directSendOperation(updatedArgs, spec);\n      return {\n        flatResponse,\n        rawResponse: {\n          statusCode: currentRawResponse!.status,\n          body: currentRawResponse!.parsedBody,\n          headers: currentRawResponse!.headers.toJSON()\n        }\n      };\n    };\n\n    const lro = new LroImpl(\n      sendOperation,\n      { resourceGroupName, vmScaleSetName, options },\n      deallocateOperationSpec\n    );\n    return new LroEngine(lro, {\n      resumeFrom: options?.resumeFrom,\n      intervalInMs: options?.updateIntervalInMs\n    });\n  }\n\n  /**\n   * Deallocates specific virtual machines in a VM scale set. Shuts down the virtual machines and\n   * releases the compute resources. You are not billed for the compute resources that this virtual\n   * machine scale set deallocates.\n   * @param resourceGroupName The name of the resource group.\n   * @param vmScaleSetName The name of the VM scale set.\n   * @param options The options parameters.\n   */\n  async beginDeallocateAndWait(\n    resourceGroupName: string,\n    vmScaleSetName: string,\n    options?: VirtualMachineScaleSetsDeallocateOptionalParams\n  ): Promise<void> {\n    const poller = await this.beginDeallocate(\n      resourceGroupName,\n      vmScaleSetName,\n      options\n    );\n    return poller.pollUntilDone();\n  }\n\n  /**\n   * Deletes virtual machines in a VM scale set.\n   * @param resourceGroupName The name of the resource group.\n   * @param vmScaleSetName The name of the VM scale set.\n   * @param vmInstanceIDs A list of virtual machine instance IDs from the VM scale set.\n   * @param options The options parameters.\n   */\n  async beginDeleteInstances(\n    resourceGroupName: string,\n    vmScaleSetName: string,\n    vmInstanceIDs: VirtualMachineScaleSetVMInstanceRequiredIDs,\n    options?: VirtualMachineScaleSetsDeleteInstancesOptionalParams\n  ): Promise<PollerLike<PollOperationState<void>, void>> {\n    const directSendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ): Promise<void> => {\n      return this.client.sendOperationRequest(args, spec);\n    };\n    const sendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ) => {\n      let currentRawResponse:\n        | coreClient.FullOperationResponse\n        | undefined = undefined;\n      const providedCallback = args.options?.onResponse;\n      const callback: coreClient.RawResponseCallback = (\n        rawResponse: coreClient.FullOperationResponse,\n        flatResponse: unknown\n      ) => {\n        currentRawResponse = rawResponse;\n        providedCallback?.(rawResponse, flatResponse);\n      };\n      const updatedArgs = {\n        ...args,\n        options: {\n          ...args.options,\n          onResponse: callback\n        }\n      };\n      const flatResponse = await directSendOperation(updatedArgs, spec);\n      return {\n        flatResponse,\n        rawResponse: {\n          statusCode: currentRawResponse!.status,\n          body: currentRawResponse!.parsedBody,\n          headers: currentRawResponse!.headers.toJSON()\n        }\n      };\n    };\n\n    const lro = new LroImpl(\n      sendOperation,\n      { resourceGroupName, vmScaleSetName, vmInstanceIDs, options },\n      deleteInstancesOperationSpec\n    );\n    return new LroEngine(lro, {\n      resumeFrom: options?.resumeFrom,\n      intervalInMs: options?.updateIntervalInMs\n    });\n  }\n\n  /**\n   * Deletes virtual machines in a VM scale set.\n   * @param resourceGroupName The name of the resource group.\n   * @param vmScaleSetName The name of the VM scale set.\n   * @param vmInstanceIDs A list of virtual machine instance IDs from the VM scale set.\n   * @param options The options parameters.\n   */\n  async beginDeleteInstancesAndWait(\n    resourceGroupName: string,\n    vmScaleSetName: string,\n    vmInstanceIDs: VirtualMachineScaleSetVMInstanceRequiredIDs,\n    options?: VirtualMachineScaleSetsDeleteInstancesOptionalParams\n  ): Promise<void> {\n    const poller = await this.beginDeleteInstances(\n      resourceGroupName,\n      vmScaleSetName,\n      vmInstanceIDs,\n      options\n    );\n    return poller.pollUntilDone();\n  }\n\n  /**\n   * Gets the status of a VM scale set instance.\n   * @param resourceGroupName The name of the resource group.\n   * @param vmScaleSetName The name of the VM scale set.\n   * @param options The options parameters.\n   */\n  getInstanceView(\n    resourceGroupName: string,\n    vmScaleSetName: string,\n    options?: VirtualMachineScaleSetsGetInstanceViewOptionalParams\n  ): Promise<VirtualMachineScaleSetsGetInstanceViewResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, vmScaleSetName, options },\n      getInstanceViewOperationSpec\n    );\n  }\n\n  /**\n   * Gets a list of all VM scale sets under a resource group.\n   * @param resourceGroupName The name of the resource group.\n   * @param options The options parameters.\n   */\n  private _list(\n    resourceGroupName: string,\n    options?: VirtualMachineScaleSetsListOptionalParams\n  ): Promise<VirtualMachineScaleSetsListResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, options },\n      listOperationSpec\n    );\n  }\n\n  /**\n   * Gets a list of all VM Scale Sets in the subscription, regardless of the associated resource group.\n   * Use nextLink property in the response to get the next page of VM Scale Sets. Do this till nextLink\n   * is null to fetch all the VM Scale Sets.\n   * @param options The options parameters.\n   */\n  private _listAll(\n    options?: VirtualMachineScaleSetsListAllOptionalParams\n  ): Promise<VirtualMachineScaleSetsListAllResponse> {\n    return this.client.sendOperationRequest({ options }, listAllOperationSpec);\n  }\n\n  /**\n   * Gets a list of SKUs available for your VM scale set, including the minimum and maximum VM instances\n   * allowed for each SKU.\n   * @param resourceGroupName The name of the resource group.\n   * @param vmScaleSetName The name of the VM scale set.\n   * @param options The options parameters.\n   */\n  private _listSkus(\n    resourceGroupName: string,\n    vmScaleSetName: string,\n    options?: VirtualMachineScaleSetsListSkusOptionalParams\n  ): Promise<VirtualMachineScaleSetsListSkusResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, vmScaleSetName, options },\n      listSkusOperationSpec\n    );\n  }\n\n  /**\n   * Gets list of OS upgrades on a VM scale set instance.\n   * @param resourceGroupName The name of the resource group.\n   * @param vmScaleSetName The name of the VM scale set.\n   * @param options The options parameters.\n   */\n  private _getOSUpgradeHistory(\n    resourceGroupName: string,\n    vmScaleSetName: string,\n    options?: VirtualMachineScaleSetsGetOSUpgradeHistoryOptionalParams\n  ): Promise<VirtualMachineScaleSetsGetOSUpgradeHistoryResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, vmScaleSetName, options },\n      getOSUpgradeHistoryOperationSpec\n    );\n  }\n\n  /**\n   * Power off (stop) one or more virtual machines in a VM scale set. Note that resources are still\n   * attached and you are getting charged for the resources. Instead, use deallocate to release resources\n   * and avoid charges.\n   * @param resourceGroupName The name of the resource group.\n   * @param vmScaleSetName The name of the VM scale set.\n   * @param options The options parameters.\n   */\n  async beginPowerOff(\n    resourceGroupName: string,\n    vmScaleSetName: string,\n    options?: VirtualMachineScaleSetsPowerOffOptionalParams\n  ): Promise<PollerLike<PollOperationState<void>, void>> {\n    const directSendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ): Promise<void> => {\n      return this.client.sendOperationRequest(args, spec);\n    };\n    const sendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ) => {\n      let currentRawResponse:\n        | coreClient.FullOperationResponse\n        | undefined = undefined;\n      const providedCallback = args.options?.onResponse;\n      const callback: coreClient.RawResponseCallback = (\n        rawResponse: coreClient.FullOperationResponse,\n        flatResponse: unknown\n      ) => {\n        currentRawResponse = rawResponse;\n        providedCallback?.(rawResponse, flatResponse);\n      };\n      const updatedArgs = {\n        ...args,\n        options: {\n          ...args.options,\n          onResponse: callback\n        }\n      };\n      const flatResponse = await directSendOperation(updatedArgs, spec);\n      return {\n        flatResponse,\n        rawResponse: {\n          statusCode: currentRawResponse!.status,\n          body: currentRawResponse!.parsedBody,\n          headers: currentRawResponse!.headers.toJSON()\n        }\n      };\n    };\n\n    const lro = new LroImpl(\n      sendOperation,\n      { resourceGroupName, vmScaleSetName, options },\n      powerOffOperationSpec\n    );\n    return new LroEngine(lro, {\n      resumeFrom: options?.resumeFrom,\n      intervalInMs: options?.updateIntervalInMs\n    });\n  }\n\n  /**\n   * Power off (stop) one or more virtual machines in a VM scale set. Note that resources are still\n   * attached and you are getting charged for the resources. Instead, use deallocate to release resources\n   * and avoid charges.\n   * @param resourceGroupName The name of the resource group.\n   * @param vmScaleSetName The name of the VM scale set.\n   * @param options The options parameters.\n   */\n  async beginPowerOffAndWait(\n    resourceGroupName: string,\n    vmScaleSetName: string,\n    options?: VirtualMachineScaleSetsPowerOffOptionalParams\n  ): Promise<void> {\n    const poller = await this.beginPowerOff(\n      resourceGroupName,\n      vmScaleSetName,\n      options\n    );\n    return poller.pollUntilDone();\n  }\n\n  /**\n   * Restarts one or more virtual machines in a VM scale set.\n   * @param resourceGroupName The name of the resource group.\n   * @param vmScaleSetName The name of the VM scale set.\n   * @param options The options parameters.\n   */\n  async beginRestart(\n    resourceGroupName: string,\n    vmScaleSetName: string,\n    options?: VirtualMachineScaleSetsRestartOptionalParams\n  ): Promise<PollerLike<PollOperationState<void>, void>> {\n    const directSendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ): Promise<void> => {\n      return this.client.sendOperationRequest(args, spec);\n    };\n    const sendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ) => {\n      let currentRawResponse:\n        | coreClient.FullOperationResponse\n        | undefined = undefined;\n      const providedCallback = args.options?.onResponse;\n      const callback: coreClient.RawResponseCallback = (\n        rawResponse: coreClient.FullOperationResponse,\n        flatResponse: unknown\n      ) => {\n        currentRawResponse = rawResponse;\n        providedCallback?.(rawResponse, flatResponse);\n      };\n      const updatedArgs = {\n        ...args,\n        options: {\n          ...args.options,\n          onResponse: callback\n        }\n      };\n      const flatResponse = await directSendOperation(updatedArgs, spec);\n      return {\n        flatResponse,\n        rawResponse: {\n          statusCode: currentRawResponse!.status,\n          body: currentRawResponse!.parsedBody,\n          headers: currentRawResponse!.headers.toJSON()\n        }\n      };\n    };\n\n    const lro = new LroImpl(\n      sendOperation,\n      { resourceGroupName, vmScaleSetName, options },\n      restartOperationSpec\n    );\n    return new LroEngine(lro, {\n      resumeFrom: options?.resumeFrom,\n      intervalInMs: options?.updateIntervalInMs\n    });\n  }\n\n  /**\n   * Restarts one or more virtual machines in a VM scale set.\n   * @param resourceGroupName The name of the resource group.\n   * @param vmScaleSetName The name of the VM scale set.\n   * @param options The options parameters.\n   */\n  async beginRestartAndWait(\n    resourceGroupName: string,\n    vmScaleSetName: string,\n    options?: VirtualMachineScaleSetsRestartOptionalParams\n  ): Promise<void> {\n    const poller = await this.beginRestart(\n      resourceGroupName,\n      vmScaleSetName,\n      options\n    );\n    return poller.pollUntilDone();\n  }\n\n  /**\n   * Starts one or more virtual machines in a VM scale set.\n   * @param resourceGroupName The name of the resource group.\n   * @param vmScaleSetName The name of the VM scale set.\n   * @param options The options parameters.\n   */\n  async beginStart(\n    resourceGroupName: string,\n    vmScaleSetName: string,\n    options?: VirtualMachineScaleSetsStartOptionalParams\n  ): Promise<PollerLike<PollOperationState<void>, void>> {\n    const directSendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ): Promise<void> => {\n      return this.client.sendOperationRequest(args, spec);\n    };\n    const sendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ) => {\n      let currentRawResponse:\n        | coreClient.FullOperationResponse\n        | undefined = undefined;\n      const providedCallback = args.options?.onResponse;\n      const callback: coreClient.RawResponseCallback = (\n        rawResponse: coreClient.FullOperationResponse,\n        flatResponse: unknown\n      ) => {\n        currentRawResponse = rawResponse;\n        providedCallback?.(rawResponse, flatResponse);\n      };\n      const updatedArgs = {\n        ...args,\n        options: {\n          ...args.options,\n          onResponse: callback\n        }\n      };\n      const flatResponse = await directSendOperation(updatedArgs, spec);\n      return {\n        flatResponse,\n        rawResponse: {\n          statusCode: currentRawResponse!.status,\n          body: currentRawResponse!.parsedBody,\n          headers: currentRawResponse!.headers.toJSON()\n        }\n      };\n    };\n\n    const lro = new LroImpl(\n      sendOperation,\n      { resourceGroupName, vmScaleSetName, options },\n      startOperationSpec\n    );\n    return new LroEngine(lro, {\n      resumeFrom: options?.resumeFrom,\n      intervalInMs: options?.updateIntervalInMs\n    });\n  }\n\n  /**\n   * Starts one or more virtual machines in a VM scale set.\n   * @param resourceGroupName The name of the resource group.\n   * @param vmScaleSetName The name of the VM scale set.\n   * @param options The options parameters.\n   */\n  async beginStartAndWait(\n    resourceGroupName: string,\n    vmScaleSetName: string,\n    options?: VirtualMachineScaleSetsStartOptionalParams\n  ): Promise<void> {\n    const poller = await this.beginStart(\n      resourceGroupName,\n      vmScaleSetName,\n      options\n    );\n    return poller.pollUntilDone();\n  }\n\n  /**\n   * Shuts down all the virtual machines in the virtual machine scale set, moves them to a new node, and\n   * powers them back on.\n   * @param resourceGroupName The name of the resource group.\n   * @param vmScaleSetName The name of the VM scale set.\n   * @param options The options parameters.\n   */\n  async beginRedeploy(\n    resourceGroupName: string,\n    vmScaleSetName: string,\n    options?: VirtualMachineScaleSetsRedeployOptionalParams\n  ): Promise<PollerLike<PollOperationState<void>, void>> {\n    const directSendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ): Promise<void> => {\n      return this.client.sendOperationRequest(args, spec);\n    };\n    const sendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ) => {\n      let currentRawResponse:\n        | coreClient.FullOperationResponse\n        | undefined = undefined;\n      const providedCallback = args.options?.onResponse;\n      const callback: coreClient.RawResponseCallback = (\n        rawResponse: coreClient.FullOperationResponse,\n        flatResponse: unknown\n      ) => {\n        currentRawResponse = rawResponse;\n        providedCallback?.(rawResponse, flatResponse);\n      };\n      const updatedArgs = {\n        ...args,\n        options: {\n          ...args.options,\n          onResponse: callback\n        }\n      };\n      const flatResponse = await directSendOperation(updatedArgs, spec);\n      return {\n        flatResponse,\n        rawResponse: {\n          statusCode: currentRawResponse!.status,\n          body: currentRawResponse!.parsedBody,\n          headers: currentRawResponse!.headers.toJSON()\n        }\n      };\n    };\n\n    const lro = new LroImpl(\n      sendOperation,\n      { resourceGroupName, vmScaleSetName, options },\n      redeployOperationSpec\n    );\n    return new LroEngine(lro, {\n      resumeFrom: options?.resumeFrom,\n      intervalInMs: options?.updateIntervalInMs\n    });\n  }\n\n  /**\n   * Shuts down all the virtual machines in the virtual machine scale set, moves them to a new node, and\n   * powers them back on.\n   * @param resourceGroupName The name of the resource group.\n   * @param vmScaleSetName The name of the VM scale set.\n   * @param options The options parameters.\n   */\n  async beginRedeployAndWait(\n    resourceGroupName: string,\n    vmScaleSetName: string,\n    options?: VirtualMachineScaleSetsRedeployOptionalParams\n  ): Promise<void> {\n    const poller = await this.beginRedeploy(\n      resourceGroupName,\n      vmScaleSetName,\n      options\n    );\n    return poller.pollUntilDone();\n  }\n\n  /**\n   * Perform maintenance on one or more virtual machines in a VM scale set. Operation on instances which\n   * are not eligible for perform maintenance will be failed. Please refer to best practices for more\n   * details:\n   * https://docs.microsoft.com/azure/virtual-machine-scale-sets/virtual-machine-scale-sets-maintenance-notifications\n   * @param resourceGroupName The name of the resource group.\n   * @param vmScaleSetName The name of the VM scale set.\n   * @param options The options parameters.\n   */\n  async beginPerformMaintenance(\n    resourceGroupName: string,\n    vmScaleSetName: string,\n    options?: VirtualMachineScaleSetsPerformMaintenanceOptionalParams\n  ): Promise<PollerLike<PollOperationState<void>, void>> {\n    const directSendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ): Promise<void> => {\n      return this.client.sendOperationRequest(args, spec);\n    };\n    const sendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ) => {\n      let currentRawResponse:\n        | coreClient.FullOperationResponse\n        | undefined = undefined;\n      const providedCallback = args.options?.onResponse;\n      const callback: coreClient.RawResponseCallback = (\n        rawResponse: coreClient.FullOperationResponse,\n        flatResponse: unknown\n      ) => {\n        currentRawResponse = rawResponse;\n        providedCallback?.(rawResponse, flatResponse);\n      };\n      const updatedArgs = {\n        ...args,\n        options: {\n          ...args.options,\n          onResponse: callback\n        }\n      };\n      const flatResponse = await directSendOperation(updatedArgs, spec);\n      return {\n        flatResponse,\n        rawResponse: {\n          statusCode: currentRawResponse!.status,\n          body: currentRawResponse!.parsedBody,\n          headers: currentRawResponse!.headers.toJSON()\n        }\n      };\n    };\n\n    const lro = new LroImpl(\n      sendOperation,\n      { resourceGroupName, vmScaleSetName, options },\n      performMaintenanceOperationSpec\n    );\n    return new LroEngine(lro, {\n      resumeFrom: options?.resumeFrom,\n      intervalInMs: options?.updateIntervalInMs\n    });\n  }\n\n  /**\n   * Perform maintenance on one or more virtual machines in a VM scale set. Operation on instances which\n   * are not eligible for perform maintenance will be failed. Please refer to best practices for more\n   * details:\n   * https://docs.microsoft.com/azure/virtual-machine-scale-sets/virtual-machine-scale-sets-maintenance-notifications\n   * @param resourceGroupName The name of the resource group.\n   * @param vmScaleSetName The name of the VM scale set.\n   * @param options The options parameters.\n   */\n  async beginPerformMaintenanceAndWait(\n    resourceGroupName: string,\n    vmScaleSetName: string,\n    options?: VirtualMachineScaleSetsPerformMaintenanceOptionalParams\n  ): Promise<void> {\n    const poller = await this.beginPerformMaintenance(\n      resourceGroupName,\n      vmScaleSetName,\n      options\n    );\n    return poller.pollUntilDone();\n  }\n\n  /**\n   * Upgrades one or more virtual machines to the latest SKU set in the VM scale set model.\n   * @param resourceGroupName The name of the resource group.\n   * @param vmScaleSetName The name of the VM scale set.\n   * @param vmInstanceIDs A list of virtual machine instance IDs from the VM scale set.\n   * @param options The options parameters.\n   */\n  async beginUpdateInstances(\n    resourceGroupName: string,\n    vmScaleSetName: string,\n    vmInstanceIDs: VirtualMachineScaleSetVMInstanceRequiredIDs,\n    options?: VirtualMachineScaleSetsUpdateInstancesOptionalParams\n  ): Promise<PollerLike<PollOperationState<void>, void>> {\n    const directSendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ): Promise<void> => {\n      return this.client.sendOperationRequest(args, spec);\n    };\n    const sendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ) => {\n      let currentRawResponse:\n        | coreClient.FullOperationResponse\n        | undefined = undefined;\n      const providedCallback = args.options?.onResponse;\n      const callback: coreClient.RawResponseCallback = (\n        rawResponse: coreClient.FullOperationResponse,\n        flatResponse: unknown\n      ) => {\n        currentRawResponse = rawResponse;\n        providedCallback?.(rawResponse, flatResponse);\n      };\n      const updatedArgs = {\n        ...args,\n        options: {\n          ...args.options,\n          onResponse: callback\n        }\n      };\n      const flatResponse = await directSendOperation(updatedArgs, spec);\n      return {\n        flatResponse,\n        rawResponse: {\n          statusCode: currentRawResponse!.status,\n          body: currentRawResponse!.parsedBody,\n          headers: currentRawResponse!.headers.toJSON()\n        }\n      };\n    };\n\n    const lro = new LroImpl(\n      sendOperation,\n      { resourceGroupName, vmScaleSetName, vmInstanceIDs, options },\n      updateInstancesOperationSpec\n    );\n    return new LroEngine(lro, {\n      resumeFrom: options?.resumeFrom,\n      intervalInMs: options?.updateIntervalInMs\n    });\n  }\n\n  /**\n   * Upgrades one or more virtual machines to the latest SKU set in the VM scale set model.\n   * @param resourceGroupName The name of the resource group.\n   * @param vmScaleSetName The name of the VM scale set.\n   * @param vmInstanceIDs A list of virtual machine instance IDs from the VM scale set.\n   * @param options The options parameters.\n   */\n  async beginUpdateInstancesAndWait(\n    resourceGroupName: string,\n    vmScaleSetName: string,\n    vmInstanceIDs: VirtualMachineScaleSetVMInstanceRequiredIDs,\n    options?: VirtualMachineScaleSetsUpdateInstancesOptionalParams\n  ): Promise<void> {\n    const poller = await this.beginUpdateInstances(\n      resourceGroupName,\n      vmScaleSetName,\n      vmInstanceIDs,\n      options\n    );\n    return poller.pollUntilDone();\n  }\n\n  /**\n   * Reimages (upgrade the operating system) one or more virtual machines in a VM scale set which don't\n   * have a ephemeral OS disk, for virtual machines who have a ephemeral OS disk the virtual machine is\n   * reset to initial state.\n   * @param resourceGroupName The name of the resource group.\n   * @param vmScaleSetName The name of the VM scale set.\n   * @param options The options parameters.\n   */\n  async beginReimage(\n    resourceGroupName: string,\n    vmScaleSetName: string,\n    options?: VirtualMachineScaleSetsReimageOptionalParams\n  ): Promise<PollerLike<PollOperationState<void>, void>> {\n    const directSendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ): Promise<void> => {\n      return this.client.sendOperationRequest(args, spec);\n    };\n    const sendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ) => {\n      let currentRawResponse:\n        | coreClient.FullOperationResponse\n        | undefined = undefined;\n      const providedCallback = args.options?.onResponse;\n      const callback: coreClient.RawResponseCallback = (\n        rawResponse: coreClient.FullOperationResponse,\n        flatResponse: unknown\n      ) => {\n        currentRawResponse = rawResponse;\n        providedCallback?.(rawResponse, flatResponse);\n      };\n      const updatedArgs = {\n        ...args,\n        options: {\n          ...args.options,\n          onResponse: callback\n        }\n      };\n      const flatResponse = await directSendOperation(updatedArgs, spec);\n      return {\n        flatResponse,\n        rawResponse: {\n          statusCode: currentRawResponse!.status,\n          body: currentRawResponse!.parsedBody,\n          headers: currentRawResponse!.headers.toJSON()\n        }\n      };\n    };\n\n    const lro = new LroImpl(\n      sendOperation,\n      { resourceGroupName, vmScaleSetName, options },\n      reimageOperationSpec\n    );\n    return new LroEngine(lro, {\n      resumeFrom: options?.resumeFrom,\n      intervalInMs: options?.updateIntervalInMs\n    });\n  }\n\n  /**\n   * Reimages (upgrade the operating system) one or more virtual machines in a VM scale set which don't\n   * have a ephemeral OS disk, for virtual machines who have a ephemeral OS disk the virtual machine is\n   * reset to initial state.\n   * @param resourceGroupName The name of the resource group.\n   * @param vmScaleSetName The name of the VM scale set.\n   * @param options The options parameters.\n   */\n  async beginReimageAndWait(\n    resourceGroupName: string,\n    vmScaleSetName: string,\n    options?: VirtualMachineScaleSetsReimageOptionalParams\n  ): Promise<void> {\n    const poller = await this.beginReimage(\n      resourceGroupName,\n      vmScaleSetName,\n      options\n    );\n    return poller.pollUntilDone();\n  }\n\n  /**\n   * Reimages all the disks ( including data disks ) in the virtual machines in a VM scale set. This\n   * operation is only supported for managed disks.\n   * @param resourceGroupName The name of the resource group.\n   * @param vmScaleSetName The name of the VM scale set.\n   * @param options The options parameters.\n   */\n  async beginReimageAll(\n    resourceGroupName: string,\n    vmScaleSetName: string,\n    options?: VirtualMachineScaleSetsReimageAllOptionalParams\n  ): Promise<PollerLike<PollOperationState<void>, void>> {\n    const directSendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ): Promise<void> => {\n      return this.client.sendOperationRequest(args, spec);\n    };\n    const sendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ) => {\n      let currentRawResponse:\n        | coreClient.FullOperationResponse\n        | undefined = undefined;\n      const providedCallback = args.options?.onResponse;\n      const callback: coreClient.RawResponseCallback = (\n        rawResponse: coreClient.FullOperationResponse,\n        flatResponse: unknown\n      ) => {\n        currentRawResponse = rawResponse;\n        providedCallback?.(rawResponse, flatResponse);\n      };\n      const updatedArgs = {\n        ...args,\n        options: {\n          ...args.options,\n          onResponse: callback\n        }\n      };\n      const flatResponse = await directSendOperation(updatedArgs, spec);\n      return {\n        flatResponse,\n        rawResponse: {\n          statusCode: currentRawResponse!.status,\n          body: currentRawResponse!.parsedBody,\n          headers: currentRawResponse!.headers.toJSON()\n        }\n      };\n    };\n\n    const lro = new LroImpl(\n      sendOperation,\n      { resourceGroupName, vmScaleSetName, options },\n      reimageAllOperationSpec\n    );\n    return new LroEngine(lro, {\n      resumeFrom: options?.resumeFrom,\n      intervalInMs: options?.updateIntervalInMs\n    });\n  }\n\n  /**\n   * Reimages all the disks ( including data disks ) in the virtual machines in a VM scale set. This\n   * operation is only supported for managed disks.\n   * @param resourceGroupName The name of the resource group.\n   * @param vmScaleSetName The name of the VM scale set.\n   * @param options The options parameters.\n   */\n  async beginReimageAllAndWait(\n    resourceGroupName: string,\n    vmScaleSetName: string,\n    options?: VirtualMachineScaleSetsReimageAllOptionalParams\n  ): Promise<void> {\n    const poller = await this.beginReimageAll(\n      resourceGroupName,\n      vmScaleSetName,\n      options\n    );\n    return poller.pollUntilDone();\n  }\n\n  /**\n   * Manual platform update domain walk to update virtual machines in a service fabric virtual machine\n   * scale set.\n   * @param resourceGroupName The name of the resource group.\n   * @param vmScaleSetName The name of the VM scale set.\n   * @param platformUpdateDomain The platform update domain for which a manual recovery walk is requested\n   * @param options The options parameters.\n   */\n  forceRecoveryServiceFabricPlatformUpdateDomainWalk(\n    resourceGroupName: string,\n    vmScaleSetName: string,\n    platformUpdateDomain: number,\n    options?: VirtualMachineScaleSetsForceRecoveryServiceFabricPlatformUpdateDomainWalkOptionalParams\n  ): Promise<\n    VirtualMachineScaleSetsForceRecoveryServiceFabricPlatformUpdateDomainWalkResponse\n  > {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, vmScaleSetName, platformUpdateDomain, options },\n      forceRecoveryServiceFabricPlatformUpdateDomainWalkOperationSpec\n    );\n  }\n\n  /**\n   * Converts SinglePlacementGroup property to false for a existing virtual machine scale set.\n   * @param resourceGroupName The name of the resource group.\n   * @param vmScaleSetName The name of the virtual machine scale set to create or update.\n   * @param parameters The input object for ConvertToSinglePlacementGroup API.\n   * @param options The options parameters.\n   */\n  convertToSinglePlacementGroup(\n    resourceGroupName: string,\n    vmScaleSetName: string,\n    parameters: VMScaleSetConvertToSinglePlacementGroupInput,\n    options?: VirtualMachineScaleSetsConvertToSinglePlacementGroupOptionalParams\n  ): Promise<void> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, vmScaleSetName, parameters, options },\n      convertToSinglePlacementGroupOperationSpec\n    );\n  }\n\n  /**\n   * Changes ServiceState property for a given service\n   * @param resourceGroupName The name of the resource group.\n   * @param vmScaleSetName The name of the virtual machine scale set to create or update.\n   * @param parameters The input object for SetOrchestrationServiceState API.\n   * @param options The options parameters.\n   */\n  async beginSetOrchestrationServiceState(\n    resourceGroupName: string,\n    vmScaleSetName: string,\n    parameters: OrchestrationServiceStateInput,\n    options?: VirtualMachineScaleSetsSetOrchestrationServiceStateOptionalParams\n  ): Promise<PollerLike<PollOperationState<void>, void>> {\n    const directSendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ): Promise<void> => {\n      return this.client.sendOperationRequest(args, spec);\n    };\n    const sendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ) => {\n      let currentRawResponse:\n        | coreClient.FullOperationResponse\n        | undefined = undefined;\n      const providedCallback = args.options?.onResponse;\n      const callback: coreClient.RawResponseCallback = (\n        rawResponse: coreClient.FullOperationResponse,\n        flatResponse: unknown\n      ) => {\n        currentRawResponse = rawResponse;\n        providedCallback?.(rawResponse, flatResponse);\n      };\n      const updatedArgs = {\n        ...args,\n        options: {\n          ...args.options,\n          onResponse: callback\n        }\n      };\n      const flatResponse = await directSendOperation(updatedArgs, spec);\n      return {\n        flatResponse,\n        rawResponse: {\n          statusCode: currentRawResponse!.status,\n          body: currentRawResponse!.parsedBody,\n          headers: currentRawResponse!.headers.toJSON()\n        }\n      };\n    };\n\n    const lro = new LroImpl(\n      sendOperation,\n      { resourceGroupName, vmScaleSetName, parameters, options },\n      setOrchestrationServiceStateOperationSpec\n    );\n    return new LroEngine(lro, {\n      resumeFrom: options?.resumeFrom,\n      intervalInMs: options?.updateIntervalInMs\n    });\n  }\n\n  /**\n   * Changes ServiceState property for a given service\n   * @param resourceGroupName The name of the resource group.\n   * @param vmScaleSetName The name of the virtual machine scale set to create or update.\n   * @param parameters The input object for SetOrchestrationServiceState API.\n   * @param options The options parameters.\n   */\n  async beginSetOrchestrationServiceStateAndWait(\n    resourceGroupName: string,\n    vmScaleSetName: string,\n    parameters: OrchestrationServiceStateInput,\n    options?: VirtualMachineScaleSetsSetOrchestrationServiceStateOptionalParams\n  ): Promise<void> {\n    const poller = await this.beginSetOrchestrationServiceState(\n      resourceGroupName,\n      vmScaleSetName,\n      parameters,\n      options\n    );\n    return poller.pollUntilDone();\n  }\n\n  /**\n   * ListByLocationNext\n   * @param location The location for which VM scale sets under the subscription are queried.\n   * @param nextLink The nextLink from the previous successful call to the ListByLocation method.\n   * @param options The options parameters.\n   */\n  private _listByLocationNext(\n    location: string,\n    nextLink: string,\n    options?: VirtualMachineScaleSetsListByLocationNextOptionalParams\n  ): Promise<VirtualMachineScaleSetsListByLocationNextResponse> {\n    return this.client.sendOperationRequest(\n      { location, nextLink, options },\n      listByLocationNextOperationSpec\n    );\n  }\n\n  /**\n   * ListNext\n   * @param resourceGroupName The name of the resource group.\n   * @param nextLink The nextLink from the previous successful call to the List method.\n   * @param options The options parameters.\n   */\n  private _listNext(\n    resourceGroupName: string,\n    nextLink: string,\n    options?: VirtualMachineScaleSetsListNextOptionalParams\n  ): Promise<VirtualMachineScaleSetsListNextResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, nextLink, options },\n      listNextOperationSpec\n    );\n  }\n\n  /**\n   * ListAllNext\n   * @param nextLink The nextLink from the previous successful call to the ListAll method.\n   * @param options The options parameters.\n   */\n  private _listAllNext(\n    nextLink: string,\n    options?: VirtualMachineScaleSetsListAllNextOptionalParams\n  ): Promise<VirtualMachineScaleSetsListAllNextResponse> {\n    return this.client.sendOperationRequest(\n      { nextLink, options },\n      listAllNextOperationSpec\n    );\n  }\n\n  /**\n   * ListSkusNext\n   * @param resourceGroupName The name of the resource group.\n   * @param vmScaleSetName The name of the VM scale set.\n   * @param nextLink The nextLink from the previous successful call to the ListSkus method.\n   * @param options The options parameters.\n   */\n  private _listSkusNext(\n    resourceGroupName: string,\n    vmScaleSetName: string,\n    nextLink: string,\n    options?: VirtualMachineScaleSetsListSkusNextOptionalParams\n  ): Promise<VirtualMachineScaleSetsListSkusNextResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, vmScaleSetName, nextLink, options },\n      listSkusNextOperationSpec\n    );\n  }\n\n  /**\n   * GetOSUpgradeHistoryNext\n   * @param resourceGroupName The name of the resource group.\n   * @param vmScaleSetName The name of the VM scale set.\n   * @param nextLink The nextLink from the previous successful call to the GetOSUpgradeHistory method.\n   * @param options The options parameters.\n   */\n  private _getOSUpgradeHistoryNext(\n    resourceGroupName: string,\n    vmScaleSetName: string,\n    nextLink: string,\n    options?: VirtualMachineScaleSetsGetOSUpgradeHistoryNextOptionalParams\n  ): Promise<VirtualMachineScaleSetsGetOSUpgradeHistoryNextResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, vmScaleSetName, nextLink, options },\n      getOSUpgradeHistoryNextOperationSpec\n    );\n  }\n}\n// Operation Specifications\nconst serializer = coreClient.createSerializer(Mappers, /* isXml */ false);\n\nconst listByLocationOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/providers/Microsoft.Compute/locations/{location}/virtualMachineScaleSets\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.VirtualMachineScaleSetListResult\n    },\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.location1\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst createOrUpdateOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/virtualMachineScaleSets/{vmScaleSetName}\",\n  httpMethod: \"PUT\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.VirtualMachineScaleSet\n    },\n    201: {\n      bodyMapper: Mappers.VirtualMachineScaleSet\n    },\n    202: {\n      bodyMapper: Mappers.VirtualMachineScaleSet\n    },\n    204: {\n      bodyMapper: Mappers.VirtualMachineScaleSet\n    },\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  requestBody: Parameters.parameters15,\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.resourceGroupName,\n    Parameters.subscriptionId,\n    Parameters.vmScaleSetName\n  ],\n  headerParameters: [Parameters.accept, Parameters.contentType],\n  mediaType: \"json\",\n  serializer\n};\nconst updateOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/virtualMachineScaleSets/{vmScaleSetName}\",\n  httpMethod: \"PATCH\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.VirtualMachineScaleSet\n    },\n    201: {\n      bodyMapper: Mappers.VirtualMachineScaleSet\n    },\n    202: {\n      bodyMapper: Mappers.VirtualMachineScaleSet\n    },\n    204: {\n      bodyMapper: Mappers.VirtualMachineScaleSet\n    },\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  requestBody: Parameters.parameters16,\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.resourceGroupName,\n    Parameters.subscriptionId,\n    Parameters.vmScaleSetName\n  ],\n  headerParameters: [Parameters.accept, Parameters.contentType],\n  mediaType: \"json\",\n  serializer\n};\nconst deleteOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/virtualMachineScaleSets/{vmScaleSetName}\",\n  httpMethod: \"DELETE\",\n  responses: {\n    200: {},\n    201: {},\n    202: {},\n    204: {},\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  queryParameters: [Parameters.apiVersion, Parameters.forceDeletion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.resourceGroupName,\n    Parameters.subscriptionId,\n    Parameters.vmScaleSetName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst getOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/virtualMachineScaleSets/{vmScaleSetName}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.VirtualMachineScaleSet\n    },\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  queryParameters: [Parameters.apiVersion, Parameters.expand2],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.resourceGroupName,\n    Parameters.subscriptionId,\n    Parameters.vmScaleSetName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst deallocateOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/virtualMachineScaleSets/{vmScaleSetName}/deallocate\",\n  httpMethod: \"POST\",\n  responses: {\n    200: {},\n    201: {},\n    202: {},\n    204: {},\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  requestBody: Parameters.vmInstanceIDs,\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.resourceGroupName,\n    Parameters.subscriptionId,\n    Parameters.vmScaleSetName\n  ],\n  headerParameters: [Parameters.accept, Parameters.contentType],\n  mediaType: \"json\",\n  serializer\n};\nconst deleteInstancesOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/virtualMachineScaleSets/{vmScaleSetName}/delete\",\n  httpMethod: \"POST\",\n  responses: {\n    200: {},\n    201: {},\n    202: {},\n    204: {},\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  requestBody: Parameters.vmInstanceIDs1,\n  queryParameters: [Parameters.apiVersion, Parameters.forceDeletion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.resourceGroupName,\n    Parameters.subscriptionId,\n    Parameters.vmScaleSetName\n  ],\n  headerParameters: [Parameters.accept, Parameters.contentType],\n  mediaType: \"json\",\n  serializer\n};\nconst getInstanceViewOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/virtualMachineScaleSets/{vmScaleSetName}/instanceView\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.VirtualMachineScaleSetInstanceView\n    },\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.resourceGroupName,\n    Parameters.subscriptionId,\n    Parameters.vmScaleSetName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst listOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/virtualMachineScaleSets\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.VirtualMachineScaleSetListResult\n    },\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.resourceGroupName,\n    Parameters.subscriptionId\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst listAllOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/providers/Microsoft.Compute/virtualMachineScaleSets\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.VirtualMachineScaleSetListWithLinkResult\n    },\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [Parameters.$host, Parameters.subscriptionId],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst listSkusOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/virtualMachineScaleSets/{vmScaleSetName}/skus\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.VirtualMachineScaleSetListSkusResult\n    },\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.resourceGroupName,\n    Parameters.subscriptionId,\n    Parameters.vmScaleSetName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst getOSUpgradeHistoryOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/virtualMachineScaleSets/{vmScaleSetName}/osUpgradeHistory\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.VirtualMachineScaleSetListOSUpgradeHistory\n    },\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.resourceGroupName,\n    Parameters.subscriptionId,\n    Parameters.vmScaleSetName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst powerOffOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/virtualMachineScaleSets/{vmScaleSetName}/poweroff\",\n  httpMethod: \"POST\",\n  responses: {\n    200: {},\n    201: {},\n    202: {},\n    204: {},\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  requestBody: Parameters.vmInstanceIDs,\n  queryParameters: [Parameters.apiVersion, Parameters.skipShutdown],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.resourceGroupName,\n    Parameters.subscriptionId,\n    Parameters.vmScaleSetName\n  ],\n  headerParameters: [Parameters.accept, Parameters.contentType],\n  mediaType: \"json\",\n  serializer\n};\nconst restartOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/virtualMachineScaleSets/{vmScaleSetName}/restart\",\n  httpMethod: \"POST\",\n  responses: {\n    200: {},\n    201: {},\n    202: {},\n    204: {},\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  requestBody: Parameters.vmInstanceIDs,\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.resourceGroupName,\n    Parameters.subscriptionId,\n    Parameters.vmScaleSetName\n  ],\n  headerParameters: [Parameters.accept, Parameters.contentType],\n  mediaType: \"json\",\n  serializer\n};\nconst startOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/virtualMachineScaleSets/{vmScaleSetName}/start\",\n  httpMethod: \"POST\",\n  responses: {\n    200: {},\n    201: {},\n    202: {},\n    204: {},\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  requestBody: Parameters.vmInstanceIDs,\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.resourceGroupName,\n    Parameters.subscriptionId,\n    Parameters.vmScaleSetName\n  ],\n  headerParameters: [Parameters.accept, Parameters.contentType],\n  mediaType: \"json\",\n  serializer\n};\nconst redeployOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/virtualMachineScaleSets/{vmScaleSetName}/redeploy\",\n  httpMethod: \"POST\",\n  responses: {\n    200: {},\n    201: {},\n    202: {},\n    204: {},\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  requestBody: Parameters.vmInstanceIDs,\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.resourceGroupName,\n    Parameters.subscriptionId,\n    Parameters.vmScaleSetName\n  ],\n  headerParameters: [Parameters.accept, Parameters.contentType],\n  mediaType: \"json\",\n  serializer\n};\nconst performMaintenanceOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/virtualMachineScaleSets/{vmScaleSetName}/performMaintenance\",\n  httpMethod: \"POST\",\n  responses: {\n    200: {},\n    201: {},\n    202: {},\n    204: {},\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  requestBody: Parameters.vmInstanceIDs,\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.resourceGroupName,\n    Parameters.subscriptionId,\n    Parameters.vmScaleSetName\n  ],\n  headerParameters: [Parameters.accept, Parameters.contentType],\n  mediaType: \"json\",\n  serializer\n};\nconst updateInstancesOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/virtualMachineScaleSets/{vmScaleSetName}/manualupgrade\",\n  httpMethod: \"POST\",\n  responses: {\n    200: {},\n    201: {},\n    202: {},\n    204: {},\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  requestBody: Parameters.vmInstanceIDs1,\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.resourceGroupName,\n    Parameters.subscriptionId,\n    Parameters.vmScaleSetName\n  ],\n  headerParameters: [Parameters.accept, Parameters.contentType],\n  mediaType: \"json\",\n  serializer\n};\nconst reimageOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/virtualMachineScaleSets/{vmScaleSetName}/reimage\",\n  httpMethod: \"POST\",\n  responses: {\n    200: {},\n    201: {},\n    202: {},\n    204: {},\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  requestBody: Parameters.vmScaleSetReimageInput,\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.resourceGroupName,\n    Parameters.subscriptionId,\n    Parameters.vmScaleSetName\n  ],\n  headerParameters: [Parameters.accept, Parameters.contentType],\n  mediaType: \"json\",\n  serializer\n};\nconst reimageAllOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/virtualMachineScaleSets/{vmScaleSetName}/reimageall\",\n  httpMethod: \"POST\",\n  responses: {\n    200: {},\n    201: {},\n    202: {},\n    204: {},\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  requestBody: Parameters.vmInstanceIDs,\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.resourceGroupName,\n    Parameters.subscriptionId,\n    Parameters.vmScaleSetName\n  ],\n  headerParameters: [Parameters.accept, Parameters.contentType],\n  mediaType: \"json\",\n  serializer\n};\nconst forceRecoveryServiceFabricPlatformUpdateDomainWalkOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/virtualMachineScaleSets/{vmScaleSetName}/forceRecoveryServiceFabricPlatformUpdateDomainWalk\",\n  httpMethod: \"POST\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.RecoveryWalkResponse\n    },\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  queryParameters: [\n    Parameters.apiVersion,\n    Parameters.platformUpdateDomain,\n    Parameters.zone,\n    Parameters.placementGroupId\n  ],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.resourceGroupName,\n    Parameters.subscriptionId,\n    Parameters.vmScaleSetName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst convertToSinglePlacementGroupOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/virtualMachineScaleSets/{vmScaleSetName}/convertToSinglePlacementGroup\",\n  httpMethod: \"POST\",\n  responses: {\n    200: {},\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  requestBody: Parameters.parameters17,\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.resourceGroupName,\n    Parameters.subscriptionId,\n    Parameters.vmScaleSetName\n  ],\n  headerParameters: [Parameters.accept, Parameters.contentType],\n  mediaType: \"json\",\n  serializer\n};\nconst setOrchestrationServiceStateOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/virtualMachineScaleSets/{vmScaleSetName}/setOrchestrationServiceState\",\n  httpMethod: \"POST\",\n  responses: {\n    200: {},\n    201: {},\n    202: {},\n    204: {},\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  requestBody: Parameters.parameters18,\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.resourceGroupName,\n    Parameters.subscriptionId,\n    Parameters.vmScaleSetName\n  ],\n  headerParameters: [Parameters.accept, Parameters.contentType],\n  mediaType: \"json\",\n  serializer\n};\nconst listByLocationNextOperationSpec: coreClient.OperationSpec = {\n  path: \"{nextLink}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.VirtualMachineScaleSetListResult\n    },\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.nextLink,\n    Parameters.location1\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst listNextOperationSpec: coreClient.OperationSpec = {\n  path: \"{nextLink}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.VirtualMachineScaleSetListResult\n    },\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.resourceGroupName,\n    Parameters.subscriptionId,\n    Parameters.nextLink\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst listAllNextOperationSpec: coreClient.OperationSpec = {\n  path: \"{nextLink}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.VirtualMachineScaleSetListWithLinkResult\n    },\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.nextLink\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst listSkusNextOperationSpec: coreClient.OperationSpec = {\n  path: \"{nextLink}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.VirtualMachineScaleSetListSkusResult\n    },\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.resourceGroupName,\n    Parameters.subscriptionId,\n    Parameters.nextLink,\n    Parameters.vmScaleSetName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst getOSUpgradeHistoryNextOperationSpec: coreClient.OperationSpec = {\n  path: \"{nextLink}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.VirtualMachineScaleSetListOSUpgradeHistory\n    },\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.resourceGroupName,\n    Parameters.subscriptionId,\n    Parameters.nextLink,\n    Parameters.vmScaleSetName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport { PagedAsyncIterableIterator } from \"@azure/core-paging\";\nimport { VirtualMachineSizes } from \"../operationsInterfaces\";\nimport * as coreClient from \"@azure/core-client\";\nimport * as Mappers from \"../models/mappers\";\nimport * as Parameters from \"../models/parameters\";\nimport { ComputeManagementClient } from \"../computeManagementClient\";\nimport {\n  VirtualMachineSize,\n  VirtualMachineSizesListOptionalParams,\n  VirtualMachineSizesListResponse\n} from \"../models\";\n\n/// <reference lib=\"esnext.asynciterable\" />\n/** Class containing VirtualMachineSizes operations. */\nexport class VirtualMachineSizesImpl implements VirtualMachineSizes {\n  private readonly client: ComputeManagementClient;\n\n  /**\n   * Initialize a new instance of the class VirtualMachineSizes class.\n   * @param client Reference to the service client\n   */\n  constructor(client: ComputeManagementClient) {\n    this.client = client;\n  }\n\n  /**\n   * This API is deprecated. Use [Resources\n   * Skus](https://docs.microsoft.com/rest/api/compute/resourceskus/list)\n   * @param location The location upon which virtual-machine-sizes is queried.\n   * @param options The options parameters.\n   */\n  public list(\n    location: string,\n    options?: VirtualMachineSizesListOptionalParams\n  ): PagedAsyncIterableIterator<VirtualMachineSize> {\n    const iter = this.listPagingAll(location, options);\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: () => {\n        return this.listPagingPage(location, options);\n      }\n    };\n  }\n\n  private async *listPagingPage(\n    location: string,\n    options?: VirtualMachineSizesListOptionalParams\n  ): AsyncIterableIterator<VirtualMachineSize[]> {\n    let result = await this._list(location, options);\n    yield result.value || [];\n  }\n\n  private async *listPagingAll(\n    location: string,\n    options?: VirtualMachineSizesListOptionalParams\n  ): AsyncIterableIterator<VirtualMachineSize> {\n    for await (const page of this.listPagingPage(location, options)) {\n      yield* page;\n    }\n  }\n\n  /**\n   * This API is deprecated. Use [Resources\n   * Skus](https://docs.microsoft.com/rest/api/compute/resourceskus/list)\n   * @param location The location upon which virtual-machine-sizes is queried.\n   * @param options The options parameters.\n   */\n  private _list(\n    location: string,\n    options?: VirtualMachineSizesListOptionalParams\n  ): Promise<VirtualMachineSizesListResponse> {\n    return this.client.sendOperationRequest(\n      { location, options },\n      listOperationSpec\n    );\n  }\n}\n// Operation Specifications\nconst serializer = coreClient.createSerializer(Mappers, /* isXml */ false);\n\nconst listOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/providers/Microsoft.Compute/locations/{location}/vmSizes\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.VirtualMachineSizeListResult\n    },\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.location1\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport { PagedAsyncIterableIterator } from \"@azure/core-paging\";\nimport { Images } from \"../operationsInterfaces\";\nimport * as coreClient from \"@azure/core-client\";\nimport * as Mappers from \"../models/mappers\";\nimport * as Parameters from \"../models/parameters\";\nimport { ComputeManagementClient } from \"../computeManagementClient\";\nimport { PollerLike, PollOperationState, LroEngine } from \"@azure/core-lro\";\nimport { LroImpl } from \"../lroImpl\";\nimport {\n  Image,\n  ImagesListByResourceGroupNextOptionalParams,\n  ImagesListByResourceGroupOptionalParams,\n  ImagesListNextOptionalParams,\n  ImagesListOptionalParams,\n  ImagesCreateOrUpdateOptionalParams,\n  ImagesCreateOrUpdateResponse,\n  ImageUpdate,\n  ImagesUpdateOptionalParams,\n  ImagesUpdateResponse,\n  ImagesDeleteOptionalParams,\n  ImagesGetOptionalParams,\n  ImagesGetResponse,\n  ImagesListByResourceGroupResponse,\n  ImagesListResponse,\n  ImagesListByResourceGroupNextResponse,\n  ImagesListNextResponse\n} from \"../models\";\n\n/// <reference lib=\"esnext.asynciterable\" />\n/** Class containing Images operations. */\nexport class ImagesImpl implements Images {\n  private readonly client: ComputeManagementClient;\n\n  /**\n   * Initialize a new instance of the class Images class.\n   * @param client Reference to the service client\n   */\n  constructor(client: ComputeManagementClient) {\n    this.client = client;\n  }\n\n  /**\n   * Gets the list of images under a resource group.\n   * @param resourceGroupName The name of the resource group.\n   * @param options The options parameters.\n   */\n  public listByResourceGroup(\n    resourceGroupName: string,\n    options?: ImagesListByResourceGroupOptionalParams\n  ): PagedAsyncIterableIterator<Image> {\n    const iter = this.listByResourceGroupPagingAll(resourceGroupName, options);\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: () => {\n        return this.listByResourceGroupPagingPage(resourceGroupName, options);\n      }\n    };\n  }\n\n  private async *listByResourceGroupPagingPage(\n    resourceGroupName: string,\n    options?: ImagesListByResourceGroupOptionalParams\n  ): AsyncIterableIterator<Image[]> {\n    let result = await this._listByResourceGroup(resourceGroupName, options);\n    yield result.value || [];\n    let continuationToken = result.nextLink;\n    while (continuationToken) {\n      result = await this._listByResourceGroupNext(\n        resourceGroupName,\n        continuationToken,\n        options\n      );\n      continuationToken = result.nextLink;\n      yield result.value || [];\n    }\n  }\n\n  private async *listByResourceGroupPagingAll(\n    resourceGroupName: string,\n    options?: ImagesListByResourceGroupOptionalParams\n  ): AsyncIterableIterator<Image> {\n    for await (const page of this.listByResourceGroupPagingPage(\n      resourceGroupName,\n      options\n    )) {\n      yield* page;\n    }\n  }\n\n  /**\n   * Gets the list of Images in the subscription. Use nextLink property in the response to get the next\n   * page of Images. Do this till nextLink is null to fetch all the Images.\n   * @param options The options parameters.\n   */\n  public list(\n    options?: ImagesListOptionalParams\n  ): PagedAsyncIterableIterator<Image> {\n    const iter = this.listPagingAll(options);\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: () => {\n        return this.listPagingPage(options);\n      }\n    };\n  }\n\n  private async *listPagingPage(\n    options?: ImagesListOptionalParams\n  ): AsyncIterableIterator<Image[]> {\n    let result = await this._list(options);\n    yield result.value || [];\n    let continuationToken = result.nextLink;\n    while (continuationToken) {\n      result = await this._listNext(continuationToken, options);\n      continuationToken = result.nextLink;\n      yield result.value || [];\n    }\n  }\n\n  private async *listPagingAll(\n    options?: ImagesListOptionalParams\n  ): AsyncIterableIterator<Image> {\n    for await (const page of this.listPagingPage(options)) {\n      yield* page;\n    }\n  }\n\n  /**\n   * Create or update an image.\n   * @param resourceGroupName The name of the resource group.\n   * @param imageName The name of the image.\n   * @param parameters Parameters supplied to the Create Image operation.\n   * @param options The options parameters.\n   */\n  async beginCreateOrUpdate(\n    resourceGroupName: string,\n    imageName: string,\n    parameters: Image,\n    options?: ImagesCreateOrUpdateOptionalParams\n  ): Promise<\n    PollerLike<\n      PollOperationState<ImagesCreateOrUpdateResponse>,\n      ImagesCreateOrUpdateResponse\n    >\n  > {\n    const directSendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ): Promise<ImagesCreateOrUpdateResponse> => {\n      return this.client.sendOperationRequest(args, spec);\n    };\n    const sendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ) => {\n      let currentRawResponse:\n        | coreClient.FullOperationResponse\n        | undefined = undefined;\n      const providedCallback = args.options?.onResponse;\n      const callback: coreClient.RawResponseCallback = (\n        rawResponse: coreClient.FullOperationResponse,\n        flatResponse: unknown\n      ) => {\n        currentRawResponse = rawResponse;\n        providedCallback?.(rawResponse, flatResponse);\n      };\n      const updatedArgs = {\n        ...args,\n        options: {\n          ...args.options,\n          onResponse: callback\n        }\n      };\n      const flatResponse = await directSendOperation(updatedArgs, spec);\n      return {\n        flatResponse,\n        rawResponse: {\n          statusCode: currentRawResponse!.status,\n          body: currentRawResponse!.parsedBody,\n          headers: currentRawResponse!.headers.toJSON()\n        }\n      };\n    };\n\n    const lro = new LroImpl(\n      sendOperation,\n      { resourceGroupName, imageName, parameters, options },\n      createOrUpdateOperationSpec\n    );\n    return new LroEngine(lro, {\n      resumeFrom: options?.resumeFrom,\n      intervalInMs: options?.updateIntervalInMs\n    });\n  }\n\n  /**\n   * Create or update an image.\n   * @param resourceGroupName The name of the resource group.\n   * @param imageName The name of the image.\n   * @param parameters Parameters supplied to the Create Image operation.\n   * @param options The options parameters.\n   */\n  async beginCreateOrUpdateAndWait(\n    resourceGroupName: string,\n    imageName: string,\n    parameters: Image,\n    options?: ImagesCreateOrUpdateOptionalParams\n  ): Promise<ImagesCreateOrUpdateResponse> {\n    const poller = await this.beginCreateOrUpdate(\n      resourceGroupName,\n      imageName,\n      parameters,\n      options\n    );\n    return poller.pollUntilDone();\n  }\n\n  /**\n   * Update an image.\n   * @param resourceGroupName The name of the resource group.\n   * @param imageName The name of the image.\n   * @param parameters Parameters supplied to the Update Image operation.\n   * @param options The options parameters.\n   */\n  async beginUpdate(\n    resourceGroupName: string,\n    imageName: string,\n    parameters: ImageUpdate,\n    options?: ImagesUpdateOptionalParams\n  ): Promise<\n    PollerLike<PollOperationState<ImagesUpdateResponse>, ImagesUpdateResponse>\n  > {\n    const directSendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ): Promise<ImagesUpdateResponse> => {\n      return this.client.sendOperationRequest(args, spec);\n    };\n    const sendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ) => {\n      let currentRawResponse:\n        | coreClient.FullOperationResponse\n        | undefined = undefined;\n      const providedCallback = args.options?.onResponse;\n      const callback: coreClient.RawResponseCallback = (\n        rawResponse: coreClient.FullOperationResponse,\n        flatResponse: unknown\n      ) => {\n        currentRawResponse = rawResponse;\n        providedCallback?.(rawResponse, flatResponse);\n      };\n      const updatedArgs = {\n        ...args,\n        options: {\n          ...args.options,\n          onResponse: callback\n        }\n      };\n      const flatResponse = await directSendOperation(updatedArgs, spec);\n      return {\n        flatResponse,\n        rawResponse: {\n          statusCode: currentRawResponse!.status,\n          body: currentRawResponse!.parsedBody,\n          headers: currentRawResponse!.headers.toJSON()\n        }\n      };\n    };\n\n    const lro = new LroImpl(\n      sendOperation,\n      { resourceGroupName, imageName, parameters, options },\n      updateOperationSpec\n    );\n    return new LroEngine(lro, {\n      resumeFrom: options?.resumeFrom,\n      intervalInMs: options?.updateIntervalInMs\n    });\n  }\n\n  /**\n   * Update an image.\n   * @param resourceGroupName The name of the resource group.\n   * @param imageName The name of the image.\n   * @param parameters Parameters supplied to the Update Image operation.\n   * @param options The options parameters.\n   */\n  async beginUpdateAndWait(\n    resourceGroupName: string,\n    imageName: string,\n    parameters: ImageUpdate,\n    options?: ImagesUpdateOptionalParams\n  ): Promise<ImagesUpdateResponse> {\n    const poller = await this.beginUpdate(\n      resourceGroupName,\n      imageName,\n      parameters,\n      options\n    );\n    return poller.pollUntilDone();\n  }\n\n  /**\n   * Deletes an Image.\n   * @param resourceGroupName The name of the resource group.\n   * @param imageName The name of the image.\n   * @param options The options parameters.\n   */\n  async beginDelete(\n    resourceGroupName: string,\n    imageName: string,\n    options?: ImagesDeleteOptionalParams\n  ): Promise<PollerLike<PollOperationState<void>, void>> {\n    const directSendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ): Promise<void> => {\n      return this.client.sendOperationRequest(args, spec);\n    };\n    const sendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ) => {\n      let currentRawResponse:\n        | coreClient.FullOperationResponse\n        | undefined = undefined;\n      const providedCallback = args.options?.onResponse;\n      const callback: coreClient.RawResponseCallback = (\n        rawResponse: coreClient.FullOperationResponse,\n        flatResponse: unknown\n      ) => {\n        currentRawResponse = rawResponse;\n        providedCallback?.(rawResponse, flatResponse);\n      };\n      const updatedArgs = {\n        ...args,\n        options: {\n          ...args.options,\n          onResponse: callback\n        }\n      };\n      const flatResponse = await directSendOperation(updatedArgs, spec);\n      return {\n        flatResponse,\n        rawResponse: {\n          statusCode: currentRawResponse!.status,\n          body: currentRawResponse!.parsedBody,\n          headers: currentRawResponse!.headers.toJSON()\n        }\n      };\n    };\n\n    const lro = new LroImpl(\n      sendOperation,\n      { resourceGroupName, imageName, options },\n      deleteOperationSpec\n    );\n    return new LroEngine(lro, {\n      resumeFrom: options?.resumeFrom,\n      intervalInMs: options?.updateIntervalInMs\n    });\n  }\n\n  /**\n   * Deletes an Image.\n   * @param resourceGroupName The name of the resource group.\n   * @param imageName The name of the image.\n   * @param options The options parameters.\n   */\n  async beginDeleteAndWait(\n    resourceGroupName: string,\n    imageName: string,\n    options?: ImagesDeleteOptionalParams\n  ): Promise<void> {\n    const poller = await this.beginDelete(\n      resourceGroupName,\n      imageName,\n      options\n    );\n    return poller.pollUntilDone();\n  }\n\n  /**\n   * Gets an image.\n   * @param resourceGroupName The name of the resource group.\n   * @param imageName The name of the image.\n   * @param options The options parameters.\n   */\n  get(\n    resourceGroupName: string,\n    imageName: string,\n    options?: ImagesGetOptionalParams\n  ): Promise<ImagesGetResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, imageName, options },\n      getOperationSpec\n    );\n  }\n\n  /**\n   * Gets the list of images under a resource group.\n   * @param resourceGroupName The name of the resource group.\n   * @param options The options parameters.\n   */\n  private _listByResourceGroup(\n    resourceGroupName: string,\n    options?: ImagesListByResourceGroupOptionalParams\n  ): Promise<ImagesListByResourceGroupResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, options },\n      listByResourceGroupOperationSpec\n    );\n  }\n\n  /**\n   * Gets the list of Images in the subscription. Use nextLink property in the response to get the next\n   * page of Images. Do this till nextLink is null to fetch all the Images.\n   * @param options The options parameters.\n   */\n  private _list(\n    options?: ImagesListOptionalParams\n  ): Promise<ImagesListResponse> {\n    return this.client.sendOperationRequest({ options }, listOperationSpec);\n  }\n\n  /**\n   * ListByResourceGroupNext\n   * @param resourceGroupName The name of the resource group.\n   * @param nextLink The nextLink from the previous successful call to the ListByResourceGroup method.\n   * @param options The options parameters.\n   */\n  private _listByResourceGroupNext(\n    resourceGroupName: string,\n    nextLink: string,\n    options?: ImagesListByResourceGroupNextOptionalParams\n  ): Promise<ImagesListByResourceGroupNextResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, nextLink, options },\n      listByResourceGroupNextOperationSpec\n    );\n  }\n\n  /**\n   * ListNext\n   * @param nextLink The nextLink from the previous successful call to the List method.\n   * @param options The options parameters.\n   */\n  private _listNext(\n    nextLink: string,\n    options?: ImagesListNextOptionalParams\n  ): Promise<ImagesListNextResponse> {\n    return this.client.sendOperationRequest(\n      { nextLink, options },\n      listNextOperationSpec\n    );\n  }\n}\n// Operation Specifications\nconst serializer = coreClient.createSerializer(Mappers, /* isXml */ false);\n\nconst createOrUpdateOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/images/{imageName}\",\n  httpMethod: \"PUT\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.Image\n    },\n    201: {\n      bodyMapper: Mappers.Image\n    },\n    202: {\n      bodyMapper: Mappers.Image\n    },\n    204: {\n      bodyMapper: Mappers.Image\n    },\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  requestBody: Parameters.parameters19,\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.resourceGroupName,\n    Parameters.subscriptionId,\n    Parameters.imageName\n  ],\n  headerParameters: [Parameters.accept, Parameters.contentType],\n  mediaType: \"json\",\n  serializer\n};\nconst updateOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/images/{imageName}\",\n  httpMethod: \"PATCH\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.Image\n    },\n    201: {\n      bodyMapper: Mappers.Image\n    },\n    202: {\n      bodyMapper: Mappers.Image\n    },\n    204: {\n      bodyMapper: Mappers.Image\n    },\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  requestBody: Parameters.parameters20,\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.resourceGroupName,\n    Parameters.subscriptionId,\n    Parameters.imageName\n  ],\n  headerParameters: [Parameters.accept, Parameters.contentType],\n  mediaType: \"json\",\n  serializer\n};\nconst deleteOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/images/{imageName}\",\n  httpMethod: \"DELETE\",\n  responses: {\n    200: {},\n    201: {},\n    202: {},\n    204: {},\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.resourceGroupName,\n    Parameters.subscriptionId,\n    Parameters.imageName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst getOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/images/{imageName}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.Image\n    },\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  queryParameters: [Parameters.apiVersion, Parameters.expand],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.resourceGroupName,\n    Parameters.subscriptionId,\n    Parameters.imageName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst listByResourceGroupOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/images\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.ImageListResult\n    },\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.resourceGroupName,\n    Parameters.subscriptionId\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst listOperationSpec: coreClient.OperationSpec = {\n  path: \"/subscriptions/{subscriptionId}/providers/Microsoft.Compute/images\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.ImageListResult\n    },\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [Parameters.$host, Parameters.subscriptionId],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst listByResourceGroupNextOperationSpec: coreClient.OperationSpec = {\n  path: \"{nextLink}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.ImageListResult\n    },\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.resourceGroupName,\n    Parameters.subscriptionId,\n    Parameters.nextLink\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst listNextOperationSpec: coreClient.OperationSpec = {\n  path: \"{nextLink}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.ImageListResult\n    },\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.nextLink\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport { PagedAsyncIterableIterator } from \"@azure/core-paging\";\nimport { RestorePointCollections } from \"../operationsInterfaces\";\nimport * as coreClient from \"@azure/core-client\";\nimport * as Mappers from \"../models/mappers\";\nimport * as Parameters from \"../models/parameters\";\nimport { ComputeManagementClient } from \"../computeManagementClient\";\nimport { PollerLike, PollOperationState, LroEngine } from \"@azure/core-lro\";\nimport { LroImpl } from \"../lroImpl\";\nimport {\n  RestorePointCollection,\n  RestorePointCollectionsListNextOptionalParams,\n  RestorePointCollectionsListOptionalParams,\n  RestorePointCollectionsListAllNextOptionalParams,\n  RestorePointCollectionsListAllOptionalParams,\n  RestorePointCollectionsCreateOrUpdateOptionalParams,\n  RestorePointCollectionsCreateOrUpdateResponse,\n  RestorePointCollectionUpdate,\n  RestorePointCollectionsUpdateOptionalParams,\n  RestorePointCollectionsUpdateResponse,\n  RestorePointCollectionsDeleteOptionalParams,\n  RestorePointCollectionsGetOptionalParams,\n  RestorePointCollectionsGetResponse,\n  RestorePointCollectionsListResponse,\n  RestorePointCollectionsListAllResponse,\n  RestorePointCollectionsListNextResponse,\n  RestorePointCollectionsListAllNextResponse\n} from \"../models\";\n\n/// <reference lib=\"esnext.asynciterable\" />\n/** Class containing RestorePointCollections operations. */\nexport class RestorePointCollectionsImpl implements RestorePointCollections {\n  private readonly client: ComputeManagementClient;\n\n  /**\n   * Initialize a new instance of the class RestorePointCollections class.\n   * @param client Reference to the service client\n   */\n  constructor(client: ComputeManagementClient) {\n    this.client = client;\n  }\n\n  /**\n   * Gets the list of restore point collections in a resource group.\n   * @param resourceGroupName The name of the resource group.\n   * @param options The options parameters.\n   */\n  public list(\n    resourceGroupName: string,\n    options?: RestorePointCollectionsListOptionalParams\n  ): PagedAsyncIterableIterator<RestorePointCollection> {\n    const iter = this.listPagingAll(resourceGroupName, options);\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: () => {\n        return this.listPagingPage(resourceGroupName, options);\n      }\n    };\n  }\n\n  private async *listPagingPage(\n    resourceGroupName: string,\n    options?: RestorePointCollectionsListOptionalParams\n  ): AsyncIterableIterator<RestorePointCollection[]> {\n    let result = await this._list(resourceGroupName, options);\n    yield result.value || [];\n    let continuationToken = result.nextLink;\n    while (continuationToken) {\n      result = await this._listNext(\n        resourceGroupName,\n        continuationToken,\n        options\n      );\n      continuationToken = result.nextLink;\n      yield result.value || [];\n    }\n  }\n\n  private async *listPagingAll(\n    resourceGroupName: string,\n    options?: RestorePointCollectionsListOptionalParams\n  ): AsyncIterableIterator<RestorePointCollection> {\n    for await (const page of this.listPagingPage(resourceGroupName, options)) {\n      yield* page;\n    }\n  }\n\n  /**\n   * Gets the list of restore point collections in the subscription. Use nextLink property in the\n   * response to get the next page of restore point collections. Do this till nextLink is not null to\n   * fetch all the restore point collections.\n   * @param options The options parameters.\n   */\n  public listAll(\n    options?: RestorePointCollectionsListAllOptionalParams\n  ): PagedAsyncIterableIterator<RestorePointCollection> {\n    const iter = this.listAllPagingAll(options);\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: () => {\n        return this.listAllPagingPage(options);\n      }\n    };\n  }\n\n  private async *listAllPagingPage(\n    options?: RestorePointCollectionsListAllOptionalParams\n  ): AsyncIterableIterator<RestorePointCollection[]> {\n    let result = await this._listAll(options);\n    yield result.value || [];\n    let continuationToken = result.nextLink;\n    while (continuationToken) {\n      result = await this._listAllNext(continuationToken, options);\n      continuationToken = result.nextLink;\n      yield result.value || [];\n    }\n  }\n\n  private async *listAllPagingAll(\n    options?: RestorePointCollectionsListAllOptionalParams\n  ): AsyncIterableIterator<RestorePointCollection> {\n    for await (const page of this.listAllPagingPage(options)) {\n      yield* page;\n    }\n  }\n\n  /**\n   * The operation to create or update the restore point collection. Please refer to\n   * https://aka.ms/RestorePoints for more details. When updating a restore point collection, only tags\n   * may be modified.\n   * @param resourceGroupName The name of the resource group.\n   * @param restorePointCollectionName The name of the restore point collection.\n   * @param parameters Parameters supplied to the Create or Update restore point collection operation.\n   * @param options The options parameters.\n   */\n  createOrUpdate(\n    resourceGroupName: string,\n    restorePointCollectionName: string,\n    parameters: RestorePointCollection,\n    options?: RestorePointCollectionsCreateOrUpdateOptionalParams\n  ): Promise<RestorePointCollectionsCreateOrUpdateResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, restorePointCollectionName, parameters, options },\n      createOrUpdateOperationSpec\n    );\n  }\n\n  /**\n   * The operation to update the restore point collection.\n   * @param resourceGroupName The name of the resource group.\n   * @param restorePointCollectionName The name of the restore point collection.\n   * @param parameters Parameters supplied to the Update restore point collection operation.\n   * @param options The options parameters.\n   */\n  update(\n    resourceGroupName: string,\n    restorePointCollectionName: string,\n    parameters: RestorePointCollectionUpdate,\n    options?: RestorePointCollectionsUpdateOptionalParams\n  ): Promise<RestorePointCollectionsUpdateResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, restorePointCollectionName, parameters, options },\n      updateOperationSpec\n    );\n  }\n\n  /**\n   * The operation to delete the restore point collection. This operation will also delete all the\n   * contained restore points.\n   * @param resourceGroupName The name of the resource group.\n   * @param restorePointCollectionName The name of the Restore Point Collection.\n   * @param options The options parameters.\n   */\n  async beginDelete(\n    resourceGroupName: string,\n    restorePointCollectionName: string,\n    options?: RestorePointCollectionsDeleteOptionalParams\n  ): Promise<PollerLike<PollOperationState<void>, void>> {\n    const directSendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ): Promise<void> => {\n      return this.client.sendOperationRequest(args, spec);\n    };\n    const sendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ) => {\n      let currentRawResponse:\n        | coreClient.FullOperationResponse\n        | undefined = undefined;\n      const providedCallback = args.options?.onResponse;\n      const callback: coreClient.RawResponseCallback = (\n        rawResponse: coreClient.FullOperationResponse,\n        flatResponse: unknown\n      ) => {\n        currentRawResponse = rawResponse;\n        providedCallback?.(rawResponse, flatResponse);\n      };\n      const updatedArgs = {\n        ...args,\n        options: {\n          ...args.options,\n          onResponse: callback\n        }\n      };\n      const flatResponse = await directSendOperation(updatedArgs, spec);\n      return {\n        flatResponse,\n        rawResponse: {\n          statusCode: currentRawResponse!.status,\n          body: currentRawResponse!.parsedBody,\n          headers: currentRawResponse!.headers.toJSON()\n        }\n      };\n    };\n\n    const lro = new LroImpl(\n      sendOperation,\n      { resourceGroupName, restorePointCollectionName, options },\n      deleteOperationSpec\n    );\n    return new LroEngine(lro, {\n      resumeFrom: options?.resumeFrom,\n      intervalInMs: options?.updateIntervalInMs\n    });\n  }\n\n  /**\n   * The operation to delete the restore point collection. This operation will also delete all the\n   * contained restore points.\n   * @param resourceGroupName The name of the resource group.\n   * @param restorePointCollectionName The name of the Restore Point Collection.\n   * @param options The options parameters.\n   */\n  async beginDeleteAndWait(\n    resourceGroupName: string,\n    restorePointCollectionName: string,\n    options?: RestorePointCollectionsDeleteOptionalParams\n  ): Promise<void> {\n    const poller = await this.beginDelete(\n      resourceGroupName,\n      restorePointCollectionName,\n      options\n    );\n    return poller.pollUntilDone();\n  }\n\n  /**\n   * The operation to get the restore point collection.\n   * @param resourceGroupName The name of the resource group.\n   * @param restorePointCollectionName The name of the restore point collection.\n   * @param options The options parameters.\n   */\n  get(\n    resourceGroupName: string,\n    restorePointCollectionName: string,\n    options?: RestorePointCollectionsGetOptionalParams\n  ): Promise<RestorePointCollectionsGetResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, restorePointCollectionName, options },\n      getOperationSpec\n    );\n  }\n\n  /**\n   * Gets the list of restore point collections in a resource group.\n   * @param resourceGroupName The name of the resource group.\n   * @param options The options parameters.\n   */\n  private _list(\n    resourceGroupName: string,\n    options?: RestorePointCollectionsListOptionalParams\n  ): Promise<RestorePointCollectionsListResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, options },\n      listOperationSpec\n    );\n  }\n\n  /**\n   * Gets the list of restore point collections in the subscription. Use nextLink property in the\n   * response to get the next page of restore point collections. Do this till nextLink is not null to\n   * fetch all the restore point collections.\n   * @param options The options parameters.\n   */\n  private _listAll(\n    options?: RestorePointCollectionsListAllOptionalParams\n  ): Promise<RestorePointCollectionsListAllResponse> {\n    return this.client.sendOperationRequest({ options }, listAllOperationSpec);\n  }\n\n  /**\n   * ListNext\n   * @param resourceGroupName The name of the resource group.\n   * @param nextLink The nextLink from the previous successful call to the List method.\n   * @param options The options parameters.\n   */\n  private _listNext(\n    resourceGroupName: string,\n    nextLink: string,\n    options?: RestorePointCollectionsListNextOptionalParams\n  ): Promise<RestorePointCollectionsListNextResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, nextLink, options },\n      listNextOperationSpec\n    );\n  }\n\n  /**\n   * ListAllNext\n   * @param nextLink The nextLink from the previous successful call to the ListAll method.\n   * @param options The options parameters.\n   */\n  private _listAllNext(\n    nextLink: string,\n    options?: RestorePointCollectionsListAllNextOptionalParams\n  ): Promise<RestorePointCollectionsListAllNextResponse> {\n    return this.client.sendOperationRequest(\n      { nextLink, options },\n      listAllNextOperationSpec\n    );\n  }\n}\n// Operation Specifications\nconst serializer = coreClient.createSerializer(Mappers, /* isXml */ false);\n\nconst createOrUpdateOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/restorePointCollections/{restorePointCollectionName}\",\n  httpMethod: \"PUT\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.RestorePointCollection\n    },\n    201: {\n      bodyMapper: Mappers.RestorePointCollection\n    },\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  requestBody: Parameters.parameters21,\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.resourceGroupName,\n    Parameters.subscriptionId,\n    Parameters.restorePointCollectionName\n  ],\n  headerParameters: [Parameters.accept, Parameters.contentType],\n  mediaType: \"json\",\n  serializer\n};\nconst updateOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/restorePointCollections/{restorePointCollectionName}\",\n  httpMethod: \"PATCH\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.RestorePointCollection\n    },\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  requestBody: Parameters.parameters22,\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.resourceGroupName,\n    Parameters.subscriptionId,\n    Parameters.restorePointCollectionName\n  ],\n  headerParameters: [Parameters.accept, Parameters.contentType],\n  mediaType: \"json\",\n  serializer\n};\nconst deleteOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/restorePointCollections/{restorePointCollectionName}\",\n  httpMethod: \"DELETE\",\n  responses: {\n    200: {},\n    201: {},\n    202: {},\n    204: {},\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.resourceGroupName,\n    Parameters.subscriptionId,\n    Parameters.restorePointCollectionName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst getOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/restorePointCollections/{restorePointCollectionName}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.RestorePointCollection\n    },\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  queryParameters: [Parameters.apiVersion, Parameters.expand3],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.resourceGroupName,\n    Parameters.subscriptionId,\n    Parameters.restorePointCollectionName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst listOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/restorePointCollections\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.RestorePointCollectionListResult\n    },\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.resourceGroupName,\n    Parameters.subscriptionId\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst listAllOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/providers/Microsoft.Compute/restorePointCollections\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.RestorePointCollectionListResult\n    },\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [Parameters.$host, Parameters.subscriptionId],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst listNextOperationSpec: coreClient.OperationSpec = {\n  path: \"{nextLink}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.RestorePointCollectionListResult\n    },\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.resourceGroupName,\n    Parameters.subscriptionId,\n    Parameters.nextLink\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst listAllNextOperationSpec: coreClient.OperationSpec = {\n  path: \"{nextLink}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.RestorePointCollectionListResult\n    },\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.nextLink\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport { RestorePoints } from \"../operationsInterfaces\";\nimport * as coreClient from \"@azure/core-client\";\nimport * as Mappers from \"../models/mappers\";\nimport * as Parameters from \"../models/parameters\";\nimport { ComputeManagementClient } from \"../computeManagementClient\";\nimport { PollerLike, PollOperationState, LroEngine } from \"@azure/core-lro\";\nimport { LroImpl } from \"../lroImpl\";\nimport {\n  RestorePoint,\n  RestorePointsCreateOptionalParams,\n  RestorePointsCreateResponse,\n  RestorePointsDeleteOptionalParams,\n  RestorePointsGetOptionalParams,\n  RestorePointsGetResponse\n} from \"../models\";\n\n/** Class containing RestorePoints operations. */\nexport class RestorePointsImpl implements RestorePoints {\n  private readonly client: ComputeManagementClient;\n\n  /**\n   * Initialize a new instance of the class RestorePoints class.\n   * @param client Reference to the service client\n   */\n  constructor(client: ComputeManagementClient) {\n    this.client = client;\n  }\n\n  /**\n   * The operation to create the restore point. Updating properties of an existing restore point is not\n   * allowed\n   * @param resourceGroupName The name of the resource group.\n   * @param restorePointCollectionName The name of the restore point collection.\n   * @param restorePointName The name of the restore point.\n   * @param parameters Parameters supplied to the Create restore point operation.\n   * @param options The options parameters.\n   */\n  async beginCreate(\n    resourceGroupName: string,\n    restorePointCollectionName: string,\n    restorePointName: string,\n    parameters: RestorePoint,\n    options?: RestorePointsCreateOptionalParams\n  ): Promise<\n    PollerLike<\n      PollOperationState<RestorePointsCreateResponse>,\n      RestorePointsCreateResponse\n    >\n  > {\n    const directSendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ): Promise<RestorePointsCreateResponse> => {\n      return this.client.sendOperationRequest(args, spec);\n    };\n    const sendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ) => {\n      let currentRawResponse:\n        | coreClient.FullOperationResponse\n        | undefined = undefined;\n      const providedCallback = args.options?.onResponse;\n      const callback: coreClient.RawResponseCallback = (\n        rawResponse: coreClient.FullOperationResponse,\n        flatResponse: unknown\n      ) => {\n        currentRawResponse = rawResponse;\n        providedCallback?.(rawResponse, flatResponse);\n      };\n      const updatedArgs = {\n        ...args,\n        options: {\n          ...args.options,\n          onResponse: callback\n        }\n      };\n      const flatResponse = await directSendOperation(updatedArgs, spec);\n      return {\n        flatResponse,\n        rawResponse: {\n          statusCode: currentRawResponse!.status,\n          body: currentRawResponse!.parsedBody,\n          headers: currentRawResponse!.headers.toJSON()\n        }\n      };\n    };\n\n    const lro = new LroImpl(\n      sendOperation,\n      {\n        resourceGroupName,\n        restorePointCollectionName,\n        restorePointName,\n        parameters,\n        options\n      },\n      createOperationSpec\n    );\n    return new LroEngine(lro, {\n      resumeFrom: options?.resumeFrom,\n      intervalInMs: options?.updateIntervalInMs\n    });\n  }\n\n  /**\n   * The operation to create the restore point. Updating properties of an existing restore point is not\n   * allowed\n   * @param resourceGroupName The name of the resource group.\n   * @param restorePointCollectionName The name of the restore point collection.\n   * @param restorePointName The name of the restore point.\n   * @param parameters Parameters supplied to the Create restore point operation.\n   * @param options The options parameters.\n   */\n  async beginCreateAndWait(\n    resourceGroupName: string,\n    restorePointCollectionName: string,\n    restorePointName: string,\n    parameters: RestorePoint,\n    options?: RestorePointsCreateOptionalParams\n  ): Promise<RestorePointsCreateResponse> {\n    const poller = await this.beginCreate(\n      resourceGroupName,\n      restorePointCollectionName,\n      restorePointName,\n      parameters,\n      options\n    );\n    return poller.pollUntilDone();\n  }\n\n  /**\n   * The operation to delete the restore point.\n   * @param resourceGroupName The name of the resource group.\n   * @param restorePointCollectionName The name of the Restore Point Collection.\n   * @param restorePointName The name of the restore point.\n   * @param options The options parameters.\n   */\n  async beginDelete(\n    resourceGroupName: string,\n    restorePointCollectionName: string,\n    restorePointName: string,\n    options?: RestorePointsDeleteOptionalParams\n  ): Promise<PollerLike<PollOperationState<void>, void>> {\n    const directSendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ): Promise<void> => {\n      return this.client.sendOperationRequest(args, spec);\n    };\n    const sendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ) => {\n      let currentRawResponse:\n        | coreClient.FullOperationResponse\n        | undefined = undefined;\n      const providedCallback = args.options?.onResponse;\n      const callback: coreClient.RawResponseCallback = (\n        rawResponse: coreClient.FullOperationResponse,\n        flatResponse: unknown\n      ) => {\n        currentRawResponse = rawResponse;\n        providedCallback?.(rawResponse, flatResponse);\n      };\n      const updatedArgs = {\n        ...args,\n        options: {\n          ...args.options,\n          onResponse: callback\n        }\n      };\n      const flatResponse = await directSendOperation(updatedArgs, spec);\n      return {\n        flatResponse,\n        rawResponse: {\n          statusCode: currentRawResponse!.status,\n          body: currentRawResponse!.parsedBody,\n          headers: currentRawResponse!.headers.toJSON()\n        }\n      };\n    };\n\n    const lro = new LroImpl(\n      sendOperation,\n      {\n        resourceGroupName,\n        restorePointCollectionName,\n        restorePointName,\n        options\n      },\n      deleteOperationSpec\n    );\n    return new LroEngine(lro, {\n      resumeFrom: options?.resumeFrom,\n      intervalInMs: options?.updateIntervalInMs\n    });\n  }\n\n  /**\n   * The operation to delete the restore point.\n   * @param resourceGroupName The name of the resource group.\n   * @param restorePointCollectionName The name of the Restore Point Collection.\n   * @param restorePointName The name of the restore point.\n   * @param options The options parameters.\n   */\n  async beginDeleteAndWait(\n    resourceGroupName: string,\n    restorePointCollectionName: string,\n    restorePointName: string,\n    options?: RestorePointsDeleteOptionalParams\n  ): Promise<void> {\n    const poller = await this.beginDelete(\n      resourceGroupName,\n      restorePointCollectionName,\n      restorePointName,\n      options\n    );\n    return poller.pollUntilDone();\n  }\n\n  /**\n   * The operation to get the restore point.\n   * @param resourceGroupName The name of the resource group.\n   * @param restorePointCollectionName The name of the restore point collection.\n   * @param restorePointName The name of the restore point.\n   * @param options The options parameters.\n   */\n  get(\n    resourceGroupName: string,\n    restorePointCollectionName: string,\n    restorePointName: string,\n    options?: RestorePointsGetOptionalParams\n  ): Promise<RestorePointsGetResponse> {\n    return this.client.sendOperationRequest(\n      {\n        resourceGroupName,\n        restorePointCollectionName,\n        restorePointName,\n        options\n      },\n      getOperationSpec\n    );\n  }\n}\n// Operation Specifications\nconst serializer = coreClient.createSerializer(Mappers, /* isXml */ false);\n\nconst createOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/restorePointCollections/{restorePointCollectionName}/restorePoints/{restorePointName}\",\n  httpMethod: \"PUT\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.RestorePoint\n    },\n    201: {\n      bodyMapper: Mappers.RestorePoint\n    },\n    202: {\n      bodyMapper: Mappers.RestorePoint\n    },\n    204: {\n      bodyMapper: Mappers.RestorePoint\n    },\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  requestBody: Parameters.parameters23,\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.resourceGroupName,\n    Parameters.subscriptionId,\n    Parameters.restorePointCollectionName,\n    Parameters.restorePointName\n  ],\n  headerParameters: [Parameters.accept, Parameters.contentType],\n  mediaType: \"json\",\n  serializer\n};\nconst deleteOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/restorePointCollections/{restorePointCollectionName}/restorePoints/{restorePointName}\",\n  httpMethod: \"DELETE\",\n  responses: {\n    200: {},\n    201: {},\n    202: {},\n    204: {},\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.resourceGroupName,\n    Parameters.subscriptionId,\n    Parameters.restorePointCollectionName,\n    Parameters.restorePointName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst getOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/restorePointCollections/{restorePointCollectionName}/restorePoints/{restorePointName}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.RestorePoint\n    },\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  queryParameters: [Parameters.apiVersion, Parameters.expand4],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.resourceGroupName,\n    Parameters.subscriptionId,\n    Parameters.restorePointCollectionName,\n    Parameters.restorePointName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport { PagedAsyncIterableIterator } from \"@azure/core-paging\";\nimport { CapacityReservationGroups } from \"../operationsInterfaces\";\nimport * as coreClient from \"@azure/core-client\";\nimport * as Mappers from \"../models/mappers\";\nimport * as Parameters from \"../models/parameters\";\nimport { ComputeManagementClient } from \"../computeManagementClient\";\nimport {\n  CapacityReservationGroup,\n  CapacityReservationGroupsListByResourceGroupNextOptionalParams,\n  CapacityReservationGroupsListByResourceGroupOptionalParams,\n  CapacityReservationGroupsListBySubscriptionNextOptionalParams,\n  CapacityReservationGroupsListBySubscriptionOptionalParams,\n  CapacityReservationGroupsCreateOrUpdateOptionalParams,\n  CapacityReservationGroupsCreateOrUpdateResponse,\n  CapacityReservationGroupUpdate,\n  CapacityReservationGroupsUpdateOptionalParams,\n  CapacityReservationGroupsUpdateResponse,\n  CapacityReservationGroupsDeleteOptionalParams,\n  CapacityReservationGroupsGetOptionalParams,\n  CapacityReservationGroupsGetResponse,\n  CapacityReservationGroupsListByResourceGroupResponse,\n  CapacityReservationGroupsListBySubscriptionResponse,\n  CapacityReservationGroupsListByResourceGroupNextResponse,\n  CapacityReservationGroupsListBySubscriptionNextResponse\n} from \"../models\";\n\n/// <reference lib=\"esnext.asynciterable\" />\n/** Class containing CapacityReservationGroups operations. */\nexport class CapacityReservationGroupsImpl\n  implements CapacityReservationGroups {\n  private readonly client: ComputeManagementClient;\n\n  /**\n   * Initialize a new instance of the class CapacityReservationGroups class.\n   * @param client Reference to the service client\n   */\n  constructor(client: ComputeManagementClient) {\n    this.client = client;\n  }\n\n  /**\n   * Lists all of the capacity reservation groups in the specified resource group. Use the nextLink\n   * property in the response to get the next page of capacity reservation groups.\n   * @param resourceGroupName The name of the resource group.\n   * @param options The options parameters.\n   */\n  public listByResourceGroup(\n    resourceGroupName: string,\n    options?: CapacityReservationGroupsListByResourceGroupOptionalParams\n  ): PagedAsyncIterableIterator<CapacityReservationGroup> {\n    const iter = this.listByResourceGroupPagingAll(resourceGroupName, options);\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: () => {\n        return this.listByResourceGroupPagingPage(resourceGroupName, options);\n      }\n    };\n  }\n\n  private async *listByResourceGroupPagingPage(\n    resourceGroupName: string,\n    options?: CapacityReservationGroupsListByResourceGroupOptionalParams\n  ): AsyncIterableIterator<CapacityReservationGroup[]> {\n    let result = await this._listByResourceGroup(resourceGroupName, options);\n    yield result.value || [];\n    let continuationToken = result.nextLink;\n    while (continuationToken) {\n      result = await this._listByResourceGroupNext(\n        resourceGroupName,\n        continuationToken,\n        options\n      );\n      continuationToken = result.nextLink;\n      yield result.value || [];\n    }\n  }\n\n  private async *listByResourceGroupPagingAll(\n    resourceGroupName: string,\n    options?: CapacityReservationGroupsListByResourceGroupOptionalParams\n  ): AsyncIterableIterator<CapacityReservationGroup> {\n    for await (const page of this.listByResourceGroupPagingPage(\n      resourceGroupName,\n      options\n    )) {\n      yield* page;\n    }\n  }\n\n  /**\n   * Lists all of the capacity reservation groups in the subscription. Use the nextLink property in the\n   * response to get the next page of capacity reservation groups.\n   * @param options The options parameters.\n   */\n  public listBySubscription(\n    options?: CapacityReservationGroupsListBySubscriptionOptionalParams\n  ): PagedAsyncIterableIterator<CapacityReservationGroup> {\n    const iter = this.listBySubscriptionPagingAll(options);\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: () => {\n        return this.listBySubscriptionPagingPage(options);\n      }\n    };\n  }\n\n  private async *listBySubscriptionPagingPage(\n    options?: CapacityReservationGroupsListBySubscriptionOptionalParams\n  ): AsyncIterableIterator<CapacityReservationGroup[]> {\n    let result = await this._listBySubscription(options);\n    yield result.value || [];\n    let continuationToken = result.nextLink;\n    while (continuationToken) {\n      result = await this._listBySubscriptionNext(continuationToken, options);\n      continuationToken = result.nextLink;\n      yield result.value || [];\n    }\n  }\n\n  private async *listBySubscriptionPagingAll(\n    options?: CapacityReservationGroupsListBySubscriptionOptionalParams\n  ): AsyncIterableIterator<CapacityReservationGroup> {\n    for await (const page of this.listBySubscriptionPagingPage(options)) {\n      yield* page;\n    }\n  }\n\n  /**\n   * The operation to create or update a capacity reservation group. When updating a capacity reservation\n   * group, only tags may be modified. Please refer to https://aka.ms/CapacityReservation for more\n   * details.\n   * @param resourceGroupName The name of the resource group.\n   * @param capacityReservationGroupName The name of the capacity reservation group.\n   * @param parameters Parameters supplied to the Create capacity reservation Group.\n   * @param options The options parameters.\n   */\n  createOrUpdate(\n    resourceGroupName: string,\n    capacityReservationGroupName: string,\n    parameters: CapacityReservationGroup,\n    options?: CapacityReservationGroupsCreateOrUpdateOptionalParams\n  ): Promise<CapacityReservationGroupsCreateOrUpdateResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, capacityReservationGroupName, parameters, options },\n      createOrUpdateOperationSpec\n    );\n  }\n\n  /**\n   * The operation to update a capacity reservation group. When updating a capacity reservation group,\n   * only tags may be modified.\n   * @param resourceGroupName The name of the resource group.\n   * @param capacityReservationGroupName The name of the capacity reservation group.\n   * @param parameters Parameters supplied to the Update capacity reservation Group operation.\n   * @param options The options parameters.\n   */\n  update(\n    resourceGroupName: string,\n    capacityReservationGroupName: string,\n    parameters: CapacityReservationGroupUpdate,\n    options?: CapacityReservationGroupsUpdateOptionalParams\n  ): Promise<CapacityReservationGroupsUpdateResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, capacityReservationGroupName, parameters, options },\n      updateOperationSpec\n    );\n  }\n\n  /**\n   * The operation to delete a capacity reservation group. This operation is allowed only if all the\n   * associated resources are disassociated from the reservation group and all capacity reservations\n   * under the reservation group have also been deleted. Please refer to\n   * https://aka.ms/CapacityReservation for more details.\n   * @param resourceGroupName The name of the resource group.\n   * @param capacityReservationGroupName The name of the capacity reservation group.\n   * @param options The options parameters.\n   */\n  delete(\n    resourceGroupName: string,\n    capacityReservationGroupName: string,\n    options?: CapacityReservationGroupsDeleteOptionalParams\n  ): Promise<void> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, capacityReservationGroupName, options },\n      deleteOperationSpec\n    );\n  }\n\n  /**\n   * The operation that retrieves information about a capacity reservation group.\n   * @param resourceGroupName The name of the resource group.\n   * @param capacityReservationGroupName The name of the capacity reservation group.\n   * @param options The options parameters.\n   */\n  get(\n    resourceGroupName: string,\n    capacityReservationGroupName: string,\n    options?: CapacityReservationGroupsGetOptionalParams\n  ): Promise<CapacityReservationGroupsGetResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, capacityReservationGroupName, options },\n      getOperationSpec\n    );\n  }\n\n  /**\n   * Lists all of the capacity reservation groups in the specified resource group. Use the nextLink\n   * property in the response to get the next page of capacity reservation groups.\n   * @param resourceGroupName The name of the resource group.\n   * @param options The options parameters.\n   */\n  private _listByResourceGroup(\n    resourceGroupName: string,\n    options?: CapacityReservationGroupsListByResourceGroupOptionalParams\n  ): Promise<CapacityReservationGroupsListByResourceGroupResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, options },\n      listByResourceGroupOperationSpec\n    );\n  }\n\n  /**\n   * Lists all of the capacity reservation groups in the subscription. Use the nextLink property in the\n   * response to get the next page of capacity reservation groups.\n   * @param options The options parameters.\n   */\n  private _listBySubscription(\n    options?: CapacityReservationGroupsListBySubscriptionOptionalParams\n  ): Promise<CapacityReservationGroupsListBySubscriptionResponse> {\n    return this.client.sendOperationRequest(\n      { options },\n      listBySubscriptionOperationSpec\n    );\n  }\n\n  /**\n   * ListByResourceGroupNext\n   * @param resourceGroupName The name of the resource group.\n   * @param nextLink The nextLink from the previous successful call to the ListByResourceGroup method.\n   * @param options The options parameters.\n   */\n  private _listByResourceGroupNext(\n    resourceGroupName: string,\n    nextLink: string,\n    options?: CapacityReservationGroupsListByResourceGroupNextOptionalParams\n  ): Promise<CapacityReservationGroupsListByResourceGroupNextResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, nextLink, options },\n      listByResourceGroupNextOperationSpec\n    );\n  }\n\n  /**\n   * ListBySubscriptionNext\n   * @param nextLink The nextLink from the previous successful call to the ListBySubscription method.\n   * @param options The options parameters.\n   */\n  private _listBySubscriptionNext(\n    nextLink: string,\n    options?: CapacityReservationGroupsListBySubscriptionNextOptionalParams\n  ): Promise<CapacityReservationGroupsListBySubscriptionNextResponse> {\n    return this.client.sendOperationRequest(\n      { nextLink, options },\n      listBySubscriptionNextOperationSpec\n    );\n  }\n}\n// Operation Specifications\nconst serializer = coreClient.createSerializer(Mappers, /* isXml */ false);\n\nconst createOrUpdateOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/capacityReservationGroups/{capacityReservationGroupName}\",\n  httpMethod: \"PUT\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.CapacityReservationGroup\n    },\n    201: {\n      bodyMapper: Mappers.CapacityReservationGroup\n    },\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  requestBody: Parameters.parameters24,\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.resourceGroupName,\n    Parameters.subscriptionId,\n    Parameters.capacityReservationGroupName\n  ],\n  headerParameters: [Parameters.accept, Parameters.contentType],\n  mediaType: \"json\",\n  serializer\n};\nconst updateOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/capacityReservationGroups/{capacityReservationGroupName}\",\n  httpMethod: \"PATCH\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.CapacityReservationGroup\n    },\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  requestBody: Parameters.parameters25,\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.resourceGroupName,\n    Parameters.subscriptionId,\n    Parameters.capacityReservationGroupName\n  ],\n  headerParameters: [Parameters.accept, Parameters.contentType],\n  mediaType: \"json\",\n  serializer\n};\nconst deleteOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/capacityReservationGroups/{capacityReservationGroupName}\",\n  httpMethod: \"DELETE\",\n  responses: {\n    200: {},\n    204: {},\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.resourceGroupName,\n    Parameters.subscriptionId,\n    Parameters.capacityReservationGroupName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst getOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/capacityReservationGroups/{capacityReservationGroupName}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.CapacityReservationGroup\n    },\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  queryParameters: [Parameters.apiVersion, Parameters.expand5],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.resourceGroupName,\n    Parameters.subscriptionId,\n    Parameters.capacityReservationGroupName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst listByResourceGroupOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/capacityReservationGroups\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.CapacityReservationGroupListResult\n    },\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  queryParameters: [Parameters.apiVersion, Parameters.expand6],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.resourceGroupName,\n    Parameters.subscriptionId\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst listBySubscriptionOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/providers/Microsoft.Compute/capacityReservationGroups\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.CapacityReservationGroupListResult\n    },\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  queryParameters: [Parameters.apiVersion, Parameters.expand6],\n  urlParameters: [Parameters.$host, Parameters.subscriptionId],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst listByResourceGroupNextOperationSpec: coreClient.OperationSpec = {\n  path: \"{nextLink}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.CapacityReservationGroupListResult\n    },\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  queryParameters: [Parameters.apiVersion, Parameters.expand6],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.resourceGroupName,\n    Parameters.subscriptionId,\n    Parameters.nextLink\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst listBySubscriptionNextOperationSpec: coreClient.OperationSpec = {\n  path: \"{nextLink}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.CapacityReservationGroupListResult\n    },\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  queryParameters: [Parameters.apiVersion, Parameters.expand6],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.nextLink\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport { PagedAsyncIterableIterator } from \"@azure/core-paging\";\nimport { CapacityReservations } from \"../operationsInterfaces\";\nimport * as coreClient from \"@azure/core-client\";\nimport * as Mappers from \"../models/mappers\";\nimport * as Parameters from \"../models/parameters\";\nimport { ComputeManagementClient } from \"../computeManagementClient\";\nimport { PollerLike, PollOperationState, LroEngine } from \"@azure/core-lro\";\nimport { LroImpl } from \"../lroImpl\";\nimport {\n  CapacityReservation,\n  CapacityReservationsListByCapacityReservationGroupNextOptionalParams,\n  CapacityReservationsListByCapacityReservationGroupOptionalParams,\n  CapacityReservationsCreateOrUpdateOptionalParams,\n  CapacityReservationsCreateOrUpdateResponse,\n  CapacityReservationUpdate,\n  CapacityReservationsUpdateOptionalParams,\n  CapacityReservationsUpdateResponse,\n  CapacityReservationsDeleteOptionalParams,\n  CapacityReservationsGetOptionalParams,\n  CapacityReservationsGetResponse,\n  CapacityReservationsListByCapacityReservationGroupResponse,\n  CapacityReservationsListByCapacityReservationGroupNextResponse\n} from \"../models\";\n\n/// <reference lib=\"esnext.asynciterable\" />\n/** Class containing CapacityReservations operations. */\nexport class CapacityReservationsImpl implements CapacityReservations {\n  private readonly client: ComputeManagementClient;\n\n  /**\n   * Initialize a new instance of the class CapacityReservations class.\n   * @param client Reference to the service client\n   */\n  constructor(client: ComputeManagementClient) {\n    this.client = client;\n  }\n\n  /**\n   * Lists all of the capacity reservations in the specified capacity reservation group. Use the nextLink\n   * property in the response to get the next page of capacity reservations.\n   * @param resourceGroupName The name of the resource group.\n   * @param capacityReservationGroupName The name of the capacity reservation group.\n   * @param options The options parameters.\n   */\n  public listByCapacityReservationGroup(\n    resourceGroupName: string,\n    capacityReservationGroupName: string,\n    options?: CapacityReservationsListByCapacityReservationGroupOptionalParams\n  ): PagedAsyncIterableIterator<CapacityReservation> {\n    const iter = this.listByCapacityReservationGroupPagingAll(\n      resourceGroupName,\n      capacityReservationGroupName,\n      options\n    );\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: () => {\n        return this.listByCapacityReservationGroupPagingPage(\n          resourceGroupName,\n          capacityReservationGroupName,\n          options\n        );\n      }\n    };\n  }\n\n  private async *listByCapacityReservationGroupPagingPage(\n    resourceGroupName: string,\n    capacityReservationGroupName: string,\n    options?: CapacityReservationsListByCapacityReservationGroupOptionalParams\n  ): AsyncIterableIterator<CapacityReservation[]> {\n    let result = await this._listByCapacityReservationGroup(\n      resourceGroupName,\n      capacityReservationGroupName,\n      options\n    );\n    yield result.value || [];\n    let continuationToken = result.nextLink;\n    while (continuationToken) {\n      result = await this._listByCapacityReservationGroupNext(\n        resourceGroupName,\n        capacityReservationGroupName,\n        continuationToken,\n        options\n      );\n      continuationToken = result.nextLink;\n      yield result.value || [];\n    }\n  }\n\n  private async *listByCapacityReservationGroupPagingAll(\n    resourceGroupName: string,\n    capacityReservationGroupName: string,\n    options?: CapacityReservationsListByCapacityReservationGroupOptionalParams\n  ): AsyncIterableIterator<CapacityReservation> {\n    for await (const page of this.listByCapacityReservationGroupPagingPage(\n      resourceGroupName,\n      capacityReservationGroupName,\n      options\n    )) {\n      yield* page;\n    }\n  }\n\n  /**\n   * The operation to create or update a capacity reservation. Please note some properties can be set\n   * only during capacity reservation creation. Please refer to https://aka.ms/CapacityReservation for\n   * more details.\n   * @param resourceGroupName The name of the resource group.\n   * @param capacityReservationGroupName The name of the capacity reservation group.\n   * @param capacityReservationName The name of the capacity reservation.\n   * @param parameters Parameters supplied to the Create capacity reservation.\n   * @param options The options parameters.\n   */\n  async beginCreateOrUpdate(\n    resourceGroupName: string,\n    capacityReservationGroupName: string,\n    capacityReservationName: string,\n    parameters: CapacityReservation,\n    options?: CapacityReservationsCreateOrUpdateOptionalParams\n  ): Promise<\n    PollerLike<\n      PollOperationState<CapacityReservationsCreateOrUpdateResponse>,\n      CapacityReservationsCreateOrUpdateResponse\n    >\n  > {\n    const directSendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ): Promise<CapacityReservationsCreateOrUpdateResponse> => {\n      return this.client.sendOperationRequest(args, spec);\n    };\n    const sendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ) => {\n      let currentRawResponse:\n        | coreClient.FullOperationResponse\n        | undefined = undefined;\n      const providedCallback = args.options?.onResponse;\n      const callback: coreClient.RawResponseCallback = (\n        rawResponse: coreClient.FullOperationResponse,\n        flatResponse: unknown\n      ) => {\n        currentRawResponse = rawResponse;\n        providedCallback?.(rawResponse, flatResponse);\n      };\n      const updatedArgs = {\n        ...args,\n        options: {\n          ...args.options,\n          onResponse: callback\n        }\n      };\n      const flatResponse = await directSendOperation(updatedArgs, spec);\n      return {\n        flatResponse,\n        rawResponse: {\n          statusCode: currentRawResponse!.status,\n          body: currentRawResponse!.parsedBody,\n          headers: currentRawResponse!.headers.toJSON()\n        }\n      };\n    };\n\n    const lro = new LroImpl(\n      sendOperation,\n      {\n        resourceGroupName,\n        capacityReservationGroupName,\n        capacityReservationName,\n        parameters,\n        options\n      },\n      createOrUpdateOperationSpec\n    );\n    return new LroEngine(lro, {\n      resumeFrom: options?.resumeFrom,\n      intervalInMs: options?.updateIntervalInMs\n    });\n  }\n\n  /**\n   * The operation to create or update a capacity reservation. Please note some properties can be set\n   * only during capacity reservation creation. Please refer to https://aka.ms/CapacityReservation for\n   * more details.\n   * @param resourceGroupName The name of the resource group.\n   * @param capacityReservationGroupName The name of the capacity reservation group.\n   * @param capacityReservationName The name of the capacity reservation.\n   * @param parameters Parameters supplied to the Create capacity reservation.\n   * @param options The options parameters.\n   */\n  async beginCreateOrUpdateAndWait(\n    resourceGroupName: string,\n    capacityReservationGroupName: string,\n    capacityReservationName: string,\n    parameters: CapacityReservation,\n    options?: CapacityReservationsCreateOrUpdateOptionalParams\n  ): Promise<CapacityReservationsCreateOrUpdateResponse> {\n    const poller = await this.beginCreateOrUpdate(\n      resourceGroupName,\n      capacityReservationGroupName,\n      capacityReservationName,\n      parameters,\n      options\n    );\n    return poller.pollUntilDone();\n  }\n\n  /**\n   * The operation to update a capacity reservation.\n   * @param resourceGroupName The name of the resource group.\n   * @param capacityReservationGroupName The name of the capacity reservation group.\n   * @param capacityReservationName The name of the capacity reservation.\n   * @param parameters Parameters supplied to the Update capacity reservation operation.\n   * @param options The options parameters.\n   */\n  async beginUpdate(\n    resourceGroupName: string,\n    capacityReservationGroupName: string,\n    capacityReservationName: string,\n    parameters: CapacityReservationUpdate,\n    options?: CapacityReservationsUpdateOptionalParams\n  ): Promise<\n    PollerLike<\n      PollOperationState<CapacityReservationsUpdateResponse>,\n      CapacityReservationsUpdateResponse\n    >\n  > {\n    const directSendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ): Promise<CapacityReservationsUpdateResponse> => {\n      return this.client.sendOperationRequest(args, spec);\n    };\n    const sendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ) => {\n      let currentRawResponse:\n        | coreClient.FullOperationResponse\n        | undefined = undefined;\n      const providedCallback = args.options?.onResponse;\n      const callback: coreClient.RawResponseCallback = (\n        rawResponse: coreClient.FullOperationResponse,\n        flatResponse: unknown\n      ) => {\n        currentRawResponse = rawResponse;\n        providedCallback?.(rawResponse, flatResponse);\n      };\n      const updatedArgs = {\n        ...args,\n        options: {\n          ...args.options,\n          onResponse: callback\n        }\n      };\n      const flatResponse = await directSendOperation(updatedArgs, spec);\n      return {\n        flatResponse,\n        rawResponse: {\n          statusCode: currentRawResponse!.status,\n          body: currentRawResponse!.parsedBody,\n          headers: currentRawResponse!.headers.toJSON()\n        }\n      };\n    };\n\n    const lro = new LroImpl(\n      sendOperation,\n      {\n        resourceGroupName,\n        capacityReservationGroupName,\n        capacityReservationName,\n        parameters,\n        options\n      },\n      updateOperationSpec\n    );\n    return new LroEngine(lro, {\n      resumeFrom: options?.resumeFrom,\n      intervalInMs: options?.updateIntervalInMs\n    });\n  }\n\n  /**\n   * The operation to update a capacity reservation.\n   * @param resourceGroupName The name of the resource group.\n   * @param capacityReservationGroupName The name of the capacity reservation group.\n   * @param capacityReservationName The name of the capacity reservation.\n   * @param parameters Parameters supplied to the Update capacity reservation operation.\n   * @param options The options parameters.\n   */\n  async beginUpdateAndWait(\n    resourceGroupName: string,\n    capacityReservationGroupName: string,\n    capacityReservationName: string,\n    parameters: CapacityReservationUpdate,\n    options?: CapacityReservationsUpdateOptionalParams\n  ): Promise<CapacityReservationsUpdateResponse> {\n    const poller = await this.beginUpdate(\n      resourceGroupName,\n      capacityReservationGroupName,\n      capacityReservationName,\n      parameters,\n      options\n    );\n    return poller.pollUntilDone();\n  }\n\n  /**\n   * The operation to delete a capacity reservation. This operation is allowed only when all the\n   * associated resources are disassociated from the capacity reservation. Please refer to\n   * https://aka.ms/CapacityReservation for more details.\n   * @param resourceGroupName The name of the resource group.\n   * @param capacityReservationGroupName The name of the capacity reservation group.\n   * @param capacityReservationName The name of the capacity reservation.\n   * @param options The options parameters.\n   */\n  async beginDelete(\n    resourceGroupName: string,\n    capacityReservationGroupName: string,\n    capacityReservationName: string,\n    options?: CapacityReservationsDeleteOptionalParams\n  ): Promise<PollerLike<PollOperationState<void>, void>> {\n    const directSendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ): Promise<void> => {\n      return this.client.sendOperationRequest(args, spec);\n    };\n    const sendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ) => {\n      let currentRawResponse:\n        | coreClient.FullOperationResponse\n        | undefined = undefined;\n      const providedCallback = args.options?.onResponse;\n      const callback: coreClient.RawResponseCallback = (\n        rawResponse: coreClient.FullOperationResponse,\n        flatResponse: unknown\n      ) => {\n        currentRawResponse = rawResponse;\n        providedCallback?.(rawResponse, flatResponse);\n      };\n      const updatedArgs = {\n        ...args,\n        options: {\n          ...args.options,\n          onResponse: callback\n        }\n      };\n      const flatResponse = await directSendOperation(updatedArgs, spec);\n      return {\n        flatResponse,\n        rawResponse: {\n          statusCode: currentRawResponse!.status,\n          body: currentRawResponse!.parsedBody,\n          headers: currentRawResponse!.headers.toJSON()\n        }\n      };\n    };\n\n    const lro = new LroImpl(\n      sendOperation,\n      {\n        resourceGroupName,\n        capacityReservationGroupName,\n        capacityReservationName,\n        options\n      },\n      deleteOperationSpec\n    );\n    return new LroEngine(lro, {\n      resumeFrom: options?.resumeFrom,\n      intervalInMs: options?.updateIntervalInMs\n    });\n  }\n\n  /**\n   * The operation to delete a capacity reservation. This operation is allowed only when all the\n   * associated resources are disassociated from the capacity reservation. Please refer to\n   * https://aka.ms/CapacityReservation for more details.\n   * @param resourceGroupName The name of the resource group.\n   * @param capacityReservationGroupName The name of the capacity reservation group.\n   * @param capacityReservationName The name of the capacity reservation.\n   * @param options The options parameters.\n   */\n  async beginDeleteAndWait(\n    resourceGroupName: string,\n    capacityReservationGroupName: string,\n    capacityReservationName: string,\n    options?: CapacityReservationsDeleteOptionalParams\n  ): Promise<void> {\n    const poller = await this.beginDelete(\n      resourceGroupName,\n      capacityReservationGroupName,\n      capacityReservationName,\n      options\n    );\n    return poller.pollUntilDone();\n  }\n\n  /**\n   * The operation that retrieves information about the capacity reservation.\n   * @param resourceGroupName The name of the resource group.\n   * @param capacityReservationGroupName The name of the capacity reservation group.\n   * @param capacityReservationName The name of the capacity reservation.\n   * @param options The options parameters.\n   */\n  get(\n    resourceGroupName: string,\n    capacityReservationGroupName: string,\n    capacityReservationName: string,\n    options?: CapacityReservationsGetOptionalParams\n  ): Promise<CapacityReservationsGetResponse> {\n    return this.client.sendOperationRequest(\n      {\n        resourceGroupName,\n        capacityReservationGroupName,\n        capacityReservationName,\n        options\n      },\n      getOperationSpec\n    );\n  }\n\n  /**\n   * Lists all of the capacity reservations in the specified capacity reservation group. Use the nextLink\n   * property in the response to get the next page of capacity reservations.\n   * @param resourceGroupName The name of the resource group.\n   * @param capacityReservationGroupName The name of the capacity reservation group.\n   * @param options The options parameters.\n   */\n  private _listByCapacityReservationGroup(\n    resourceGroupName: string,\n    capacityReservationGroupName: string,\n    options?: CapacityReservationsListByCapacityReservationGroupOptionalParams\n  ): Promise<CapacityReservationsListByCapacityReservationGroupResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, capacityReservationGroupName, options },\n      listByCapacityReservationGroupOperationSpec\n    );\n  }\n\n  /**\n   * ListByCapacityReservationGroupNext\n   * @param resourceGroupName The name of the resource group.\n   * @param capacityReservationGroupName The name of the capacity reservation group.\n   * @param nextLink The nextLink from the previous successful call to the ListByCapacityReservationGroup\n   *                 method.\n   * @param options The options parameters.\n   */\n  private _listByCapacityReservationGroupNext(\n    resourceGroupName: string,\n    capacityReservationGroupName: string,\n    nextLink: string,\n    options?: CapacityReservationsListByCapacityReservationGroupNextOptionalParams\n  ): Promise<CapacityReservationsListByCapacityReservationGroupNextResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, capacityReservationGroupName, nextLink, options },\n      listByCapacityReservationGroupNextOperationSpec\n    );\n  }\n}\n// Operation Specifications\nconst serializer = coreClient.createSerializer(Mappers, /* isXml */ false);\n\nconst createOrUpdateOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/capacityReservationGroups/{capacityReservationGroupName}/capacityReservations/{capacityReservationName}\",\n  httpMethod: \"PUT\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.CapacityReservation\n    },\n    201: {\n      bodyMapper: Mappers.CapacityReservation\n    },\n    202: {\n      bodyMapper: Mappers.CapacityReservation\n    },\n    204: {\n      bodyMapper: Mappers.CapacityReservation\n    },\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  requestBody: Parameters.parameters26,\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.resourceGroupName,\n    Parameters.subscriptionId,\n    Parameters.capacityReservationGroupName,\n    Parameters.capacityReservationName\n  ],\n  headerParameters: [Parameters.accept, Parameters.contentType],\n  mediaType: \"json\",\n  serializer\n};\nconst updateOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/capacityReservationGroups/{capacityReservationGroupName}/capacityReservations/{capacityReservationName}\",\n  httpMethod: \"PATCH\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.CapacityReservation\n    },\n    201: {\n      bodyMapper: Mappers.CapacityReservation\n    },\n    202: {\n      bodyMapper: Mappers.CapacityReservation\n    },\n    204: {\n      bodyMapper: Mappers.CapacityReservation\n    },\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  requestBody: Parameters.parameters27,\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.resourceGroupName,\n    Parameters.subscriptionId,\n    Parameters.capacityReservationGroupName,\n    Parameters.capacityReservationName\n  ],\n  headerParameters: [Parameters.accept, Parameters.contentType],\n  mediaType: \"json\",\n  serializer\n};\nconst deleteOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/capacityReservationGroups/{capacityReservationGroupName}/capacityReservations/{capacityReservationName}\",\n  httpMethod: \"DELETE\",\n  responses: {\n    200: {},\n    201: {},\n    202: {},\n    204: {},\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.resourceGroupName,\n    Parameters.subscriptionId,\n    Parameters.capacityReservationGroupName,\n    Parameters.capacityReservationName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst getOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/capacityReservationGroups/{capacityReservationGroupName}/capacityReservations/{capacityReservationName}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.CapacityReservation\n    },\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  queryParameters: [Parameters.apiVersion, Parameters.expand7],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.resourceGroupName,\n    Parameters.subscriptionId,\n    Parameters.capacityReservationGroupName,\n    Parameters.capacityReservationName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst listByCapacityReservationGroupOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/capacityReservationGroups/{capacityReservationGroupName}/capacityReservations\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.CapacityReservationListResult\n    },\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.resourceGroupName,\n    Parameters.subscriptionId,\n    Parameters.capacityReservationGroupName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst listByCapacityReservationGroupNextOperationSpec: coreClient.OperationSpec = {\n  path: \"{nextLink}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.CapacityReservationListResult\n    },\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.resourceGroupName,\n    Parameters.subscriptionId,\n    Parameters.nextLink,\n    Parameters.capacityReservationGroupName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport { PagedAsyncIterableIterator } from \"@azure/core-paging\";\nimport { VirtualMachineScaleSetExtensions } from \"../operationsInterfaces\";\nimport * as coreClient from \"@azure/core-client\";\nimport * as Mappers from \"../models/mappers\";\nimport * as Parameters from \"../models/parameters\";\nimport { ComputeManagementClient } from \"../computeManagementClient\";\nimport { PollerLike, PollOperationState, LroEngine } from \"@azure/core-lro\";\nimport { LroImpl } from \"../lroImpl\";\nimport {\n  VirtualMachineScaleSetExtension,\n  VirtualMachineScaleSetExtensionsListNextOptionalParams,\n  VirtualMachineScaleSetExtensionsListOptionalParams,\n  VirtualMachineScaleSetExtensionsCreateOrUpdateOptionalParams,\n  VirtualMachineScaleSetExtensionsCreateOrUpdateResponse,\n  VirtualMachineScaleSetExtensionUpdate,\n  VirtualMachineScaleSetExtensionsUpdateOptionalParams,\n  VirtualMachineScaleSetExtensionsUpdateResponse,\n  VirtualMachineScaleSetExtensionsDeleteOptionalParams,\n  VirtualMachineScaleSetExtensionsGetOptionalParams,\n  VirtualMachineScaleSetExtensionsGetResponse,\n  VirtualMachineScaleSetExtensionsListResponse,\n  VirtualMachineScaleSetExtensionsListNextResponse\n} from \"../models\";\n\n/// <reference lib=\"esnext.asynciterable\" />\n/** Class containing VirtualMachineScaleSetExtensions operations. */\nexport class VirtualMachineScaleSetExtensionsImpl\n  implements VirtualMachineScaleSetExtensions {\n  private readonly client: ComputeManagementClient;\n\n  /**\n   * Initialize a new instance of the class VirtualMachineScaleSetExtensions class.\n   * @param client Reference to the service client\n   */\n  constructor(client: ComputeManagementClient) {\n    this.client = client;\n  }\n\n  /**\n   * Gets a list of all extensions in a VM scale set.\n   * @param resourceGroupName The name of the resource group.\n   * @param vmScaleSetName The name of the VM scale set containing the extension.\n   * @param options The options parameters.\n   */\n  public list(\n    resourceGroupName: string,\n    vmScaleSetName: string,\n    options?: VirtualMachineScaleSetExtensionsListOptionalParams\n  ): PagedAsyncIterableIterator<VirtualMachineScaleSetExtension> {\n    const iter = this.listPagingAll(resourceGroupName, vmScaleSetName, options);\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: () => {\n        return this.listPagingPage(resourceGroupName, vmScaleSetName, options);\n      }\n    };\n  }\n\n  private async *listPagingPage(\n    resourceGroupName: string,\n    vmScaleSetName: string,\n    options?: VirtualMachineScaleSetExtensionsListOptionalParams\n  ): AsyncIterableIterator<VirtualMachineScaleSetExtension[]> {\n    let result = await this._list(resourceGroupName, vmScaleSetName, options);\n    yield result.value || [];\n    let continuationToken = result.nextLink;\n    while (continuationToken) {\n      result = await this._listNext(\n        resourceGroupName,\n        vmScaleSetName,\n        continuationToken,\n        options\n      );\n      continuationToken = result.nextLink;\n      yield result.value || [];\n    }\n  }\n\n  private async *listPagingAll(\n    resourceGroupName: string,\n    vmScaleSetName: string,\n    options?: VirtualMachineScaleSetExtensionsListOptionalParams\n  ): AsyncIterableIterator<VirtualMachineScaleSetExtension> {\n    for await (const page of this.listPagingPage(\n      resourceGroupName,\n      vmScaleSetName,\n      options\n    )) {\n      yield* page;\n    }\n  }\n\n  /**\n   * The operation to create or update an extension.\n   * @param resourceGroupName The name of the resource group.\n   * @param vmScaleSetName The name of the VM scale set where the extension should be create or updated.\n   * @param vmssExtensionName The name of the VM scale set extension.\n   * @param extensionParameters Parameters supplied to the Create VM scale set Extension operation.\n   * @param options The options parameters.\n   */\n  async beginCreateOrUpdate(\n    resourceGroupName: string,\n    vmScaleSetName: string,\n    vmssExtensionName: string,\n    extensionParameters: VirtualMachineScaleSetExtension,\n    options?: VirtualMachineScaleSetExtensionsCreateOrUpdateOptionalParams\n  ): Promise<\n    PollerLike<\n      PollOperationState<\n        VirtualMachineScaleSetExtensionsCreateOrUpdateResponse\n      >,\n      VirtualMachineScaleSetExtensionsCreateOrUpdateResponse\n    >\n  > {\n    const directSendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ): Promise<VirtualMachineScaleSetExtensionsCreateOrUpdateResponse> => {\n      return this.client.sendOperationRequest(args, spec);\n    };\n    const sendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ) => {\n      let currentRawResponse:\n        | coreClient.FullOperationResponse\n        | undefined = undefined;\n      const providedCallback = args.options?.onResponse;\n      const callback: coreClient.RawResponseCallback = (\n        rawResponse: coreClient.FullOperationResponse,\n        flatResponse: unknown\n      ) => {\n        currentRawResponse = rawResponse;\n        providedCallback?.(rawResponse, flatResponse);\n      };\n      const updatedArgs = {\n        ...args,\n        options: {\n          ...args.options,\n          onResponse: callback\n        }\n      };\n      const flatResponse = await directSendOperation(updatedArgs, spec);\n      return {\n        flatResponse,\n        rawResponse: {\n          statusCode: currentRawResponse!.status,\n          body: currentRawResponse!.parsedBody,\n          headers: currentRawResponse!.headers.toJSON()\n        }\n      };\n    };\n\n    const lro = new LroImpl(\n      sendOperation,\n      {\n        resourceGroupName,\n        vmScaleSetName,\n        vmssExtensionName,\n        extensionParameters,\n        options\n      },\n      createOrUpdateOperationSpec\n    );\n    return new LroEngine(lro, {\n      resumeFrom: options?.resumeFrom,\n      intervalInMs: options?.updateIntervalInMs\n    });\n  }\n\n  /**\n   * The operation to create or update an extension.\n   * @param resourceGroupName The name of the resource group.\n   * @param vmScaleSetName The name of the VM scale set where the extension should be create or updated.\n   * @param vmssExtensionName The name of the VM scale set extension.\n   * @param extensionParameters Parameters supplied to the Create VM scale set Extension operation.\n   * @param options The options parameters.\n   */\n  async beginCreateOrUpdateAndWait(\n    resourceGroupName: string,\n    vmScaleSetName: string,\n    vmssExtensionName: string,\n    extensionParameters: VirtualMachineScaleSetExtension,\n    options?: VirtualMachineScaleSetExtensionsCreateOrUpdateOptionalParams\n  ): Promise<VirtualMachineScaleSetExtensionsCreateOrUpdateResponse> {\n    const poller = await this.beginCreateOrUpdate(\n      resourceGroupName,\n      vmScaleSetName,\n      vmssExtensionName,\n      extensionParameters,\n      options\n    );\n    return poller.pollUntilDone();\n  }\n\n  /**\n   * The operation to update an extension.\n   * @param resourceGroupName The name of the resource group.\n   * @param vmScaleSetName The name of the VM scale set where the extension should be updated.\n   * @param vmssExtensionName The name of the VM scale set extension.\n   * @param extensionParameters Parameters supplied to the Update VM scale set Extension operation.\n   * @param options The options parameters.\n   */\n  async beginUpdate(\n    resourceGroupName: string,\n    vmScaleSetName: string,\n    vmssExtensionName: string,\n    extensionParameters: VirtualMachineScaleSetExtensionUpdate,\n    options?: VirtualMachineScaleSetExtensionsUpdateOptionalParams\n  ): Promise<\n    PollerLike<\n      PollOperationState<VirtualMachineScaleSetExtensionsUpdateResponse>,\n      VirtualMachineScaleSetExtensionsUpdateResponse\n    >\n  > {\n    const directSendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ): Promise<VirtualMachineScaleSetExtensionsUpdateResponse> => {\n      return this.client.sendOperationRequest(args, spec);\n    };\n    const sendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ) => {\n      let currentRawResponse:\n        | coreClient.FullOperationResponse\n        | undefined = undefined;\n      const providedCallback = args.options?.onResponse;\n      const callback: coreClient.RawResponseCallback = (\n        rawResponse: coreClient.FullOperationResponse,\n        flatResponse: unknown\n      ) => {\n        currentRawResponse = rawResponse;\n        providedCallback?.(rawResponse, flatResponse);\n      };\n      const updatedArgs = {\n        ...args,\n        options: {\n          ...args.options,\n          onResponse: callback\n        }\n      };\n      const flatResponse = await directSendOperation(updatedArgs, spec);\n      return {\n        flatResponse,\n        rawResponse: {\n          statusCode: currentRawResponse!.status,\n          body: currentRawResponse!.parsedBody,\n          headers: currentRawResponse!.headers.toJSON()\n        }\n      };\n    };\n\n    const lro = new LroImpl(\n      sendOperation,\n      {\n        resourceGroupName,\n        vmScaleSetName,\n        vmssExtensionName,\n        extensionParameters,\n        options\n      },\n      updateOperationSpec\n    );\n    return new LroEngine(lro, {\n      resumeFrom: options?.resumeFrom,\n      intervalInMs: options?.updateIntervalInMs\n    });\n  }\n\n  /**\n   * The operation to update an extension.\n   * @param resourceGroupName The name of the resource group.\n   * @param vmScaleSetName The name of the VM scale set where the extension should be updated.\n   * @param vmssExtensionName The name of the VM scale set extension.\n   * @param extensionParameters Parameters supplied to the Update VM scale set Extension operation.\n   * @param options The options parameters.\n   */\n  async beginUpdateAndWait(\n    resourceGroupName: string,\n    vmScaleSetName: string,\n    vmssExtensionName: string,\n    extensionParameters: VirtualMachineScaleSetExtensionUpdate,\n    options?: VirtualMachineScaleSetExtensionsUpdateOptionalParams\n  ): Promise<VirtualMachineScaleSetExtensionsUpdateResponse> {\n    const poller = await this.beginUpdate(\n      resourceGroupName,\n      vmScaleSetName,\n      vmssExtensionName,\n      extensionParameters,\n      options\n    );\n    return poller.pollUntilDone();\n  }\n\n  /**\n   * The operation to delete the extension.\n   * @param resourceGroupName The name of the resource group.\n   * @param vmScaleSetName The name of the VM scale set where the extension should be deleted.\n   * @param vmssExtensionName The name of the VM scale set extension.\n   * @param options The options parameters.\n   */\n  async beginDelete(\n    resourceGroupName: string,\n    vmScaleSetName: string,\n    vmssExtensionName: string,\n    options?: VirtualMachineScaleSetExtensionsDeleteOptionalParams\n  ): Promise<PollerLike<PollOperationState<void>, void>> {\n    const directSendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ): Promise<void> => {\n      return this.client.sendOperationRequest(args, spec);\n    };\n    const sendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ) => {\n      let currentRawResponse:\n        | coreClient.FullOperationResponse\n        | undefined = undefined;\n      const providedCallback = args.options?.onResponse;\n      const callback: coreClient.RawResponseCallback = (\n        rawResponse: coreClient.FullOperationResponse,\n        flatResponse: unknown\n      ) => {\n        currentRawResponse = rawResponse;\n        providedCallback?.(rawResponse, flatResponse);\n      };\n      const updatedArgs = {\n        ...args,\n        options: {\n          ...args.options,\n          onResponse: callback\n        }\n      };\n      const flatResponse = await directSendOperation(updatedArgs, spec);\n      return {\n        flatResponse,\n        rawResponse: {\n          statusCode: currentRawResponse!.status,\n          body: currentRawResponse!.parsedBody,\n          headers: currentRawResponse!.headers.toJSON()\n        }\n      };\n    };\n\n    const lro = new LroImpl(\n      sendOperation,\n      { resourceGroupName, vmScaleSetName, vmssExtensionName, options },\n      deleteOperationSpec\n    );\n    return new LroEngine(lro, {\n      resumeFrom: options?.resumeFrom,\n      intervalInMs: options?.updateIntervalInMs\n    });\n  }\n\n  /**\n   * The operation to delete the extension.\n   * @param resourceGroupName The name of the resource group.\n   * @param vmScaleSetName The name of the VM scale set where the extension should be deleted.\n   * @param vmssExtensionName The name of the VM scale set extension.\n   * @param options The options parameters.\n   */\n  async beginDeleteAndWait(\n    resourceGroupName: string,\n    vmScaleSetName: string,\n    vmssExtensionName: string,\n    options?: VirtualMachineScaleSetExtensionsDeleteOptionalParams\n  ): Promise<void> {\n    const poller = await this.beginDelete(\n      resourceGroupName,\n      vmScaleSetName,\n      vmssExtensionName,\n      options\n    );\n    return poller.pollUntilDone();\n  }\n\n  /**\n   * The operation to get the extension.\n   * @param resourceGroupName The name of the resource group.\n   * @param vmScaleSetName The name of the VM scale set containing the extension.\n   * @param vmssExtensionName The name of the VM scale set extension.\n   * @param options The options parameters.\n   */\n  get(\n    resourceGroupName: string,\n    vmScaleSetName: string,\n    vmssExtensionName: string,\n    options?: VirtualMachineScaleSetExtensionsGetOptionalParams\n  ): Promise<VirtualMachineScaleSetExtensionsGetResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, vmScaleSetName, vmssExtensionName, options },\n      getOperationSpec\n    );\n  }\n\n  /**\n   * Gets a list of all extensions in a VM scale set.\n   * @param resourceGroupName The name of the resource group.\n   * @param vmScaleSetName The name of the VM scale set containing the extension.\n   * @param options The options parameters.\n   */\n  private _list(\n    resourceGroupName: string,\n    vmScaleSetName: string,\n    options?: VirtualMachineScaleSetExtensionsListOptionalParams\n  ): Promise<VirtualMachineScaleSetExtensionsListResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, vmScaleSetName, options },\n      listOperationSpec\n    );\n  }\n\n  /**\n   * ListNext\n   * @param resourceGroupName The name of the resource group.\n   * @param vmScaleSetName The name of the VM scale set containing the extension.\n   * @param nextLink The nextLink from the previous successful call to the List method.\n   * @param options The options parameters.\n   */\n  private _listNext(\n    resourceGroupName: string,\n    vmScaleSetName: string,\n    nextLink: string,\n    options?: VirtualMachineScaleSetExtensionsListNextOptionalParams\n  ): Promise<VirtualMachineScaleSetExtensionsListNextResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, vmScaleSetName, nextLink, options },\n      listNextOperationSpec\n    );\n  }\n}\n// Operation Specifications\nconst serializer = coreClient.createSerializer(Mappers, /* isXml */ false);\n\nconst createOrUpdateOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/virtualMachineScaleSets/{vmScaleSetName}/extensions/{vmssExtensionName}\",\n  httpMethod: \"PUT\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.VirtualMachineScaleSetExtension\n    },\n    201: {\n      bodyMapper: Mappers.VirtualMachineScaleSetExtension\n    },\n    202: {\n      bodyMapper: Mappers.VirtualMachineScaleSetExtension\n    },\n    204: {\n      bodyMapper: Mappers.VirtualMachineScaleSetExtension\n    },\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  requestBody: Parameters.extensionParameters2,\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.resourceGroupName,\n    Parameters.subscriptionId,\n    Parameters.vmScaleSetName,\n    Parameters.vmssExtensionName\n  ],\n  headerParameters: [Parameters.accept, Parameters.contentType],\n  mediaType: \"json\",\n  serializer\n};\nconst updateOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/virtualMachineScaleSets/{vmScaleSetName}/extensions/{vmssExtensionName}\",\n  httpMethod: \"PATCH\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.VirtualMachineScaleSetExtension\n    },\n    201: {\n      bodyMapper: Mappers.VirtualMachineScaleSetExtension\n    },\n    202: {\n      bodyMapper: Mappers.VirtualMachineScaleSetExtension\n    },\n    204: {\n      bodyMapper: Mappers.VirtualMachineScaleSetExtension\n    },\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  requestBody: Parameters.extensionParameters3,\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.resourceGroupName,\n    Parameters.subscriptionId,\n    Parameters.vmScaleSetName,\n    Parameters.vmssExtensionName\n  ],\n  headerParameters: [Parameters.accept, Parameters.contentType],\n  mediaType: \"json\",\n  serializer\n};\nconst deleteOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/virtualMachineScaleSets/{vmScaleSetName}/extensions/{vmssExtensionName}\",\n  httpMethod: \"DELETE\",\n  responses: {\n    200: {},\n    201: {},\n    202: {},\n    204: {},\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.resourceGroupName,\n    Parameters.subscriptionId,\n    Parameters.vmScaleSetName,\n    Parameters.vmssExtensionName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst getOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/virtualMachineScaleSets/{vmScaleSetName}/extensions/{vmssExtensionName}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.VirtualMachineScaleSetExtension\n    },\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  queryParameters: [Parameters.apiVersion, Parameters.expand],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.resourceGroupName,\n    Parameters.subscriptionId,\n    Parameters.vmScaleSetName,\n    Parameters.vmssExtensionName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst listOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/virtualMachineScaleSets/{vmScaleSetName}/extensions\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.VirtualMachineScaleSetExtensionListResult\n    },\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.resourceGroupName,\n    Parameters.subscriptionId,\n    Parameters.vmScaleSetName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst listNextOperationSpec: coreClient.OperationSpec = {\n  path: \"{nextLink}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.VirtualMachineScaleSetExtensionListResult\n    },\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.resourceGroupName,\n    Parameters.subscriptionId,\n    Parameters.nextLink,\n    Parameters.vmScaleSetName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport { VirtualMachineScaleSetRollingUpgrades } from \"../operationsInterfaces\";\nimport * as coreClient from \"@azure/core-client\";\nimport * as Mappers from \"../models/mappers\";\nimport * as Parameters from \"../models/parameters\";\nimport { ComputeManagementClient } from \"../computeManagementClient\";\nimport { PollerLike, PollOperationState, LroEngine } from \"@azure/core-lro\";\nimport { LroImpl } from \"../lroImpl\";\nimport {\n  VirtualMachineScaleSetRollingUpgradesCancelOptionalParams,\n  VirtualMachineScaleSetRollingUpgradesStartOSUpgradeOptionalParams,\n  VirtualMachineScaleSetRollingUpgradesStartExtensionUpgradeOptionalParams,\n  VirtualMachineScaleSetRollingUpgradesGetLatestOptionalParams,\n  VirtualMachineScaleSetRollingUpgradesGetLatestResponse\n} from \"../models\";\n\n/** Class containing VirtualMachineScaleSetRollingUpgrades operations. */\nexport class VirtualMachineScaleSetRollingUpgradesImpl\n  implements VirtualMachineScaleSetRollingUpgrades {\n  private readonly client: ComputeManagementClient;\n\n  /**\n   * Initialize a new instance of the class VirtualMachineScaleSetRollingUpgrades class.\n   * @param client Reference to the service client\n   */\n  constructor(client: ComputeManagementClient) {\n    this.client = client;\n  }\n\n  /**\n   * Cancels the current virtual machine scale set rolling upgrade.\n   * @param resourceGroupName The name of the resource group.\n   * @param vmScaleSetName The name of the VM scale set.\n   * @param options The options parameters.\n   */\n  async beginCancel(\n    resourceGroupName: string,\n    vmScaleSetName: string,\n    options?: VirtualMachineScaleSetRollingUpgradesCancelOptionalParams\n  ): Promise<PollerLike<PollOperationState<void>, void>> {\n    const directSendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ): Promise<void> => {\n      return this.client.sendOperationRequest(args, spec);\n    };\n    const sendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ) => {\n      let currentRawResponse:\n        | coreClient.FullOperationResponse\n        | undefined = undefined;\n      const providedCallback = args.options?.onResponse;\n      const callback: coreClient.RawResponseCallback = (\n        rawResponse: coreClient.FullOperationResponse,\n        flatResponse: unknown\n      ) => {\n        currentRawResponse = rawResponse;\n        providedCallback?.(rawResponse, flatResponse);\n      };\n      const updatedArgs = {\n        ...args,\n        options: {\n          ...args.options,\n          onResponse: callback\n        }\n      };\n      const flatResponse = await directSendOperation(updatedArgs, spec);\n      return {\n        flatResponse,\n        rawResponse: {\n          statusCode: currentRawResponse!.status,\n          body: currentRawResponse!.parsedBody,\n          headers: currentRawResponse!.headers.toJSON()\n        }\n      };\n    };\n\n    const lro = new LroImpl(\n      sendOperation,\n      { resourceGroupName, vmScaleSetName, options },\n      cancelOperationSpec\n    );\n    return new LroEngine(lro, {\n      resumeFrom: options?.resumeFrom,\n      intervalInMs: options?.updateIntervalInMs\n    });\n  }\n\n  /**\n   * Cancels the current virtual machine scale set rolling upgrade.\n   * @param resourceGroupName The name of the resource group.\n   * @param vmScaleSetName The name of the VM scale set.\n   * @param options The options parameters.\n   */\n  async beginCancelAndWait(\n    resourceGroupName: string,\n    vmScaleSetName: string,\n    options?: VirtualMachineScaleSetRollingUpgradesCancelOptionalParams\n  ): Promise<void> {\n    const poller = await this.beginCancel(\n      resourceGroupName,\n      vmScaleSetName,\n      options\n    );\n    return poller.pollUntilDone();\n  }\n\n  /**\n   * Starts a rolling upgrade to move all virtual machine scale set instances to the latest available\n   * Platform Image OS version. Instances which are already running the latest available OS version are\n   * not affected.\n   * @param resourceGroupName The name of the resource group.\n   * @param vmScaleSetName The name of the VM scale set.\n   * @param options The options parameters.\n   */\n  async beginStartOSUpgrade(\n    resourceGroupName: string,\n    vmScaleSetName: string,\n    options?: VirtualMachineScaleSetRollingUpgradesStartOSUpgradeOptionalParams\n  ): Promise<PollerLike<PollOperationState<void>, void>> {\n    const directSendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ): Promise<void> => {\n      return this.client.sendOperationRequest(args, spec);\n    };\n    const sendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ) => {\n      let currentRawResponse:\n        | coreClient.FullOperationResponse\n        | undefined = undefined;\n      const providedCallback = args.options?.onResponse;\n      const callback: coreClient.RawResponseCallback = (\n        rawResponse: coreClient.FullOperationResponse,\n        flatResponse: unknown\n      ) => {\n        currentRawResponse = rawResponse;\n        providedCallback?.(rawResponse, flatResponse);\n      };\n      const updatedArgs = {\n        ...args,\n        options: {\n          ...args.options,\n          onResponse: callback\n        }\n      };\n      const flatResponse = await directSendOperation(updatedArgs, spec);\n      return {\n        flatResponse,\n        rawResponse: {\n          statusCode: currentRawResponse!.status,\n          body: currentRawResponse!.parsedBody,\n          headers: currentRawResponse!.headers.toJSON()\n        }\n      };\n    };\n\n    const lro = new LroImpl(\n      sendOperation,\n      { resourceGroupName, vmScaleSetName, options },\n      startOSUpgradeOperationSpec\n    );\n    return new LroEngine(lro, {\n      resumeFrom: options?.resumeFrom,\n      intervalInMs: options?.updateIntervalInMs\n    });\n  }\n\n  /**\n   * Starts a rolling upgrade to move all virtual machine scale set instances to the latest available\n   * Platform Image OS version. Instances which are already running the latest available OS version are\n   * not affected.\n   * @param resourceGroupName The name of the resource group.\n   * @param vmScaleSetName The name of the VM scale set.\n   * @param options The options parameters.\n   */\n  async beginStartOSUpgradeAndWait(\n    resourceGroupName: string,\n    vmScaleSetName: string,\n    options?: VirtualMachineScaleSetRollingUpgradesStartOSUpgradeOptionalParams\n  ): Promise<void> {\n    const poller = await this.beginStartOSUpgrade(\n      resourceGroupName,\n      vmScaleSetName,\n      options\n    );\n    return poller.pollUntilDone();\n  }\n\n  /**\n   * Starts a rolling upgrade to move all extensions for all virtual machine scale set instances to the\n   * latest available extension version. Instances which are already running the latest extension\n   * versions are not affected.\n   * @param resourceGroupName The name of the resource group.\n   * @param vmScaleSetName The name of the VM scale set.\n   * @param options The options parameters.\n   */\n  async beginStartExtensionUpgrade(\n    resourceGroupName: string,\n    vmScaleSetName: string,\n    options?: VirtualMachineScaleSetRollingUpgradesStartExtensionUpgradeOptionalParams\n  ): Promise<PollerLike<PollOperationState<void>, void>> {\n    const directSendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ): Promise<void> => {\n      return this.client.sendOperationRequest(args, spec);\n    };\n    const sendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ) => {\n      let currentRawResponse:\n        | coreClient.FullOperationResponse\n        | undefined = undefined;\n      const providedCallback = args.options?.onResponse;\n      const callback: coreClient.RawResponseCallback = (\n        rawResponse: coreClient.FullOperationResponse,\n        flatResponse: unknown\n      ) => {\n        currentRawResponse = rawResponse;\n        providedCallback?.(rawResponse, flatResponse);\n      };\n      const updatedArgs = {\n        ...args,\n        options: {\n          ...args.options,\n          onResponse: callback\n        }\n      };\n      const flatResponse = await directSendOperation(updatedArgs, spec);\n      return {\n        flatResponse,\n        rawResponse: {\n          statusCode: currentRawResponse!.status,\n          body: currentRawResponse!.parsedBody,\n          headers: currentRawResponse!.headers.toJSON()\n        }\n      };\n    };\n\n    const lro = new LroImpl(\n      sendOperation,\n      { resourceGroupName, vmScaleSetName, options },\n      startExtensionUpgradeOperationSpec\n    );\n    return new LroEngine(lro, {\n      resumeFrom: options?.resumeFrom,\n      intervalInMs: options?.updateIntervalInMs\n    });\n  }\n\n  /**\n   * Starts a rolling upgrade to move all extensions for all virtual machine scale set instances to the\n   * latest available extension version. Instances which are already running the latest extension\n   * versions are not affected.\n   * @param resourceGroupName The name of the resource group.\n   * @param vmScaleSetName The name of the VM scale set.\n   * @param options The options parameters.\n   */\n  async beginStartExtensionUpgradeAndWait(\n    resourceGroupName: string,\n    vmScaleSetName: string,\n    options?: VirtualMachineScaleSetRollingUpgradesStartExtensionUpgradeOptionalParams\n  ): Promise<void> {\n    const poller = await this.beginStartExtensionUpgrade(\n      resourceGroupName,\n      vmScaleSetName,\n      options\n    );\n    return poller.pollUntilDone();\n  }\n\n  /**\n   * Gets the status of the latest virtual machine scale set rolling upgrade.\n   * @param resourceGroupName The name of the resource group.\n   * @param vmScaleSetName The name of the VM scale set.\n   * @param options The options parameters.\n   */\n  getLatest(\n    resourceGroupName: string,\n    vmScaleSetName: string,\n    options?: VirtualMachineScaleSetRollingUpgradesGetLatestOptionalParams\n  ): Promise<VirtualMachineScaleSetRollingUpgradesGetLatestResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, vmScaleSetName, options },\n      getLatestOperationSpec\n    );\n  }\n}\n// Operation Specifications\nconst serializer = coreClient.createSerializer(Mappers, /* isXml */ false);\n\nconst cancelOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/virtualMachineScaleSets/{vmScaleSetName}/rollingUpgrades/cancel\",\n  httpMethod: \"POST\",\n  responses: {\n    200: {},\n    201: {},\n    202: {},\n    204: {},\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.resourceGroupName,\n    Parameters.subscriptionId,\n    Parameters.vmScaleSetName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst startOSUpgradeOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/virtualMachineScaleSets/{vmScaleSetName}/osRollingUpgrade\",\n  httpMethod: \"POST\",\n  responses: {\n    200: {},\n    201: {},\n    202: {},\n    204: {},\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.resourceGroupName,\n    Parameters.subscriptionId,\n    Parameters.vmScaleSetName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst startExtensionUpgradeOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/virtualMachineScaleSets/{vmScaleSetName}/extensionRollingUpgrade\",\n  httpMethod: \"POST\",\n  responses: {\n    200: {},\n    201: {},\n    202: {},\n    204: {},\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.resourceGroupName,\n    Parameters.subscriptionId,\n    Parameters.vmScaleSetName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst getLatestOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/virtualMachineScaleSets/{vmScaleSetName}/rollingUpgrades/latest\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.RollingUpgradeStatusInfo\n    },\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.resourceGroupName,\n    Parameters.subscriptionId,\n    Parameters.vmScaleSetName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport { VirtualMachineScaleSetVMExtensions } from \"../operationsInterfaces\";\nimport * as coreClient from \"@azure/core-client\";\nimport * as Mappers from \"../models/mappers\";\nimport * as Parameters from \"../models/parameters\";\nimport { ComputeManagementClient } from \"../computeManagementClient\";\nimport { PollerLike, PollOperationState, LroEngine } from \"@azure/core-lro\";\nimport { LroImpl } from \"../lroImpl\";\nimport {\n  VirtualMachineScaleSetVMExtension,\n  VirtualMachineScaleSetVMExtensionsCreateOrUpdateOptionalParams,\n  VirtualMachineScaleSetVMExtensionsCreateOrUpdateResponse,\n  VirtualMachineScaleSetVMExtensionUpdate,\n  VirtualMachineScaleSetVMExtensionsUpdateOptionalParams,\n  VirtualMachineScaleSetVMExtensionsUpdateResponse,\n  VirtualMachineScaleSetVMExtensionsDeleteOptionalParams,\n  VirtualMachineScaleSetVMExtensionsGetOptionalParams,\n  VirtualMachineScaleSetVMExtensionsGetResponse,\n  VirtualMachineScaleSetVMExtensionsListOptionalParams,\n  VirtualMachineScaleSetVMExtensionsListResponse\n} from \"../models\";\n\n/** Class containing VirtualMachineScaleSetVMExtensions operations. */\nexport class VirtualMachineScaleSetVMExtensionsImpl\n  implements VirtualMachineScaleSetVMExtensions {\n  private readonly client: ComputeManagementClient;\n\n  /**\n   * Initialize a new instance of the class VirtualMachineScaleSetVMExtensions class.\n   * @param client Reference to the service client\n   */\n  constructor(client: ComputeManagementClient) {\n    this.client = client;\n  }\n\n  /**\n   * The operation to create or update the VMSS VM extension.\n   * @param resourceGroupName The name of the resource group.\n   * @param vmScaleSetName The name of the VM scale set.\n   * @param instanceId The instance ID of the virtual machine.\n   * @param vmExtensionName The name of the virtual machine extension.\n   * @param extensionParameters Parameters supplied to the Create Virtual Machine Extension operation.\n   * @param options The options parameters.\n   */\n  async beginCreateOrUpdate(\n    resourceGroupName: string,\n    vmScaleSetName: string,\n    instanceId: string,\n    vmExtensionName: string,\n    extensionParameters: VirtualMachineScaleSetVMExtension,\n    options?: VirtualMachineScaleSetVMExtensionsCreateOrUpdateOptionalParams\n  ): Promise<\n    PollerLike<\n      PollOperationState<\n        VirtualMachineScaleSetVMExtensionsCreateOrUpdateResponse\n      >,\n      VirtualMachineScaleSetVMExtensionsCreateOrUpdateResponse\n    >\n  > {\n    const directSendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ): Promise<VirtualMachineScaleSetVMExtensionsCreateOrUpdateResponse> => {\n      return this.client.sendOperationRequest(args, spec);\n    };\n    const sendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ) => {\n      let currentRawResponse:\n        | coreClient.FullOperationResponse\n        | undefined = undefined;\n      const providedCallback = args.options?.onResponse;\n      const callback: coreClient.RawResponseCallback = (\n        rawResponse: coreClient.FullOperationResponse,\n        flatResponse: unknown\n      ) => {\n        currentRawResponse = rawResponse;\n        providedCallback?.(rawResponse, flatResponse);\n      };\n      const updatedArgs = {\n        ...args,\n        options: {\n          ...args.options,\n          onResponse: callback\n        }\n      };\n      const flatResponse = await directSendOperation(updatedArgs, spec);\n      return {\n        flatResponse,\n        rawResponse: {\n          statusCode: currentRawResponse!.status,\n          body: currentRawResponse!.parsedBody,\n          headers: currentRawResponse!.headers.toJSON()\n        }\n      };\n    };\n\n    const lro = new LroImpl(\n      sendOperation,\n      {\n        resourceGroupName,\n        vmScaleSetName,\n        instanceId,\n        vmExtensionName,\n        extensionParameters,\n        options\n      },\n      createOrUpdateOperationSpec\n    );\n    return new LroEngine(lro, {\n      resumeFrom: options?.resumeFrom,\n      intervalInMs: options?.updateIntervalInMs\n    });\n  }\n\n  /**\n   * The operation to create or update the VMSS VM extension.\n   * @param resourceGroupName The name of the resource group.\n   * @param vmScaleSetName The name of the VM scale set.\n   * @param instanceId The instance ID of the virtual machine.\n   * @param vmExtensionName The name of the virtual machine extension.\n   * @param extensionParameters Parameters supplied to the Create Virtual Machine Extension operation.\n   * @param options The options parameters.\n   */\n  async beginCreateOrUpdateAndWait(\n    resourceGroupName: string,\n    vmScaleSetName: string,\n    instanceId: string,\n    vmExtensionName: string,\n    extensionParameters: VirtualMachineScaleSetVMExtension,\n    options?: VirtualMachineScaleSetVMExtensionsCreateOrUpdateOptionalParams\n  ): Promise<VirtualMachineScaleSetVMExtensionsCreateOrUpdateResponse> {\n    const poller = await this.beginCreateOrUpdate(\n      resourceGroupName,\n      vmScaleSetName,\n      instanceId,\n      vmExtensionName,\n      extensionParameters,\n      options\n    );\n    return poller.pollUntilDone();\n  }\n\n  /**\n   * The operation to update the VMSS VM extension.\n   * @param resourceGroupName The name of the resource group.\n   * @param vmScaleSetName The name of the VM scale set.\n   * @param instanceId The instance ID of the virtual machine.\n   * @param vmExtensionName The name of the virtual machine extension.\n   * @param extensionParameters Parameters supplied to the Update Virtual Machine Extension operation.\n   * @param options The options parameters.\n   */\n  async beginUpdate(\n    resourceGroupName: string,\n    vmScaleSetName: string,\n    instanceId: string,\n    vmExtensionName: string,\n    extensionParameters: VirtualMachineScaleSetVMExtensionUpdate,\n    options?: VirtualMachineScaleSetVMExtensionsUpdateOptionalParams\n  ): Promise<\n    PollerLike<\n      PollOperationState<VirtualMachineScaleSetVMExtensionsUpdateResponse>,\n      VirtualMachineScaleSetVMExtensionsUpdateResponse\n    >\n  > {\n    const directSendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ): Promise<VirtualMachineScaleSetVMExtensionsUpdateResponse> => {\n      return this.client.sendOperationRequest(args, spec);\n    };\n    const sendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ) => {\n      let currentRawResponse:\n        | coreClient.FullOperationResponse\n        | undefined = undefined;\n      const providedCallback = args.options?.onResponse;\n      const callback: coreClient.RawResponseCallback = (\n        rawResponse: coreClient.FullOperationResponse,\n        flatResponse: unknown\n      ) => {\n        currentRawResponse = rawResponse;\n        providedCallback?.(rawResponse, flatResponse);\n      };\n      const updatedArgs = {\n        ...args,\n        options: {\n          ...args.options,\n          onResponse: callback\n        }\n      };\n      const flatResponse = await directSendOperation(updatedArgs, spec);\n      return {\n        flatResponse,\n        rawResponse: {\n          statusCode: currentRawResponse!.status,\n          body: currentRawResponse!.parsedBody,\n          headers: currentRawResponse!.headers.toJSON()\n        }\n      };\n    };\n\n    const lro = new LroImpl(\n      sendOperation,\n      {\n        resourceGroupName,\n        vmScaleSetName,\n        instanceId,\n        vmExtensionName,\n        extensionParameters,\n        options\n      },\n      updateOperationSpec\n    );\n    return new LroEngine(lro, {\n      resumeFrom: options?.resumeFrom,\n      intervalInMs: options?.updateIntervalInMs\n    });\n  }\n\n  /**\n   * The operation to update the VMSS VM extension.\n   * @param resourceGroupName The name of the resource group.\n   * @param vmScaleSetName The name of the VM scale set.\n   * @param instanceId The instance ID of the virtual machine.\n   * @param vmExtensionName The name of the virtual machine extension.\n   * @param extensionParameters Parameters supplied to the Update Virtual Machine Extension operation.\n   * @param options The options parameters.\n   */\n  async beginUpdateAndWait(\n    resourceGroupName: string,\n    vmScaleSetName: string,\n    instanceId: string,\n    vmExtensionName: string,\n    extensionParameters: VirtualMachineScaleSetVMExtensionUpdate,\n    options?: VirtualMachineScaleSetVMExtensionsUpdateOptionalParams\n  ): Promise<VirtualMachineScaleSetVMExtensionsUpdateResponse> {\n    const poller = await this.beginUpdate(\n      resourceGroupName,\n      vmScaleSetName,\n      instanceId,\n      vmExtensionName,\n      extensionParameters,\n      options\n    );\n    return poller.pollUntilDone();\n  }\n\n  /**\n   * The operation to delete the VMSS VM extension.\n   * @param resourceGroupName The name of the resource group.\n   * @param vmScaleSetName The name of the VM scale set.\n   * @param instanceId The instance ID of the virtual machine.\n   * @param vmExtensionName The name of the virtual machine extension.\n   * @param options The options parameters.\n   */\n  async beginDelete(\n    resourceGroupName: string,\n    vmScaleSetName: string,\n    instanceId: string,\n    vmExtensionName: string,\n    options?: VirtualMachineScaleSetVMExtensionsDeleteOptionalParams\n  ): Promise<PollerLike<PollOperationState<void>, void>> {\n    const directSendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ): Promise<void> => {\n      return this.client.sendOperationRequest(args, spec);\n    };\n    const sendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ) => {\n      let currentRawResponse:\n        | coreClient.FullOperationResponse\n        | undefined = undefined;\n      const providedCallback = args.options?.onResponse;\n      const callback: coreClient.RawResponseCallback = (\n        rawResponse: coreClient.FullOperationResponse,\n        flatResponse: unknown\n      ) => {\n        currentRawResponse = rawResponse;\n        providedCallback?.(rawResponse, flatResponse);\n      };\n      const updatedArgs = {\n        ...args,\n        options: {\n          ...args.options,\n          onResponse: callback\n        }\n      };\n      const flatResponse = await directSendOperation(updatedArgs, spec);\n      return {\n        flatResponse,\n        rawResponse: {\n          statusCode: currentRawResponse!.status,\n          body: currentRawResponse!.parsedBody,\n          headers: currentRawResponse!.headers.toJSON()\n        }\n      };\n    };\n\n    const lro = new LroImpl(\n      sendOperation,\n      {\n        resourceGroupName,\n        vmScaleSetName,\n        instanceId,\n        vmExtensionName,\n        options\n      },\n      deleteOperationSpec\n    );\n    return new LroEngine(lro, {\n      resumeFrom: options?.resumeFrom,\n      intervalInMs: options?.updateIntervalInMs\n    });\n  }\n\n  /**\n   * The operation to delete the VMSS VM extension.\n   * @param resourceGroupName The name of the resource group.\n   * @param vmScaleSetName The name of the VM scale set.\n   * @param instanceId The instance ID of the virtual machine.\n   * @param vmExtensionName The name of the virtual machine extension.\n   * @param options The options parameters.\n   */\n  async beginDeleteAndWait(\n    resourceGroupName: string,\n    vmScaleSetName: string,\n    instanceId: string,\n    vmExtensionName: string,\n    options?: VirtualMachineScaleSetVMExtensionsDeleteOptionalParams\n  ): Promise<void> {\n    const poller = await this.beginDelete(\n      resourceGroupName,\n      vmScaleSetName,\n      instanceId,\n      vmExtensionName,\n      options\n    );\n    return poller.pollUntilDone();\n  }\n\n  /**\n   * The operation to get the VMSS VM extension.\n   * @param resourceGroupName The name of the resource group.\n   * @param vmScaleSetName The name of the VM scale set.\n   * @param instanceId The instance ID of the virtual machine.\n   * @param vmExtensionName The name of the virtual machine extension.\n   * @param options The options parameters.\n   */\n  get(\n    resourceGroupName: string,\n    vmScaleSetName: string,\n    instanceId: string,\n    vmExtensionName: string,\n    options?: VirtualMachineScaleSetVMExtensionsGetOptionalParams\n  ): Promise<VirtualMachineScaleSetVMExtensionsGetResponse> {\n    return this.client.sendOperationRequest(\n      {\n        resourceGroupName,\n        vmScaleSetName,\n        instanceId,\n        vmExtensionName,\n        options\n      },\n      getOperationSpec\n    );\n  }\n\n  /**\n   * The operation to get all extensions of an instance in Virtual Machine Scaleset.\n   * @param resourceGroupName The name of the resource group.\n   * @param vmScaleSetName The name of the VM scale set.\n   * @param instanceId The instance ID of the virtual machine.\n   * @param options The options parameters.\n   */\n  list(\n    resourceGroupName: string,\n    vmScaleSetName: string,\n    instanceId: string,\n    options?: VirtualMachineScaleSetVMExtensionsListOptionalParams\n  ): Promise<VirtualMachineScaleSetVMExtensionsListResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, vmScaleSetName, instanceId, options },\n      listOperationSpec\n    );\n  }\n}\n// Operation Specifications\nconst serializer = coreClient.createSerializer(Mappers, /* isXml */ false);\n\nconst createOrUpdateOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/virtualMachineScaleSets/{vmScaleSetName}/virtualMachines/{instanceId}/extensions/{vmExtensionName}\",\n  httpMethod: \"PUT\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.VirtualMachineScaleSetVMExtension\n    },\n    201: {\n      bodyMapper: Mappers.VirtualMachineScaleSetVMExtension\n    },\n    202: {\n      bodyMapper: Mappers.VirtualMachineScaleSetVMExtension\n    },\n    204: {\n      bodyMapper: Mappers.VirtualMachineScaleSetVMExtension\n    },\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  requestBody: Parameters.extensionParameters4,\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.resourceGroupName,\n    Parameters.subscriptionId,\n    Parameters.vmExtensionName,\n    Parameters.vmScaleSetName,\n    Parameters.instanceId\n  ],\n  headerParameters: [Parameters.accept, Parameters.contentType],\n  mediaType: \"json\",\n  serializer\n};\nconst updateOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/virtualMachineScaleSets/{vmScaleSetName}/virtualMachines/{instanceId}/extensions/{vmExtensionName}\",\n  httpMethod: \"PATCH\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.VirtualMachineScaleSetVMExtension\n    },\n    201: {\n      bodyMapper: Mappers.VirtualMachineScaleSetVMExtension\n    },\n    202: {\n      bodyMapper: Mappers.VirtualMachineScaleSetVMExtension\n    },\n    204: {\n      bodyMapper: Mappers.VirtualMachineScaleSetVMExtension\n    },\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  requestBody: Parameters.extensionParameters5,\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.resourceGroupName,\n    Parameters.subscriptionId,\n    Parameters.vmExtensionName,\n    Parameters.vmScaleSetName,\n    Parameters.instanceId\n  ],\n  headerParameters: [Parameters.accept, Parameters.contentType],\n  mediaType: \"json\",\n  serializer\n};\nconst deleteOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/virtualMachineScaleSets/{vmScaleSetName}/virtualMachines/{instanceId}/extensions/{vmExtensionName}\",\n  httpMethod: \"DELETE\",\n  responses: {\n    200: {},\n    201: {},\n    202: {},\n    204: {},\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.resourceGroupName,\n    Parameters.subscriptionId,\n    Parameters.vmExtensionName,\n    Parameters.vmScaleSetName,\n    Parameters.instanceId\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst getOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/virtualMachineScaleSets/{vmScaleSetName}/virtualMachines/{instanceId}/extensions/{vmExtensionName}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.VirtualMachineScaleSetVMExtension\n    },\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  queryParameters: [Parameters.apiVersion, Parameters.expand],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.resourceGroupName,\n    Parameters.subscriptionId,\n    Parameters.vmExtensionName,\n    Parameters.vmScaleSetName,\n    Parameters.instanceId\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst listOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/virtualMachineScaleSets/{vmScaleSetName}/virtualMachines/{instanceId}/extensions\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.VirtualMachineScaleSetVMExtensionsListResult\n    },\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  queryParameters: [Parameters.apiVersion, Parameters.expand],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.resourceGroupName,\n    Parameters.subscriptionId,\n    Parameters.vmScaleSetName,\n    Parameters.instanceId\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport { PagedAsyncIterableIterator } from \"@azure/core-paging\";\nimport { VirtualMachineScaleSetVMs } from \"../operationsInterfaces\";\nimport * as coreClient from \"@azure/core-client\";\nimport * as Mappers from \"../models/mappers\";\nimport * as Parameters from \"../models/parameters\";\nimport { ComputeManagementClient } from \"../computeManagementClient\";\nimport { PollerLike, PollOperationState, LroEngine } from \"@azure/core-lro\";\nimport { LroImpl } from \"../lroImpl\";\nimport {\n  VirtualMachineScaleSetVM,\n  VirtualMachineScaleSetVMsListNextOptionalParams,\n  VirtualMachineScaleSetVMsListOptionalParams,\n  VirtualMachineScaleSetVMsReimageOptionalParams,\n  VirtualMachineScaleSetVMsReimageAllOptionalParams,\n  VirtualMachineScaleSetVMsDeallocateOptionalParams,\n  VirtualMachineScaleSetVMsUpdateOptionalParams,\n  VirtualMachineScaleSetVMsUpdateResponse,\n  VirtualMachineScaleSetVMsDeleteOptionalParams,\n  VirtualMachineScaleSetVMsGetOptionalParams,\n  VirtualMachineScaleSetVMsGetResponse,\n  VirtualMachineScaleSetVMsGetInstanceViewOptionalParams,\n  VirtualMachineScaleSetVMsGetInstanceViewResponse,\n  VirtualMachineScaleSetVMsListResponse,\n  VirtualMachineScaleSetVMsPowerOffOptionalParams,\n  VirtualMachineScaleSetVMsRestartOptionalParams,\n  VirtualMachineScaleSetVMsStartOptionalParams,\n  VirtualMachineScaleSetVMsRedeployOptionalParams,\n  VirtualMachineScaleSetVMsRetrieveBootDiagnosticsDataOptionalParams,\n  VirtualMachineScaleSetVMsRetrieveBootDiagnosticsDataResponse,\n  VirtualMachineScaleSetVMsPerformMaintenanceOptionalParams,\n  VirtualMachineScaleSetVMsSimulateEvictionOptionalParams,\n  RunCommandInput,\n  VirtualMachineScaleSetVMsRunCommandOptionalParams,\n  VirtualMachineScaleSetVMsRunCommandResponse,\n  VirtualMachineScaleSetVMsListNextResponse\n} from \"../models\";\n\n/// <reference lib=\"esnext.asynciterable\" />\n/** Class containing VirtualMachineScaleSetVMs operations. */\nexport class VirtualMachineScaleSetVMsImpl\n  implements VirtualMachineScaleSetVMs {\n  private readonly client: ComputeManagementClient;\n\n  /**\n   * Initialize a new instance of the class VirtualMachineScaleSetVMs class.\n   * @param client Reference to the service client\n   */\n  constructor(client: ComputeManagementClient) {\n    this.client = client;\n  }\n\n  /**\n   * Gets a list of all virtual machines in a VM scale sets.\n   * @param resourceGroupName The name of the resource group.\n   * @param virtualMachineScaleSetName The name of the VM scale set.\n   * @param options The options parameters.\n   */\n  public list(\n    resourceGroupName: string,\n    virtualMachineScaleSetName: string,\n    options?: VirtualMachineScaleSetVMsListOptionalParams\n  ): PagedAsyncIterableIterator<VirtualMachineScaleSetVM> {\n    const iter = this.listPagingAll(\n      resourceGroupName,\n      virtualMachineScaleSetName,\n      options\n    );\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: () => {\n        return this.listPagingPage(\n          resourceGroupName,\n          virtualMachineScaleSetName,\n          options\n        );\n      }\n    };\n  }\n\n  private async *listPagingPage(\n    resourceGroupName: string,\n    virtualMachineScaleSetName: string,\n    options?: VirtualMachineScaleSetVMsListOptionalParams\n  ): AsyncIterableIterator<VirtualMachineScaleSetVM[]> {\n    let result = await this._list(\n      resourceGroupName,\n      virtualMachineScaleSetName,\n      options\n    );\n    yield result.value || [];\n    let continuationToken = result.nextLink;\n    while (continuationToken) {\n      result = await this._listNext(\n        resourceGroupName,\n        virtualMachineScaleSetName,\n        continuationToken,\n        options\n      );\n      continuationToken = result.nextLink;\n      yield result.value || [];\n    }\n  }\n\n  private async *listPagingAll(\n    resourceGroupName: string,\n    virtualMachineScaleSetName: string,\n    options?: VirtualMachineScaleSetVMsListOptionalParams\n  ): AsyncIterableIterator<VirtualMachineScaleSetVM> {\n    for await (const page of this.listPagingPage(\n      resourceGroupName,\n      virtualMachineScaleSetName,\n      options\n    )) {\n      yield* page;\n    }\n  }\n\n  /**\n   * Reimages (upgrade the operating system) a specific virtual machine in a VM scale set.\n   * @param resourceGroupName The name of the resource group.\n   * @param vmScaleSetName The name of the VM scale set.\n   * @param instanceId The instance ID of the virtual machine.\n   * @param options The options parameters.\n   */\n  async beginReimage(\n    resourceGroupName: string,\n    vmScaleSetName: string,\n    instanceId: string,\n    options?: VirtualMachineScaleSetVMsReimageOptionalParams\n  ): Promise<PollerLike<PollOperationState<void>, void>> {\n    const directSendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ): Promise<void> => {\n      return this.client.sendOperationRequest(args, spec);\n    };\n    const sendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ) => {\n      let currentRawResponse:\n        | coreClient.FullOperationResponse\n        | undefined = undefined;\n      const providedCallback = args.options?.onResponse;\n      const callback: coreClient.RawResponseCallback = (\n        rawResponse: coreClient.FullOperationResponse,\n        flatResponse: unknown\n      ) => {\n        currentRawResponse = rawResponse;\n        providedCallback?.(rawResponse, flatResponse);\n      };\n      const updatedArgs = {\n        ...args,\n        options: {\n          ...args.options,\n          onResponse: callback\n        }\n      };\n      const flatResponse = await directSendOperation(updatedArgs, spec);\n      return {\n        flatResponse,\n        rawResponse: {\n          statusCode: currentRawResponse!.status,\n          body: currentRawResponse!.parsedBody,\n          headers: currentRawResponse!.headers.toJSON()\n        }\n      };\n    };\n\n    const lro = new LroImpl(\n      sendOperation,\n      { resourceGroupName, vmScaleSetName, instanceId, options },\n      reimageOperationSpec\n    );\n    return new LroEngine(lro, {\n      resumeFrom: options?.resumeFrom,\n      intervalInMs: options?.updateIntervalInMs\n    });\n  }\n\n  /**\n   * Reimages (upgrade the operating system) a specific virtual machine in a VM scale set.\n   * @param resourceGroupName The name of the resource group.\n   * @param vmScaleSetName The name of the VM scale set.\n   * @param instanceId The instance ID of the virtual machine.\n   * @param options The options parameters.\n   */\n  async beginReimageAndWait(\n    resourceGroupName: string,\n    vmScaleSetName: string,\n    instanceId: string,\n    options?: VirtualMachineScaleSetVMsReimageOptionalParams\n  ): Promise<void> {\n    const poller = await this.beginReimage(\n      resourceGroupName,\n      vmScaleSetName,\n      instanceId,\n      options\n    );\n    return poller.pollUntilDone();\n  }\n\n  /**\n   * Allows you to re-image all the disks ( including data disks ) in the a VM scale set instance. This\n   * operation is only supported for managed disks.\n   * @param resourceGroupName The name of the resource group.\n   * @param vmScaleSetName The name of the VM scale set.\n   * @param instanceId The instance ID of the virtual machine.\n   * @param options The options parameters.\n   */\n  async beginReimageAll(\n    resourceGroupName: string,\n    vmScaleSetName: string,\n    instanceId: string,\n    options?: VirtualMachineScaleSetVMsReimageAllOptionalParams\n  ): Promise<PollerLike<PollOperationState<void>, void>> {\n    const directSendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ): Promise<void> => {\n      return this.client.sendOperationRequest(args, spec);\n    };\n    const sendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ) => {\n      let currentRawResponse:\n        | coreClient.FullOperationResponse\n        | undefined = undefined;\n      const providedCallback = args.options?.onResponse;\n      const callback: coreClient.RawResponseCallback = (\n        rawResponse: coreClient.FullOperationResponse,\n        flatResponse: unknown\n      ) => {\n        currentRawResponse = rawResponse;\n        providedCallback?.(rawResponse, flatResponse);\n      };\n      const updatedArgs = {\n        ...args,\n        options: {\n          ...args.options,\n          onResponse: callback\n        }\n      };\n      const flatResponse = await directSendOperation(updatedArgs, spec);\n      return {\n        flatResponse,\n        rawResponse: {\n          statusCode: currentRawResponse!.status,\n          body: currentRawResponse!.parsedBody,\n          headers: currentRawResponse!.headers.toJSON()\n        }\n      };\n    };\n\n    const lro = new LroImpl(\n      sendOperation,\n      { resourceGroupName, vmScaleSetName, instanceId, options },\n      reimageAllOperationSpec\n    );\n    return new LroEngine(lro, {\n      resumeFrom: options?.resumeFrom,\n      intervalInMs: options?.updateIntervalInMs\n    });\n  }\n\n  /**\n   * Allows you to re-image all the disks ( including data disks ) in the a VM scale set instance. This\n   * operation is only supported for managed disks.\n   * @param resourceGroupName The name of the resource group.\n   * @param vmScaleSetName The name of the VM scale set.\n   * @param instanceId The instance ID of the virtual machine.\n   * @param options The options parameters.\n   */\n  async beginReimageAllAndWait(\n    resourceGroupName: string,\n    vmScaleSetName: string,\n    instanceId: string,\n    options?: VirtualMachineScaleSetVMsReimageAllOptionalParams\n  ): Promise<void> {\n    const poller = await this.beginReimageAll(\n      resourceGroupName,\n      vmScaleSetName,\n      instanceId,\n      options\n    );\n    return poller.pollUntilDone();\n  }\n\n  /**\n   * Deallocates a specific virtual machine in a VM scale set. Shuts down the virtual machine and\n   * releases the compute resources it uses. You are not billed for the compute resources of this virtual\n   * machine once it is deallocated.\n   * @param resourceGroupName The name of the resource group.\n   * @param vmScaleSetName The name of the VM scale set.\n   * @param instanceId The instance ID of the virtual machine.\n   * @param options The options parameters.\n   */\n  async beginDeallocate(\n    resourceGroupName: string,\n    vmScaleSetName: string,\n    instanceId: string,\n    options?: VirtualMachineScaleSetVMsDeallocateOptionalParams\n  ): Promise<PollerLike<PollOperationState<void>, void>> {\n    const directSendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ): Promise<void> => {\n      return this.client.sendOperationRequest(args, spec);\n    };\n    const sendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ) => {\n      let currentRawResponse:\n        | coreClient.FullOperationResponse\n        | undefined = undefined;\n      const providedCallback = args.options?.onResponse;\n      const callback: coreClient.RawResponseCallback = (\n        rawResponse: coreClient.FullOperationResponse,\n        flatResponse: unknown\n      ) => {\n        currentRawResponse = rawResponse;\n        providedCallback?.(rawResponse, flatResponse);\n      };\n      const updatedArgs = {\n        ...args,\n        options: {\n          ...args.options,\n          onResponse: callback\n        }\n      };\n      const flatResponse = await directSendOperation(updatedArgs, spec);\n      return {\n        flatResponse,\n        rawResponse: {\n          statusCode: currentRawResponse!.status,\n          body: currentRawResponse!.parsedBody,\n          headers: currentRawResponse!.headers.toJSON()\n        }\n      };\n    };\n\n    const lro = new LroImpl(\n      sendOperation,\n      { resourceGroupName, vmScaleSetName, instanceId, options },\n      deallocateOperationSpec\n    );\n    return new LroEngine(lro, {\n      resumeFrom: options?.resumeFrom,\n      intervalInMs: options?.updateIntervalInMs\n    });\n  }\n\n  /**\n   * Deallocates a specific virtual machine in a VM scale set. Shuts down the virtual machine and\n   * releases the compute resources it uses. You are not billed for the compute resources of this virtual\n   * machine once it is deallocated.\n   * @param resourceGroupName The name of the resource group.\n   * @param vmScaleSetName The name of the VM scale set.\n   * @param instanceId The instance ID of the virtual machine.\n   * @param options The options parameters.\n   */\n  async beginDeallocateAndWait(\n    resourceGroupName: string,\n    vmScaleSetName: string,\n    instanceId: string,\n    options?: VirtualMachineScaleSetVMsDeallocateOptionalParams\n  ): Promise<void> {\n    const poller = await this.beginDeallocate(\n      resourceGroupName,\n      vmScaleSetName,\n      instanceId,\n      options\n    );\n    return poller.pollUntilDone();\n  }\n\n  /**\n   * Updates a virtual machine of a VM scale set.\n   * @param resourceGroupName The name of the resource group.\n   * @param vmScaleSetName The name of the VM scale set where the extension should be create or updated.\n   * @param instanceId The instance ID of the virtual machine.\n   * @param parameters Parameters supplied to the Update Virtual Machine Scale Sets VM operation.\n   * @param options The options parameters.\n   */\n  async beginUpdate(\n    resourceGroupName: string,\n    vmScaleSetName: string,\n    instanceId: string,\n    parameters: VirtualMachineScaleSetVM,\n    options?: VirtualMachineScaleSetVMsUpdateOptionalParams\n  ): Promise<\n    PollerLike<\n      PollOperationState<VirtualMachineScaleSetVMsUpdateResponse>,\n      VirtualMachineScaleSetVMsUpdateResponse\n    >\n  > {\n    const directSendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ): Promise<VirtualMachineScaleSetVMsUpdateResponse> => {\n      return this.client.sendOperationRequest(args, spec);\n    };\n    const sendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ) => {\n      let currentRawResponse:\n        | coreClient.FullOperationResponse\n        | undefined = undefined;\n      const providedCallback = args.options?.onResponse;\n      const callback: coreClient.RawResponseCallback = (\n        rawResponse: coreClient.FullOperationResponse,\n        flatResponse: unknown\n      ) => {\n        currentRawResponse = rawResponse;\n        providedCallback?.(rawResponse, flatResponse);\n      };\n      const updatedArgs = {\n        ...args,\n        options: {\n          ...args.options,\n          onResponse: callback\n        }\n      };\n      const flatResponse = await directSendOperation(updatedArgs, spec);\n      return {\n        flatResponse,\n        rawResponse: {\n          statusCode: currentRawResponse!.status,\n          body: currentRawResponse!.parsedBody,\n          headers: currentRawResponse!.headers.toJSON()\n        }\n      };\n    };\n\n    const lro = new LroImpl(\n      sendOperation,\n      { resourceGroupName, vmScaleSetName, instanceId, parameters, options },\n      updateOperationSpec\n    );\n    return new LroEngine(lro, {\n      resumeFrom: options?.resumeFrom,\n      intervalInMs: options?.updateIntervalInMs\n    });\n  }\n\n  /**\n   * Updates a virtual machine of a VM scale set.\n   * @param resourceGroupName The name of the resource group.\n   * @param vmScaleSetName The name of the VM scale set where the extension should be create or updated.\n   * @param instanceId The instance ID of the virtual machine.\n   * @param parameters Parameters supplied to the Update Virtual Machine Scale Sets VM operation.\n   * @param options The options parameters.\n   */\n  async beginUpdateAndWait(\n    resourceGroupName: string,\n    vmScaleSetName: string,\n    instanceId: string,\n    parameters: VirtualMachineScaleSetVM,\n    options?: VirtualMachineScaleSetVMsUpdateOptionalParams\n  ): Promise<VirtualMachineScaleSetVMsUpdateResponse> {\n    const poller = await this.beginUpdate(\n      resourceGroupName,\n      vmScaleSetName,\n      instanceId,\n      parameters,\n      options\n    );\n    return poller.pollUntilDone();\n  }\n\n  /**\n   * Deletes a virtual machine from a VM scale set.\n   * @param resourceGroupName The name of the resource group.\n   * @param vmScaleSetName The name of the VM scale set.\n   * @param instanceId The instance ID of the virtual machine.\n   * @param options The options parameters.\n   */\n  async beginDelete(\n    resourceGroupName: string,\n    vmScaleSetName: string,\n    instanceId: string,\n    options?: VirtualMachineScaleSetVMsDeleteOptionalParams\n  ): Promise<PollerLike<PollOperationState<void>, void>> {\n    const directSendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ): Promise<void> => {\n      return this.client.sendOperationRequest(args, spec);\n    };\n    const sendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ) => {\n      let currentRawResponse:\n        | coreClient.FullOperationResponse\n        | undefined = undefined;\n      const providedCallback = args.options?.onResponse;\n      const callback: coreClient.RawResponseCallback = (\n        rawResponse: coreClient.FullOperationResponse,\n        flatResponse: unknown\n      ) => {\n        currentRawResponse = rawResponse;\n        providedCallback?.(rawResponse, flatResponse);\n      };\n      const updatedArgs = {\n        ...args,\n        options: {\n          ...args.options,\n          onResponse: callback\n        }\n      };\n      const flatResponse = await directSendOperation(updatedArgs, spec);\n      return {\n        flatResponse,\n        rawResponse: {\n          statusCode: currentRawResponse!.status,\n          body: currentRawResponse!.parsedBody,\n          headers: currentRawResponse!.headers.toJSON()\n        }\n      };\n    };\n\n    const lro = new LroImpl(\n      sendOperation,\n      { resourceGroupName, vmScaleSetName, instanceId, options },\n      deleteOperationSpec\n    );\n    return new LroEngine(lro, {\n      resumeFrom: options?.resumeFrom,\n      intervalInMs: options?.updateIntervalInMs\n    });\n  }\n\n  /**\n   * Deletes a virtual machine from a VM scale set.\n   * @param resourceGroupName The name of the resource group.\n   * @param vmScaleSetName The name of the VM scale set.\n   * @param instanceId The instance ID of the virtual machine.\n   * @param options The options parameters.\n   */\n  async beginDeleteAndWait(\n    resourceGroupName: string,\n    vmScaleSetName: string,\n    instanceId: string,\n    options?: VirtualMachineScaleSetVMsDeleteOptionalParams\n  ): Promise<void> {\n    const poller = await this.beginDelete(\n      resourceGroupName,\n      vmScaleSetName,\n      instanceId,\n      options\n    );\n    return poller.pollUntilDone();\n  }\n\n  /**\n   * Gets a virtual machine from a VM scale set.\n   * @param resourceGroupName The name of the resource group.\n   * @param vmScaleSetName The name of the VM scale set.\n   * @param instanceId The instance ID of the virtual machine.\n   * @param options The options parameters.\n   */\n  get(\n    resourceGroupName: string,\n    vmScaleSetName: string,\n    instanceId: string,\n    options?: VirtualMachineScaleSetVMsGetOptionalParams\n  ): Promise<VirtualMachineScaleSetVMsGetResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, vmScaleSetName, instanceId, options },\n      getOperationSpec\n    );\n  }\n\n  /**\n   * Gets the status of a virtual machine from a VM scale set.\n   * @param resourceGroupName The name of the resource group.\n   * @param vmScaleSetName The name of the VM scale set.\n   * @param instanceId The instance ID of the virtual machine.\n   * @param options The options parameters.\n   */\n  getInstanceView(\n    resourceGroupName: string,\n    vmScaleSetName: string,\n    instanceId: string,\n    options?: VirtualMachineScaleSetVMsGetInstanceViewOptionalParams\n  ): Promise<VirtualMachineScaleSetVMsGetInstanceViewResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, vmScaleSetName, instanceId, options },\n      getInstanceViewOperationSpec\n    );\n  }\n\n  /**\n   * Gets a list of all virtual machines in a VM scale sets.\n   * @param resourceGroupName The name of the resource group.\n   * @param virtualMachineScaleSetName The name of the VM scale set.\n   * @param options The options parameters.\n   */\n  private _list(\n    resourceGroupName: string,\n    virtualMachineScaleSetName: string,\n    options?: VirtualMachineScaleSetVMsListOptionalParams\n  ): Promise<VirtualMachineScaleSetVMsListResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, virtualMachineScaleSetName, options },\n      listOperationSpec\n    );\n  }\n\n  /**\n   * Power off (stop) a virtual machine in a VM scale set. Note that resources are still attached and you\n   * are getting charged for the resources. Instead, use deallocate to release resources and avoid\n   * charges.\n   * @param resourceGroupName The name of the resource group.\n   * @param vmScaleSetName The name of the VM scale set.\n   * @param instanceId The instance ID of the virtual machine.\n   * @param options The options parameters.\n   */\n  async beginPowerOff(\n    resourceGroupName: string,\n    vmScaleSetName: string,\n    instanceId: string,\n    options?: VirtualMachineScaleSetVMsPowerOffOptionalParams\n  ): Promise<PollerLike<PollOperationState<void>, void>> {\n    const directSendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ): Promise<void> => {\n      return this.client.sendOperationRequest(args, spec);\n    };\n    const sendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ) => {\n      let currentRawResponse:\n        | coreClient.FullOperationResponse\n        | undefined = undefined;\n      const providedCallback = args.options?.onResponse;\n      const callback: coreClient.RawResponseCallback = (\n        rawResponse: coreClient.FullOperationResponse,\n        flatResponse: unknown\n      ) => {\n        currentRawResponse = rawResponse;\n        providedCallback?.(rawResponse, flatResponse);\n      };\n      const updatedArgs = {\n        ...args,\n        options: {\n          ...args.options,\n          onResponse: callback\n        }\n      };\n      const flatResponse = await directSendOperation(updatedArgs, spec);\n      return {\n        flatResponse,\n        rawResponse: {\n          statusCode: currentRawResponse!.status,\n          body: currentRawResponse!.parsedBody,\n          headers: currentRawResponse!.headers.toJSON()\n        }\n      };\n    };\n\n    const lro = new LroImpl(\n      sendOperation,\n      { resourceGroupName, vmScaleSetName, instanceId, options },\n      powerOffOperationSpec\n    );\n    return new LroEngine(lro, {\n      resumeFrom: options?.resumeFrom,\n      intervalInMs: options?.updateIntervalInMs\n    });\n  }\n\n  /**\n   * Power off (stop) a virtual machine in a VM scale set. Note that resources are still attached and you\n   * are getting charged for the resources. Instead, use deallocate to release resources and avoid\n   * charges.\n   * @param resourceGroupName The name of the resource group.\n   * @param vmScaleSetName The name of the VM scale set.\n   * @param instanceId The instance ID of the virtual machine.\n   * @param options The options parameters.\n   */\n  async beginPowerOffAndWait(\n    resourceGroupName: string,\n    vmScaleSetName: string,\n    instanceId: string,\n    options?: VirtualMachineScaleSetVMsPowerOffOptionalParams\n  ): Promise<void> {\n    const poller = await this.beginPowerOff(\n      resourceGroupName,\n      vmScaleSetName,\n      instanceId,\n      options\n    );\n    return poller.pollUntilDone();\n  }\n\n  /**\n   * Restarts a virtual machine in a VM scale set.\n   * @param resourceGroupName The name of the resource group.\n   * @param vmScaleSetName The name of the VM scale set.\n   * @param instanceId The instance ID of the virtual machine.\n   * @param options The options parameters.\n   */\n  async beginRestart(\n    resourceGroupName: string,\n    vmScaleSetName: string,\n    instanceId: string,\n    options?: VirtualMachineScaleSetVMsRestartOptionalParams\n  ): Promise<PollerLike<PollOperationState<void>, void>> {\n    const directSendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ): Promise<void> => {\n      return this.client.sendOperationRequest(args, spec);\n    };\n    const sendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ) => {\n      let currentRawResponse:\n        | coreClient.FullOperationResponse\n        | undefined = undefined;\n      const providedCallback = args.options?.onResponse;\n      const callback: coreClient.RawResponseCallback = (\n        rawResponse: coreClient.FullOperationResponse,\n        flatResponse: unknown\n      ) => {\n        currentRawResponse = rawResponse;\n        providedCallback?.(rawResponse, flatResponse);\n      };\n      const updatedArgs = {\n        ...args,\n        options: {\n          ...args.options,\n          onResponse: callback\n        }\n      };\n      const flatResponse = await directSendOperation(updatedArgs, spec);\n      return {\n        flatResponse,\n        rawResponse: {\n          statusCode: currentRawResponse!.status,\n          body: currentRawResponse!.parsedBody,\n          headers: currentRawResponse!.headers.toJSON()\n        }\n      };\n    };\n\n    const lro = new LroImpl(\n      sendOperation,\n      { resourceGroupName, vmScaleSetName, instanceId, options },\n      restartOperationSpec\n    );\n    return new LroEngine(lro, {\n      resumeFrom: options?.resumeFrom,\n      intervalInMs: options?.updateIntervalInMs\n    });\n  }\n\n  /**\n   * Restarts a virtual machine in a VM scale set.\n   * @param resourceGroupName The name of the resource group.\n   * @param vmScaleSetName The name of the VM scale set.\n   * @param instanceId The instance ID of the virtual machine.\n   * @param options The options parameters.\n   */\n  async beginRestartAndWait(\n    resourceGroupName: string,\n    vmScaleSetName: string,\n    instanceId: string,\n    options?: VirtualMachineScaleSetVMsRestartOptionalParams\n  ): Promise<void> {\n    const poller = await this.beginRestart(\n      resourceGroupName,\n      vmScaleSetName,\n      instanceId,\n      options\n    );\n    return poller.pollUntilDone();\n  }\n\n  /**\n   * Starts a virtual machine in a VM scale set.\n   * @param resourceGroupName The name of the resource group.\n   * @param vmScaleSetName The name of the VM scale set.\n   * @param instanceId The instance ID of the virtual machine.\n   * @param options The options parameters.\n   */\n  async beginStart(\n    resourceGroupName: string,\n    vmScaleSetName: string,\n    instanceId: string,\n    options?: VirtualMachineScaleSetVMsStartOptionalParams\n  ): Promise<PollerLike<PollOperationState<void>, void>> {\n    const directSendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ): Promise<void> => {\n      return this.client.sendOperationRequest(args, spec);\n    };\n    const sendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ) => {\n      let currentRawResponse:\n        | coreClient.FullOperationResponse\n        | undefined = undefined;\n      const providedCallback = args.options?.onResponse;\n      const callback: coreClient.RawResponseCallback = (\n        rawResponse: coreClient.FullOperationResponse,\n        flatResponse: unknown\n      ) => {\n        currentRawResponse = rawResponse;\n        providedCallback?.(rawResponse, flatResponse);\n      };\n      const updatedArgs = {\n        ...args,\n        options: {\n          ...args.options,\n          onResponse: callback\n        }\n      };\n      const flatResponse = await directSendOperation(updatedArgs, spec);\n      return {\n        flatResponse,\n        rawResponse: {\n          statusCode: currentRawResponse!.status,\n          body: currentRawResponse!.parsedBody,\n          headers: currentRawResponse!.headers.toJSON()\n        }\n      };\n    };\n\n    const lro = new LroImpl(\n      sendOperation,\n      { resourceGroupName, vmScaleSetName, instanceId, options },\n      startOperationSpec\n    );\n    return new LroEngine(lro, {\n      resumeFrom: options?.resumeFrom,\n      intervalInMs: options?.updateIntervalInMs\n    });\n  }\n\n  /**\n   * Starts a virtual machine in a VM scale set.\n   * @param resourceGroupName The name of the resource group.\n   * @param vmScaleSetName The name of the VM scale set.\n   * @param instanceId The instance ID of the virtual machine.\n   * @param options The options parameters.\n   */\n  async beginStartAndWait(\n    resourceGroupName: string,\n    vmScaleSetName: string,\n    instanceId: string,\n    options?: VirtualMachineScaleSetVMsStartOptionalParams\n  ): Promise<void> {\n    const poller = await this.beginStart(\n      resourceGroupName,\n      vmScaleSetName,\n      instanceId,\n      options\n    );\n    return poller.pollUntilDone();\n  }\n\n  /**\n   * Shuts down the virtual machine in the virtual machine scale set, moves it to a new node, and powers\n   * it back on.\n   * @param resourceGroupName The name of the resource group.\n   * @param vmScaleSetName The name of the VM scale set.\n   * @param instanceId The instance ID of the virtual machine.\n   * @param options The options parameters.\n   */\n  async beginRedeploy(\n    resourceGroupName: string,\n    vmScaleSetName: string,\n    instanceId: string,\n    options?: VirtualMachineScaleSetVMsRedeployOptionalParams\n  ): Promise<PollerLike<PollOperationState<void>, void>> {\n    const directSendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ): Promise<void> => {\n      return this.client.sendOperationRequest(args, spec);\n    };\n    const sendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ) => {\n      let currentRawResponse:\n        | coreClient.FullOperationResponse\n        | undefined = undefined;\n      const providedCallback = args.options?.onResponse;\n      const callback: coreClient.RawResponseCallback = (\n        rawResponse: coreClient.FullOperationResponse,\n        flatResponse: unknown\n      ) => {\n        currentRawResponse = rawResponse;\n        providedCallback?.(rawResponse, flatResponse);\n      };\n      const updatedArgs = {\n        ...args,\n        options: {\n          ...args.options,\n          onResponse: callback\n        }\n      };\n      const flatResponse = await directSendOperation(updatedArgs, spec);\n      return {\n        flatResponse,\n        rawResponse: {\n          statusCode: currentRawResponse!.status,\n          body: currentRawResponse!.parsedBody,\n          headers: currentRawResponse!.headers.toJSON()\n        }\n      };\n    };\n\n    const lro = new LroImpl(\n      sendOperation,\n      { resourceGroupName, vmScaleSetName, instanceId, options },\n      redeployOperationSpec\n    );\n    return new LroEngine(lro, {\n      resumeFrom: options?.resumeFrom,\n      intervalInMs: options?.updateIntervalInMs\n    });\n  }\n\n  /**\n   * Shuts down the virtual machine in the virtual machine scale set, moves it to a new node, and powers\n   * it back on.\n   * @param resourceGroupName The name of the resource group.\n   * @param vmScaleSetName The name of the VM scale set.\n   * @param instanceId The instance ID of the virtual machine.\n   * @param options The options parameters.\n   */\n  async beginRedeployAndWait(\n    resourceGroupName: string,\n    vmScaleSetName: string,\n    instanceId: string,\n    options?: VirtualMachineScaleSetVMsRedeployOptionalParams\n  ): Promise<void> {\n    const poller = await this.beginRedeploy(\n      resourceGroupName,\n      vmScaleSetName,\n      instanceId,\n      options\n    );\n    return poller.pollUntilDone();\n  }\n\n  /**\n   * The operation to retrieve SAS URIs of boot diagnostic logs for a virtual machine in a VM scale set.\n   * @param resourceGroupName The name of the resource group.\n   * @param vmScaleSetName The name of the VM scale set.\n   * @param instanceId The instance ID of the virtual machine.\n   * @param options The options parameters.\n   */\n  retrieveBootDiagnosticsData(\n    resourceGroupName: string,\n    vmScaleSetName: string,\n    instanceId: string,\n    options?: VirtualMachineScaleSetVMsRetrieveBootDiagnosticsDataOptionalParams\n  ): Promise<VirtualMachineScaleSetVMsRetrieveBootDiagnosticsDataResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, vmScaleSetName, instanceId, options },\n      retrieveBootDiagnosticsDataOperationSpec\n    );\n  }\n\n  /**\n   * Performs maintenance on a virtual machine in a VM scale set.\n   * @param resourceGroupName The name of the resource group.\n   * @param vmScaleSetName The name of the VM scale set.\n   * @param instanceId The instance ID of the virtual machine.\n   * @param options The options parameters.\n   */\n  async beginPerformMaintenance(\n    resourceGroupName: string,\n    vmScaleSetName: string,\n    instanceId: string,\n    options?: VirtualMachineScaleSetVMsPerformMaintenanceOptionalParams\n  ): Promise<PollerLike<PollOperationState<void>, void>> {\n    const directSendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ): Promise<void> => {\n      return this.client.sendOperationRequest(args, spec);\n    };\n    const sendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ) => {\n      let currentRawResponse:\n        | coreClient.FullOperationResponse\n        | undefined = undefined;\n      const providedCallback = args.options?.onResponse;\n      const callback: coreClient.RawResponseCallback = (\n        rawResponse: coreClient.FullOperationResponse,\n        flatResponse: unknown\n      ) => {\n        currentRawResponse = rawResponse;\n        providedCallback?.(rawResponse, flatResponse);\n      };\n      const updatedArgs = {\n        ...args,\n        options: {\n          ...args.options,\n          onResponse: callback\n        }\n      };\n      const flatResponse = await directSendOperation(updatedArgs, spec);\n      return {\n        flatResponse,\n        rawResponse: {\n          statusCode: currentRawResponse!.status,\n          body: currentRawResponse!.parsedBody,\n          headers: currentRawResponse!.headers.toJSON()\n        }\n      };\n    };\n\n    const lro = new LroImpl(\n      sendOperation,\n      { resourceGroupName, vmScaleSetName, instanceId, options },\n      performMaintenanceOperationSpec\n    );\n    return new LroEngine(lro, {\n      resumeFrom: options?.resumeFrom,\n      intervalInMs: options?.updateIntervalInMs\n    });\n  }\n\n  /**\n   * Performs maintenance on a virtual machine in a VM scale set.\n   * @param resourceGroupName The name of the resource group.\n   * @param vmScaleSetName The name of the VM scale set.\n   * @param instanceId The instance ID of the virtual machine.\n   * @param options The options parameters.\n   */\n  async beginPerformMaintenanceAndWait(\n    resourceGroupName: string,\n    vmScaleSetName: string,\n    instanceId: string,\n    options?: VirtualMachineScaleSetVMsPerformMaintenanceOptionalParams\n  ): Promise<void> {\n    const poller = await this.beginPerformMaintenance(\n      resourceGroupName,\n      vmScaleSetName,\n      instanceId,\n      options\n    );\n    return poller.pollUntilDone();\n  }\n\n  /**\n   * The operation to simulate the eviction of spot virtual machine in a VM scale set.\n   * @param resourceGroupName The name of the resource group.\n   * @param vmScaleSetName The name of the VM scale set.\n   * @param instanceId The instance ID of the virtual machine.\n   * @param options The options parameters.\n   */\n  simulateEviction(\n    resourceGroupName: string,\n    vmScaleSetName: string,\n    instanceId: string,\n    options?: VirtualMachineScaleSetVMsSimulateEvictionOptionalParams\n  ): Promise<void> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, vmScaleSetName, instanceId, options },\n      simulateEvictionOperationSpec\n    );\n  }\n\n  /**\n   * Run command on a virtual machine in a VM scale set.\n   * @param resourceGroupName The name of the resource group.\n   * @param vmScaleSetName The name of the VM scale set.\n   * @param instanceId The instance ID of the virtual machine.\n   * @param parameters Parameters supplied to the Run command operation.\n   * @param options The options parameters.\n   */\n  async beginRunCommand(\n    resourceGroupName: string,\n    vmScaleSetName: string,\n    instanceId: string,\n    parameters: RunCommandInput,\n    options?: VirtualMachineScaleSetVMsRunCommandOptionalParams\n  ): Promise<\n    PollerLike<\n      PollOperationState<VirtualMachineScaleSetVMsRunCommandResponse>,\n      VirtualMachineScaleSetVMsRunCommandResponse\n    >\n  > {\n    const directSendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ): Promise<VirtualMachineScaleSetVMsRunCommandResponse> => {\n      return this.client.sendOperationRequest(args, spec);\n    };\n    const sendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ) => {\n      let currentRawResponse:\n        | coreClient.FullOperationResponse\n        | undefined = undefined;\n      const providedCallback = args.options?.onResponse;\n      const callback: coreClient.RawResponseCallback = (\n        rawResponse: coreClient.FullOperationResponse,\n        flatResponse: unknown\n      ) => {\n        currentRawResponse = rawResponse;\n        providedCallback?.(rawResponse, flatResponse);\n      };\n      const updatedArgs = {\n        ...args,\n        options: {\n          ...args.options,\n          onResponse: callback\n        }\n      };\n      const flatResponse = await directSendOperation(updatedArgs, spec);\n      return {\n        flatResponse,\n        rawResponse: {\n          statusCode: currentRawResponse!.status,\n          body: currentRawResponse!.parsedBody,\n          headers: currentRawResponse!.headers.toJSON()\n        }\n      };\n    };\n\n    const lro = new LroImpl(\n      sendOperation,\n      { resourceGroupName, vmScaleSetName, instanceId, parameters, options },\n      runCommandOperationSpec\n    );\n    return new LroEngine(lro, {\n      resumeFrom: options?.resumeFrom,\n      intervalInMs: options?.updateIntervalInMs,\n      lroResourceLocationConfig: \"location\"\n    });\n  }\n\n  /**\n   * Run command on a virtual machine in a VM scale set.\n   * @param resourceGroupName The name of the resource group.\n   * @param vmScaleSetName The name of the VM scale set.\n   * @param instanceId The instance ID of the virtual machine.\n   * @param parameters Parameters supplied to the Run command operation.\n   * @param options The options parameters.\n   */\n  async beginRunCommandAndWait(\n    resourceGroupName: string,\n    vmScaleSetName: string,\n    instanceId: string,\n    parameters: RunCommandInput,\n    options?: VirtualMachineScaleSetVMsRunCommandOptionalParams\n  ): Promise<VirtualMachineScaleSetVMsRunCommandResponse> {\n    const poller = await this.beginRunCommand(\n      resourceGroupName,\n      vmScaleSetName,\n      instanceId,\n      parameters,\n      options\n    );\n    return poller.pollUntilDone();\n  }\n\n  /**\n   * ListNext\n   * @param resourceGroupName The name of the resource group.\n   * @param virtualMachineScaleSetName The name of the VM scale set.\n   * @param nextLink The nextLink from the previous successful call to the List method.\n   * @param options The options parameters.\n   */\n  private _listNext(\n    resourceGroupName: string,\n    virtualMachineScaleSetName: string,\n    nextLink: string,\n    options?: VirtualMachineScaleSetVMsListNextOptionalParams\n  ): Promise<VirtualMachineScaleSetVMsListNextResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, virtualMachineScaleSetName, nextLink, options },\n      listNextOperationSpec\n    );\n  }\n}\n// Operation Specifications\nconst serializer = coreClient.createSerializer(Mappers, /* isXml */ false);\n\nconst reimageOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/virtualMachineScaleSets/{vmScaleSetName}/virtualMachines/{instanceId}/reimage\",\n  httpMethod: \"POST\",\n  responses: {\n    200: {},\n    201: {},\n    202: {},\n    204: {},\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  requestBody: Parameters.vmScaleSetVMReimageInput,\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.resourceGroupName,\n    Parameters.subscriptionId,\n    Parameters.vmScaleSetName,\n    Parameters.instanceId\n  ],\n  headerParameters: [Parameters.accept, Parameters.contentType],\n  mediaType: \"json\",\n  serializer\n};\nconst reimageAllOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/virtualMachineScaleSets/{vmScaleSetName}/virtualMachines/{instanceId}/reimageall\",\n  httpMethod: \"POST\",\n  responses: {\n    200: {},\n    201: {},\n    202: {},\n    204: {},\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.resourceGroupName,\n    Parameters.subscriptionId,\n    Parameters.vmScaleSetName,\n    Parameters.instanceId\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst deallocateOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/virtualMachineScaleSets/{vmScaleSetName}/virtualMachines/{instanceId}/deallocate\",\n  httpMethod: \"POST\",\n  responses: {\n    200: {},\n    201: {},\n    202: {},\n    204: {},\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.resourceGroupName,\n    Parameters.subscriptionId,\n    Parameters.vmScaleSetName,\n    Parameters.instanceId\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst updateOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/virtualMachineScaleSets/{vmScaleSetName}/virtualMachines/{instanceId}\",\n  httpMethod: \"PUT\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.VirtualMachineScaleSetVM\n    },\n    201: {\n      bodyMapper: Mappers.VirtualMachineScaleSetVM\n    },\n    202: {\n      bodyMapper: Mappers.VirtualMachineScaleSetVM\n    },\n    204: {\n      bodyMapper: Mappers.VirtualMachineScaleSetVM\n    },\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  requestBody: Parameters.parameters28,\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.resourceGroupName,\n    Parameters.subscriptionId,\n    Parameters.vmScaleSetName,\n    Parameters.instanceId\n  ],\n  headerParameters: [Parameters.accept, Parameters.contentType],\n  mediaType: \"json\",\n  serializer\n};\nconst deleteOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/virtualMachineScaleSets/{vmScaleSetName}/virtualMachines/{instanceId}\",\n  httpMethod: \"DELETE\",\n  responses: {\n    200: {},\n    201: {},\n    202: {},\n    204: {},\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  queryParameters: [Parameters.apiVersion, Parameters.forceDeletion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.resourceGroupName,\n    Parameters.subscriptionId,\n    Parameters.vmScaleSetName,\n    Parameters.instanceId\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst getOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/virtualMachineScaleSets/{vmScaleSetName}/virtualMachines/{instanceId}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.VirtualMachineScaleSetVM\n    },\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  queryParameters: [Parameters.apiVersion, Parameters.expand1],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.resourceGroupName,\n    Parameters.subscriptionId,\n    Parameters.vmScaleSetName,\n    Parameters.instanceId\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst getInstanceViewOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/virtualMachineScaleSets/{vmScaleSetName}/virtualMachines/{instanceId}/instanceView\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.VirtualMachineScaleSetVMInstanceView\n    },\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.resourceGroupName,\n    Parameters.subscriptionId,\n    Parameters.vmScaleSetName,\n    Parameters.instanceId\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst listOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/virtualMachineScaleSets/{virtualMachineScaleSetName}/virtualMachines\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.VirtualMachineScaleSetVMListResult\n    },\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  queryParameters: [\n    Parameters.apiVersion,\n    Parameters.expand,\n    Parameters.filter,\n    Parameters.select\n  ],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.resourceGroupName,\n    Parameters.subscriptionId,\n    Parameters.virtualMachineScaleSetName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst powerOffOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/virtualMachineScaleSets/{vmScaleSetName}/virtualmachines/{instanceId}/poweroff\",\n  httpMethod: \"POST\",\n  responses: {\n    200: {},\n    201: {},\n    202: {},\n    204: {},\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  queryParameters: [Parameters.apiVersion, Parameters.skipShutdown],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.resourceGroupName,\n    Parameters.subscriptionId,\n    Parameters.vmScaleSetName,\n    Parameters.instanceId\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst restartOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/virtualMachineScaleSets/{vmScaleSetName}/virtualmachines/{instanceId}/restart\",\n  httpMethod: \"POST\",\n  responses: {\n    200: {},\n    201: {},\n    202: {},\n    204: {},\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.resourceGroupName,\n    Parameters.subscriptionId,\n    Parameters.vmScaleSetName,\n    Parameters.instanceId\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst startOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/virtualMachineScaleSets/{vmScaleSetName}/virtualmachines/{instanceId}/start\",\n  httpMethod: \"POST\",\n  responses: {\n    200: {},\n    201: {},\n    202: {},\n    204: {},\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.resourceGroupName,\n    Parameters.subscriptionId,\n    Parameters.vmScaleSetName,\n    Parameters.instanceId\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst redeployOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/virtualMachineScaleSets/{vmScaleSetName}/virtualmachines/{instanceId}/redeploy\",\n  httpMethod: \"POST\",\n  responses: {\n    200: {},\n    201: {},\n    202: {},\n    204: {},\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.resourceGroupName,\n    Parameters.subscriptionId,\n    Parameters.vmScaleSetName,\n    Parameters.instanceId\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst retrieveBootDiagnosticsDataOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/virtualMachineScaleSets/{vmScaleSetName}/virtualmachines/{instanceId}/retrieveBootDiagnosticsData\",\n  httpMethod: \"POST\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.RetrieveBootDiagnosticsDataResult\n    },\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  queryParameters: [\n    Parameters.apiVersion,\n    Parameters.sasUriExpirationTimeInMinutes\n  ],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.resourceGroupName,\n    Parameters.subscriptionId,\n    Parameters.vmScaleSetName,\n    Parameters.instanceId\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst performMaintenanceOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/virtualMachineScaleSets/{vmScaleSetName}/virtualmachines/{instanceId}/performMaintenance\",\n  httpMethod: \"POST\",\n  responses: {\n    200: {},\n    201: {},\n    202: {},\n    204: {},\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.resourceGroupName,\n    Parameters.subscriptionId,\n    Parameters.vmScaleSetName,\n    Parameters.instanceId\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst simulateEvictionOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/virtualMachineScaleSets/{vmScaleSetName}/virtualMachines/{instanceId}/simulateEviction\",\n  httpMethod: \"POST\",\n  responses: {\n    204: {},\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.resourceGroupName,\n    Parameters.subscriptionId,\n    Parameters.vmScaleSetName,\n    Parameters.instanceId\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst runCommandOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/virtualMachineScaleSets/{vmScaleSetName}/virtualmachines/{instanceId}/runCommand\",\n  httpMethod: \"POST\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.RunCommandResult\n    },\n    201: {\n      bodyMapper: Mappers.RunCommandResult\n    },\n    202: {\n      bodyMapper: Mappers.RunCommandResult\n    },\n    204: {\n      bodyMapper: Mappers.RunCommandResult\n    }\n  },\n  requestBody: Parameters.parameters14,\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.resourceGroupName,\n    Parameters.subscriptionId,\n    Parameters.vmScaleSetName,\n    Parameters.instanceId\n  ],\n  headerParameters: [Parameters.contentType, Parameters.accept1],\n  mediaType: \"json\",\n  serializer\n};\nconst listNextOperationSpec: coreClient.OperationSpec = {\n  path: \"{nextLink}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.VirtualMachineScaleSetVMListResult\n    },\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  queryParameters: [\n    Parameters.apiVersion,\n    Parameters.expand,\n    Parameters.filter,\n    Parameters.select\n  ],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.resourceGroupName,\n    Parameters.subscriptionId,\n    Parameters.nextLink,\n    Parameters.virtualMachineScaleSetName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport { LogAnalytics } from \"../operationsInterfaces\";\nimport * as coreClient from \"@azure/core-client\";\nimport * as Mappers from \"../models/mappers\";\nimport * as Parameters from \"../models/parameters\";\nimport { ComputeManagementClient } from \"../computeManagementClient\";\nimport { PollerLike, PollOperationState, LroEngine } from \"@azure/core-lro\";\nimport { LroImpl } from \"../lroImpl\";\nimport {\n  RequestRateByIntervalInput,\n  LogAnalyticsExportRequestRateByIntervalOptionalParams,\n  LogAnalyticsExportRequestRateByIntervalResponse,\n  ThrottledRequestsInput,\n  LogAnalyticsExportThrottledRequestsOptionalParams,\n  LogAnalyticsExportThrottledRequestsResponse\n} from \"../models\";\n\n/** Class containing LogAnalytics operations. */\nexport class LogAnalyticsImpl implements LogAnalytics {\n  private readonly client: ComputeManagementClient;\n\n  /**\n   * Initialize a new instance of the class LogAnalytics class.\n   * @param client Reference to the service client\n   */\n  constructor(client: ComputeManagementClient) {\n    this.client = client;\n  }\n\n  /**\n   * Export logs that show Api requests made by this subscription in the given time window to show\n   * throttling activities.\n   * @param location The location upon which virtual-machine-sizes is queried.\n   * @param parameters Parameters supplied to the LogAnalytics getRequestRateByInterval Api.\n   * @param options The options parameters.\n   */\n  async beginExportRequestRateByInterval(\n    location: string,\n    parameters: RequestRateByIntervalInput,\n    options?: LogAnalyticsExportRequestRateByIntervalOptionalParams\n  ): Promise<\n    PollerLike<\n      PollOperationState<LogAnalyticsExportRequestRateByIntervalResponse>,\n      LogAnalyticsExportRequestRateByIntervalResponse\n    >\n  > {\n    const directSendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ): Promise<LogAnalyticsExportRequestRateByIntervalResponse> => {\n      return this.client.sendOperationRequest(args, spec);\n    };\n    const sendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ) => {\n      let currentRawResponse:\n        | coreClient.FullOperationResponse\n        | undefined = undefined;\n      const providedCallback = args.options?.onResponse;\n      const callback: coreClient.RawResponseCallback = (\n        rawResponse: coreClient.FullOperationResponse,\n        flatResponse: unknown\n      ) => {\n        currentRawResponse = rawResponse;\n        providedCallback?.(rawResponse, flatResponse);\n      };\n      const updatedArgs = {\n        ...args,\n        options: {\n          ...args.options,\n          onResponse: callback\n        }\n      };\n      const flatResponse = await directSendOperation(updatedArgs, spec);\n      return {\n        flatResponse,\n        rawResponse: {\n          statusCode: currentRawResponse!.status,\n          body: currentRawResponse!.parsedBody,\n          headers: currentRawResponse!.headers.toJSON()\n        }\n      };\n    };\n\n    const lro = new LroImpl(\n      sendOperation,\n      { location, parameters, options },\n      exportRequestRateByIntervalOperationSpec\n    );\n    return new LroEngine(lro, {\n      resumeFrom: options?.resumeFrom,\n      intervalInMs: options?.updateIntervalInMs,\n      lroResourceLocationConfig: \"azure-async-operation\"\n    });\n  }\n\n  /**\n   * Export logs that show Api requests made by this subscription in the given time window to show\n   * throttling activities.\n   * @param location The location upon which virtual-machine-sizes is queried.\n   * @param parameters Parameters supplied to the LogAnalytics getRequestRateByInterval Api.\n   * @param options The options parameters.\n   */\n  async beginExportRequestRateByIntervalAndWait(\n    location: string,\n    parameters: RequestRateByIntervalInput,\n    options?: LogAnalyticsExportRequestRateByIntervalOptionalParams\n  ): Promise<LogAnalyticsExportRequestRateByIntervalResponse> {\n    const poller = await this.beginExportRequestRateByInterval(\n      location,\n      parameters,\n      options\n    );\n    return poller.pollUntilDone();\n  }\n\n  /**\n   * Export logs that show total throttled Api requests for this subscription in the given time window.\n   * @param location The location upon which virtual-machine-sizes is queried.\n   * @param parameters Parameters supplied to the LogAnalytics getThrottledRequests Api.\n   * @param options The options parameters.\n   */\n  async beginExportThrottledRequests(\n    location: string,\n    parameters: ThrottledRequestsInput,\n    options?: LogAnalyticsExportThrottledRequestsOptionalParams\n  ): Promise<\n    PollerLike<\n      PollOperationState<LogAnalyticsExportThrottledRequestsResponse>,\n      LogAnalyticsExportThrottledRequestsResponse\n    >\n  > {\n    const directSendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ): Promise<LogAnalyticsExportThrottledRequestsResponse> => {\n      return this.client.sendOperationRequest(args, spec);\n    };\n    const sendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ) => {\n      let currentRawResponse:\n        | coreClient.FullOperationResponse\n        | undefined = undefined;\n      const providedCallback = args.options?.onResponse;\n      const callback: coreClient.RawResponseCallback = (\n        rawResponse: coreClient.FullOperationResponse,\n        flatResponse: unknown\n      ) => {\n        currentRawResponse = rawResponse;\n        providedCallback?.(rawResponse, flatResponse);\n      };\n      const updatedArgs = {\n        ...args,\n        options: {\n          ...args.options,\n          onResponse: callback\n        }\n      };\n      const flatResponse = await directSendOperation(updatedArgs, spec);\n      return {\n        flatResponse,\n        rawResponse: {\n          statusCode: currentRawResponse!.status,\n          body: currentRawResponse!.parsedBody,\n          headers: currentRawResponse!.headers.toJSON()\n        }\n      };\n    };\n\n    const lro = new LroImpl(\n      sendOperation,\n      { location, parameters, options },\n      exportThrottledRequestsOperationSpec\n    );\n    return new LroEngine(lro, {\n      resumeFrom: options?.resumeFrom,\n      intervalInMs: options?.updateIntervalInMs,\n      lroResourceLocationConfig: \"azure-async-operation\"\n    });\n  }\n\n  /**\n   * Export logs that show total throttled Api requests for this subscription in the given time window.\n   * @param location The location upon which virtual-machine-sizes is queried.\n   * @param parameters Parameters supplied to the LogAnalytics getThrottledRequests Api.\n   * @param options The options parameters.\n   */\n  async beginExportThrottledRequestsAndWait(\n    location: string,\n    parameters: ThrottledRequestsInput,\n    options?: LogAnalyticsExportThrottledRequestsOptionalParams\n  ): Promise<LogAnalyticsExportThrottledRequestsResponse> {\n    const poller = await this.beginExportThrottledRequests(\n      location,\n      parameters,\n      options\n    );\n    return poller.pollUntilDone();\n  }\n}\n// Operation Specifications\nconst serializer = coreClient.createSerializer(Mappers, /* isXml */ false);\n\nconst exportRequestRateByIntervalOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/providers/Microsoft.Compute/locations/{location}/logAnalytics/apiAccess/getRequestRateByInterval\",\n  httpMethod: \"POST\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.LogAnalyticsOperationResult\n    },\n    201: {\n      bodyMapper: Mappers.LogAnalyticsOperationResult\n    },\n    202: {\n      bodyMapper: Mappers.LogAnalyticsOperationResult\n    },\n    204: {\n      bodyMapper: Mappers.LogAnalyticsOperationResult\n    },\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  requestBody: Parameters.parameters29,\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.location1\n  ],\n  headerParameters: [Parameters.accept, Parameters.contentType],\n  mediaType: \"json\",\n  serializer\n};\nconst exportThrottledRequestsOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/providers/Microsoft.Compute/locations/{location}/logAnalytics/apiAccess/getThrottledRequests\",\n  httpMethod: \"POST\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.LogAnalyticsOperationResult\n    },\n    201: {\n      bodyMapper: Mappers.LogAnalyticsOperationResult\n    },\n    202: {\n      bodyMapper: Mappers.LogAnalyticsOperationResult\n    },\n    204: {\n      bodyMapper: Mappers.LogAnalyticsOperationResult\n    },\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  requestBody: Parameters.parameters30,\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.location1\n  ],\n  headerParameters: [Parameters.accept, Parameters.contentType],\n  mediaType: \"json\",\n  serializer\n};\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport { PagedAsyncIterableIterator } from \"@azure/core-paging\";\nimport { VirtualMachineRunCommands } from \"../operationsInterfaces\";\nimport * as coreClient from \"@azure/core-client\";\nimport * as Mappers from \"../models/mappers\";\nimport * as Parameters from \"../models/parameters\";\nimport { ComputeManagementClient } from \"../computeManagementClient\";\nimport { PollerLike, PollOperationState, LroEngine } from \"@azure/core-lro\";\nimport { LroImpl } from \"../lroImpl\";\nimport {\n  RunCommandDocumentBase,\n  VirtualMachineRunCommandsListNextOptionalParams,\n  VirtualMachineRunCommandsListOptionalParams,\n  VirtualMachineRunCommand,\n  VirtualMachineRunCommandsListByVirtualMachineNextOptionalParams,\n  VirtualMachineRunCommandsListByVirtualMachineOptionalParams,\n  VirtualMachineRunCommandsListResponse,\n  VirtualMachineRunCommandsGetOptionalParams,\n  VirtualMachineRunCommandsGetResponse,\n  VirtualMachineRunCommandsCreateOrUpdateOptionalParams,\n  VirtualMachineRunCommandsCreateOrUpdateResponse,\n  VirtualMachineRunCommandUpdate,\n  VirtualMachineRunCommandsUpdateOptionalParams,\n  VirtualMachineRunCommandsUpdateResponse,\n  VirtualMachineRunCommandsDeleteOptionalParams,\n  VirtualMachineRunCommandsGetByVirtualMachineOptionalParams,\n  VirtualMachineRunCommandsGetByVirtualMachineResponse,\n  VirtualMachineRunCommandsListByVirtualMachineResponse,\n  VirtualMachineRunCommandsListNextResponse,\n  VirtualMachineRunCommandsListByVirtualMachineNextResponse\n} from \"../models\";\n\n/// <reference lib=\"esnext.asynciterable\" />\n/** Class containing VirtualMachineRunCommands operations. */\nexport class VirtualMachineRunCommandsImpl\n  implements VirtualMachineRunCommands {\n  private readonly client: ComputeManagementClient;\n\n  /**\n   * Initialize a new instance of the class VirtualMachineRunCommands class.\n   * @param client Reference to the service client\n   */\n  constructor(client: ComputeManagementClient) {\n    this.client = client;\n  }\n\n  /**\n   * Lists all available run commands for a subscription in a location.\n   * @param location The location upon which run commands is queried.\n   * @param options The options parameters.\n   */\n  public list(\n    location: string,\n    options?: VirtualMachineRunCommandsListOptionalParams\n  ): PagedAsyncIterableIterator<RunCommandDocumentBase> {\n    const iter = this.listPagingAll(location, options);\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: () => {\n        return this.listPagingPage(location, options);\n      }\n    };\n  }\n\n  private async *listPagingPage(\n    location: string,\n    options?: VirtualMachineRunCommandsListOptionalParams\n  ): AsyncIterableIterator<RunCommandDocumentBase[]> {\n    let result = await this._list(location, options);\n    yield result.value || [];\n    let continuationToken = result.nextLink;\n    while (continuationToken) {\n      result = await this._listNext(location, continuationToken, options);\n      continuationToken = result.nextLink;\n      yield result.value || [];\n    }\n  }\n\n  private async *listPagingAll(\n    location: string,\n    options?: VirtualMachineRunCommandsListOptionalParams\n  ): AsyncIterableIterator<RunCommandDocumentBase> {\n    for await (const page of this.listPagingPage(location, options)) {\n      yield* page;\n    }\n  }\n\n  /**\n   * The operation to get all run commands of a Virtual Machine.\n   * @param resourceGroupName The name of the resource group.\n   * @param vmName The name of the virtual machine containing the run command.\n   * @param options The options parameters.\n   */\n  public listByVirtualMachine(\n    resourceGroupName: string,\n    vmName: string,\n    options?: VirtualMachineRunCommandsListByVirtualMachineOptionalParams\n  ): PagedAsyncIterableIterator<VirtualMachineRunCommand> {\n    const iter = this.listByVirtualMachinePagingAll(\n      resourceGroupName,\n      vmName,\n      options\n    );\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: () => {\n        return this.listByVirtualMachinePagingPage(\n          resourceGroupName,\n          vmName,\n          options\n        );\n      }\n    };\n  }\n\n  private async *listByVirtualMachinePagingPage(\n    resourceGroupName: string,\n    vmName: string,\n    options?: VirtualMachineRunCommandsListByVirtualMachineOptionalParams\n  ): AsyncIterableIterator<VirtualMachineRunCommand[]> {\n    let result = await this._listByVirtualMachine(\n      resourceGroupName,\n      vmName,\n      options\n    );\n    yield result.value || [];\n    let continuationToken = result.nextLink;\n    while (continuationToken) {\n      result = await this._listByVirtualMachineNext(\n        resourceGroupName,\n        vmName,\n        continuationToken,\n        options\n      );\n      continuationToken = result.nextLink;\n      yield result.value || [];\n    }\n  }\n\n  private async *listByVirtualMachinePagingAll(\n    resourceGroupName: string,\n    vmName: string,\n    options?: VirtualMachineRunCommandsListByVirtualMachineOptionalParams\n  ): AsyncIterableIterator<VirtualMachineRunCommand> {\n    for await (const page of this.listByVirtualMachinePagingPage(\n      resourceGroupName,\n      vmName,\n      options\n    )) {\n      yield* page;\n    }\n  }\n\n  /**\n   * Lists all available run commands for a subscription in a location.\n   * @param location The location upon which run commands is queried.\n   * @param options The options parameters.\n   */\n  private _list(\n    location: string,\n    options?: VirtualMachineRunCommandsListOptionalParams\n  ): Promise<VirtualMachineRunCommandsListResponse> {\n    return this.client.sendOperationRequest(\n      { location, options },\n      listOperationSpec\n    );\n  }\n\n  /**\n   * Gets specific run command for a subscription in a location.\n   * @param location The location upon which run commands is queried.\n   * @param commandId The command id.\n   * @param options The options parameters.\n   */\n  get(\n    location: string,\n    commandId: string,\n    options?: VirtualMachineRunCommandsGetOptionalParams\n  ): Promise<VirtualMachineRunCommandsGetResponse> {\n    return this.client.sendOperationRequest(\n      { location, commandId, options },\n      getOperationSpec\n    );\n  }\n\n  /**\n   * The operation to create or update the run command.\n   * @param resourceGroupName The name of the resource group.\n   * @param vmName The name of the virtual machine where the run command should be created or updated.\n   * @param runCommandName The name of the virtual machine run command.\n   * @param runCommand Parameters supplied to the Create Virtual Machine RunCommand operation.\n   * @param options The options parameters.\n   */\n  async beginCreateOrUpdate(\n    resourceGroupName: string,\n    vmName: string,\n    runCommandName: string,\n    runCommand: VirtualMachineRunCommand,\n    options?: VirtualMachineRunCommandsCreateOrUpdateOptionalParams\n  ): Promise<\n    PollerLike<\n      PollOperationState<VirtualMachineRunCommandsCreateOrUpdateResponse>,\n      VirtualMachineRunCommandsCreateOrUpdateResponse\n    >\n  > {\n    const directSendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ): Promise<VirtualMachineRunCommandsCreateOrUpdateResponse> => {\n      return this.client.sendOperationRequest(args, spec);\n    };\n    const sendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ) => {\n      let currentRawResponse:\n        | coreClient.FullOperationResponse\n        | undefined = undefined;\n      const providedCallback = args.options?.onResponse;\n      const callback: coreClient.RawResponseCallback = (\n        rawResponse: coreClient.FullOperationResponse,\n        flatResponse: unknown\n      ) => {\n        currentRawResponse = rawResponse;\n        providedCallback?.(rawResponse, flatResponse);\n      };\n      const updatedArgs = {\n        ...args,\n        options: {\n          ...args.options,\n          onResponse: callback\n        }\n      };\n      const flatResponse = await directSendOperation(updatedArgs, spec);\n      return {\n        flatResponse,\n        rawResponse: {\n          statusCode: currentRawResponse!.status,\n          body: currentRawResponse!.parsedBody,\n          headers: currentRawResponse!.headers.toJSON()\n        }\n      };\n    };\n\n    const lro = new LroImpl(\n      sendOperation,\n      { resourceGroupName, vmName, runCommandName, runCommand, options },\n      createOrUpdateOperationSpec\n    );\n    return new LroEngine(lro, {\n      resumeFrom: options?.resumeFrom,\n      intervalInMs: options?.updateIntervalInMs\n    });\n  }\n\n  /**\n   * The operation to create or update the run command.\n   * @param resourceGroupName The name of the resource group.\n   * @param vmName The name of the virtual machine where the run command should be created or updated.\n   * @param runCommandName The name of the virtual machine run command.\n   * @param runCommand Parameters supplied to the Create Virtual Machine RunCommand operation.\n   * @param options The options parameters.\n   */\n  async beginCreateOrUpdateAndWait(\n    resourceGroupName: string,\n    vmName: string,\n    runCommandName: string,\n    runCommand: VirtualMachineRunCommand,\n    options?: VirtualMachineRunCommandsCreateOrUpdateOptionalParams\n  ): Promise<VirtualMachineRunCommandsCreateOrUpdateResponse> {\n    const poller = await this.beginCreateOrUpdate(\n      resourceGroupName,\n      vmName,\n      runCommandName,\n      runCommand,\n      options\n    );\n    return poller.pollUntilDone();\n  }\n\n  /**\n   * The operation to update the run command.\n   * @param resourceGroupName The name of the resource group.\n   * @param vmName The name of the virtual machine where the run command should be updated.\n   * @param runCommandName The name of the virtual machine run command.\n   * @param runCommand Parameters supplied to the Update Virtual Machine RunCommand operation.\n   * @param options The options parameters.\n   */\n  async beginUpdate(\n    resourceGroupName: string,\n    vmName: string,\n    runCommandName: string,\n    runCommand: VirtualMachineRunCommandUpdate,\n    options?: VirtualMachineRunCommandsUpdateOptionalParams\n  ): Promise<\n    PollerLike<\n      PollOperationState<VirtualMachineRunCommandsUpdateResponse>,\n      VirtualMachineRunCommandsUpdateResponse\n    >\n  > {\n    const directSendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ): Promise<VirtualMachineRunCommandsUpdateResponse> => {\n      return this.client.sendOperationRequest(args, spec);\n    };\n    const sendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ) => {\n      let currentRawResponse:\n        | coreClient.FullOperationResponse\n        | undefined = undefined;\n      const providedCallback = args.options?.onResponse;\n      const callback: coreClient.RawResponseCallback = (\n        rawResponse: coreClient.FullOperationResponse,\n        flatResponse: unknown\n      ) => {\n        currentRawResponse = rawResponse;\n        providedCallback?.(rawResponse, flatResponse);\n      };\n      const updatedArgs = {\n        ...args,\n        options: {\n          ...args.options,\n          onResponse: callback\n        }\n      };\n      const flatResponse = await directSendOperation(updatedArgs, spec);\n      return {\n        flatResponse,\n        rawResponse: {\n          statusCode: currentRawResponse!.status,\n          body: currentRawResponse!.parsedBody,\n          headers: currentRawResponse!.headers.toJSON()\n        }\n      };\n    };\n\n    const lro = new LroImpl(\n      sendOperation,\n      { resourceGroupName, vmName, runCommandName, runCommand, options },\n      updateOperationSpec\n    );\n    return new LroEngine(lro, {\n      resumeFrom: options?.resumeFrom,\n      intervalInMs: options?.updateIntervalInMs\n    });\n  }\n\n  /**\n   * The operation to update the run command.\n   * @param resourceGroupName The name of the resource group.\n   * @param vmName The name of the virtual machine where the run command should be updated.\n   * @param runCommandName The name of the virtual machine run command.\n   * @param runCommand Parameters supplied to the Update Virtual Machine RunCommand operation.\n   * @param options The options parameters.\n   */\n  async beginUpdateAndWait(\n    resourceGroupName: string,\n    vmName: string,\n    runCommandName: string,\n    runCommand: VirtualMachineRunCommandUpdate,\n    options?: VirtualMachineRunCommandsUpdateOptionalParams\n  ): Promise<VirtualMachineRunCommandsUpdateResponse> {\n    const poller = await this.beginUpdate(\n      resourceGroupName,\n      vmName,\n      runCommandName,\n      runCommand,\n      options\n    );\n    return poller.pollUntilDone();\n  }\n\n  /**\n   * The operation to delete the run command.\n   * @param resourceGroupName The name of the resource group.\n   * @param vmName The name of the virtual machine where the run command should be deleted.\n   * @param runCommandName The name of the virtual machine run command.\n   * @param options The options parameters.\n   */\n  async beginDelete(\n    resourceGroupName: string,\n    vmName: string,\n    runCommandName: string,\n    options?: VirtualMachineRunCommandsDeleteOptionalParams\n  ): Promise<PollerLike<PollOperationState<void>, void>> {\n    const directSendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ): Promise<void> => {\n      return this.client.sendOperationRequest(args, spec);\n    };\n    const sendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ) => {\n      let currentRawResponse:\n        | coreClient.FullOperationResponse\n        | undefined = undefined;\n      const providedCallback = args.options?.onResponse;\n      const callback: coreClient.RawResponseCallback = (\n        rawResponse: coreClient.FullOperationResponse,\n        flatResponse: unknown\n      ) => {\n        currentRawResponse = rawResponse;\n        providedCallback?.(rawResponse, flatResponse);\n      };\n      const updatedArgs = {\n        ...args,\n        options: {\n          ...args.options,\n          onResponse: callback\n        }\n      };\n      const flatResponse = await directSendOperation(updatedArgs, spec);\n      return {\n        flatResponse,\n        rawResponse: {\n          statusCode: currentRawResponse!.status,\n          body: currentRawResponse!.parsedBody,\n          headers: currentRawResponse!.headers.toJSON()\n        }\n      };\n    };\n\n    const lro = new LroImpl(\n      sendOperation,\n      { resourceGroupName, vmName, runCommandName, options },\n      deleteOperationSpec\n    );\n    return new LroEngine(lro, {\n      resumeFrom: options?.resumeFrom,\n      intervalInMs: options?.updateIntervalInMs\n    });\n  }\n\n  /**\n   * The operation to delete the run command.\n   * @param resourceGroupName The name of the resource group.\n   * @param vmName The name of the virtual machine where the run command should be deleted.\n   * @param runCommandName The name of the virtual machine run command.\n   * @param options The options parameters.\n   */\n  async beginDeleteAndWait(\n    resourceGroupName: string,\n    vmName: string,\n    runCommandName: string,\n    options?: VirtualMachineRunCommandsDeleteOptionalParams\n  ): Promise<void> {\n    const poller = await this.beginDelete(\n      resourceGroupName,\n      vmName,\n      runCommandName,\n      options\n    );\n    return poller.pollUntilDone();\n  }\n\n  /**\n   * The operation to get the run command.\n   * @param resourceGroupName The name of the resource group.\n   * @param vmName The name of the virtual machine containing the run command.\n   * @param runCommandName The name of the virtual machine run command.\n   * @param options The options parameters.\n   */\n  getByVirtualMachine(\n    resourceGroupName: string,\n    vmName: string,\n    runCommandName: string,\n    options?: VirtualMachineRunCommandsGetByVirtualMachineOptionalParams\n  ): Promise<VirtualMachineRunCommandsGetByVirtualMachineResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, vmName, runCommandName, options },\n      getByVirtualMachineOperationSpec\n    );\n  }\n\n  /**\n   * The operation to get all run commands of a Virtual Machine.\n   * @param resourceGroupName The name of the resource group.\n   * @param vmName The name of the virtual machine containing the run command.\n   * @param options The options parameters.\n   */\n  private _listByVirtualMachine(\n    resourceGroupName: string,\n    vmName: string,\n    options?: VirtualMachineRunCommandsListByVirtualMachineOptionalParams\n  ): Promise<VirtualMachineRunCommandsListByVirtualMachineResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, vmName, options },\n      listByVirtualMachineOperationSpec\n    );\n  }\n\n  /**\n   * ListNext\n   * @param location The location upon which run commands is queried.\n   * @param nextLink The nextLink from the previous successful call to the List method.\n   * @param options The options parameters.\n   */\n  private _listNext(\n    location: string,\n    nextLink: string,\n    options?: VirtualMachineRunCommandsListNextOptionalParams\n  ): Promise<VirtualMachineRunCommandsListNextResponse> {\n    return this.client.sendOperationRequest(\n      { location, nextLink, options },\n      listNextOperationSpec\n    );\n  }\n\n  /**\n   * ListByVirtualMachineNext\n   * @param resourceGroupName The name of the resource group.\n   * @param vmName The name of the virtual machine containing the run command.\n   * @param nextLink The nextLink from the previous successful call to the ListByVirtualMachine method.\n   * @param options The options parameters.\n   */\n  private _listByVirtualMachineNext(\n    resourceGroupName: string,\n    vmName: string,\n    nextLink: string,\n    options?: VirtualMachineRunCommandsListByVirtualMachineNextOptionalParams\n  ): Promise<VirtualMachineRunCommandsListByVirtualMachineNextResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, vmName, nextLink, options },\n      listByVirtualMachineNextOperationSpec\n    );\n  }\n}\n// Operation Specifications\nconst serializer = coreClient.createSerializer(Mappers, /* isXml */ false);\n\nconst listOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/providers/Microsoft.Compute/locations/{location}/runCommands\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.RunCommandListResult\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.location1\n  ],\n  headerParameters: [Parameters.accept1],\n  serializer\n};\nconst getOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/providers/Microsoft.Compute/locations/{location}/runCommands/{commandId}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.RunCommandDocument\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.location1,\n    Parameters.commandId\n  ],\n  headerParameters: [Parameters.accept1],\n  serializer\n};\nconst createOrUpdateOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/virtualMachines/{vmName}/runCommands/{runCommandName}\",\n  httpMethod: \"PUT\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.VirtualMachineRunCommand\n    },\n    201: {\n      bodyMapper: Mappers.VirtualMachineRunCommand\n    },\n    202: {\n      bodyMapper: Mappers.VirtualMachineRunCommand\n    },\n    204: {\n      bodyMapper: Mappers.VirtualMachineRunCommand\n    },\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  requestBody: Parameters.runCommand,\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.resourceGroupName,\n    Parameters.subscriptionId,\n    Parameters.vmName,\n    Parameters.runCommandName\n  ],\n  headerParameters: [Parameters.contentType, Parameters.accept1],\n  mediaType: \"json\",\n  serializer\n};\nconst updateOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/virtualMachines/{vmName}/runCommands/{runCommandName}\",\n  httpMethod: \"PATCH\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.VirtualMachineRunCommand\n    },\n    201: {\n      bodyMapper: Mappers.VirtualMachineRunCommand\n    },\n    202: {\n      bodyMapper: Mappers.VirtualMachineRunCommand\n    },\n    204: {\n      bodyMapper: Mappers.VirtualMachineRunCommand\n    },\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  requestBody: Parameters.runCommand1,\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.resourceGroupName,\n    Parameters.subscriptionId,\n    Parameters.vmName,\n    Parameters.runCommandName\n  ],\n  headerParameters: [Parameters.contentType, Parameters.accept1],\n  mediaType: \"json\",\n  serializer\n};\nconst deleteOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/virtualMachines/{vmName}/runCommands/{runCommandName}\",\n  httpMethod: \"DELETE\",\n  responses: {\n    200: {},\n    201: {},\n    202: {},\n    204: {},\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.resourceGroupName,\n    Parameters.subscriptionId,\n    Parameters.vmName,\n    Parameters.runCommandName\n  ],\n  headerParameters: [Parameters.accept1],\n  serializer\n};\nconst getByVirtualMachineOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/virtualMachines/{vmName}/runCommands/{runCommandName}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.VirtualMachineRunCommand\n    },\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  queryParameters: [Parameters.apiVersion, Parameters.expand],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.resourceGroupName,\n    Parameters.subscriptionId,\n    Parameters.vmName,\n    Parameters.runCommandName\n  ],\n  headerParameters: [Parameters.accept1],\n  serializer\n};\nconst listByVirtualMachineOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/virtualMachines/{vmName}/runCommands\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.VirtualMachineRunCommandsListResult\n    },\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  queryParameters: [Parameters.apiVersion, Parameters.expand],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.resourceGroupName,\n    Parameters.subscriptionId,\n    Parameters.vmName\n  ],\n  headerParameters: [Parameters.accept1],\n  serializer\n};\nconst listNextOperationSpec: coreClient.OperationSpec = {\n  path: \"{nextLink}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.RunCommandListResult\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.nextLink,\n    Parameters.location1\n  ],\n  headerParameters: [Parameters.accept1],\n  serializer\n};\nconst listByVirtualMachineNextOperationSpec: coreClient.OperationSpec = {\n  path: \"{nextLink}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.VirtualMachineRunCommandsListResult\n    },\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  queryParameters: [Parameters.apiVersion, Parameters.expand],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.resourceGroupName,\n    Parameters.subscriptionId,\n    Parameters.nextLink,\n    Parameters.vmName\n  ],\n  headerParameters: [Parameters.accept1],\n  serializer\n};\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport { PagedAsyncIterableIterator } from \"@azure/core-paging\";\nimport { VirtualMachineScaleSetVMRunCommands } from \"../operationsInterfaces\";\nimport * as coreClient from \"@azure/core-client\";\nimport * as Mappers from \"../models/mappers\";\nimport * as Parameters from \"../models/parameters\";\nimport { ComputeManagementClient } from \"../computeManagementClient\";\nimport { PollerLike, PollOperationState, LroEngine } from \"@azure/core-lro\";\nimport { LroImpl } from \"../lroImpl\";\nimport {\n  VirtualMachineRunCommand,\n  VirtualMachineScaleSetVMRunCommandsListNextOptionalParams,\n  VirtualMachineScaleSetVMRunCommandsListOptionalParams,\n  VirtualMachineScaleSetVMRunCommandsCreateOrUpdateOptionalParams,\n  VirtualMachineScaleSetVMRunCommandsCreateOrUpdateResponse,\n  VirtualMachineRunCommandUpdate,\n  VirtualMachineScaleSetVMRunCommandsUpdateOptionalParams,\n  VirtualMachineScaleSetVMRunCommandsUpdateResponse,\n  VirtualMachineScaleSetVMRunCommandsDeleteOptionalParams,\n  VirtualMachineScaleSetVMRunCommandsGetOptionalParams,\n  VirtualMachineScaleSetVMRunCommandsGetResponse,\n  VirtualMachineScaleSetVMRunCommandsListResponse,\n  VirtualMachineScaleSetVMRunCommandsListNextResponse\n} from \"../models\";\n\n/// <reference lib=\"esnext.asynciterable\" />\n/** Class containing VirtualMachineScaleSetVMRunCommands operations. */\nexport class VirtualMachineScaleSetVMRunCommandsImpl\n  implements VirtualMachineScaleSetVMRunCommands {\n  private readonly client: ComputeManagementClient;\n\n  /**\n   * Initialize a new instance of the class VirtualMachineScaleSetVMRunCommands class.\n   * @param client Reference to the service client\n   */\n  constructor(client: ComputeManagementClient) {\n    this.client = client;\n  }\n\n  /**\n   * The operation to get all run commands of an instance in Virtual Machine Scaleset.\n   * @param resourceGroupName The name of the resource group.\n   * @param vmScaleSetName The name of the VM scale set.\n   * @param instanceId The instance ID of the virtual machine.\n   * @param options The options parameters.\n   */\n  public list(\n    resourceGroupName: string,\n    vmScaleSetName: string,\n    instanceId: string,\n    options?: VirtualMachineScaleSetVMRunCommandsListOptionalParams\n  ): PagedAsyncIterableIterator<VirtualMachineRunCommand> {\n    const iter = this.listPagingAll(\n      resourceGroupName,\n      vmScaleSetName,\n      instanceId,\n      options\n    );\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: () => {\n        return this.listPagingPage(\n          resourceGroupName,\n          vmScaleSetName,\n          instanceId,\n          options\n        );\n      }\n    };\n  }\n\n  private async *listPagingPage(\n    resourceGroupName: string,\n    vmScaleSetName: string,\n    instanceId: string,\n    options?: VirtualMachineScaleSetVMRunCommandsListOptionalParams\n  ): AsyncIterableIterator<VirtualMachineRunCommand[]> {\n    let result = await this._list(\n      resourceGroupName,\n      vmScaleSetName,\n      instanceId,\n      options\n    );\n    yield result.value || [];\n    let continuationToken = result.nextLink;\n    while (continuationToken) {\n      result = await this._listNext(\n        resourceGroupName,\n        vmScaleSetName,\n        instanceId,\n        continuationToken,\n        options\n      );\n      continuationToken = result.nextLink;\n      yield result.value || [];\n    }\n  }\n\n  private async *listPagingAll(\n    resourceGroupName: string,\n    vmScaleSetName: string,\n    instanceId: string,\n    options?: VirtualMachineScaleSetVMRunCommandsListOptionalParams\n  ): AsyncIterableIterator<VirtualMachineRunCommand> {\n    for await (const page of this.listPagingPage(\n      resourceGroupName,\n      vmScaleSetName,\n      instanceId,\n      options\n    )) {\n      yield* page;\n    }\n  }\n\n  /**\n   * The operation to create or update the VMSS VM run command.\n   * @param resourceGroupName The name of the resource group.\n   * @param vmScaleSetName The name of the VM scale set.\n   * @param instanceId The instance ID of the virtual machine.\n   * @param runCommandName The name of the virtual machine run command.\n   * @param runCommand Parameters supplied to the Create Virtual Machine RunCommand operation.\n   * @param options The options parameters.\n   */\n  async beginCreateOrUpdate(\n    resourceGroupName: string,\n    vmScaleSetName: string,\n    instanceId: string,\n    runCommandName: string,\n    runCommand: VirtualMachineRunCommand,\n    options?: VirtualMachineScaleSetVMRunCommandsCreateOrUpdateOptionalParams\n  ): Promise<\n    PollerLike<\n      PollOperationState<\n        VirtualMachineScaleSetVMRunCommandsCreateOrUpdateResponse\n      >,\n      VirtualMachineScaleSetVMRunCommandsCreateOrUpdateResponse\n    >\n  > {\n    const directSendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ): Promise<VirtualMachineScaleSetVMRunCommandsCreateOrUpdateResponse> => {\n      return this.client.sendOperationRequest(args, spec);\n    };\n    const sendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ) => {\n      let currentRawResponse:\n        | coreClient.FullOperationResponse\n        | undefined = undefined;\n      const providedCallback = args.options?.onResponse;\n      const callback: coreClient.RawResponseCallback = (\n        rawResponse: coreClient.FullOperationResponse,\n        flatResponse: unknown\n      ) => {\n        currentRawResponse = rawResponse;\n        providedCallback?.(rawResponse, flatResponse);\n      };\n      const updatedArgs = {\n        ...args,\n        options: {\n          ...args.options,\n          onResponse: callback\n        }\n      };\n      const flatResponse = await directSendOperation(updatedArgs, spec);\n      return {\n        flatResponse,\n        rawResponse: {\n          statusCode: currentRawResponse!.status,\n          body: currentRawResponse!.parsedBody,\n          headers: currentRawResponse!.headers.toJSON()\n        }\n      };\n    };\n\n    const lro = new LroImpl(\n      sendOperation,\n      {\n        resourceGroupName,\n        vmScaleSetName,\n        instanceId,\n        runCommandName,\n        runCommand,\n        options\n      },\n      createOrUpdateOperationSpec\n    );\n    return new LroEngine(lro, {\n      resumeFrom: options?.resumeFrom,\n      intervalInMs: options?.updateIntervalInMs\n    });\n  }\n\n  /**\n   * The operation to create or update the VMSS VM run command.\n   * @param resourceGroupName The name of the resource group.\n   * @param vmScaleSetName The name of the VM scale set.\n   * @param instanceId The instance ID of the virtual machine.\n   * @param runCommandName The name of the virtual machine run command.\n   * @param runCommand Parameters supplied to the Create Virtual Machine RunCommand operation.\n   * @param options The options parameters.\n   */\n  async beginCreateOrUpdateAndWait(\n    resourceGroupName: string,\n    vmScaleSetName: string,\n    instanceId: string,\n    runCommandName: string,\n    runCommand: VirtualMachineRunCommand,\n    options?: VirtualMachineScaleSetVMRunCommandsCreateOrUpdateOptionalParams\n  ): Promise<VirtualMachineScaleSetVMRunCommandsCreateOrUpdateResponse> {\n    const poller = await this.beginCreateOrUpdate(\n      resourceGroupName,\n      vmScaleSetName,\n      instanceId,\n      runCommandName,\n      runCommand,\n      options\n    );\n    return poller.pollUntilDone();\n  }\n\n  /**\n   * The operation to update the VMSS VM run command.\n   * @param resourceGroupName The name of the resource group.\n   * @param vmScaleSetName The name of the VM scale set.\n   * @param instanceId The instance ID of the virtual machine.\n   * @param runCommandName The name of the virtual machine run command.\n   * @param runCommand Parameters supplied to the Update Virtual Machine RunCommand operation.\n   * @param options The options parameters.\n   */\n  async beginUpdate(\n    resourceGroupName: string,\n    vmScaleSetName: string,\n    instanceId: string,\n    runCommandName: string,\n    runCommand: VirtualMachineRunCommandUpdate,\n    options?: VirtualMachineScaleSetVMRunCommandsUpdateOptionalParams\n  ): Promise<\n    PollerLike<\n      PollOperationState<VirtualMachineScaleSetVMRunCommandsUpdateResponse>,\n      VirtualMachineScaleSetVMRunCommandsUpdateResponse\n    >\n  > {\n    const directSendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ): Promise<VirtualMachineScaleSetVMRunCommandsUpdateResponse> => {\n      return this.client.sendOperationRequest(args, spec);\n    };\n    const sendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ) => {\n      let currentRawResponse:\n        | coreClient.FullOperationResponse\n        | undefined = undefined;\n      const providedCallback = args.options?.onResponse;\n      const callback: coreClient.RawResponseCallback = (\n        rawResponse: coreClient.FullOperationResponse,\n        flatResponse: unknown\n      ) => {\n        currentRawResponse = rawResponse;\n        providedCallback?.(rawResponse, flatResponse);\n      };\n      const updatedArgs = {\n        ...args,\n        options: {\n          ...args.options,\n          onResponse: callback\n        }\n      };\n      const flatResponse = await directSendOperation(updatedArgs, spec);\n      return {\n        flatResponse,\n        rawResponse: {\n          statusCode: currentRawResponse!.status,\n          body: currentRawResponse!.parsedBody,\n          headers: currentRawResponse!.headers.toJSON()\n        }\n      };\n    };\n\n    const lro = new LroImpl(\n      sendOperation,\n      {\n        resourceGroupName,\n        vmScaleSetName,\n        instanceId,\n        runCommandName,\n        runCommand,\n        options\n      },\n      updateOperationSpec\n    );\n    return new LroEngine(lro, {\n      resumeFrom: options?.resumeFrom,\n      intervalInMs: options?.updateIntervalInMs\n    });\n  }\n\n  /**\n   * The operation to update the VMSS VM run command.\n   * @param resourceGroupName The name of the resource group.\n   * @param vmScaleSetName The name of the VM scale set.\n   * @param instanceId The instance ID of the virtual machine.\n   * @param runCommandName The name of the virtual machine run command.\n   * @param runCommand Parameters supplied to the Update Virtual Machine RunCommand operation.\n   * @param options The options parameters.\n   */\n  async beginUpdateAndWait(\n    resourceGroupName: string,\n    vmScaleSetName: string,\n    instanceId: string,\n    runCommandName: string,\n    runCommand: VirtualMachineRunCommandUpdate,\n    options?: VirtualMachineScaleSetVMRunCommandsUpdateOptionalParams\n  ): Promise<VirtualMachineScaleSetVMRunCommandsUpdateResponse> {\n    const poller = await this.beginUpdate(\n      resourceGroupName,\n      vmScaleSetName,\n      instanceId,\n      runCommandName,\n      runCommand,\n      options\n    );\n    return poller.pollUntilDone();\n  }\n\n  /**\n   * The operation to delete the VMSS VM run command.\n   * @param resourceGroupName The name of the resource group.\n   * @param vmScaleSetName The name of the VM scale set.\n   * @param instanceId The instance ID of the virtual machine.\n   * @param runCommandName The name of the virtual machine run command.\n   * @param options The options parameters.\n   */\n  async beginDelete(\n    resourceGroupName: string,\n    vmScaleSetName: string,\n    instanceId: string,\n    runCommandName: string,\n    options?: VirtualMachineScaleSetVMRunCommandsDeleteOptionalParams\n  ): Promise<PollerLike<PollOperationState<void>, void>> {\n    const directSendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ): Promise<void> => {\n      return this.client.sendOperationRequest(args, spec);\n    };\n    const sendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ) => {\n      let currentRawResponse:\n        | coreClient.FullOperationResponse\n        | undefined = undefined;\n      const providedCallback = args.options?.onResponse;\n      const callback: coreClient.RawResponseCallback = (\n        rawResponse: coreClient.FullOperationResponse,\n        flatResponse: unknown\n      ) => {\n        currentRawResponse = rawResponse;\n        providedCallback?.(rawResponse, flatResponse);\n      };\n      const updatedArgs = {\n        ...args,\n        options: {\n          ...args.options,\n          onResponse: callback\n        }\n      };\n      const flatResponse = await directSendOperation(updatedArgs, spec);\n      return {\n        flatResponse,\n        rawResponse: {\n          statusCode: currentRawResponse!.status,\n          body: currentRawResponse!.parsedBody,\n          headers: currentRawResponse!.headers.toJSON()\n        }\n      };\n    };\n\n    const lro = new LroImpl(\n      sendOperation,\n      {\n        resourceGroupName,\n        vmScaleSetName,\n        instanceId,\n        runCommandName,\n        options\n      },\n      deleteOperationSpec\n    );\n    return new LroEngine(lro, {\n      resumeFrom: options?.resumeFrom,\n      intervalInMs: options?.updateIntervalInMs\n    });\n  }\n\n  /**\n   * The operation to delete the VMSS VM run command.\n   * @param resourceGroupName The name of the resource group.\n   * @param vmScaleSetName The name of the VM scale set.\n   * @param instanceId The instance ID of the virtual machine.\n   * @param runCommandName The name of the virtual machine run command.\n   * @param options The options parameters.\n   */\n  async beginDeleteAndWait(\n    resourceGroupName: string,\n    vmScaleSetName: string,\n    instanceId: string,\n    runCommandName: string,\n    options?: VirtualMachineScaleSetVMRunCommandsDeleteOptionalParams\n  ): Promise<void> {\n    const poller = await this.beginDelete(\n      resourceGroupName,\n      vmScaleSetName,\n      instanceId,\n      runCommandName,\n      options\n    );\n    return poller.pollUntilDone();\n  }\n\n  /**\n   * The operation to get the VMSS VM run command.\n   * @param resourceGroupName The name of the resource group.\n   * @param vmScaleSetName The name of the VM scale set.\n   * @param instanceId The instance ID of the virtual machine.\n   * @param runCommandName The name of the virtual machine run command.\n   * @param options The options parameters.\n   */\n  get(\n    resourceGroupName: string,\n    vmScaleSetName: string,\n    instanceId: string,\n    runCommandName: string,\n    options?: VirtualMachineScaleSetVMRunCommandsGetOptionalParams\n  ): Promise<VirtualMachineScaleSetVMRunCommandsGetResponse> {\n    return this.client.sendOperationRequest(\n      {\n        resourceGroupName,\n        vmScaleSetName,\n        instanceId,\n        runCommandName,\n        options\n      },\n      getOperationSpec\n    );\n  }\n\n  /**\n   * The operation to get all run commands of an instance in Virtual Machine Scaleset.\n   * @param resourceGroupName The name of the resource group.\n   * @param vmScaleSetName The name of the VM scale set.\n   * @param instanceId The instance ID of the virtual machine.\n   * @param options The options parameters.\n   */\n  private _list(\n    resourceGroupName: string,\n    vmScaleSetName: string,\n    instanceId: string,\n    options?: VirtualMachineScaleSetVMRunCommandsListOptionalParams\n  ): Promise<VirtualMachineScaleSetVMRunCommandsListResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, vmScaleSetName, instanceId, options },\n      listOperationSpec\n    );\n  }\n\n  /**\n   * ListNext\n   * @param resourceGroupName The name of the resource group.\n   * @param vmScaleSetName The name of the VM scale set.\n   * @param instanceId The instance ID of the virtual machine.\n   * @param nextLink The nextLink from the previous successful call to the List method.\n   * @param options The options parameters.\n   */\n  private _listNext(\n    resourceGroupName: string,\n    vmScaleSetName: string,\n    instanceId: string,\n    nextLink: string,\n    options?: VirtualMachineScaleSetVMRunCommandsListNextOptionalParams\n  ): Promise<VirtualMachineScaleSetVMRunCommandsListNextResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, vmScaleSetName, instanceId, nextLink, options },\n      listNextOperationSpec\n    );\n  }\n}\n// Operation Specifications\nconst serializer = coreClient.createSerializer(Mappers, /* isXml */ false);\n\nconst createOrUpdateOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/virtualMachineScaleSets/{vmScaleSetName}/virtualMachines/{instanceId}/runCommands/{runCommandName}\",\n  httpMethod: \"PUT\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.VirtualMachineRunCommand\n    },\n    201: {\n      bodyMapper: Mappers.VirtualMachineRunCommand\n    },\n    202: {\n      bodyMapper: Mappers.VirtualMachineRunCommand\n    },\n    204: {\n      bodyMapper: Mappers.VirtualMachineRunCommand\n    },\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  requestBody: Parameters.runCommand,\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.resourceGroupName,\n    Parameters.subscriptionId,\n    Parameters.vmScaleSetName,\n    Parameters.instanceId,\n    Parameters.runCommandName\n  ],\n  headerParameters: [Parameters.contentType, Parameters.accept1],\n  mediaType: \"json\",\n  serializer\n};\nconst updateOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/virtualMachineScaleSets/{vmScaleSetName}/virtualMachines/{instanceId}/runCommands/{runCommandName}\",\n  httpMethod: \"PATCH\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.VirtualMachineRunCommand\n    },\n    201: {\n      bodyMapper: Mappers.VirtualMachineRunCommand\n    },\n    202: {\n      bodyMapper: Mappers.VirtualMachineRunCommand\n    },\n    204: {\n      bodyMapper: Mappers.VirtualMachineRunCommand\n    },\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  requestBody: Parameters.runCommand1,\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.resourceGroupName,\n    Parameters.subscriptionId,\n    Parameters.vmScaleSetName,\n    Parameters.instanceId,\n    Parameters.runCommandName\n  ],\n  headerParameters: [Parameters.contentType, Parameters.accept1],\n  mediaType: \"json\",\n  serializer\n};\nconst deleteOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/virtualMachineScaleSets/{vmScaleSetName}/virtualMachines/{instanceId}/runCommands/{runCommandName}\",\n  httpMethod: \"DELETE\",\n  responses: {\n    200: {},\n    201: {},\n    202: {},\n    204: {},\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.resourceGroupName,\n    Parameters.subscriptionId,\n    Parameters.vmScaleSetName,\n    Parameters.instanceId,\n    Parameters.runCommandName\n  ],\n  headerParameters: [Parameters.accept1],\n  serializer\n};\nconst getOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/virtualMachineScaleSets/{vmScaleSetName}/virtualMachines/{instanceId}/runCommands/{runCommandName}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.VirtualMachineRunCommand\n    },\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  queryParameters: [Parameters.apiVersion, Parameters.expand],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.resourceGroupName,\n    Parameters.subscriptionId,\n    Parameters.vmScaleSetName,\n    Parameters.instanceId,\n    Parameters.runCommandName\n  ],\n  headerParameters: [Parameters.accept1],\n  serializer\n};\nconst listOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/virtualMachineScaleSets/{vmScaleSetName}/virtualMachines/{instanceId}/runCommands\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.VirtualMachineRunCommandsListResult\n    },\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  queryParameters: [Parameters.apiVersion, Parameters.expand],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.resourceGroupName,\n    Parameters.subscriptionId,\n    Parameters.vmScaleSetName,\n    Parameters.instanceId\n  ],\n  headerParameters: [Parameters.accept1],\n  serializer\n};\nconst listNextOperationSpec: coreClient.OperationSpec = {\n  path: \"{nextLink}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.VirtualMachineRunCommandsListResult\n    },\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  queryParameters: [Parameters.apiVersion, Parameters.expand],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.resourceGroupName,\n    Parameters.subscriptionId,\n    Parameters.nextLink,\n    Parameters.vmScaleSetName,\n    Parameters.instanceId\n  ],\n  headerParameters: [Parameters.accept1],\n  serializer\n};\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport { PagedAsyncIterableIterator } from \"@azure/core-paging\";\nimport { ResourceSkus } from \"../operationsInterfaces\";\nimport * as coreClient from \"@azure/core-client\";\nimport * as Mappers from \"../models/mappers\";\nimport * as Parameters from \"../models/parameters\";\nimport { ComputeManagementClient } from \"../computeManagementClient\";\nimport {\n  ResourceSku,\n  ResourceSkusListNextOptionalParams,\n  ResourceSkusListOptionalParams,\n  ResourceSkusListResponse,\n  ResourceSkusListNextResponse\n} from \"../models\";\n\n/// <reference lib=\"esnext.asynciterable\" />\n/** Class containing ResourceSkus operations. */\nexport class ResourceSkusImpl implements ResourceSkus {\n  private readonly client: ComputeManagementClient;\n\n  /**\n   * Initialize a new instance of the class ResourceSkus class.\n   * @param client Reference to the service client\n   */\n  constructor(client: ComputeManagementClient) {\n    this.client = client;\n  }\n\n  /**\n   * Gets the list of Microsoft.Compute SKUs available for your Subscription.\n   * @param options The options parameters.\n   */\n  public list(\n    options?: ResourceSkusListOptionalParams\n  ): PagedAsyncIterableIterator<ResourceSku> {\n    const iter = this.listPagingAll(options);\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: () => {\n        return this.listPagingPage(options);\n      }\n    };\n  }\n\n  private async *listPagingPage(\n    options?: ResourceSkusListOptionalParams\n  ): AsyncIterableIterator<ResourceSku[]> {\n    let result = await this._list(options);\n    yield result.value || [];\n    let continuationToken = result.nextLink;\n    while (continuationToken) {\n      result = await this._listNext(continuationToken, options);\n      continuationToken = result.nextLink;\n      yield result.value || [];\n    }\n  }\n\n  private async *listPagingAll(\n    options?: ResourceSkusListOptionalParams\n  ): AsyncIterableIterator<ResourceSku> {\n    for await (const page of this.listPagingPage(options)) {\n      yield* page;\n    }\n  }\n\n  /**\n   * Gets the list of Microsoft.Compute SKUs available for your Subscription.\n   * @param options The options parameters.\n   */\n  private _list(\n    options?: ResourceSkusListOptionalParams\n  ): Promise<ResourceSkusListResponse> {\n    return this.client.sendOperationRequest({ options }, listOperationSpec);\n  }\n\n  /**\n   * ListNext\n   * @param nextLink The nextLink from the previous successful call to the List method.\n   * @param options The options parameters.\n   */\n  private _listNext(\n    nextLink: string,\n    options?: ResourceSkusListNextOptionalParams\n  ): Promise<ResourceSkusListNextResponse> {\n    return this.client.sendOperationRequest(\n      { nextLink, options },\n      listNextOperationSpec\n    );\n  }\n}\n// Operation Specifications\nconst serializer = coreClient.createSerializer(Mappers, /* isXml */ false);\n\nconst listOperationSpec: coreClient.OperationSpec = {\n  path: \"/subscriptions/{subscriptionId}/providers/Microsoft.Compute/skus\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.ResourceSkusResult\n    }\n  },\n  queryParameters: [\n    Parameters.filter,\n    Parameters.apiVersion1,\n    Parameters.includeExtendedLocations\n  ],\n  urlParameters: [Parameters.$host, Parameters.subscriptionId],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst listNextOperationSpec: coreClient.OperationSpec = {\n  path: \"{nextLink}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.ResourceSkusResult\n    }\n  },\n  queryParameters: [\n    Parameters.filter,\n    Parameters.apiVersion1,\n    Parameters.includeExtendedLocations\n  ],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.nextLink\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport { PagedAsyncIterableIterator } from \"@azure/core-paging\";\nimport { Disks } from \"../operationsInterfaces\";\nimport * as coreClient from \"@azure/core-client\";\nimport * as Mappers from \"../models/mappers\";\nimport * as Parameters from \"../models/parameters\";\nimport { ComputeManagementClient } from \"../computeManagementClient\";\nimport { PollerLike, PollOperationState, LroEngine } from \"@azure/core-lro\";\nimport { LroImpl } from \"../lroImpl\";\nimport {\n  Disk,\n  DisksListByResourceGroupNextOptionalParams,\n  DisksListByResourceGroupOptionalParams,\n  DisksListNextOptionalParams,\n  DisksListOptionalParams,\n  DisksCreateOrUpdateOptionalParams,\n  DisksCreateOrUpdateResponse,\n  DiskUpdate,\n  DisksUpdateOptionalParams,\n  DisksUpdateResponse,\n  DisksGetOptionalParams,\n  DisksGetResponse,\n  DisksDeleteOptionalParams,\n  DisksListByResourceGroupResponse,\n  DisksListResponse,\n  GrantAccessData,\n  DisksGrantAccessOptionalParams,\n  DisksGrantAccessResponse,\n  DisksRevokeAccessOptionalParams,\n  DisksListByResourceGroupNextResponse,\n  DisksListNextResponse\n} from \"../models\";\n\n/// <reference lib=\"esnext.asynciterable\" />\n/** Class containing Disks operations. */\nexport class DisksImpl implements Disks {\n  private readonly client: ComputeManagementClient;\n\n  /**\n   * Initialize a new instance of the class Disks class.\n   * @param client Reference to the service client\n   */\n  constructor(client: ComputeManagementClient) {\n    this.client = client;\n  }\n\n  /**\n   * Lists all the disks under a resource group.\n   * @param resourceGroupName The name of the resource group.\n   * @param options The options parameters.\n   */\n  public listByResourceGroup(\n    resourceGroupName: string,\n    options?: DisksListByResourceGroupOptionalParams\n  ): PagedAsyncIterableIterator<Disk> {\n    const iter = this.listByResourceGroupPagingAll(resourceGroupName, options);\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: () => {\n        return this.listByResourceGroupPagingPage(resourceGroupName, options);\n      }\n    };\n  }\n\n  private async *listByResourceGroupPagingPage(\n    resourceGroupName: string,\n    options?: DisksListByResourceGroupOptionalParams\n  ): AsyncIterableIterator<Disk[]> {\n    let result = await this._listByResourceGroup(resourceGroupName, options);\n    yield result.value || [];\n    let continuationToken = result.nextLink;\n    while (continuationToken) {\n      result = await this._listByResourceGroupNext(\n        resourceGroupName,\n        continuationToken,\n        options\n      );\n      continuationToken = result.nextLink;\n      yield result.value || [];\n    }\n  }\n\n  private async *listByResourceGroupPagingAll(\n    resourceGroupName: string,\n    options?: DisksListByResourceGroupOptionalParams\n  ): AsyncIterableIterator<Disk> {\n    for await (const page of this.listByResourceGroupPagingPage(\n      resourceGroupName,\n      options\n    )) {\n      yield* page;\n    }\n  }\n\n  /**\n   * Lists all the disks under a subscription.\n   * @param options The options parameters.\n   */\n  public list(\n    options?: DisksListOptionalParams\n  ): PagedAsyncIterableIterator<Disk> {\n    const iter = this.listPagingAll(options);\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: () => {\n        return this.listPagingPage(options);\n      }\n    };\n  }\n\n  private async *listPagingPage(\n    options?: DisksListOptionalParams\n  ): AsyncIterableIterator<Disk[]> {\n    let result = await this._list(options);\n    yield result.value || [];\n    let continuationToken = result.nextLink;\n    while (continuationToken) {\n      result = await this._listNext(continuationToken, options);\n      continuationToken = result.nextLink;\n      yield result.value || [];\n    }\n  }\n\n  private async *listPagingAll(\n    options?: DisksListOptionalParams\n  ): AsyncIterableIterator<Disk> {\n    for await (const page of this.listPagingPage(options)) {\n      yield* page;\n    }\n  }\n\n  /**\n   * Creates or updates a disk.\n   * @param resourceGroupName The name of the resource group.\n   * @param diskName The name of the managed disk that is being created. The name can't be changed after\n   *                 the disk is created. Supported characters for the name are a-z, A-Z, 0-9, _ and -. The maximum name\n   *                 length is 80 characters.\n   * @param disk Disk object supplied in the body of the Put disk operation.\n   * @param options The options parameters.\n   */\n  async beginCreateOrUpdate(\n    resourceGroupName: string,\n    diskName: string,\n    disk: Disk,\n    options?: DisksCreateOrUpdateOptionalParams\n  ): Promise<\n    PollerLike<\n      PollOperationState<DisksCreateOrUpdateResponse>,\n      DisksCreateOrUpdateResponse\n    >\n  > {\n    const directSendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ): Promise<DisksCreateOrUpdateResponse> => {\n      return this.client.sendOperationRequest(args, spec);\n    };\n    const sendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ) => {\n      let currentRawResponse:\n        | coreClient.FullOperationResponse\n        | undefined = undefined;\n      const providedCallback = args.options?.onResponse;\n      const callback: coreClient.RawResponseCallback = (\n        rawResponse: coreClient.FullOperationResponse,\n        flatResponse: unknown\n      ) => {\n        currentRawResponse = rawResponse;\n        providedCallback?.(rawResponse, flatResponse);\n      };\n      const updatedArgs = {\n        ...args,\n        options: {\n          ...args.options,\n          onResponse: callback\n        }\n      };\n      const flatResponse = await directSendOperation(updatedArgs, spec);\n      return {\n        flatResponse,\n        rawResponse: {\n          statusCode: currentRawResponse!.status,\n          body: currentRawResponse!.parsedBody,\n          headers: currentRawResponse!.headers.toJSON()\n        }\n      };\n    };\n\n    const lro = new LroImpl(\n      sendOperation,\n      { resourceGroupName, diskName, disk, options },\n      createOrUpdateOperationSpec\n    );\n    return new LroEngine(lro, {\n      resumeFrom: options?.resumeFrom,\n      intervalInMs: options?.updateIntervalInMs\n    });\n  }\n\n  /**\n   * Creates or updates a disk.\n   * @param resourceGroupName The name of the resource group.\n   * @param diskName The name of the managed disk that is being created. The name can't be changed after\n   *                 the disk is created. Supported characters for the name are a-z, A-Z, 0-9, _ and -. The maximum name\n   *                 length is 80 characters.\n   * @param disk Disk object supplied in the body of the Put disk operation.\n   * @param options The options parameters.\n   */\n  async beginCreateOrUpdateAndWait(\n    resourceGroupName: string,\n    diskName: string,\n    disk: Disk,\n    options?: DisksCreateOrUpdateOptionalParams\n  ): Promise<DisksCreateOrUpdateResponse> {\n    const poller = await this.beginCreateOrUpdate(\n      resourceGroupName,\n      diskName,\n      disk,\n      options\n    );\n    return poller.pollUntilDone();\n  }\n\n  /**\n   * Updates (patches) a disk.\n   * @param resourceGroupName The name of the resource group.\n   * @param diskName The name of the managed disk that is being created. The name can't be changed after\n   *                 the disk is created. Supported characters for the name are a-z, A-Z, 0-9, _ and -. The maximum name\n   *                 length is 80 characters.\n   * @param disk Disk object supplied in the body of the Patch disk operation.\n   * @param options The options parameters.\n   */\n  async beginUpdate(\n    resourceGroupName: string,\n    diskName: string,\n    disk: DiskUpdate,\n    options?: DisksUpdateOptionalParams\n  ): Promise<\n    PollerLike<PollOperationState<DisksUpdateResponse>, DisksUpdateResponse>\n  > {\n    const directSendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ): Promise<DisksUpdateResponse> => {\n      return this.client.sendOperationRequest(args, spec);\n    };\n    const sendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ) => {\n      let currentRawResponse:\n        | coreClient.FullOperationResponse\n        | undefined = undefined;\n      const providedCallback = args.options?.onResponse;\n      const callback: coreClient.RawResponseCallback = (\n        rawResponse: coreClient.FullOperationResponse,\n        flatResponse: unknown\n      ) => {\n        currentRawResponse = rawResponse;\n        providedCallback?.(rawResponse, flatResponse);\n      };\n      const updatedArgs = {\n        ...args,\n        options: {\n          ...args.options,\n          onResponse: callback\n        }\n      };\n      const flatResponse = await directSendOperation(updatedArgs, spec);\n      return {\n        flatResponse,\n        rawResponse: {\n          statusCode: currentRawResponse!.status,\n          body: currentRawResponse!.parsedBody,\n          headers: currentRawResponse!.headers.toJSON()\n        }\n      };\n    };\n\n    const lro = new LroImpl(\n      sendOperation,\n      { resourceGroupName, diskName, disk, options },\n      updateOperationSpec\n    );\n    return new LroEngine(lro, {\n      resumeFrom: options?.resumeFrom,\n      intervalInMs: options?.updateIntervalInMs\n    });\n  }\n\n  /**\n   * Updates (patches) a disk.\n   * @param resourceGroupName The name of the resource group.\n   * @param diskName The name of the managed disk that is being created. The name can't be changed after\n   *                 the disk is created. Supported characters for the name are a-z, A-Z, 0-9, _ and -. The maximum name\n   *                 length is 80 characters.\n   * @param disk Disk object supplied in the body of the Patch disk operation.\n   * @param options The options parameters.\n   */\n  async beginUpdateAndWait(\n    resourceGroupName: string,\n    diskName: string,\n    disk: DiskUpdate,\n    options?: DisksUpdateOptionalParams\n  ): Promise<DisksUpdateResponse> {\n    const poller = await this.beginUpdate(\n      resourceGroupName,\n      diskName,\n      disk,\n      options\n    );\n    return poller.pollUntilDone();\n  }\n\n  /**\n   * Gets information about a disk.\n   * @param resourceGroupName The name of the resource group.\n   * @param diskName The name of the managed disk that is being created. The name can't be changed after\n   *                 the disk is created. Supported characters for the name are a-z, A-Z, 0-9, _ and -. The maximum name\n   *                 length is 80 characters.\n   * @param options The options parameters.\n   */\n  get(\n    resourceGroupName: string,\n    diskName: string,\n    options?: DisksGetOptionalParams\n  ): Promise<DisksGetResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, diskName, options },\n      getOperationSpec\n    );\n  }\n\n  /**\n   * Deletes a disk.\n   * @param resourceGroupName The name of the resource group.\n   * @param diskName The name of the managed disk that is being created. The name can't be changed after\n   *                 the disk is created. Supported characters for the name are a-z, A-Z, 0-9, _ and -. The maximum name\n   *                 length is 80 characters.\n   * @param options The options parameters.\n   */\n  async beginDelete(\n    resourceGroupName: string,\n    diskName: string,\n    options?: DisksDeleteOptionalParams\n  ): Promise<PollerLike<PollOperationState<void>, void>> {\n    const directSendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ): Promise<void> => {\n      return this.client.sendOperationRequest(args, spec);\n    };\n    const sendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ) => {\n      let currentRawResponse:\n        | coreClient.FullOperationResponse\n        | undefined = undefined;\n      const providedCallback = args.options?.onResponse;\n      const callback: coreClient.RawResponseCallback = (\n        rawResponse: coreClient.FullOperationResponse,\n        flatResponse: unknown\n      ) => {\n        currentRawResponse = rawResponse;\n        providedCallback?.(rawResponse, flatResponse);\n      };\n      const updatedArgs = {\n        ...args,\n        options: {\n          ...args.options,\n          onResponse: callback\n        }\n      };\n      const flatResponse = await directSendOperation(updatedArgs, spec);\n      return {\n        flatResponse,\n        rawResponse: {\n          statusCode: currentRawResponse!.status,\n          body: currentRawResponse!.parsedBody,\n          headers: currentRawResponse!.headers.toJSON()\n        }\n      };\n    };\n\n    const lro = new LroImpl(\n      sendOperation,\n      { resourceGroupName, diskName, options },\n      deleteOperationSpec\n    );\n    return new LroEngine(lro, {\n      resumeFrom: options?.resumeFrom,\n      intervalInMs: options?.updateIntervalInMs\n    });\n  }\n\n  /**\n   * Deletes a disk.\n   * @param resourceGroupName The name of the resource group.\n   * @param diskName The name of the managed disk that is being created. The name can't be changed after\n   *                 the disk is created. Supported characters for the name are a-z, A-Z, 0-9, _ and -. The maximum name\n   *                 length is 80 characters.\n   * @param options The options parameters.\n   */\n  async beginDeleteAndWait(\n    resourceGroupName: string,\n    diskName: string,\n    options?: DisksDeleteOptionalParams\n  ): Promise<void> {\n    const poller = await this.beginDelete(resourceGroupName, diskName, options);\n    return poller.pollUntilDone();\n  }\n\n  /**\n   * Lists all the disks under a resource group.\n   * @param resourceGroupName The name of the resource group.\n   * @param options The options parameters.\n   */\n  private _listByResourceGroup(\n    resourceGroupName: string,\n    options?: DisksListByResourceGroupOptionalParams\n  ): Promise<DisksListByResourceGroupResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, options },\n      listByResourceGroupOperationSpec\n    );\n  }\n\n  /**\n   * Lists all the disks under a subscription.\n   * @param options The options parameters.\n   */\n  private _list(options?: DisksListOptionalParams): Promise<DisksListResponse> {\n    return this.client.sendOperationRequest({ options }, listOperationSpec);\n  }\n\n  /**\n   * Grants access to a disk.\n   * @param resourceGroupName The name of the resource group.\n   * @param diskName The name of the managed disk that is being created. The name can't be changed after\n   *                 the disk is created. Supported characters for the name are a-z, A-Z, 0-9, _ and -. The maximum name\n   *                 length is 80 characters.\n   * @param grantAccessData Access data object supplied in the body of the get disk access operation.\n   * @param options The options parameters.\n   */\n  async beginGrantAccess(\n    resourceGroupName: string,\n    diskName: string,\n    grantAccessData: GrantAccessData,\n    options?: DisksGrantAccessOptionalParams\n  ): Promise<\n    PollerLike<\n      PollOperationState<DisksGrantAccessResponse>,\n      DisksGrantAccessResponse\n    >\n  > {\n    const directSendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ): Promise<DisksGrantAccessResponse> => {\n      return this.client.sendOperationRequest(args, spec);\n    };\n    const sendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ) => {\n      let currentRawResponse:\n        | coreClient.FullOperationResponse\n        | undefined = undefined;\n      const providedCallback = args.options?.onResponse;\n      const callback: coreClient.RawResponseCallback = (\n        rawResponse: coreClient.FullOperationResponse,\n        flatResponse: unknown\n      ) => {\n        currentRawResponse = rawResponse;\n        providedCallback?.(rawResponse, flatResponse);\n      };\n      const updatedArgs = {\n        ...args,\n        options: {\n          ...args.options,\n          onResponse: callback\n        }\n      };\n      const flatResponse = await directSendOperation(updatedArgs, spec);\n      return {\n        flatResponse,\n        rawResponse: {\n          statusCode: currentRawResponse!.status,\n          body: currentRawResponse!.parsedBody,\n          headers: currentRawResponse!.headers.toJSON()\n        }\n      };\n    };\n\n    const lro = new LroImpl(\n      sendOperation,\n      { resourceGroupName, diskName, grantAccessData, options },\n      grantAccessOperationSpec\n    );\n    return new LroEngine(lro, {\n      resumeFrom: options?.resumeFrom,\n      intervalInMs: options?.updateIntervalInMs,\n      lroResourceLocationConfig: \"location\"\n    });\n  }\n\n  /**\n   * Grants access to a disk.\n   * @param resourceGroupName The name of the resource group.\n   * @param diskName The name of the managed disk that is being created. The name can't be changed after\n   *                 the disk is created. Supported characters for the name are a-z, A-Z, 0-9, _ and -. The maximum name\n   *                 length is 80 characters.\n   * @param grantAccessData Access data object supplied in the body of the get disk access operation.\n   * @param options The options parameters.\n   */\n  async beginGrantAccessAndWait(\n    resourceGroupName: string,\n    diskName: string,\n    grantAccessData: GrantAccessData,\n    options?: DisksGrantAccessOptionalParams\n  ): Promise<DisksGrantAccessResponse> {\n    const poller = await this.beginGrantAccess(\n      resourceGroupName,\n      diskName,\n      grantAccessData,\n      options\n    );\n    return poller.pollUntilDone();\n  }\n\n  /**\n   * Revokes access to a disk.\n   * @param resourceGroupName The name of the resource group.\n   * @param diskName The name of the managed disk that is being created. The name can't be changed after\n   *                 the disk is created. Supported characters for the name are a-z, A-Z, 0-9, _ and -. The maximum name\n   *                 length is 80 characters.\n   * @param options The options parameters.\n   */\n  async beginRevokeAccess(\n    resourceGroupName: string,\n    diskName: string,\n    options?: DisksRevokeAccessOptionalParams\n  ): Promise<PollerLike<PollOperationState<void>, void>> {\n    const directSendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ): Promise<void> => {\n      return this.client.sendOperationRequest(args, spec);\n    };\n    const sendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ) => {\n      let currentRawResponse:\n        | coreClient.FullOperationResponse\n        | undefined = undefined;\n      const providedCallback = args.options?.onResponse;\n      const callback: coreClient.RawResponseCallback = (\n        rawResponse: coreClient.FullOperationResponse,\n        flatResponse: unknown\n      ) => {\n        currentRawResponse = rawResponse;\n        providedCallback?.(rawResponse, flatResponse);\n      };\n      const updatedArgs = {\n        ...args,\n        options: {\n          ...args.options,\n          onResponse: callback\n        }\n      };\n      const flatResponse = await directSendOperation(updatedArgs, spec);\n      return {\n        flatResponse,\n        rawResponse: {\n          statusCode: currentRawResponse!.status,\n          body: currentRawResponse!.parsedBody,\n          headers: currentRawResponse!.headers.toJSON()\n        }\n      };\n    };\n\n    const lro = new LroImpl(\n      sendOperation,\n      { resourceGroupName, diskName, options },\n      revokeAccessOperationSpec\n    );\n    return new LroEngine(lro, {\n      resumeFrom: options?.resumeFrom,\n      intervalInMs: options?.updateIntervalInMs,\n      lroResourceLocationConfig: \"location\"\n    });\n  }\n\n  /**\n   * Revokes access to a disk.\n   * @param resourceGroupName The name of the resource group.\n   * @param diskName The name of the managed disk that is being created. The name can't be changed after\n   *                 the disk is created. Supported characters for the name are a-z, A-Z, 0-9, _ and -. The maximum name\n   *                 length is 80 characters.\n   * @param options The options parameters.\n   */\n  async beginRevokeAccessAndWait(\n    resourceGroupName: string,\n    diskName: string,\n    options?: DisksRevokeAccessOptionalParams\n  ): Promise<void> {\n    const poller = await this.beginRevokeAccess(\n      resourceGroupName,\n      diskName,\n      options\n    );\n    return poller.pollUntilDone();\n  }\n\n  /**\n   * ListByResourceGroupNext\n   * @param resourceGroupName The name of the resource group.\n   * @param nextLink The nextLink from the previous successful call to the ListByResourceGroup method.\n   * @param options The options parameters.\n   */\n  private _listByResourceGroupNext(\n    resourceGroupName: string,\n    nextLink: string,\n    options?: DisksListByResourceGroupNextOptionalParams\n  ): Promise<DisksListByResourceGroupNextResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, nextLink, options },\n      listByResourceGroupNextOperationSpec\n    );\n  }\n\n  /**\n   * ListNext\n   * @param nextLink The nextLink from the previous successful call to the List method.\n   * @param options The options parameters.\n   */\n  private _listNext(\n    nextLink: string,\n    options?: DisksListNextOptionalParams\n  ): Promise<DisksListNextResponse> {\n    return this.client.sendOperationRequest(\n      { nextLink, options },\n      listNextOperationSpec\n    );\n  }\n}\n// Operation Specifications\nconst serializer = coreClient.createSerializer(Mappers, /* isXml */ false);\n\nconst createOrUpdateOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/disks/{diskName}\",\n  httpMethod: \"PUT\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.Disk\n    },\n    201: {\n      bodyMapper: Mappers.Disk\n    },\n    202: {\n      bodyMapper: Mappers.Disk\n    },\n    204: {\n      bodyMapper: Mappers.Disk\n    }\n  },\n  requestBody: Parameters.disk,\n  queryParameters: [Parameters.apiVersion2],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.resourceGroupName,\n    Parameters.subscriptionId,\n    Parameters.diskName\n  ],\n  headerParameters: [Parameters.accept, Parameters.contentType],\n  mediaType: \"json\",\n  serializer\n};\nconst updateOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/disks/{diskName}\",\n  httpMethod: \"PATCH\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.Disk\n    },\n    201: {\n      bodyMapper: Mappers.Disk\n    },\n    202: {\n      bodyMapper: Mappers.Disk\n    },\n    204: {\n      bodyMapper: Mappers.Disk\n    }\n  },\n  requestBody: Parameters.disk1,\n  queryParameters: [Parameters.apiVersion2],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.resourceGroupName,\n    Parameters.subscriptionId,\n    Parameters.diskName\n  ],\n  headerParameters: [Parameters.accept, Parameters.contentType],\n  mediaType: \"json\",\n  serializer\n};\nconst getOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/disks/{diskName}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.Disk\n    }\n  },\n  queryParameters: [Parameters.apiVersion2],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.resourceGroupName,\n    Parameters.subscriptionId,\n    Parameters.diskName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst deleteOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/disks/{diskName}\",\n  httpMethod: \"DELETE\",\n  responses: { 200: {}, 201: {}, 202: {}, 204: {} },\n  queryParameters: [Parameters.apiVersion2],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.resourceGroupName,\n    Parameters.subscriptionId,\n    Parameters.diskName\n  ],\n  serializer\n};\nconst listByResourceGroupOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/disks\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.DiskList\n    }\n  },\n  queryParameters: [Parameters.apiVersion2],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.resourceGroupName,\n    Parameters.subscriptionId\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst listOperationSpec: coreClient.OperationSpec = {\n  path: \"/subscriptions/{subscriptionId}/providers/Microsoft.Compute/disks\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.DiskList\n    }\n  },\n  queryParameters: [Parameters.apiVersion2],\n  urlParameters: [Parameters.$host, Parameters.subscriptionId],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst grantAccessOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/disks/{diskName}/beginGetAccess\",\n  httpMethod: \"POST\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.AccessUri\n    },\n    201: {\n      bodyMapper: Mappers.AccessUri\n    },\n    202: {\n      bodyMapper: Mappers.AccessUri\n    },\n    204: {\n      bodyMapper: Mappers.AccessUri\n    }\n  },\n  requestBody: Parameters.grantAccessData,\n  queryParameters: [Parameters.apiVersion2],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.resourceGroupName,\n    Parameters.subscriptionId,\n    Parameters.diskName\n  ],\n  headerParameters: [Parameters.accept, Parameters.contentType],\n  mediaType: \"json\",\n  serializer\n};\nconst revokeAccessOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/disks/{diskName}/endGetAccess\",\n  httpMethod: \"POST\",\n  responses: { 200: {}, 201: {}, 202: {}, 204: {} },\n  queryParameters: [Parameters.apiVersion2],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.resourceGroupName,\n    Parameters.subscriptionId,\n    Parameters.diskName\n  ],\n  serializer\n};\nconst listByResourceGroupNextOperationSpec: coreClient.OperationSpec = {\n  path: \"{nextLink}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.DiskList\n    }\n  },\n  queryParameters: [Parameters.apiVersion2],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.resourceGroupName,\n    Parameters.subscriptionId,\n    Parameters.nextLink\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst listNextOperationSpec: coreClient.OperationSpec = {\n  path: \"{nextLink}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.DiskList\n    }\n  },\n  queryParameters: [Parameters.apiVersion2],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.nextLink\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport { PagedAsyncIterableIterator } from \"@azure/core-paging\";\nimport { Snapshots } from \"../operationsInterfaces\";\nimport * as coreClient from \"@azure/core-client\";\nimport * as Mappers from \"../models/mappers\";\nimport * as Parameters from \"../models/parameters\";\nimport { ComputeManagementClient } from \"../computeManagementClient\";\nimport { PollerLike, PollOperationState, LroEngine } from \"@azure/core-lro\";\nimport { LroImpl } from \"../lroImpl\";\nimport {\n  Snapshot,\n  SnapshotsListByResourceGroupNextOptionalParams,\n  SnapshotsListByResourceGroupOptionalParams,\n  SnapshotsListNextOptionalParams,\n  SnapshotsListOptionalParams,\n  SnapshotsCreateOrUpdateOptionalParams,\n  SnapshotsCreateOrUpdateResponse,\n  SnapshotUpdate,\n  SnapshotsUpdateOptionalParams,\n  SnapshotsUpdateResponse,\n  SnapshotsGetOptionalParams,\n  SnapshotsGetResponse,\n  SnapshotsDeleteOptionalParams,\n  SnapshotsListByResourceGroupResponse,\n  SnapshotsListResponse,\n  GrantAccessData,\n  SnapshotsGrantAccessOptionalParams,\n  SnapshotsGrantAccessResponse,\n  SnapshotsRevokeAccessOptionalParams,\n  SnapshotsListByResourceGroupNextResponse,\n  SnapshotsListNextResponse\n} from \"../models\";\n\n/// <reference lib=\"esnext.asynciterable\" />\n/** Class containing Snapshots operations. */\nexport class SnapshotsImpl implements Snapshots {\n  private readonly client: ComputeManagementClient;\n\n  /**\n   * Initialize a new instance of the class Snapshots class.\n   * @param client Reference to the service client\n   */\n  constructor(client: ComputeManagementClient) {\n    this.client = client;\n  }\n\n  /**\n   * Lists snapshots under a resource group.\n   * @param resourceGroupName The name of the resource group.\n   * @param options The options parameters.\n   */\n  public listByResourceGroup(\n    resourceGroupName: string,\n    options?: SnapshotsListByResourceGroupOptionalParams\n  ): PagedAsyncIterableIterator<Snapshot> {\n    const iter = this.listByResourceGroupPagingAll(resourceGroupName, options);\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: () => {\n        return this.listByResourceGroupPagingPage(resourceGroupName, options);\n      }\n    };\n  }\n\n  private async *listByResourceGroupPagingPage(\n    resourceGroupName: string,\n    options?: SnapshotsListByResourceGroupOptionalParams\n  ): AsyncIterableIterator<Snapshot[]> {\n    let result = await this._listByResourceGroup(resourceGroupName, options);\n    yield result.value || [];\n    let continuationToken = result.nextLink;\n    while (continuationToken) {\n      result = await this._listByResourceGroupNext(\n        resourceGroupName,\n        continuationToken,\n        options\n      );\n      continuationToken = result.nextLink;\n      yield result.value || [];\n    }\n  }\n\n  private async *listByResourceGroupPagingAll(\n    resourceGroupName: string,\n    options?: SnapshotsListByResourceGroupOptionalParams\n  ): AsyncIterableIterator<Snapshot> {\n    for await (const page of this.listByResourceGroupPagingPage(\n      resourceGroupName,\n      options\n    )) {\n      yield* page;\n    }\n  }\n\n  /**\n   * Lists snapshots under a subscription.\n   * @param options The options parameters.\n   */\n  public list(\n    options?: SnapshotsListOptionalParams\n  ): PagedAsyncIterableIterator<Snapshot> {\n    const iter = this.listPagingAll(options);\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: () => {\n        return this.listPagingPage(options);\n      }\n    };\n  }\n\n  private async *listPagingPage(\n    options?: SnapshotsListOptionalParams\n  ): AsyncIterableIterator<Snapshot[]> {\n    let result = await this._list(options);\n    yield result.value || [];\n    let continuationToken = result.nextLink;\n    while (continuationToken) {\n      result = await this._listNext(continuationToken, options);\n      continuationToken = result.nextLink;\n      yield result.value || [];\n    }\n  }\n\n  private async *listPagingAll(\n    options?: SnapshotsListOptionalParams\n  ): AsyncIterableIterator<Snapshot> {\n    for await (const page of this.listPagingPage(options)) {\n      yield* page;\n    }\n  }\n\n  /**\n   * Creates or updates a snapshot.\n   * @param resourceGroupName The name of the resource group.\n   * @param snapshotName The name of the snapshot that is being created. The name can't be changed after\n   *                     the snapshot is created. Supported characters for the name are a-z, A-Z, 0-9, _ and -. The max name\n   *                     length is 80 characters.\n   * @param snapshot Snapshot object supplied in the body of the Put disk operation.\n   * @param options The options parameters.\n   */\n  async beginCreateOrUpdate(\n    resourceGroupName: string,\n    snapshotName: string,\n    snapshot: Snapshot,\n    options?: SnapshotsCreateOrUpdateOptionalParams\n  ): Promise<\n    PollerLike<\n      PollOperationState<SnapshotsCreateOrUpdateResponse>,\n      SnapshotsCreateOrUpdateResponse\n    >\n  > {\n    const directSendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ): Promise<SnapshotsCreateOrUpdateResponse> => {\n      return this.client.sendOperationRequest(args, spec);\n    };\n    const sendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ) => {\n      let currentRawResponse:\n        | coreClient.FullOperationResponse\n        | undefined = undefined;\n      const providedCallback = args.options?.onResponse;\n      const callback: coreClient.RawResponseCallback = (\n        rawResponse: coreClient.FullOperationResponse,\n        flatResponse: unknown\n      ) => {\n        currentRawResponse = rawResponse;\n        providedCallback?.(rawResponse, flatResponse);\n      };\n      const updatedArgs = {\n        ...args,\n        options: {\n          ...args.options,\n          onResponse: callback\n        }\n      };\n      const flatResponse = await directSendOperation(updatedArgs, spec);\n      return {\n        flatResponse,\n        rawResponse: {\n          statusCode: currentRawResponse!.status,\n          body: currentRawResponse!.parsedBody,\n          headers: currentRawResponse!.headers.toJSON()\n        }\n      };\n    };\n\n    const lro = new LroImpl(\n      sendOperation,\n      { resourceGroupName, snapshotName, snapshot, options },\n      createOrUpdateOperationSpec\n    );\n    return new LroEngine(lro, {\n      resumeFrom: options?.resumeFrom,\n      intervalInMs: options?.updateIntervalInMs\n    });\n  }\n\n  /**\n   * Creates or updates a snapshot.\n   * @param resourceGroupName The name of the resource group.\n   * @param snapshotName The name of the snapshot that is being created. The name can't be changed after\n   *                     the snapshot is created. Supported characters for the name are a-z, A-Z, 0-9, _ and -. The max name\n   *                     length is 80 characters.\n   * @param snapshot Snapshot object supplied in the body of the Put disk operation.\n   * @param options The options parameters.\n   */\n  async beginCreateOrUpdateAndWait(\n    resourceGroupName: string,\n    snapshotName: string,\n    snapshot: Snapshot,\n    options?: SnapshotsCreateOrUpdateOptionalParams\n  ): Promise<SnapshotsCreateOrUpdateResponse> {\n    const poller = await this.beginCreateOrUpdate(\n      resourceGroupName,\n      snapshotName,\n      snapshot,\n      options\n    );\n    return poller.pollUntilDone();\n  }\n\n  /**\n   * Updates (patches) a snapshot.\n   * @param resourceGroupName The name of the resource group.\n   * @param snapshotName The name of the snapshot that is being created. The name can't be changed after\n   *                     the snapshot is created. Supported characters for the name are a-z, A-Z, 0-9, _ and -. The max name\n   *                     length is 80 characters.\n   * @param snapshot Snapshot object supplied in the body of the Patch snapshot operation.\n   * @param options The options parameters.\n   */\n  async beginUpdate(\n    resourceGroupName: string,\n    snapshotName: string,\n    snapshot: SnapshotUpdate,\n    options?: SnapshotsUpdateOptionalParams\n  ): Promise<\n    PollerLike<\n      PollOperationState<SnapshotsUpdateResponse>,\n      SnapshotsUpdateResponse\n    >\n  > {\n    const directSendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ): Promise<SnapshotsUpdateResponse> => {\n      return this.client.sendOperationRequest(args, spec);\n    };\n    const sendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ) => {\n      let currentRawResponse:\n        | coreClient.FullOperationResponse\n        | undefined = undefined;\n      const providedCallback = args.options?.onResponse;\n      const callback: coreClient.RawResponseCallback = (\n        rawResponse: coreClient.FullOperationResponse,\n        flatResponse: unknown\n      ) => {\n        currentRawResponse = rawResponse;\n        providedCallback?.(rawResponse, flatResponse);\n      };\n      const updatedArgs = {\n        ...args,\n        options: {\n          ...args.options,\n          onResponse: callback\n        }\n      };\n      const flatResponse = await directSendOperation(updatedArgs, spec);\n      return {\n        flatResponse,\n        rawResponse: {\n          statusCode: currentRawResponse!.status,\n          body: currentRawResponse!.parsedBody,\n          headers: currentRawResponse!.headers.toJSON()\n        }\n      };\n    };\n\n    const lro = new LroImpl(\n      sendOperation,\n      { resourceGroupName, snapshotName, snapshot, options },\n      updateOperationSpec\n    );\n    return new LroEngine(lro, {\n      resumeFrom: options?.resumeFrom,\n      intervalInMs: options?.updateIntervalInMs\n    });\n  }\n\n  /**\n   * Updates (patches) a snapshot.\n   * @param resourceGroupName The name of the resource group.\n   * @param snapshotName The name of the snapshot that is being created. The name can't be changed after\n   *                     the snapshot is created. Supported characters for the name are a-z, A-Z, 0-9, _ and -. The max name\n   *                     length is 80 characters.\n   * @param snapshot Snapshot object supplied in the body of the Patch snapshot operation.\n   * @param options The options parameters.\n   */\n  async beginUpdateAndWait(\n    resourceGroupName: string,\n    snapshotName: string,\n    snapshot: SnapshotUpdate,\n    options?: SnapshotsUpdateOptionalParams\n  ): Promise<SnapshotsUpdateResponse> {\n    const poller = await this.beginUpdate(\n      resourceGroupName,\n      snapshotName,\n      snapshot,\n      options\n    );\n    return poller.pollUntilDone();\n  }\n\n  /**\n   * Gets information about a snapshot.\n   * @param resourceGroupName The name of the resource group.\n   * @param snapshotName The name of the snapshot that is being created. The name can't be changed after\n   *                     the snapshot is created. Supported characters for the name are a-z, A-Z, 0-9, _ and -. The max name\n   *                     length is 80 characters.\n   * @param options The options parameters.\n   */\n  get(\n    resourceGroupName: string,\n    snapshotName: string,\n    options?: SnapshotsGetOptionalParams\n  ): Promise<SnapshotsGetResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, snapshotName, options },\n      getOperationSpec\n    );\n  }\n\n  /**\n   * Deletes a snapshot.\n   * @param resourceGroupName The name of the resource group.\n   * @param snapshotName The name of the snapshot that is being created. The name can't be changed after\n   *                     the snapshot is created. Supported characters for the name are a-z, A-Z, 0-9, _ and -. The max name\n   *                     length is 80 characters.\n   * @param options The options parameters.\n   */\n  async beginDelete(\n    resourceGroupName: string,\n    snapshotName: string,\n    options?: SnapshotsDeleteOptionalParams\n  ): Promise<PollerLike<PollOperationState<void>, void>> {\n    const directSendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ): Promise<void> => {\n      return this.client.sendOperationRequest(args, spec);\n    };\n    const sendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ) => {\n      let currentRawResponse:\n        | coreClient.FullOperationResponse\n        | undefined = undefined;\n      const providedCallback = args.options?.onResponse;\n      const callback: coreClient.RawResponseCallback = (\n        rawResponse: coreClient.FullOperationResponse,\n        flatResponse: unknown\n      ) => {\n        currentRawResponse = rawResponse;\n        providedCallback?.(rawResponse, flatResponse);\n      };\n      const updatedArgs = {\n        ...args,\n        options: {\n          ...args.options,\n          onResponse: callback\n        }\n      };\n      const flatResponse = await directSendOperation(updatedArgs, spec);\n      return {\n        flatResponse,\n        rawResponse: {\n          statusCode: currentRawResponse!.status,\n          body: currentRawResponse!.parsedBody,\n          headers: currentRawResponse!.headers.toJSON()\n        }\n      };\n    };\n\n    const lro = new LroImpl(\n      sendOperation,\n      { resourceGroupName, snapshotName, options },\n      deleteOperationSpec\n    );\n    return new LroEngine(lro, {\n      resumeFrom: options?.resumeFrom,\n      intervalInMs: options?.updateIntervalInMs\n    });\n  }\n\n  /**\n   * Deletes a snapshot.\n   * @param resourceGroupName The name of the resource group.\n   * @param snapshotName The name of the snapshot that is being created. The name can't be changed after\n   *                     the snapshot is created. Supported characters for the name are a-z, A-Z, 0-9, _ and -. The max name\n   *                     length is 80 characters.\n   * @param options The options parameters.\n   */\n  async beginDeleteAndWait(\n    resourceGroupName: string,\n    snapshotName: string,\n    options?: SnapshotsDeleteOptionalParams\n  ): Promise<void> {\n    const poller = await this.beginDelete(\n      resourceGroupName,\n      snapshotName,\n      options\n    );\n    return poller.pollUntilDone();\n  }\n\n  /**\n   * Lists snapshots under a resource group.\n   * @param resourceGroupName The name of the resource group.\n   * @param options The options parameters.\n   */\n  private _listByResourceGroup(\n    resourceGroupName: string,\n    options?: SnapshotsListByResourceGroupOptionalParams\n  ): Promise<SnapshotsListByResourceGroupResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, options },\n      listByResourceGroupOperationSpec\n    );\n  }\n\n  /**\n   * Lists snapshots under a subscription.\n   * @param options The options parameters.\n   */\n  private _list(\n    options?: SnapshotsListOptionalParams\n  ): Promise<SnapshotsListResponse> {\n    return this.client.sendOperationRequest({ options }, listOperationSpec);\n  }\n\n  /**\n   * Grants access to a snapshot.\n   * @param resourceGroupName The name of the resource group.\n   * @param snapshotName The name of the snapshot that is being created. The name can't be changed after\n   *                     the snapshot is created. Supported characters for the name are a-z, A-Z, 0-9, _ and -. The max name\n   *                     length is 80 characters.\n   * @param grantAccessData Access data object supplied in the body of the get snapshot access operation.\n   * @param options The options parameters.\n   */\n  async beginGrantAccess(\n    resourceGroupName: string,\n    snapshotName: string,\n    grantAccessData: GrantAccessData,\n    options?: SnapshotsGrantAccessOptionalParams\n  ): Promise<\n    PollerLike<\n      PollOperationState<SnapshotsGrantAccessResponse>,\n      SnapshotsGrantAccessResponse\n    >\n  > {\n    const directSendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ): Promise<SnapshotsGrantAccessResponse> => {\n      return this.client.sendOperationRequest(args, spec);\n    };\n    const sendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ) => {\n      let currentRawResponse:\n        | coreClient.FullOperationResponse\n        | undefined = undefined;\n      const providedCallback = args.options?.onResponse;\n      const callback: coreClient.RawResponseCallback = (\n        rawResponse: coreClient.FullOperationResponse,\n        flatResponse: unknown\n      ) => {\n        currentRawResponse = rawResponse;\n        providedCallback?.(rawResponse, flatResponse);\n      };\n      const updatedArgs = {\n        ...args,\n        options: {\n          ...args.options,\n          onResponse: callback\n        }\n      };\n      const flatResponse = await directSendOperation(updatedArgs, spec);\n      return {\n        flatResponse,\n        rawResponse: {\n          statusCode: currentRawResponse!.status,\n          body: currentRawResponse!.parsedBody,\n          headers: currentRawResponse!.headers.toJSON()\n        }\n      };\n    };\n\n    const lro = new LroImpl(\n      sendOperation,\n      { resourceGroupName, snapshotName, grantAccessData, options },\n      grantAccessOperationSpec\n    );\n    return new LroEngine(lro, {\n      resumeFrom: options?.resumeFrom,\n      intervalInMs: options?.updateIntervalInMs,\n      lroResourceLocationConfig: \"location\"\n    });\n  }\n\n  /**\n   * Grants access to a snapshot.\n   * @param resourceGroupName The name of the resource group.\n   * @param snapshotName The name of the snapshot that is being created. The name can't be changed after\n   *                     the snapshot is created. Supported characters for the name are a-z, A-Z, 0-9, _ and -. The max name\n   *                     length is 80 characters.\n   * @param grantAccessData Access data object supplied in the body of the get snapshot access operation.\n   * @param options The options parameters.\n   */\n  async beginGrantAccessAndWait(\n    resourceGroupName: string,\n    snapshotName: string,\n    grantAccessData: GrantAccessData,\n    options?: SnapshotsGrantAccessOptionalParams\n  ): Promise<SnapshotsGrantAccessResponse> {\n    const poller = await this.beginGrantAccess(\n      resourceGroupName,\n      snapshotName,\n      grantAccessData,\n      options\n    );\n    return poller.pollUntilDone();\n  }\n\n  /**\n   * Revokes access to a snapshot.\n   * @param resourceGroupName The name of the resource group.\n   * @param snapshotName The name of the snapshot that is being created. The name can't be changed after\n   *                     the snapshot is created. Supported characters for the name are a-z, A-Z, 0-9, _ and -. The max name\n   *                     length is 80 characters.\n   * @param options The options parameters.\n   */\n  async beginRevokeAccess(\n    resourceGroupName: string,\n    snapshotName: string,\n    options?: SnapshotsRevokeAccessOptionalParams\n  ): Promise<PollerLike<PollOperationState<void>, void>> {\n    const directSendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ): Promise<void> => {\n      return this.client.sendOperationRequest(args, spec);\n    };\n    const sendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ) => {\n      let currentRawResponse:\n        | coreClient.FullOperationResponse\n        | undefined = undefined;\n      const providedCallback = args.options?.onResponse;\n      const callback: coreClient.RawResponseCallback = (\n        rawResponse: coreClient.FullOperationResponse,\n        flatResponse: unknown\n      ) => {\n        currentRawResponse = rawResponse;\n        providedCallback?.(rawResponse, flatResponse);\n      };\n      const updatedArgs = {\n        ...args,\n        options: {\n          ...args.options,\n          onResponse: callback\n        }\n      };\n      const flatResponse = await directSendOperation(updatedArgs, spec);\n      return {\n        flatResponse,\n        rawResponse: {\n          statusCode: currentRawResponse!.status,\n          body: currentRawResponse!.parsedBody,\n          headers: currentRawResponse!.headers.toJSON()\n        }\n      };\n    };\n\n    const lro = new LroImpl(\n      sendOperation,\n      { resourceGroupName, snapshotName, options },\n      revokeAccessOperationSpec\n    );\n    return new LroEngine(lro, {\n      resumeFrom: options?.resumeFrom,\n      intervalInMs: options?.updateIntervalInMs,\n      lroResourceLocationConfig: \"location\"\n    });\n  }\n\n  /**\n   * Revokes access to a snapshot.\n   * @param resourceGroupName The name of the resource group.\n   * @param snapshotName The name of the snapshot that is being created. The name can't be changed after\n   *                     the snapshot is created. Supported characters for the name are a-z, A-Z, 0-9, _ and -. The max name\n   *                     length is 80 characters.\n   * @param options The options parameters.\n   */\n  async beginRevokeAccessAndWait(\n    resourceGroupName: string,\n    snapshotName: string,\n    options?: SnapshotsRevokeAccessOptionalParams\n  ): Promise<void> {\n    const poller = await this.beginRevokeAccess(\n      resourceGroupName,\n      snapshotName,\n      options\n    );\n    return poller.pollUntilDone();\n  }\n\n  /**\n   * ListByResourceGroupNext\n   * @param resourceGroupName The name of the resource group.\n   * @param nextLink The nextLink from the previous successful call to the ListByResourceGroup method.\n   * @param options The options parameters.\n   */\n  private _listByResourceGroupNext(\n    resourceGroupName: string,\n    nextLink: string,\n    options?: SnapshotsListByResourceGroupNextOptionalParams\n  ): Promise<SnapshotsListByResourceGroupNextResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, nextLink, options },\n      listByResourceGroupNextOperationSpec\n    );\n  }\n\n  /**\n   * ListNext\n   * @param nextLink The nextLink from the previous successful call to the List method.\n   * @param options The options parameters.\n   */\n  private _listNext(\n    nextLink: string,\n    options?: SnapshotsListNextOptionalParams\n  ): Promise<SnapshotsListNextResponse> {\n    return this.client.sendOperationRequest(\n      { nextLink, options },\n      listNextOperationSpec\n    );\n  }\n}\n// Operation Specifications\nconst serializer = coreClient.createSerializer(Mappers, /* isXml */ false);\n\nconst createOrUpdateOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/snapshots/{snapshotName}\",\n  httpMethod: \"PUT\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.Snapshot\n    },\n    201: {\n      bodyMapper: Mappers.Snapshot\n    },\n    202: {\n      bodyMapper: Mappers.Snapshot\n    },\n    204: {\n      bodyMapper: Mappers.Snapshot\n    }\n  },\n  requestBody: Parameters.snapshot,\n  queryParameters: [Parameters.apiVersion2],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.resourceGroupName,\n    Parameters.subscriptionId,\n    Parameters.snapshotName\n  ],\n  headerParameters: [Parameters.accept, Parameters.contentType],\n  mediaType: \"json\",\n  serializer\n};\nconst updateOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/snapshots/{snapshotName}\",\n  httpMethod: \"PATCH\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.Snapshot\n    },\n    201: {\n      bodyMapper: Mappers.Snapshot\n    },\n    202: {\n      bodyMapper: Mappers.Snapshot\n    },\n    204: {\n      bodyMapper: Mappers.Snapshot\n    }\n  },\n  requestBody: Parameters.snapshot1,\n  queryParameters: [Parameters.apiVersion2],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.resourceGroupName,\n    Parameters.subscriptionId,\n    Parameters.snapshotName\n  ],\n  headerParameters: [Parameters.accept, Parameters.contentType],\n  mediaType: \"json\",\n  serializer\n};\nconst getOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/snapshots/{snapshotName}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.Snapshot\n    }\n  },\n  queryParameters: [Parameters.apiVersion2],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.resourceGroupName,\n    Parameters.subscriptionId,\n    Parameters.snapshotName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst deleteOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/snapshots/{snapshotName}\",\n  httpMethod: \"DELETE\",\n  responses: { 200: {}, 201: {}, 202: {}, 204: {} },\n  queryParameters: [Parameters.apiVersion2],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.resourceGroupName,\n    Parameters.subscriptionId,\n    Parameters.snapshotName\n  ],\n  serializer\n};\nconst listByResourceGroupOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/snapshots\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.SnapshotList\n    }\n  },\n  queryParameters: [Parameters.apiVersion2],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.resourceGroupName,\n    Parameters.subscriptionId\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst listOperationSpec: coreClient.OperationSpec = {\n  path: \"/subscriptions/{subscriptionId}/providers/Microsoft.Compute/snapshots\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.SnapshotList\n    }\n  },\n  queryParameters: [Parameters.apiVersion2],\n  urlParameters: [Parameters.$host, Parameters.subscriptionId],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst grantAccessOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/snapshots/{snapshotName}/beginGetAccess\",\n  httpMethod: \"POST\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.AccessUri\n    },\n    201: {\n      bodyMapper: Mappers.AccessUri\n    },\n    202: {\n      bodyMapper: Mappers.AccessUri\n    },\n    204: {\n      bodyMapper: Mappers.AccessUri\n    }\n  },\n  requestBody: Parameters.grantAccessData,\n  queryParameters: [Parameters.apiVersion2],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.resourceGroupName,\n    Parameters.subscriptionId,\n    Parameters.snapshotName\n  ],\n  headerParameters: [Parameters.accept, Parameters.contentType],\n  mediaType: \"json\",\n  serializer\n};\nconst revokeAccessOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/snapshots/{snapshotName}/endGetAccess\",\n  httpMethod: \"POST\",\n  responses: { 200: {}, 201: {}, 202: {}, 204: {} },\n  queryParameters: [Parameters.apiVersion2],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.resourceGroupName,\n    Parameters.subscriptionId,\n    Parameters.snapshotName\n  ],\n  serializer\n};\nconst listByResourceGroupNextOperationSpec: coreClient.OperationSpec = {\n  path: \"{nextLink}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.SnapshotList\n    }\n  },\n  queryParameters: [Parameters.apiVersion2],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.resourceGroupName,\n    Parameters.subscriptionId,\n    Parameters.nextLink\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst listNextOperationSpec: coreClient.OperationSpec = {\n  path: \"{nextLink}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.SnapshotList\n    }\n  },\n  queryParameters: [Parameters.apiVersion2],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.nextLink\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport { PagedAsyncIterableIterator } from \"@azure/core-paging\";\nimport { DiskEncryptionSets } from \"../operationsInterfaces\";\nimport * as coreClient from \"@azure/core-client\";\nimport * as Mappers from \"../models/mappers\";\nimport * as Parameters from \"../models/parameters\";\nimport { ComputeManagementClient } from \"../computeManagementClient\";\nimport { PollerLike, PollOperationState, LroEngine } from \"@azure/core-lro\";\nimport { LroImpl } from \"../lroImpl\";\nimport {\n  DiskEncryptionSet,\n  DiskEncryptionSetsListByResourceGroupNextOptionalParams,\n  DiskEncryptionSetsListByResourceGroupOptionalParams,\n  DiskEncryptionSetsListNextOptionalParams,\n  DiskEncryptionSetsListOptionalParams,\n  DiskEncryptionSetsListAssociatedResourcesNextOptionalParams,\n  DiskEncryptionSetsListAssociatedResourcesOptionalParams,\n  DiskEncryptionSetsCreateOrUpdateOptionalParams,\n  DiskEncryptionSetsCreateOrUpdateResponse,\n  DiskEncryptionSetUpdate,\n  DiskEncryptionSetsUpdateOptionalParams,\n  DiskEncryptionSetsUpdateResponse,\n  DiskEncryptionSetsGetOptionalParams,\n  DiskEncryptionSetsGetResponse,\n  DiskEncryptionSetsDeleteOptionalParams,\n  DiskEncryptionSetsListByResourceGroupResponse,\n  DiskEncryptionSetsListResponse,\n  DiskEncryptionSetsListAssociatedResourcesResponse,\n  DiskEncryptionSetsListByResourceGroupNextResponse,\n  DiskEncryptionSetsListNextResponse,\n  DiskEncryptionSetsListAssociatedResourcesNextResponse\n} from \"../models\";\n\n/// <reference lib=\"esnext.asynciterable\" />\n/** Class containing DiskEncryptionSets operations. */\nexport class DiskEncryptionSetsImpl implements DiskEncryptionSets {\n  private readonly client: ComputeManagementClient;\n\n  /**\n   * Initialize a new instance of the class DiskEncryptionSets class.\n   * @param client Reference to the service client\n   */\n  constructor(client: ComputeManagementClient) {\n    this.client = client;\n  }\n\n  /**\n   * Lists all the disk encryption sets under a resource group.\n   * @param resourceGroupName The name of the resource group.\n   * @param options The options parameters.\n   */\n  public listByResourceGroup(\n    resourceGroupName: string,\n    options?: DiskEncryptionSetsListByResourceGroupOptionalParams\n  ): PagedAsyncIterableIterator<DiskEncryptionSet> {\n    const iter = this.listByResourceGroupPagingAll(resourceGroupName, options);\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: () => {\n        return this.listByResourceGroupPagingPage(resourceGroupName, options);\n      }\n    };\n  }\n\n  private async *listByResourceGroupPagingPage(\n    resourceGroupName: string,\n    options?: DiskEncryptionSetsListByResourceGroupOptionalParams\n  ): AsyncIterableIterator<DiskEncryptionSet[]> {\n    let result = await this._listByResourceGroup(resourceGroupName, options);\n    yield result.value || [];\n    let continuationToken = result.nextLink;\n    while (continuationToken) {\n      result = await this._listByResourceGroupNext(\n        resourceGroupName,\n        continuationToken,\n        options\n      );\n      continuationToken = result.nextLink;\n      yield result.value || [];\n    }\n  }\n\n  private async *listByResourceGroupPagingAll(\n    resourceGroupName: string,\n    options?: DiskEncryptionSetsListByResourceGroupOptionalParams\n  ): AsyncIterableIterator<DiskEncryptionSet> {\n    for await (const page of this.listByResourceGroupPagingPage(\n      resourceGroupName,\n      options\n    )) {\n      yield* page;\n    }\n  }\n\n  /**\n   * Lists all the disk encryption sets under a subscription.\n   * @param options The options parameters.\n   */\n  public list(\n    options?: DiskEncryptionSetsListOptionalParams\n  ): PagedAsyncIterableIterator<DiskEncryptionSet> {\n    const iter = this.listPagingAll(options);\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: () => {\n        return this.listPagingPage(options);\n      }\n    };\n  }\n\n  private async *listPagingPage(\n    options?: DiskEncryptionSetsListOptionalParams\n  ): AsyncIterableIterator<DiskEncryptionSet[]> {\n    let result = await this._list(options);\n    yield result.value || [];\n    let continuationToken = result.nextLink;\n    while (continuationToken) {\n      result = await this._listNext(continuationToken, options);\n      continuationToken = result.nextLink;\n      yield result.value || [];\n    }\n  }\n\n  private async *listPagingAll(\n    options?: DiskEncryptionSetsListOptionalParams\n  ): AsyncIterableIterator<DiskEncryptionSet> {\n    for await (const page of this.listPagingPage(options)) {\n      yield* page;\n    }\n  }\n\n  /**\n   * Lists all resources that are encrypted with this disk encryption set.\n   * @param resourceGroupName The name of the resource group.\n   * @param diskEncryptionSetName The name of the disk encryption set that is being created. The name\n   *                              can't be changed after the disk encryption set is created. Supported characters for the name are\n   *                              a-z, A-Z, 0-9, _ and -. The maximum name length is 80 characters.\n   * @param options The options parameters.\n   */\n  public listAssociatedResources(\n    resourceGroupName: string,\n    diskEncryptionSetName: string,\n    options?: DiskEncryptionSetsListAssociatedResourcesOptionalParams\n  ): PagedAsyncIterableIterator<string> {\n    const iter = this.listAssociatedResourcesPagingAll(\n      resourceGroupName,\n      diskEncryptionSetName,\n      options\n    );\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: () => {\n        return this.listAssociatedResourcesPagingPage(\n          resourceGroupName,\n          diskEncryptionSetName,\n          options\n        );\n      }\n    };\n  }\n\n  private async *listAssociatedResourcesPagingPage(\n    resourceGroupName: string,\n    diskEncryptionSetName: string,\n    options?: DiskEncryptionSetsListAssociatedResourcesOptionalParams\n  ): AsyncIterableIterator<string[]> {\n    let result = await this._listAssociatedResources(\n      resourceGroupName,\n      diskEncryptionSetName,\n      options\n    );\n    yield result.value || [];\n    let continuationToken = result.nextLink;\n    while (continuationToken) {\n      result = await this._listAssociatedResourcesNext(\n        resourceGroupName,\n        diskEncryptionSetName,\n        continuationToken,\n        options\n      );\n      continuationToken = result.nextLink;\n      yield result.value || [];\n    }\n  }\n\n  private async *listAssociatedResourcesPagingAll(\n    resourceGroupName: string,\n    diskEncryptionSetName: string,\n    options?: DiskEncryptionSetsListAssociatedResourcesOptionalParams\n  ): AsyncIterableIterator<string> {\n    for await (const page of this.listAssociatedResourcesPagingPage(\n      resourceGroupName,\n      diskEncryptionSetName,\n      options\n    )) {\n      yield* page;\n    }\n  }\n\n  /**\n   * Creates or updates a disk encryption set\n   * @param resourceGroupName The name of the resource group.\n   * @param diskEncryptionSetName The name of the disk encryption set that is being created. The name\n   *                              can't be changed after the disk encryption set is created. Supported characters for the name are\n   *                              a-z, A-Z, 0-9, _ and -. The maximum name length is 80 characters.\n   * @param diskEncryptionSet disk encryption set object supplied in the body of the Put disk encryption\n   *                          set operation.\n   * @param options The options parameters.\n   */\n  async beginCreateOrUpdate(\n    resourceGroupName: string,\n    diskEncryptionSetName: string,\n    diskEncryptionSet: DiskEncryptionSet,\n    options?: DiskEncryptionSetsCreateOrUpdateOptionalParams\n  ): Promise<\n    PollerLike<\n      PollOperationState<DiskEncryptionSetsCreateOrUpdateResponse>,\n      DiskEncryptionSetsCreateOrUpdateResponse\n    >\n  > {\n    const directSendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ): Promise<DiskEncryptionSetsCreateOrUpdateResponse> => {\n      return this.client.sendOperationRequest(args, spec);\n    };\n    const sendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ) => {\n      let currentRawResponse:\n        | coreClient.FullOperationResponse\n        | undefined = undefined;\n      const providedCallback = args.options?.onResponse;\n      const callback: coreClient.RawResponseCallback = (\n        rawResponse: coreClient.FullOperationResponse,\n        flatResponse: unknown\n      ) => {\n        currentRawResponse = rawResponse;\n        providedCallback?.(rawResponse, flatResponse);\n      };\n      const updatedArgs = {\n        ...args,\n        options: {\n          ...args.options,\n          onResponse: callback\n        }\n      };\n      const flatResponse = await directSendOperation(updatedArgs, spec);\n      return {\n        flatResponse,\n        rawResponse: {\n          statusCode: currentRawResponse!.status,\n          body: currentRawResponse!.parsedBody,\n          headers: currentRawResponse!.headers.toJSON()\n        }\n      };\n    };\n\n    const lro = new LroImpl(\n      sendOperation,\n      { resourceGroupName, diskEncryptionSetName, diskEncryptionSet, options },\n      createOrUpdateOperationSpec\n    );\n    return new LroEngine(lro, {\n      resumeFrom: options?.resumeFrom,\n      intervalInMs: options?.updateIntervalInMs\n    });\n  }\n\n  /**\n   * Creates or updates a disk encryption set\n   * @param resourceGroupName The name of the resource group.\n   * @param diskEncryptionSetName The name of the disk encryption set that is being created. The name\n   *                              can't be changed after the disk encryption set is created. Supported characters for the name are\n   *                              a-z, A-Z, 0-9, _ and -. The maximum name length is 80 characters.\n   * @param diskEncryptionSet disk encryption set object supplied in the body of the Put disk encryption\n   *                          set operation.\n   * @param options The options parameters.\n   */\n  async beginCreateOrUpdateAndWait(\n    resourceGroupName: string,\n    diskEncryptionSetName: string,\n    diskEncryptionSet: DiskEncryptionSet,\n    options?: DiskEncryptionSetsCreateOrUpdateOptionalParams\n  ): Promise<DiskEncryptionSetsCreateOrUpdateResponse> {\n    const poller = await this.beginCreateOrUpdate(\n      resourceGroupName,\n      diskEncryptionSetName,\n      diskEncryptionSet,\n      options\n    );\n    return poller.pollUntilDone();\n  }\n\n  /**\n   * Updates (patches) a disk encryption set.\n   * @param resourceGroupName The name of the resource group.\n   * @param diskEncryptionSetName The name of the disk encryption set that is being created. The name\n   *                              can't be changed after the disk encryption set is created. Supported characters for the name are\n   *                              a-z, A-Z, 0-9, _ and -. The maximum name length is 80 characters.\n   * @param diskEncryptionSet disk encryption set object supplied in the body of the Patch disk\n   *                          encryption set operation.\n   * @param options The options parameters.\n   */\n  async beginUpdate(\n    resourceGroupName: string,\n    diskEncryptionSetName: string,\n    diskEncryptionSet: DiskEncryptionSetUpdate,\n    options?: DiskEncryptionSetsUpdateOptionalParams\n  ): Promise<\n    PollerLike<\n      PollOperationState<DiskEncryptionSetsUpdateResponse>,\n      DiskEncryptionSetsUpdateResponse\n    >\n  > {\n    const directSendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ): Promise<DiskEncryptionSetsUpdateResponse> => {\n      return this.client.sendOperationRequest(args, spec);\n    };\n    const sendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ) => {\n      let currentRawResponse:\n        | coreClient.FullOperationResponse\n        | undefined = undefined;\n      const providedCallback = args.options?.onResponse;\n      const callback: coreClient.RawResponseCallback = (\n        rawResponse: coreClient.FullOperationResponse,\n        flatResponse: unknown\n      ) => {\n        currentRawResponse = rawResponse;\n        providedCallback?.(rawResponse, flatResponse);\n      };\n      const updatedArgs = {\n        ...args,\n        options: {\n          ...args.options,\n          onResponse: callback\n        }\n      };\n      const flatResponse = await directSendOperation(updatedArgs, spec);\n      return {\n        flatResponse,\n        rawResponse: {\n          statusCode: currentRawResponse!.status,\n          body: currentRawResponse!.parsedBody,\n          headers: currentRawResponse!.headers.toJSON()\n        }\n      };\n    };\n\n    const lro = new LroImpl(\n      sendOperation,\n      { resourceGroupName, diskEncryptionSetName, diskEncryptionSet, options },\n      updateOperationSpec\n    );\n    return new LroEngine(lro, {\n      resumeFrom: options?.resumeFrom,\n      intervalInMs: options?.updateIntervalInMs\n    });\n  }\n\n  /**\n   * Updates (patches) a disk encryption set.\n   * @param resourceGroupName The name of the resource group.\n   * @param diskEncryptionSetName The name of the disk encryption set that is being created. The name\n   *                              can't be changed after the disk encryption set is created. Supported characters for the name are\n   *                              a-z, A-Z, 0-9, _ and -. The maximum name length is 80 characters.\n   * @param diskEncryptionSet disk encryption set object supplied in the body of the Patch disk\n   *                          encryption set operation.\n   * @param options The options parameters.\n   */\n  async beginUpdateAndWait(\n    resourceGroupName: string,\n    diskEncryptionSetName: string,\n    diskEncryptionSet: DiskEncryptionSetUpdate,\n    options?: DiskEncryptionSetsUpdateOptionalParams\n  ): Promise<DiskEncryptionSetsUpdateResponse> {\n    const poller = await this.beginUpdate(\n      resourceGroupName,\n      diskEncryptionSetName,\n      diskEncryptionSet,\n      options\n    );\n    return poller.pollUntilDone();\n  }\n\n  /**\n   * Gets information about a disk encryption set.\n   * @param resourceGroupName The name of the resource group.\n   * @param diskEncryptionSetName The name of the disk encryption set that is being created. The name\n   *                              can't be changed after the disk encryption set is created. Supported characters for the name are\n   *                              a-z, A-Z, 0-9, _ and -. The maximum name length is 80 characters.\n   * @param options The options parameters.\n   */\n  get(\n    resourceGroupName: string,\n    diskEncryptionSetName: string,\n    options?: DiskEncryptionSetsGetOptionalParams\n  ): Promise<DiskEncryptionSetsGetResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, diskEncryptionSetName, options },\n      getOperationSpec\n    );\n  }\n\n  /**\n   * Deletes a disk encryption set.\n   * @param resourceGroupName The name of the resource group.\n   * @param diskEncryptionSetName The name of the disk encryption set that is being created. The name\n   *                              can't be changed after the disk encryption set is created. Supported characters for the name are\n   *                              a-z, A-Z, 0-9, _ and -. The maximum name length is 80 characters.\n   * @param options The options parameters.\n   */\n  async beginDelete(\n    resourceGroupName: string,\n    diskEncryptionSetName: string,\n    options?: DiskEncryptionSetsDeleteOptionalParams\n  ): Promise<PollerLike<PollOperationState<void>, void>> {\n    const directSendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ): Promise<void> => {\n      return this.client.sendOperationRequest(args, spec);\n    };\n    const sendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ) => {\n      let currentRawResponse:\n        | coreClient.FullOperationResponse\n        | undefined = undefined;\n      const providedCallback = args.options?.onResponse;\n      const callback: coreClient.RawResponseCallback = (\n        rawResponse: coreClient.FullOperationResponse,\n        flatResponse: unknown\n      ) => {\n        currentRawResponse = rawResponse;\n        providedCallback?.(rawResponse, flatResponse);\n      };\n      const updatedArgs = {\n        ...args,\n        options: {\n          ...args.options,\n          onResponse: callback\n        }\n      };\n      const flatResponse = await directSendOperation(updatedArgs, spec);\n      return {\n        flatResponse,\n        rawResponse: {\n          statusCode: currentRawResponse!.status,\n          body: currentRawResponse!.parsedBody,\n          headers: currentRawResponse!.headers.toJSON()\n        }\n      };\n    };\n\n    const lro = new LroImpl(\n      sendOperation,\n      { resourceGroupName, diskEncryptionSetName, options },\n      deleteOperationSpec\n    );\n    return new LroEngine(lro, {\n      resumeFrom: options?.resumeFrom,\n      intervalInMs: options?.updateIntervalInMs\n    });\n  }\n\n  /**\n   * Deletes a disk encryption set.\n   * @param resourceGroupName The name of the resource group.\n   * @param diskEncryptionSetName The name of the disk encryption set that is being created. The name\n   *                              can't be changed after the disk encryption set is created. Supported characters for the name are\n   *                              a-z, A-Z, 0-9, _ and -. The maximum name length is 80 characters.\n   * @param options The options parameters.\n   */\n  async beginDeleteAndWait(\n    resourceGroupName: string,\n    diskEncryptionSetName: string,\n    options?: DiskEncryptionSetsDeleteOptionalParams\n  ): Promise<void> {\n    const poller = await this.beginDelete(\n      resourceGroupName,\n      diskEncryptionSetName,\n      options\n    );\n    return poller.pollUntilDone();\n  }\n\n  /**\n   * Lists all the disk encryption sets under a resource group.\n   * @param resourceGroupName The name of the resource group.\n   * @param options The options parameters.\n   */\n  private _listByResourceGroup(\n    resourceGroupName: string,\n    options?: DiskEncryptionSetsListByResourceGroupOptionalParams\n  ): Promise<DiskEncryptionSetsListByResourceGroupResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, options },\n      listByResourceGroupOperationSpec\n    );\n  }\n\n  /**\n   * Lists all the disk encryption sets under a subscription.\n   * @param options The options parameters.\n   */\n  private _list(\n    options?: DiskEncryptionSetsListOptionalParams\n  ): Promise<DiskEncryptionSetsListResponse> {\n    return this.client.sendOperationRequest({ options }, listOperationSpec);\n  }\n\n  /**\n   * Lists all resources that are encrypted with this disk encryption set.\n   * @param resourceGroupName The name of the resource group.\n   * @param diskEncryptionSetName The name of the disk encryption set that is being created. The name\n   *                              can't be changed after the disk encryption set is created. Supported characters for the name are\n   *                              a-z, A-Z, 0-9, _ and -. The maximum name length is 80 characters.\n   * @param options The options parameters.\n   */\n  private _listAssociatedResources(\n    resourceGroupName: string,\n    diskEncryptionSetName: string,\n    options?: DiskEncryptionSetsListAssociatedResourcesOptionalParams\n  ): Promise<DiskEncryptionSetsListAssociatedResourcesResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, diskEncryptionSetName, options },\n      listAssociatedResourcesOperationSpec\n    );\n  }\n\n  /**\n   * ListByResourceGroupNext\n   * @param resourceGroupName The name of the resource group.\n   * @param nextLink The nextLink from the previous successful call to the ListByResourceGroup method.\n   * @param options The options parameters.\n   */\n  private _listByResourceGroupNext(\n    resourceGroupName: string,\n    nextLink: string,\n    options?: DiskEncryptionSetsListByResourceGroupNextOptionalParams\n  ): Promise<DiskEncryptionSetsListByResourceGroupNextResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, nextLink, options },\n      listByResourceGroupNextOperationSpec\n    );\n  }\n\n  /**\n   * ListNext\n   * @param nextLink The nextLink from the previous successful call to the List method.\n   * @param options The options parameters.\n   */\n  private _listNext(\n    nextLink: string,\n    options?: DiskEncryptionSetsListNextOptionalParams\n  ): Promise<DiskEncryptionSetsListNextResponse> {\n    return this.client.sendOperationRequest(\n      { nextLink, options },\n      listNextOperationSpec\n    );\n  }\n\n  /**\n   * ListAssociatedResourcesNext\n   * @param resourceGroupName The name of the resource group.\n   * @param diskEncryptionSetName The name of the disk encryption set that is being created. The name\n   *                              can't be changed after the disk encryption set is created. Supported characters for the name are\n   *                              a-z, A-Z, 0-9, _ and -. The maximum name length is 80 characters.\n   * @param nextLink The nextLink from the previous successful call to the ListAssociatedResources\n   *                 method.\n   * @param options The options parameters.\n   */\n  private _listAssociatedResourcesNext(\n    resourceGroupName: string,\n    diskEncryptionSetName: string,\n    nextLink: string,\n    options?: DiskEncryptionSetsListAssociatedResourcesNextOptionalParams\n  ): Promise<DiskEncryptionSetsListAssociatedResourcesNextResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, diskEncryptionSetName, nextLink, options },\n      listAssociatedResourcesNextOperationSpec\n    );\n  }\n}\n// Operation Specifications\nconst serializer = coreClient.createSerializer(Mappers, /* isXml */ false);\n\nconst createOrUpdateOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/diskEncryptionSets/{diskEncryptionSetName}\",\n  httpMethod: \"PUT\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.DiskEncryptionSet\n    },\n    201: {\n      bodyMapper: Mappers.DiskEncryptionSet\n    },\n    202: {\n      bodyMapper: Mappers.DiskEncryptionSet\n    },\n    204: {\n      bodyMapper: Mappers.DiskEncryptionSet\n    },\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  requestBody: Parameters.diskEncryptionSet,\n  queryParameters: [Parameters.apiVersion2],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.resourceGroupName,\n    Parameters.subscriptionId,\n    Parameters.diskEncryptionSetName\n  ],\n  headerParameters: [Parameters.accept, Parameters.contentType],\n  mediaType: \"json\",\n  serializer\n};\nconst updateOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/diskEncryptionSets/{diskEncryptionSetName}\",\n  httpMethod: \"PATCH\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.DiskEncryptionSet\n    },\n    201: {\n      bodyMapper: Mappers.DiskEncryptionSet\n    },\n    202: {\n      bodyMapper: Mappers.DiskEncryptionSet\n    },\n    204: {\n      bodyMapper: Mappers.DiskEncryptionSet\n    },\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  requestBody: Parameters.diskEncryptionSet1,\n  queryParameters: [Parameters.apiVersion2],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.resourceGroupName,\n    Parameters.subscriptionId,\n    Parameters.diskEncryptionSetName\n  ],\n  headerParameters: [Parameters.accept, Parameters.contentType],\n  mediaType: \"json\",\n  serializer\n};\nconst getOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/diskEncryptionSets/{diskEncryptionSetName}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.DiskEncryptionSet\n    },\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  queryParameters: [Parameters.apiVersion2],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.resourceGroupName,\n    Parameters.subscriptionId,\n    Parameters.diskEncryptionSetName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst deleteOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/diskEncryptionSets/{diskEncryptionSetName}\",\n  httpMethod: \"DELETE\",\n  responses: {\n    200: {},\n    201: {},\n    202: {},\n    204: {},\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  queryParameters: [Parameters.apiVersion2],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.resourceGroupName,\n    Parameters.subscriptionId,\n    Parameters.diskEncryptionSetName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst listByResourceGroupOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/diskEncryptionSets\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.DiskEncryptionSetList\n    },\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  queryParameters: [Parameters.apiVersion2],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.resourceGroupName,\n    Parameters.subscriptionId\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst listOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/providers/Microsoft.Compute/diskEncryptionSets\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.DiskEncryptionSetList\n    },\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  queryParameters: [Parameters.apiVersion2],\n  urlParameters: [Parameters.$host, Parameters.subscriptionId],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst listAssociatedResourcesOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/diskEncryptionSets/{diskEncryptionSetName}/associatedResources\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.ResourceUriList\n    },\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  queryParameters: [Parameters.apiVersion2],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.resourceGroupName,\n    Parameters.subscriptionId,\n    Parameters.diskEncryptionSetName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst listByResourceGroupNextOperationSpec: coreClient.OperationSpec = {\n  path: \"{nextLink}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.DiskEncryptionSetList\n    },\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  queryParameters: [Parameters.apiVersion2],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.resourceGroupName,\n    Parameters.subscriptionId,\n    Parameters.nextLink\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst listNextOperationSpec: coreClient.OperationSpec = {\n  path: \"{nextLink}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.DiskEncryptionSetList\n    },\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  queryParameters: [Parameters.apiVersion2],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.nextLink\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst listAssociatedResourcesNextOperationSpec: coreClient.OperationSpec = {\n  path: \"{nextLink}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.ResourceUriList\n    },\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  queryParameters: [Parameters.apiVersion2],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.resourceGroupName,\n    Parameters.subscriptionId,\n    Parameters.nextLink,\n    Parameters.diskEncryptionSetName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport { PagedAsyncIterableIterator } from \"@azure/core-paging\";\nimport { DiskAccesses } from \"../operationsInterfaces\";\nimport * as coreClient from \"@azure/core-client\";\nimport * as Mappers from \"../models/mappers\";\nimport * as Parameters from \"../models/parameters\";\nimport { ComputeManagementClient } from \"../computeManagementClient\";\nimport { PollerLike, PollOperationState, LroEngine } from \"@azure/core-lro\";\nimport { LroImpl } from \"../lroImpl\";\nimport {\n  DiskAccess,\n  DiskAccessesListByResourceGroupNextOptionalParams,\n  DiskAccessesListByResourceGroupOptionalParams,\n  DiskAccessesListNextOptionalParams,\n  DiskAccessesListOptionalParams,\n  PrivateEndpointConnection,\n  DiskAccessesListPrivateEndpointConnectionsNextOptionalParams,\n  DiskAccessesListPrivateEndpointConnectionsOptionalParams,\n  DiskAccessesCreateOrUpdateOptionalParams,\n  DiskAccessesCreateOrUpdateResponse,\n  DiskAccessUpdate,\n  DiskAccessesUpdateOptionalParams,\n  DiskAccessesUpdateResponse,\n  DiskAccessesGetOptionalParams,\n  DiskAccessesGetResponse,\n  DiskAccessesDeleteOptionalParams,\n  DiskAccessesListByResourceGroupResponse,\n  DiskAccessesListResponse,\n  DiskAccessesGetPrivateLinkResourcesOptionalParams,\n  DiskAccessesGetPrivateLinkResourcesResponse,\n  DiskAccessesUpdateAPrivateEndpointConnectionOptionalParams,\n  DiskAccessesUpdateAPrivateEndpointConnectionResponse,\n  DiskAccessesGetAPrivateEndpointConnectionOptionalParams,\n  DiskAccessesGetAPrivateEndpointConnectionResponse,\n  DiskAccessesDeleteAPrivateEndpointConnectionOptionalParams,\n  DiskAccessesListPrivateEndpointConnectionsResponse,\n  DiskAccessesListByResourceGroupNextResponse,\n  DiskAccessesListNextResponse,\n  DiskAccessesListPrivateEndpointConnectionsNextResponse\n} from \"../models\";\n\n/// <reference lib=\"esnext.asynciterable\" />\n/** Class containing DiskAccesses operations. */\nexport class DiskAccessesImpl implements DiskAccesses {\n  private readonly client: ComputeManagementClient;\n\n  /**\n   * Initialize a new instance of the class DiskAccesses class.\n   * @param client Reference to the service client\n   */\n  constructor(client: ComputeManagementClient) {\n    this.client = client;\n  }\n\n  /**\n   * Lists all the disk access resources under a resource group.\n   * @param resourceGroupName The name of the resource group.\n   * @param options The options parameters.\n   */\n  public listByResourceGroup(\n    resourceGroupName: string,\n    options?: DiskAccessesListByResourceGroupOptionalParams\n  ): PagedAsyncIterableIterator<DiskAccess> {\n    const iter = this.listByResourceGroupPagingAll(resourceGroupName, options);\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: () => {\n        return this.listByResourceGroupPagingPage(resourceGroupName, options);\n      }\n    };\n  }\n\n  private async *listByResourceGroupPagingPage(\n    resourceGroupName: string,\n    options?: DiskAccessesListByResourceGroupOptionalParams\n  ): AsyncIterableIterator<DiskAccess[]> {\n    let result = await this._listByResourceGroup(resourceGroupName, options);\n    yield result.value || [];\n    let continuationToken = result.nextLink;\n    while (continuationToken) {\n      result = await this._listByResourceGroupNext(\n        resourceGroupName,\n        continuationToken,\n        options\n      );\n      continuationToken = result.nextLink;\n      yield result.value || [];\n    }\n  }\n\n  private async *listByResourceGroupPagingAll(\n    resourceGroupName: string,\n    options?: DiskAccessesListByResourceGroupOptionalParams\n  ): AsyncIterableIterator<DiskAccess> {\n    for await (const page of this.listByResourceGroupPagingPage(\n      resourceGroupName,\n      options\n    )) {\n      yield* page;\n    }\n  }\n\n  /**\n   * Lists all the disk access resources under a subscription.\n   * @param options The options parameters.\n   */\n  public list(\n    options?: DiskAccessesListOptionalParams\n  ): PagedAsyncIterableIterator<DiskAccess> {\n    const iter = this.listPagingAll(options);\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: () => {\n        return this.listPagingPage(options);\n      }\n    };\n  }\n\n  private async *listPagingPage(\n    options?: DiskAccessesListOptionalParams\n  ): AsyncIterableIterator<DiskAccess[]> {\n    let result = await this._list(options);\n    yield result.value || [];\n    let continuationToken = result.nextLink;\n    while (continuationToken) {\n      result = await this._listNext(continuationToken, options);\n      continuationToken = result.nextLink;\n      yield result.value || [];\n    }\n  }\n\n  private async *listPagingAll(\n    options?: DiskAccessesListOptionalParams\n  ): AsyncIterableIterator<DiskAccess> {\n    for await (const page of this.listPagingPage(options)) {\n      yield* page;\n    }\n  }\n\n  /**\n   * List information about private endpoint connections under a disk access resource\n   * @param resourceGroupName The name of the resource group.\n   * @param diskAccessName The name of the disk access resource that is being created. The name can't be\n   *                       changed after the disk encryption set is created. Supported characters for the name are a-z, A-Z,\n   *                       0-9, _ and -. The maximum name length is 80 characters.\n   * @param options The options parameters.\n   */\n  public listPrivateEndpointConnections(\n    resourceGroupName: string,\n    diskAccessName: string,\n    options?: DiskAccessesListPrivateEndpointConnectionsOptionalParams\n  ): PagedAsyncIterableIterator<PrivateEndpointConnection> {\n    const iter = this.listPrivateEndpointConnectionsPagingAll(\n      resourceGroupName,\n      diskAccessName,\n      options\n    );\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: () => {\n        return this.listPrivateEndpointConnectionsPagingPage(\n          resourceGroupName,\n          diskAccessName,\n          options\n        );\n      }\n    };\n  }\n\n  private async *listPrivateEndpointConnectionsPagingPage(\n    resourceGroupName: string,\n    diskAccessName: string,\n    options?: DiskAccessesListPrivateEndpointConnectionsOptionalParams\n  ): AsyncIterableIterator<PrivateEndpointConnection[]> {\n    let result = await this._listPrivateEndpointConnections(\n      resourceGroupName,\n      diskAccessName,\n      options\n    );\n    yield result.value || [];\n    let continuationToken = result.nextLink;\n    while (continuationToken) {\n      result = await this._listPrivateEndpointConnectionsNext(\n        resourceGroupName,\n        diskAccessName,\n        continuationToken,\n        options\n      );\n      continuationToken = result.nextLink;\n      yield result.value || [];\n    }\n  }\n\n  private async *listPrivateEndpointConnectionsPagingAll(\n    resourceGroupName: string,\n    diskAccessName: string,\n    options?: DiskAccessesListPrivateEndpointConnectionsOptionalParams\n  ): AsyncIterableIterator<PrivateEndpointConnection> {\n    for await (const page of this.listPrivateEndpointConnectionsPagingPage(\n      resourceGroupName,\n      diskAccessName,\n      options\n    )) {\n      yield* page;\n    }\n  }\n\n  /**\n   * Creates or updates a disk access resource\n   * @param resourceGroupName The name of the resource group.\n   * @param diskAccessName The name of the disk access resource that is being created. The name can't be\n   *                       changed after the disk encryption set is created. Supported characters for the name are a-z, A-Z,\n   *                       0-9, _ and -. The maximum name length is 80 characters.\n   * @param diskAccess disk access object supplied in the body of the Put disk access operation.\n   * @param options The options parameters.\n   */\n  async beginCreateOrUpdate(\n    resourceGroupName: string,\n    diskAccessName: string,\n    diskAccess: DiskAccess,\n    options?: DiskAccessesCreateOrUpdateOptionalParams\n  ): Promise<\n    PollerLike<\n      PollOperationState<DiskAccessesCreateOrUpdateResponse>,\n      DiskAccessesCreateOrUpdateResponse\n    >\n  > {\n    const directSendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ): Promise<DiskAccessesCreateOrUpdateResponse> => {\n      return this.client.sendOperationRequest(args, spec);\n    };\n    const sendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ) => {\n      let currentRawResponse:\n        | coreClient.FullOperationResponse\n        | undefined = undefined;\n      const providedCallback = args.options?.onResponse;\n      const callback: coreClient.RawResponseCallback = (\n        rawResponse: coreClient.FullOperationResponse,\n        flatResponse: unknown\n      ) => {\n        currentRawResponse = rawResponse;\n        providedCallback?.(rawResponse, flatResponse);\n      };\n      const updatedArgs = {\n        ...args,\n        options: {\n          ...args.options,\n          onResponse: callback\n        }\n      };\n      const flatResponse = await directSendOperation(updatedArgs, spec);\n      return {\n        flatResponse,\n        rawResponse: {\n          statusCode: currentRawResponse!.status,\n          body: currentRawResponse!.parsedBody,\n          headers: currentRawResponse!.headers.toJSON()\n        }\n      };\n    };\n\n    const lro = new LroImpl(\n      sendOperation,\n      { resourceGroupName, diskAccessName, diskAccess, options },\n      createOrUpdateOperationSpec\n    );\n    return new LroEngine(lro, {\n      resumeFrom: options?.resumeFrom,\n      intervalInMs: options?.updateIntervalInMs\n    });\n  }\n\n  /**\n   * Creates or updates a disk access resource\n   * @param resourceGroupName The name of the resource group.\n   * @param diskAccessName The name of the disk access resource that is being created. The name can't be\n   *                       changed after the disk encryption set is created. Supported characters for the name are a-z, A-Z,\n   *                       0-9, _ and -. The maximum name length is 80 characters.\n   * @param diskAccess disk access object supplied in the body of the Put disk access operation.\n   * @param options The options parameters.\n   */\n  async beginCreateOrUpdateAndWait(\n    resourceGroupName: string,\n    diskAccessName: string,\n    diskAccess: DiskAccess,\n    options?: DiskAccessesCreateOrUpdateOptionalParams\n  ): Promise<DiskAccessesCreateOrUpdateResponse> {\n    const poller = await this.beginCreateOrUpdate(\n      resourceGroupName,\n      diskAccessName,\n      diskAccess,\n      options\n    );\n    return poller.pollUntilDone();\n  }\n\n  /**\n   * Updates (patches) a disk access resource.\n   * @param resourceGroupName The name of the resource group.\n   * @param diskAccessName The name of the disk access resource that is being created. The name can't be\n   *                       changed after the disk encryption set is created. Supported characters for the name are a-z, A-Z,\n   *                       0-9, _ and -. The maximum name length is 80 characters.\n   * @param diskAccess disk access object supplied in the body of the Patch disk access operation.\n   * @param options The options parameters.\n   */\n  async beginUpdate(\n    resourceGroupName: string,\n    diskAccessName: string,\n    diskAccess: DiskAccessUpdate,\n    options?: DiskAccessesUpdateOptionalParams\n  ): Promise<\n    PollerLike<\n      PollOperationState<DiskAccessesUpdateResponse>,\n      DiskAccessesUpdateResponse\n    >\n  > {\n    const directSendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ): Promise<DiskAccessesUpdateResponse> => {\n      return this.client.sendOperationRequest(args, spec);\n    };\n    const sendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ) => {\n      let currentRawResponse:\n        | coreClient.FullOperationResponse\n        | undefined = undefined;\n      const providedCallback = args.options?.onResponse;\n      const callback: coreClient.RawResponseCallback = (\n        rawResponse: coreClient.FullOperationResponse,\n        flatResponse: unknown\n      ) => {\n        currentRawResponse = rawResponse;\n        providedCallback?.(rawResponse, flatResponse);\n      };\n      const updatedArgs = {\n        ...args,\n        options: {\n          ...args.options,\n          onResponse: callback\n        }\n      };\n      const flatResponse = await directSendOperation(updatedArgs, spec);\n      return {\n        flatResponse,\n        rawResponse: {\n          statusCode: currentRawResponse!.status,\n          body: currentRawResponse!.parsedBody,\n          headers: currentRawResponse!.headers.toJSON()\n        }\n      };\n    };\n\n    const lro = new LroImpl(\n      sendOperation,\n      { resourceGroupName, diskAccessName, diskAccess, options },\n      updateOperationSpec\n    );\n    return new LroEngine(lro, {\n      resumeFrom: options?.resumeFrom,\n      intervalInMs: options?.updateIntervalInMs\n    });\n  }\n\n  /**\n   * Updates (patches) a disk access resource.\n   * @param resourceGroupName The name of the resource group.\n   * @param diskAccessName The name of the disk access resource that is being created. The name can't be\n   *                       changed after the disk encryption set is created. Supported characters for the name are a-z, A-Z,\n   *                       0-9, _ and -. The maximum name length is 80 characters.\n   * @param diskAccess disk access object supplied in the body of the Patch disk access operation.\n   * @param options The options parameters.\n   */\n  async beginUpdateAndWait(\n    resourceGroupName: string,\n    diskAccessName: string,\n    diskAccess: DiskAccessUpdate,\n    options?: DiskAccessesUpdateOptionalParams\n  ): Promise<DiskAccessesUpdateResponse> {\n    const poller = await this.beginUpdate(\n      resourceGroupName,\n      diskAccessName,\n      diskAccess,\n      options\n    );\n    return poller.pollUntilDone();\n  }\n\n  /**\n   * Gets information about a disk access resource.\n   * @param resourceGroupName The name of the resource group.\n   * @param diskAccessName The name of the disk access resource that is being created. The name can't be\n   *                       changed after the disk encryption set is created. Supported characters for the name are a-z, A-Z,\n   *                       0-9, _ and -. The maximum name length is 80 characters.\n   * @param options The options parameters.\n   */\n  get(\n    resourceGroupName: string,\n    diskAccessName: string,\n    options?: DiskAccessesGetOptionalParams\n  ): Promise<DiskAccessesGetResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, diskAccessName, options },\n      getOperationSpec\n    );\n  }\n\n  /**\n   * Deletes a disk access resource.\n   * @param resourceGroupName The name of the resource group.\n   * @param diskAccessName The name of the disk access resource that is being created. The name can't be\n   *                       changed after the disk encryption set is created. Supported characters for the name are a-z, A-Z,\n   *                       0-9, _ and -. The maximum name length is 80 characters.\n   * @param options The options parameters.\n   */\n  async beginDelete(\n    resourceGroupName: string,\n    diskAccessName: string,\n    options?: DiskAccessesDeleteOptionalParams\n  ): Promise<PollerLike<PollOperationState<void>, void>> {\n    const directSendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ): Promise<void> => {\n      return this.client.sendOperationRequest(args, spec);\n    };\n    const sendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ) => {\n      let currentRawResponse:\n        | coreClient.FullOperationResponse\n        | undefined = undefined;\n      const providedCallback = args.options?.onResponse;\n      const callback: coreClient.RawResponseCallback = (\n        rawResponse: coreClient.FullOperationResponse,\n        flatResponse: unknown\n      ) => {\n        currentRawResponse = rawResponse;\n        providedCallback?.(rawResponse, flatResponse);\n      };\n      const updatedArgs = {\n        ...args,\n        options: {\n          ...args.options,\n          onResponse: callback\n        }\n      };\n      const flatResponse = await directSendOperation(updatedArgs, spec);\n      return {\n        flatResponse,\n        rawResponse: {\n          statusCode: currentRawResponse!.status,\n          body: currentRawResponse!.parsedBody,\n          headers: currentRawResponse!.headers.toJSON()\n        }\n      };\n    };\n\n    const lro = new LroImpl(\n      sendOperation,\n      { resourceGroupName, diskAccessName, options },\n      deleteOperationSpec\n    );\n    return new LroEngine(lro, {\n      resumeFrom: options?.resumeFrom,\n      intervalInMs: options?.updateIntervalInMs\n    });\n  }\n\n  /**\n   * Deletes a disk access resource.\n   * @param resourceGroupName The name of the resource group.\n   * @param diskAccessName The name of the disk access resource that is being created. The name can't be\n   *                       changed after the disk encryption set is created. Supported characters for the name are a-z, A-Z,\n   *                       0-9, _ and -. The maximum name length is 80 characters.\n   * @param options The options parameters.\n   */\n  async beginDeleteAndWait(\n    resourceGroupName: string,\n    diskAccessName: string,\n    options?: DiskAccessesDeleteOptionalParams\n  ): Promise<void> {\n    const poller = await this.beginDelete(\n      resourceGroupName,\n      diskAccessName,\n      options\n    );\n    return poller.pollUntilDone();\n  }\n\n  /**\n   * Lists all the disk access resources under a resource group.\n   * @param resourceGroupName The name of the resource group.\n   * @param options The options parameters.\n   */\n  private _listByResourceGroup(\n    resourceGroupName: string,\n    options?: DiskAccessesListByResourceGroupOptionalParams\n  ): Promise<DiskAccessesListByResourceGroupResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, options },\n      listByResourceGroupOperationSpec\n    );\n  }\n\n  /**\n   * Lists all the disk access resources under a subscription.\n   * @param options The options parameters.\n   */\n  private _list(\n    options?: DiskAccessesListOptionalParams\n  ): Promise<DiskAccessesListResponse> {\n    return this.client.sendOperationRequest({ options }, listOperationSpec);\n  }\n\n  /**\n   * Gets the private link resources possible under disk access resource\n   * @param resourceGroupName The name of the resource group.\n   * @param diskAccessName The name of the disk access resource that is being created. The name can't be\n   *                       changed after the disk encryption set is created. Supported characters for the name are a-z, A-Z,\n   *                       0-9, _ and -. The maximum name length is 80 characters.\n   * @param options The options parameters.\n   */\n  getPrivateLinkResources(\n    resourceGroupName: string,\n    diskAccessName: string,\n    options?: DiskAccessesGetPrivateLinkResourcesOptionalParams\n  ): Promise<DiskAccessesGetPrivateLinkResourcesResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, diskAccessName, options },\n      getPrivateLinkResourcesOperationSpec\n    );\n  }\n\n  /**\n   * Approve or reject a private endpoint connection under disk access resource, this can't be used to\n   * create a new private endpoint connection.\n   * @param resourceGroupName The name of the resource group.\n   * @param diskAccessName The name of the disk access resource that is being created. The name can't be\n   *                       changed after the disk encryption set is created. Supported characters for the name are a-z, A-Z,\n   *                       0-9, _ and -. The maximum name length is 80 characters.\n   * @param privateEndpointConnectionName The name of the private endpoint connection.\n   * @param privateEndpointConnection private endpoint connection object supplied in the body of the Put\n   *                                  private endpoint connection operation.\n   * @param options The options parameters.\n   */\n  async beginUpdateAPrivateEndpointConnection(\n    resourceGroupName: string,\n    diskAccessName: string,\n    privateEndpointConnectionName: string,\n    privateEndpointConnection: PrivateEndpointConnection,\n    options?: DiskAccessesUpdateAPrivateEndpointConnectionOptionalParams\n  ): Promise<\n    PollerLike<\n      PollOperationState<DiskAccessesUpdateAPrivateEndpointConnectionResponse>,\n      DiskAccessesUpdateAPrivateEndpointConnectionResponse\n    >\n  > {\n    const directSendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ): Promise<DiskAccessesUpdateAPrivateEndpointConnectionResponse> => {\n      return this.client.sendOperationRequest(args, spec);\n    };\n    const sendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ) => {\n      let currentRawResponse:\n        | coreClient.FullOperationResponse\n        | undefined = undefined;\n      const providedCallback = args.options?.onResponse;\n      const callback: coreClient.RawResponseCallback = (\n        rawResponse: coreClient.FullOperationResponse,\n        flatResponse: unknown\n      ) => {\n        currentRawResponse = rawResponse;\n        providedCallback?.(rawResponse, flatResponse);\n      };\n      const updatedArgs = {\n        ...args,\n        options: {\n          ...args.options,\n          onResponse: callback\n        }\n      };\n      const flatResponse = await directSendOperation(updatedArgs, spec);\n      return {\n        flatResponse,\n        rawResponse: {\n          statusCode: currentRawResponse!.status,\n          body: currentRawResponse!.parsedBody,\n          headers: currentRawResponse!.headers.toJSON()\n        }\n      };\n    };\n\n    const lro = new LroImpl(\n      sendOperation,\n      {\n        resourceGroupName,\n        diskAccessName,\n        privateEndpointConnectionName,\n        privateEndpointConnection,\n        options\n      },\n      updateAPrivateEndpointConnectionOperationSpec\n    );\n    return new LroEngine(lro, {\n      resumeFrom: options?.resumeFrom,\n      intervalInMs: options?.updateIntervalInMs\n    });\n  }\n\n  /**\n   * Approve or reject a private endpoint connection under disk access resource, this can't be used to\n   * create a new private endpoint connection.\n   * @param resourceGroupName The name of the resource group.\n   * @param diskAccessName The name of the disk access resource that is being created. The name can't be\n   *                       changed after the disk encryption set is created. Supported characters for the name are a-z, A-Z,\n   *                       0-9, _ and -. The maximum name length is 80 characters.\n   * @param privateEndpointConnectionName The name of the private endpoint connection.\n   * @param privateEndpointConnection private endpoint connection object supplied in the body of the Put\n   *                                  private endpoint connection operation.\n   * @param options The options parameters.\n   */\n  async beginUpdateAPrivateEndpointConnectionAndWait(\n    resourceGroupName: string,\n    diskAccessName: string,\n    privateEndpointConnectionName: string,\n    privateEndpointConnection: PrivateEndpointConnection,\n    options?: DiskAccessesUpdateAPrivateEndpointConnectionOptionalParams\n  ): Promise<DiskAccessesUpdateAPrivateEndpointConnectionResponse> {\n    const poller = await this.beginUpdateAPrivateEndpointConnection(\n      resourceGroupName,\n      diskAccessName,\n      privateEndpointConnectionName,\n      privateEndpointConnection,\n      options\n    );\n    return poller.pollUntilDone();\n  }\n\n  /**\n   * Gets information about a private endpoint connection under a disk access resource.\n   * @param resourceGroupName The name of the resource group.\n   * @param diskAccessName The name of the disk access resource that is being created. The name can't be\n   *                       changed after the disk encryption set is created. Supported characters for the name are a-z, A-Z,\n   *                       0-9, _ and -. The maximum name length is 80 characters.\n   * @param privateEndpointConnectionName The name of the private endpoint connection.\n   * @param options The options parameters.\n   */\n  getAPrivateEndpointConnection(\n    resourceGroupName: string,\n    diskAccessName: string,\n    privateEndpointConnectionName: string,\n    options?: DiskAccessesGetAPrivateEndpointConnectionOptionalParams\n  ): Promise<DiskAccessesGetAPrivateEndpointConnectionResponse> {\n    return this.client.sendOperationRequest(\n      {\n        resourceGroupName,\n        diskAccessName,\n        privateEndpointConnectionName,\n        options\n      },\n      getAPrivateEndpointConnectionOperationSpec\n    );\n  }\n\n  /**\n   * Deletes a private endpoint connection under a disk access resource.\n   * @param resourceGroupName The name of the resource group.\n   * @param diskAccessName The name of the disk access resource that is being created. The name can't be\n   *                       changed after the disk encryption set is created. Supported characters for the name are a-z, A-Z,\n   *                       0-9, _ and -. The maximum name length is 80 characters.\n   * @param privateEndpointConnectionName The name of the private endpoint connection.\n   * @param options The options parameters.\n   */\n  async beginDeleteAPrivateEndpointConnection(\n    resourceGroupName: string,\n    diskAccessName: string,\n    privateEndpointConnectionName: string,\n    options?: DiskAccessesDeleteAPrivateEndpointConnectionOptionalParams\n  ): Promise<PollerLike<PollOperationState<void>, void>> {\n    const directSendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ): Promise<void> => {\n      return this.client.sendOperationRequest(args, spec);\n    };\n    const sendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ) => {\n      let currentRawResponse:\n        | coreClient.FullOperationResponse\n        | undefined = undefined;\n      const providedCallback = args.options?.onResponse;\n      const callback: coreClient.RawResponseCallback = (\n        rawResponse: coreClient.FullOperationResponse,\n        flatResponse: unknown\n      ) => {\n        currentRawResponse = rawResponse;\n        providedCallback?.(rawResponse, flatResponse);\n      };\n      const updatedArgs = {\n        ...args,\n        options: {\n          ...args.options,\n          onResponse: callback\n        }\n      };\n      const flatResponse = await directSendOperation(updatedArgs, spec);\n      return {\n        flatResponse,\n        rawResponse: {\n          statusCode: currentRawResponse!.status,\n          body: currentRawResponse!.parsedBody,\n          headers: currentRawResponse!.headers.toJSON()\n        }\n      };\n    };\n\n    const lro = new LroImpl(\n      sendOperation,\n      {\n        resourceGroupName,\n        diskAccessName,\n        privateEndpointConnectionName,\n        options\n      },\n      deleteAPrivateEndpointConnectionOperationSpec\n    );\n    return new LroEngine(lro, {\n      resumeFrom: options?.resumeFrom,\n      intervalInMs: options?.updateIntervalInMs\n    });\n  }\n\n  /**\n   * Deletes a private endpoint connection under a disk access resource.\n   * @param resourceGroupName The name of the resource group.\n   * @param diskAccessName The name of the disk access resource that is being created. The name can't be\n   *                       changed after the disk encryption set is created. Supported characters for the name are a-z, A-Z,\n   *                       0-9, _ and -. The maximum name length is 80 characters.\n   * @param privateEndpointConnectionName The name of the private endpoint connection.\n   * @param options The options parameters.\n   */\n  async beginDeleteAPrivateEndpointConnectionAndWait(\n    resourceGroupName: string,\n    diskAccessName: string,\n    privateEndpointConnectionName: string,\n    options?: DiskAccessesDeleteAPrivateEndpointConnectionOptionalParams\n  ): Promise<void> {\n    const poller = await this.beginDeleteAPrivateEndpointConnection(\n      resourceGroupName,\n      diskAccessName,\n      privateEndpointConnectionName,\n      options\n    );\n    return poller.pollUntilDone();\n  }\n\n  /**\n   * List information about private endpoint connections under a disk access resource\n   * @param resourceGroupName The name of the resource group.\n   * @param diskAccessName The name of the disk access resource that is being created. The name can't be\n   *                       changed after the disk encryption set is created. Supported characters for the name are a-z, A-Z,\n   *                       0-9, _ and -. The maximum name length is 80 characters.\n   * @param options The options parameters.\n   */\n  private _listPrivateEndpointConnections(\n    resourceGroupName: string,\n    diskAccessName: string,\n    options?: DiskAccessesListPrivateEndpointConnectionsOptionalParams\n  ): Promise<DiskAccessesListPrivateEndpointConnectionsResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, diskAccessName, options },\n      listPrivateEndpointConnectionsOperationSpec\n    );\n  }\n\n  /**\n   * ListByResourceGroupNext\n   * @param resourceGroupName The name of the resource group.\n   * @param nextLink The nextLink from the previous successful call to the ListByResourceGroup method.\n   * @param options The options parameters.\n   */\n  private _listByResourceGroupNext(\n    resourceGroupName: string,\n    nextLink: string,\n    options?: DiskAccessesListByResourceGroupNextOptionalParams\n  ): Promise<DiskAccessesListByResourceGroupNextResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, nextLink, options },\n      listByResourceGroupNextOperationSpec\n    );\n  }\n\n  /**\n   * ListNext\n   * @param nextLink The nextLink from the previous successful call to the List method.\n   * @param options The options parameters.\n   */\n  private _listNext(\n    nextLink: string,\n    options?: DiskAccessesListNextOptionalParams\n  ): Promise<DiskAccessesListNextResponse> {\n    return this.client.sendOperationRequest(\n      { nextLink, options },\n      listNextOperationSpec\n    );\n  }\n\n  /**\n   * ListPrivateEndpointConnectionsNext\n   * @param resourceGroupName The name of the resource group.\n   * @param diskAccessName The name of the disk access resource that is being created. The name can't be\n   *                       changed after the disk encryption set is created. Supported characters for the name are a-z, A-Z,\n   *                       0-9, _ and -. The maximum name length is 80 characters.\n   * @param nextLink The nextLink from the previous successful call to the ListPrivateEndpointConnections\n   *                 method.\n   * @param options The options parameters.\n   */\n  private _listPrivateEndpointConnectionsNext(\n    resourceGroupName: string,\n    diskAccessName: string,\n    nextLink: string,\n    options?: DiskAccessesListPrivateEndpointConnectionsNextOptionalParams\n  ): Promise<DiskAccessesListPrivateEndpointConnectionsNextResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, diskAccessName, nextLink, options },\n      listPrivateEndpointConnectionsNextOperationSpec\n    );\n  }\n}\n// Operation Specifications\nconst serializer = coreClient.createSerializer(Mappers, /* isXml */ false);\n\nconst createOrUpdateOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/diskAccesses/{diskAccessName}\",\n  httpMethod: \"PUT\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.DiskAccess\n    },\n    201: {\n      bodyMapper: Mappers.DiskAccess\n    },\n    202: {\n      bodyMapper: Mappers.DiskAccess\n    },\n    204: {\n      bodyMapper: Mappers.DiskAccess\n    },\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  requestBody: Parameters.diskAccess,\n  queryParameters: [Parameters.apiVersion2],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.resourceGroupName,\n    Parameters.subscriptionId,\n    Parameters.diskAccessName\n  ],\n  headerParameters: [Parameters.accept, Parameters.contentType],\n  mediaType: \"json\",\n  serializer\n};\nconst updateOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/diskAccesses/{diskAccessName}\",\n  httpMethod: \"PATCH\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.DiskAccess\n    },\n    201: {\n      bodyMapper: Mappers.DiskAccess\n    },\n    202: {\n      bodyMapper: Mappers.DiskAccess\n    },\n    204: {\n      bodyMapper: Mappers.DiskAccess\n    },\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  requestBody: Parameters.diskAccess1,\n  queryParameters: [Parameters.apiVersion2],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.resourceGroupName,\n    Parameters.subscriptionId,\n    Parameters.diskAccessName\n  ],\n  headerParameters: [Parameters.accept, Parameters.contentType],\n  mediaType: \"json\",\n  serializer\n};\nconst getOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/diskAccesses/{diskAccessName}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.DiskAccess\n    },\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  queryParameters: [Parameters.apiVersion2],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.resourceGroupName,\n    Parameters.subscriptionId,\n    Parameters.diskAccessName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst deleteOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/diskAccesses/{diskAccessName}\",\n  httpMethod: \"DELETE\",\n  responses: {\n    200: {},\n    201: {},\n    202: {},\n    204: {},\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  queryParameters: [Parameters.apiVersion2],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.resourceGroupName,\n    Parameters.subscriptionId,\n    Parameters.diskAccessName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst listByResourceGroupOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/diskAccesses\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.DiskAccessList\n    },\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  queryParameters: [Parameters.apiVersion2],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.resourceGroupName,\n    Parameters.subscriptionId\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst listOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/providers/Microsoft.Compute/diskAccesses\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.DiskAccessList\n    },\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  queryParameters: [Parameters.apiVersion2],\n  urlParameters: [Parameters.$host, Parameters.subscriptionId],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst getPrivateLinkResourcesOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/diskAccesses/{diskAccessName}/privateLinkResources\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.PrivateLinkResourceListResult\n    }\n  },\n  queryParameters: [Parameters.apiVersion2],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.resourceGroupName,\n    Parameters.subscriptionId,\n    Parameters.diskAccessName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst updateAPrivateEndpointConnectionOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/diskAccesses/{diskAccessName}/privateEndpointConnections/{privateEndpointConnectionName}\",\n  httpMethod: \"PUT\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.PrivateEndpointConnection\n    },\n    201: {\n      bodyMapper: Mappers.PrivateEndpointConnection\n    },\n    202: {\n      bodyMapper: Mappers.PrivateEndpointConnection\n    },\n    204: {\n      bodyMapper: Mappers.PrivateEndpointConnection\n    },\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  requestBody: Parameters.privateEndpointConnection,\n  queryParameters: [Parameters.apiVersion2],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.resourceGroupName,\n    Parameters.subscriptionId,\n    Parameters.diskAccessName,\n    Parameters.privateEndpointConnectionName\n  ],\n  headerParameters: [Parameters.accept, Parameters.contentType],\n  mediaType: \"json\",\n  serializer\n};\nconst getAPrivateEndpointConnectionOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/diskAccesses/{diskAccessName}/privateEndpointConnections/{privateEndpointConnectionName}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.PrivateEndpointConnection\n    },\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  queryParameters: [Parameters.apiVersion2],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.resourceGroupName,\n    Parameters.subscriptionId,\n    Parameters.diskAccessName,\n    Parameters.privateEndpointConnectionName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst deleteAPrivateEndpointConnectionOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/diskAccesses/{diskAccessName}/privateEndpointConnections/{privateEndpointConnectionName}\",\n  httpMethod: \"DELETE\",\n  responses: {\n    200: {},\n    201: {},\n    202: {},\n    204: {},\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  queryParameters: [Parameters.apiVersion2],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.resourceGroupName,\n    Parameters.subscriptionId,\n    Parameters.diskAccessName,\n    Parameters.privateEndpointConnectionName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst listPrivateEndpointConnectionsOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/diskAccesses/{diskAccessName}/privateEndpointConnections\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.PrivateEndpointConnectionListResult\n    },\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  queryParameters: [Parameters.apiVersion2],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.resourceGroupName,\n    Parameters.subscriptionId,\n    Parameters.diskAccessName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst listByResourceGroupNextOperationSpec: coreClient.OperationSpec = {\n  path: \"{nextLink}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.DiskAccessList\n    },\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  queryParameters: [Parameters.apiVersion2],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.resourceGroupName,\n    Parameters.subscriptionId,\n    Parameters.nextLink\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst listNextOperationSpec: coreClient.OperationSpec = {\n  path: \"{nextLink}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.DiskAccessList\n    },\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  queryParameters: [Parameters.apiVersion2],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.nextLink\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst listPrivateEndpointConnectionsNextOperationSpec: coreClient.OperationSpec = {\n  path: \"{nextLink}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.PrivateEndpointConnectionListResult\n    },\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  queryParameters: [Parameters.apiVersion2],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.resourceGroupName,\n    Parameters.subscriptionId,\n    Parameters.nextLink,\n    Parameters.diskAccessName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport { PagedAsyncIterableIterator } from \"@azure/core-paging\";\nimport { DiskRestorePointOperations } from \"../operationsInterfaces\";\nimport * as coreClient from \"@azure/core-client\";\nimport * as Mappers from \"../models/mappers\";\nimport * as Parameters from \"../models/parameters\";\nimport { ComputeManagementClient } from \"../computeManagementClient\";\nimport { PollerLike, PollOperationState, LroEngine } from \"@azure/core-lro\";\nimport { LroImpl } from \"../lroImpl\";\nimport {\n  DiskRestorePoint,\n  DiskRestorePointListByRestorePointNextOptionalParams,\n  DiskRestorePointListByRestorePointOptionalParams,\n  DiskRestorePointGetOptionalParams,\n  DiskRestorePointGetResponse,\n  DiskRestorePointListByRestorePointResponse,\n  GrantAccessData,\n  DiskRestorePointGrantAccessOptionalParams,\n  DiskRestorePointGrantAccessResponse,\n  DiskRestorePointRevokeAccessOptionalParams,\n  DiskRestorePointListByRestorePointNextResponse\n} from \"../models\";\n\n/// <reference lib=\"esnext.asynciterable\" />\n/** Class containing DiskRestorePointOperations operations. */\nexport class DiskRestorePointOperationsImpl\n  implements DiskRestorePointOperations {\n  private readonly client: ComputeManagementClient;\n\n  /**\n   * Initialize a new instance of the class DiskRestorePointOperations class.\n   * @param client Reference to the service client\n   */\n  constructor(client: ComputeManagementClient) {\n    this.client = client;\n  }\n\n  /**\n   * Lists diskRestorePoints under a vmRestorePoint.\n   * @param resourceGroupName The name of the resource group.\n   * @param restorePointCollectionName The name of the restore point collection that the disk restore\n   *                                   point belongs.\n   * @param vmRestorePointName The name of the vm restore point that the disk disk restore point belongs.\n   * @param options The options parameters.\n   */\n  public listByRestorePoint(\n    resourceGroupName: string,\n    restorePointCollectionName: string,\n    vmRestorePointName: string,\n    options?: DiskRestorePointListByRestorePointOptionalParams\n  ): PagedAsyncIterableIterator<DiskRestorePoint> {\n    const iter = this.listByRestorePointPagingAll(\n      resourceGroupName,\n      restorePointCollectionName,\n      vmRestorePointName,\n      options\n    );\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: () => {\n        return this.listByRestorePointPagingPage(\n          resourceGroupName,\n          restorePointCollectionName,\n          vmRestorePointName,\n          options\n        );\n      }\n    };\n  }\n\n  private async *listByRestorePointPagingPage(\n    resourceGroupName: string,\n    restorePointCollectionName: string,\n    vmRestorePointName: string,\n    options?: DiskRestorePointListByRestorePointOptionalParams\n  ): AsyncIterableIterator<DiskRestorePoint[]> {\n    let result = await this._listByRestorePoint(\n      resourceGroupName,\n      restorePointCollectionName,\n      vmRestorePointName,\n      options\n    );\n    yield result.value || [];\n    let continuationToken = result.nextLink;\n    while (continuationToken) {\n      result = await this._listByRestorePointNext(\n        resourceGroupName,\n        restorePointCollectionName,\n        vmRestorePointName,\n        continuationToken,\n        options\n      );\n      continuationToken = result.nextLink;\n      yield result.value || [];\n    }\n  }\n\n  private async *listByRestorePointPagingAll(\n    resourceGroupName: string,\n    restorePointCollectionName: string,\n    vmRestorePointName: string,\n    options?: DiskRestorePointListByRestorePointOptionalParams\n  ): AsyncIterableIterator<DiskRestorePoint> {\n    for await (const page of this.listByRestorePointPagingPage(\n      resourceGroupName,\n      restorePointCollectionName,\n      vmRestorePointName,\n      options\n    )) {\n      yield* page;\n    }\n  }\n\n  /**\n   * Get disk restorePoint resource\n   * @param resourceGroupName The name of the resource group.\n   * @param restorePointCollectionName The name of the restore point collection that the disk restore\n   *                                   point belongs.\n   * @param vmRestorePointName The name of the vm restore point that the disk disk restore point belongs.\n   * @param diskRestorePointName The name of the disk restore point created.\n   * @param options The options parameters.\n   */\n  get(\n    resourceGroupName: string,\n    restorePointCollectionName: string,\n    vmRestorePointName: string,\n    diskRestorePointName: string,\n    options?: DiskRestorePointGetOptionalParams\n  ): Promise<DiskRestorePointGetResponse> {\n    return this.client.sendOperationRequest(\n      {\n        resourceGroupName,\n        restorePointCollectionName,\n        vmRestorePointName,\n        diskRestorePointName,\n        options\n      },\n      getOperationSpec\n    );\n  }\n\n  /**\n   * Lists diskRestorePoints under a vmRestorePoint.\n   * @param resourceGroupName The name of the resource group.\n   * @param restorePointCollectionName The name of the restore point collection that the disk restore\n   *                                   point belongs.\n   * @param vmRestorePointName The name of the vm restore point that the disk disk restore point belongs.\n   * @param options The options parameters.\n   */\n  private _listByRestorePoint(\n    resourceGroupName: string,\n    restorePointCollectionName: string,\n    vmRestorePointName: string,\n    options?: DiskRestorePointListByRestorePointOptionalParams\n  ): Promise<DiskRestorePointListByRestorePointResponse> {\n    return this.client.sendOperationRequest(\n      {\n        resourceGroupName,\n        restorePointCollectionName,\n        vmRestorePointName,\n        options\n      },\n      listByRestorePointOperationSpec\n    );\n  }\n\n  /**\n   * Grants access to a diskRestorePoint.\n   * @param resourceGroupName The name of the resource group.\n   * @param restorePointCollectionName The name of the restore point collection that the disk restore\n   *                                   point belongs.\n   * @param vmRestorePointName The name of the vm restore point that the disk disk restore point belongs.\n   * @param diskRestorePointName The name of the disk restore point created.\n   * @param grantAccessData Access data object supplied in the body of the get disk access operation.\n   * @param options The options parameters.\n   */\n  async beginGrantAccess(\n    resourceGroupName: string,\n    restorePointCollectionName: string,\n    vmRestorePointName: string,\n    diskRestorePointName: string,\n    grantAccessData: GrantAccessData,\n    options?: DiskRestorePointGrantAccessOptionalParams\n  ): Promise<\n    PollerLike<\n      PollOperationState<DiskRestorePointGrantAccessResponse>,\n      DiskRestorePointGrantAccessResponse\n    >\n  > {\n    const directSendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ): Promise<DiskRestorePointGrantAccessResponse> => {\n      return this.client.sendOperationRequest(args, spec);\n    };\n    const sendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ) => {\n      let currentRawResponse:\n        | coreClient.FullOperationResponse\n        | undefined = undefined;\n      const providedCallback = args.options?.onResponse;\n      const callback: coreClient.RawResponseCallback = (\n        rawResponse: coreClient.FullOperationResponse,\n        flatResponse: unknown\n      ) => {\n        currentRawResponse = rawResponse;\n        providedCallback?.(rawResponse, flatResponse);\n      };\n      const updatedArgs = {\n        ...args,\n        options: {\n          ...args.options,\n          onResponse: callback\n        }\n      };\n      const flatResponse = await directSendOperation(updatedArgs, spec);\n      return {\n        flatResponse,\n        rawResponse: {\n          statusCode: currentRawResponse!.status,\n          body: currentRawResponse!.parsedBody,\n          headers: currentRawResponse!.headers.toJSON()\n        }\n      };\n    };\n\n    const lro = new LroImpl(\n      sendOperation,\n      {\n        resourceGroupName,\n        restorePointCollectionName,\n        vmRestorePointName,\n        diskRestorePointName,\n        grantAccessData,\n        options\n      },\n      grantAccessOperationSpec\n    );\n    return new LroEngine(lro, {\n      resumeFrom: options?.resumeFrom,\n      intervalInMs: options?.updateIntervalInMs,\n      lroResourceLocationConfig: \"location\"\n    });\n  }\n\n  /**\n   * Grants access to a diskRestorePoint.\n   * @param resourceGroupName The name of the resource group.\n   * @param restorePointCollectionName The name of the restore point collection that the disk restore\n   *                                   point belongs.\n   * @param vmRestorePointName The name of the vm restore point that the disk disk restore point belongs.\n   * @param diskRestorePointName The name of the disk restore point created.\n   * @param grantAccessData Access data object supplied in the body of the get disk access operation.\n   * @param options The options parameters.\n   */\n  async beginGrantAccessAndWait(\n    resourceGroupName: string,\n    restorePointCollectionName: string,\n    vmRestorePointName: string,\n    diskRestorePointName: string,\n    grantAccessData: GrantAccessData,\n    options?: DiskRestorePointGrantAccessOptionalParams\n  ): Promise<DiskRestorePointGrantAccessResponse> {\n    const poller = await this.beginGrantAccess(\n      resourceGroupName,\n      restorePointCollectionName,\n      vmRestorePointName,\n      diskRestorePointName,\n      grantAccessData,\n      options\n    );\n    return poller.pollUntilDone();\n  }\n\n  /**\n   * Revokes access to a diskRestorePoint.\n   * @param resourceGroupName The name of the resource group.\n   * @param restorePointCollectionName The name of the restore point collection that the disk restore\n   *                                   point belongs.\n   * @param vmRestorePointName The name of the vm restore point that the disk disk restore point belongs.\n   * @param diskRestorePointName The name of the disk restore point created.\n   * @param options The options parameters.\n   */\n  async beginRevokeAccess(\n    resourceGroupName: string,\n    restorePointCollectionName: string,\n    vmRestorePointName: string,\n    diskRestorePointName: string,\n    options?: DiskRestorePointRevokeAccessOptionalParams\n  ): Promise<PollerLike<PollOperationState<void>, void>> {\n    const directSendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ): Promise<void> => {\n      return this.client.sendOperationRequest(args, spec);\n    };\n    const sendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ) => {\n      let currentRawResponse:\n        | coreClient.FullOperationResponse\n        | undefined = undefined;\n      const providedCallback = args.options?.onResponse;\n      const callback: coreClient.RawResponseCallback = (\n        rawResponse: coreClient.FullOperationResponse,\n        flatResponse: unknown\n      ) => {\n        currentRawResponse = rawResponse;\n        providedCallback?.(rawResponse, flatResponse);\n      };\n      const updatedArgs = {\n        ...args,\n        options: {\n          ...args.options,\n          onResponse: callback\n        }\n      };\n      const flatResponse = await directSendOperation(updatedArgs, spec);\n      return {\n        flatResponse,\n        rawResponse: {\n          statusCode: currentRawResponse!.status,\n          body: currentRawResponse!.parsedBody,\n          headers: currentRawResponse!.headers.toJSON()\n        }\n      };\n    };\n\n    const lro = new LroImpl(\n      sendOperation,\n      {\n        resourceGroupName,\n        restorePointCollectionName,\n        vmRestorePointName,\n        diskRestorePointName,\n        options\n      },\n      revokeAccessOperationSpec\n    );\n    return new LroEngine(lro, {\n      resumeFrom: options?.resumeFrom,\n      intervalInMs: options?.updateIntervalInMs,\n      lroResourceLocationConfig: \"location\"\n    });\n  }\n\n  /**\n   * Revokes access to a diskRestorePoint.\n   * @param resourceGroupName The name of the resource group.\n   * @param restorePointCollectionName The name of the restore point collection that the disk restore\n   *                                   point belongs.\n   * @param vmRestorePointName The name of the vm restore point that the disk disk restore point belongs.\n   * @param diskRestorePointName The name of the disk restore point created.\n   * @param options The options parameters.\n   */\n  async beginRevokeAccessAndWait(\n    resourceGroupName: string,\n    restorePointCollectionName: string,\n    vmRestorePointName: string,\n    diskRestorePointName: string,\n    options?: DiskRestorePointRevokeAccessOptionalParams\n  ): Promise<void> {\n    const poller = await this.beginRevokeAccess(\n      resourceGroupName,\n      restorePointCollectionName,\n      vmRestorePointName,\n      diskRestorePointName,\n      options\n    );\n    return poller.pollUntilDone();\n  }\n\n  /**\n   * ListByRestorePointNext\n   * @param resourceGroupName The name of the resource group.\n   * @param restorePointCollectionName The name of the restore point collection that the disk restore\n   *                                   point belongs.\n   * @param vmRestorePointName The name of the vm restore point that the disk disk restore point belongs.\n   * @param nextLink The nextLink from the previous successful call to the ListByRestorePoint method.\n   * @param options The options parameters.\n   */\n  private _listByRestorePointNext(\n    resourceGroupName: string,\n    restorePointCollectionName: string,\n    vmRestorePointName: string,\n    nextLink: string,\n    options?: DiskRestorePointListByRestorePointNextOptionalParams\n  ): Promise<DiskRestorePointListByRestorePointNextResponse> {\n    return this.client.sendOperationRequest(\n      {\n        resourceGroupName,\n        restorePointCollectionName,\n        vmRestorePointName,\n        nextLink,\n        options\n      },\n      listByRestorePointNextOperationSpec\n    );\n  }\n}\n// Operation Specifications\nconst serializer = coreClient.createSerializer(Mappers, /* isXml */ false);\n\nconst getOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/restorePointCollections/{restorePointCollectionName}/restorePoints/{vmRestorePointName}/diskRestorePoints/{diskRestorePointName}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.DiskRestorePoint\n    },\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  queryParameters: [Parameters.apiVersion2],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.resourceGroupName,\n    Parameters.subscriptionId,\n    Parameters.restorePointCollectionName,\n    Parameters.vmRestorePointName,\n    Parameters.diskRestorePointName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst listByRestorePointOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/restorePointCollections/{restorePointCollectionName}/restorePoints/{vmRestorePointName}/diskRestorePoints\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.DiskRestorePointList\n    },\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  queryParameters: [Parameters.apiVersion2],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.resourceGroupName,\n    Parameters.subscriptionId,\n    Parameters.restorePointCollectionName,\n    Parameters.vmRestorePointName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst grantAccessOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/restorePointCollections/{restorePointCollectionName}/restorePoints/{vmRestorePointName}/diskRestorePoints/{diskRestorePointName}/beginGetAccess\",\n  httpMethod: \"POST\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.AccessUri\n    },\n    201: {\n      bodyMapper: Mappers.AccessUri\n    },\n    202: {\n      bodyMapper: Mappers.AccessUri\n    },\n    204: {\n      bodyMapper: Mappers.AccessUri\n    },\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  requestBody: Parameters.grantAccessData,\n  queryParameters: [Parameters.apiVersion2],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.resourceGroupName,\n    Parameters.subscriptionId,\n    Parameters.restorePointCollectionName,\n    Parameters.vmRestorePointName,\n    Parameters.diskRestorePointName\n  ],\n  headerParameters: [Parameters.accept, Parameters.contentType],\n  mediaType: \"json\",\n  serializer\n};\nconst revokeAccessOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/restorePointCollections/{restorePointCollectionName}/restorePoints/{vmRestorePointName}/diskRestorePoints/{diskRestorePointName}/endGetAccess\",\n  httpMethod: \"POST\",\n  responses: {\n    200: {},\n    201: {},\n    202: {},\n    204: {},\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  queryParameters: [Parameters.apiVersion2],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.resourceGroupName,\n    Parameters.subscriptionId,\n    Parameters.restorePointCollectionName,\n    Parameters.vmRestorePointName,\n    Parameters.diskRestorePointName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst listByRestorePointNextOperationSpec: coreClient.OperationSpec = {\n  path: \"{nextLink}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.DiskRestorePointList\n    },\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  queryParameters: [Parameters.apiVersion2],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.resourceGroupName,\n    Parameters.subscriptionId,\n    Parameters.nextLink,\n    Parameters.restorePointCollectionName,\n    Parameters.vmRestorePointName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport { PagedAsyncIterableIterator } from \"@azure/core-paging\";\nimport { Galleries } from \"../operationsInterfaces\";\nimport * as coreClient from \"@azure/core-client\";\nimport * as Mappers from \"../models/mappers\";\nimport * as Parameters from \"../models/parameters\";\nimport { ComputeManagementClient } from \"../computeManagementClient\";\nimport { PollerLike, PollOperationState, LroEngine } from \"@azure/core-lro\";\nimport { LroImpl } from \"../lroImpl\";\nimport {\n  Gallery,\n  GalleriesListByResourceGroupNextOptionalParams,\n  GalleriesListByResourceGroupOptionalParams,\n  GalleriesListNextOptionalParams,\n  GalleriesListOptionalParams,\n  GalleriesCreateOrUpdateOptionalParams,\n  GalleriesCreateOrUpdateResponse,\n  GalleryUpdate,\n  GalleriesUpdateOptionalParams,\n  GalleriesUpdateResponse,\n  GalleriesGetOptionalParams,\n  GalleriesGetResponse,\n  GalleriesDeleteOptionalParams,\n  GalleriesListByResourceGroupResponse,\n  GalleriesListResponse,\n  GalleriesListByResourceGroupNextResponse,\n  GalleriesListNextResponse\n} from \"../models\";\n\n/// <reference lib=\"esnext.asynciterable\" />\n/** Class containing Galleries operations. */\nexport class GalleriesImpl implements Galleries {\n  private readonly client: ComputeManagementClient;\n\n  /**\n   * Initialize a new instance of the class Galleries class.\n   * @param client Reference to the service client\n   */\n  constructor(client: ComputeManagementClient) {\n    this.client = client;\n  }\n\n  /**\n   * List galleries under a resource group.\n   * @param resourceGroupName The name of the resource group.\n   * @param options The options parameters.\n   */\n  public listByResourceGroup(\n    resourceGroupName: string,\n    options?: GalleriesListByResourceGroupOptionalParams\n  ): PagedAsyncIterableIterator<Gallery> {\n    const iter = this.listByResourceGroupPagingAll(resourceGroupName, options);\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: () => {\n        return this.listByResourceGroupPagingPage(resourceGroupName, options);\n      }\n    };\n  }\n\n  private async *listByResourceGroupPagingPage(\n    resourceGroupName: string,\n    options?: GalleriesListByResourceGroupOptionalParams\n  ): AsyncIterableIterator<Gallery[]> {\n    let result = await this._listByResourceGroup(resourceGroupName, options);\n    yield result.value || [];\n    let continuationToken = result.nextLink;\n    while (continuationToken) {\n      result = await this._listByResourceGroupNext(\n        resourceGroupName,\n        continuationToken,\n        options\n      );\n      continuationToken = result.nextLink;\n      yield result.value || [];\n    }\n  }\n\n  private async *listByResourceGroupPagingAll(\n    resourceGroupName: string,\n    options?: GalleriesListByResourceGroupOptionalParams\n  ): AsyncIterableIterator<Gallery> {\n    for await (const page of this.listByResourceGroupPagingPage(\n      resourceGroupName,\n      options\n    )) {\n      yield* page;\n    }\n  }\n\n  /**\n   * List galleries under a subscription.\n   * @param options The options parameters.\n   */\n  public list(\n    options?: GalleriesListOptionalParams\n  ): PagedAsyncIterableIterator<Gallery> {\n    const iter = this.listPagingAll(options);\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: () => {\n        return this.listPagingPage(options);\n      }\n    };\n  }\n\n  private async *listPagingPage(\n    options?: GalleriesListOptionalParams\n  ): AsyncIterableIterator<Gallery[]> {\n    let result = await this._list(options);\n    yield result.value || [];\n    let continuationToken = result.nextLink;\n    while (continuationToken) {\n      result = await this._listNext(continuationToken, options);\n      continuationToken = result.nextLink;\n      yield result.value || [];\n    }\n  }\n\n  private async *listPagingAll(\n    options?: GalleriesListOptionalParams\n  ): AsyncIterableIterator<Gallery> {\n    for await (const page of this.listPagingPage(options)) {\n      yield* page;\n    }\n  }\n\n  /**\n   * Create or update a Shared Image Gallery.\n   * @param resourceGroupName The name of the resource group.\n   * @param galleryName The name of the Shared Image Gallery. The allowed characters are alphabets and\n   *                    numbers with dots and periods allowed in the middle. The maximum length is 80 characters.\n   * @param gallery Parameters supplied to the create or update Shared Image Gallery operation.\n   * @param options The options parameters.\n   */\n  async beginCreateOrUpdate(\n    resourceGroupName: string,\n    galleryName: string,\n    gallery: Gallery,\n    options?: GalleriesCreateOrUpdateOptionalParams\n  ): Promise<\n    PollerLike<\n      PollOperationState<GalleriesCreateOrUpdateResponse>,\n      GalleriesCreateOrUpdateResponse\n    >\n  > {\n    const directSendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ): Promise<GalleriesCreateOrUpdateResponse> => {\n      return this.client.sendOperationRequest(args, spec);\n    };\n    const sendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ) => {\n      let currentRawResponse:\n        | coreClient.FullOperationResponse\n        | undefined = undefined;\n      const providedCallback = args.options?.onResponse;\n      const callback: coreClient.RawResponseCallback = (\n        rawResponse: coreClient.FullOperationResponse,\n        flatResponse: unknown\n      ) => {\n        currentRawResponse = rawResponse;\n        providedCallback?.(rawResponse, flatResponse);\n      };\n      const updatedArgs = {\n        ...args,\n        options: {\n          ...args.options,\n          onResponse: callback\n        }\n      };\n      const flatResponse = await directSendOperation(updatedArgs, spec);\n      return {\n        flatResponse,\n        rawResponse: {\n          statusCode: currentRawResponse!.status,\n          body: currentRawResponse!.parsedBody,\n          headers: currentRawResponse!.headers.toJSON()\n        }\n      };\n    };\n\n    const lro = new LroImpl(\n      sendOperation,\n      { resourceGroupName, galleryName, gallery, options },\n      createOrUpdateOperationSpec\n    );\n    return new LroEngine(lro, {\n      resumeFrom: options?.resumeFrom,\n      intervalInMs: options?.updateIntervalInMs\n    });\n  }\n\n  /**\n   * Create or update a Shared Image Gallery.\n   * @param resourceGroupName The name of the resource group.\n   * @param galleryName The name of the Shared Image Gallery. The allowed characters are alphabets and\n   *                    numbers with dots and periods allowed in the middle. The maximum length is 80 characters.\n   * @param gallery Parameters supplied to the create or update Shared Image Gallery operation.\n   * @param options The options parameters.\n   */\n  async beginCreateOrUpdateAndWait(\n    resourceGroupName: string,\n    galleryName: string,\n    gallery: Gallery,\n    options?: GalleriesCreateOrUpdateOptionalParams\n  ): Promise<GalleriesCreateOrUpdateResponse> {\n    const poller = await this.beginCreateOrUpdate(\n      resourceGroupName,\n      galleryName,\n      gallery,\n      options\n    );\n    return poller.pollUntilDone();\n  }\n\n  /**\n   * Update a Shared Image Gallery.\n   * @param resourceGroupName The name of the resource group.\n   * @param galleryName The name of the Shared Image Gallery. The allowed characters are alphabets and\n   *                    numbers with dots and periods allowed in the middle. The maximum length is 80 characters.\n   * @param gallery Parameters supplied to the update Shared Image Gallery operation.\n   * @param options The options parameters.\n   */\n  async beginUpdate(\n    resourceGroupName: string,\n    galleryName: string,\n    gallery: GalleryUpdate,\n    options?: GalleriesUpdateOptionalParams\n  ): Promise<\n    PollerLike<\n      PollOperationState<GalleriesUpdateResponse>,\n      GalleriesUpdateResponse\n    >\n  > {\n    const directSendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ): Promise<GalleriesUpdateResponse> => {\n      return this.client.sendOperationRequest(args, spec);\n    };\n    const sendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ) => {\n      let currentRawResponse:\n        | coreClient.FullOperationResponse\n        | undefined = undefined;\n      const providedCallback = args.options?.onResponse;\n      const callback: coreClient.RawResponseCallback = (\n        rawResponse: coreClient.FullOperationResponse,\n        flatResponse: unknown\n      ) => {\n        currentRawResponse = rawResponse;\n        providedCallback?.(rawResponse, flatResponse);\n      };\n      const updatedArgs = {\n        ...args,\n        options: {\n          ...args.options,\n          onResponse: callback\n        }\n      };\n      const flatResponse = await directSendOperation(updatedArgs, spec);\n      return {\n        flatResponse,\n        rawResponse: {\n          statusCode: currentRawResponse!.status,\n          body: currentRawResponse!.parsedBody,\n          headers: currentRawResponse!.headers.toJSON()\n        }\n      };\n    };\n\n    const lro = new LroImpl(\n      sendOperation,\n      { resourceGroupName, galleryName, gallery, options },\n      updateOperationSpec\n    );\n    return new LroEngine(lro, {\n      resumeFrom: options?.resumeFrom,\n      intervalInMs: options?.updateIntervalInMs\n    });\n  }\n\n  /**\n   * Update a Shared Image Gallery.\n   * @param resourceGroupName The name of the resource group.\n   * @param galleryName The name of the Shared Image Gallery. The allowed characters are alphabets and\n   *                    numbers with dots and periods allowed in the middle. The maximum length is 80 characters.\n   * @param gallery Parameters supplied to the update Shared Image Gallery operation.\n   * @param options The options parameters.\n   */\n  async beginUpdateAndWait(\n    resourceGroupName: string,\n    galleryName: string,\n    gallery: GalleryUpdate,\n    options?: GalleriesUpdateOptionalParams\n  ): Promise<GalleriesUpdateResponse> {\n    const poller = await this.beginUpdate(\n      resourceGroupName,\n      galleryName,\n      gallery,\n      options\n    );\n    return poller.pollUntilDone();\n  }\n\n  /**\n   * Retrieves information about a Shared Image Gallery.\n   * @param resourceGroupName The name of the resource group.\n   * @param galleryName The name of the Shared Image Gallery.\n   * @param options The options parameters.\n   */\n  get(\n    resourceGroupName: string,\n    galleryName: string,\n    options?: GalleriesGetOptionalParams\n  ): Promise<GalleriesGetResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, galleryName, options },\n      getOperationSpec\n    );\n  }\n\n  /**\n   * Delete a Shared Image Gallery.\n   * @param resourceGroupName The name of the resource group.\n   * @param galleryName The name of the Shared Image Gallery to be deleted.\n   * @param options The options parameters.\n   */\n  async beginDelete(\n    resourceGroupName: string,\n    galleryName: string,\n    options?: GalleriesDeleteOptionalParams\n  ): Promise<PollerLike<PollOperationState<void>, void>> {\n    const directSendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ): Promise<void> => {\n      return this.client.sendOperationRequest(args, spec);\n    };\n    const sendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ) => {\n      let currentRawResponse:\n        | coreClient.FullOperationResponse\n        | undefined = undefined;\n      const providedCallback = args.options?.onResponse;\n      const callback: coreClient.RawResponseCallback = (\n        rawResponse: coreClient.FullOperationResponse,\n        flatResponse: unknown\n      ) => {\n        currentRawResponse = rawResponse;\n        providedCallback?.(rawResponse, flatResponse);\n      };\n      const updatedArgs = {\n        ...args,\n        options: {\n          ...args.options,\n          onResponse: callback\n        }\n      };\n      const flatResponse = await directSendOperation(updatedArgs, spec);\n      return {\n        flatResponse,\n        rawResponse: {\n          statusCode: currentRawResponse!.status,\n          body: currentRawResponse!.parsedBody,\n          headers: currentRawResponse!.headers.toJSON()\n        }\n      };\n    };\n\n    const lro = new LroImpl(\n      sendOperation,\n      { resourceGroupName, galleryName, options },\n      deleteOperationSpec\n    );\n    return new LroEngine(lro, {\n      resumeFrom: options?.resumeFrom,\n      intervalInMs: options?.updateIntervalInMs\n    });\n  }\n\n  /**\n   * Delete a Shared Image Gallery.\n   * @param resourceGroupName The name of the resource group.\n   * @param galleryName The name of the Shared Image Gallery to be deleted.\n   * @param options The options parameters.\n   */\n  async beginDeleteAndWait(\n    resourceGroupName: string,\n    galleryName: string,\n    options?: GalleriesDeleteOptionalParams\n  ): Promise<void> {\n    const poller = await this.beginDelete(\n      resourceGroupName,\n      galleryName,\n      options\n    );\n    return poller.pollUntilDone();\n  }\n\n  /**\n   * List galleries under a resource group.\n   * @param resourceGroupName The name of the resource group.\n   * @param options The options parameters.\n   */\n  private _listByResourceGroup(\n    resourceGroupName: string,\n    options?: GalleriesListByResourceGroupOptionalParams\n  ): Promise<GalleriesListByResourceGroupResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, options },\n      listByResourceGroupOperationSpec\n    );\n  }\n\n  /**\n   * List galleries under a subscription.\n   * @param options The options parameters.\n   */\n  private _list(\n    options?: GalleriesListOptionalParams\n  ): Promise<GalleriesListResponse> {\n    return this.client.sendOperationRequest({ options }, listOperationSpec);\n  }\n\n  /**\n   * ListByResourceGroupNext\n   * @param resourceGroupName The name of the resource group.\n   * @param nextLink The nextLink from the previous successful call to the ListByResourceGroup method.\n   * @param options The options parameters.\n   */\n  private _listByResourceGroupNext(\n    resourceGroupName: string,\n    nextLink: string,\n    options?: GalleriesListByResourceGroupNextOptionalParams\n  ): Promise<GalleriesListByResourceGroupNextResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, nextLink, options },\n      listByResourceGroupNextOperationSpec\n    );\n  }\n\n  /**\n   * ListNext\n   * @param nextLink The nextLink from the previous successful call to the List method.\n   * @param options The options parameters.\n   */\n  private _listNext(\n    nextLink: string,\n    options?: GalleriesListNextOptionalParams\n  ): Promise<GalleriesListNextResponse> {\n    return this.client.sendOperationRequest(\n      { nextLink, options },\n      listNextOperationSpec\n    );\n  }\n}\n// Operation Specifications\nconst serializer = coreClient.createSerializer(Mappers, /* isXml */ false);\n\nconst createOrUpdateOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/galleries/{galleryName}\",\n  httpMethod: \"PUT\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.Gallery\n    },\n    201: {\n      bodyMapper: Mappers.Gallery\n    },\n    202: {\n      bodyMapper: Mappers.Gallery\n    },\n    204: {\n      bodyMapper: Mappers.Gallery\n    },\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  requestBody: Parameters.gallery,\n  queryParameters: [Parameters.apiVersion3],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.resourceGroupName,\n    Parameters.subscriptionId,\n    Parameters.galleryName\n  ],\n  headerParameters: [Parameters.accept, Parameters.contentType],\n  mediaType: \"json\",\n  serializer\n};\nconst updateOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/galleries/{galleryName}\",\n  httpMethod: \"PATCH\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.Gallery\n    },\n    201: {\n      bodyMapper: Mappers.Gallery\n    },\n    202: {\n      bodyMapper: Mappers.Gallery\n    },\n    204: {\n      bodyMapper: Mappers.Gallery\n    },\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  requestBody: Parameters.gallery1,\n  queryParameters: [Parameters.apiVersion3],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.resourceGroupName,\n    Parameters.subscriptionId,\n    Parameters.galleryName\n  ],\n  headerParameters: [Parameters.accept, Parameters.contentType],\n  mediaType: \"json\",\n  serializer\n};\nconst getOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/galleries/{galleryName}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.Gallery\n    },\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  queryParameters: [\n    Parameters.apiVersion3,\n    Parameters.select1,\n    Parameters.expand8\n  ],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.resourceGroupName,\n    Parameters.subscriptionId,\n    Parameters.galleryName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst deleteOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/galleries/{galleryName}\",\n  httpMethod: \"DELETE\",\n  responses: {\n    200: {},\n    201: {},\n    202: {},\n    204: {},\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  queryParameters: [Parameters.apiVersion3],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.resourceGroupName,\n    Parameters.subscriptionId,\n    Parameters.galleryName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst listByResourceGroupOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/galleries\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.GalleryList\n    },\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  queryParameters: [Parameters.apiVersion3],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.resourceGroupName,\n    Parameters.subscriptionId\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst listOperationSpec: coreClient.OperationSpec = {\n  path: \"/subscriptions/{subscriptionId}/providers/Microsoft.Compute/galleries\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.GalleryList\n    },\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  queryParameters: [Parameters.apiVersion3],\n  urlParameters: [Parameters.$host, Parameters.subscriptionId],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst listByResourceGroupNextOperationSpec: coreClient.OperationSpec = {\n  path: \"{nextLink}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.GalleryList\n    },\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  queryParameters: [Parameters.apiVersion3],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.resourceGroupName,\n    Parameters.subscriptionId,\n    Parameters.nextLink\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst listNextOperationSpec: coreClient.OperationSpec = {\n  path: \"{nextLink}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.GalleryList\n    },\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  queryParameters: [Parameters.apiVersion3],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.nextLink\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport { PagedAsyncIterableIterator } from \"@azure/core-paging\";\nimport { GalleryImages } from \"../operationsInterfaces\";\nimport * as coreClient from \"@azure/core-client\";\nimport * as Mappers from \"../models/mappers\";\nimport * as Parameters from \"../models/parameters\";\nimport { ComputeManagementClient } from \"../computeManagementClient\";\nimport { PollerLike, PollOperationState, LroEngine } from \"@azure/core-lro\";\nimport { LroImpl } from \"../lroImpl\";\nimport {\n  GalleryImage,\n  GalleryImagesListByGalleryNextOptionalParams,\n  GalleryImagesListByGalleryOptionalParams,\n  GalleryImagesCreateOrUpdateOptionalParams,\n  GalleryImagesCreateOrUpdateResponse,\n  GalleryImageUpdate,\n  GalleryImagesUpdateOptionalParams,\n  GalleryImagesUpdateResponse,\n  GalleryImagesGetOptionalParams,\n  GalleryImagesGetResponse,\n  GalleryImagesDeleteOptionalParams,\n  GalleryImagesListByGalleryResponse,\n  GalleryImagesListByGalleryNextResponse\n} from \"../models\";\n\n/// <reference lib=\"esnext.asynciterable\" />\n/** Class containing GalleryImages operations. */\nexport class GalleryImagesImpl implements GalleryImages {\n  private readonly client: ComputeManagementClient;\n\n  /**\n   * Initialize a new instance of the class GalleryImages class.\n   * @param client Reference to the service client\n   */\n  constructor(client: ComputeManagementClient) {\n    this.client = client;\n  }\n\n  /**\n   * List gallery image definitions in a gallery.\n   * @param resourceGroupName The name of the resource group.\n   * @param galleryName The name of the Shared Image Gallery from which Image Definitions are to be\n   *                    listed.\n   * @param options The options parameters.\n   */\n  public listByGallery(\n    resourceGroupName: string,\n    galleryName: string,\n    options?: GalleryImagesListByGalleryOptionalParams\n  ): PagedAsyncIterableIterator<GalleryImage> {\n    const iter = this.listByGalleryPagingAll(\n      resourceGroupName,\n      galleryName,\n      options\n    );\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: () => {\n        return this.listByGalleryPagingPage(\n          resourceGroupName,\n          galleryName,\n          options\n        );\n      }\n    };\n  }\n\n  private async *listByGalleryPagingPage(\n    resourceGroupName: string,\n    galleryName: string,\n    options?: GalleryImagesListByGalleryOptionalParams\n  ): AsyncIterableIterator<GalleryImage[]> {\n    let result = await this._listByGallery(\n      resourceGroupName,\n      galleryName,\n      options\n    );\n    yield result.value || [];\n    let continuationToken = result.nextLink;\n    while (continuationToken) {\n      result = await this._listByGalleryNext(\n        resourceGroupName,\n        galleryName,\n        continuationToken,\n        options\n      );\n      continuationToken = result.nextLink;\n      yield result.value || [];\n    }\n  }\n\n  private async *listByGalleryPagingAll(\n    resourceGroupName: string,\n    galleryName: string,\n    options?: GalleryImagesListByGalleryOptionalParams\n  ): AsyncIterableIterator<GalleryImage> {\n    for await (const page of this.listByGalleryPagingPage(\n      resourceGroupName,\n      galleryName,\n      options\n    )) {\n      yield* page;\n    }\n  }\n\n  /**\n   * Create or update a gallery image definition.\n   * @param resourceGroupName The name of the resource group.\n   * @param galleryName The name of the Shared Image Gallery in which the Image Definition is to be\n   *                    created.\n   * @param galleryImageName The name of the gallery image definition to be created or updated. The\n   *                         allowed characters are alphabets and numbers with dots, dashes, and periods allowed in the middle.\n   *                         The maximum length is 80 characters.\n   * @param galleryImage Parameters supplied to the create or update gallery image operation.\n   * @param options The options parameters.\n   */\n  async beginCreateOrUpdate(\n    resourceGroupName: string,\n    galleryName: string,\n    galleryImageName: string,\n    galleryImage: GalleryImage,\n    options?: GalleryImagesCreateOrUpdateOptionalParams\n  ): Promise<\n    PollerLike<\n      PollOperationState<GalleryImagesCreateOrUpdateResponse>,\n      GalleryImagesCreateOrUpdateResponse\n    >\n  > {\n    const directSendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ): Promise<GalleryImagesCreateOrUpdateResponse> => {\n      return this.client.sendOperationRequest(args, spec);\n    };\n    const sendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ) => {\n      let currentRawResponse:\n        | coreClient.FullOperationResponse\n        | undefined = undefined;\n      const providedCallback = args.options?.onResponse;\n      const callback: coreClient.RawResponseCallback = (\n        rawResponse: coreClient.FullOperationResponse,\n        flatResponse: unknown\n      ) => {\n        currentRawResponse = rawResponse;\n        providedCallback?.(rawResponse, flatResponse);\n      };\n      const updatedArgs = {\n        ...args,\n        options: {\n          ...args.options,\n          onResponse: callback\n        }\n      };\n      const flatResponse = await directSendOperation(updatedArgs, spec);\n      return {\n        flatResponse,\n        rawResponse: {\n          statusCode: currentRawResponse!.status,\n          body: currentRawResponse!.parsedBody,\n          headers: currentRawResponse!.headers.toJSON()\n        }\n      };\n    };\n\n    const lro = new LroImpl(\n      sendOperation,\n      {\n        resourceGroupName,\n        galleryName,\n        galleryImageName,\n        galleryImage,\n        options\n      },\n      createOrUpdateOperationSpec\n    );\n    return new LroEngine(lro, {\n      resumeFrom: options?.resumeFrom,\n      intervalInMs: options?.updateIntervalInMs\n    });\n  }\n\n  /**\n   * Create or update a gallery image definition.\n   * @param resourceGroupName The name of the resource group.\n   * @param galleryName The name of the Shared Image Gallery in which the Image Definition is to be\n   *                    created.\n   * @param galleryImageName The name of the gallery image definition to be created or updated. The\n   *                         allowed characters are alphabets and numbers with dots, dashes, and periods allowed in the middle.\n   *                         The maximum length is 80 characters.\n   * @param galleryImage Parameters supplied to the create or update gallery image operation.\n   * @param options The options parameters.\n   */\n  async beginCreateOrUpdateAndWait(\n    resourceGroupName: string,\n    galleryName: string,\n    galleryImageName: string,\n    galleryImage: GalleryImage,\n    options?: GalleryImagesCreateOrUpdateOptionalParams\n  ): Promise<GalleryImagesCreateOrUpdateResponse> {\n    const poller = await this.beginCreateOrUpdate(\n      resourceGroupName,\n      galleryName,\n      galleryImageName,\n      galleryImage,\n      options\n    );\n    return poller.pollUntilDone();\n  }\n\n  /**\n   * Update a gallery image definition.\n   * @param resourceGroupName The name of the resource group.\n   * @param galleryName The name of the Shared Image Gallery in which the Image Definition is to be\n   *                    updated.\n   * @param galleryImageName The name of the gallery image definition to be updated. The allowed\n   *                         characters are alphabets and numbers with dots, dashes, and periods allowed in the middle. The\n   *                         maximum length is 80 characters.\n   * @param galleryImage Parameters supplied to the update gallery image operation.\n   * @param options The options parameters.\n   */\n  async beginUpdate(\n    resourceGroupName: string,\n    galleryName: string,\n    galleryImageName: string,\n    galleryImage: GalleryImageUpdate,\n    options?: GalleryImagesUpdateOptionalParams\n  ): Promise<\n    PollerLike<\n      PollOperationState<GalleryImagesUpdateResponse>,\n      GalleryImagesUpdateResponse\n    >\n  > {\n    const directSendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ): Promise<GalleryImagesUpdateResponse> => {\n      return this.client.sendOperationRequest(args, spec);\n    };\n    const sendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ) => {\n      let currentRawResponse:\n        | coreClient.FullOperationResponse\n        | undefined = undefined;\n      const providedCallback = args.options?.onResponse;\n      const callback: coreClient.RawResponseCallback = (\n        rawResponse: coreClient.FullOperationResponse,\n        flatResponse: unknown\n      ) => {\n        currentRawResponse = rawResponse;\n        providedCallback?.(rawResponse, flatResponse);\n      };\n      const updatedArgs = {\n        ...args,\n        options: {\n          ...args.options,\n          onResponse: callback\n        }\n      };\n      const flatResponse = await directSendOperation(updatedArgs, spec);\n      return {\n        flatResponse,\n        rawResponse: {\n          statusCode: currentRawResponse!.status,\n          body: currentRawResponse!.parsedBody,\n          headers: currentRawResponse!.headers.toJSON()\n        }\n      };\n    };\n\n    const lro = new LroImpl(\n      sendOperation,\n      {\n        resourceGroupName,\n        galleryName,\n        galleryImageName,\n        galleryImage,\n        options\n      },\n      updateOperationSpec\n    );\n    return new LroEngine(lro, {\n      resumeFrom: options?.resumeFrom,\n      intervalInMs: options?.updateIntervalInMs\n    });\n  }\n\n  /**\n   * Update a gallery image definition.\n   * @param resourceGroupName The name of the resource group.\n   * @param galleryName The name of the Shared Image Gallery in which the Image Definition is to be\n   *                    updated.\n   * @param galleryImageName The name of the gallery image definition to be updated. The allowed\n   *                         characters are alphabets and numbers with dots, dashes, and periods allowed in the middle. The\n   *                         maximum length is 80 characters.\n   * @param galleryImage Parameters supplied to the update gallery image operation.\n   * @param options The options parameters.\n   */\n  async beginUpdateAndWait(\n    resourceGroupName: string,\n    galleryName: string,\n    galleryImageName: string,\n    galleryImage: GalleryImageUpdate,\n    options?: GalleryImagesUpdateOptionalParams\n  ): Promise<GalleryImagesUpdateResponse> {\n    const poller = await this.beginUpdate(\n      resourceGroupName,\n      galleryName,\n      galleryImageName,\n      galleryImage,\n      options\n    );\n    return poller.pollUntilDone();\n  }\n\n  /**\n   * Retrieves information about a gallery image definition.\n   * @param resourceGroupName The name of the resource group.\n   * @param galleryName The name of the Shared Image Gallery from which the Image Definitions are to be\n   *                    retrieved.\n   * @param galleryImageName The name of the gallery image definition to be retrieved.\n   * @param options The options parameters.\n   */\n  get(\n    resourceGroupName: string,\n    galleryName: string,\n    galleryImageName: string,\n    options?: GalleryImagesGetOptionalParams\n  ): Promise<GalleryImagesGetResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, galleryName, galleryImageName, options },\n      getOperationSpec\n    );\n  }\n\n  /**\n   * Delete a gallery image.\n   * @param resourceGroupName The name of the resource group.\n   * @param galleryName The name of the Shared Image Gallery in which the Image Definition is to be\n   *                    deleted.\n   * @param galleryImageName The name of the gallery image definition to be deleted.\n   * @param options The options parameters.\n   */\n  async beginDelete(\n    resourceGroupName: string,\n    galleryName: string,\n    galleryImageName: string,\n    options?: GalleryImagesDeleteOptionalParams\n  ): Promise<PollerLike<PollOperationState<void>, void>> {\n    const directSendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ): Promise<void> => {\n      return this.client.sendOperationRequest(args, spec);\n    };\n    const sendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ) => {\n      let currentRawResponse:\n        | coreClient.FullOperationResponse\n        | undefined = undefined;\n      const providedCallback = args.options?.onResponse;\n      const callback: coreClient.RawResponseCallback = (\n        rawResponse: coreClient.FullOperationResponse,\n        flatResponse: unknown\n      ) => {\n        currentRawResponse = rawResponse;\n        providedCallback?.(rawResponse, flatResponse);\n      };\n      const updatedArgs = {\n        ...args,\n        options: {\n          ...args.options,\n          onResponse: callback\n        }\n      };\n      const flatResponse = await directSendOperation(updatedArgs, spec);\n      return {\n        flatResponse,\n        rawResponse: {\n          statusCode: currentRawResponse!.status,\n          body: currentRawResponse!.parsedBody,\n          headers: currentRawResponse!.headers.toJSON()\n        }\n      };\n    };\n\n    const lro = new LroImpl(\n      sendOperation,\n      { resourceGroupName, galleryName, galleryImageName, options },\n      deleteOperationSpec\n    );\n    return new LroEngine(lro, {\n      resumeFrom: options?.resumeFrom,\n      intervalInMs: options?.updateIntervalInMs\n    });\n  }\n\n  /**\n   * Delete a gallery image.\n   * @param resourceGroupName The name of the resource group.\n   * @param galleryName The name of the Shared Image Gallery in which the Image Definition is to be\n   *                    deleted.\n   * @param galleryImageName The name of the gallery image definition to be deleted.\n   * @param options The options parameters.\n   */\n  async beginDeleteAndWait(\n    resourceGroupName: string,\n    galleryName: string,\n    galleryImageName: string,\n    options?: GalleryImagesDeleteOptionalParams\n  ): Promise<void> {\n    const poller = await this.beginDelete(\n      resourceGroupName,\n      galleryName,\n      galleryImageName,\n      options\n    );\n    return poller.pollUntilDone();\n  }\n\n  /**\n   * List gallery image definitions in a gallery.\n   * @param resourceGroupName The name of the resource group.\n   * @param galleryName The name of the Shared Image Gallery from which Image Definitions are to be\n   *                    listed.\n   * @param options The options parameters.\n   */\n  private _listByGallery(\n    resourceGroupName: string,\n    galleryName: string,\n    options?: GalleryImagesListByGalleryOptionalParams\n  ): Promise<GalleryImagesListByGalleryResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, galleryName, options },\n      listByGalleryOperationSpec\n    );\n  }\n\n  /**\n   * ListByGalleryNext\n   * @param resourceGroupName The name of the resource group.\n   * @param galleryName The name of the Shared Image Gallery from which Image Definitions are to be\n   *                    listed.\n   * @param nextLink The nextLink from the previous successful call to the ListByGallery method.\n   * @param options The options parameters.\n   */\n  private _listByGalleryNext(\n    resourceGroupName: string,\n    galleryName: string,\n    nextLink: string,\n    options?: GalleryImagesListByGalleryNextOptionalParams\n  ): Promise<GalleryImagesListByGalleryNextResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, galleryName, nextLink, options },\n      listByGalleryNextOperationSpec\n    );\n  }\n}\n// Operation Specifications\nconst serializer = coreClient.createSerializer(Mappers, /* isXml */ false);\n\nconst createOrUpdateOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/galleries/{galleryName}/images/{galleryImageName}\",\n  httpMethod: \"PUT\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.GalleryImage\n    },\n    201: {\n      bodyMapper: Mappers.GalleryImage\n    },\n    202: {\n      bodyMapper: Mappers.GalleryImage\n    },\n    204: {\n      bodyMapper: Mappers.GalleryImage\n    },\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  requestBody: Parameters.galleryImage,\n  queryParameters: [Parameters.apiVersion3],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.resourceGroupName,\n    Parameters.subscriptionId,\n    Parameters.galleryName,\n    Parameters.galleryImageName\n  ],\n  headerParameters: [Parameters.accept, Parameters.contentType],\n  mediaType: \"json\",\n  serializer\n};\nconst updateOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/galleries/{galleryName}/images/{galleryImageName}\",\n  httpMethod: \"PATCH\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.GalleryImage\n    },\n    201: {\n      bodyMapper: Mappers.GalleryImage\n    },\n    202: {\n      bodyMapper: Mappers.GalleryImage\n    },\n    204: {\n      bodyMapper: Mappers.GalleryImage\n    },\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  requestBody: Parameters.galleryImage1,\n  queryParameters: [Parameters.apiVersion3],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.resourceGroupName,\n    Parameters.subscriptionId,\n    Parameters.galleryName,\n    Parameters.galleryImageName\n  ],\n  headerParameters: [Parameters.accept, Parameters.contentType],\n  mediaType: \"json\",\n  serializer\n};\nconst getOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/galleries/{galleryName}/images/{galleryImageName}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.GalleryImage\n    },\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  queryParameters: [Parameters.apiVersion3],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.resourceGroupName,\n    Parameters.subscriptionId,\n    Parameters.galleryName,\n    Parameters.galleryImageName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst deleteOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/galleries/{galleryName}/images/{galleryImageName}\",\n  httpMethod: \"DELETE\",\n  responses: {\n    200: {},\n    201: {},\n    202: {},\n    204: {},\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  queryParameters: [Parameters.apiVersion3],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.resourceGroupName,\n    Parameters.subscriptionId,\n    Parameters.galleryName,\n    Parameters.galleryImageName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst listByGalleryOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/galleries/{galleryName}/images\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.GalleryImageList\n    },\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  queryParameters: [Parameters.apiVersion3],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.resourceGroupName,\n    Parameters.subscriptionId,\n    Parameters.galleryName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst listByGalleryNextOperationSpec: coreClient.OperationSpec = {\n  path: \"{nextLink}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.GalleryImageList\n    },\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  queryParameters: [Parameters.apiVersion3],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.resourceGroupName,\n    Parameters.subscriptionId,\n    Parameters.nextLink,\n    Parameters.galleryName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport { PagedAsyncIterableIterator } from \"@azure/core-paging\";\nimport { GalleryImageVersions } from \"../operationsInterfaces\";\nimport * as coreClient from \"@azure/core-client\";\nimport * as Mappers from \"../models/mappers\";\nimport * as Parameters from \"../models/parameters\";\nimport { ComputeManagementClient } from \"../computeManagementClient\";\nimport { PollerLike, PollOperationState, LroEngine } from \"@azure/core-lro\";\nimport { LroImpl } from \"../lroImpl\";\nimport {\n  GalleryImageVersion,\n  GalleryImageVersionsListByGalleryImageNextOptionalParams,\n  GalleryImageVersionsListByGalleryImageOptionalParams,\n  GalleryImageVersionsCreateOrUpdateOptionalParams,\n  GalleryImageVersionsCreateOrUpdateResponse,\n  GalleryImageVersionUpdate,\n  GalleryImageVersionsUpdateOptionalParams,\n  GalleryImageVersionsUpdateResponse,\n  GalleryImageVersionsGetOptionalParams,\n  GalleryImageVersionsGetResponse,\n  GalleryImageVersionsDeleteOptionalParams,\n  GalleryImageVersionsListByGalleryImageResponse,\n  GalleryImageVersionsListByGalleryImageNextResponse\n} from \"../models\";\n\n/// <reference lib=\"esnext.asynciterable\" />\n/** Class containing GalleryImageVersions operations. */\nexport class GalleryImageVersionsImpl implements GalleryImageVersions {\n  private readonly client: ComputeManagementClient;\n\n  /**\n   * Initialize a new instance of the class GalleryImageVersions class.\n   * @param client Reference to the service client\n   */\n  constructor(client: ComputeManagementClient) {\n    this.client = client;\n  }\n\n  /**\n   * List gallery image versions in a gallery image definition.\n   * @param resourceGroupName The name of the resource group.\n   * @param galleryName The name of the Shared Image Gallery in which the Image Definition resides.\n   * @param galleryImageName The name of the Shared Image Gallery Image Definition from which the Image\n   *                         Versions are to be listed.\n   * @param options The options parameters.\n   */\n  public listByGalleryImage(\n    resourceGroupName: string,\n    galleryName: string,\n    galleryImageName: string,\n    options?: GalleryImageVersionsListByGalleryImageOptionalParams\n  ): PagedAsyncIterableIterator<GalleryImageVersion> {\n    const iter = this.listByGalleryImagePagingAll(\n      resourceGroupName,\n      galleryName,\n      galleryImageName,\n      options\n    );\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: () => {\n        return this.listByGalleryImagePagingPage(\n          resourceGroupName,\n          galleryName,\n          galleryImageName,\n          options\n        );\n      }\n    };\n  }\n\n  private async *listByGalleryImagePagingPage(\n    resourceGroupName: string,\n    galleryName: string,\n    galleryImageName: string,\n    options?: GalleryImageVersionsListByGalleryImageOptionalParams\n  ): AsyncIterableIterator<GalleryImageVersion[]> {\n    let result = await this._listByGalleryImage(\n      resourceGroupName,\n      galleryName,\n      galleryImageName,\n      options\n    );\n    yield result.value || [];\n    let continuationToken = result.nextLink;\n    while (continuationToken) {\n      result = await this._listByGalleryImageNext(\n        resourceGroupName,\n        galleryName,\n        galleryImageName,\n        continuationToken,\n        options\n      );\n      continuationToken = result.nextLink;\n      yield result.value || [];\n    }\n  }\n\n  private async *listByGalleryImagePagingAll(\n    resourceGroupName: string,\n    galleryName: string,\n    galleryImageName: string,\n    options?: GalleryImageVersionsListByGalleryImageOptionalParams\n  ): AsyncIterableIterator<GalleryImageVersion> {\n    for await (const page of this.listByGalleryImagePagingPage(\n      resourceGroupName,\n      galleryName,\n      galleryImageName,\n      options\n    )) {\n      yield* page;\n    }\n  }\n\n  /**\n   * Create or update a gallery image version.\n   * @param resourceGroupName The name of the resource group.\n   * @param galleryName The name of the Shared Image Gallery in which the Image Definition resides.\n   * @param galleryImageName The name of the gallery image definition in which the Image Version is to be\n   *                         created.\n   * @param galleryImageVersionName The name of the gallery image version to be created. Needs to follow\n   *                                semantic version name pattern: The allowed characters are digit and period. Digits must be within\n   *                                the range of a 32-bit integer. Format: <MajorVersion>.<MinorVersion>.<Patch>\n   * @param galleryImageVersion Parameters supplied to the create or update gallery image version\n   *                            operation.\n   * @param options The options parameters.\n   */\n  async beginCreateOrUpdate(\n    resourceGroupName: string,\n    galleryName: string,\n    galleryImageName: string,\n    galleryImageVersionName: string,\n    galleryImageVersion: GalleryImageVersion,\n    options?: GalleryImageVersionsCreateOrUpdateOptionalParams\n  ): Promise<\n    PollerLike<\n      PollOperationState<GalleryImageVersionsCreateOrUpdateResponse>,\n      GalleryImageVersionsCreateOrUpdateResponse\n    >\n  > {\n    const directSendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ): Promise<GalleryImageVersionsCreateOrUpdateResponse> => {\n      return this.client.sendOperationRequest(args, spec);\n    };\n    const sendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ) => {\n      let currentRawResponse:\n        | coreClient.FullOperationResponse\n        | undefined = undefined;\n      const providedCallback = args.options?.onResponse;\n      const callback: coreClient.RawResponseCallback = (\n        rawResponse: coreClient.FullOperationResponse,\n        flatResponse: unknown\n      ) => {\n        currentRawResponse = rawResponse;\n        providedCallback?.(rawResponse, flatResponse);\n      };\n      const updatedArgs = {\n        ...args,\n        options: {\n          ...args.options,\n          onResponse: callback\n        }\n      };\n      const flatResponse = await directSendOperation(updatedArgs, spec);\n      return {\n        flatResponse,\n        rawResponse: {\n          statusCode: currentRawResponse!.status,\n          body: currentRawResponse!.parsedBody,\n          headers: currentRawResponse!.headers.toJSON()\n        }\n      };\n    };\n\n    const lro = new LroImpl(\n      sendOperation,\n      {\n        resourceGroupName,\n        galleryName,\n        galleryImageName,\n        galleryImageVersionName,\n        galleryImageVersion,\n        options\n      },\n      createOrUpdateOperationSpec\n    );\n    return new LroEngine(lro, {\n      resumeFrom: options?.resumeFrom,\n      intervalInMs: options?.updateIntervalInMs\n    });\n  }\n\n  /**\n   * Create or update a gallery image version.\n   * @param resourceGroupName The name of the resource group.\n   * @param galleryName The name of the Shared Image Gallery in which the Image Definition resides.\n   * @param galleryImageName The name of the gallery image definition in which the Image Version is to be\n   *                         created.\n   * @param galleryImageVersionName The name of the gallery image version to be created. Needs to follow\n   *                                semantic version name pattern: The allowed characters are digit and period. Digits must be within\n   *                                the range of a 32-bit integer. Format: <MajorVersion>.<MinorVersion>.<Patch>\n   * @param galleryImageVersion Parameters supplied to the create or update gallery image version\n   *                            operation.\n   * @param options The options parameters.\n   */\n  async beginCreateOrUpdateAndWait(\n    resourceGroupName: string,\n    galleryName: string,\n    galleryImageName: string,\n    galleryImageVersionName: string,\n    galleryImageVersion: GalleryImageVersion,\n    options?: GalleryImageVersionsCreateOrUpdateOptionalParams\n  ): Promise<GalleryImageVersionsCreateOrUpdateResponse> {\n    const poller = await this.beginCreateOrUpdate(\n      resourceGroupName,\n      galleryName,\n      galleryImageName,\n      galleryImageVersionName,\n      galleryImageVersion,\n      options\n    );\n    return poller.pollUntilDone();\n  }\n\n  /**\n   * Update a gallery image version.\n   * @param resourceGroupName The name of the resource group.\n   * @param galleryName The name of the Shared Image Gallery in which the Image Definition resides.\n   * @param galleryImageName The name of the gallery image definition in which the Image Version is to be\n   *                         updated.\n   * @param galleryImageVersionName The name of the gallery image version to be updated. Needs to follow\n   *                                semantic version name pattern: The allowed characters are digit and period. Digits must be within\n   *                                the range of a 32-bit integer. Format: <MajorVersion>.<MinorVersion>.<Patch>\n   * @param galleryImageVersion Parameters supplied to the update gallery image version operation.\n   * @param options The options parameters.\n   */\n  async beginUpdate(\n    resourceGroupName: string,\n    galleryName: string,\n    galleryImageName: string,\n    galleryImageVersionName: string,\n    galleryImageVersion: GalleryImageVersionUpdate,\n    options?: GalleryImageVersionsUpdateOptionalParams\n  ): Promise<\n    PollerLike<\n      PollOperationState<GalleryImageVersionsUpdateResponse>,\n      GalleryImageVersionsUpdateResponse\n    >\n  > {\n    const directSendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ): Promise<GalleryImageVersionsUpdateResponse> => {\n      return this.client.sendOperationRequest(args, spec);\n    };\n    const sendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ) => {\n      let currentRawResponse:\n        | coreClient.FullOperationResponse\n        | undefined = undefined;\n      const providedCallback = args.options?.onResponse;\n      const callback: coreClient.RawResponseCallback = (\n        rawResponse: coreClient.FullOperationResponse,\n        flatResponse: unknown\n      ) => {\n        currentRawResponse = rawResponse;\n        providedCallback?.(rawResponse, flatResponse);\n      };\n      const updatedArgs = {\n        ...args,\n        options: {\n          ...args.options,\n          onResponse: callback\n        }\n      };\n      const flatResponse = await directSendOperation(updatedArgs, spec);\n      return {\n        flatResponse,\n        rawResponse: {\n          statusCode: currentRawResponse!.status,\n          body: currentRawResponse!.parsedBody,\n          headers: currentRawResponse!.headers.toJSON()\n        }\n      };\n    };\n\n    const lro = new LroImpl(\n      sendOperation,\n      {\n        resourceGroupName,\n        galleryName,\n        galleryImageName,\n        galleryImageVersionName,\n        galleryImageVersion,\n        options\n      },\n      updateOperationSpec\n    );\n    return new LroEngine(lro, {\n      resumeFrom: options?.resumeFrom,\n      intervalInMs: options?.updateIntervalInMs\n    });\n  }\n\n  /**\n   * Update a gallery image version.\n   * @param resourceGroupName The name of the resource group.\n   * @param galleryName The name of the Shared Image Gallery in which the Image Definition resides.\n   * @param galleryImageName The name of the gallery image definition in which the Image Version is to be\n   *                         updated.\n   * @param galleryImageVersionName The name of the gallery image version to be updated. Needs to follow\n   *                                semantic version name pattern: The allowed characters are digit and period. Digits must be within\n   *                                the range of a 32-bit integer. Format: <MajorVersion>.<MinorVersion>.<Patch>\n   * @param galleryImageVersion Parameters supplied to the update gallery image version operation.\n   * @param options The options parameters.\n   */\n  async beginUpdateAndWait(\n    resourceGroupName: string,\n    galleryName: string,\n    galleryImageName: string,\n    galleryImageVersionName: string,\n    galleryImageVersion: GalleryImageVersionUpdate,\n    options?: GalleryImageVersionsUpdateOptionalParams\n  ): Promise<GalleryImageVersionsUpdateResponse> {\n    const poller = await this.beginUpdate(\n      resourceGroupName,\n      galleryName,\n      galleryImageName,\n      galleryImageVersionName,\n      galleryImageVersion,\n      options\n    );\n    return poller.pollUntilDone();\n  }\n\n  /**\n   * Retrieves information about a gallery image version.\n   * @param resourceGroupName The name of the resource group.\n   * @param galleryName The name of the Shared Image Gallery in which the Image Definition resides.\n   * @param galleryImageName The name of the gallery image definition in which the Image Version resides.\n   * @param galleryImageVersionName The name of the gallery image version to be retrieved.\n   * @param options The options parameters.\n   */\n  get(\n    resourceGroupName: string,\n    galleryName: string,\n    galleryImageName: string,\n    galleryImageVersionName: string,\n    options?: GalleryImageVersionsGetOptionalParams\n  ): Promise<GalleryImageVersionsGetResponse> {\n    return this.client.sendOperationRequest(\n      {\n        resourceGroupName,\n        galleryName,\n        galleryImageName,\n        galleryImageVersionName,\n        options\n      },\n      getOperationSpec\n    );\n  }\n\n  /**\n   * Delete a gallery image version.\n   * @param resourceGroupName The name of the resource group.\n   * @param galleryName The name of the Shared Image Gallery in which the Image Definition resides.\n   * @param galleryImageName The name of the gallery image definition in which the Image Version resides.\n   * @param galleryImageVersionName The name of the gallery image version to be deleted.\n   * @param options The options parameters.\n   */\n  async beginDelete(\n    resourceGroupName: string,\n    galleryName: string,\n    galleryImageName: string,\n    galleryImageVersionName: string,\n    options?: GalleryImageVersionsDeleteOptionalParams\n  ): Promise<PollerLike<PollOperationState<void>, void>> {\n    const directSendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ): Promise<void> => {\n      return this.client.sendOperationRequest(args, spec);\n    };\n    const sendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ) => {\n      let currentRawResponse:\n        | coreClient.FullOperationResponse\n        | undefined = undefined;\n      const providedCallback = args.options?.onResponse;\n      const callback: coreClient.RawResponseCallback = (\n        rawResponse: coreClient.FullOperationResponse,\n        flatResponse: unknown\n      ) => {\n        currentRawResponse = rawResponse;\n        providedCallback?.(rawResponse, flatResponse);\n      };\n      const updatedArgs = {\n        ...args,\n        options: {\n          ...args.options,\n          onResponse: callback\n        }\n      };\n      const flatResponse = await directSendOperation(updatedArgs, spec);\n      return {\n        flatResponse,\n        rawResponse: {\n          statusCode: currentRawResponse!.status,\n          body: currentRawResponse!.parsedBody,\n          headers: currentRawResponse!.headers.toJSON()\n        }\n      };\n    };\n\n    const lro = new LroImpl(\n      sendOperation,\n      {\n        resourceGroupName,\n        galleryName,\n        galleryImageName,\n        galleryImageVersionName,\n        options\n      },\n      deleteOperationSpec\n    );\n    return new LroEngine(lro, {\n      resumeFrom: options?.resumeFrom,\n      intervalInMs: options?.updateIntervalInMs\n    });\n  }\n\n  /**\n   * Delete a gallery image version.\n   * @param resourceGroupName The name of the resource group.\n   * @param galleryName The name of the Shared Image Gallery in which the Image Definition resides.\n   * @param galleryImageName The name of the gallery image definition in which the Image Version resides.\n   * @param galleryImageVersionName The name of the gallery image version to be deleted.\n   * @param options The options parameters.\n   */\n  async beginDeleteAndWait(\n    resourceGroupName: string,\n    galleryName: string,\n    galleryImageName: string,\n    galleryImageVersionName: string,\n    options?: GalleryImageVersionsDeleteOptionalParams\n  ): Promise<void> {\n    const poller = await this.beginDelete(\n      resourceGroupName,\n      galleryName,\n      galleryImageName,\n      galleryImageVersionName,\n      options\n    );\n    return poller.pollUntilDone();\n  }\n\n  /**\n   * List gallery image versions in a gallery image definition.\n   * @param resourceGroupName The name of the resource group.\n   * @param galleryName The name of the Shared Image Gallery in which the Image Definition resides.\n   * @param galleryImageName The name of the Shared Image Gallery Image Definition from which the Image\n   *                         Versions are to be listed.\n   * @param options The options parameters.\n   */\n  private _listByGalleryImage(\n    resourceGroupName: string,\n    galleryName: string,\n    galleryImageName: string,\n    options?: GalleryImageVersionsListByGalleryImageOptionalParams\n  ): Promise<GalleryImageVersionsListByGalleryImageResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, galleryName, galleryImageName, options },\n      listByGalleryImageOperationSpec\n    );\n  }\n\n  /**\n   * ListByGalleryImageNext\n   * @param resourceGroupName The name of the resource group.\n   * @param galleryName The name of the Shared Image Gallery in which the Image Definition resides.\n   * @param galleryImageName The name of the Shared Image Gallery Image Definition from which the Image\n   *                         Versions are to be listed.\n   * @param nextLink The nextLink from the previous successful call to the ListByGalleryImage method.\n   * @param options The options parameters.\n   */\n  private _listByGalleryImageNext(\n    resourceGroupName: string,\n    galleryName: string,\n    galleryImageName: string,\n    nextLink: string,\n    options?: GalleryImageVersionsListByGalleryImageNextOptionalParams\n  ): Promise<GalleryImageVersionsListByGalleryImageNextResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, galleryName, galleryImageName, nextLink, options },\n      listByGalleryImageNextOperationSpec\n    );\n  }\n}\n// Operation Specifications\nconst serializer = coreClient.createSerializer(Mappers, /* isXml */ false);\n\nconst createOrUpdateOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/galleries/{galleryName}/images/{galleryImageName}/versions/{galleryImageVersionName}\",\n  httpMethod: \"PUT\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.GalleryImageVersion\n    },\n    201: {\n      bodyMapper: Mappers.GalleryImageVersion\n    },\n    202: {\n      bodyMapper: Mappers.GalleryImageVersion\n    },\n    204: {\n      bodyMapper: Mappers.GalleryImageVersion\n    },\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  requestBody: Parameters.galleryImageVersion,\n  queryParameters: [Parameters.apiVersion3],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.resourceGroupName,\n    Parameters.subscriptionId,\n    Parameters.galleryName,\n    Parameters.galleryImageName,\n    Parameters.galleryImageVersionName\n  ],\n  headerParameters: [Parameters.accept, Parameters.contentType],\n  mediaType: \"json\",\n  serializer\n};\nconst updateOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/galleries/{galleryName}/images/{galleryImageName}/versions/{galleryImageVersionName}\",\n  httpMethod: \"PATCH\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.GalleryImageVersion\n    },\n    201: {\n      bodyMapper: Mappers.GalleryImageVersion\n    },\n    202: {\n      bodyMapper: Mappers.GalleryImageVersion\n    },\n    204: {\n      bodyMapper: Mappers.GalleryImageVersion\n    },\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  requestBody: Parameters.galleryImageVersion1,\n  queryParameters: [Parameters.apiVersion3],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.resourceGroupName,\n    Parameters.subscriptionId,\n    Parameters.galleryName,\n    Parameters.galleryImageName,\n    Parameters.galleryImageVersionName\n  ],\n  headerParameters: [Parameters.accept, Parameters.contentType],\n  mediaType: \"json\",\n  serializer\n};\nconst getOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/galleries/{galleryName}/images/{galleryImageName}/versions/{galleryImageVersionName}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.GalleryImageVersion\n    },\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  queryParameters: [Parameters.apiVersion3, Parameters.expand9],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.resourceGroupName,\n    Parameters.subscriptionId,\n    Parameters.galleryName,\n    Parameters.galleryImageName,\n    Parameters.galleryImageVersionName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst deleteOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/galleries/{galleryName}/images/{galleryImageName}/versions/{galleryImageVersionName}\",\n  httpMethod: \"DELETE\",\n  responses: {\n    200: {},\n    201: {},\n    202: {},\n    204: {},\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  queryParameters: [Parameters.apiVersion3],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.resourceGroupName,\n    Parameters.subscriptionId,\n    Parameters.galleryName,\n    Parameters.galleryImageName,\n    Parameters.galleryImageVersionName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst listByGalleryImageOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/galleries/{galleryName}/images/{galleryImageName}/versions\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.GalleryImageVersionList\n    },\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  queryParameters: [Parameters.apiVersion3],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.resourceGroupName,\n    Parameters.subscriptionId,\n    Parameters.galleryName,\n    Parameters.galleryImageName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst listByGalleryImageNextOperationSpec: coreClient.OperationSpec = {\n  path: \"{nextLink}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.GalleryImageVersionList\n    },\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  queryParameters: [Parameters.apiVersion3],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.resourceGroupName,\n    Parameters.subscriptionId,\n    Parameters.nextLink,\n    Parameters.galleryName,\n    Parameters.galleryImageName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport { PagedAsyncIterableIterator } from \"@azure/core-paging\";\nimport { GalleryApplications } from \"../operationsInterfaces\";\nimport * as coreClient from \"@azure/core-client\";\nimport * as Mappers from \"../models/mappers\";\nimport * as Parameters from \"../models/parameters\";\nimport { ComputeManagementClient } from \"../computeManagementClient\";\nimport { PollerLike, PollOperationState, LroEngine } from \"@azure/core-lro\";\nimport { LroImpl } from \"../lroImpl\";\nimport {\n  GalleryApplication,\n  GalleryApplicationsListByGalleryNextOptionalParams,\n  GalleryApplicationsListByGalleryOptionalParams,\n  GalleryApplicationsCreateOrUpdateOptionalParams,\n  GalleryApplicationsCreateOrUpdateResponse,\n  GalleryApplicationUpdate,\n  GalleryApplicationsUpdateOptionalParams,\n  GalleryApplicationsUpdateResponse,\n  GalleryApplicationsGetOptionalParams,\n  GalleryApplicationsGetResponse,\n  GalleryApplicationsDeleteOptionalParams,\n  GalleryApplicationsListByGalleryResponse,\n  GalleryApplicationsListByGalleryNextResponse\n} from \"../models\";\n\n/// <reference lib=\"esnext.asynciterable\" />\n/** Class containing GalleryApplications operations. */\nexport class GalleryApplicationsImpl implements GalleryApplications {\n  private readonly client: ComputeManagementClient;\n\n  /**\n   * Initialize a new instance of the class GalleryApplications class.\n   * @param client Reference to the service client\n   */\n  constructor(client: ComputeManagementClient) {\n    this.client = client;\n  }\n\n  /**\n   * List gallery Application Definitions in a gallery.\n   * @param resourceGroupName The name of the resource group.\n   * @param galleryName The name of the Shared Application Gallery from which Application Definitions are\n   *                    to be listed.\n   * @param options The options parameters.\n   */\n  public listByGallery(\n    resourceGroupName: string,\n    galleryName: string,\n    options?: GalleryApplicationsListByGalleryOptionalParams\n  ): PagedAsyncIterableIterator<GalleryApplication> {\n    const iter = this.listByGalleryPagingAll(\n      resourceGroupName,\n      galleryName,\n      options\n    );\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: () => {\n        return this.listByGalleryPagingPage(\n          resourceGroupName,\n          galleryName,\n          options\n        );\n      }\n    };\n  }\n\n  private async *listByGalleryPagingPage(\n    resourceGroupName: string,\n    galleryName: string,\n    options?: GalleryApplicationsListByGalleryOptionalParams\n  ): AsyncIterableIterator<GalleryApplication[]> {\n    let result = await this._listByGallery(\n      resourceGroupName,\n      galleryName,\n      options\n    );\n    yield result.value || [];\n    let continuationToken = result.nextLink;\n    while (continuationToken) {\n      result = await this._listByGalleryNext(\n        resourceGroupName,\n        galleryName,\n        continuationToken,\n        options\n      );\n      continuationToken = result.nextLink;\n      yield result.value || [];\n    }\n  }\n\n  private async *listByGalleryPagingAll(\n    resourceGroupName: string,\n    galleryName: string,\n    options?: GalleryApplicationsListByGalleryOptionalParams\n  ): AsyncIterableIterator<GalleryApplication> {\n    for await (const page of this.listByGalleryPagingPage(\n      resourceGroupName,\n      galleryName,\n      options\n    )) {\n      yield* page;\n    }\n  }\n\n  /**\n   * Create or update a gallery Application Definition.\n   * @param resourceGroupName The name of the resource group.\n   * @param galleryName The name of the Shared Application Gallery in which the Application Definition is\n   *                    to be created.\n   * @param galleryApplicationName The name of the gallery Application Definition to be created or\n   *                               updated. The allowed characters are alphabets and numbers with dots, dashes, and periods allowed in\n   *                               the middle. The maximum length is 80 characters.\n   * @param galleryApplication Parameters supplied to the create or update gallery Application operation.\n   * @param options The options parameters.\n   */\n  async beginCreateOrUpdate(\n    resourceGroupName: string,\n    galleryName: string,\n    galleryApplicationName: string,\n    galleryApplication: GalleryApplication,\n    options?: GalleryApplicationsCreateOrUpdateOptionalParams\n  ): Promise<\n    PollerLike<\n      PollOperationState<GalleryApplicationsCreateOrUpdateResponse>,\n      GalleryApplicationsCreateOrUpdateResponse\n    >\n  > {\n    const directSendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ): Promise<GalleryApplicationsCreateOrUpdateResponse> => {\n      return this.client.sendOperationRequest(args, spec);\n    };\n    const sendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ) => {\n      let currentRawResponse:\n        | coreClient.FullOperationResponse\n        | undefined = undefined;\n      const providedCallback = args.options?.onResponse;\n      const callback: coreClient.RawResponseCallback = (\n        rawResponse: coreClient.FullOperationResponse,\n        flatResponse: unknown\n      ) => {\n        currentRawResponse = rawResponse;\n        providedCallback?.(rawResponse, flatResponse);\n      };\n      const updatedArgs = {\n        ...args,\n        options: {\n          ...args.options,\n          onResponse: callback\n        }\n      };\n      const flatResponse = await directSendOperation(updatedArgs, spec);\n      return {\n        flatResponse,\n        rawResponse: {\n          statusCode: currentRawResponse!.status,\n          body: currentRawResponse!.parsedBody,\n          headers: currentRawResponse!.headers.toJSON()\n        }\n      };\n    };\n\n    const lro = new LroImpl(\n      sendOperation,\n      {\n        resourceGroupName,\n        galleryName,\n        galleryApplicationName,\n        galleryApplication,\n        options\n      },\n      createOrUpdateOperationSpec\n    );\n    return new LroEngine(lro, {\n      resumeFrom: options?.resumeFrom,\n      intervalInMs: options?.updateIntervalInMs\n    });\n  }\n\n  /**\n   * Create or update a gallery Application Definition.\n   * @param resourceGroupName The name of the resource group.\n   * @param galleryName The name of the Shared Application Gallery in which the Application Definition is\n   *                    to be created.\n   * @param galleryApplicationName The name of the gallery Application Definition to be created or\n   *                               updated. The allowed characters are alphabets and numbers with dots, dashes, and periods allowed in\n   *                               the middle. The maximum length is 80 characters.\n   * @param galleryApplication Parameters supplied to the create or update gallery Application operation.\n   * @param options The options parameters.\n   */\n  async beginCreateOrUpdateAndWait(\n    resourceGroupName: string,\n    galleryName: string,\n    galleryApplicationName: string,\n    galleryApplication: GalleryApplication,\n    options?: GalleryApplicationsCreateOrUpdateOptionalParams\n  ): Promise<GalleryApplicationsCreateOrUpdateResponse> {\n    const poller = await this.beginCreateOrUpdate(\n      resourceGroupName,\n      galleryName,\n      galleryApplicationName,\n      galleryApplication,\n      options\n    );\n    return poller.pollUntilDone();\n  }\n\n  /**\n   * Update a gallery Application Definition.\n   * @param resourceGroupName The name of the resource group.\n   * @param galleryName The name of the Shared Application Gallery in which the Application Definition is\n   *                    to be updated.\n   * @param galleryApplicationName The name of the gallery Application Definition to be updated. The\n   *                               allowed characters are alphabets and numbers with dots, dashes, and periods allowed in the middle.\n   *                               The maximum length is 80 characters.\n   * @param galleryApplication Parameters supplied to the update gallery Application operation.\n   * @param options The options parameters.\n   */\n  async beginUpdate(\n    resourceGroupName: string,\n    galleryName: string,\n    galleryApplicationName: string,\n    galleryApplication: GalleryApplicationUpdate,\n    options?: GalleryApplicationsUpdateOptionalParams\n  ): Promise<\n    PollerLike<\n      PollOperationState<GalleryApplicationsUpdateResponse>,\n      GalleryApplicationsUpdateResponse\n    >\n  > {\n    const directSendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ): Promise<GalleryApplicationsUpdateResponse> => {\n      return this.client.sendOperationRequest(args, spec);\n    };\n    const sendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ) => {\n      let currentRawResponse:\n        | coreClient.FullOperationResponse\n        | undefined = undefined;\n      const providedCallback = args.options?.onResponse;\n      const callback: coreClient.RawResponseCallback = (\n        rawResponse: coreClient.FullOperationResponse,\n        flatResponse: unknown\n      ) => {\n        currentRawResponse = rawResponse;\n        providedCallback?.(rawResponse, flatResponse);\n      };\n      const updatedArgs = {\n        ...args,\n        options: {\n          ...args.options,\n          onResponse: callback\n        }\n      };\n      const flatResponse = await directSendOperation(updatedArgs, spec);\n      return {\n        flatResponse,\n        rawResponse: {\n          statusCode: currentRawResponse!.status,\n          body: currentRawResponse!.parsedBody,\n          headers: currentRawResponse!.headers.toJSON()\n        }\n      };\n    };\n\n    const lro = new LroImpl(\n      sendOperation,\n      {\n        resourceGroupName,\n        galleryName,\n        galleryApplicationName,\n        galleryApplication,\n        options\n      },\n      updateOperationSpec\n    );\n    return new LroEngine(lro, {\n      resumeFrom: options?.resumeFrom,\n      intervalInMs: options?.updateIntervalInMs\n    });\n  }\n\n  /**\n   * Update a gallery Application Definition.\n   * @param resourceGroupName The name of the resource group.\n   * @param galleryName The name of the Shared Application Gallery in which the Application Definition is\n   *                    to be updated.\n   * @param galleryApplicationName The name of the gallery Application Definition to be updated. The\n   *                               allowed characters are alphabets and numbers with dots, dashes, and periods allowed in the middle.\n   *                               The maximum length is 80 characters.\n   * @param galleryApplication Parameters supplied to the update gallery Application operation.\n   * @param options The options parameters.\n   */\n  async beginUpdateAndWait(\n    resourceGroupName: string,\n    galleryName: string,\n    galleryApplicationName: string,\n    galleryApplication: GalleryApplicationUpdate,\n    options?: GalleryApplicationsUpdateOptionalParams\n  ): Promise<GalleryApplicationsUpdateResponse> {\n    const poller = await this.beginUpdate(\n      resourceGroupName,\n      galleryName,\n      galleryApplicationName,\n      galleryApplication,\n      options\n    );\n    return poller.pollUntilDone();\n  }\n\n  /**\n   * Retrieves information about a gallery Application Definition.\n   * @param resourceGroupName The name of the resource group.\n   * @param galleryName The name of the Shared Application Gallery from which the Application Definitions\n   *                    are to be retrieved.\n   * @param galleryApplicationName The name of the gallery Application Definition to be retrieved.\n   * @param options The options parameters.\n   */\n  get(\n    resourceGroupName: string,\n    galleryName: string,\n    galleryApplicationName: string,\n    options?: GalleryApplicationsGetOptionalParams\n  ): Promise<GalleryApplicationsGetResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, galleryName, galleryApplicationName, options },\n      getOperationSpec\n    );\n  }\n\n  /**\n   * Delete a gallery Application.\n   * @param resourceGroupName The name of the resource group.\n   * @param galleryName The name of the Shared Application Gallery in which the Application Definition is\n   *                    to be deleted.\n   * @param galleryApplicationName The name of the gallery Application Definition to be deleted.\n   * @param options The options parameters.\n   */\n  async beginDelete(\n    resourceGroupName: string,\n    galleryName: string,\n    galleryApplicationName: string,\n    options?: GalleryApplicationsDeleteOptionalParams\n  ): Promise<PollerLike<PollOperationState<void>, void>> {\n    const directSendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ): Promise<void> => {\n      return this.client.sendOperationRequest(args, spec);\n    };\n    const sendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ) => {\n      let currentRawResponse:\n        | coreClient.FullOperationResponse\n        | undefined = undefined;\n      const providedCallback = args.options?.onResponse;\n      const callback: coreClient.RawResponseCallback = (\n        rawResponse: coreClient.FullOperationResponse,\n        flatResponse: unknown\n      ) => {\n        currentRawResponse = rawResponse;\n        providedCallback?.(rawResponse, flatResponse);\n      };\n      const updatedArgs = {\n        ...args,\n        options: {\n          ...args.options,\n          onResponse: callback\n        }\n      };\n      const flatResponse = await directSendOperation(updatedArgs, spec);\n      return {\n        flatResponse,\n        rawResponse: {\n          statusCode: currentRawResponse!.status,\n          body: currentRawResponse!.parsedBody,\n          headers: currentRawResponse!.headers.toJSON()\n        }\n      };\n    };\n\n    const lro = new LroImpl(\n      sendOperation,\n      { resourceGroupName, galleryName, galleryApplicationName, options },\n      deleteOperationSpec\n    );\n    return new LroEngine(lro, {\n      resumeFrom: options?.resumeFrom,\n      intervalInMs: options?.updateIntervalInMs\n    });\n  }\n\n  /**\n   * Delete a gallery Application.\n   * @param resourceGroupName The name of the resource group.\n   * @param galleryName The name of the Shared Application Gallery in which the Application Definition is\n   *                    to be deleted.\n   * @param galleryApplicationName The name of the gallery Application Definition to be deleted.\n   * @param options The options parameters.\n   */\n  async beginDeleteAndWait(\n    resourceGroupName: string,\n    galleryName: string,\n    galleryApplicationName: string,\n    options?: GalleryApplicationsDeleteOptionalParams\n  ): Promise<void> {\n    const poller = await this.beginDelete(\n      resourceGroupName,\n      galleryName,\n      galleryApplicationName,\n      options\n    );\n    return poller.pollUntilDone();\n  }\n\n  /**\n   * List gallery Application Definitions in a gallery.\n   * @param resourceGroupName The name of the resource group.\n   * @param galleryName The name of the Shared Application Gallery from which Application Definitions are\n   *                    to be listed.\n   * @param options The options parameters.\n   */\n  private _listByGallery(\n    resourceGroupName: string,\n    galleryName: string,\n    options?: GalleryApplicationsListByGalleryOptionalParams\n  ): Promise<GalleryApplicationsListByGalleryResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, galleryName, options },\n      listByGalleryOperationSpec\n    );\n  }\n\n  /**\n   * ListByGalleryNext\n   * @param resourceGroupName The name of the resource group.\n   * @param galleryName The name of the Shared Application Gallery from which Application Definitions are\n   *                    to be listed.\n   * @param nextLink The nextLink from the previous successful call to the ListByGallery method.\n   * @param options The options parameters.\n   */\n  private _listByGalleryNext(\n    resourceGroupName: string,\n    galleryName: string,\n    nextLink: string,\n    options?: GalleryApplicationsListByGalleryNextOptionalParams\n  ): Promise<GalleryApplicationsListByGalleryNextResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, galleryName, nextLink, options },\n      listByGalleryNextOperationSpec\n    );\n  }\n}\n// Operation Specifications\nconst serializer = coreClient.createSerializer(Mappers, /* isXml */ false);\n\nconst createOrUpdateOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/galleries/{galleryName}/applications/{galleryApplicationName}\",\n  httpMethod: \"PUT\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.GalleryApplication\n    },\n    201: {\n      bodyMapper: Mappers.GalleryApplication\n    },\n    202: {\n      bodyMapper: Mappers.GalleryApplication\n    },\n    204: {\n      bodyMapper: Mappers.GalleryApplication\n    },\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  requestBody: Parameters.galleryApplication,\n  queryParameters: [Parameters.apiVersion3],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.resourceGroupName,\n    Parameters.subscriptionId,\n    Parameters.galleryName,\n    Parameters.galleryApplicationName\n  ],\n  headerParameters: [Parameters.accept, Parameters.contentType],\n  mediaType: \"json\",\n  serializer\n};\nconst updateOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/galleries/{galleryName}/applications/{galleryApplicationName}\",\n  httpMethod: \"PATCH\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.GalleryApplication\n    },\n    201: {\n      bodyMapper: Mappers.GalleryApplication\n    },\n    202: {\n      bodyMapper: Mappers.GalleryApplication\n    },\n    204: {\n      bodyMapper: Mappers.GalleryApplication\n    },\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  requestBody: Parameters.galleryApplication1,\n  queryParameters: [Parameters.apiVersion3],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.resourceGroupName,\n    Parameters.subscriptionId,\n    Parameters.galleryName,\n    Parameters.galleryApplicationName\n  ],\n  headerParameters: [Parameters.accept, Parameters.contentType],\n  mediaType: \"json\",\n  serializer\n};\nconst getOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/galleries/{galleryName}/applications/{galleryApplicationName}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.GalleryApplication\n    },\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  queryParameters: [Parameters.apiVersion3],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.resourceGroupName,\n    Parameters.subscriptionId,\n    Parameters.galleryName,\n    Parameters.galleryApplicationName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst deleteOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/galleries/{galleryName}/applications/{galleryApplicationName}\",\n  httpMethod: \"DELETE\",\n  responses: {\n    200: {},\n    201: {},\n    202: {},\n    204: {},\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  queryParameters: [Parameters.apiVersion3],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.resourceGroupName,\n    Parameters.subscriptionId,\n    Parameters.galleryName,\n    Parameters.galleryApplicationName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst listByGalleryOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/galleries/{galleryName}/applications\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.GalleryApplicationList\n    },\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  queryParameters: [Parameters.apiVersion3],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.resourceGroupName,\n    Parameters.subscriptionId,\n    Parameters.galleryName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst listByGalleryNextOperationSpec: coreClient.OperationSpec = {\n  path: \"{nextLink}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.GalleryApplicationList\n    },\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  queryParameters: [Parameters.apiVersion3],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.resourceGroupName,\n    Parameters.subscriptionId,\n    Parameters.nextLink,\n    Parameters.galleryName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport { PagedAsyncIterableIterator } from \"@azure/core-paging\";\nimport { GalleryApplicationVersions } from \"../operationsInterfaces\";\nimport * as coreClient from \"@azure/core-client\";\nimport * as Mappers from \"../models/mappers\";\nimport * as Parameters from \"../models/parameters\";\nimport { ComputeManagementClient } from \"../computeManagementClient\";\nimport { PollerLike, PollOperationState, LroEngine } from \"@azure/core-lro\";\nimport { LroImpl } from \"../lroImpl\";\nimport {\n  GalleryApplicationVersion,\n  GalleryApplicationVersionsListByGalleryApplicationNextOptionalParams,\n  GalleryApplicationVersionsListByGalleryApplicationOptionalParams,\n  GalleryApplicationVersionsCreateOrUpdateOptionalParams,\n  GalleryApplicationVersionsCreateOrUpdateResponse,\n  GalleryApplicationVersionUpdate,\n  GalleryApplicationVersionsUpdateOptionalParams,\n  GalleryApplicationVersionsUpdateResponse,\n  GalleryApplicationVersionsGetOptionalParams,\n  GalleryApplicationVersionsGetResponse,\n  GalleryApplicationVersionsDeleteOptionalParams,\n  GalleryApplicationVersionsListByGalleryApplicationResponse,\n  GalleryApplicationVersionsListByGalleryApplicationNextResponse\n} from \"../models\";\n\n/// <reference lib=\"esnext.asynciterable\" />\n/** Class containing GalleryApplicationVersions operations. */\nexport class GalleryApplicationVersionsImpl\n  implements GalleryApplicationVersions {\n  private readonly client: ComputeManagementClient;\n\n  /**\n   * Initialize a new instance of the class GalleryApplicationVersions class.\n   * @param client Reference to the service client\n   */\n  constructor(client: ComputeManagementClient) {\n    this.client = client;\n  }\n\n  /**\n   * List gallery Application Versions in a gallery Application Definition.\n   * @param resourceGroupName The name of the resource group.\n   * @param galleryName The name of the Shared Application Gallery in which the Application Definition\n   *                    resides.\n   * @param galleryApplicationName The name of the Shared Application Gallery Application Definition from\n   *                               which the Application Versions are to be listed.\n   * @param options The options parameters.\n   */\n  public listByGalleryApplication(\n    resourceGroupName: string,\n    galleryName: string,\n    galleryApplicationName: string,\n    options?: GalleryApplicationVersionsListByGalleryApplicationOptionalParams\n  ): PagedAsyncIterableIterator<GalleryApplicationVersion> {\n    const iter = this.listByGalleryApplicationPagingAll(\n      resourceGroupName,\n      galleryName,\n      galleryApplicationName,\n      options\n    );\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: () => {\n        return this.listByGalleryApplicationPagingPage(\n          resourceGroupName,\n          galleryName,\n          galleryApplicationName,\n          options\n        );\n      }\n    };\n  }\n\n  private async *listByGalleryApplicationPagingPage(\n    resourceGroupName: string,\n    galleryName: string,\n    galleryApplicationName: string,\n    options?: GalleryApplicationVersionsListByGalleryApplicationOptionalParams\n  ): AsyncIterableIterator<GalleryApplicationVersion[]> {\n    let result = await this._listByGalleryApplication(\n      resourceGroupName,\n      galleryName,\n      galleryApplicationName,\n      options\n    );\n    yield result.value || [];\n    let continuationToken = result.nextLink;\n    while (continuationToken) {\n      result = await this._listByGalleryApplicationNext(\n        resourceGroupName,\n        galleryName,\n        galleryApplicationName,\n        continuationToken,\n        options\n      );\n      continuationToken = result.nextLink;\n      yield result.value || [];\n    }\n  }\n\n  private async *listByGalleryApplicationPagingAll(\n    resourceGroupName: string,\n    galleryName: string,\n    galleryApplicationName: string,\n    options?: GalleryApplicationVersionsListByGalleryApplicationOptionalParams\n  ): AsyncIterableIterator<GalleryApplicationVersion> {\n    for await (const page of this.listByGalleryApplicationPagingPage(\n      resourceGroupName,\n      galleryName,\n      galleryApplicationName,\n      options\n    )) {\n      yield* page;\n    }\n  }\n\n  /**\n   * Create or update a gallery Application Version.\n   * @param resourceGroupName The name of the resource group.\n   * @param galleryName The name of the Shared Application Gallery in which the Application Definition\n   *                    resides.\n   * @param galleryApplicationName The name of the gallery Application Definition in which the\n   *                               Application Version is to be created.\n   * @param galleryApplicationVersionName The name of the gallery Application Version to be created.\n   *                                      Needs to follow semantic version name pattern: The allowed characters are digit and period. Digits\n   *                                      must be within the range of a 32-bit integer. Format: <MajorVersion>.<MinorVersion>.<Patch>\n   * @param galleryApplicationVersion Parameters supplied to the create or update gallery Application\n   *                                  Version operation.\n   * @param options The options parameters.\n   */\n  async beginCreateOrUpdate(\n    resourceGroupName: string,\n    galleryName: string,\n    galleryApplicationName: string,\n    galleryApplicationVersionName: string,\n    galleryApplicationVersion: GalleryApplicationVersion,\n    options?: GalleryApplicationVersionsCreateOrUpdateOptionalParams\n  ): Promise<\n    PollerLike<\n      PollOperationState<GalleryApplicationVersionsCreateOrUpdateResponse>,\n      GalleryApplicationVersionsCreateOrUpdateResponse\n    >\n  > {\n    const directSendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ): Promise<GalleryApplicationVersionsCreateOrUpdateResponse> => {\n      return this.client.sendOperationRequest(args, spec);\n    };\n    const sendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ) => {\n      let currentRawResponse:\n        | coreClient.FullOperationResponse\n        | undefined = undefined;\n      const providedCallback = args.options?.onResponse;\n      const callback: coreClient.RawResponseCallback = (\n        rawResponse: coreClient.FullOperationResponse,\n        flatResponse: unknown\n      ) => {\n        currentRawResponse = rawResponse;\n        providedCallback?.(rawResponse, flatResponse);\n      };\n      const updatedArgs = {\n        ...args,\n        options: {\n          ...args.options,\n          onResponse: callback\n        }\n      };\n      const flatResponse = await directSendOperation(updatedArgs, spec);\n      return {\n        flatResponse,\n        rawResponse: {\n          statusCode: currentRawResponse!.status,\n          body: currentRawResponse!.parsedBody,\n          headers: currentRawResponse!.headers.toJSON()\n        }\n      };\n    };\n\n    const lro = new LroImpl(\n      sendOperation,\n      {\n        resourceGroupName,\n        galleryName,\n        galleryApplicationName,\n        galleryApplicationVersionName,\n        galleryApplicationVersion,\n        options\n      },\n      createOrUpdateOperationSpec\n    );\n    return new LroEngine(lro, {\n      resumeFrom: options?.resumeFrom,\n      intervalInMs: options?.updateIntervalInMs\n    });\n  }\n\n  /**\n   * Create or update a gallery Application Version.\n   * @param resourceGroupName The name of the resource group.\n   * @param galleryName The name of the Shared Application Gallery in which the Application Definition\n   *                    resides.\n   * @param galleryApplicationName The name of the gallery Application Definition in which the\n   *                               Application Version is to be created.\n   * @param galleryApplicationVersionName The name of the gallery Application Version to be created.\n   *                                      Needs to follow semantic version name pattern: The allowed characters are digit and period. Digits\n   *                                      must be within the range of a 32-bit integer. Format: <MajorVersion>.<MinorVersion>.<Patch>\n   * @param galleryApplicationVersion Parameters supplied to the create or update gallery Application\n   *                                  Version operation.\n   * @param options The options parameters.\n   */\n  async beginCreateOrUpdateAndWait(\n    resourceGroupName: string,\n    galleryName: string,\n    galleryApplicationName: string,\n    galleryApplicationVersionName: string,\n    galleryApplicationVersion: GalleryApplicationVersion,\n    options?: GalleryApplicationVersionsCreateOrUpdateOptionalParams\n  ): Promise<GalleryApplicationVersionsCreateOrUpdateResponse> {\n    const poller = await this.beginCreateOrUpdate(\n      resourceGroupName,\n      galleryName,\n      galleryApplicationName,\n      galleryApplicationVersionName,\n      galleryApplicationVersion,\n      options\n    );\n    return poller.pollUntilDone();\n  }\n\n  /**\n   * Update a gallery Application Version.\n   * @param resourceGroupName The name of the resource group.\n   * @param galleryName The name of the Shared Application Gallery in which the Application Definition\n   *                    resides.\n   * @param galleryApplicationName The name of the gallery Application Definition in which the\n   *                               Application Version is to be updated.\n   * @param galleryApplicationVersionName The name of the gallery Application Version to be updated.\n   *                                      Needs to follow semantic version name pattern: The allowed characters are digit and period. Digits\n   *                                      must be within the range of a 32-bit integer. Format: <MajorVersion>.<MinorVersion>.<Patch>\n   * @param galleryApplicationVersion Parameters supplied to the update gallery Application Version\n   *                                  operation.\n   * @param options The options parameters.\n   */\n  async beginUpdate(\n    resourceGroupName: string,\n    galleryName: string,\n    galleryApplicationName: string,\n    galleryApplicationVersionName: string,\n    galleryApplicationVersion: GalleryApplicationVersionUpdate,\n    options?: GalleryApplicationVersionsUpdateOptionalParams\n  ): Promise<\n    PollerLike<\n      PollOperationState<GalleryApplicationVersionsUpdateResponse>,\n      GalleryApplicationVersionsUpdateResponse\n    >\n  > {\n    const directSendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ): Promise<GalleryApplicationVersionsUpdateResponse> => {\n      return this.client.sendOperationRequest(args, spec);\n    };\n    const sendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ) => {\n      let currentRawResponse:\n        | coreClient.FullOperationResponse\n        | undefined = undefined;\n      const providedCallback = args.options?.onResponse;\n      const callback: coreClient.RawResponseCallback = (\n        rawResponse: coreClient.FullOperationResponse,\n        flatResponse: unknown\n      ) => {\n        currentRawResponse = rawResponse;\n        providedCallback?.(rawResponse, flatResponse);\n      };\n      const updatedArgs = {\n        ...args,\n        options: {\n          ...args.options,\n          onResponse: callback\n        }\n      };\n      const flatResponse = await directSendOperation(updatedArgs, spec);\n      return {\n        flatResponse,\n        rawResponse: {\n          statusCode: currentRawResponse!.status,\n          body: currentRawResponse!.parsedBody,\n          headers: currentRawResponse!.headers.toJSON()\n        }\n      };\n    };\n\n    const lro = new LroImpl(\n      sendOperation,\n      {\n        resourceGroupName,\n        galleryName,\n        galleryApplicationName,\n        galleryApplicationVersionName,\n        galleryApplicationVersion,\n        options\n      },\n      updateOperationSpec\n    );\n    return new LroEngine(lro, {\n      resumeFrom: options?.resumeFrom,\n      intervalInMs: options?.updateIntervalInMs\n    });\n  }\n\n  /**\n   * Update a gallery Application Version.\n   * @param resourceGroupName The name of the resource group.\n   * @param galleryName The name of the Shared Application Gallery in which the Application Definition\n   *                    resides.\n   * @param galleryApplicationName The name of the gallery Application Definition in which the\n   *                               Application Version is to be updated.\n   * @param galleryApplicationVersionName The name of the gallery Application Version to be updated.\n   *                                      Needs to follow semantic version name pattern: The allowed characters are digit and period. Digits\n   *                                      must be within the range of a 32-bit integer. Format: <MajorVersion>.<MinorVersion>.<Patch>\n   * @param galleryApplicationVersion Parameters supplied to the update gallery Application Version\n   *                                  operation.\n   * @param options The options parameters.\n   */\n  async beginUpdateAndWait(\n    resourceGroupName: string,\n    galleryName: string,\n    galleryApplicationName: string,\n    galleryApplicationVersionName: string,\n    galleryApplicationVersion: GalleryApplicationVersionUpdate,\n    options?: GalleryApplicationVersionsUpdateOptionalParams\n  ): Promise<GalleryApplicationVersionsUpdateResponse> {\n    const poller = await this.beginUpdate(\n      resourceGroupName,\n      galleryName,\n      galleryApplicationName,\n      galleryApplicationVersionName,\n      galleryApplicationVersion,\n      options\n    );\n    return poller.pollUntilDone();\n  }\n\n  /**\n   * Retrieves information about a gallery Application Version.\n   * @param resourceGroupName The name of the resource group.\n   * @param galleryName The name of the Shared Application Gallery in which the Application Definition\n   *                    resides.\n   * @param galleryApplicationName The name of the gallery Application Definition in which the\n   *                               Application Version resides.\n   * @param galleryApplicationVersionName The name of the gallery Application Version to be retrieved.\n   * @param options The options parameters.\n   */\n  get(\n    resourceGroupName: string,\n    galleryName: string,\n    galleryApplicationName: string,\n    galleryApplicationVersionName: string,\n    options?: GalleryApplicationVersionsGetOptionalParams\n  ): Promise<GalleryApplicationVersionsGetResponse> {\n    return this.client.sendOperationRequest(\n      {\n        resourceGroupName,\n        galleryName,\n        galleryApplicationName,\n        galleryApplicationVersionName,\n        options\n      },\n      getOperationSpec\n    );\n  }\n\n  /**\n   * Delete a gallery Application Version.\n   * @param resourceGroupName The name of the resource group.\n   * @param galleryName The name of the Shared Application Gallery in which the Application Definition\n   *                    resides.\n   * @param galleryApplicationName The name of the gallery Application Definition in which the\n   *                               Application Version resides.\n   * @param galleryApplicationVersionName The name of the gallery Application Version to be deleted.\n   * @param options The options parameters.\n   */\n  async beginDelete(\n    resourceGroupName: string,\n    galleryName: string,\n    galleryApplicationName: string,\n    galleryApplicationVersionName: string,\n    options?: GalleryApplicationVersionsDeleteOptionalParams\n  ): Promise<PollerLike<PollOperationState<void>, void>> {\n    const directSendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ): Promise<void> => {\n      return this.client.sendOperationRequest(args, spec);\n    };\n    const sendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ) => {\n      let currentRawResponse:\n        | coreClient.FullOperationResponse\n        | undefined = undefined;\n      const providedCallback = args.options?.onResponse;\n      const callback: coreClient.RawResponseCallback = (\n        rawResponse: coreClient.FullOperationResponse,\n        flatResponse: unknown\n      ) => {\n        currentRawResponse = rawResponse;\n        providedCallback?.(rawResponse, flatResponse);\n      };\n      const updatedArgs = {\n        ...args,\n        options: {\n          ...args.options,\n          onResponse: callback\n        }\n      };\n      const flatResponse = await directSendOperation(updatedArgs, spec);\n      return {\n        flatResponse,\n        rawResponse: {\n          statusCode: currentRawResponse!.status,\n          body: currentRawResponse!.parsedBody,\n          headers: currentRawResponse!.headers.toJSON()\n        }\n      };\n    };\n\n    const lro = new LroImpl(\n      sendOperation,\n      {\n        resourceGroupName,\n        galleryName,\n        galleryApplicationName,\n        galleryApplicationVersionName,\n        options\n      },\n      deleteOperationSpec\n    );\n    return new LroEngine(lro, {\n      resumeFrom: options?.resumeFrom,\n      intervalInMs: options?.updateIntervalInMs\n    });\n  }\n\n  /**\n   * Delete a gallery Application Version.\n   * @param resourceGroupName The name of the resource group.\n   * @param galleryName The name of the Shared Application Gallery in which the Application Definition\n   *                    resides.\n   * @param galleryApplicationName The name of the gallery Application Definition in which the\n   *                               Application Version resides.\n   * @param galleryApplicationVersionName The name of the gallery Application Version to be deleted.\n   * @param options The options parameters.\n   */\n  async beginDeleteAndWait(\n    resourceGroupName: string,\n    galleryName: string,\n    galleryApplicationName: string,\n    galleryApplicationVersionName: string,\n    options?: GalleryApplicationVersionsDeleteOptionalParams\n  ): Promise<void> {\n    const poller = await this.beginDelete(\n      resourceGroupName,\n      galleryName,\n      galleryApplicationName,\n      galleryApplicationVersionName,\n      options\n    );\n    return poller.pollUntilDone();\n  }\n\n  /**\n   * List gallery Application Versions in a gallery Application Definition.\n   * @param resourceGroupName The name of the resource group.\n   * @param galleryName The name of the Shared Application Gallery in which the Application Definition\n   *                    resides.\n   * @param galleryApplicationName The name of the Shared Application Gallery Application Definition from\n   *                               which the Application Versions are to be listed.\n   * @param options The options parameters.\n   */\n  private _listByGalleryApplication(\n    resourceGroupName: string,\n    galleryName: string,\n    galleryApplicationName: string,\n    options?: GalleryApplicationVersionsListByGalleryApplicationOptionalParams\n  ): Promise<GalleryApplicationVersionsListByGalleryApplicationResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, galleryName, galleryApplicationName, options },\n      listByGalleryApplicationOperationSpec\n    );\n  }\n\n  /**\n   * ListByGalleryApplicationNext\n   * @param resourceGroupName The name of the resource group.\n   * @param galleryName The name of the Shared Application Gallery in which the Application Definition\n   *                    resides.\n   * @param galleryApplicationName The name of the Shared Application Gallery Application Definition from\n   *                               which the Application Versions are to be listed.\n   * @param nextLink The nextLink from the previous successful call to the ListByGalleryApplication\n   *                 method.\n   * @param options The options parameters.\n   */\n  private _listByGalleryApplicationNext(\n    resourceGroupName: string,\n    galleryName: string,\n    galleryApplicationName: string,\n    nextLink: string,\n    options?: GalleryApplicationVersionsListByGalleryApplicationNextOptionalParams\n  ): Promise<GalleryApplicationVersionsListByGalleryApplicationNextResponse> {\n    return this.client.sendOperationRequest(\n      {\n        resourceGroupName,\n        galleryName,\n        galleryApplicationName,\n        nextLink,\n        options\n      },\n      listByGalleryApplicationNextOperationSpec\n    );\n  }\n}\n// Operation Specifications\nconst serializer = coreClient.createSerializer(Mappers, /* isXml */ false);\n\nconst createOrUpdateOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/galleries/{galleryName}/applications/{galleryApplicationName}/versions/{galleryApplicationVersionName}\",\n  httpMethod: \"PUT\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.GalleryApplicationVersion\n    },\n    201: {\n      bodyMapper: Mappers.GalleryApplicationVersion\n    },\n    202: {\n      bodyMapper: Mappers.GalleryApplicationVersion\n    },\n    204: {\n      bodyMapper: Mappers.GalleryApplicationVersion\n    },\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  requestBody: Parameters.galleryApplicationVersion,\n  queryParameters: [Parameters.apiVersion3],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.resourceGroupName,\n    Parameters.subscriptionId,\n    Parameters.galleryName,\n    Parameters.galleryApplicationName,\n    Parameters.galleryApplicationVersionName\n  ],\n  headerParameters: [Parameters.accept, Parameters.contentType],\n  mediaType: \"json\",\n  serializer\n};\nconst updateOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/galleries/{galleryName}/applications/{galleryApplicationName}/versions/{galleryApplicationVersionName}\",\n  httpMethod: \"PATCH\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.GalleryApplicationVersion\n    },\n    201: {\n      bodyMapper: Mappers.GalleryApplicationVersion\n    },\n    202: {\n      bodyMapper: Mappers.GalleryApplicationVersion\n    },\n    204: {\n      bodyMapper: Mappers.GalleryApplicationVersion\n    },\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  requestBody: Parameters.galleryApplicationVersion1,\n  queryParameters: [Parameters.apiVersion3],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.resourceGroupName,\n    Parameters.subscriptionId,\n    Parameters.galleryName,\n    Parameters.galleryApplicationName,\n    Parameters.galleryApplicationVersionName\n  ],\n  headerParameters: [Parameters.accept, Parameters.contentType],\n  mediaType: \"json\",\n  serializer\n};\nconst getOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/galleries/{galleryName}/applications/{galleryApplicationName}/versions/{galleryApplicationVersionName}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.GalleryApplicationVersion\n    },\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  queryParameters: [Parameters.apiVersion3, Parameters.expand9],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.resourceGroupName,\n    Parameters.subscriptionId,\n    Parameters.galleryName,\n    Parameters.galleryApplicationName,\n    Parameters.galleryApplicationVersionName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst deleteOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/galleries/{galleryName}/applications/{galleryApplicationName}/versions/{galleryApplicationVersionName}\",\n  httpMethod: \"DELETE\",\n  responses: {\n    200: {},\n    201: {},\n    202: {},\n    204: {},\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  queryParameters: [Parameters.apiVersion3],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.resourceGroupName,\n    Parameters.subscriptionId,\n    Parameters.galleryName,\n    Parameters.galleryApplicationName,\n    Parameters.galleryApplicationVersionName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst listByGalleryApplicationOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/galleries/{galleryName}/applications/{galleryApplicationName}/versions\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.GalleryApplicationVersionList\n    },\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  queryParameters: [Parameters.apiVersion3],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.resourceGroupName,\n    Parameters.subscriptionId,\n    Parameters.galleryName,\n    Parameters.galleryApplicationName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst listByGalleryApplicationNextOperationSpec: coreClient.OperationSpec = {\n  path: \"{nextLink}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.GalleryApplicationVersionList\n    },\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  queryParameters: [Parameters.apiVersion3],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.resourceGroupName,\n    Parameters.subscriptionId,\n    Parameters.nextLink,\n    Parameters.galleryName,\n    Parameters.galleryApplicationName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport { GallerySharingProfile } from \"../operationsInterfaces\";\nimport * as coreClient from \"@azure/core-client\";\nimport * as Mappers from \"../models/mappers\";\nimport * as Parameters from \"../models/parameters\";\nimport { ComputeManagementClient } from \"../computeManagementClient\";\nimport { PollerLike, PollOperationState, LroEngine } from \"@azure/core-lro\";\nimport { LroImpl } from \"../lroImpl\";\nimport {\n  SharingUpdate,\n  GallerySharingProfileUpdateOptionalParams,\n  GallerySharingProfileUpdateResponse\n} from \"../models\";\n\n/** Class containing GallerySharingProfile operations. */\nexport class GallerySharingProfileImpl implements GallerySharingProfile {\n  private readonly client: ComputeManagementClient;\n\n  /**\n   * Initialize a new instance of the class GallerySharingProfile class.\n   * @param client Reference to the service client\n   */\n  constructor(client: ComputeManagementClient) {\n    this.client = client;\n  }\n\n  /**\n   * Update sharing profile of a gallery.\n   * @param resourceGroupName The name of the resource group.\n   * @param galleryName The name of the Shared Image Gallery.\n   * @param sharingUpdate Parameters supplied to the update gallery sharing profile.\n   * @param options The options parameters.\n   */\n  async beginUpdate(\n    resourceGroupName: string,\n    galleryName: string,\n    sharingUpdate: SharingUpdate,\n    options?: GallerySharingProfileUpdateOptionalParams\n  ): Promise<\n    PollerLike<\n      PollOperationState<GallerySharingProfileUpdateResponse>,\n      GallerySharingProfileUpdateResponse\n    >\n  > {\n    const directSendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ): Promise<GallerySharingProfileUpdateResponse> => {\n      return this.client.sendOperationRequest(args, spec);\n    };\n    const sendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ) => {\n      let currentRawResponse:\n        | coreClient.FullOperationResponse\n        | undefined = undefined;\n      const providedCallback = args.options?.onResponse;\n      const callback: coreClient.RawResponseCallback = (\n        rawResponse: coreClient.FullOperationResponse,\n        flatResponse: unknown\n      ) => {\n        currentRawResponse = rawResponse;\n        providedCallback?.(rawResponse, flatResponse);\n      };\n      const updatedArgs = {\n        ...args,\n        options: {\n          ...args.options,\n          onResponse: callback\n        }\n      };\n      const flatResponse = await directSendOperation(updatedArgs, spec);\n      return {\n        flatResponse,\n        rawResponse: {\n          statusCode: currentRawResponse!.status,\n          body: currentRawResponse!.parsedBody,\n          headers: currentRawResponse!.headers.toJSON()\n        }\n      };\n    };\n\n    const lro = new LroImpl(\n      sendOperation,\n      { resourceGroupName, galleryName, sharingUpdate, options },\n      updateOperationSpec\n    );\n    return new LroEngine(lro, {\n      resumeFrom: options?.resumeFrom,\n      intervalInMs: options?.updateIntervalInMs\n    });\n  }\n\n  /**\n   * Update sharing profile of a gallery.\n   * @param resourceGroupName The name of the resource group.\n   * @param galleryName The name of the Shared Image Gallery.\n   * @param sharingUpdate Parameters supplied to the update gallery sharing profile.\n   * @param options The options parameters.\n   */\n  async beginUpdateAndWait(\n    resourceGroupName: string,\n    galleryName: string,\n    sharingUpdate: SharingUpdate,\n    options?: GallerySharingProfileUpdateOptionalParams\n  ): Promise<GallerySharingProfileUpdateResponse> {\n    const poller = await this.beginUpdate(\n      resourceGroupName,\n      galleryName,\n      sharingUpdate,\n      options\n    );\n    return poller.pollUntilDone();\n  }\n}\n// Operation Specifications\nconst serializer = coreClient.createSerializer(Mappers, /* isXml */ false);\n\nconst updateOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/galleries/{galleryName}/share\",\n  httpMethod: \"POST\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.SharingUpdate\n    },\n    201: {\n      bodyMapper: Mappers.SharingUpdate\n    },\n    202: {\n      bodyMapper: Mappers.SharingUpdate\n    },\n    204: {\n      bodyMapper: Mappers.SharingUpdate\n    },\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  requestBody: Parameters.sharingUpdate,\n  queryParameters: [Parameters.apiVersion3],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.resourceGroupName,\n    Parameters.subscriptionId,\n    Parameters.galleryName\n  ],\n  headerParameters: [Parameters.accept, Parameters.contentType],\n  mediaType: \"json\",\n  serializer\n};\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport { PagedAsyncIterableIterator } from \"@azure/core-paging\";\nimport { SharedGalleries } from \"../operationsInterfaces\";\nimport * as coreClient from \"@azure/core-client\";\nimport * as Mappers from \"../models/mappers\";\nimport * as Parameters from \"../models/parameters\";\nimport { ComputeManagementClient } from \"../computeManagementClient\";\nimport {\n  SharedGallery,\n  SharedGalleriesListNextOptionalParams,\n  SharedGalleriesListOptionalParams,\n  SharedGalleriesListResponse,\n  SharedGalleriesGetOptionalParams,\n  SharedGalleriesGetResponse,\n  SharedGalleriesListNextResponse\n} from \"../models\";\n\n/// <reference lib=\"esnext.asynciterable\" />\n/** Class containing SharedGalleries operations. */\nexport class SharedGalleriesImpl implements SharedGalleries {\n  private readonly client: ComputeManagementClient;\n\n  /**\n   * Initialize a new instance of the class SharedGalleries class.\n   * @param client Reference to the service client\n   */\n  constructor(client: ComputeManagementClient) {\n    this.client = client;\n  }\n\n  /**\n   * List shared galleries by subscription id or tenant id.\n   * @param location Resource location.\n   * @param options The options parameters.\n   */\n  public list(\n    location: string,\n    options?: SharedGalleriesListOptionalParams\n  ): PagedAsyncIterableIterator<SharedGallery> {\n    const iter = this.listPagingAll(location, options);\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: () => {\n        return this.listPagingPage(location, options);\n      }\n    };\n  }\n\n  private async *listPagingPage(\n    location: string,\n    options?: SharedGalleriesListOptionalParams\n  ): AsyncIterableIterator<SharedGallery[]> {\n    let result = await this._list(location, options);\n    yield result.value || [];\n    let continuationToken = result.nextLink;\n    while (continuationToken) {\n      result = await this._listNext(location, continuationToken, options);\n      continuationToken = result.nextLink;\n      yield result.value || [];\n    }\n  }\n\n  private async *listPagingAll(\n    location: string,\n    options?: SharedGalleriesListOptionalParams\n  ): AsyncIterableIterator<SharedGallery> {\n    for await (const page of this.listPagingPage(location, options)) {\n      yield* page;\n    }\n  }\n\n  /**\n   * List shared galleries by subscription id or tenant id.\n   * @param location Resource location.\n   * @param options The options parameters.\n   */\n  private _list(\n    location: string,\n    options?: SharedGalleriesListOptionalParams\n  ): Promise<SharedGalleriesListResponse> {\n    return this.client.sendOperationRequest(\n      { location, options },\n      listOperationSpec\n    );\n  }\n\n  /**\n   * Get a shared gallery by subscription id or tenant id.\n   * @param location Resource location.\n   * @param galleryUniqueName The unique name of the Shared Gallery.\n   * @param options The options parameters.\n   */\n  get(\n    location: string,\n    galleryUniqueName: string,\n    options?: SharedGalleriesGetOptionalParams\n  ): Promise<SharedGalleriesGetResponse> {\n    return this.client.sendOperationRequest(\n      { location, galleryUniqueName, options },\n      getOperationSpec\n    );\n  }\n\n  /**\n   * ListNext\n   * @param location Resource location.\n   * @param nextLink The nextLink from the previous successful call to the List method.\n   * @param options The options parameters.\n   */\n  private _listNext(\n    location: string,\n    nextLink: string,\n    options?: SharedGalleriesListNextOptionalParams\n  ): Promise<SharedGalleriesListNextResponse> {\n    return this.client.sendOperationRequest(\n      { location, nextLink, options },\n      listNextOperationSpec\n    );\n  }\n}\n// Operation Specifications\nconst serializer = coreClient.createSerializer(Mappers, /* isXml */ false);\n\nconst listOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/providers/Microsoft.Compute/locations/{location}/sharedGalleries\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.SharedGalleryList\n    },\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  queryParameters: [Parameters.apiVersion1, Parameters.sharedTo],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.location\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst getOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/providers/Microsoft.Compute/locations/{location}/sharedGalleries/{galleryUniqueName}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.SharedGallery\n    },\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  queryParameters: [Parameters.apiVersion1],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.location,\n    Parameters.galleryUniqueName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst listNextOperationSpec: coreClient.OperationSpec = {\n  path: \"{nextLink}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.SharedGalleryList\n    },\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  queryParameters: [Parameters.apiVersion1, Parameters.sharedTo],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.nextLink,\n    Parameters.location\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport { PagedAsyncIterableIterator } from \"@azure/core-paging\";\nimport { SharedGalleryImages } from \"../operationsInterfaces\";\nimport * as coreClient from \"@azure/core-client\";\nimport * as Mappers from \"../models/mappers\";\nimport * as Parameters from \"../models/parameters\";\nimport { ComputeManagementClient } from \"../computeManagementClient\";\nimport {\n  SharedGalleryImage,\n  SharedGalleryImagesListNextOptionalParams,\n  SharedGalleryImagesListOptionalParams,\n  SharedGalleryImagesListResponse,\n  SharedGalleryImagesGetOptionalParams,\n  SharedGalleryImagesGetResponse,\n  SharedGalleryImagesListNextResponse\n} from \"../models\";\n\n/// <reference lib=\"esnext.asynciterable\" />\n/** Class containing SharedGalleryImages operations. */\nexport class SharedGalleryImagesImpl implements SharedGalleryImages {\n  private readonly client: ComputeManagementClient;\n\n  /**\n   * Initialize a new instance of the class SharedGalleryImages class.\n   * @param client Reference to the service client\n   */\n  constructor(client: ComputeManagementClient) {\n    this.client = client;\n  }\n\n  /**\n   * List shared gallery images by subscription id or tenant id.\n   * @param location Resource location.\n   * @param galleryUniqueName The unique name of the Shared Gallery.\n   * @param options The options parameters.\n   */\n  public list(\n    location: string,\n    galleryUniqueName: string,\n    options?: SharedGalleryImagesListOptionalParams\n  ): PagedAsyncIterableIterator<SharedGalleryImage> {\n    const iter = this.listPagingAll(location, galleryUniqueName, options);\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: () => {\n        return this.listPagingPage(location, galleryUniqueName, options);\n      }\n    };\n  }\n\n  private async *listPagingPage(\n    location: string,\n    galleryUniqueName: string,\n    options?: SharedGalleryImagesListOptionalParams\n  ): AsyncIterableIterator<SharedGalleryImage[]> {\n    let result = await this._list(location, galleryUniqueName, options);\n    yield result.value || [];\n    let continuationToken = result.nextLink;\n    while (continuationToken) {\n      result = await this._listNext(\n        location,\n        galleryUniqueName,\n        continuationToken,\n        options\n      );\n      continuationToken = result.nextLink;\n      yield result.value || [];\n    }\n  }\n\n  private async *listPagingAll(\n    location: string,\n    galleryUniqueName: string,\n    options?: SharedGalleryImagesListOptionalParams\n  ): AsyncIterableIterator<SharedGalleryImage> {\n    for await (const page of this.listPagingPage(\n      location,\n      galleryUniqueName,\n      options\n    )) {\n      yield* page;\n    }\n  }\n\n  /**\n   * List shared gallery images by subscription id or tenant id.\n   * @param location Resource location.\n   * @param galleryUniqueName The unique name of the Shared Gallery.\n   * @param options The options parameters.\n   */\n  private _list(\n    location: string,\n    galleryUniqueName: string,\n    options?: SharedGalleryImagesListOptionalParams\n  ): Promise<SharedGalleryImagesListResponse> {\n    return this.client.sendOperationRequest(\n      { location, galleryUniqueName, options },\n      listOperationSpec\n    );\n  }\n\n  /**\n   * Get a shared gallery image by subscription id or tenant id.\n   * @param location Resource location.\n   * @param galleryUniqueName The unique name of the Shared Gallery.\n   * @param galleryImageName The name of the Shared Gallery Image Definition from which the Image\n   *                         Versions are to be listed.\n   * @param options The options parameters.\n   */\n  get(\n    location: string,\n    galleryUniqueName: string,\n    galleryImageName: string,\n    options?: SharedGalleryImagesGetOptionalParams\n  ): Promise<SharedGalleryImagesGetResponse> {\n    return this.client.sendOperationRequest(\n      { location, galleryUniqueName, galleryImageName, options },\n      getOperationSpec\n    );\n  }\n\n  /**\n   * ListNext\n   * @param location Resource location.\n   * @param galleryUniqueName The unique name of the Shared Gallery.\n   * @param nextLink The nextLink from the previous successful call to the List method.\n   * @param options The options parameters.\n   */\n  private _listNext(\n    location: string,\n    galleryUniqueName: string,\n    nextLink: string,\n    options?: SharedGalleryImagesListNextOptionalParams\n  ): Promise<SharedGalleryImagesListNextResponse> {\n    return this.client.sendOperationRequest(\n      { location, galleryUniqueName, nextLink, options },\n      listNextOperationSpec\n    );\n  }\n}\n// Operation Specifications\nconst serializer = coreClient.createSerializer(Mappers, /* isXml */ false);\n\nconst listOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/providers/Microsoft.Compute/locations/{location}/sharedGalleries/{galleryUniqueName}/images\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.SharedGalleryImageList\n    },\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  queryParameters: [Parameters.apiVersion1, Parameters.sharedTo],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.location,\n    Parameters.galleryUniqueName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst getOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/providers/Microsoft.Compute/locations/{location}/sharedGalleries/{galleryUniqueName}/images/{galleryImageName}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.SharedGalleryImage\n    },\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  queryParameters: [Parameters.apiVersion1],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.location,\n    Parameters.galleryImageName,\n    Parameters.galleryUniqueName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst listNextOperationSpec: coreClient.OperationSpec = {\n  path: \"{nextLink}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.SharedGalleryImageList\n    },\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  queryParameters: [Parameters.apiVersion1, Parameters.sharedTo],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.nextLink,\n    Parameters.location,\n    Parameters.galleryUniqueName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport { PagedAsyncIterableIterator } from \"@azure/core-paging\";\nimport { SharedGalleryImageVersions } from \"../operationsInterfaces\";\nimport * as coreClient from \"@azure/core-client\";\nimport * as Mappers from \"../models/mappers\";\nimport * as Parameters from \"../models/parameters\";\nimport { ComputeManagementClient } from \"../computeManagementClient\";\nimport {\n  SharedGalleryImageVersion,\n  SharedGalleryImageVersionsListNextOptionalParams,\n  SharedGalleryImageVersionsListOptionalParams,\n  SharedGalleryImageVersionsListResponse,\n  SharedGalleryImageVersionsGetOptionalParams,\n  SharedGalleryImageVersionsGetResponse,\n  SharedGalleryImageVersionsListNextResponse\n} from \"../models\";\n\n/// <reference lib=\"esnext.asynciterable\" />\n/** Class containing SharedGalleryImageVersions operations. */\nexport class SharedGalleryImageVersionsImpl\n  implements SharedGalleryImageVersions {\n  private readonly client: ComputeManagementClient;\n\n  /**\n   * Initialize a new instance of the class SharedGalleryImageVersions class.\n   * @param client Reference to the service client\n   */\n  constructor(client: ComputeManagementClient) {\n    this.client = client;\n  }\n\n  /**\n   * List shared gallery image versions by subscription id or tenant id.\n   * @param location Resource location.\n   * @param galleryUniqueName The unique name of the Shared Gallery.\n   * @param galleryImageName The name of the Shared Gallery Image Definition from which the Image\n   *                         Versions are to be listed.\n   * @param options The options parameters.\n   */\n  public list(\n    location: string,\n    galleryUniqueName: string,\n    galleryImageName: string,\n    options?: SharedGalleryImageVersionsListOptionalParams\n  ): PagedAsyncIterableIterator<SharedGalleryImageVersion> {\n    const iter = this.listPagingAll(\n      location,\n      galleryUniqueName,\n      galleryImageName,\n      options\n    );\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: () => {\n        return this.listPagingPage(\n          location,\n          galleryUniqueName,\n          galleryImageName,\n          options\n        );\n      }\n    };\n  }\n\n  private async *listPagingPage(\n    location: string,\n    galleryUniqueName: string,\n    galleryImageName: string,\n    options?: SharedGalleryImageVersionsListOptionalParams\n  ): AsyncIterableIterator<SharedGalleryImageVersion[]> {\n    let result = await this._list(\n      location,\n      galleryUniqueName,\n      galleryImageName,\n      options\n    );\n    yield result.value || [];\n    let continuationToken = result.nextLink;\n    while (continuationToken) {\n      result = await this._listNext(\n        location,\n        galleryUniqueName,\n        galleryImageName,\n        continuationToken,\n        options\n      );\n      continuationToken = result.nextLink;\n      yield result.value || [];\n    }\n  }\n\n  private async *listPagingAll(\n    location: string,\n    galleryUniqueName: string,\n    galleryImageName: string,\n    options?: SharedGalleryImageVersionsListOptionalParams\n  ): AsyncIterableIterator<SharedGalleryImageVersion> {\n    for await (const page of this.listPagingPage(\n      location,\n      galleryUniqueName,\n      galleryImageName,\n      options\n    )) {\n      yield* page;\n    }\n  }\n\n  /**\n   * List shared gallery image versions by subscription id or tenant id.\n   * @param location Resource location.\n   * @param galleryUniqueName The unique name of the Shared Gallery.\n   * @param galleryImageName The name of the Shared Gallery Image Definition from which the Image\n   *                         Versions are to be listed.\n   * @param options The options parameters.\n   */\n  private _list(\n    location: string,\n    galleryUniqueName: string,\n    galleryImageName: string,\n    options?: SharedGalleryImageVersionsListOptionalParams\n  ): Promise<SharedGalleryImageVersionsListResponse> {\n    return this.client.sendOperationRequest(\n      { location, galleryUniqueName, galleryImageName, options },\n      listOperationSpec\n    );\n  }\n\n  /**\n   * Get a shared gallery image version by subscription id or tenant id.\n   * @param location Resource location.\n   * @param galleryUniqueName The unique name of the Shared Gallery.\n   * @param galleryImageName The name of the Shared Gallery Image Definition from which the Image\n   *                         Versions are to be listed.\n   * @param galleryImageVersionName The name of the gallery image version to be created. Needs to follow\n   *                                semantic version name pattern: The allowed characters are digit and period. Digits must be within\n   *                                the range of a 32-bit integer. Format: <MajorVersion>.<MinorVersion>.<Patch>\n   * @param options The options parameters.\n   */\n  get(\n    location: string,\n    galleryUniqueName: string,\n    galleryImageName: string,\n    galleryImageVersionName: string,\n    options?: SharedGalleryImageVersionsGetOptionalParams\n  ): Promise<SharedGalleryImageVersionsGetResponse> {\n    return this.client.sendOperationRequest(\n      {\n        location,\n        galleryUniqueName,\n        galleryImageName,\n        galleryImageVersionName,\n        options\n      },\n      getOperationSpec\n    );\n  }\n\n  /**\n   * ListNext\n   * @param location Resource location.\n   * @param galleryUniqueName The unique name of the Shared Gallery.\n   * @param galleryImageName The name of the Shared Gallery Image Definition from which the Image\n   *                         Versions are to be listed.\n   * @param nextLink The nextLink from the previous successful call to the List method.\n   * @param options The options parameters.\n   */\n  private _listNext(\n    location: string,\n    galleryUniqueName: string,\n    galleryImageName: string,\n    nextLink: string,\n    options?: SharedGalleryImageVersionsListNextOptionalParams\n  ): Promise<SharedGalleryImageVersionsListNextResponse> {\n    return this.client.sendOperationRequest(\n      { location, galleryUniqueName, galleryImageName, nextLink, options },\n      listNextOperationSpec\n    );\n  }\n}\n// Operation Specifications\nconst serializer = coreClient.createSerializer(Mappers, /* isXml */ false);\n\nconst listOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/providers/Microsoft.Compute/locations/{location}/sharedGalleries/{galleryUniqueName}/images/{galleryImageName}/versions\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.SharedGalleryImageVersionList\n    },\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  queryParameters: [Parameters.apiVersion1, Parameters.sharedTo],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.location,\n    Parameters.galleryImageName,\n    Parameters.galleryUniqueName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst getOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/providers/Microsoft.Compute/locations/{location}/sharedGalleries/{galleryUniqueName}/images/{galleryImageName}/versions/{galleryImageVersionName}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.SharedGalleryImageVersion\n    },\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  queryParameters: [Parameters.apiVersion1],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.location,\n    Parameters.galleryImageName,\n    Parameters.galleryImageVersionName,\n    Parameters.galleryUniqueName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst listNextOperationSpec: coreClient.OperationSpec = {\n  path: \"{nextLink}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.SharedGalleryImageVersionList\n    },\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  queryParameters: [Parameters.apiVersion1, Parameters.sharedTo],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.nextLink,\n    Parameters.location,\n    Parameters.galleryImageName,\n    Parameters.galleryUniqueName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport { CommunityGalleries } from \"../operationsInterfaces\";\nimport * as coreClient from \"@azure/core-client\";\nimport * as Mappers from \"../models/mappers\";\nimport * as Parameters from \"../models/parameters\";\nimport { ComputeManagementClient } from \"../computeManagementClient\";\nimport {\n  CommunityGalleriesGetOptionalParams,\n  CommunityGalleriesGetResponse\n} from \"../models\";\n\n/** Class containing CommunityGalleries operations. */\nexport class CommunityGalleriesImpl implements CommunityGalleries {\n  private readonly client: ComputeManagementClient;\n\n  /**\n   * Initialize a new instance of the class CommunityGalleries class.\n   * @param client Reference to the service client\n   */\n  constructor(client: ComputeManagementClient) {\n    this.client = client;\n  }\n\n  /**\n   * Get a community gallery by gallery public name.\n   * @param location Resource location.\n   * @param publicGalleryName The public name of the community gallery.\n   * @param options The options parameters.\n   */\n  get(\n    location: string,\n    publicGalleryName: string,\n    options?: CommunityGalleriesGetOptionalParams\n  ): Promise<CommunityGalleriesGetResponse> {\n    return this.client.sendOperationRequest(\n      { location, publicGalleryName, options },\n      getOperationSpec\n    );\n  }\n}\n// Operation Specifications\nconst serializer = coreClient.createSerializer(Mappers, /* isXml */ false);\n\nconst getOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/providers/Microsoft.Compute/locations/{location}/communityGalleries/{publicGalleryName}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.CommunityGallery\n    },\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  queryParameters: [Parameters.apiVersion1],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.location,\n    Parameters.publicGalleryName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport { CommunityGalleryImages } from \"../operationsInterfaces\";\nimport * as coreClient from \"@azure/core-client\";\nimport * as Mappers from \"../models/mappers\";\nimport * as Parameters from \"../models/parameters\";\nimport { ComputeManagementClient } from \"../computeManagementClient\";\nimport {\n  CommunityGalleryImagesGetOptionalParams,\n  CommunityGalleryImagesGetResponse\n} from \"../models\";\n\n/** Class containing CommunityGalleryImages operations. */\nexport class CommunityGalleryImagesImpl implements CommunityGalleryImages {\n  private readonly client: ComputeManagementClient;\n\n  /**\n   * Initialize a new instance of the class CommunityGalleryImages class.\n   * @param client Reference to the service client\n   */\n  constructor(client: ComputeManagementClient) {\n    this.client = client;\n  }\n\n  /**\n   * Get a community gallery image.\n   * @param location Resource location.\n   * @param publicGalleryName The public name of the community gallery.\n   * @param galleryImageName The name of the community gallery image definition.\n   * @param options The options parameters.\n   */\n  get(\n    location: string,\n    publicGalleryName: string,\n    galleryImageName: string,\n    options?: CommunityGalleryImagesGetOptionalParams\n  ): Promise<CommunityGalleryImagesGetResponse> {\n    return this.client.sendOperationRequest(\n      { location, publicGalleryName, galleryImageName, options },\n      getOperationSpec\n    );\n  }\n}\n// Operation Specifications\nconst serializer = coreClient.createSerializer(Mappers, /* isXml */ false);\n\nconst getOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/providers/Microsoft.Compute/locations/{location}/communityGalleries/{publicGalleryName}/images/{galleryImageName}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.CommunityGalleryImage\n    },\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  queryParameters: [Parameters.apiVersion1],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.location,\n    Parameters.galleryImageName,\n    Parameters.publicGalleryName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport { CommunityGalleryImageVersions } from \"../operationsInterfaces\";\nimport * as coreClient from \"@azure/core-client\";\nimport * as Mappers from \"../models/mappers\";\nimport * as Parameters from \"../models/parameters\";\nimport { ComputeManagementClient } from \"../computeManagementClient\";\nimport {\n  CommunityGalleryImageVersionsGetOptionalParams,\n  CommunityGalleryImageVersionsGetResponse\n} from \"../models\";\n\n/** Class containing CommunityGalleryImageVersions operations. */\nexport class CommunityGalleryImageVersionsImpl\n  implements CommunityGalleryImageVersions {\n  private readonly client: ComputeManagementClient;\n\n  /**\n   * Initialize a new instance of the class CommunityGalleryImageVersions class.\n   * @param client Reference to the service client\n   */\n  constructor(client: ComputeManagementClient) {\n    this.client = client;\n  }\n\n  /**\n   * Get a community gallery image version.\n   * @param location Resource location.\n   * @param publicGalleryName The public name of the community gallery.\n   * @param galleryImageName The name of the community gallery image definition.\n   * @param galleryImageVersionName The name of the community gallery image version. Needs to follow\n   *                                semantic version name pattern: The allowed characters are digit and period. Digits must be within\n   *                                the range of a 32-bit integer. Format: <MajorVersion>.<MinorVersion>.<Patch>\n   * @param options The options parameters.\n   */\n  get(\n    location: string,\n    publicGalleryName: string,\n    galleryImageName: string,\n    galleryImageVersionName: string,\n    options?: CommunityGalleryImageVersionsGetOptionalParams\n  ): Promise<CommunityGalleryImageVersionsGetResponse> {\n    return this.client.sendOperationRequest(\n      {\n        location,\n        publicGalleryName,\n        galleryImageName,\n        galleryImageVersionName,\n        options\n      },\n      getOperationSpec\n    );\n  }\n}\n// Operation Specifications\nconst serializer = coreClient.createSerializer(Mappers, /* isXml */ false);\n\nconst getOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/providers/Microsoft.Compute/locations/{location}/communityGalleries/{publicGalleryName}/images/{galleryImageName}/versions/{galleryImageVersionName}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.CommunityGalleryImageVersion\n    },\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  queryParameters: [Parameters.apiVersion1],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.location,\n    Parameters.galleryImageName,\n    Parameters.galleryImageVersionName,\n    Parameters.publicGalleryName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport { PagedAsyncIterableIterator } from \"@azure/core-paging\";\nimport { CloudServiceRoleInstances } from \"../operationsInterfaces\";\nimport * as coreClient from \"@azure/core-client\";\nimport * as Mappers from \"../models/mappers\";\nimport * as Parameters from \"../models/parameters\";\nimport { ComputeManagementClient } from \"../computeManagementClient\";\nimport { PollerLike, PollOperationState, LroEngine } from \"@azure/core-lro\";\nimport { LroImpl } from \"../lroImpl\";\nimport {\n  RoleInstance,\n  CloudServiceRoleInstancesListNextOptionalParams,\n  CloudServiceRoleInstancesListOptionalParams,\n  CloudServiceRoleInstancesDeleteOptionalParams,\n  CloudServiceRoleInstancesGetOptionalParams,\n  CloudServiceRoleInstancesGetResponse,\n  CloudServiceRoleInstancesGetInstanceViewOptionalParams,\n  CloudServiceRoleInstancesGetInstanceViewResponse,\n  CloudServiceRoleInstancesListResponse,\n  CloudServiceRoleInstancesRestartOptionalParams,\n  CloudServiceRoleInstancesReimageOptionalParams,\n  CloudServiceRoleInstancesRebuildOptionalParams,\n  CloudServiceRoleInstancesGetRemoteDesktopFileOptionalParams,\n  CloudServiceRoleInstancesGetRemoteDesktopFileResponse,\n  CloudServiceRoleInstancesListNextResponse\n} from \"../models\";\n\n/// <reference lib=\"esnext.asynciterable\" />\n/** Class containing CloudServiceRoleInstances operations. */\nexport class CloudServiceRoleInstancesImpl\n  implements CloudServiceRoleInstances {\n  private readonly client: ComputeManagementClient;\n\n  /**\n   * Initialize a new instance of the class CloudServiceRoleInstances class.\n   * @param client Reference to the service client\n   */\n  constructor(client: ComputeManagementClient) {\n    this.client = client;\n  }\n\n  /**\n   * Gets the list of all role instances in a cloud service. Use nextLink property in the response to get\n   * the next page of role instances. Do this till nextLink is null to fetch all the role instances.\n   * @param resourceGroupName\n   * @param cloudServiceName\n   * @param options The options parameters.\n   */\n  public list(\n    resourceGroupName: string,\n    cloudServiceName: string,\n    options?: CloudServiceRoleInstancesListOptionalParams\n  ): PagedAsyncIterableIterator<RoleInstance> {\n    const iter = this.listPagingAll(\n      resourceGroupName,\n      cloudServiceName,\n      options\n    );\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: () => {\n        return this.listPagingPage(\n          resourceGroupName,\n          cloudServiceName,\n          options\n        );\n      }\n    };\n  }\n\n  private async *listPagingPage(\n    resourceGroupName: string,\n    cloudServiceName: string,\n    options?: CloudServiceRoleInstancesListOptionalParams\n  ): AsyncIterableIterator<RoleInstance[]> {\n    let result = await this._list(resourceGroupName, cloudServiceName, options);\n    yield result.value || [];\n    let continuationToken = result.nextLink;\n    while (continuationToken) {\n      result = await this._listNext(\n        resourceGroupName,\n        cloudServiceName,\n        continuationToken,\n        options\n      );\n      continuationToken = result.nextLink;\n      yield result.value || [];\n    }\n  }\n\n  private async *listPagingAll(\n    resourceGroupName: string,\n    cloudServiceName: string,\n    options?: CloudServiceRoleInstancesListOptionalParams\n  ): AsyncIterableIterator<RoleInstance> {\n    for await (const page of this.listPagingPage(\n      resourceGroupName,\n      cloudServiceName,\n      options\n    )) {\n      yield* page;\n    }\n  }\n\n  /**\n   * Deletes a role instance from a cloud service.\n   * @param roleInstanceName Name of the role instance.\n   * @param resourceGroupName\n   * @param cloudServiceName\n   * @param options The options parameters.\n   */\n  async beginDelete(\n    roleInstanceName: string,\n    resourceGroupName: string,\n    cloudServiceName: string,\n    options?: CloudServiceRoleInstancesDeleteOptionalParams\n  ): Promise<PollerLike<PollOperationState<void>, void>> {\n    const directSendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ): Promise<void> => {\n      return this.client.sendOperationRequest(args, spec);\n    };\n    const sendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ) => {\n      let currentRawResponse:\n        | coreClient.FullOperationResponse\n        | undefined = undefined;\n      const providedCallback = args.options?.onResponse;\n      const callback: coreClient.RawResponseCallback = (\n        rawResponse: coreClient.FullOperationResponse,\n        flatResponse: unknown\n      ) => {\n        currentRawResponse = rawResponse;\n        providedCallback?.(rawResponse, flatResponse);\n      };\n      const updatedArgs = {\n        ...args,\n        options: {\n          ...args.options,\n          onResponse: callback\n        }\n      };\n      const flatResponse = await directSendOperation(updatedArgs, spec);\n      return {\n        flatResponse,\n        rawResponse: {\n          statusCode: currentRawResponse!.status,\n          body: currentRawResponse!.parsedBody,\n          headers: currentRawResponse!.headers.toJSON()\n        }\n      };\n    };\n\n    const lro = new LroImpl(\n      sendOperation,\n      { roleInstanceName, resourceGroupName, cloudServiceName, options },\n      deleteOperationSpec\n    );\n    return new LroEngine(lro, {\n      resumeFrom: options?.resumeFrom,\n      intervalInMs: options?.updateIntervalInMs\n    });\n  }\n\n  /**\n   * Deletes a role instance from a cloud service.\n   * @param roleInstanceName Name of the role instance.\n   * @param resourceGroupName\n   * @param cloudServiceName\n   * @param options The options parameters.\n   */\n  async beginDeleteAndWait(\n    roleInstanceName: string,\n    resourceGroupName: string,\n    cloudServiceName: string,\n    options?: CloudServiceRoleInstancesDeleteOptionalParams\n  ): Promise<void> {\n    const poller = await this.beginDelete(\n      roleInstanceName,\n      resourceGroupName,\n      cloudServiceName,\n      options\n    );\n    return poller.pollUntilDone();\n  }\n\n  /**\n   * Gets a role instance from a cloud service.\n   * @param roleInstanceName Name of the role instance.\n   * @param resourceGroupName\n   * @param cloudServiceName\n   * @param options The options parameters.\n   */\n  get(\n    roleInstanceName: string,\n    resourceGroupName: string,\n    cloudServiceName: string,\n    options?: CloudServiceRoleInstancesGetOptionalParams\n  ): Promise<CloudServiceRoleInstancesGetResponse> {\n    return this.client.sendOperationRequest(\n      { roleInstanceName, resourceGroupName, cloudServiceName, options },\n      getOperationSpec\n    );\n  }\n\n  /**\n   * Retrieves information about the run-time state of a role instance in a cloud service.\n   * @param roleInstanceName Name of the role instance.\n   * @param resourceGroupName\n   * @param cloudServiceName\n   * @param options The options parameters.\n   */\n  getInstanceView(\n    roleInstanceName: string,\n    resourceGroupName: string,\n    cloudServiceName: string,\n    options?: CloudServiceRoleInstancesGetInstanceViewOptionalParams\n  ): Promise<CloudServiceRoleInstancesGetInstanceViewResponse> {\n    return this.client.sendOperationRequest(\n      { roleInstanceName, resourceGroupName, cloudServiceName, options },\n      getInstanceViewOperationSpec\n    );\n  }\n\n  /**\n   * Gets the list of all role instances in a cloud service. Use nextLink property in the response to get\n   * the next page of role instances. Do this till nextLink is null to fetch all the role instances.\n   * @param resourceGroupName\n   * @param cloudServiceName\n   * @param options The options parameters.\n   */\n  private _list(\n    resourceGroupName: string,\n    cloudServiceName: string,\n    options?: CloudServiceRoleInstancesListOptionalParams\n  ): Promise<CloudServiceRoleInstancesListResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, cloudServiceName, options },\n      listOperationSpec\n    );\n  }\n\n  /**\n   * The Reboot Role Instance asynchronous operation requests a reboot of a role instance in the cloud\n   * service.\n   * @param roleInstanceName Name of the role instance.\n   * @param resourceGroupName\n   * @param cloudServiceName\n   * @param options The options parameters.\n   */\n  async beginRestart(\n    roleInstanceName: string,\n    resourceGroupName: string,\n    cloudServiceName: string,\n    options?: CloudServiceRoleInstancesRestartOptionalParams\n  ): Promise<PollerLike<PollOperationState<void>, void>> {\n    const directSendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ): Promise<void> => {\n      return this.client.sendOperationRequest(args, spec);\n    };\n    const sendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ) => {\n      let currentRawResponse:\n        | coreClient.FullOperationResponse\n        | undefined = undefined;\n      const providedCallback = args.options?.onResponse;\n      const callback: coreClient.RawResponseCallback = (\n        rawResponse: coreClient.FullOperationResponse,\n        flatResponse: unknown\n      ) => {\n        currentRawResponse = rawResponse;\n        providedCallback?.(rawResponse, flatResponse);\n      };\n      const updatedArgs = {\n        ...args,\n        options: {\n          ...args.options,\n          onResponse: callback\n        }\n      };\n      const flatResponse = await directSendOperation(updatedArgs, spec);\n      return {\n        flatResponse,\n        rawResponse: {\n          statusCode: currentRawResponse!.status,\n          body: currentRawResponse!.parsedBody,\n          headers: currentRawResponse!.headers.toJSON()\n        }\n      };\n    };\n\n    const lro = new LroImpl(\n      sendOperation,\n      { roleInstanceName, resourceGroupName, cloudServiceName, options },\n      restartOperationSpec\n    );\n    return new LroEngine(lro, {\n      resumeFrom: options?.resumeFrom,\n      intervalInMs: options?.updateIntervalInMs\n    });\n  }\n\n  /**\n   * The Reboot Role Instance asynchronous operation requests a reboot of a role instance in the cloud\n   * service.\n   * @param roleInstanceName Name of the role instance.\n   * @param resourceGroupName\n   * @param cloudServiceName\n   * @param options The options parameters.\n   */\n  async beginRestartAndWait(\n    roleInstanceName: string,\n    resourceGroupName: string,\n    cloudServiceName: string,\n    options?: CloudServiceRoleInstancesRestartOptionalParams\n  ): Promise<void> {\n    const poller = await this.beginRestart(\n      roleInstanceName,\n      resourceGroupName,\n      cloudServiceName,\n      options\n    );\n    return poller.pollUntilDone();\n  }\n\n  /**\n   * The Reimage Role Instance asynchronous operation reinstalls the operating system on instances of web\n   * roles or worker roles.\n   * @param roleInstanceName Name of the role instance.\n   * @param resourceGroupName\n   * @param cloudServiceName\n   * @param options The options parameters.\n   */\n  async beginReimage(\n    roleInstanceName: string,\n    resourceGroupName: string,\n    cloudServiceName: string,\n    options?: CloudServiceRoleInstancesReimageOptionalParams\n  ): Promise<PollerLike<PollOperationState<void>, void>> {\n    const directSendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ): Promise<void> => {\n      return this.client.sendOperationRequest(args, spec);\n    };\n    const sendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ) => {\n      let currentRawResponse:\n        | coreClient.FullOperationResponse\n        | undefined = undefined;\n      const providedCallback = args.options?.onResponse;\n      const callback: coreClient.RawResponseCallback = (\n        rawResponse: coreClient.FullOperationResponse,\n        flatResponse: unknown\n      ) => {\n        currentRawResponse = rawResponse;\n        providedCallback?.(rawResponse, flatResponse);\n      };\n      const updatedArgs = {\n        ...args,\n        options: {\n          ...args.options,\n          onResponse: callback\n        }\n      };\n      const flatResponse = await directSendOperation(updatedArgs, spec);\n      return {\n        flatResponse,\n        rawResponse: {\n          statusCode: currentRawResponse!.status,\n          body: currentRawResponse!.parsedBody,\n          headers: currentRawResponse!.headers.toJSON()\n        }\n      };\n    };\n\n    const lro = new LroImpl(\n      sendOperation,\n      { roleInstanceName, resourceGroupName, cloudServiceName, options },\n      reimageOperationSpec\n    );\n    return new LroEngine(lro, {\n      resumeFrom: options?.resumeFrom,\n      intervalInMs: options?.updateIntervalInMs\n    });\n  }\n\n  /**\n   * The Reimage Role Instance asynchronous operation reinstalls the operating system on instances of web\n   * roles or worker roles.\n   * @param roleInstanceName Name of the role instance.\n   * @param resourceGroupName\n   * @param cloudServiceName\n   * @param options The options parameters.\n   */\n  async beginReimageAndWait(\n    roleInstanceName: string,\n    resourceGroupName: string,\n    cloudServiceName: string,\n    options?: CloudServiceRoleInstancesReimageOptionalParams\n  ): Promise<void> {\n    const poller = await this.beginReimage(\n      roleInstanceName,\n      resourceGroupName,\n      cloudServiceName,\n      options\n    );\n    return poller.pollUntilDone();\n  }\n\n  /**\n   * The Rebuild Role Instance asynchronous operation reinstalls the operating system on instances of web\n   * roles or worker roles and initializes the storage resources that are used by them. If you do not\n   * want to initialize storage resources, you can use Reimage Role Instance.\n   * @param roleInstanceName Name of the role instance.\n   * @param resourceGroupName\n   * @param cloudServiceName\n   * @param options The options parameters.\n   */\n  async beginRebuild(\n    roleInstanceName: string,\n    resourceGroupName: string,\n    cloudServiceName: string,\n    options?: CloudServiceRoleInstancesRebuildOptionalParams\n  ): Promise<PollerLike<PollOperationState<void>, void>> {\n    const directSendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ): Promise<void> => {\n      return this.client.sendOperationRequest(args, spec);\n    };\n    const sendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ) => {\n      let currentRawResponse:\n        | coreClient.FullOperationResponse\n        | undefined = undefined;\n      const providedCallback = args.options?.onResponse;\n      const callback: coreClient.RawResponseCallback = (\n        rawResponse: coreClient.FullOperationResponse,\n        flatResponse: unknown\n      ) => {\n        currentRawResponse = rawResponse;\n        providedCallback?.(rawResponse, flatResponse);\n      };\n      const updatedArgs = {\n        ...args,\n        options: {\n          ...args.options,\n          onResponse: callback\n        }\n      };\n      const flatResponse = await directSendOperation(updatedArgs, spec);\n      return {\n        flatResponse,\n        rawResponse: {\n          statusCode: currentRawResponse!.status,\n          body: currentRawResponse!.parsedBody,\n          headers: currentRawResponse!.headers.toJSON()\n        }\n      };\n    };\n\n    const lro = new LroImpl(\n      sendOperation,\n      { roleInstanceName, resourceGroupName, cloudServiceName, options },\n      rebuildOperationSpec\n    );\n    return new LroEngine(lro, {\n      resumeFrom: options?.resumeFrom,\n      intervalInMs: options?.updateIntervalInMs\n    });\n  }\n\n  /**\n   * The Rebuild Role Instance asynchronous operation reinstalls the operating system on instances of web\n   * roles or worker roles and initializes the storage resources that are used by them. If you do not\n   * want to initialize storage resources, you can use Reimage Role Instance.\n   * @param roleInstanceName Name of the role instance.\n   * @param resourceGroupName\n   * @param cloudServiceName\n   * @param options The options parameters.\n   */\n  async beginRebuildAndWait(\n    roleInstanceName: string,\n    resourceGroupName: string,\n    cloudServiceName: string,\n    options?: CloudServiceRoleInstancesRebuildOptionalParams\n  ): Promise<void> {\n    const poller = await this.beginRebuild(\n      roleInstanceName,\n      resourceGroupName,\n      cloudServiceName,\n      options\n    );\n    return poller.pollUntilDone();\n  }\n\n  /**\n   * Gets a remote desktop file for a role instance in a cloud service.\n   * @param roleInstanceName Name of the role instance.\n   * @param resourceGroupName\n   * @param cloudServiceName\n   * @param options The options parameters.\n   */\n  getRemoteDesktopFile(\n    roleInstanceName: string,\n    resourceGroupName: string,\n    cloudServiceName: string,\n    options?: CloudServiceRoleInstancesGetRemoteDesktopFileOptionalParams\n  ): Promise<CloudServiceRoleInstancesGetRemoteDesktopFileResponse> {\n    return this.client.sendOperationRequest(\n      { roleInstanceName, resourceGroupName, cloudServiceName, options },\n      getRemoteDesktopFileOperationSpec\n    );\n  }\n\n  /**\n   * ListNext\n   * @param resourceGroupName\n   * @param cloudServiceName\n   * @param nextLink The nextLink from the previous successful call to the List method.\n   * @param options The options parameters.\n   */\n  private _listNext(\n    resourceGroupName: string,\n    cloudServiceName: string,\n    nextLink: string,\n    options?: CloudServiceRoleInstancesListNextOptionalParams\n  ): Promise<CloudServiceRoleInstancesListNextResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, cloudServiceName, nextLink, options },\n      listNextOperationSpec\n    );\n  }\n}\n// Operation Specifications\nconst serializer = coreClient.createSerializer(Mappers, /* isXml */ false);\n\nconst deleteOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/cloudServices/{cloudServiceName}/roleInstances/{roleInstanceName}\",\n  httpMethod: \"DELETE\",\n  responses: {\n    200: {},\n    201: {},\n    202: {},\n    204: {},\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  queryParameters: [Parameters.apiVersion4],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.resourceGroupName,\n    Parameters.subscriptionId,\n    Parameters.roleInstanceName,\n    Parameters.cloudServiceName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst getOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/cloudServices/{cloudServiceName}/roleInstances/{roleInstanceName}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.RoleInstance\n    },\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  queryParameters: [Parameters.expand1, Parameters.apiVersion4],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.resourceGroupName,\n    Parameters.subscriptionId,\n    Parameters.roleInstanceName,\n    Parameters.cloudServiceName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst getInstanceViewOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/cloudServices/{cloudServiceName}/roleInstances/{roleInstanceName}/instanceView\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.RoleInstanceView\n    },\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  queryParameters: [Parameters.apiVersion4],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.resourceGroupName,\n    Parameters.subscriptionId,\n    Parameters.roleInstanceName,\n    Parameters.cloudServiceName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst listOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/cloudServices/{cloudServiceName}/roleInstances\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.RoleInstanceListResult\n    },\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  queryParameters: [Parameters.expand1, Parameters.apiVersion4],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.resourceGroupName,\n    Parameters.subscriptionId,\n    Parameters.cloudServiceName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst restartOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/cloudServices/{cloudServiceName}/roleInstances/{roleInstanceName}/restart\",\n  httpMethod: \"POST\",\n  responses: {\n    200: {},\n    201: {},\n    202: {},\n    204: {},\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  queryParameters: [Parameters.apiVersion4],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.resourceGroupName,\n    Parameters.subscriptionId,\n    Parameters.roleInstanceName,\n    Parameters.cloudServiceName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst reimageOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/cloudServices/{cloudServiceName}/roleInstances/{roleInstanceName}/reimage\",\n  httpMethod: \"POST\",\n  responses: {\n    200: {},\n    201: {},\n    202: {},\n    204: {},\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  queryParameters: [Parameters.apiVersion4],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.resourceGroupName,\n    Parameters.subscriptionId,\n    Parameters.roleInstanceName,\n    Parameters.cloudServiceName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst rebuildOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/cloudServices/{cloudServiceName}/roleInstances/{roleInstanceName}/rebuild\",\n  httpMethod: \"POST\",\n  responses: {\n    200: {},\n    201: {},\n    202: {},\n    204: {},\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  queryParameters: [Parameters.apiVersion4],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.resourceGroupName,\n    Parameters.subscriptionId,\n    Parameters.roleInstanceName,\n    Parameters.cloudServiceName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst getRemoteDesktopFileOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/cloudServices/{cloudServiceName}/roleInstances/{roleInstanceName}/remoteDesktopFile\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: { type: { name: \"Stream\" }, serializedName: \"parsedResponse\" }\n    },\n    default: {}\n  },\n  queryParameters: [Parameters.apiVersion4],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.resourceGroupName,\n    Parameters.subscriptionId,\n    Parameters.roleInstanceName,\n    Parameters.cloudServiceName\n  ],\n  headerParameters: [Parameters.accept2],\n  serializer\n};\nconst listNextOperationSpec: coreClient.OperationSpec = {\n  path: \"{nextLink}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.RoleInstanceListResult\n    },\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  queryParameters: [Parameters.expand1, Parameters.apiVersion4],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.resourceGroupName,\n    Parameters.subscriptionId,\n    Parameters.nextLink,\n    Parameters.cloudServiceName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport { PagedAsyncIterableIterator } from \"@azure/core-paging\";\nimport { CloudServiceRoles } from \"../operationsInterfaces\";\nimport * as coreClient from \"@azure/core-client\";\nimport * as Mappers from \"../models/mappers\";\nimport * as Parameters from \"../models/parameters\";\nimport { ComputeManagementClient } from \"../computeManagementClient\";\nimport {\n  CloudServiceRole,\n  CloudServiceRolesListNextOptionalParams,\n  CloudServiceRolesListOptionalParams,\n  CloudServiceRolesGetOptionalParams,\n  CloudServiceRolesGetResponse,\n  CloudServiceRolesListResponse,\n  CloudServiceRolesListNextResponse\n} from \"../models\";\n\n/// <reference lib=\"esnext.asynciterable\" />\n/** Class containing CloudServiceRoles operations. */\nexport class CloudServiceRolesImpl implements CloudServiceRoles {\n  private readonly client: ComputeManagementClient;\n\n  /**\n   * Initialize a new instance of the class CloudServiceRoles class.\n   * @param client Reference to the service client\n   */\n  constructor(client: ComputeManagementClient) {\n    this.client = client;\n  }\n\n  /**\n   * Gets a list of all roles in a cloud service. Use nextLink property in the response to get the next\n   * page of roles. Do this till nextLink is null to fetch all the roles.\n   * @param resourceGroupName\n   * @param cloudServiceName\n   * @param options The options parameters.\n   */\n  public list(\n    resourceGroupName: string,\n    cloudServiceName: string,\n    options?: CloudServiceRolesListOptionalParams\n  ): PagedAsyncIterableIterator<CloudServiceRole> {\n    const iter = this.listPagingAll(\n      resourceGroupName,\n      cloudServiceName,\n      options\n    );\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: () => {\n        return this.listPagingPage(\n          resourceGroupName,\n          cloudServiceName,\n          options\n        );\n      }\n    };\n  }\n\n  private async *listPagingPage(\n    resourceGroupName: string,\n    cloudServiceName: string,\n    options?: CloudServiceRolesListOptionalParams\n  ): AsyncIterableIterator<CloudServiceRole[]> {\n    let result = await this._list(resourceGroupName, cloudServiceName, options);\n    yield result.value || [];\n    let continuationToken = result.nextLink;\n    while (continuationToken) {\n      result = await this._listNext(\n        resourceGroupName,\n        cloudServiceName,\n        continuationToken,\n        options\n      );\n      continuationToken = result.nextLink;\n      yield result.value || [];\n    }\n  }\n\n  private async *listPagingAll(\n    resourceGroupName: string,\n    cloudServiceName: string,\n    options?: CloudServiceRolesListOptionalParams\n  ): AsyncIterableIterator<CloudServiceRole> {\n    for await (const page of this.listPagingPage(\n      resourceGroupName,\n      cloudServiceName,\n      options\n    )) {\n      yield* page;\n    }\n  }\n\n  /**\n   * Gets a role from a cloud service.\n   * @param roleName Name of the role.\n   * @param resourceGroupName\n   * @param cloudServiceName\n   * @param options The options parameters.\n   */\n  get(\n    roleName: string,\n    resourceGroupName: string,\n    cloudServiceName: string,\n    options?: CloudServiceRolesGetOptionalParams\n  ): Promise<CloudServiceRolesGetResponse> {\n    return this.client.sendOperationRequest(\n      { roleName, resourceGroupName, cloudServiceName, options },\n      getOperationSpec\n    );\n  }\n\n  /**\n   * Gets a list of all roles in a cloud service. Use nextLink property in the response to get the next\n   * page of roles. Do this till nextLink is null to fetch all the roles.\n   * @param resourceGroupName\n   * @param cloudServiceName\n   * @param options The options parameters.\n   */\n  private _list(\n    resourceGroupName: string,\n    cloudServiceName: string,\n    options?: CloudServiceRolesListOptionalParams\n  ): Promise<CloudServiceRolesListResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, cloudServiceName, options },\n      listOperationSpec\n    );\n  }\n\n  /**\n   * ListNext\n   * @param resourceGroupName\n   * @param cloudServiceName\n   * @param nextLink The nextLink from the previous successful call to the List method.\n   * @param options The options parameters.\n   */\n  private _listNext(\n    resourceGroupName: string,\n    cloudServiceName: string,\n    nextLink: string,\n    options?: CloudServiceRolesListNextOptionalParams\n  ): Promise<CloudServiceRolesListNextResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, cloudServiceName, nextLink, options },\n      listNextOperationSpec\n    );\n  }\n}\n// Operation Specifications\nconst serializer = coreClient.createSerializer(Mappers, /* isXml */ false);\n\nconst getOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/cloudServices/{cloudServiceName}/roles/{roleName}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.CloudServiceRole\n    },\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  queryParameters: [Parameters.apiVersion4],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.resourceGroupName,\n    Parameters.subscriptionId,\n    Parameters.cloudServiceName,\n    Parameters.roleName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst listOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/cloudServices/{cloudServiceName}/roles\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.CloudServiceRoleListResult\n    },\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  queryParameters: [Parameters.apiVersion4],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.resourceGroupName,\n    Parameters.subscriptionId,\n    Parameters.cloudServiceName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst listNextOperationSpec: coreClient.OperationSpec = {\n  path: \"{nextLink}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.CloudServiceRoleListResult\n    },\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  queryParameters: [Parameters.apiVersion4],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.resourceGroupName,\n    Parameters.subscriptionId,\n    Parameters.nextLink,\n    Parameters.cloudServiceName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport { PagedAsyncIterableIterator } from \"@azure/core-paging\";\nimport { CloudServices } from \"../operationsInterfaces\";\nimport * as coreClient from \"@azure/core-client\";\nimport * as Mappers from \"../models/mappers\";\nimport * as Parameters from \"../models/parameters\";\nimport { ComputeManagementClient } from \"../computeManagementClient\";\nimport { PollerLike, PollOperationState, LroEngine } from \"@azure/core-lro\";\nimport { LroImpl } from \"../lroImpl\";\nimport {\n  CloudService,\n  CloudServicesListAllNextOptionalParams,\n  CloudServicesListAllOptionalParams,\n  CloudServicesListNextOptionalParams,\n  CloudServicesListOptionalParams,\n  CloudServicesCreateOrUpdateOptionalParams,\n  CloudServicesCreateOrUpdateResponse,\n  CloudServicesUpdateOptionalParams,\n  CloudServicesUpdateResponse,\n  CloudServicesDeleteOptionalParams,\n  CloudServicesGetOptionalParams,\n  CloudServicesGetResponse,\n  CloudServicesGetInstanceViewOptionalParams,\n  CloudServicesGetInstanceViewResponse,\n  CloudServicesListAllResponse,\n  CloudServicesListResponse,\n  CloudServicesStartOptionalParams,\n  CloudServicesPowerOffOptionalParams,\n  CloudServicesRestartOptionalParams,\n  CloudServicesReimageOptionalParams,\n  CloudServicesRebuildOptionalParams,\n  CloudServicesDeleteInstancesOptionalParams,\n  CloudServicesListAllNextResponse,\n  CloudServicesListNextResponse\n} from \"../models\";\n\n/// <reference lib=\"esnext.asynciterable\" />\n/** Class containing CloudServices operations. */\nexport class CloudServicesImpl implements CloudServices {\n  private readonly client: ComputeManagementClient;\n\n  /**\n   * Initialize a new instance of the class CloudServices class.\n   * @param client Reference to the service client\n   */\n  constructor(client: ComputeManagementClient) {\n    this.client = client;\n  }\n\n  /**\n   * Gets a list of all cloud services in the subscription, regardless of the associated resource group.\n   * Use nextLink property in the response to get the next page of Cloud Services. Do this till nextLink\n   * is null to fetch all the Cloud Services.\n   * @param options The options parameters.\n   */\n  public listAll(\n    options?: CloudServicesListAllOptionalParams\n  ): PagedAsyncIterableIterator<CloudService> {\n    const iter = this.listAllPagingAll(options);\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: () => {\n        return this.listAllPagingPage(options);\n      }\n    };\n  }\n\n  private async *listAllPagingPage(\n    options?: CloudServicesListAllOptionalParams\n  ): AsyncIterableIterator<CloudService[]> {\n    let result = await this._listAll(options);\n    yield result.value || [];\n    let continuationToken = result.nextLink;\n    while (continuationToken) {\n      result = await this._listAllNext(continuationToken, options);\n      continuationToken = result.nextLink;\n      yield result.value || [];\n    }\n  }\n\n  private async *listAllPagingAll(\n    options?: CloudServicesListAllOptionalParams\n  ): AsyncIterableIterator<CloudService> {\n    for await (const page of this.listAllPagingPage(options)) {\n      yield* page;\n    }\n  }\n\n  /**\n   * Gets a list of all cloud services under a resource group. Use nextLink property in the response to\n   * get the next page of Cloud Services. Do this till nextLink is null to fetch all the Cloud Services.\n   * @param resourceGroupName Name of the resource group.\n   * @param options The options parameters.\n   */\n  public list(\n    resourceGroupName: string,\n    options?: CloudServicesListOptionalParams\n  ): PagedAsyncIterableIterator<CloudService> {\n    const iter = this.listPagingAll(resourceGroupName, options);\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: () => {\n        return this.listPagingPage(resourceGroupName, options);\n      }\n    };\n  }\n\n  private async *listPagingPage(\n    resourceGroupName: string,\n    options?: CloudServicesListOptionalParams\n  ): AsyncIterableIterator<CloudService[]> {\n    let result = await this._list(resourceGroupName, options);\n    yield result.value || [];\n    let continuationToken = result.nextLink;\n    while (continuationToken) {\n      result = await this._listNext(\n        resourceGroupName,\n        continuationToken,\n        options\n      );\n      continuationToken = result.nextLink;\n      yield result.value || [];\n    }\n  }\n\n  private async *listPagingAll(\n    resourceGroupName: string,\n    options?: CloudServicesListOptionalParams\n  ): AsyncIterableIterator<CloudService> {\n    for await (const page of this.listPagingPage(resourceGroupName, options)) {\n      yield* page;\n    }\n  }\n\n  /**\n   * Create or update a cloud service. Please note some properties can be set only during cloud service\n   * creation.\n   * @param resourceGroupName Name of the resource group.\n   * @param cloudServiceName Name of the cloud service.\n   * @param options The options parameters.\n   */\n  async beginCreateOrUpdate(\n    resourceGroupName: string,\n    cloudServiceName: string,\n    options?: CloudServicesCreateOrUpdateOptionalParams\n  ): Promise<\n    PollerLike<\n      PollOperationState<CloudServicesCreateOrUpdateResponse>,\n      CloudServicesCreateOrUpdateResponse\n    >\n  > {\n    const directSendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ): Promise<CloudServicesCreateOrUpdateResponse> => {\n      return this.client.sendOperationRequest(args, spec);\n    };\n    const sendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ) => {\n      let currentRawResponse:\n        | coreClient.FullOperationResponse\n        | undefined = undefined;\n      const providedCallback = args.options?.onResponse;\n      const callback: coreClient.RawResponseCallback = (\n        rawResponse: coreClient.FullOperationResponse,\n        flatResponse: unknown\n      ) => {\n        currentRawResponse = rawResponse;\n        providedCallback?.(rawResponse, flatResponse);\n      };\n      const updatedArgs = {\n        ...args,\n        options: {\n          ...args.options,\n          onResponse: callback\n        }\n      };\n      const flatResponse = await directSendOperation(updatedArgs, spec);\n      return {\n        flatResponse,\n        rawResponse: {\n          statusCode: currentRawResponse!.status,\n          body: currentRawResponse!.parsedBody,\n          headers: currentRawResponse!.headers.toJSON()\n        }\n      };\n    };\n\n    const lro = new LroImpl(\n      sendOperation,\n      { resourceGroupName, cloudServiceName, options },\n      createOrUpdateOperationSpec\n    );\n    return new LroEngine(lro, {\n      resumeFrom: options?.resumeFrom,\n      intervalInMs: options?.updateIntervalInMs\n    });\n  }\n\n  /**\n   * Create or update a cloud service. Please note some properties can be set only during cloud service\n   * creation.\n   * @param resourceGroupName Name of the resource group.\n   * @param cloudServiceName Name of the cloud service.\n   * @param options The options parameters.\n   */\n  async beginCreateOrUpdateAndWait(\n    resourceGroupName: string,\n    cloudServiceName: string,\n    options?: CloudServicesCreateOrUpdateOptionalParams\n  ): Promise<CloudServicesCreateOrUpdateResponse> {\n    const poller = await this.beginCreateOrUpdate(\n      resourceGroupName,\n      cloudServiceName,\n      options\n    );\n    return poller.pollUntilDone();\n  }\n\n  /**\n   * Update a cloud service.\n   * @param resourceGroupName Name of the resource group.\n   * @param cloudServiceName Name of the cloud service.\n   * @param options The options parameters.\n   */\n  async beginUpdate(\n    resourceGroupName: string,\n    cloudServiceName: string,\n    options?: CloudServicesUpdateOptionalParams\n  ): Promise<\n    PollerLike<\n      PollOperationState<CloudServicesUpdateResponse>,\n      CloudServicesUpdateResponse\n    >\n  > {\n    const directSendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ): Promise<CloudServicesUpdateResponse> => {\n      return this.client.sendOperationRequest(args, spec);\n    };\n    const sendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ) => {\n      let currentRawResponse:\n        | coreClient.FullOperationResponse\n        | undefined = undefined;\n      const providedCallback = args.options?.onResponse;\n      const callback: coreClient.RawResponseCallback = (\n        rawResponse: coreClient.FullOperationResponse,\n        flatResponse: unknown\n      ) => {\n        currentRawResponse = rawResponse;\n        providedCallback?.(rawResponse, flatResponse);\n      };\n      const updatedArgs = {\n        ...args,\n        options: {\n          ...args.options,\n          onResponse: callback\n        }\n      };\n      const flatResponse = await directSendOperation(updatedArgs, spec);\n      return {\n        flatResponse,\n        rawResponse: {\n          statusCode: currentRawResponse!.status,\n          body: currentRawResponse!.parsedBody,\n          headers: currentRawResponse!.headers.toJSON()\n        }\n      };\n    };\n\n    const lro = new LroImpl(\n      sendOperation,\n      { resourceGroupName, cloudServiceName, options },\n      updateOperationSpec\n    );\n    return new LroEngine(lro, {\n      resumeFrom: options?.resumeFrom,\n      intervalInMs: options?.updateIntervalInMs\n    });\n  }\n\n  /**\n   * Update a cloud service.\n   * @param resourceGroupName Name of the resource group.\n   * @param cloudServiceName Name of the cloud service.\n   * @param options The options parameters.\n   */\n  async beginUpdateAndWait(\n    resourceGroupName: string,\n    cloudServiceName: string,\n    options?: CloudServicesUpdateOptionalParams\n  ): Promise<CloudServicesUpdateResponse> {\n    const poller = await this.beginUpdate(\n      resourceGroupName,\n      cloudServiceName,\n      options\n    );\n    return poller.pollUntilDone();\n  }\n\n  /**\n   * Deletes a cloud service.\n   * @param resourceGroupName Name of the resource group.\n   * @param cloudServiceName Name of the cloud service.\n   * @param options The options parameters.\n   */\n  async beginDelete(\n    resourceGroupName: string,\n    cloudServiceName: string,\n    options?: CloudServicesDeleteOptionalParams\n  ): Promise<PollerLike<PollOperationState<void>, void>> {\n    const directSendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ): Promise<void> => {\n      return this.client.sendOperationRequest(args, spec);\n    };\n    const sendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ) => {\n      let currentRawResponse:\n        | coreClient.FullOperationResponse\n        | undefined = undefined;\n      const providedCallback = args.options?.onResponse;\n      const callback: coreClient.RawResponseCallback = (\n        rawResponse: coreClient.FullOperationResponse,\n        flatResponse: unknown\n      ) => {\n        currentRawResponse = rawResponse;\n        providedCallback?.(rawResponse, flatResponse);\n      };\n      const updatedArgs = {\n        ...args,\n        options: {\n          ...args.options,\n          onResponse: callback\n        }\n      };\n      const flatResponse = await directSendOperation(updatedArgs, spec);\n      return {\n        flatResponse,\n        rawResponse: {\n          statusCode: currentRawResponse!.status,\n          body: currentRawResponse!.parsedBody,\n          headers: currentRawResponse!.headers.toJSON()\n        }\n      };\n    };\n\n    const lro = new LroImpl(\n      sendOperation,\n      { resourceGroupName, cloudServiceName, options },\n      deleteOperationSpec\n    );\n    return new LroEngine(lro, {\n      resumeFrom: options?.resumeFrom,\n      intervalInMs: options?.updateIntervalInMs\n    });\n  }\n\n  /**\n   * Deletes a cloud service.\n   * @param resourceGroupName Name of the resource group.\n   * @param cloudServiceName Name of the cloud service.\n   * @param options The options parameters.\n   */\n  async beginDeleteAndWait(\n    resourceGroupName: string,\n    cloudServiceName: string,\n    options?: CloudServicesDeleteOptionalParams\n  ): Promise<void> {\n    const poller = await this.beginDelete(\n      resourceGroupName,\n      cloudServiceName,\n      options\n    );\n    return poller.pollUntilDone();\n  }\n\n  /**\n   * Display information about a cloud service.\n   * @param resourceGroupName Name of the resource group.\n   * @param cloudServiceName Name of the cloud service.\n   * @param options The options parameters.\n   */\n  get(\n    resourceGroupName: string,\n    cloudServiceName: string,\n    options?: CloudServicesGetOptionalParams\n  ): Promise<CloudServicesGetResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, cloudServiceName, options },\n      getOperationSpec\n    );\n  }\n\n  /**\n   * Gets the status of a cloud service.\n   * @param resourceGroupName Name of the resource group.\n   * @param cloudServiceName Name of the cloud service.\n   * @param options The options parameters.\n   */\n  getInstanceView(\n    resourceGroupName: string,\n    cloudServiceName: string,\n    options?: CloudServicesGetInstanceViewOptionalParams\n  ): Promise<CloudServicesGetInstanceViewResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, cloudServiceName, options },\n      getInstanceViewOperationSpec\n    );\n  }\n\n  /**\n   * Gets a list of all cloud services in the subscription, regardless of the associated resource group.\n   * Use nextLink property in the response to get the next page of Cloud Services. Do this till nextLink\n   * is null to fetch all the Cloud Services.\n   * @param options The options parameters.\n   */\n  private _listAll(\n    options?: CloudServicesListAllOptionalParams\n  ): Promise<CloudServicesListAllResponse> {\n    return this.client.sendOperationRequest({ options }, listAllOperationSpec);\n  }\n\n  /**\n   * Gets a list of all cloud services under a resource group. Use nextLink property in the response to\n   * get the next page of Cloud Services. Do this till nextLink is null to fetch all the Cloud Services.\n   * @param resourceGroupName Name of the resource group.\n   * @param options The options parameters.\n   */\n  private _list(\n    resourceGroupName: string,\n    options?: CloudServicesListOptionalParams\n  ): Promise<CloudServicesListResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, options },\n      listOperationSpec\n    );\n  }\n\n  /**\n   * Starts the cloud service.\n   * @param resourceGroupName Name of the resource group.\n   * @param cloudServiceName Name of the cloud service.\n   * @param options The options parameters.\n   */\n  async beginStart(\n    resourceGroupName: string,\n    cloudServiceName: string,\n    options?: CloudServicesStartOptionalParams\n  ): Promise<PollerLike<PollOperationState<void>, void>> {\n    const directSendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ): Promise<void> => {\n      return this.client.sendOperationRequest(args, spec);\n    };\n    const sendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ) => {\n      let currentRawResponse:\n        | coreClient.FullOperationResponse\n        | undefined = undefined;\n      const providedCallback = args.options?.onResponse;\n      const callback: coreClient.RawResponseCallback = (\n        rawResponse: coreClient.FullOperationResponse,\n        flatResponse: unknown\n      ) => {\n        currentRawResponse = rawResponse;\n        providedCallback?.(rawResponse, flatResponse);\n      };\n      const updatedArgs = {\n        ...args,\n        options: {\n          ...args.options,\n          onResponse: callback\n        }\n      };\n      const flatResponse = await directSendOperation(updatedArgs, spec);\n      return {\n        flatResponse,\n        rawResponse: {\n          statusCode: currentRawResponse!.status,\n          body: currentRawResponse!.parsedBody,\n          headers: currentRawResponse!.headers.toJSON()\n        }\n      };\n    };\n\n    const lro = new LroImpl(\n      sendOperation,\n      { resourceGroupName, cloudServiceName, options },\n      startOperationSpec\n    );\n    return new LroEngine(lro, {\n      resumeFrom: options?.resumeFrom,\n      intervalInMs: options?.updateIntervalInMs\n    });\n  }\n\n  /**\n   * Starts the cloud service.\n   * @param resourceGroupName Name of the resource group.\n   * @param cloudServiceName Name of the cloud service.\n   * @param options The options parameters.\n   */\n  async beginStartAndWait(\n    resourceGroupName: string,\n    cloudServiceName: string,\n    options?: CloudServicesStartOptionalParams\n  ): Promise<void> {\n    const poller = await this.beginStart(\n      resourceGroupName,\n      cloudServiceName,\n      options\n    );\n    return poller.pollUntilDone();\n  }\n\n  /**\n   * Power off the cloud service. Note that resources are still attached and you are getting charged for\n   * the resources.\n   * @param resourceGroupName Name of the resource group.\n   * @param cloudServiceName Name of the cloud service.\n   * @param options The options parameters.\n   */\n  async beginPowerOff(\n    resourceGroupName: string,\n    cloudServiceName: string,\n    options?: CloudServicesPowerOffOptionalParams\n  ): Promise<PollerLike<PollOperationState<void>, void>> {\n    const directSendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ): Promise<void> => {\n      return this.client.sendOperationRequest(args, spec);\n    };\n    const sendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ) => {\n      let currentRawResponse:\n        | coreClient.FullOperationResponse\n        | undefined = undefined;\n      const providedCallback = args.options?.onResponse;\n      const callback: coreClient.RawResponseCallback = (\n        rawResponse: coreClient.FullOperationResponse,\n        flatResponse: unknown\n      ) => {\n        currentRawResponse = rawResponse;\n        providedCallback?.(rawResponse, flatResponse);\n      };\n      const updatedArgs = {\n        ...args,\n        options: {\n          ...args.options,\n          onResponse: callback\n        }\n      };\n      const flatResponse = await directSendOperation(updatedArgs, spec);\n      return {\n        flatResponse,\n        rawResponse: {\n          statusCode: currentRawResponse!.status,\n          body: currentRawResponse!.parsedBody,\n          headers: currentRawResponse!.headers.toJSON()\n        }\n      };\n    };\n\n    const lro = new LroImpl(\n      sendOperation,\n      { resourceGroupName, cloudServiceName, options },\n      powerOffOperationSpec\n    );\n    return new LroEngine(lro, {\n      resumeFrom: options?.resumeFrom,\n      intervalInMs: options?.updateIntervalInMs\n    });\n  }\n\n  /**\n   * Power off the cloud service. Note that resources are still attached and you are getting charged for\n   * the resources.\n   * @param resourceGroupName Name of the resource group.\n   * @param cloudServiceName Name of the cloud service.\n   * @param options The options parameters.\n   */\n  async beginPowerOffAndWait(\n    resourceGroupName: string,\n    cloudServiceName: string,\n    options?: CloudServicesPowerOffOptionalParams\n  ): Promise<void> {\n    const poller = await this.beginPowerOff(\n      resourceGroupName,\n      cloudServiceName,\n      options\n    );\n    return poller.pollUntilDone();\n  }\n\n  /**\n   * Restarts one or more role instances in a cloud service.\n   * @param resourceGroupName Name of the resource group.\n   * @param cloudServiceName Name of the cloud service.\n   * @param options The options parameters.\n   */\n  async beginRestart(\n    resourceGroupName: string,\n    cloudServiceName: string,\n    options?: CloudServicesRestartOptionalParams\n  ): Promise<PollerLike<PollOperationState<void>, void>> {\n    const directSendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ): Promise<void> => {\n      return this.client.sendOperationRequest(args, spec);\n    };\n    const sendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ) => {\n      let currentRawResponse:\n        | coreClient.FullOperationResponse\n        | undefined = undefined;\n      const providedCallback = args.options?.onResponse;\n      const callback: coreClient.RawResponseCallback = (\n        rawResponse: coreClient.FullOperationResponse,\n        flatResponse: unknown\n      ) => {\n        currentRawResponse = rawResponse;\n        providedCallback?.(rawResponse, flatResponse);\n      };\n      const updatedArgs = {\n        ...args,\n        options: {\n          ...args.options,\n          onResponse: callback\n        }\n      };\n      const flatResponse = await directSendOperation(updatedArgs, spec);\n      return {\n        flatResponse,\n        rawResponse: {\n          statusCode: currentRawResponse!.status,\n          body: currentRawResponse!.parsedBody,\n          headers: currentRawResponse!.headers.toJSON()\n        }\n      };\n    };\n\n    const lro = new LroImpl(\n      sendOperation,\n      { resourceGroupName, cloudServiceName, options },\n      restartOperationSpec\n    );\n    return new LroEngine(lro, {\n      resumeFrom: options?.resumeFrom,\n      intervalInMs: options?.updateIntervalInMs\n    });\n  }\n\n  /**\n   * Restarts one or more role instances in a cloud service.\n   * @param resourceGroupName Name of the resource group.\n   * @param cloudServiceName Name of the cloud service.\n   * @param options The options parameters.\n   */\n  async beginRestartAndWait(\n    resourceGroupName: string,\n    cloudServiceName: string,\n    options?: CloudServicesRestartOptionalParams\n  ): Promise<void> {\n    const poller = await this.beginRestart(\n      resourceGroupName,\n      cloudServiceName,\n      options\n    );\n    return poller.pollUntilDone();\n  }\n\n  /**\n   * Reimage asynchronous operation reinstalls the operating system on instances of web roles or worker\n   * roles.\n   * @param resourceGroupName Name of the resource group.\n   * @param cloudServiceName Name of the cloud service.\n   * @param options The options parameters.\n   */\n  async beginReimage(\n    resourceGroupName: string,\n    cloudServiceName: string,\n    options?: CloudServicesReimageOptionalParams\n  ): Promise<PollerLike<PollOperationState<void>, void>> {\n    const directSendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ): Promise<void> => {\n      return this.client.sendOperationRequest(args, spec);\n    };\n    const sendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ) => {\n      let currentRawResponse:\n        | coreClient.FullOperationResponse\n        | undefined = undefined;\n      const providedCallback = args.options?.onResponse;\n      const callback: coreClient.RawResponseCallback = (\n        rawResponse: coreClient.FullOperationResponse,\n        flatResponse: unknown\n      ) => {\n        currentRawResponse = rawResponse;\n        providedCallback?.(rawResponse, flatResponse);\n      };\n      const updatedArgs = {\n        ...args,\n        options: {\n          ...args.options,\n          onResponse: callback\n        }\n      };\n      const flatResponse = await directSendOperation(updatedArgs, spec);\n      return {\n        flatResponse,\n        rawResponse: {\n          statusCode: currentRawResponse!.status,\n          body: currentRawResponse!.parsedBody,\n          headers: currentRawResponse!.headers.toJSON()\n        }\n      };\n    };\n\n    const lro = new LroImpl(\n      sendOperation,\n      { resourceGroupName, cloudServiceName, options },\n      reimageOperationSpec\n    );\n    return new LroEngine(lro, {\n      resumeFrom: options?.resumeFrom,\n      intervalInMs: options?.updateIntervalInMs\n    });\n  }\n\n  /**\n   * Reimage asynchronous operation reinstalls the operating system on instances of web roles or worker\n   * roles.\n   * @param resourceGroupName Name of the resource group.\n   * @param cloudServiceName Name of the cloud service.\n   * @param options The options parameters.\n   */\n  async beginReimageAndWait(\n    resourceGroupName: string,\n    cloudServiceName: string,\n    options?: CloudServicesReimageOptionalParams\n  ): Promise<void> {\n    const poller = await this.beginReimage(\n      resourceGroupName,\n      cloudServiceName,\n      options\n    );\n    return poller.pollUntilDone();\n  }\n\n  /**\n   * Rebuild Role Instances reinstalls the operating system on instances of web roles or worker roles and\n   * initializes the storage resources that are used by them. If you do not want to initialize storage\n   * resources, you can use Reimage Role Instances.\n   * @param resourceGroupName Name of the resource group.\n   * @param cloudServiceName Name of the cloud service.\n   * @param options The options parameters.\n   */\n  async beginRebuild(\n    resourceGroupName: string,\n    cloudServiceName: string,\n    options?: CloudServicesRebuildOptionalParams\n  ): Promise<PollerLike<PollOperationState<void>, void>> {\n    const directSendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ): Promise<void> => {\n      return this.client.sendOperationRequest(args, spec);\n    };\n    const sendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ) => {\n      let currentRawResponse:\n        | coreClient.FullOperationResponse\n        | undefined = undefined;\n      const providedCallback = args.options?.onResponse;\n      const callback: coreClient.RawResponseCallback = (\n        rawResponse: coreClient.FullOperationResponse,\n        flatResponse: unknown\n      ) => {\n        currentRawResponse = rawResponse;\n        providedCallback?.(rawResponse, flatResponse);\n      };\n      const updatedArgs = {\n        ...args,\n        options: {\n          ...args.options,\n          onResponse: callback\n        }\n      };\n      const flatResponse = await directSendOperation(updatedArgs, spec);\n      return {\n        flatResponse,\n        rawResponse: {\n          statusCode: currentRawResponse!.status,\n          body: currentRawResponse!.parsedBody,\n          headers: currentRawResponse!.headers.toJSON()\n        }\n      };\n    };\n\n    const lro = new LroImpl(\n      sendOperation,\n      { resourceGroupName, cloudServiceName, options },\n      rebuildOperationSpec\n    );\n    return new LroEngine(lro, {\n      resumeFrom: options?.resumeFrom,\n      intervalInMs: options?.updateIntervalInMs\n    });\n  }\n\n  /**\n   * Rebuild Role Instances reinstalls the operating system on instances of web roles or worker roles and\n   * initializes the storage resources that are used by them. If you do not want to initialize storage\n   * resources, you can use Reimage Role Instances.\n   * @param resourceGroupName Name of the resource group.\n   * @param cloudServiceName Name of the cloud service.\n   * @param options The options parameters.\n   */\n  async beginRebuildAndWait(\n    resourceGroupName: string,\n    cloudServiceName: string,\n    options?: CloudServicesRebuildOptionalParams\n  ): Promise<void> {\n    const poller = await this.beginRebuild(\n      resourceGroupName,\n      cloudServiceName,\n      options\n    );\n    return poller.pollUntilDone();\n  }\n\n  /**\n   * Deletes role instances in a cloud service.\n   * @param resourceGroupName Name of the resource group.\n   * @param cloudServiceName Name of the cloud service.\n   * @param options The options parameters.\n   */\n  async beginDeleteInstances(\n    resourceGroupName: string,\n    cloudServiceName: string,\n    options?: CloudServicesDeleteInstancesOptionalParams\n  ): Promise<PollerLike<PollOperationState<void>, void>> {\n    const directSendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ): Promise<void> => {\n      return this.client.sendOperationRequest(args, spec);\n    };\n    const sendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ) => {\n      let currentRawResponse:\n        | coreClient.FullOperationResponse\n        | undefined = undefined;\n      const providedCallback = args.options?.onResponse;\n      const callback: coreClient.RawResponseCallback = (\n        rawResponse: coreClient.FullOperationResponse,\n        flatResponse: unknown\n      ) => {\n        currentRawResponse = rawResponse;\n        providedCallback?.(rawResponse, flatResponse);\n      };\n      const updatedArgs = {\n        ...args,\n        options: {\n          ...args.options,\n          onResponse: callback\n        }\n      };\n      const flatResponse = await directSendOperation(updatedArgs, spec);\n      return {\n        flatResponse,\n        rawResponse: {\n          statusCode: currentRawResponse!.status,\n          body: currentRawResponse!.parsedBody,\n          headers: currentRawResponse!.headers.toJSON()\n        }\n      };\n    };\n\n    const lro = new LroImpl(\n      sendOperation,\n      { resourceGroupName, cloudServiceName, options },\n      deleteInstancesOperationSpec\n    );\n    return new LroEngine(lro, {\n      resumeFrom: options?.resumeFrom,\n      intervalInMs: options?.updateIntervalInMs\n    });\n  }\n\n  /**\n   * Deletes role instances in a cloud service.\n   * @param resourceGroupName Name of the resource group.\n   * @param cloudServiceName Name of the cloud service.\n   * @param options The options parameters.\n   */\n  async beginDeleteInstancesAndWait(\n    resourceGroupName: string,\n    cloudServiceName: string,\n    options?: CloudServicesDeleteInstancesOptionalParams\n  ): Promise<void> {\n    const poller = await this.beginDeleteInstances(\n      resourceGroupName,\n      cloudServiceName,\n      options\n    );\n    return poller.pollUntilDone();\n  }\n\n  /**\n   * ListAllNext\n   * @param nextLink The nextLink from the previous successful call to the ListAll method.\n   * @param options The options parameters.\n   */\n  private _listAllNext(\n    nextLink: string,\n    options?: CloudServicesListAllNextOptionalParams\n  ): Promise<CloudServicesListAllNextResponse> {\n    return this.client.sendOperationRequest(\n      { nextLink, options },\n      listAllNextOperationSpec\n    );\n  }\n\n  /**\n   * ListNext\n   * @param resourceGroupName Name of the resource group.\n   * @param nextLink The nextLink from the previous successful call to the List method.\n   * @param options The options parameters.\n   */\n  private _listNext(\n    resourceGroupName: string,\n    nextLink: string,\n    options?: CloudServicesListNextOptionalParams\n  ): Promise<CloudServicesListNextResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, nextLink, options },\n      listNextOperationSpec\n    );\n  }\n}\n// Operation Specifications\nconst serializer = coreClient.createSerializer(Mappers, /* isXml */ false);\n\nconst createOrUpdateOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/cloudServices/{cloudServiceName}\",\n  httpMethod: \"PUT\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.CloudService\n    },\n    201: {\n      bodyMapper: Mappers.CloudService\n    },\n    202: {\n      bodyMapper: Mappers.CloudService\n    },\n    204: {\n      bodyMapper: Mappers.CloudService\n    },\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  requestBody: Parameters.parameters31,\n  queryParameters: [Parameters.apiVersion4],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.resourceGroupName,\n    Parameters.subscriptionId,\n    Parameters.cloudServiceName\n  ],\n  headerParameters: [Parameters.accept, Parameters.contentType],\n  mediaType: \"json\",\n  serializer\n};\nconst updateOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/cloudServices/{cloudServiceName}\",\n  httpMethod: \"PATCH\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.CloudService\n    },\n    201: {\n      bodyMapper: Mappers.CloudService\n    },\n    202: {\n      bodyMapper: Mappers.CloudService\n    },\n    204: {\n      bodyMapper: Mappers.CloudService\n    },\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  requestBody: Parameters.parameters32,\n  queryParameters: [Parameters.apiVersion4],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.resourceGroupName,\n    Parameters.subscriptionId,\n    Parameters.cloudServiceName\n  ],\n  headerParameters: [Parameters.accept, Parameters.contentType],\n  mediaType: \"json\",\n  serializer\n};\nconst deleteOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/cloudServices/{cloudServiceName}\",\n  httpMethod: \"DELETE\",\n  responses: {\n    200: {},\n    201: {},\n    202: {},\n    204: {},\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  queryParameters: [Parameters.apiVersion4],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.resourceGroupName,\n    Parameters.subscriptionId,\n    Parameters.cloudServiceName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst getOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/cloudServices/{cloudServiceName}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.CloudService\n    },\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  queryParameters: [Parameters.apiVersion4],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.resourceGroupName,\n    Parameters.subscriptionId,\n    Parameters.cloudServiceName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst getInstanceViewOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/cloudServices/{cloudServiceName}/instanceView\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.CloudServiceInstanceView\n    },\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  queryParameters: [Parameters.apiVersion4],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.resourceGroupName,\n    Parameters.subscriptionId,\n    Parameters.cloudServiceName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst listAllOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/providers/Microsoft.Compute/cloudServices\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.CloudServiceListResult\n    },\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  queryParameters: [Parameters.apiVersion4],\n  urlParameters: [Parameters.$host, Parameters.subscriptionId],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst listOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/cloudServices\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.CloudServiceListResult\n    },\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  queryParameters: [Parameters.apiVersion4],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.resourceGroupName,\n    Parameters.subscriptionId\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst startOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/cloudServices/{cloudServiceName}/start\",\n  httpMethod: \"POST\",\n  responses: {\n    200: {},\n    201: {},\n    202: {},\n    204: {},\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  queryParameters: [Parameters.apiVersion4],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.resourceGroupName,\n    Parameters.subscriptionId,\n    Parameters.cloudServiceName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst powerOffOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/cloudServices/{cloudServiceName}/poweroff\",\n  httpMethod: \"POST\",\n  responses: {\n    200: {},\n    201: {},\n    202: {},\n    204: {},\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  queryParameters: [Parameters.apiVersion4],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.resourceGroupName,\n    Parameters.subscriptionId,\n    Parameters.cloudServiceName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst restartOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/cloudServices/{cloudServiceName}/restart\",\n  httpMethod: \"POST\",\n  responses: {\n    200: {},\n    201: {},\n    202: {},\n    204: {},\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  requestBody: Parameters.parameters33,\n  queryParameters: [Parameters.apiVersion4],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.resourceGroupName,\n    Parameters.subscriptionId,\n    Parameters.cloudServiceName\n  ],\n  headerParameters: [Parameters.accept, Parameters.contentType],\n  mediaType: \"json\",\n  serializer\n};\nconst reimageOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/cloudServices/{cloudServiceName}/reimage\",\n  httpMethod: \"POST\",\n  responses: {\n    200: {},\n    201: {},\n    202: {},\n    204: {},\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  requestBody: Parameters.parameters33,\n  queryParameters: [Parameters.apiVersion4],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.resourceGroupName,\n    Parameters.subscriptionId,\n    Parameters.cloudServiceName\n  ],\n  headerParameters: [Parameters.accept, Parameters.contentType],\n  mediaType: \"json\",\n  serializer\n};\nconst rebuildOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/cloudServices/{cloudServiceName}/rebuild\",\n  httpMethod: \"POST\",\n  responses: {\n    200: {},\n    201: {},\n    202: {},\n    204: {},\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  requestBody: Parameters.parameters33,\n  queryParameters: [Parameters.apiVersion4],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.resourceGroupName,\n    Parameters.subscriptionId,\n    Parameters.cloudServiceName\n  ],\n  headerParameters: [Parameters.accept, Parameters.contentType],\n  mediaType: \"json\",\n  serializer\n};\nconst deleteInstancesOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/cloudServices/{cloudServiceName}/delete\",\n  httpMethod: \"POST\",\n  responses: {\n    200: {},\n    201: {},\n    202: {},\n    204: {},\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  requestBody: Parameters.parameters33,\n  queryParameters: [Parameters.apiVersion4],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.resourceGroupName,\n    Parameters.subscriptionId,\n    Parameters.cloudServiceName\n  ],\n  headerParameters: [Parameters.accept, Parameters.contentType],\n  mediaType: \"json\",\n  serializer\n};\nconst listAllNextOperationSpec: coreClient.OperationSpec = {\n  path: \"{nextLink}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.CloudServiceListResult\n    },\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  queryParameters: [Parameters.apiVersion4],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.nextLink\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst listNextOperationSpec: coreClient.OperationSpec = {\n  path: \"{nextLink}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.CloudServiceListResult\n    },\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  queryParameters: [Parameters.apiVersion4],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.resourceGroupName,\n    Parameters.subscriptionId,\n    Parameters.nextLink\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport { PagedAsyncIterableIterator } from \"@azure/core-paging\";\nimport { CloudServicesUpdateDomain } from \"../operationsInterfaces\";\nimport * as coreClient from \"@azure/core-client\";\nimport * as Mappers from \"../models/mappers\";\nimport * as Parameters from \"../models/parameters\";\nimport { ComputeManagementClient } from \"../computeManagementClient\";\nimport { PollerLike, PollOperationState, LroEngine } from \"@azure/core-lro\";\nimport { LroImpl } from \"../lroImpl\";\nimport {\n  UpdateDomain,\n  CloudServicesUpdateDomainListUpdateDomainsNextOptionalParams,\n  CloudServicesUpdateDomainListUpdateDomainsOptionalParams,\n  CloudServicesUpdateDomainWalkUpdateDomainOptionalParams,\n  CloudServicesUpdateDomainGetUpdateDomainOptionalParams,\n  CloudServicesUpdateDomainGetUpdateDomainResponse,\n  CloudServicesUpdateDomainListUpdateDomainsResponse,\n  CloudServicesUpdateDomainListUpdateDomainsNextResponse\n} from \"../models\";\n\n/// <reference lib=\"esnext.asynciterable\" />\n/** Class containing CloudServicesUpdateDomain operations. */\nexport class CloudServicesUpdateDomainImpl\n  implements CloudServicesUpdateDomain {\n  private readonly client: ComputeManagementClient;\n\n  /**\n   * Initialize a new instance of the class CloudServicesUpdateDomain class.\n   * @param client Reference to the service client\n   */\n  constructor(client: ComputeManagementClient) {\n    this.client = client;\n  }\n\n  /**\n   * Gets a list of all update domains in a cloud service.\n   * @param resourceGroupName Name of the resource group.\n   * @param cloudServiceName Name of the cloud service.\n   * @param options The options parameters.\n   */\n  public listUpdateDomains(\n    resourceGroupName: string,\n    cloudServiceName: string,\n    options?: CloudServicesUpdateDomainListUpdateDomainsOptionalParams\n  ): PagedAsyncIterableIterator<UpdateDomain> {\n    const iter = this.listUpdateDomainsPagingAll(\n      resourceGroupName,\n      cloudServiceName,\n      options\n    );\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: () => {\n        return this.listUpdateDomainsPagingPage(\n          resourceGroupName,\n          cloudServiceName,\n          options\n        );\n      }\n    };\n  }\n\n  private async *listUpdateDomainsPagingPage(\n    resourceGroupName: string,\n    cloudServiceName: string,\n    options?: CloudServicesUpdateDomainListUpdateDomainsOptionalParams\n  ): AsyncIterableIterator<UpdateDomain[]> {\n    let result = await this._listUpdateDomains(\n      resourceGroupName,\n      cloudServiceName,\n      options\n    );\n    yield result.value || [];\n    let continuationToken = result.nextLink;\n    while (continuationToken) {\n      result = await this._listUpdateDomainsNext(\n        resourceGroupName,\n        cloudServiceName,\n        continuationToken,\n        options\n      );\n      continuationToken = result.nextLink;\n      yield result.value || [];\n    }\n  }\n\n  private async *listUpdateDomainsPagingAll(\n    resourceGroupName: string,\n    cloudServiceName: string,\n    options?: CloudServicesUpdateDomainListUpdateDomainsOptionalParams\n  ): AsyncIterableIterator<UpdateDomain> {\n    for await (const page of this.listUpdateDomainsPagingPage(\n      resourceGroupName,\n      cloudServiceName,\n      options\n    )) {\n      yield* page;\n    }\n  }\n\n  /**\n   * Updates the role instances in the specified update domain.\n   * @param resourceGroupName Name of the resource group.\n   * @param cloudServiceName Name of the cloud service.\n   * @param updateDomain Specifies an integer value that identifies the update domain. Update domains are\n   *                     identified with a zero-based index: the first update domain has an ID of 0, the second has an ID of\n   *                     1, and so on.\n   * @param options The options parameters.\n   */\n  async beginWalkUpdateDomain(\n    resourceGroupName: string,\n    cloudServiceName: string,\n    updateDomain: number,\n    options?: CloudServicesUpdateDomainWalkUpdateDomainOptionalParams\n  ): Promise<PollerLike<PollOperationState<void>, void>> {\n    const directSendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ): Promise<void> => {\n      return this.client.sendOperationRequest(args, spec);\n    };\n    const sendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ) => {\n      let currentRawResponse:\n        | coreClient.FullOperationResponse\n        | undefined = undefined;\n      const providedCallback = args.options?.onResponse;\n      const callback: coreClient.RawResponseCallback = (\n        rawResponse: coreClient.FullOperationResponse,\n        flatResponse: unknown\n      ) => {\n        currentRawResponse = rawResponse;\n        providedCallback?.(rawResponse, flatResponse);\n      };\n      const updatedArgs = {\n        ...args,\n        options: {\n          ...args.options,\n          onResponse: callback\n        }\n      };\n      const flatResponse = await directSendOperation(updatedArgs, spec);\n      return {\n        flatResponse,\n        rawResponse: {\n          statusCode: currentRawResponse!.status,\n          body: currentRawResponse!.parsedBody,\n          headers: currentRawResponse!.headers.toJSON()\n        }\n      };\n    };\n\n    const lro = new LroImpl(\n      sendOperation,\n      { resourceGroupName, cloudServiceName, updateDomain, options },\n      walkUpdateDomainOperationSpec\n    );\n    return new LroEngine(lro, {\n      resumeFrom: options?.resumeFrom,\n      intervalInMs: options?.updateIntervalInMs\n    });\n  }\n\n  /**\n   * Updates the role instances in the specified update domain.\n   * @param resourceGroupName Name of the resource group.\n   * @param cloudServiceName Name of the cloud service.\n   * @param updateDomain Specifies an integer value that identifies the update domain. Update domains are\n   *                     identified with a zero-based index: the first update domain has an ID of 0, the second has an ID of\n   *                     1, and so on.\n   * @param options The options parameters.\n   */\n  async beginWalkUpdateDomainAndWait(\n    resourceGroupName: string,\n    cloudServiceName: string,\n    updateDomain: number,\n    options?: CloudServicesUpdateDomainWalkUpdateDomainOptionalParams\n  ): Promise<void> {\n    const poller = await this.beginWalkUpdateDomain(\n      resourceGroupName,\n      cloudServiceName,\n      updateDomain,\n      options\n    );\n    return poller.pollUntilDone();\n  }\n\n  /**\n   * Gets the specified update domain of a cloud service. Use nextLink property in the response to get\n   * the next page of update domains. Do this till nextLink is null to fetch all the update domains.\n   * @param resourceGroupName Name of the resource group.\n   * @param cloudServiceName Name of the cloud service.\n   * @param updateDomain Specifies an integer value that identifies the update domain. Update domains are\n   *                     identified with a zero-based index: the first update domain has an ID of 0, the second has an ID of\n   *                     1, and so on.\n   * @param options The options parameters.\n   */\n  getUpdateDomain(\n    resourceGroupName: string,\n    cloudServiceName: string,\n    updateDomain: number,\n    options?: CloudServicesUpdateDomainGetUpdateDomainOptionalParams\n  ): Promise<CloudServicesUpdateDomainGetUpdateDomainResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, cloudServiceName, updateDomain, options },\n      getUpdateDomainOperationSpec\n    );\n  }\n\n  /**\n   * Gets a list of all update domains in a cloud service.\n   * @param resourceGroupName Name of the resource group.\n   * @param cloudServiceName Name of the cloud service.\n   * @param options The options parameters.\n   */\n  private _listUpdateDomains(\n    resourceGroupName: string,\n    cloudServiceName: string,\n    options?: CloudServicesUpdateDomainListUpdateDomainsOptionalParams\n  ): Promise<CloudServicesUpdateDomainListUpdateDomainsResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, cloudServiceName, options },\n      listUpdateDomainsOperationSpec\n    );\n  }\n\n  /**\n   * ListUpdateDomainsNext\n   * @param resourceGroupName Name of the resource group.\n   * @param cloudServiceName Name of the cloud service.\n   * @param nextLink The nextLink from the previous successful call to the ListUpdateDomains method.\n   * @param options The options parameters.\n   */\n  private _listUpdateDomainsNext(\n    resourceGroupName: string,\n    cloudServiceName: string,\n    nextLink: string,\n    options?: CloudServicesUpdateDomainListUpdateDomainsNextOptionalParams\n  ): Promise<CloudServicesUpdateDomainListUpdateDomainsNextResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, cloudServiceName, nextLink, options },\n      listUpdateDomainsNextOperationSpec\n    );\n  }\n}\n// Operation Specifications\nconst serializer = coreClient.createSerializer(Mappers, /* isXml */ false);\n\nconst walkUpdateDomainOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/cloudServices/{cloudServiceName}/updateDomains/{updateDomain}\",\n  httpMethod: \"PUT\",\n  responses: {\n    200: {},\n    201: {},\n    202: {},\n    204: {},\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  requestBody: Parameters.parameters34,\n  queryParameters: [Parameters.apiVersion4],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.resourceGroupName,\n    Parameters.subscriptionId,\n    Parameters.cloudServiceName,\n    Parameters.updateDomain\n  ],\n  headerParameters: [Parameters.accept, Parameters.contentType],\n  mediaType: \"json\",\n  serializer\n};\nconst getUpdateDomainOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/cloudServices/{cloudServiceName}/updateDomains/{updateDomain}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.UpdateDomain\n    },\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  queryParameters: [Parameters.apiVersion4],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.resourceGroupName,\n    Parameters.subscriptionId,\n    Parameters.cloudServiceName,\n    Parameters.updateDomain\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst listUpdateDomainsOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/cloudServices/{cloudServiceName}/updateDomains\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.UpdateDomainListResult\n    },\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  queryParameters: [Parameters.apiVersion4],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.resourceGroupName,\n    Parameters.subscriptionId,\n    Parameters.cloudServiceName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst listUpdateDomainsNextOperationSpec: coreClient.OperationSpec = {\n  path: \"{nextLink}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.UpdateDomainListResult\n    },\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  queryParameters: [Parameters.apiVersion4],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.resourceGroupName,\n    Parameters.subscriptionId,\n    Parameters.nextLink,\n    Parameters.cloudServiceName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport { PagedAsyncIterableIterator } from \"@azure/core-paging\";\nimport { CloudServiceOperatingSystems } from \"../operationsInterfaces\";\nimport * as coreClient from \"@azure/core-client\";\nimport * as Mappers from \"../models/mappers\";\nimport * as Parameters from \"../models/parameters\";\nimport { ComputeManagementClient } from \"../computeManagementClient\";\nimport {\n  OSVersion,\n  CloudServiceOperatingSystemsListOSVersionsNextOptionalParams,\n  CloudServiceOperatingSystemsListOSVersionsOptionalParams,\n  OSFamily,\n  CloudServiceOperatingSystemsListOSFamiliesNextOptionalParams,\n  CloudServiceOperatingSystemsListOSFamiliesOptionalParams,\n  CloudServiceOperatingSystemsGetOSVersionOptionalParams,\n  CloudServiceOperatingSystemsGetOSVersionResponse,\n  CloudServiceOperatingSystemsListOSVersionsResponse,\n  CloudServiceOperatingSystemsGetOSFamilyOptionalParams,\n  CloudServiceOperatingSystemsGetOSFamilyResponse,\n  CloudServiceOperatingSystemsListOSFamiliesResponse,\n  CloudServiceOperatingSystemsListOSVersionsNextResponse,\n  CloudServiceOperatingSystemsListOSFamiliesNextResponse\n} from \"../models\";\n\n/// <reference lib=\"esnext.asynciterable\" />\n/** Class containing CloudServiceOperatingSystems operations. */\nexport class CloudServiceOperatingSystemsImpl\n  implements CloudServiceOperatingSystems {\n  private readonly client: ComputeManagementClient;\n\n  /**\n   * Initialize a new instance of the class CloudServiceOperatingSystems class.\n   * @param client Reference to the service client\n   */\n  constructor(client: ComputeManagementClient) {\n    this.client = client;\n  }\n\n  /**\n   * Gets a list of all guest operating system versions available to be specified in the XML service\n   * configuration (.cscfg) for a cloud service. Use nextLink property in the response to get the next\n   * page of OS versions. Do this till nextLink is null to fetch all the OS versions.\n   * @param location Name of the location that the OS versions pertain to.\n   * @param options The options parameters.\n   */\n  public listOSVersions(\n    location: string,\n    options?: CloudServiceOperatingSystemsListOSVersionsOptionalParams\n  ): PagedAsyncIterableIterator<OSVersion> {\n    const iter = this.listOSVersionsPagingAll(location, options);\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: () => {\n        return this.listOSVersionsPagingPage(location, options);\n      }\n    };\n  }\n\n  private async *listOSVersionsPagingPage(\n    location: string,\n    options?: CloudServiceOperatingSystemsListOSVersionsOptionalParams\n  ): AsyncIterableIterator<OSVersion[]> {\n    let result = await this._listOSVersions(location, options);\n    yield result.value || [];\n    let continuationToken = result.nextLink;\n    while (continuationToken) {\n      result = await this._listOSVersionsNext(\n        location,\n        continuationToken,\n        options\n      );\n      continuationToken = result.nextLink;\n      yield result.value || [];\n    }\n  }\n\n  private async *listOSVersionsPagingAll(\n    location: string,\n    options?: CloudServiceOperatingSystemsListOSVersionsOptionalParams\n  ): AsyncIterableIterator<OSVersion> {\n    for await (const page of this.listOSVersionsPagingPage(location, options)) {\n      yield* page;\n    }\n  }\n\n  /**\n   * Gets a list of all guest operating system families available to be specified in the XML service\n   * configuration (.cscfg) for a cloud service. Use nextLink property in the response to get the next\n   * page of OS Families. Do this till nextLink is null to fetch all the OS Families.\n   * @param location Name of the location that the OS families pertain to.\n   * @param options The options parameters.\n   */\n  public listOSFamilies(\n    location: string,\n    options?: CloudServiceOperatingSystemsListOSFamiliesOptionalParams\n  ): PagedAsyncIterableIterator<OSFamily> {\n    const iter = this.listOSFamiliesPagingAll(location, options);\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: () => {\n        return this.listOSFamiliesPagingPage(location, options);\n      }\n    };\n  }\n\n  private async *listOSFamiliesPagingPage(\n    location: string,\n    options?: CloudServiceOperatingSystemsListOSFamiliesOptionalParams\n  ): AsyncIterableIterator<OSFamily[]> {\n    let result = await this._listOSFamilies(location, options);\n    yield result.value || [];\n    let continuationToken = result.nextLink;\n    while (continuationToken) {\n      result = await this._listOSFamiliesNext(\n        location,\n        continuationToken,\n        options\n      );\n      continuationToken = result.nextLink;\n      yield result.value || [];\n    }\n  }\n\n  private async *listOSFamiliesPagingAll(\n    location: string,\n    options?: CloudServiceOperatingSystemsListOSFamiliesOptionalParams\n  ): AsyncIterableIterator<OSFamily> {\n    for await (const page of this.listOSFamiliesPagingPage(location, options)) {\n      yield* page;\n    }\n  }\n\n  /**\n   * Gets properties of a guest operating system version that can be specified in the XML service\n   * configuration (.cscfg) for a cloud service.\n   * @param location Name of the location that the OS version pertains to.\n   * @param osVersionName Name of the OS version.\n   * @param options The options parameters.\n   */\n  getOSVersion(\n    location: string,\n    osVersionName: string,\n    options?: CloudServiceOperatingSystemsGetOSVersionOptionalParams\n  ): Promise<CloudServiceOperatingSystemsGetOSVersionResponse> {\n    return this.client.sendOperationRequest(\n      { location, osVersionName, options },\n      getOSVersionOperationSpec\n    );\n  }\n\n  /**\n   * Gets a list of all guest operating system versions available to be specified in the XML service\n   * configuration (.cscfg) for a cloud service. Use nextLink property in the response to get the next\n   * page of OS versions. Do this till nextLink is null to fetch all the OS versions.\n   * @param location Name of the location that the OS versions pertain to.\n   * @param options The options parameters.\n   */\n  private _listOSVersions(\n    location: string,\n    options?: CloudServiceOperatingSystemsListOSVersionsOptionalParams\n  ): Promise<CloudServiceOperatingSystemsListOSVersionsResponse> {\n    return this.client.sendOperationRequest(\n      { location, options },\n      listOSVersionsOperationSpec\n    );\n  }\n\n  /**\n   * Gets properties of a guest operating system family that can be specified in the XML service\n   * configuration (.cscfg) for a cloud service.\n   * @param location Name of the location that the OS family pertains to.\n   * @param osFamilyName Name of the OS family.\n   * @param options The options parameters.\n   */\n  getOSFamily(\n    location: string,\n    osFamilyName: string,\n    options?: CloudServiceOperatingSystemsGetOSFamilyOptionalParams\n  ): Promise<CloudServiceOperatingSystemsGetOSFamilyResponse> {\n    return this.client.sendOperationRequest(\n      { location, osFamilyName, options },\n      getOSFamilyOperationSpec\n    );\n  }\n\n  /**\n   * Gets a list of all guest operating system families available to be specified in the XML service\n   * configuration (.cscfg) for a cloud service. Use nextLink property in the response to get the next\n   * page of OS Families. Do this till nextLink is null to fetch all the OS Families.\n   * @param location Name of the location that the OS families pertain to.\n   * @param options The options parameters.\n   */\n  private _listOSFamilies(\n    location: string,\n    options?: CloudServiceOperatingSystemsListOSFamiliesOptionalParams\n  ): Promise<CloudServiceOperatingSystemsListOSFamiliesResponse> {\n    return this.client.sendOperationRequest(\n      { location, options },\n      listOSFamiliesOperationSpec\n    );\n  }\n\n  /**\n   * ListOSVersionsNext\n   * @param location Name of the location that the OS versions pertain to.\n   * @param nextLink The nextLink from the previous successful call to the ListOSVersions method.\n   * @param options The options parameters.\n   */\n  private _listOSVersionsNext(\n    location: string,\n    nextLink: string,\n    options?: CloudServiceOperatingSystemsListOSVersionsNextOptionalParams\n  ): Promise<CloudServiceOperatingSystemsListOSVersionsNextResponse> {\n    return this.client.sendOperationRequest(\n      { location, nextLink, options },\n      listOSVersionsNextOperationSpec\n    );\n  }\n\n  /**\n   * ListOSFamiliesNext\n   * @param location Name of the location that the OS families pertain to.\n   * @param nextLink The nextLink from the previous successful call to the ListOSFamilies method.\n   * @param options The options parameters.\n   */\n  private _listOSFamiliesNext(\n    location: string,\n    nextLink: string,\n    options?: CloudServiceOperatingSystemsListOSFamiliesNextOptionalParams\n  ): Promise<CloudServiceOperatingSystemsListOSFamiliesNextResponse> {\n    return this.client.sendOperationRequest(\n      { location, nextLink, options },\n      listOSFamiliesNextOperationSpec\n    );\n  }\n}\n// Operation Specifications\nconst serializer = coreClient.createSerializer(Mappers, /* isXml */ false);\n\nconst getOSVersionOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/providers/Microsoft.Compute/locations/{location}/cloudServiceOsVersions/{osVersionName}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.OSVersion\n    },\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  queryParameters: [Parameters.apiVersion4],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.location,\n    Parameters.osVersionName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst listOSVersionsOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/providers/Microsoft.Compute/locations/{location}/cloudServiceOsVersions\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.OSVersionListResult\n    },\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  queryParameters: [Parameters.apiVersion4],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.location\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst getOSFamilyOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/providers/Microsoft.Compute/locations/{location}/cloudServiceOsFamilies/{osFamilyName}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.OSFamily\n    },\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  queryParameters: [Parameters.apiVersion4],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.location,\n    Parameters.osFamilyName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst listOSFamiliesOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/providers/Microsoft.Compute/locations/{location}/cloudServiceOsFamilies\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.OSFamilyListResult\n    },\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  queryParameters: [Parameters.apiVersion4],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.location\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst listOSVersionsNextOperationSpec: coreClient.OperationSpec = {\n  path: \"{nextLink}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.OSVersionListResult\n    },\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  queryParameters: [Parameters.apiVersion4],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.nextLink,\n    Parameters.location\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst listOSFamiliesNextOperationSpec: coreClient.OperationSpec = {\n  path: \"{nextLink}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.OSFamilyListResult\n    },\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  queryParameters: [Parameters.apiVersion4],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.nextLink,\n    Parameters.location\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport * as coreClient from \"@azure/core-client\";\nimport * as coreAuth from \"@azure/core-auth\";\nimport {\n  OperationsImpl,\n  AvailabilitySetsImpl,\n  ProximityPlacementGroupsImpl,\n  DedicatedHostGroupsImpl,\n  DedicatedHostsImpl,\n  SshPublicKeysImpl,\n  VirtualMachineExtensionImagesImpl,\n  VirtualMachineExtensionsImpl,\n  VirtualMachineImagesImpl,\n  VirtualMachineImagesEdgeZoneImpl,\n  UsageOperationsImpl,\n  VirtualMachinesImpl,\n  VirtualMachineScaleSetsImpl,\n  VirtualMachineSizesImpl,\n  ImagesImpl,\n  RestorePointCollectionsImpl,\n  RestorePointsImpl,\n  CapacityReservationGroupsImpl,\n  CapacityReservationsImpl,\n  VirtualMachineScaleSetExtensionsImpl,\n  VirtualMachineScaleSetRollingUpgradesImpl,\n  VirtualMachineScaleSetVMExtensionsImpl,\n  VirtualMachineScaleSetVMsImpl,\n  LogAnalyticsImpl,\n  VirtualMachineRunCommandsImpl,\n  VirtualMachineScaleSetVMRunCommandsImpl,\n  ResourceSkusImpl,\n  DisksImpl,\n  SnapshotsImpl,\n  DiskEncryptionSetsImpl,\n  DiskAccessesImpl,\n  DiskRestorePointOperationsImpl,\n  GalleriesImpl,\n  GalleryImagesImpl,\n  GalleryImageVersionsImpl,\n  GalleryApplicationsImpl,\n  GalleryApplicationVersionsImpl,\n  GallerySharingProfileImpl,\n  SharedGalleriesImpl,\n  SharedGalleryImagesImpl,\n  SharedGalleryImageVersionsImpl,\n  CommunityGalleriesImpl,\n  CommunityGalleryImagesImpl,\n  CommunityGalleryImageVersionsImpl,\n  CloudServiceRoleInstancesImpl,\n  CloudServiceRolesImpl,\n  CloudServicesImpl,\n  CloudServicesUpdateDomainImpl,\n  CloudServiceOperatingSystemsImpl\n} from \"./operations\";\nimport {\n  Operations,\n  AvailabilitySets,\n  ProximityPlacementGroups,\n  DedicatedHostGroups,\n  DedicatedHosts,\n  SshPublicKeys,\n  VirtualMachineExtensionImages,\n  VirtualMachineExtensions,\n  VirtualMachineImages,\n  VirtualMachineImagesEdgeZone,\n  UsageOperations,\n  VirtualMachines,\n  VirtualMachineScaleSets,\n  VirtualMachineSizes,\n  Images,\n  RestorePointCollections,\n  RestorePoints,\n  CapacityReservationGroups,\n  CapacityReservations,\n  VirtualMachineScaleSetExtensions,\n  VirtualMachineScaleSetRollingUpgrades,\n  VirtualMachineScaleSetVMExtensions,\n  VirtualMachineScaleSetVMs,\n  LogAnalytics,\n  VirtualMachineRunCommands,\n  VirtualMachineScaleSetVMRunCommands,\n  ResourceSkus,\n  Disks,\n  Snapshots,\n  DiskEncryptionSets,\n  DiskAccesses,\n  DiskRestorePointOperations,\n  Galleries,\n  GalleryImages,\n  GalleryImageVersions,\n  GalleryApplications,\n  GalleryApplicationVersions,\n  GallerySharingProfile,\n  SharedGalleries,\n  SharedGalleryImages,\n  SharedGalleryImageVersions,\n  CommunityGalleries,\n  CommunityGalleryImages,\n  CommunityGalleryImageVersions,\n  CloudServiceRoleInstances,\n  CloudServiceRoles,\n  CloudServices,\n  CloudServicesUpdateDomain,\n  CloudServiceOperatingSystems\n} from \"./operationsInterfaces\";\nimport { ComputeManagementClientOptionalParams } from \"./models\";\n\nexport class ComputeManagementClient extends coreClient.ServiceClient {\n  $host: string;\n  subscriptionId: string;\n\n  /**\n   * Initializes a new instance of the ComputeManagementClient class.\n   * @param credentials Subscription credentials which uniquely identify client subscription.\n   * @param subscriptionId Subscription credentials which uniquely identify Microsoft Azure subscription.\n   *                       The subscription ID forms part of the URI for every service call.\n   * @param options The parameter options\n   */\n  constructor(\n    credentials: coreAuth.TokenCredential,\n    subscriptionId: string,\n    options?: ComputeManagementClientOptionalParams\n  ) {\n    if (credentials === undefined) {\n      throw new Error(\"'credentials' cannot be null\");\n    }\n    if (subscriptionId === undefined) {\n      throw new Error(\"'subscriptionId' cannot be null\");\n    }\n\n    // Initializing default values for options\n    if (!options) {\n      options = {};\n    }\n    const defaults: ComputeManagementClientOptionalParams = {\n      requestContentType: \"application/json; charset=utf-8\",\n      credential: credentials\n    };\n\n    const packageDetails = `azsdk-js-arm-compute/17.2.0`;\n    const userAgentPrefix =\n      options.userAgentOptions && options.userAgentOptions.userAgentPrefix\n        ? `${options.userAgentOptions.userAgentPrefix} ${packageDetails}`\n        : `${packageDetails}`;\n\n    if (!options.credentialScopes) {\n      options.credentialScopes = [\"https://management.azure.com/.default\"];\n    }\n    const optionsWithDefaults = {\n      ...defaults,\n      ...options,\n      userAgentOptions: {\n        userAgentPrefix\n      },\n      baseUri: options.endpoint || \"https://management.azure.com\"\n    };\n    super(optionsWithDefaults);\n    // Parameter assignments\n    this.subscriptionId = subscriptionId;\n\n    // Assigning values to Constant parameters\n    this.$host = options.$host || \"https://management.azure.com\";\n    this.operations = new OperationsImpl(this);\n    this.availabilitySets = new AvailabilitySetsImpl(this);\n    this.proximityPlacementGroups = new ProximityPlacementGroupsImpl(this);\n    this.dedicatedHostGroups = new DedicatedHostGroupsImpl(this);\n    this.dedicatedHosts = new DedicatedHostsImpl(this);\n    this.sshPublicKeys = new SshPublicKeysImpl(this);\n    this.virtualMachineExtensionImages = new VirtualMachineExtensionImagesImpl(\n      this\n    );\n    this.virtualMachineExtensions = new VirtualMachineExtensionsImpl(this);\n    this.virtualMachineImages = new VirtualMachineImagesImpl(this);\n    this.virtualMachineImagesEdgeZone = new VirtualMachineImagesEdgeZoneImpl(\n      this\n    );\n    this.usageOperations = new UsageOperationsImpl(this);\n    this.virtualMachines = new VirtualMachinesImpl(this);\n    this.virtualMachineScaleSets = new VirtualMachineScaleSetsImpl(this);\n    this.virtualMachineSizes = new VirtualMachineSizesImpl(this);\n    this.images = new ImagesImpl(this);\n    this.restorePointCollections = new RestorePointCollectionsImpl(this);\n    this.restorePoints = new RestorePointsImpl(this);\n    this.capacityReservationGroups = new CapacityReservationGroupsImpl(this);\n    this.capacityReservations = new CapacityReservationsImpl(this);\n    this.virtualMachineScaleSetExtensions = new VirtualMachineScaleSetExtensionsImpl(\n      this\n    );\n    this.virtualMachineScaleSetRollingUpgrades = new VirtualMachineScaleSetRollingUpgradesImpl(\n      this\n    );\n    this.virtualMachineScaleSetVMExtensions = new VirtualMachineScaleSetVMExtensionsImpl(\n      this\n    );\n    this.virtualMachineScaleSetVMs = new VirtualMachineScaleSetVMsImpl(this);\n    this.logAnalytics = new LogAnalyticsImpl(this);\n    this.virtualMachineRunCommands = new VirtualMachineRunCommandsImpl(this);\n    this.virtualMachineScaleSetVMRunCommands = new VirtualMachineScaleSetVMRunCommandsImpl(\n      this\n    );\n    this.resourceSkus = new ResourceSkusImpl(this);\n    this.disks = new DisksImpl(this);\n    this.snapshots = new SnapshotsImpl(this);\n    this.diskEncryptionSets = new DiskEncryptionSetsImpl(this);\n    this.diskAccesses = new DiskAccessesImpl(this);\n    this.diskRestorePointOperations = new DiskRestorePointOperationsImpl(this);\n    this.galleries = new GalleriesImpl(this);\n    this.galleryImages = new GalleryImagesImpl(this);\n    this.galleryImageVersions = new GalleryImageVersionsImpl(this);\n    this.galleryApplications = new GalleryApplicationsImpl(this);\n    this.galleryApplicationVersions = new GalleryApplicationVersionsImpl(this);\n    this.gallerySharingProfile = new GallerySharingProfileImpl(this);\n    this.sharedGalleries = new SharedGalleriesImpl(this);\n    this.sharedGalleryImages = new SharedGalleryImagesImpl(this);\n    this.sharedGalleryImageVersions = new SharedGalleryImageVersionsImpl(this);\n    this.communityGalleries = new CommunityGalleriesImpl(this);\n    this.communityGalleryImages = new CommunityGalleryImagesImpl(this);\n    this.communityGalleryImageVersions = new CommunityGalleryImageVersionsImpl(\n      this\n    );\n    this.cloudServiceRoleInstances = new CloudServiceRoleInstancesImpl(this);\n    this.cloudServiceRoles = new CloudServiceRolesImpl(this);\n    this.cloudServices = new CloudServicesImpl(this);\n    this.cloudServicesUpdateDomain = new CloudServicesUpdateDomainImpl(this);\n    this.cloudServiceOperatingSystems = new CloudServiceOperatingSystemsImpl(\n      this\n    );\n  }\n\n  operations: Operations;\n  availabilitySets: AvailabilitySets;\n  proximityPlacementGroups: ProximityPlacementGroups;\n  dedicatedHostGroups: DedicatedHostGroups;\n  dedicatedHosts: DedicatedHosts;\n  sshPublicKeys: SshPublicKeys;\n  virtualMachineExtensionImages: VirtualMachineExtensionImages;\n  virtualMachineExtensions: VirtualMachineExtensions;\n  virtualMachineImages: VirtualMachineImages;\n  virtualMachineImagesEdgeZone: VirtualMachineImagesEdgeZone;\n  usageOperations: UsageOperations;\n  virtualMachines: VirtualMachines;\n  virtualMachineScaleSets: VirtualMachineScaleSets;\n  virtualMachineSizes: VirtualMachineSizes;\n  images: Images;\n  restorePointCollections: RestorePointCollections;\n  restorePoints: RestorePoints;\n  capacityReservationGroups: CapacityReservationGroups;\n  capacityReservations: CapacityReservations;\n  virtualMachineScaleSetExtensions: VirtualMachineScaleSetExtensions;\n  virtualMachineScaleSetRollingUpgrades: VirtualMachineScaleSetRollingUpgrades;\n  virtualMachineScaleSetVMExtensions: VirtualMachineScaleSetVMExtensions;\n  virtualMachineScaleSetVMs: VirtualMachineScaleSetVMs;\n  logAnalytics: LogAnalytics;\n  virtualMachineRunCommands: VirtualMachineRunCommands;\n  virtualMachineScaleSetVMRunCommands: VirtualMachineScaleSetVMRunCommands;\n  resourceSkus: ResourceSkus;\n  disks: Disks;\n  snapshots: Snapshots;\n  diskEncryptionSets: DiskEncryptionSets;\n  diskAccesses: DiskAccesses;\n  diskRestorePointOperations: DiskRestorePointOperations;\n  galleries: Galleries;\n  galleryImages: GalleryImages;\n  galleryImageVersions: GalleryImageVersions;\n  galleryApplications: GalleryApplications;\n  galleryApplicationVersions: GalleryApplicationVersions;\n  gallerySharingProfile: GallerySharingProfile;\n  sharedGalleries: SharedGalleries;\n  sharedGalleryImages: SharedGalleryImages;\n  sharedGalleryImageVersions: SharedGalleryImageVersions;\n  communityGalleries: CommunityGalleries;\n  communityGalleryImages: CommunityGalleryImages;\n  communityGalleryImageVersions: CommunityGalleryImageVersions;\n  cloudServiceRoleInstances: CloudServiceRoleInstances;\n  cloudServiceRoles: CloudServiceRoles;\n  cloudServices: CloudServices;\n  cloudServicesUpdateDomain: CloudServicesUpdateDomain;\n  cloudServiceOperatingSystems: CloudServiceOperatingSystems;\n}\n"],"names":["KnownProximityPlacementGroupType","KnownHyperVGenerationTypes","KnownVmDiskTypes","KnownExtendedLocationTypes","KnownVirtualMachineSizeTypes","KnownDiffDiskOptions","KnownDiffDiskPlacement","KnownDiskCreateOptionTypes","KnownStorageAccountTypes","KnownSecurityEncryptionTypes","KnownDiskDeleteOptionTypes","KnownDiskDetachOptionTypes","KnownWindowsVMGuestPatchMode","KnownWindowsPatchAssessmentMode","KnownLinuxVMGuestPatchMode","KnownLinuxPatchAssessmentMode","KnownDeleteOptions","KnownNetworkApiVersion","KnownIPVersions","KnownPublicIPAllocationMethod","KnownPublicIPAddressSkuName","KnownPublicIPAddressSkuTier","KnownSecurityTypes","KnownVirtualMachinePriorityTypes","KnownVirtualMachineEvictionPolicyTypes","KnownHyperVGenerationType","KnownPatchOperationStatus","KnownRepairAction","KnownIPVersion","KnownVirtualMachineScaleSetScaleInRules","KnownOrchestrationMode","KnownOperatingSystemType","KnownConsistencyModeTypes","KnownRestorePointCollectionExpandOptions","KnownRestorePointExpandOptions","KnownCapacityReservationGroupInstanceViewTypes","KnownExpandTypesForGetCapacityReservationGroups","KnownCapacityReservationInstanceViewTypes","KnownVMGuestPatchRebootBehavior","KnownPatchAssessmentState","KnownVMGuestPatchRebootSetting","KnownVMGuestPatchClassificationWindows","KnownVMGuestPatchClassificationLinux","KnownVMGuestPatchRebootStatus","KnownPatchInstallationState","KnownExpandTypesForGetVMScaleSets","KnownOrchestrationServiceNames","KnownOrchestrationServiceState","KnownOrchestrationServiceStateAction","KnownExecutionState","KnownExtendedLocationType","KnownDiskStorageAccountTypes","KnownHyperVGeneration","KnownDiskCreateOption","KnownDiskState","KnownEncryptionType","KnownNetworkAccessPolicy","KnownDiskSecurityTypes","KnownPublicNetworkAccess","KnownAccessLevel","KnownSnapshotStorageAccountTypes","KnownDiskEncryptionSetIdentityType","KnownDiskEncryptionSetType","KnownPrivateEndpointServiceConnectionStatus","KnownPrivateEndpointConnectionProvisioningState","KnownGalleryPropertiesProvisioningState","KnownGallerySharingPermissionTypes","KnownSharingProfileGroupTypes","KnownSharingState","KnownSelectPermissions","KnownGalleryExpandParams","KnownGalleryImagePropertiesProvisioningState","KnownStorageAccountType","KnownConfidentialVMEncryptionType","KnownReplicationMode","KnownGalleryExtendedLocationType","KnownGalleryImageVersionPropertiesProvisioningState","KnownAggregatedReplicationState","KnownReplicationState","KnownReplicationStatusTypes","KnownGalleryApplicationVersionPropertiesProvisioningState","KnownSharingUpdateOperationTypes","KnownSharedToValues","KnownCloudServiceUpgradeMode","KnownAvailabilitySetSkuTypes","AvailabilitySetMapper","AvailabilitySetUpdateMapper","ProximityPlacementGroupMapper","ProximityPlacementGroupUpdateMapper","DedicatedHostGroupMapper","DedicatedHostGroupUpdateMapper","DedicatedHostMapper","DedicatedHostUpdateMapper","SshPublicKeyResourceMapper","SshPublicKeyUpdateResourceMapper","VirtualMachineExtensionMapper","VirtualMachineExtensionUpdateMapper","VirtualMachineCaptureParametersMapper","VirtualMachineMapper","VirtualMachineUpdateMapper","VirtualMachineReimageParametersMapper","VirtualMachineInstallPatchesParametersMapper","RunCommandInputMapper","VirtualMachineScaleSetMapper","VirtualMachineScaleSetUpdateMapper","VirtualMachineScaleSetVMInstanceIDsMapper","VirtualMachineScaleSetVMInstanceRequiredIDsMapper","VirtualMachineScaleSetReimageParametersMapper","VMScaleSetConvertToSinglePlacementGroupInputMapper","OrchestrationServiceStateInputMapper","ImageMapper","ImageUpdateMapper","RestorePointCollectionMapper","RestorePointCollectionUpdateMapper","RestorePointMapper","CapacityReservationGroupMapper","CapacityReservationGroupUpdateMapper","CapacityReservationMapper","CapacityReservationUpdateMapper","VirtualMachineScaleSetExtensionMapper","VirtualMachineScaleSetExtensionUpdateMapper","VirtualMachineScaleSetVMExtensionMapper","VirtualMachineScaleSetVMExtensionUpdateMapper","VirtualMachineScaleSetVMReimageParametersMapper","VirtualMachineScaleSetVMMapper","RequestRateByIntervalInputMapper","ThrottledRequestsInputMapper","VirtualMachineRunCommandMapper","VirtualMachineRunCommandUpdateMapper","DiskMapper","DiskUpdateMapper","GrantAccessDataMapper","SnapshotMapper","SnapshotUpdateMapper","DiskEncryptionSetMapper","DiskEncryptionSetUpdateMapper","DiskAccessMapper","DiskAccessUpdateMapper","PrivateEndpointConnectionMapper","GalleryMapper","GalleryUpdateMapper","GalleryImageMapper","GalleryImageUpdateMapper","GalleryImageVersionMapper","GalleryImageVersionUpdateMapper","GalleryApplicationMapper","GalleryApplicationUpdateMapper","GalleryApplicationVersionMapper","GalleryApplicationVersionUpdateMapper","SharingUpdateMapper","CloudServiceMapper","CloudServiceUpdateMapper","RoleInstancesMapper","UpdateDomainMapper","__asyncValues","__asyncDelegator","coreClient.createSerializer","Mappers.ComputeOperationListResult","Mappers.CloudError","Parameters.apiVersion","Parameters.$host","Parameters.accept","listOperationSpec","serializer","Mappers.AvailabilitySet","Parameters.parameters","Parameters.resourceGroupName","Parameters.availabilitySetName","Parameters.subscriptionId","Parameters.contentType","Parameters.parameters1","Mappers.AvailabilitySetListResult","Parameters.expand","Mappers.VirtualMachineSizeListResult","Parameters.nextLink","createOrUpdateOperationSpec","updateOperationSpec","deleteOperationSpec","getOperationSpec","listBySubscriptionOperationSpec","listBySubscriptionNextOperationSpec","Mappers.ProximityPlacementGroup","Parameters.parameters2","Parameters.proximityPlacementGroupName","Parameters.parameters3","Parameters.includeColocationStatus","Mappers.ProximityPlacementGroupListResult","listByResourceGroupOperationSpec","listByResourceGroupNextOperationSpec","Mappers.DedicatedHostGroup","Parameters.parameters4","Parameters.hostGroupName","Parameters.parameters5","Parameters.expand1","Mappers.DedicatedHostGroupListResult","LroEngine","Mappers.DedicatedHost","Parameters.parameters6","Parameters.hostName","Parameters.parameters7","Mappers.DedicatedHostListResult","Mappers.SshPublicKeysGroupListResult","Mappers.SshPublicKeyResource","Parameters.parameters8","Parameters.sshPublicKeyName","Parameters.parameters9","Mappers.SshPublicKeyGenerateKeyPairResult","Mappers.VirtualMachineExtensionImage","Parameters.location","Parameters.publisherName","Parameters.typeParam","Parameters.version","Parameters.filter","Parameters.top","Parameters.orderby","Mappers.VirtualMachineExtension","Parameters.extensionParameters","Parameters.vmName","Parameters.vmExtensionName","Parameters.extensionParameters1","Mappers.VirtualMachineExtensionsListResult","Mappers.VirtualMachineImage","Parameters.offer","Parameters.skus","listOffersOperationSpec","listPublishersOperationSpec","listSkusOperationSpec","Parameters.edgeZone","listNextOperationSpec","Mappers.ListUsagesResult","Parameters.location1","listAvailableSizesOperationSpec","restartOperationSpec","Mappers.VirtualMachineListResult","Mappers.VirtualMachineCaptureResult","Parameters.parameters10","Mappers.VirtualMachine","Parameters.parameters11","Parameters.parameters12","Parameters.forceDeletion","Mappers.VirtualMachineInstanceView","Parameters.hibernate","Parameters.statusOnly","Parameters.skipShutdown","Parameters.parameters13","Mappers.RetrieveBootDiagnosticsDataResult","Parameters.sasUriExpirationTimeInMinutes","Mappers.VirtualMachineAssessPatchesResult","Mappers.VirtualMachineInstallPatchesResult","Parameters.installPatchesInput","Mappers.RunCommandResult","Parameters.parameters14","Parameters.accept1","listByLocationOperationSpec","deallocateOperationSpec","listAllOperationSpec","powerOffOperationSpec","startOperationSpec","redeployOperationSpec","performMaintenanceOperationSpec","reimageOperationSpec","listByLocationNextOperationSpec","listAllNextOperationSpec","Mappers.VirtualMachineScaleSetListResult","Mappers.VirtualMachineScaleSet","Parameters.parameters15","Parameters.vmScaleSetName","Parameters.parameters16","Parameters.expand2","Parameters.vmInstanceIDs","Parameters.vmInstanceIDs1","Mappers.VirtualMachineScaleSetInstanceView","Mappers.VirtualMachineScaleSetListWithLinkResult","Mappers.VirtualMachineScaleSetListSkusResult","Mappers.VirtualMachineScaleSetListOSUpgradeHistory","Parameters.vmScaleSetReimageInput","Mappers.RecoveryWalkResponse","Parameters.platformUpdateDomain","Parameters.zone","Parameters.placementGroupId","Parameters.parameters17","Parameters.parameters18","Mappers.Image","Parameters.parameters19","Parameters.imageName","Parameters.parameters20","Mappers.ImageListResult","Mappers.RestorePointCollection","Parameters.parameters21","Parameters.restorePointCollectionName","Parameters.parameters22","Parameters.expand3","Mappers.RestorePointCollectionListResult","createOperationSpec","Mappers.RestorePoint","Parameters.parameters23","Parameters.restorePointName","Parameters.expand4","Mappers.CapacityReservationGroup","Parameters.parameters24","Parameters.capacityReservationGroupName","Parameters.parameters25","Parameters.expand5","Mappers.CapacityReservationGroupListResult","Parameters.expand6","Mappers.CapacityReservation","Parameters.parameters26","Parameters.capacityReservationName","Parameters.parameters27","Parameters.expand7","Mappers.CapacityReservationListResult","Mappers.VirtualMachineScaleSetExtension","Parameters.extensionParameters2","Parameters.vmssExtensionName","Parameters.extensionParameters3","Mappers.VirtualMachineScaleSetExtensionListResult","Mappers.RollingUpgradeStatusInfo","Mappers.VirtualMachineScaleSetVMExtension","Parameters.extensionParameters4","Parameters.instanceId","Parameters.extensionParameters5","Mappers.VirtualMachineScaleSetVMExtensionsListResult","reimageAllOperationSpec","getInstanceViewOperationSpec","retrieveBootDiagnosticsDataOperationSpec","simulateEvictionOperationSpec","runCommandOperationSpec","Parameters.vmScaleSetVMReimageInput","Mappers.VirtualMachineScaleSetVM","Parameters.parameters28","Mappers.VirtualMachineScaleSetVMInstanceView","Mappers.VirtualMachineScaleSetVMListResult","Parameters.select","Parameters.virtualMachineScaleSetName","Mappers.LogAnalyticsOperationResult","Parameters.parameters29","Parameters.parameters30","Mappers.RunCommandListResult","Mappers.RunCommandDocument","Parameters.commandId","Mappers.VirtualMachineRunCommand","Parameters.runCommand","Parameters.runCommandName","Parameters.runCommand1","Mappers.VirtualMachineRunCommandsListResult","Mappers.ResourceSkusResult","Parameters.apiVersion1","Parameters.includeExtendedLocations","Mappers.Disk","Parameters.disk","Parameters.apiVersion2","Parameters.diskName","Parameters.disk1","Mappers.DiskList","Mappers.AccessUri","Parameters.grantAccessData","grantAccessOperationSpec","revokeAccessOperationSpec","Mappers.Snapshot","Parameters.snapshot","Parameters.snapshotName","Parameters.snapshot1","Mappers.SnapshotList","Mappers.DiskEncryptionSet","Parameters.diskEncryptionSet","Parameters.diskEncryptionSetName","Parameters.diskEncryptionSet1","Mappers.DiskEncryptionSetList","Mappers.ResourceUriList","Mappers.DiskAccess","Parameters.diskAccess","Parameters.diskAccessName","Parameters.diskAccess1","Mappers.DiskAccessList","Mappers.PrivateLinkResourceListResult","Mappers.PrivateEndpointConnection","Parameters.privateEndpointConnection","Parameters.privateEndpointConnectionName","Mappers.PrivateEndpointConnectionListResult","Mappers.DiskRestorePoint","Parameters.vmRestorePointName","Parameters.diskRestorePointName","Mappers.DiskRestorePointList","Mappers.Gallery","Parameters.gallery","Parameters.apiVersion3","Parameters.galleryName","Parameters.gallery1","Parameters.select1","Parameters.expand8","Mappers.GalleryList","Mappers.GalleryImage","Parameters.galleryImage","Parameters.galleryImageName","Parameters.galleryImage1","Mappers.GalleryImageList","Mappers.GalleryImageVersion","Parameters.galleryImageVersion","Parameters.galleryImageVersionName","Parameters.galleryImageVersion1","Parameters.expand9","Mappers.GalleryImageVersionList","listByGalleryOperationSpec","listByGalleryNextOperationSpec","Mappers.GalleryApplication","Parameters.galleryApplication","Parameters.galleryApplicationName","Parameters.galleryApplication1","Mappers.GalleryApplicationList","Mappers.GalleryApplicationVersion","Parameters.galleryApplicationVersion","Parameters.galleryApplicationVersionName","Parameters.galleryApplicationVersion1","Mappers.GalleryApplicationVersionList","Mappers.SharingUpdate","Parameters.sharingUpdate","Mappers.SharedGalleryList","Parameters.sharedTo","Mappers.SharedGallery","Parameters.galleryUniqueName","Mappers.SharedGalleryImageList","Mappers.SharedGalleryImage","Mappers.SharedGalleryImageVersionList","Mappers.SharedGalleryImageVersion","Mappers.CommunityGallery","Parameters.publicGalleryName","Mappers.CommunityGalleryImage","Mappers.CommunityGalleryImageVersion","Parameters.apiVersion4","Parameters.roleInstanceName","Parameters.cloudServiceName","Mappers.RoleInstance","Mappers.RoleInstanceView","Mappers.RoleInstanceListResult","Parameters.accept2","Mappers.CloudServiceRole","Parameters.roleName","Mappers.CloudServiceRoleListResult","rebuildOperationSpec","deleteInstancesOperationSpec","Mappers.CloudService","Parameters.parameters31","Parameters.parameters32","Mappers.CloudServiceInstanceView","Mappers.CloudServiceListResult","Parameters.parameters33","Parameters.parameters34","Parameters.updateDomain","Mappers.UpdateDomain","Mappers.UpdateDomainListResult","Mappers.OSVersion","Parameters.osVersionName","Mappers.OSVersionListResult","Mappers.OSFamily","Parameters.osFamilyName","Mappers.OSFamilyListResult","coreClient.ServiceClient"],"mappings":";;;;;;;;AAAA;;;;;;;AA43LA,WAAY,gCAAgC;IAC1C,yDAAqB,CAAA;IACrB,mDAAe,CAAA;AACjB,CAAC,EAHWA,wCAAgC,KAAhCA,wCAAgC,QAG3C;AAaD,WAAY,0BAA0B;IACpC,uCAAS,CAAA;IACT,uCAAS,CAAA;AACX,CAAC,EAHWC,kCAA0B,KAA1BA,kCAA0B,QAGrC;AAaD,WAAY,gBAAgB;IAC1B,iCAAa,CAAA;IACb,2CAAuB,CAAA;AACzB,CAAC,EAHWC,wBAAgB,KAAhBA,wBAAgB,QAG3B;AAaD,WAAY,0BAA0B;IACpC,mDAAqB,CAAA;AACvB,CAAC,EAFWC,kCAA0B,KAA1BA,kCAA0B,QAErC;AAYD,WAAY,4BAA4B;IACtC,oDAAoB,CAAA;IACpB,oDAAoB,CAAA;IACpB,oDAAoB,CAAA;IACpB,oDAAoB,CAAA;IACpB,oDAAoB,CAAA;IACpB,0DAA0B,CAAA;IAC1B,0DAA0B,CAAA;IAC1B,0DAA0B,CAAA;IAC1B,0DAA0B,CAAA;IAC1B,0DAA0B,CAAA;IAC1B,0DAA0B,CAAA;IAC1B,0DAA0B,CAAA;IAC1B,0DAA0B,CAAA;IAC1B,0DAA0B,CAAA;IAC1B,0DAA0B,CAAA;IAC1B,4DAA4B,CAAA;IAC5B,4DAA4B,CAAA;IAC5B,+DAA+B,CAAA;IAC/B,+DAA+B,CAAA;IAC/B,+DAA+B,CAAA;IAC/B,+DAA+B,CAAA;IAC/B,iEAAiC,CAAA;IACjC,iEAAiC,CAAA;IACjC,iEAAiC,CAAA;IACjC,4DAA4B,CAAA;IAC5B,8DAA8B,CAAA;IAC9B,4DAA4B,CAAA;IAC5B,8DAA8B,CAAA;IAC9B,8DAA8B,CAAA;IAC9B,8DAA8B,CAAA;IAC9B,0DAA0B,CAAA;IAC1B,0DAA0B,CAAA;IAC1B,0DAA0B,CAAA;IAC1B,0DAA0B,CAAA;IAC1B,4DAA4B,CAAA;IAC5B,4DAA4B,CAAA;IAC5B,4DAA4B,CAAA;IAC5B,4DAA4B,CAAA;IAC5B,+DAA+B,CAAA;IAC/B,+DAA+B,CAAA;IAC/B,+DAA+B,CAAA;IAC/B,+DAA+B,CAAA;IAC/B,+DAA+B,CAAA;IAC/B,+DAA+B,CAAA;IAC/B,+DAA+B,CAAA;IAC/B,+DAA+B,CAAA;IAC/B,iEAAiC,CAAA;IACjC,iEAAiC,CAAA;IACjC,iEAAiC,CAAA;IACjC,iEAAiC,CAAA;IACjC,iEAAiC,CAAA;IACjC,iEAAiC,CAAA;IACjC,mEAAmC,CAAA;IACnC,mEAAmC,CAAA;IACnC,mEAAmC,CAAA;IACnC,iEAAiC,CAAA;IACjC,iEAAiC,CAAA;IACjC,iEAAiC,CAAA;IACjC,iEAAiC,CAAA;IACjC,iEAAiC,CAAA;IACjC,4DAA4B,CAAA;IAC5B,4DAA4B,CAAA;IAC5B,4DAA4B,CAAA;IAC5B,4DAA4B,CAAA;IAC5B,8DAA8B,CAAA;IAC9B,8DAA8B,CAAA;IAC9B,8DAA8B,CAAA;IAC9B,8DAA8B,CAAA;IAC9B,iEAAiC,CAAA;IACjC,iEAAiC,CAAA;IACjC,iEAAiC,CAAA;IACjC,iEAAiC,CAAA;IACjC,iEAAiC,CAAA;IACjC,mEAAmC,CAAA;IACnC,mEAAmC,CAAA;IACnC,mEAAmC,CAAA;IACnC,mEAAmC,CAAA;IACnC,mEAAmC,CAAA;IACnC,sEAAsC,CAAA;IACtC,sEAAsC,CAAA;IACtC,sEAAsC,CAAA;IACtC,sEAAsC,CAAA;IACtC,+DAA+B,CAAA;IAC/B,+DAA+B,CAAA;IAC/B,+DAA+B,CAAA;IAC/B,iEAAiC,CAAA;IACjC,iEAAiC,CAAA;IACjC,iEAAiC,CAAA;IACjC,iEAAiC,CAAA;IACjC,iEAAiC,CAAA;IACjC,iEAAiC,CAAA;IACjC,mEAAmC,CAAA;IACnC,mEAAmC,CAAA;IACnC,mEAAmC,CAAA;IACnC,sEAAsC,CAAA;IACtC,sEAAsC,CAAA;IACtC,wEAAwC,CAAA;IACxC,wEAAwC,CAAA;IACxC,0DAA0B,CAAA;IAC1B,0DAA0B,CAAA;IAC1B,0DAA0B,CAAA;IAC1B,0DAA0B,CAAA;IAC1B,4DAA4B,CAAA;IAC5B,4DAA4B,CAAA;IAC5B,4DAA4B,CAAA;IAC5B,4DAA4B,CAAA;IAC5B,4DAA4B,CAAA;IAC5B,8DAA8B,CAAA;IAC9B,iEAAiC,CAAA;IACjC,iEAAiC,CAAA;IACjC,iEAAiC,CAAA;IACjC,mEAAmC,CAAA;IACnC,mEAAmC,CAAA;IACnC,mEAAmC,CAAA;IACnC,mEAAmC,CAAA;IACnC,0DAA0B,CAAA;IAC1B,0DAA0B,CAAA;IAC1B,0DAA0B,CAAA;IAC1B,0DAA0B,CAAA;IAC1B,0DAA0B,CAAA;IAC1B,4DAA4B,CAAA;IAC5B,4DAA4B,CAAA;IAC5B,4DAA4B,CAAA;IAC5B,4DAA4B,CAAA;IAC5B,4DAA4B,CAAA;IAC5B,+DAA+B,CAAA;IAC/B,+DAA+B,CAAA;IAC/B,iEAAiC,CAAA;IACjC,+DAA+B,CAAA;IAC/B,0DAA0B,CAAA;IAC1B,4DAA4B,CAAA;IAC5B,4DAA4B,CAAA;IAC5B,8DAA8B,CAAA;IAC9B,8DAA8B,CAAA;IAC9B,gEAAgC,CAAA;IAChC,4DAA4B,CAAA;IAC5B,4DAA4B,CAAA;IAC5B,8DAA8B,CAAA;IAC9B,8DAA8B,CAAA;IAC9B,8DAA8B,CAAA;IAC9B,gEAAgC,CAAA;IAChC,gEAAgC,CAAA;IAChC,kEAAkC,CAAA;IAClC,qEAAqC,CAAA;IACrC,qEAAqC,CAAA;IACrC,uEAAuC,CAAA;IACvC,uEAAuC,CAAA;IACvC,4DAA4B,CAAA;IAC5B,8DAA8B,CAAA;IAC9B,8DAA8B,CAAA;IAC9B,gEAAgC,CAAA;IAChC,mEAAmC,CAAA;IACnC,qEAAqC,CAAA;IACrC,qEAAqC,CAAA;IACrC,uEAAuC,CAAA;IACvC,mEAAmC,CAAA;IACnC,qEAAqC,CAAA;IACrC,qEAAqC,CAAA;IACrC,uEAAuC,CAAA;IACvC,8DAA8B,CAAA;IAC9B,gEAAgC,CAAA;IAChC,gEAAgC,CAAA;IAChC,kEAAkC,CAAA;IAClC,4DAA4B,CAAA;IAC5B,8DAA8B,CAAA;IAC9B,8DAA8B,CAAA;AAChC,CAAC,EAvKWC,oCAA4B,KAA5BA,oCAA4B,QAuKvC;AAiLD,WAAY,oBAAoB;IAC9B,uCAAe,CAAA;AACjB,CAAC,EAFWC,4BAAoB,KAApBA,4BAAoB,QAE/B;AAYD,WAAY,sBAAsB;IAChC,iDAAuB,CAAA;IACvB,uDAA6B,CAAA;AAC/B,CAAC,EAHWC,8BAAsB,KAAtBA,8BAAsB,QAGjC;AAaD,WAAY,0BAA0B;IACpC,qDAAuB,CAAA;IACvB,6CAAe,CAAA;IACf,+CAAiB,CAAA;AACnB,CAAC,EAJWC,kCAA0B,KAA1BA,kCAA0B,QAIrC;AAcD,WAAY,wBAAwB;IAClC,wDAA4B,CAAA;IAC5B,sDAA0B,CAAA;IAC1B,8DAAkC,CAAA;IAClC,wDAA4B,CAAA;IAC5B,sDAA0B,CAAA;IAC1B,8DAAkC,CAAA;AACpC,CAAC,EAPWC,gCAAwB,KAAxBA,gCAAwB,QAOnC;AAiBD,WAAY,4BAA4B;IACtC,qEAAqC,CAAA;IACrC,6EAA6C,CAAA;AAC/C,CAAC,EAHWC,oCAA4B,KAA5BA,oCAA4B,QAGvC;AAaD,WAAY,0BAA0B;IACpC,+CAAiB,CAAA;IACjB,+CAAiB,CAAA;AACnB,CAAC,EAHWC,kCAA0B,KAA1BA,kCAA0B,QAGrC;AAaD,WAAY,0BAA0B;IACpC,yDAA2B,CAAA;AAC7B,CAAC,EAFWC,kCAA0B,KAA1BA,kCAA0B,QAErC;AAYD,WAAY,4BAA4B;IACtC,iDAAiB,CAAA;IACjB,+DAA+B,CAAA;IAC/B,2EAA2C,CAAA;AAC7C,CAAC,EAJWC,oCAA4B,KAA5BA,oCAA4B,QAIvC;AAcD,WAAY,+BAA+B;IACzC,gEAA6B,CAAA;IAC7B,8EAA2C,CAAA;AAC7C,CAAC,EAHWC,uCAA+B,KAA/BA,uCAA+B,QAG1C;AAaD,WAAY,0BAA0B;IACpC,2DAA6B,CAAA;IAC7B,yEAA2C,CAAA;AAC7C,CAAC,EAHWC,kCAA0B,KAA1BA,kCAA0B,QAGrC;AAaD,WAAY,6BAA6B;IACvC,8DAA6B,CAAA;IAC7B,4EAA2C,CAAA;AAC7C,CAAC,EAHWC,qCAA6B,KAA7BA,qCAA6B,QAGxC;AAaD,WAAY,kBAAkB;IAC5B,uCAAiB,CAAA;IACjB,uCAAiB,CAAA;AACnB,CAAC,EAHWC,0BAAkB,KAAlBA,0BAAkB,QAG7B;AAaD,WAAY,sBAAsB;IAChC,8DAAoC,CAAA;AACtC,CAAC,EAFWC,8BAAsB,KAAtBA,8BAAsB,QAEjC;AAYD,WAAY,eAAe;IACzB,gCAAa,CAAA;IACb,gCAAa,CAAA;AACf,CAAC,EAHWC,uBAAe,KAAfA,uBAAe,QAG1B;AAaD,WAAY,6BAA6B;IACvC,oDAAmB,CAAA;IACnB,kDAAiB,CAAA;AACnB,CAAC,EAHWC,qCAA6B,KAA7BA,qCAA6B,QAGxC;AAaD,WAAY,2BAA2B;IACrC,8CAAe,CAAA;IACf,oDAAqB,CAAA;AACvB,CAAC,EAHWC,mCAA2B,KAA3BA,mCAA2B,QAGtC;AAaD,WAAY,2BAA2B;IACrC,oDAAqB,CAAA;IACrB,gDAAiB,CAAA;AACnB,CAAC,EAHWC,mCAA2B,KAA3BA,mCAA2B,QAGtC;AAaD,WAAY,kBAAkB;IAC5B,qDAA+B,CAAA;IAC/B,uDAAiC,CAAA;AACnC,CAAC,EAHWC,0BAAkB,KAAlBA,0BAAkB,QAG7B;AAaD,WAAY,gCAAgC;IAC1C,uDAAmB,CAAA;IACnB,+CAAW,CAAA;IACX,iDAAa,CAAA;AACf,CAAC,EAJWC,wCAAgC,KAAhCA,wCAAgC,QAI3C;AAcD,WAAY,sCAAsC;IAChD,mEAAyB,CAAA;IACzB,2DAAiB,CAAA;AACnB,CAAC,EAHWC,8CAAsC,KAAtCA,8CAAsC,QAGjD;AAaD,WAAY,yBAAyB;IACnC,sCAAS,CAAA;IACT,sCAAS,CAAA;AACX,CAAC,EAHWC,iCAAyB,KAAzBA,iCAAyB,QAGpC;AAaD,WAAY,yBAAyB;IACnC,gDAAmB,CAAA;IACnB,sDAAyB,CAAA;IACzB,8CAAiB,CAAA;IACjB,oDAAuB,CAAA;IACvB,4EAA+C,CAAA;AACjD,CAAC,EANWC,iCAAyB,KAAzBA,iCAAyB,QAMpC;AAgBD,WAAY,iBAAiB;IAC3B,wCAAmB,CAAA;IACnB,wCAAmB,CAAA;IACnB,wCAAmB,CAAA;AACrB,CAAC,EAJWC,yBAAiB,KAAjBA,yBAAiB,QAI5B;AAcD,WAAY,cAAc;IACxB,+BAAa,CAAA;IACb,+BAAa,CAAA;AACf,CAAC,EAHWC,sBAAc,KAAdA,sBAAc,QAGzB;AAaD,WAAY,uCAAuC;IACjD,8DAAmB,CAAA;IACnB,gEAAqB,CAAA;IACrB,gEAAqB,CAAA;AACvB,CAAC,EAJWC,+CAAuC,KAAvCA,+CAAuC,QAIlD;AAcD,WAAY,sBAAsB;IAChC,6CAAmB,CAAA;IACnB,+CAAqB,CAAA;AACvB,CAAC,EAHWC,8BAAsB,KAAtBA,8BAAsB,QAGjC;AAaD,WAAY,wBAAwB;IAClC,+CAAmB,CAAA;IACnB,2CAAe,CAAA;AACjB,CAAC,EAHWC,gCAAwB,KAAxBA,gCAAwB,QAGnC;AAaD,WAAY,yBAAyB;IACnC,gEAAmC,CAAA;IACnC,0EAA6C,CAAA;IAC7C,4EAA+C,CAAA;AACjD,CAAC,EAJWC,iCAAyB,KAAzBA,iCAAyB,QAIpC;AAcD,WAAY,wCAAwC;IAClD,2EAA+B,CAAA;AACjC,CAAC,EAFWC,gDAAwC,KAAxCA,gDAAwC,QAEnD;AAYD,WAAY,8BAA8B;IACxC,+DAA6B,CAAA;AAC/B,CAAC,EAFWC,sCAA8B,KAA9BA,sCAA8B,QAEzC;AAYD,WAAY,8CAA8C;IACxD,+EAA6B,CAAA;AAC/B,CAAC,EAFWC,sDAA8C,KAA9CA,sDAA8C,QAEzD;AAYD,WAAY,+CAA+C;IACzD,kHAA+D,CAAA;IAC/D,8FAA2C,CAAA;AAC7C,CAAC,EAHWC,uDAA+C,KAA/CA,uDAA+C,QAG1D;AAaD,WAAY,yCAAyC;IACnD,0EAA6B,CAAA;AAC/B,CAAC,EAFWC,iDAAyC,KAAzCA,iDAAyC,QAEpD;AAYD,WAAY,+BAA+B;IACzC,sDAAmB,CAAA;IACnB,gEAA6B,CAAA;IAC7B,gFAA6C,CAAA;IAC7C,wEAAqC,CAAA;AACvC,CAAC,EALWC,uCAA+B,KAA/BA,uCAA+B,QAK1C;AAeD,WAAY,yBAAyB;IACnC,gDAAmB,CAAA;IACnB,oDAAuB,CAAA;AACzB,CAAC,EAHWC,iCAAyB,KAAzBA,iCAAyB,QAGpC;AAaD,WAAY,8BAA8B;IACxC,2DAAyB,CAAA;IACzB,iDAAe,CAAA;IACf,mDAAiB,CAAA;AACnB,CAAC,EAJWC,sCAA8B,KAA9BA,sCAA8B,QAIzC;AAcD,WAAY,sCAAsC;IAChD,+DAAqB,CAAA;IACrB,+DAAqB,CAAA;IACrB,uEAA6B,CAAA;IAC7B,qEAA2B,CAAA;IAC3B,qEAA2B,CAAA;IAC3B,mEAAyB,CAAA;IACzB,yDAAe,CAAA;IACf,6DAAmB,CAAA;AACrB,CAAC,EATWC,8CAAsC,KAAtCA,8CAAsC,QASjD;AAmBD,WAAY,oCAAoC;IAC9C,6DAAqB,CAAA;IACrB,6DAAqB,CAAA;IACrB,uDAAe,CAAA;AACjB,CAAC,EAJWC,4CAAoC,KAApCA,4CAAoC,QAI/C;AAcD,WAAY,6BAA6B;IACvC,oDAAmB,CAAA;IACnB,wDAAuB,CAAA;IACvB,sDAAqB,CAAA;IACrB,oDAAmB,CAAA;IACnB,kDAAiB,CAAA;IACjB,wDAAuB,CAAA;AACzB,CAAC,EAPWC,qCAA6B,KAA7BA,qCAA6B,QAOxC;AAiBD,WAAY,2BAA2B;IACrC,kDAAmB,CAAA;IACnB,sDAAuB,CAAA;IACvB,gDAAiB,CAAA;IACjB,oDAAqB,CAAA;IACrB,0DAA2B,CAAA;IAC3B,kDAAmB,CAAA;AACrB,CAAC,EAPWC,mCAA2B,KAA3BA,mCAA2B,QAOtC;AAiBD,WAAY,iCAAiC;IAC3C,0DAAqB,CAAA;AACvB,CAAC,EAFWC,yCAAiC,KAAjCA,yCAAiC,QAE5C;AAYD,WAAY,8BAA8B;IACxC,uEAAqC,CAAA;IACrC,iGAA+D,CAAA;AACjE,CAAC,EAHWC,sCAA8B,KAA9BA,sCAA8B,QAGzC;AAaD,WAAY,8BAA8B;IACxC,2DAAyB,CAAA;IACzB,qDAAmB,CAAA;IACnB,yDAAuB,CAAA;AACzB,CAAC,EAJWC,sCAA8B,KAA9BA,sCAA8B,QAIzC;AAcD,WAAY,oCAAoC;IAC9C,yDAAiB,CAAA;IACjB,2DAAmB,CAAA;AACrB,CAAC,EAHWC,4CAAoC,KAApCA,4CAAoC,QAG/C;AAaD,WAAY,mBAAmB;IAC7B,0CAAmB,CAAA;IACnB,0CAAmB,CAAA;IACnB,0CAAmB,CAAA;IACnB,wCAAiB,CAAA;IACjB,8CAAuB,CAAA;IACvB,4CAAqB,CAAA;IACrB,4CAAqB,CAAA;AACvB,CAAC,EARWC,2BAAmB,KAAnBA,2BAAmB,QAQ9B;AAkBD,WAAY,yBAAyB;IACnC,kDAAqB,CAAA;AACvB,CAAC,EAFWC,iCAAyB,KAAzBA,iCAAyB,QAEpC;AAYD,WAAY,4BAA4B;;IAEtC,4DAA4B,CAAA;;IAE5B,0DAA0B,CAAA;;IAE1B,kEAAkC,CAAA;;IAElC,4DAA4B,CAAA;;IAE5B,0DAA0B,CAAA;;IAE1B,kEAAkC,CAAA;AACpC,CAAC,EAbWC,oCAA4B,KAA5BA,oCAA4B,QAavC;AAiBD,WAAY,qBAAqB;IAC/B,kCAAS,CAAA;IACT,kCAAS,CAAA;AACX,CAAC,EAHWC,6BAAqB,KAArBA,6BAAqB,QAGhC;AAaD,WAAY,qBAAqB;;IAE/B,wCAAe,CAAA;;IAEf,0CAAiB,CAAA;;IAEjB,gDAAuB,CAAA;;IAEvB,0CAAiB,CAAA;;IAEjB,sCAAa,CAAA;;IAEb,4CAAmB,CAAA;;IAEnB,0CAAiB,CAAA;;IAEjB,gDAAuB,CAAA;;IAEvB,sDAA6B,CAAA;;IAE7B,sEAA6C,CAAA;AAC/C,CAAC,EArBWC,6BAAqB,KAArBA,6BAAqB,QAqBhC;AAqBD,WAAY,cAAc;;IAExB,2CAAyB,CAAA;;IAEzB,uCAAqB,CAAA;;IAErB,uCAAqB,CAAA;;IAErB,mCAAiB,CAAA;;IAEjB,yCAAuB,CAAA;;IAEvB,qDAAmC,CAAA;;IAEnC,iDAA+B,CAAA;;IAE/B,+CAA6B,CAAA;AAC/B,CAAC,EAjBWC,sBAAc,KAAdA,sBAAc,QAiBzB;AAmBD,WAAY,mBAAmB;;IAE7B,0FAAmE,CAAA;;IAEnE,0FAAmE,CAAA;;IAEnE,kHAA2F,CAAA;AAC7F,CAAC,EAPWC,2BAAmB,KAAnBA,2BAAmB,QAO9B;AAcD,WAAY,wBAAwB;;IAElC,iDAAqB,CAAA;;IAErB,yDAA6B,CAAA;;IAE7B,+CAAmB,CAAA;AACrB,CAAC,EAPWC,gCAAwB,KAAxBA,gCAAwB,QAOnC;AAcD,WAAY,sBAAsB;;IAEhC,yDAA+B,CAAA;;IAE/B,4IAAkH,CAAA;;IAElH,oHAA0F,CAAA;;IAE1F,oHAA0F,CAAA;AAC5F,CAAC,EATWC,8BAAsB,KAAtBA,8BAAsB,QASjC;AAeD,WAAY,wBAAwB;;IAElC,+CAAmB,CAAA;;IAEnB,iDAAqB,CAAA;AACvB,CAAC,EALWC,gCAAwB,KAAxBA,gCAAwB,QAKnC;AAaD,WAAY,gBAAgB;IAC1B,iCAAa,CAAA;IACb,iCAAa,CAAA;IACb,mCAAe,CAAA;AACjB,CAAC,EAJWC,wBAAgB,KAAhBA,wBAAgB,QAI3B;AAcD,WAAY,gCAAgC;;IAE1C,gEAA4B,CAAA;;IAE5B,8DAA0B,CAAA;;IAE1B,gEAA4B,CAAA;AAC9B,CAAC,EAPWC,wCAAgC,KAAhCA,wCAAgC,QAO3C;AAcD,WAAY,kCAAkC;IAC5C,uEAAiC,CAAA;IACjC,mDAAa,CAAA;AACf,CAAC,EAHWC,0CAAkC,KAAlCA,0CAAkC,QAG7C;AAaD,WAAY,0BAA0B;;IAEpC,iGAAmE,CAAA;;IAEnE,yHAA2F,CAAA;;IAE3F,+GAAiF,CAAA;AACnF,CAAC,EAPWC,kCAA0B,KAA1BA,kCAA0B,QAOrC;AAcD,WAAY,2CAA2C;IACrD,kEAAmB,CAAA;IACnB,oEAAqB,CAAA;IACrB,oEAAqB,CAAA;AACvB,CAAC,EAJWC,mDAA2C,KAA3CA,mDAA2C,QAItD;AAcD,WAAY,+CAA+C;IACzD,0EAAuB,CAAA;IACvB,wEAAqB,CAAA;IACrB,wEAAqB,CAAA;IACrB,oEAAiB,CAAA;AACnB,CAAC,EALWC,uDAA+C,KAA/CA,uDAA+C,QAK1D;AAeD,WAAY,uCAAuC;IACjD,gEAAqB,CAAA;IACrB,gEAAqB,CAAA;IACrB,4DAAiB,CAAA;IACjB,kEAAuB,CAAA;IACvB,gEAAqB,CAAA;IACrB,kEAAuB,CAAA;AACzB,CAAC,EAPWC,+CAAuC,KAAvCA,+CAAuC,QAOlD;AAiBD,WAAY,kCAAkC;IAC5C,yDAAmB,CAAA;IACnB,uDAAiB,CAAA;AACnB,CAAC,EAHWC,0CAAkC,KAAlCA,0CAAkC,QAG7C;AAaD,WAAY,6BAA6B;IACvC,gEAA+B,CAAA;IAC/B,0DAAyB,CAAA;IACzB,wDAAuB,CAAA;AACzB,CAAC,EAJWC,qCAA6B,KAA7BA,qCAA6B,QAIxC;AAcD,WAAY,iBAAiB;IAC3B,4CAAuB,CAAA;IACvB,8CAAyB,CAAA;IACzB,sCAAiB,CAAA;IACjB,wCAAmB,CAAA;AACrB,CAAC,EALWC,yBAAiB,KAAjBA,yBAAiB,QAK5B;AAeD,WAAY,sBAAsB;IAChC,qDAA2B,CAAA;AAC7B,CAAC,EAFWC,8BAAsB,KAAtBA,8BAAsB,QAEjC;AAYD,WAAY,wBAAwB;IAClC,0EAA8C,CAAA;AAChD,CAAC,EAFWC,gCAAwB,KAAxBA,gCAAwB,QAEnC;AAYD,WAAY,4CAA4C;IACtD,qEAAqB,CAAA;IACrB,qEAAqB,CAAA;IACrB,iEAAiB,CAAA;IACjB,uEAAuB,CAAA;IACvB,qEAAqB,CAAA;IACrB,uEAAuB,CAAA;AACzB,CAAC,EAPWC,oDAA4C,KAA5CA,oDAA4C,QAOvD;AAiBD,WAAY,uBAAuB;IACjC,uDAA4B,CAAA;IAC5B,uDAA4B,CAAA;IAC5B,qDAA0B,CAAA;AAC5B,CAAC,EAJWC,+BAAuB,KAAvBA,+BAAuB,QAIlC;AAcD,WAAY,iCAAiC;IAC3C,0GAAqE,CAAA;IACrE,0EAAqC,CAAA;IACrC,0EAAqC,CAAA;AACvC,CAAC,EAJWC,yCAAiC,KAAjCA,yCAAiC,QAI5C;AAcD,WAAY,oBAAoB;IAC9B,qCAAa,CAAA;IACb,2CAAmB,CAAA;AACrB,CAAC,EAHWC,4BAAoB,KAApBA,4BAAoB,QAG/B;AAaD,WAAY,gCAAgC;IAC1C,yDAAqB,CAAA;IACrB,uDAAmB,CAAA;AACrB,CAAC,EAHWC,wCAAgC,KAAhCA,wCAAgC,QAG3C;AAaD,WAAY,mDAAmD;IAC7D,4EAAqB,CAAA;IACrB,4EAAqB,CAAA;IACrB,wEAAiB,CAAA;IACjB,8EAAuB,CAAA;IACvB,4EAAqB,CAAA;IACrB,8EAAuB,CAAA;AACzB,CAAC,EAPWC,2DAAmD,KAAnDA,2DAAmD,QAO9D;AAiBD,WAAY,+BAA+B;IACzC,sDAAmB,CAAA;IACnB,4DAAyB,CAAA;IACzB,0DAAuB,CAAA;IACvB,oDAAiB,CAAA;AACnB,CAAC,EALWC,uCAA+B,KAA/BA,uCAA+B,QAK1C;AAeD,WAAY,qBAAqB;IAC/B,4CAAmB,CAAA;IACnB,oDAA2B,CAAA;IAC3B,gDAAuB,CAAA;IACvB,0CAAiB,CAAA;AACnB,CAAC,EALWC,6BAAqB,KAArBA,6BAAqB,QAKhC;AAeD,WAAY,2BAA2B;IACrC,sEAAuC,CAAA;AACzC,CAAC,EAFWC,mCAA2B,KAA3BA,mCAA2B,QAEtC;AAYD,WAAY,yDAAyD;IACnE,kFAAqB,CAAA;IACrB,kFAAqB,CAAA;IACrB,8EAAiB,CAAA;IACjB,oFAAuB,CAAA;IACvB,kFAAqB,CAAA;IACrB,oFAAuB,CAAA;AACzB,CAAC,EAPWC,iEAAyD,KAAzDA,iEAAyD,QAOpE;AAiBD,WAAY,gCAAgC;IAC1C,+CAAW,CAAA;IACX,qDAAiB,CAAA;IACjB,mDAAe,CAAA;IACf,uEAAmC,CAAA;AACrC,CAAC,EALWC,wCAAgC,KAAhCA,wCAAgC,QAK3C;AAeD,WAAY,mBAAmB;IAC7B,wCAAiB,CAAA;AACnB,CAAC,EAFWC,2BAAmB,KAAnBA,2BAAmB,QAE9B;AAYD,WAAY,4BAA4B;IACtC,6CAAa,CAAA;IACb,iDAAiB,CAAA;IACjB,6DAA6B,CAAA;AAC/B,CAAC,EAJWC,oCAA4B,KAA5BA,oCAA4B,QAIvC;AAcD,WAAY,4BAA4B;IACtC,mDAAmB,CAAA;IACnB,mDAAmB,CAAA;AACrB,CAAC,EAHWC,oCAA4B,KAA5BA,oCAA4B;;AC5sPxC;;;;;;;AAUA,AAAO,MAAM,0BAA0B,GAA+B;IACpE,IAAI,EAAE;QACJ,IAAI,EAAE,WAAW;QACjB,SAAS,EAAE,4BAA4B;QACvC,eAAe,EAAE;YACf,KAAK,EAAE;gBACL,cAAc,EAAE,OAAO;gBACvB,QAAQ,EAAE,IAAI;gBACd,IAAI,EAAE;oBACJ,IAAI,EAAE,UAAU;oBAChB,OAAO,EAAE;wBACP,IAAI,EAAE;4BACJ,IAAI,EAAE,WAAW;4BACjB,SAAS,EAAE,uBAAuB;yBACnC;qBACF;iBACF;aACF;SACF;KACF;CACF,CAAC;AAEF,AAAO,MAAM,qBAAqB,GAA+B;IAC/D,IAAI,EAAE;QACJ,IAAI,EAAE,WAAW;QACjB,SAAS,EAAE,uBAAuB;QAClC,eAAe,EAAE;YACf,MAAM,EAAE;gBACN,cAAc,EAAE,QAAQ;gBACxB,QAAQ,EAAE,IAAI;gBACd,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;YACD,IAAI,EAAE;gBACJ,cAAc,EAAE,MAAM;gBACtB,QAAQ,EAAE,IAAI;gBACd,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;YACD,SAAS,EAAE;gBACT,cAAc,EAAE,mBAAmB;gBACnC,QAAQ,EAAE,IAAI;gBACd,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;YACD,QAAQ,EAAE;gBACR,cAAc,EAAE,kBAAkB;gBAClC,QAAQ,EAAE,IAAI;gBACd,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;YACD,WAAW,EAAE;gBACX,cAAc,EAAE,qBAAqB;gBACrC,QAAQ,EAAE,IAAI;gBACd,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;YACD,QAAQ,EAAE;gBACR,cAAc,EAAE,kBAAkB;gBAClC,QAAQ,EAAE,IAAI;gBACd,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;SACF;KACF;CACF,CAAC;AAEF,AAAO,MAAM,UAAU,GAA+B;IACpD,IAAI,EAAE;QACJ,IAAI,EAAE,WAAW;QACjB,SAAS,EAAE,YAAY;QACvB,eAAe,EAAE;YACf,KAAK,EAAE;gBACL,cAAc,EAAE,OAAO;gBACvB,IAAI,EAAE;oBACJ,IAAI,EAAE,WAAW;oBACjB,SAAS,EAAE,UAAU;iBACtB;aACF;SACF;KACF;CACF,CAAC;AAEF,AAAO,MAAM,QAAQ,GAA+B;IAClD,IAAI,EAAE;QACJ,IAAI,EAAE,WAAW;QACjB,SAAS,EAAE,UAAU;QACrB,eAAe,EAAE;YACf,OAAO,EAAE;gBACP,cAAc,EAAE,SAAS;gBACzB,IAAI,EAAE;oBACJ,IAAI,EAAE,UAAU;oBAChB,OAAO,EAAE;wBACP,IAAI,EAAE;4BACJ,IAAI,EAAE,WAAW;4BACjB,SAAS,EAAE,cAAc;yBAC1B;qBACF;iBACF;aACF;YACD,UAAU,EAAE;gBACV,cAAc,EAAE,YAAY;gBAC5B,IAAI,EAAE;oBACJ,IAAI,EAAE,WAAW;oBACjB,SAAS,EAAE,YAAY;iBACxB;aACF;YACD,IAAI,EAAE;gBACJ,cAAc,EAAE,MAAM;gBACtB,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;YACD,MAAM,EAAE;gBACN,cAAc,EAAE,QAAQ;gBACxB,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;YACD,OAAO,EAAE;gBACP,cAAc,EAAE,SAAS;gBACzB,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;SACF;KACF;CACF,CAAC;AAEF,AAAO,MAAM,YAAY,GAA+B;IACtD,IAAI,EAAE;QACJ,IAAI,EAAE,WAAW;QACjB,SAAS,EAAE,cAAc;QACzB,eAAe,EAAE;YACf,IAAI,EAAE;gBACJ,cAAc,EAAE,MAAM;gBACtB,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;YACD,MAAM,EAAE;gBACN,cAAc,EAAE,QAAQ;gBACxB,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;YACD,OAAO,EAAE;gBACP,cAAc,EAAE,SAAS;gBACzB,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;SACF;KACF;CACF,CAAC;AAEF,AAAO,MAAM,UAAU,GAA+B;IACpD,IAAI,EAAE;QACJ,IAAI,EAAE,WAAW;QACjB,SAAS,EAAE,YAAY;QACvB,eAAe,EAAE;YACf,aAAa,EAAE;gBACb,cAAc,EAAE,eAAe;gBAC/B,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;YACD,WAAW,EAAE;gBACX,cAAc,EAAE,aAAa;gBAC7B,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;SACF;KACF;CACF,CAAC;AAEF,AAAO,MAAM,WAAW,GAA+B;IACrD,IAAI,EAAE;QACJ,IAAI,EAAE,WAAW;QACjB,SAAS,EAAE,aAAa;QACxB,eAAe,EAAE;YACf,EAAE,EAAE;gBACF,cAAc,EAAE,IAAI;gBACpB,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;SACF;KACF;CACF,CAAC;AAEF,AAAO,MAAM,kBAAkB,GAA+B;IAC5D,IAAI,EAAE;QACJ,IAAI,EAAE,WAAW;QACjB,SAAS,EAAE,oBAAoB;QAC/B,eAAe,EAAE;YACf,IAAI,EAAE;gBACJ,cAAc,EAAE,MAAM;gBACtB,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;YACD,KAAK,EAAE;gBACL,cAAc,EAAE,OAAO;gBACvB,IAAI,EAAE;oBACJ,IAAI,EAAE,MAAM;oBACZ,aAAa,EAAE,CAAC,MAAM,EAAE,SAAS,EAAE,OAAO,CAAC;iBAC5C;aACF;YACD,aAAa,EAAE;gBACb,cAAc,EAAE,eAAe;gBAC/B,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;YACD,OAAO,EAAE;gBACP,cAAc,EAAE,SAAS;gBACzB,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;YACD,IAAI,EAAE;gBACJ,cAAc,EAAE,MAAM;gBACtB,IAAI,EAAE;oBACJ,IAAI,EAAE,UAAU;iBACjB;aACF;SACF;KACF;CACF,CAAC;AAEF,AAAO,MAAM,GAAG,GAA+B;IAC7C,IAAI,EAAE;QACJ,IAAI,EAAE,WAAW;QACjB,SAAS,EAAE,KAAK;QAChB,eAAe,EAAE;YACf,IAAI,EAAE;gBACJ,cAAc,EAAE,MAAM;gBACtB,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;YACD,IAAI,EAAE;gBACJ,cAAc,EAAE,MAAM;gBACtB,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;YACD,QAAQ,EAAE;gBACR,cAAc,EAAE,UAAU;gBAC1B,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;SACF;KACF;CACF,CAAC;AAEF,AAAO,MAAM,QAAQ,GAA+B;IAClD,IAAI,EAAE;QACJ,IAAI,EAAE,WAAW;QACjB,SAAS,EAAE,UAAU;QACrB,eAAe,EAAE;YACf,EAAE,EAAE;gBACF,cAAc,EAAE,IAAI;gBACpB,QAAQ,EAAE,IAAI;gBACd,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;YACD,IAAI,EAAE;gBACJ,cAAc,EAAE,MAAM;gBACtB,QAAQ,EAAE,IAAI;gBACd,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;YACD,IAAI,EAAE;gBACJ,cAAc,EAAE,MAAM;gBACtB,QAAQ,EAAE,IAAI;gBACd,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;YACD,QAAQ,EAAE;gBACR,cAAc,EAAE,UAAU;gBAC1B,QAAQ,EAAE,IAAI;gBACd,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;YACD,IAAI,EAAE;gBACJ,cAAc,EAAE,MAAM;gBACtB,IAAI,EAAE;oBACJ,IAAI,EAAE,YAAY;oBAClB,KAAK,EAAE,EAAE,IAAI,EAAE,EAAE,IAAI,EAAE,QAAQ,EAAE,EAAE;iBACpC;aACF;SACF;KACF;CACF,CAAC;AAEF,AAAO,MAAM,cAAc,GAA+B;IACxD,IAAI,EAAE;QACJ,IAAI,EAAE,WAAW;QACjB,SAAS,EAAE,gBAAgB;QAC3B,eAAe,EAAE;YACf,IAAI,EAAE;gBACJ,cAAc,EAAE,MAAM;gBACtB,IAAI,EAAE;oBACJ,IAAI,EAAE,YAAY;oBAClB,KAAK,EAAE,EAAE,IAAI,EAAE,EAAE,IAAI,EAAE,QAAQ,EAAE,EAAE;iBACpC;aACF;SACF;KACF;CACF,CAAC;AAEF,AAAO,MAAM,yBAAyB,GAA+B;IACnE,IAAI,EAAE;QACJ,IAAI,EAAE,WAAW;QACjB,SAAS,EAAE,2BAA2B;QACtC,eAAe,EAAE;YACf,KAAK,EAAE;gBACL,cAAc,EAAE,OAAO;gBACvB,QAAQ,EAAE,IAAI;gBACd,IAAI,EAAE;oBACJ,IAAI,EAAE,UAAU;oBAChB,OAAO,EAAE;wBACP,IAAI,EAAE;4BACJ,IAAI,EAAE,WAAW;4BACjB,SAAS,EAAE,iBAAiB;yBAC7B;qBACF;iBACF;aACF;YACD,QAAQ,EAAE;gBACR,cAAc,EAAE,UAAU;gBAC1B,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;SACF;KACF;CACF,CAAC;AAEF,AAAO,MAAM,4BAA4B,GAA+B;IACtE,IAAI,EAAE;QACJ,IAAI,EAAE,WAAW;QACjB,SAAS,EAAE,8BAA8B;QACzC,eAAe,EAAE;YACf,KAAK,EAAE;gBACL,cAAc,EAAE,OAAO;gBACvB,IAAI,EAAE;oBACJ,IAAI,EAAE,UAAU;oBAChB,OAAO,EAAE;wBACP,IAAI,EAAE;4BACJ,IAAI,EAAE,WAAW;4BACjB,SAAS,EAAE,oBAAoB;yBAChC;qBACF;iBACF;aACF;SACF;KACF;CACF,CAAC;AAEF,AAAO,MAAM,kBAAkB,GAA+B;IAC5D,IAAI,EAAE;QACJ,IAAI,EAAE,WAAW;QACjB,SAAS,EAAE,oBAAoB;QAC/B,eAAe,EAAE;YACf,IAAI,EAAE;gBACJ,cAAc,EAAE,MAAM;gBACtB,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;YACD,aAAa,EAAE;gBACb,cAAc,EAAE,eAAe;gBAC/B,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;YACD,cAAc,EAAE;gBACd,cAAc,EAAE,gBAAgB;gBAChC,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;YACD,oBAAoB,EAAE;gBACpB,cAAc,EAAE,sBAAsB;gBACtC,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;YACD,UAAU,EAAE;gBACV,cAAc,EAAE,YAAY;gBAC5B,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;YACD,gBAAgB,EAAE;gBAChB,cAAc,EAAE,kBAAkB;gBAClC,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;SACF;KACF;CACF,CAAC;AAEF,AAAO,MAAM,iCAAiC,GAA+B;IAC3E,IAAI,EAAE;QACJ,IAAI,EAAE,WAAW;QACjB,SAAS,EAAE,mCAAmC;QAC9C,eAAe,EAAE;YACf,KAAK,EAAE;gBACL,cAAc,EAAE,OAAO;gBACvB,QAAQ,EAAE,IAAI;gBACd,IAAI,EAAE;oBACJ,IAAI,EAAE,UAAU;oBAChB,OAAO,EAAE;wBACP,IAAI,EAAE;4BACJ,IAAI,EAAE,WAAW;4BACjB,SAAS,EAAE,yBAAyB;yBACrC;qBACF;iBACF;aACF;YACD,QAAQ,EAAE;gBACR,cAAc,EAAE,UAAU;gBAC1B,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;SACF;KACF;CACF,CAAC;AAEF,AAAO,MAAM,mBAAmB,GAA+B;IAC7D,IAAI,EAAE;QACJ,IAAI,EAAE,WAAW;QACjB,SAAS,EAAE,qBAAqB;QAChC,eAAe,EAAE;YACf,EAAE,EAAE;gBACF,cAAc,EAAE,IAAI;gBACpB,QAAQ,EAAE,IAAI;gBACd,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;SACF;KACF;CACF,CAAC;AAEF,AAAO,MAAM,8BAA8B,GAA+B;IACxE,IAAI,EAAE;QACJ,IAAI,EAAE,WAAW;QACjB,SAAS,EAAE,gCAAgC;QAC3C,eAAe,EAAE;YACf,KAAK,EAAE;gBACL,cAAc,EAAE,OAAO;gBACvB,IAAI,EAAE;oBACJ,IAAI,EAAE,UAAU;oBAChB,OAAO,EAAE;wBACP,IAAI,EAAE;4BACJ,IAAI,EAAE,WAAW;4BACjB,SAAS,EAAE,mCAAmC;yBAC/C;qBACF;iBACF;aACF;SACF;KACF;CACF,CAAC;AAEF,AAAO,MAAM,yBAAyB,GAA+B;IACnE,IAAI,EAAE;QACJ,IAAI,EAAE,WAAW;QACjB,SAAS,EAAE,2BAA2B;QACtC,eAAe,EAAE;YACf,OAAO,EAAE;gBACP,cAAc,EAAE,SAAS;gBACzB,QAAQ,EAAE,IAAI;gBACd,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;YACD,iBAAiB,EAAE;gBACjB,cAAc,EAAE,mBAAmB;gBACnC,IAAI,EAAE;oBACJ,IAAI,EAAE,WAAW;oBACjB,SAAS,EAAE,gCAAgC;iBAC5C;aACF;YACD,QAAQ,EAAE;gBACR,cAAc,EAAE,UAAU;gBAC1B,IAAI,EAAE;oBACJ,IAAI,EAAE,UAAU;oBAChB,OAAO,EAAE;wBACP,IAAI,EAAE;4BACJ,IAAI,EAAE,WAAW;4BACjB,SAAS,EAAE,oBAAoB;yBAChC;qBACF;iBACF;aACF;SACF;KACF;CACF,CAAC;AAEF,AAAO,MAAM,8BAA8B,GAA+B;IACxE,IAAI,EAAE;QACJ,IAAI,EAAE,WAAW;QACjB,SAAS,EAAE,gCAAgC;QAC3C,eAAe,EAAE;YACf,cAAc,EAAE;gBACd,cAAc,EAAE,gBAAgB;gBAChC,IAAI,EAAE;oBACJ,IAAI,EAAE,UAAU;oBAChB,OAAO,EAAE;wBACP,IAAI,EAAE;4BACJ,IAAI,EAAE,WAAW;4BACjB,SAAS,EAAE,4BAA4B;yBACxC;qBACF;iBACF;aACF;SACF;KACF;CACF,CAAC;AAEF,AAAO,MAAM,0BAA0B,GAA+B;IACpE,IAAI,EAAE;QACJ,IAAI,EAAE,WAAW;QACjB,SAAS,EAAE,4BAA4B;QACvC,eAAe,EAAE;YACf,MAAM,EAAE;gBACN,cAAc,EAAE,QAAQ;gBACxB,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;YACD,KAAK,EAAE;gBACL,cAAc,EAAE,OAAO;gBACvB,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;SACF;KACF;CACF,CAAC;AAEF,AAAO,MAAM,4BAA4B,GAA+B;IACtE,IAAI,EAAE;QACJ,IAAI,EAAE,WAAW;QACjB,SAAS,EAAE,8BAA8B;QACzC,eAAe,EAAE;YACf,KAAK,EAAE;gBACL,cAAc,EAAE,OAAO;gBACvB,QAAQ,EAAE,IAAI;gBACd,IAAI,EAAE;oBACJ,IAAI,EAAE,UAAU;oBAChB,OAAO,EAAE;wBACP,IAAI,EAAE;4BACJ,IAAI,EAAE,WAAW;4BACjB,SAAS,EAAE,oBAAoB;yBAChC;qBACF;iBACF;aACF;YACD,QAAQ,EAAE;gBACR,cAAc,EAAE,UAAU;gBAC1B,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;SACF;KACF;CACF,CAAC;AAEF,AAAO,MAAM,uBAAuB,GAA+B;IACjE,IAAI,EAAE;QACJ,IAAI,EAAE,WAAW;QACjB,SAAS,EAAE,yBAAyB;QACpC,eAAe,EAAE;YACf,KAAK,EAAE;gBACL,cAAc,EAAE,OAAO;gBACvB,QAAQ,EAAE,IAAI;gBACd,IAAI,EAAE;oBACJ,IAAI,EAAE,UAAU;oBAChB,OAAO,EAAE;wBACP,IAAI,EAAE;4BACJ,IAAI,EAAE,WAAW;4BACjB,SAAS,EAAE,eAAe;yBAC3B;qBACF;iBACF;aACF;YACD,QAAQ,EAAE;gBACR,cAAc,EAAE,UAAU;gBAC1B,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;SACF;KACF;CACF,CAAC;AAEF,AAAO,MAAM,4BAA4B,GAA+B;IACtE,IAAI,EAAE;QACJ,IAAI,EAAE,WAAW;QACjB,SAAS,EAAE,8BAA8B;QACzC,eAAe,EAAE;YACf,KAAK,EAAE;gBACL,cAAc,EAAE,OAAO;gBACvB,QAAQ,EAAE,IAAI;gBACd,IAAI,EAAE;oBACJ,IAAI,EAAE,UAAU;oBAChB,OAAO,EAAE;wBACP,IAAI,EAAE;4BACJ,IAAI,EAAE,WAAW;4BACjB,SAAS,EAAE,sBAAsB;yBAClC;qBACF;iBACF;aACF;YACD,QAAQ,EAAE;gBACR,cAAc,EAAE,UAAU;gBAC1B,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;SACF;KACF;CACF,CAAC;AAEF,AAAO,MAAM,iCAAiC,GAA+B;IAC3E,IAAI,EAAE;QACJ,IAAI,EAAE,WAAW;QACjB,SAAS,EAAE,mCAAmC;QAC9C,eAAe,EAAE;YACf,UAAU,EAAE;gBACV,cAAc,EAAE,YAAY;gBAC5B,QAAQ,EAAE,IAAI;gBACd,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;YACD,SAAS,EAAE;gBACT,cAAc,EAAE,WAAW;gBAC3B,QAAQ,EAAE,IAAI;gBACd,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;YACD,EAAE,EAAE;gBACF,cAAc,EAAE,IAAI;gBACpB,QAAQ,EAAE,IAAI;gBACd,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;SACF;KACF;CACF,CAAC;AAEF,AAAO,MAAM,mCAAmC,GAA+B;IAC7E,IAAI,EAAE;QACJ,IAAI,EAAE,WAAW;QACjB,SAAS,EAAE,qCAAqC;QAChD,eAAe,EAAE;YACf,IAAI,EAAE;gBACJ,cAAc,EAAE,MAAM;gBACtB,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;YACD,IAAI,EAAE;gBACJ,cAAc,EAAE,MAAM;gBACtB,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;YACD,kBAAkB,EAAE;gBAClB,cAAc,EAAE,oBAAoB;gBACpC,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;YACD,WAAW,EAAE;gBACX,cAAc,EAAE,aAAa;gBAC7B,IAAI,EAAE;oBACJ,IAAI,EAAE,UAAU;oBAChB,OAAO,EAAE;wBACP,IAAI,EAAE;4BACJ,IAAI,EAAE,WAAW;4BACjB,SAAS,EAAE,oBAAoB;yBAChC;qBACF;iBACF;aACF;YACD,QAAQ,EAAE;gBACR,cAAc,EAAE,UAAU;gBAC1B,IAAI,EAAE;oBACJ,IAAI,EAAE,UAAU;oBAChB,OAAO,EAAE;wBACP,IAAI,EAAE;4BACJ,IAAI,EAAE,WAAW;4BACjB,SAAS,EAAE,oBAAoB;yBAChC;qBACF;iBACF;aACF;SACF;KACF;CACF,CAAC;AAEF,AAAO,MAAM,kCAAkC,GAA+B;IAC5E,IAAI,EAAE;QACJ,IAAI,EAAE,WAAW;QACjB,SAAS,EAAE,oCAAoC;QAC/C,eAAe,EAAE;YACf,KAAK,EAAE;gBACL,cAAc,EAAE,OAAO;gBACvB,IAAI,EAAE;oBACJ,IAAI,EAAE,UAAU;oBAChB,OAAO,EAAE;wBACP,IAAI,EAAE;4BACJ,IAAI,EAAE,WAAW;4BACjB,SAAS,EAAE,yBAAyB;yBACrC;qBACF;iBACF;aACF;SACF;KACF;CACF,CAAC;AAEF,AAAO,MAAM,YAAY,GAA+B;IACtD,IAAI,EAAE;QACJ,IAAI,EAAE,WAAW;QACjB,SAAS,EAAE,cAAc;QACzB,eAAe,EAAE;YACf,SAAS,EAAE;gBACT,cAAc,EAAE,WAAW;gBAC3B,QAAQ,EAAE,IAAI;gBACd,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;YACD,IAAI,EAAE;gBACJ,cAAc,EAAE,MAAM;gBACtB,QAAQ,EAAE,IAAI;gBACd,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;YACD,OAAO,EAAE;gBACP,cAAc,EAAE,SAAS;gBACzB,QAAQ,EAAE,IAAI;gBACd,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;SACF;KACF;CACF,CAAC;AAEF,AAAO,MAAM,WAAW,GAA+B;IACrD,IAAI,EAAE;QACJ,IAAI,EAAE,WAAW;QACjB,SAAS,EAAE,aAAa;QACxB,eAAe,EAAE;YACf,eAAe,EAAE;gBACf,cAAc,EAAE,iBAAiB;gBACjC,QAAQ,EAAE,IAAI;gBACd,IAAI,EAAE;oBACJ,IAAI,EAAE,MAAM;oBACZ,aAAa,EAAE,CAAC,SAAS,EAAE,OAAO,CAAC;iBACpC;aACF;SACF;KACF;CACF,CAAC;AAEF,AAAO,MAAM,aAAa,GAA+B;IACvD,IAAI,EAAE;QACJ,IAAI,EAAE,WAAW;QACjB,SAAS,EAAE,eAAe;QAC1B,eAAe,EAAE;YACf,GAAG,EAAE;gBACH,cAAc,EAAE,KAAK;gBACrB,QAAQ,EAAE,IAAI;gBACd,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;SACF;KACF;CACF,CAAC;AAEF,AAAO,MAAM,4BAA4B,GAA+B;IACtE,IAAI,EAAE;QACJ,IAAI,EAAE,WAAW;QACjB,SAAS,EAAE,8BAA8B;QACzC,eAAe,EAAE;YACf,2BAA2B,EAAE;gBAC3B,cAAc,EAAE,6BAA6B;gBAC7C,QAAQ,EAAE,IAAI;gBACd,IAAI,EAAE;oBACJ,IAAI,EAAE,SAAS;iBAChB;aACF;SACF;KACF;CACF,CAAC;AAEF,AAAO,MAAM,uBAAuB,GAA+B;IACjE,IAAI,EAAE;QACJ,IAAI,EAAE,WAAW;QACjB,SAAS,EAAE,yBAAyB;QACpC,eAAe,EAAE;YACf,UAAU,EAAE;gBACV,cAAc,EAAE,YAAY;gBAC5B,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;SACF;KACF;CACF,CAAC;AAEF,AAAO,MAAM,0BAA0B,GAA+B;IACpE,IAAI,EAAE;QACJ,IAAI,EAAE,WAAW;QACjB,SAAS,EAAE,4BAA4B;QACvC,eAAe,EAAE;YACf,IAAI,EAAE;gBACJ,cAAc,EAAE,MAAM;gBACtB,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;YACD,KAAK,EAAE;gBACL,cAAc,EAAE,OAAO;gBACvB,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;SACF;KACF;CACF,CAAC;AAEF,AAAO,MAAM,gBAAgB,GAA+B;IAC1D,IAAI,EAAE;QACJ,IAAI,EAAE,WAAW;QACjB,SAAS,EAAE,kBAAkB;QAC7B,eAAe,EAAE;YACf,IAAI,EAAE;gBACJ,cAAc,EAAE,MAAM;gBACtB,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;YACD,IAAI,EAAE;gBACJ,cAAc,EAAE,MAAM;gBACtB,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;SACF;KACF;CACF,CAAC;AAEF,AAAO,MAAM,gBAAgB,GAA+B;IAC1D,IAAI,EAAE;QACJ,IAAI,EAAE,WAAW;QACjB,SAAS,EAAE,kBAAkB;QAC7B,eAAe,EAAE;YACf,KAAK,EAAE;gBACL,cAAc,EAAE,OAAO;gBACvB,QAAQ,EAAE,IAAI;gBACd,IAAI,EAAE;oBACJ,IAAI,EAAE,UAAU;oBAChB,OAAO,EAAE;wBACP,IAAI,EAAE;4BACJ,IAAI,EAAE,WAAW;4BACjB,SAAS,EAAE,OAAO;yBACnB;qBACF;iBACF;aACF;YACD,QAAQ,EAAE;gBACR,cAAc,EAAE,UAAU;gBAC1B,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;SACF;KACF;CACF,CAAC;AAEF,AAAO,MAAM,KAAK,GAA+B;IAC/C,IAAI,EAAE;QACJ,IAAI,EAAE,WAAW;QACjB,SAAS,EAAE,OAAO;QAClB,eAAe,EAAE;YACf,IAAI,EAAE;gBACJ,YAAY,EAAE,OAAO;gBACrB,UAAU,EAAE,IAAI;gBAChB,cAAc,EAAE,MAAM;gBACtB,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;YACD,YAAY,EAAE;gBACZ,cAAc,EAAE,cAAc;gBAC9B,QAAQ,EAAE,IAAI;gBACd,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;YACD,KAAK,EAAE;gBACL,cAAc,EAAE,OAAO;gBACvB,QAAQ,EAAE,IAAI;gBACd,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;YACD,IAAI,EAAE;gBACJ,cAAc,EAAE,MAAM;gBACtB,IAAI,EAAE;oBACJ,IAAI,EAAE,WAAW;oBACjB,SAAS,EAAE,WAAW;iBACvB;aACF;SACF;KACF;CACF,CAAC;AAEF,AAAO,MAAM,SAAS,GAA+B;IACnD,IAAI,EAAE;QACJ,IAAI,EAAE,WAAW;QACjB,SAAS,EAAE,WAAW;QACtB,eAAe,EAAE;YACf,KAAK,EAAE;gBACL,cAAc,EAAE,OAAO;gBACvB,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;YACD,cAAc,EAAE;gBACd,cAAc,EAAE,gBAAgB;gBAChC,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;SACF;KACF;CACF,CAAC;AAEF,AAAO,MAAM,wBAAwB,GAA+B;IAClE,IAAI,EAAE;QACJ,IAAI,EAAE,WAAW;QACjB,SAAS,EAAE,0BAA0B;QACrC,eAAe,EAAE;YACf,KAAK,EAAE;gBACL,cAAc,EAAE,OAAO;gBACvB,QAAQ,EAAE,IAAI;gBACd,IAAI,EAAE;oBACJ,IAAI,EAAE,UAAU;oBAChB,OAAO,EAAE;wBACP,IAAI,EAAE;4BACJ,IAAI,EAAE,WAAW;4BACjB,SAAS,EAAE,gBAAgB;yBAC5B;qBACF;iBACF;aACF;YACD,QAAQ,EAAE;gBACR,cAAc,EAAE,UAAU;gBAC1B,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;SACF;KACF;CACF,CAAC;AAEF,AAAO,MAAM,IAAI,GAA+B;IAC9C,IAAI,EAAE;QACJ,IAAI,EAAE,WAAW;QACjB,SAAS,EAAE,MAAM;QACjB,eAAe,EAAE;YACf,IAAI,EAAE;gBACJ,cAAc,EAAE,MAAM;gBACtB,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;YACD,SAAS,EAAE;gBACT,cAAc,EAAE,WAAW;gBAC3B,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;YACD,OAAO,EAAE;gBACP,cAAc,EAAE,SAAS;gBACzB,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;YACD,aAAa,EAAE;gBACb,cAAc,EAAE,eAAe;gBAC/B,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;SACF;KACF;CACF,CAAC;AAEF,AAAO,MAAM,eAAe,GAA+B;IACzD,IAAI,EAAE;QACJ,IAAI,EAAE,WAAW;QACjB,SAAS,EAAE,iBAAiB;QAC5B,eAAe,EAAE;YACf,MAAM,EAAE;gBACN,cAAc,EAAE,QAAQ;gBACxB,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;YACD,gBAAgB,EAAE;gBAChB,cAAc,EAAE,kBAAkB;gBAClC,IAAI,EAAE;oBACJ,IAAI,EAAE,WAAW;oBACjB,SAAS,EAAE,kBAAkB;iBAC9B;aACF;SACF;KACF;CACF,CAAC;AAEF,AAAO,MAAM,gBAAgB,GAA+B;IAC1D,IAAI,EAAE;QACJ,IAAI,EAAE,WAAW;QACjB,SAAS,EAAE,kBAAkB;QAC7B,eAAe,EAAE;YACf,cAAc,EAAE;gBACd,cAAc,EAAE,gBAAgB;gBAChC,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;YACD,YAAY,EAAE;gBACZ,cAAc,EAAE,cAAc;gBAC9B,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;SACF;KACF;CACF,CAAC;AAEF,AAAO,MAAM,cAAc,GAA+B;IACxD,IAAI,EAAE;QACJ,IAAI,EAAE,WAAW;QACjB,SAAS,EAAE,gBAAgB;QAC3B,eAAe,EAAE;YACf,cAAc,EAAE;gBACd,cAAc,EAAE,gBAAgB;gBAChC,IAAI,EAAE;oBACJ,IAAI,EAAE,WAAW;oBACjB,SAAS,EAAE,gBAAgB;iBAC5B;aACF;YACD,MAAM,EAAE;gBACN,cAAc,EAAE,QAAQ;gBACxB,IAAI,EAAE;oBACJ,IAAI,EAAE,WAAW;oBACjB,SAAS,EAAE,QAAQ;iBACpB;aACF;YACD,SAAS,EAAE;gBACT,cAAc,EAAE,WAAW;gBAC3B,IAAI,EAAE;oBACJ,IAAI,EAAE,UAAU;oBAChB,OAAO,EAAE;wBACP,IAAI,EAAE;4BACJ,IAAI,EAAE,WAAW;4BACjB,SAAS,EAAE,UAAU;yBACtB;qBACF;iBACF;aACF;SACF;KACF;CACF,CAAC;AAEF,AAAO,MAAM,MAAM,GAA+B;IAChD,IAAI,EAAE;QACJ,IAAI,EAAE,WAAW;QACjB,SAAS,EAAE,QAAQ;QACnB,eAAe,EAAE;YACf,MAAM,EAAE;gBACN,cAAc,EAAE,QAAQ;gBACxB,IAAI,EAAE;oBACJ,IAAI,EAAE,MAAM;oBACZ,aAAa,EAAE,CAAC,SAAS,EAAE,OAAO,CAAC;iBACpC;aACF;YACD,kBAAkB,EAAE;gBAClB,cAAc,EAAE,oBAAoB;gBACpC,IAAI,EAAE;oBACJ,IAAI,EAAE,WAAW;oBACjB,SAAS,EAAE,wBAAwB;iBACpC;aACF;YACD,IAAI,EAAE;gBACJ,cAAc,EAAE,MAAM;gBACtB,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;YACD,GAAG,EAAE;gBACH,cAAc,EAAE,KAAK;gBACrB,IAAI,EAAE;oBACJ,IAAI,EAAE,WAAW;oBACjB,SAAS,EAAE,iBAAiB;iBAC7B;aACF;YACD,KAAK,EAAE;gBACL,cAAc,EAAE,OAAO;gBACvB,IAAI,EAAE;oBACJ,IAAI,EAAE,WAAW;oBACjB,SAAS,EAAE,iBAAiB;iBAC7B;aACF;YACD,OAAO,EAAE;gBACP,cAAc,EAAE,SAAS;gBACzB,IAAI,EAAE;oBACJ,IAAI,EAAE,MAAM;oBACZ,aAAa,EAAE,CAAC,MAAM,EAAE,UAAU,EAAE,WAAW,CAAC;iBACjD;aACF;YACD,uBAAuB,EAAE;gBACvB,cAAc,EAAE,yBAAyB;gBACzC,IAAI,EAAE;oBACJ,IAAI,EAAE,SAAS;iBAChB;aACF;YACD,gBAAgB,EAAE;gBAChB,cAAc,EAAE,kBAAkB;gBAClC,IAAI,EAAE;oBACJ,IAAI,EAAE,WAAW;oBACjB,SAAS,EAAE,kBAAkB;iBAC9B;aACF;YACD,YAAY,EAAE;gBACZ,cAAc,EAAE,cAAc;gBAC9B,QAAQ,EAAE,IAAI;gBACd,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;YACD,UAAU,EAAE;gBACV,cAAc,EAAE,YAAY;gBAC5B,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;YACD,WAAW,EAAE;gBACX,cAAc,EAAE,aAAa;gBAC7B,IAAI,EAAE;oBACJ,IAAI,EAAE,WAAW;oBACjB,SAAS,EAAE,uBAAuB;iBACnC;aACF;YACD,YAAY,EAAE;gBACZ,cAAc,EAAE,cAAc;gBAC9B,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;SACF;KACF;CACF,CAAC;AAEF,AAAO,MAAM,sBAAsB,GAA+B;IAChE,IAAI,EAAE;QACJ,IAAI,EAAE,WAAW;QACjB,SAAS,EAAE,wBAAwB;QACnC,eAAe,EAAE;YACf,iBAAiB,EAAE;gBACjB,cAAc,EAAE,mBAAmB;gBACnC,IAAI,EAAE;oBACJ,IAAI,EAAE,WAAW;oBACjB,SAAS,EAAE,yBAAyB;iBACrC;aACF;YACD,gBAAgB,EAAE;gBAChB,cAAc,EAAE,kBAAkB;gBAClC,IAAI,EAAE;oBACJ,IAAI,EAAE,WAAW;oBACjB,SAAS,EAAE,sBAAsB;iBAClC;aACF;YACD,OAAO,EAAE;gBACP,cAAc,EAAE,SAAS;gBACzB,IAAI,EAAE;oBACJ,IAAI,EAAE,SAAS;iBAChB;aACF;SACF;KACF;CACF,CAAC;AAEF,AAAO,MAAM,uBAAuB,GAA+B;IACjE,IAAI,EAAE;QACJ,IAAI,EAAE,WAAW;QACjB,SAAS,EAAE,yBAAyB;QACpC,eAAe,EAAE;YACf,SAAS,EAAE;gBACT,cAAc,EAAE,WAAW;gBAC3B,QAAQ,EAAE,IAAI;gBACd,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;YACD,WAAW,EAAE;gBACX,cAAc,EAAE,aAAa;gBAC7B,IAAI,EAAE;oBACJ,IAAI,EAAE,WAAW;oBACjB,SAAS,EAAE,aAAa;iBACzB;aACF;SACF;KACF;CACF,CAAC;AAEF,AAAO,MAAM,oBAAoB,GAA+B;IAC9D,IAAI,EAAE;QACJ,IAAI,EAAE,WAAW;QACjB,SAAS,EAAE,sBAAsB;QACjC,eAAe,EAAE;YACf,MAAM,EAAE;gBACN,cAAc,EAAE,QAAQ;gBACxB,QAAQ,EAAE,IAAI;gBACd,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;YACD,WAAW,EAAE;gBACX,cAAc,EAAE,aAAa;gBAC7B,IAAI,EAAE;oBACJ,IAAI,EAAE,WAAW;oBACjB,SAAS,EAAE,aAAa;iBACzB;aACF;SACF;KACF;CACF,CAAC;AAEF,AAAO,MAAM,eAAe,GAA+B;IACzD,IAAI,EAAE;QACJ,IAAI,EAAE,WAAW;QACjB,SAAS,EAAE,iBAAiB;QAC5B,eAAe,EAAE;YACf,GAAG,EAAE;gBACH,cAAc,EAAE,KAAK;gBACrB,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;SACF;KACF;CACF,CAAC;AAEF,AAAO,MAAM,gBAAgB,GAA+B;IAC1D,IAAI,EAAE;QACJ,IAAI,EAAE,WAAW;QACjB,SAAS,EAAE,kBAAkB;QAC7B,eAAe,EAAE;YACf,MAAM,EAAE;gBACN,cAAc,EAAE,QAAQ;gBACxB,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;YACD,SAAS,EAAE;gBACT,cAAc,EAAE,WAAW;gBAC3B,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;SACF;KACF;CACF,CAAC;AAEF,AAAO,MAAM,qBAAqB,GAA+B;IAC/D,IAAI,EAAE;QACJ,IAAI,EAAE,WAAW;QACjB,SAAS,EAAE,uBAAuB;QAClC,eAAe,EAAE;YACf,sBAAsB,EAAE;gBACtB,cAAc,EAAE,wBAAwB;gBACxC,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;YACD,iBAAiB,EAAE;gBACjB,cAAc,EAAE,mBAAmB;gBACnC,IAAI,EAAE;oBACJ,IAAI,EAAE,WAAW;oBACjB,SAAS,EAAE,6BAA6B;iBACzC;aACF;SACF;KACF;CACF,CAAC;AAEF,AAAO,MAAM,QAAQ,GAA+B;IAClD,IAAI,EAAE;QACJ,IAAI,EAAE,WAAW;QACjB,SAAS,EAAE,UAAU;QACrB,eAAe,EAAE;YACf,GAAG,EAAE;gBACH,cAAc,EAAE,KAAK;gBACrB,QAAQ,EAAE,IAAI;gBACd,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;YACD,IAAI,EAAE;gBACJ,cAAc,EAAE,MAAM;gBACtB,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;YACD,GAAG,EAAE;gBACH,cAAc,EAAE,KAAK;gBACrB,IAAI,EAAE;oBACJ,IAAI,EAAE,WAAW;oBACjB,SAAS,EAAE,iBAAiB;iBAC7B;aACF;YACD,KAAK,EAAE;gBACL,cAAc,EAAE,OAAO;gBACvB,IAAI,EAAE;oBACJ,IAAI,EAAE,WAAW;oBACjB,SAAS,EAAE,iBAAiB;iBAC7B;aACF;YACD,OAAO,EAAE;gBACP,cAAc,EAAE,SAAS;gBACzB,IAAI,EAAE;oBACJ,IAAI,EAAE,MAAM;oBACZ,aAAa,EAAE,CAAC,MAAM,EAAE,UAAU,EAAE,WAAW,CAAC;iBACjD;aACF;YACD,uBAAuB,EAAE;gBACvB,cAAc,EAAE,yBAAyB;gBACzC,IAAI,EAAE;oBACJ,IAAI,EAAE,SAAS;iBAChB;aACF;YACD,YAAY,EAAE;gBACZ,cAAc,EAAE,cAAc;gBAC9B,QAAQ,EAAE,IAAI;gBACd,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;YACD,UAAU,EAAE;gBACV,cAAc,EAAE,YAAY;gBAC5B,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;YACD,WAAW,EAAE;gBACX,cAAc,EAAE,aAAa;gBAC7B,IAAI,EAAE;oBACJ,IAAI,EAAE,WAAW;oBACjB,SAAS,EAAE,uBAAuB;iBACnC;aACF;YACD,YAAY,EAAE;gBACZ,cAAc,EAAE,cAAc;gBAC9B,IAAI,EAAE;oBACJ,IAAI,EAAE,SAAS;iBAChB;aACF;YACD,iBAAiB,EAAE;gBACjB,cAAc,EAAE,mBAAmB;gBACnC,QAAQ,EAAE,IAAI;gBACd,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;YACD,iBAAiB,EAAE;gBACjB,cAAc,EAAE,mBAAmB;gBACnC,QAAQ,EAAE,IAAI;gBACd,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;YACD,YAAY,EAAE;gBACZ,cAAc,EAAE,cAAc;gBAC9B,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;YACD,YAAY,EAAE;gBACZ,cAAc,EAAE,cAAc;gBAC9B,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;SACF;KACF;CACF,CAAC;AAEF,AAAO,MAAM,sBAAsB,GAA+B;IAChE,IAAI,EAAE;QACJ,IAAI,EAAE,WAAW;QACjB,SAAS,EAAE,wBAAwB;QACnC,eAAe,EAAE;YACf,eAAe,EAAE;gBACf,cAAc,EAAE,iBAAiB;gBACjC,IAAI,EAAE;oBACJ,IAAI,EAAE,SAAS;iBAChB;aACF;YACD,kBAAkB,EAAE;gBAClB,cAAc,EAAE,oBAAoB;gBACpC,IAAI,EAAE;oBACJ,IAAI,EAAE,SAAS;iBAChB;aACF;SACF;KACF;CACF,CAAC;AAEF,AAAO,MAAM,SAAS,GAA+B;IACnD,IAAI,EAAE;QACJ,IAAI,EAAE,WAAW;QACjB,SAAS,EAAE,WAAW;QACtB,eAAe,EAAE;YACf,YAAY,EAAE;gBACZ,cAAc,EAAE,cAAc;gBAC9B,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;YACD,aAAa,EAAE;gBACb,cAAc,EAAE,eAAe;gBAC/B,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;YACD,aAAa,EAAE;gBACb,cAAc,EAAE,eAAe;gBAC/B,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;YACD,UAAU,EAAE;gBACV,cAAc,EAAE,YAAY;gBAC5B,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;YACD,oBAAoB,EAAE;gBACpB,cAAc,EAAE,sBAAsB;gBACtC,IAAI,EAAE;oBACJ,IAAI,EAAE,WAAW;oBACjB,SAAS,EAAE,sBAAsB;iBAClC;aACF;YACD,kBAAkB,EAAE;gBAClB,cAAc,EAAE,oBAAoB;gBACpC,IAAI,EAAE;oBACJ,IAAI,EAAE,WAAW;oBACjB,SAAS,EAAE,oBAAoB;iBAChC;aACF;YACD,OAAO,EAAE;gBACP,cAAc,EAAE,SAAS;gBACzB,IAAI,EAAE;oBACJ,IAAI,EAAE,UAAU;oBAChB,OAAO,EAAE;wBACP,IAAI,EAAE;4BACJ,IAAI,EAAE,WAAW;4BACjB,SAAS,EAAE,kBAAkB;yBAC9B;qBACF;iBACF;aACF;YACD,wBAAwB,EAAE;gBACxB,cAAc,EAAE,0BAA0B;gBAC1C,IAAI,EAAE;oBACJ,IAAI,EAAE,SAAS;iBAChB;aACF;YACD,2BAA2B,EAAE;gBAC3B,cAAc,EAAE,6BAA6B;gBAC7C,IAAI,EAAE;oBACJ,IAAI,EAAE,SAAS;iBAChB;aACF;SACF;KACF;CACF,CAAC;AAEF,AAAO,MAAM,oBAAoB,GAA+B;IAC9D,IAAI,EAAE;QACJ,IAAI,EAAE,WAAW;QACjB,SAAS,EAAE,sBAAsB;QACjC,eAAe,EAAE;YACf,gBAAgB,EAAE;gBAChB,cAAc,EAAE,kBAAkB;gBAClC,IAAI,EAAE;oBACJ,IAAI,EAAE,SAAS;iBAChB;aACF;YACD,sBAAsB,EAAE;gBACtB,cAAc,EAAE,wBAAwB;gBACxC,IAAI,EAAE;oBACJ,IAAI,EAAE,SAAS;iBAChB;aACF;YACD,QAAQ,EAAE;gBACR,cAAc,EAAE,UAAU;gBAC1B,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;YACD,yBAAyB,EAAE;gBACzB,cAAc,EAAE,2BAA2B;gBAC3C,IAAI,EAAE;oBACJ,IAAI,EAAE,UAAU;oBAChB,OAAO,EAAE;wBACP,IAAI,EAAE;4BACJ,IAAI,EAAE,WAAW;4BACjB,SAAS,EAAE,2BAA2B;yBACvC;qBACF;iBACF;aACF;YACD,aAAa,EAAE;gBACb,cAAc,EAAE,eAAe;gBAC/B,IAAI,EAAE;oBACJ,IAAI,EAAE,WAAW;oBACjB,SAAS,EAAE,eAAe;iBAC3B;aACF;YACD,KAAK,EAAE;gBACL,cAAc,EAAE,OAAO;gBACvB,IAAI,EAAE;oBACJ,IAAI,EAAE,WAAW;oBACjB,SAAS,EAAE,oBAAoB;iBAChC;aACF;SACF;KACF;CACF,CAAC;AAEF,AAAO,MAAM,yBAAyB,GAA+B;IACnE,IAAI,EAAE;QACJ,IAAI,EAAE,WAAW;QACjB,SAAS,EAAE,2BAA2B;QACtC,eAAe,EAAE;YACf,QAAQ,EAAE;gBACR,YAAY,EAAE,YAAY;gBAC1B,UAAU,EAAE,IAAI;gBAChB,cAAc,EAAE,UAAU;gBAC1B,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;YACD,aAAa,EAAE;gBACb,YAAY,EAAE,+BAA+B;gBAC7C,UAAU,EAAE,IAAI;gBAChB,cAAc,EAAE,eAAe;gBAC/B,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;YACD,WAAW,EAAE;gBACX,cAAc,EAAE,aAAa;gBAC7B,IAAI,EAAE;oBACJ,IAAI,EAAE,MAAM;oBACZ,aAAa,EAAE,CAAC,WAAW,EAAE,oBAAoB,CAAC;iBACnD;aACF;YACD,OAAO,EAAE;gBACP,cAAc,EAAE,SAAS;gBACzB,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;SACF;KACF;CACF,CAAC;AAEF,AAAO,MAAM,aAAa,GAA+B;IACvD,IAAI,EAAE;QACJ,IAAI,EAAE,WAAW;QACjB,SAAS,EAAE,eAAe;QAC1B,eAAe,EAAE;YACf,SAAS,EAAE;gBACT,cAAc,EAAE,WAAW;gBAC3B,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;YACD,iBAAiB,EAAE;gBACjB,cAAc,EAAE,mBAAmB;gBACnC,IAAI,EAAE;oBACJ,IAAI,EAAE,SAAS;iBAChB;aACF;YACD,cAAc,EAAE;gBACd,cAAc,EAAE,gBAAgB;gBAChC,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;SACF;KACF;CACF,CAAC;AAEF,AAAO,MAAM,kBAAkB,GAA+B;IAC5D,IAAI,EAAE;QACJ,IAAI,EAAE,WAAW;QACjB,SAAS,EAAE,oBAAoB;QAC/B,eAAe,EAAE;YACf,SAAS,EAAE;gBACT,cAAc,EAAE,WAAW;gBAC3B,IAAI,EAAE;oBACJ,IAAI,EAAE,UAAU;oBAChB,OAAO,EAAE;wBACP,IAAI,EAAE;4BACJ,IAAI,EAAE,WAAW;4BACjB,SAAS,EAAE,eAAe;yBAC3B;qBACF;iBACF;aACF;SACF;KACF;CACF,CAAC;AAEF,AAAO,MAAM,aAAa,GAA+B;IACvD,IAAI,EAAE;QACJ,IAAI,EAAE,WAAW;QACjB,SAAS,EAAE,eAAe;QAC1B,eAAe,EAAE;YACf,QAAQ,EAAE;gBACR,cAAc,EAAE,UAAU;gBAC1B,IAAI,EAAE;oBACJ,IAAI,EAAE,MAAM;oBACZ,aAAa,EAAE,CAAC,MAAM,EAAE,OAAO,CAAC;iBACjC;aACF;YACD,cAAc,EAAE;gBACd,cAAc,EAAE,gBAAgB;gBAChC,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;SACF;KACF;CACF,CAAC;AAEF,AAAO,MAAM,kBAAkB,GAA+B;IAC5D,IAAI,EAAE;QACJ,IAAI,EAAE,WAAW;QACjB,SAAS,EAAE,oBAAoB;QAC/B,eAAe,EAAE;YACf,6BAA6B,EAAE;gBAC7B,cAAc,EAAE,+BAA+B;gBAC/C,IAAI,EAAE;oBACJ,IAAI,EAAE,SAAS;iBAChB;aACF;YACD,GAAG,EAAE;gBACH,cAAc,EAAE,KAAK;gBACrB,IAAI,EAAE;oBACJ,IAAI,EAAE,WAAW;oBACjB,SAAS,EAAE,kBAAkB;iBAC9B;aACF;YACD,gBAAgB,EAAE;gBAChB,cAAc,EAAE,kBAAkB;gBAClC,IAAI,EAAE;oBACJ,IAAI,EAAE,SAAS;iBAChB;aACF;YACD,aAAa,EAAE;gBACb,cAAc,EAAE,eAAe;gBAC/B,IAAI,EAAE;oBACJ,IAAI,EAAE,WAAW;oBACjB,SAAS,EAAE,oBAAoB;iBAChC;aACF;SACF;KACF;CACF,CAAC;AAEF,AAAO,MAAM,gBAAgB,GAA+B;IAC1D,IAAI,EAAE;QACJ,IAAI,EAAE,WAAW;QACjB,SAAS,EAAE,kBAAkB;QAC7B,eAAe,EAAE;YACf,UAAU,EAAE;gBACV,cAAc,EAAE,YAAY;gBAC5B,IAAI,EAAE;oBACJ,IAAI,EAAE,UAAU;oBAChB,OAAO,EAAE;wBACP,IAAI,EAAE;4BACJ,IAAI,EAAE,WAAW;4BACjB,SAAS,EAAE,cAAc;yBAC1B;qBACF;iBACF;aACF;SACF;KACF;CACF,CAAC;AAEF,AAAO,MAAM,YAAY,GAA+B;IACtD,IAAI,EAAE;QACJ,IAAI,EAAE,WAAW;QACjB,SAAS,EAAE,cAAc;QACzB,eAAe,EAAE;YACf,IAAI,EAAE;gBACJ,cAAc,EAAE,MAAM;gBACtB,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;YACD,OAAO,EAAE;gBACP,cAAc,EAAE,SAAS;gBACzB,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;SACF;KACF;CACF,CAAC;AAEF,AAAO,MAAM,kBAAkB,GAA+B;IAC5D,IAAI,EAAE;QACJ,IAAI,EAAE,WAAW;QACjB,SAAS,EAAE,oBAAoB;QAC/B,eAAe,EAAE;YACf,SAAS,EAAE;gBACT,cAAc,EAAE,WAAW;gBAC3B,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;YACD,cAAc,EAAE;gBACd,cAAc,EAAE,gBAAgB;gBAChC,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;SACF;KACF;CACF,CAAC;AAEF,AAAO,MAAM,gBAAgB,GAA+B;IAC1D,IAAI,EAAE;QACJ,IAAI,EAAE,WAAW;QACjB,SAAS,EAAE,kBAAkB;QAC7B,eAAe,EAAE;YACf,WAAW,EAAE;gBACX,cAAc,EAAE,aAAa;gBAC7B,IAAI,EAAE;oBACJ,IAAI,EAAE,WAAW;oBACjB,SAAS,EAAE,aAAa;iBACzB;aACF;YACD,iBAAiB,EAAE;gBACjB,cAAc,EAAE,mBAAmB;gBACnC,IAAI,EAAE;oBACJ,IAAI,EAAE,UAAU;oBAChB,OAAO,EAAE;wBACP,IAAI,EAAE;4BACJ,IAAI,EAAE,WAAW;4BACjB,SAAS,EAAE,kBAAkB;yBAC9B;qBACF;iBACF;aACF;SACF;KACF;CACF,CAAC;AAEF,AAAO,MAAM,gBAAgB,GAA+B;IAC1D,IAAI,EAAE;QACJ,IAAI,EAAE,WAAW;QACjB,SAAS,EAAE,kBAAkB;QAC7B,eAAe,EAAE;YACf,cAAc,EAAE;gBACd,cAAc,EAAE,gBAAgB;gBAChC,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;YACD,gBAAgB,EAAE;gBAChB,cAAc,EAAE,kBAAkB;gBAClC,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;SACF;KACF;CACF,CAAC;AAEF,AAAO,MAAM,cAAc,GAA+B;IACxD,IAAI,EAAE;QACJ,IAAI,EAAE,WAAW;QACjB,SAAS,EAAE,gBAAgB;QAC3B,eAAe,EAAE;YACf,iBAAiB,EAAE;gBACjB,cAAc,EAAE,mBAAmB;gBACnC,IAAI,EAAE;oBACJ,IAAI,EAAE,UAAU;oBAChB,OAAO,EAAE;wBACP,IAAI,EAAE;4BACJ,IAAI,EAAE,WAAW;4BACjB,SAAS,EAAE,2BAA2B;yBACvC;qBACF;iBACF;aACF;YACD,iBAAiB,EAAE;gBACjB,cAAc,EAAE,mBAAmB;gBACnC,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;YACD,8BAA8B,EAAE;gBAC9B,cAAc,EAAE,gCAAgC;gBAChD,IAAI,EAAE;oBACJ,IAAI,EAAE,UAAU;oBAChB,OAAO,EAAE;wBACP,IAAI,EAAE;4BACJ,IAAI,EAAE,WAAW;4BACjB,SAAS,EAAE,6CAA6C;yBACzD;qBACF;iBACF;aACF;SACF;KACF;CACF,CAAC;AAEF,AAAO,MAAM,2CAA2C,GAA+B;IACrF,IAAI,EAAE;QACJ,IAAI,EAAE,WAAW;QACjB,SAAS,EAAE,6CAA6C;QACxD,eAAe,EAAE;YACf,IAAI,EAAE;gBACJ,cAAc,EAAE,MAAM;gBACtB,QAAQ,EAAE,IAAI;gBACd,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;YACD,OAAO,EAAE;gBACP,cAAc,EAAE,oBAAoB;gBACpC,IAAI,EAAE;oBACJ,IAAI,EAAE,SAAS;iBAChB;aACF;YACD,YAAY,EAAE;gBACZ,cAAc,EAAE,yBAAyB;gBACzC,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;YACD,2BAA2B,EAAE;gBAC3B,cAAc,EAAE,wCAAwC;gBACxD,IAAI,EAAE;oBACJ,IAAI,EAAE,SAAS;iBAChB;aACF;YACD,UAAU,EAAE;gBACV,cAAc,EAAE,uBAAuB;gBACvC,IAAI,EAAE;oBACJ,IAAI,EAAE,SAAS;iBAChB;aACF;YACD,kBAAkB,EAAE;gBAClB,cAAc,EAAE,+BAA+B;gBAC/C,IAAI,EAAE;oBACJ,IAAI,EAAE,SAAS;iBAChB;aACF;YACD,oBAAoB,EAAE;gBACpB,cAAc,EAAE,iCAAiC;gBACjD,IAAI,EAAE;oBACJ,IAAI,EAAE,WAAW;oBACjB,SAAS,EAAE,aAAa;iBACzB;aACF;YACD,WAAW,EAAE;gBACX,cAAc,EAAE,wBAAwB;gBACxC,IAAI,EAAE;oBACJ,IAAI,EAAE,WAAW;oBACjB,SAAS,EAAE,wDAAwD;iBACpE;aACF;YACD,gBAAgB,EAAE;gBAChB,cAAc,EAAE,6BAA6B;gBAC7C,IAAI,EAAE;oBACJ,IAAI,EAAE,UAAU;oBAChB,OAAO,EAAE;wBACP,IAAI,EAAE;4BACJ,IAAI,EAAE,WAAW;4BACjB,SAAS,EAAE,+CAA+C;yBAC3D;qBACF;iBACF;aACF;YACD,iBAAiB,EAAE;gBACjB,cAAc,EAAE,8BAA8B;gBAC9C,IAAI,EAAE;oBACJ,IAAI,EAAE,WAAW;oBACjB,SAAS,EAAE,aAAa;iBACzB;aACF;SACF;KACF;CACF,CAAC;AAEF,AAAO,MAAM,sDAAsD,GAA+B;IAChG,IAAI,EAAE;QACJ,IAAI,EAAE,WAAW;QACjB,SAAS,EAAE,wDAAwD;QACnE,eAAe,EAAE;YACf,UAAU,EAAE;gBACV,cAAc,EAAE,YAAY;gBAC5B,IAAI,EAAE;oBACJ,IAAI,EAAE,UAAU;oBAChB,OAAO,EAAE;wBACP,IAAI,EAAE;4BACJ,IAAI,EAAE,QAAQ;yBACf;qBACF;iBACF;aACF;SACF;KACF;CACF,CAAC;AAEF,AAAO,MAAM,6CAA6C,GAA+B;IACvF,IAAI,EAAE;QACJ,IAAI,EAAE,WAAW;QACjB,SAAS,EAAE,+CAA+C;QAC1D,eAAe,EAAE;YACf,IAAI,EAAE;gBACJ,cAAc,EAAE,MAAM;gBACtB,QAAQ,EAAE,IAAI;gBACd,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;YACD,MAAM,EAAE;gBACN,cAAc,EAAE,mBAAmB;gBACnC,IAAI,EAAE;oBACJ,IAAI,EAAE,WAAW;oBACjB,SAAS,EAAE,aAAa;iBACzB;aACF;YACD,OAAO,EAAE;gBACP,cAAc,EAAE,oBAAoB;gBACpC,IAAI,EAAE;oBACJ,IAAI,EAAE,SAAS;iBAChB;aACF;YACD,4BAA4B,EAAE;gBAC5B,cAAc,EAAE,yCAAyC;gBACzD,IAAI,EAAE;oBACJ,IAAI,EAAE,WAAW;oBACjB,SAAS,EAAE,4CAA4C;iBACxD;aACF;YACD,uBAAuB,EAAE;gBACvB,cAAc,EAAE,oCAAoC;gBACpD,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;YACD,yBAAyB,EAAE;gBACzB,cAAc,EAAE,sCAAsC;gBACtD,IAAI,EAAE;oBACJ,IAAI,EAAE,UAAU;oBAChB,OAAO,EAAE;wBACP,IAAI,EAAE;4BACJ,IAAI,EAAE,WAAW;4BACjB,SAAS,EAAE,aAAa;yBACzB;qBACF;iBACF;aACF;YACD,qCAAqC,EAAE;gBACrC,cAAc,EAAE,kDAAkD;gBAClE,IAAI,EAAE;oBACJ,IAAI,EAAE,UAAU;oBAChB,OAAO,EAAE;wBACP,IAAI,EAAE;4BACJ,IAAI,EAAE,WAAW;4BACjB,SAAS,EAAE,aAAa;yBACzB;qBACF;iBACF;aACF;YACD,+BAA+B,EAAE;gBAC/B,cAAc,EAAE,4CAA4C;gBAC5D,IAAI,EAAE;oBACJ,IAAI,EAAE,UAAU;oBAChB,OAAO,EAAE;wBACP,IAAI,EAAE;4BACJ,IAAI,EAAE,WAAW;4BACjB,SAAS,EAAE,aAAa;yBACzB;qBACF;iBACF;aACF;SACF;KACF;CACF,CAAC;AAEF,AAAO,MAAM,0CAA0C,GAA+B;IACpF,IAAI,EAAE;QACJ,IAAI,EAAE,WAAW;QACjB,SAAS,EAAE,4CAA4C;QACvD,eAAe,EAAE;YACf,IAAI,EAAE;gBACJ,cAAc,EAAE,MAAM;gBACtB,QAAQ,EAAE,IAAI;gBACd,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;YACD,GAAG,EAAE;gBACH,cAAc,EAAE,KAAK;gBACrB,IAAI,EAAE;oBACJ,IAAI,EAAE,WAAW;oBACjB,SAAS,EAAE,oBAAoB;iBAChC;aACF;YACD,oBAAoB,EAAE;gBACpB,cAAc,EAAE,iCAAiC;gBACjD,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;YACD,YAAY,EAAE;gBACZ,cAAc,EAAE,yBAAyB;gBACzC,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;YACD,WAAW,EAAE;gBACX,cAAc,EAAE,wBAAwB;gBACxC,IAAI,EAAE;oBACJ,IAAI,EAAE,WAAW;oBACjB,SAAS,EAAE,uDAAuD;iBACnE;aACF;YACD,MAAM,EAAE;gBACN,cAAc,EAAE,mBAAmB;gBACnC,IAAI,EAAE;oBACJ,IAAI,EAAE,UAAU;oBAChB,OAAO,EAAE;wBACP,IAAI,EAAE;4BACJ,IAAI,EAAE,WAAW;4BACjB,SAAS,EAAE,qBAAqB;yBACjC;qBACF;iBACF;aACF;YACD,cAAc,EAAE;gBACd,cAAc,EAAE,2BAA2B;gBAC3C,IAAI,EAAE;oBACJ,IAAI,EAAE,WAAW;oBACjB,SAAS,EAAE,aAAa;iBACzB;aACF;YACD,sBAAsB,EAAE;gBACtB,cAAc,EAAE,mCAAmC;gBACnD,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;YACD,wBAAwB,EAAE;gBACxB,cAAc,EAAE,qCAAqC;gBACrD,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;SACF;KACF;CACF,CAAC;AAEF,AAAO,MAAM,qDAAqD,GAA+B;IAC/F,IAAI,EAAE;QACJ,IAAI,EAAE,WAAW;QACjB,SAAS,EAAE,uDAAuD;QAClE,eAAe,EAAE;YACf,eAAe,EAAE;gBACf,cAAc,EAAE,iBAAiB;gBACjC,QAAQ,EAAE,IAAI;gBACd,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;SACF;KACF;CACF,CAAC;AAEF,AAAO,MAAM,mBAAmB,GAA+B;IAC7D,IAAI,EAAE;QACJ,IAAI,EAAE,WAAW;QACjB,SAAS,EAAE,qBAAqB;QAChC,eAAe,EAAE;YACf,SAAS,EAAE;gBACT,cAAc,EAAE,WAAW;gBAC3B,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;YACD,GAAG,EAAE;gBACH,cAAc,EAAE,KAAK;gBACrB,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;SACF;KACF;CACF,CAAC;AAEF,AAAO,MAAM,kBAAkB,GAA+B;IAC5D,IAAI,EAAE;QACJ,IAAI,EAAE,WAAW;QACjB,SAAS,EAAE,oBAAoB;QAC/B,eAAe,EAAE;YACf,IAAI,EAAE;gBACJ,cAAc,EAAE,MAAM;gBACtB,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;YACD,IAAI,EAAE;gBACJ,cAAc,EAAE,MAAM;gBACtB,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;SACF;KACF;CACF,CAAC;AAEF,AAAO,MAAM,eAAe,GAA+B;IACzD,IAAI,EAAE;QACJ,IAAI,EAAE,WAAW;QACjB,SAAS,EAAE,iBAAiB;QAC5B,eAAe,EAAE;YACf,YAAY,EAAE;gBACZ,cAAc,EAAE,cAAc;gBAC9B,IAAI,EAAE;oBACJ,IAAI,EAAE,WAAW;oBACjB,SAAS,EAAE,cAAc;iBAC1B;aACF;YACD,gBAAgB,EAAE;gBAChB,cAAc,EAAE,kBAAkB;gBAClC,IAAI,EAAE;oBACJ,IAAI,EAAE,SAAS;iBAChB;aACF;YACD,YAAY,EAAE;gBACZ,cAAc,EAAE,cAAc;gBAC9B,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;SACF;KACF;CACF,CAAC;AAEF,AAAO,MAAM,YAAY,GAA+B;IACtD,IAAI,EAAE;QACJ,IAAI,EAAE,WAAW;QACjB,SAAS,EAAE,cAAc;QACzB,eAAe,EAAE;YACf,iBAAiB,EAAE;gBACjB,cAAc,EAAE,mBAAmB;gBACnC,IAAI,EAAE;oBACJ,IAAI,EAAE,SAAS;iBAChB;aACF;YACD,WAAW,EAAE;gBACX,cAAc,EAAE,aAAa;gBAC7B,IAAI,EAAE;oBACJ,IAAI,EAAE,SAAS;iBAChB;aACF;SACF;KACF;CACF,CAAC;AAEF,AAAO,MAAM,kBAAkB,GAA+B;IAC5D,IAAI,EAAE;QACJ,IAAI,EAAE,WAAW;QACjB,SAAS,EAAE,oBAAoB;QAC/B,eAAe,EAAE;YACf,eAAe,EAAE;gBACf,cAAc,EAAE,iBAAiB;gBACjC,IAAI,EAAE;oBACJ,IAAI,EAAE,WAAW;oBACjB,SAAS,EAAE,iBAAiB;iBAC7B;aACF;SACF;KACF;CACF,CAAC;AAEF,AAAO,MAAM,eAAe,GAA+B;IACzD,IAAI,EAAE;QACJ,IAAI,EAAE,WAAW;QACjB,SAAS,EAAE,iBAAiB;QAC5B,eAAe,EAAE;YACf,OAAO,EAAE;gBACP,cAAc,EAAE,SAAS;gBACzB,IAAI,EAAE;oBACJ,IAAI,EAAE,SAAS;iBAChB;aACF;YACD,UAAU,EAAE;gBACV,cAAc,EAAE,YAAY;gBAC5B,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;SACF;KACF;CACF,CAAC;AAEF,AAAO,MAAM,cAAc,GAA+B;IACxD,IAAI,EAAE;QACJ,IAAI,EAAE,WAAW;QACjB,SAAS,EAAE,gBAAgB;QAC3B,eAAe,EAAE;YACf,QAAQ,EAAE;gBACR,cAAc,EAAE,UAAU;gBAC1B,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;SACF;KACF;CACF,CAAC;AAEF,AAAO,MAAM,0BAA0B,GAA+B;IACpE,IAAI,EAAE;QACJ,IAAI,EAAE,WAAW;QACjB,SAAS,EAAE,4BAA4B;QACvC,eAAe,EAAE;YACf,oBAAoB,EAAE;gBACpB,cAAc,EAAE,sBAAsB;gBACtC,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;YACD,mBAAmB,EAAE;gBACnB,cAAc,EAAE,qBAAqB;gBACrC,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;YACD,YAAY,EAAE;gBACZ,cAAc,EAAE,cAAc;gBAC9B,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;YACD,MAAM,EAAE;gBACN,cAAc,EAAE,QAAQ;gBACxB,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;YACD,SAAS,EAAE;gBACT,cAAc,EAAE,WAAW;gBAC3B,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;YACD,gBAAgB,EAAE;gBAChB,cAAc,EAAE,kBAAkB;gBAClC,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;YACD,aAAa,EAAE;gBACb,cAAc,EAAE,eAAe;gBAC/B,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;YACD,OAAO,EAAE;gBACP,cAAc,EAAE,SAAS;gBACzB,IAAI,EAAE;oBACJ,IAAI,EAAE,WAAW;oBACjB,SAAS,EAAE,iCAAiC;iBAC7C;aACF;YACD,yBAAyB,EAAE;gBACzB,cAAc,EAAE,2BAA2B;gBAC3C,IAAI,EAAE;oBACJ,IAAI,EAAE,WAAW;oBACjB,SAAS,EAAE,2BAA2B;iBACvC;aACF;YACD,KAAK,EAAE;gBACL,cAAc,EAAE,OAAO;gBACvB,IAAI,EAAE;oBACJ,IAAI,EAAE,UAAU;oBAChB,OAAO,EAAE;wBACP,IAAI,EAAE;4BACJ,IAAI,EAAE,WAAW;4BACjB,SAAS,EAAE,kBAAkB;yBAC9B;qBACF;iBACF;aACF;YACD,UAAU,EAAE;gBACV,cAAc,EAAE,YAAY;gBAC5B,IAAI,EAAE;oBACJ,IAAI,EAAE,UAAU;oBAChB,OAAO,EAAE;wBACP,IAAI,EAAE;4BACJ,IAAI,EAAE,WAAW;4BACjB,SAAS,EAAE,qCAAqC;yBACjD;qBACF;iBACF;aACF;YACD,QAAQ,EAAE;gBACR,cAAc,EAAE,UAAU;gBAC1B,IAAI,EAAE;oBACJ,IAAI,EAAE,WAAW;oBACjB,SAAS,EAAE,4BAA4B;iBACxC;aACF;YACD,eAAe,EAAE;gBACf,cAAc,EAAE,iBAAiB;gBACjC,IAAI,EAAE;oBACJ,IAAI,EAAE,WAAW;oBACjB,SAAS,EAAE,6BAA6B;iBACzC;aACF;YACD,YAAY,EAAE;gBACZ,cAAc,EAAE,cAAc;gBAC9B,QAAQ,EAAE,IAAI;gBACd,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;YACD,QAAQ,EAAE;gBACR,cAAc,EAAE,UAAU;gBAC1B,IAAI,EAAE;oBACJ,IAAI,EAAE,UAAU;oBAChB,OAAO,EAAE;wBACP,IAAI,EAAE;4BACJ,IAAI,EAAE,WAAW;4BACjB,SAAS,EAAE,oBAAoB;yBAChC;qBACF;iBACF;aACF;YACD,WAAW,EAAE;gBACX,cAAc,EAAE,aAAa;gBAC7B,IAAI,EAAE;oBACJ,IAAI,EAAE,WAAW;oBACjB,SAAS,EAAE,2BAA2B;iBACvC;aACF;SACF;KACF;CACF,CAAC;AAEF,AAAO,MAAM,+BAA+B,GAA+B;IACzE,IAAI,EAAE;QACJ,IAAI,EAAE,WAAW;QACjB,SAAS,EAAE,iCAAiC;QAC5C,eAAe,EAAE;YACf,cAAc,EAAE;gBACd,cAAc,EAAE,gBAAgB;gBAChC,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;YACD,iBAAiB,EAAE;gBACjB,cAAc,EAAE,mBAAmB;gBACnC,IAAI,EAAE;oBACJ,IAAI,EAAE,UAAU;oBAChB,OAAO,EAAE;wBACP,IAAI,EAAE;4BACJ,IAAI,EAAE,WAAW;4BACjB,SAAS,EAAE,4CAA4C;yBACxD;qBACF;iBACF;aACF;YACD,QAAQ,EAAE;gBACR,cAAc,EAAE,UAAU;gBAC1B,IAAI,EAAE;oBACJ,IAAI,EAAE,UAAU;oBAChB,OAAO,EAAE;wBACP,IAAI,EAAE;4BACJ,IAAI,EAAE,WAAW;4BACjB,SAAS,EAAE,oBAAoB;yBAChC;qBACF;iBACF;aACF;SACF;KACF;CACF,CAAC;AAEF,AAAO,MAAM,0CAA0C,GAA+B;IACpF,IAAI,EAAE;QACJ,IAAI,EAAE,WAAW;QACjB,SAAS,EAAE,4CAA4C;QACvD,eAAe,EAAE;YACf,IAAI,EAAE;gBACJ,cAAc,EAAE,MAAM;gBACtB,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;YACD,kBAAkB,EAAE;gBAClB,cAAc,EAAE,oBAAoB;gBACpC,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;YACD,MAAM,EAAE;gBACN,cAAc,EAAE,QAAQ;gBACxB,IAAI,EAAE;oBACJ,IAAI,EAAE,WAAW;oBACjB,SAAS,EAAE,oBAAoB;iBAChC;aACF;SACF;KACF;CACF,CAAC;AAEF,AAAO,MAAM,yBAAyB,GAA+B;IACnE,IAAI,EAAE;QACJ,IAAI,EAAE,WAAW;QACjB,SAAS,EAAE,2BAA2B;QACtC,eAAe,EAAE;YACf,qCAAqC,EAAE;gBACrC,cAAc,EAAE,uCAAuC;gBACvD,IAAI,EAAE;oBACJ,IAAI,EAAE,SAAS;iBAChB;aACF;YACD,6BAA6B,EAAE;gBAC7B,cAAc,EAAE,+BAA+B;gBAC/C,IAAI,EAAE;oBACJ,IAAI,EAAE,UAAU;iBACjB;aACF;YACD,2BAA2B,EAAE;gBAC3B,cAAc,EAAE,6BAA6B;gBAC7C,IAAI,EAAE;oBACJ,IAAI,EAAE,UAAU;iBACjB;aACF;YACD,0BAA0B,EAAE;gBAC1B,cAAc,EAAE,4BAA4B;gBAC5C,IAAI,EAAE;oBACJ,IAAI,EAAE,UAAU;iBACjB;aACF;YACD,wBAAwB,EAAE;gBACxB,cAAc,EAAE,0BAA0B;gBAC1C,IAAI,EAAE;oBACJ,IAAI,EAAE,UAAU;iBACjB;aACF;YACD,uBAAuB,EAAE;gBACvB,cAAc,EAAE,yBAAyB;gBACzC,IAAI,EAAE;oBACJ,IAAI,EAAE,MAAM;oBACZ,aAAa,EAAE;wBACb,MAAM;wBACN,YAAY;wBACZ,oBAAoB;wBACpB,sBAAsB;qBACvB;iBACF;aACF;YACD,oBAAoB,EAAE;gBACpB,cAAc,EAAE,sBAAsB;gBACtC,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;SACF;KACF;CACF,CAAC;AAEF,AAAO,MAAM,gBAAgB,GAA+B;IAC1D,IAAI,EAAE;QACJ,IAAI,EAAE,WAAW;QACjB,SAAS,EAAE,kBAAkB;QAC7B,eAAe,EAAE;YACf,IAAI,EAAE;gBACJ,cAAc,EAAE,MAAM;gBACtB,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;YACD,kBAAkB,EAAE;gBAClB,cAAc,EAAE,oBAAoB;gBACpC,IAAI,EAAE;oBACJ,IAAI,EAAE,UAAU;oBAChB,OAAO,EAAE;wBACP,IAAI,EAAE;4BACJ,IAAI,EAAE,WAAW;4BACjB,SAAS,EAAE,wBAAwB;yBACpC;qBACF;iBACF;aACF;YACD,QAAQ,EAAE;gBACR,cAAc,EAAE,UAAU;gBAC1B,IAAI,EAAE;oBACJ,IAAI,EAAE,UAAU;oBAChB,OAAO,EAAE;wBACP,IAAI,EAAE;4BACJ,IAAI,EAAE,WAAW;4BACjB,SAAS,EAAE,oBAAoB;yBAChC;qBACF;iBACF;aACF;SACF;KACF;CACF,CAAC;AAEF,AAAO,MAAM,0BAA0B,GAA+B;IACpE,IAAI,EAAE;QACJ,IAAI,EAAE,WAAW;QACjB,SAAS,EAAE,4BAA4B;QACvC,eAAe,EAAE;YACf,MAAM,EAAE;gBACN,cAAc,EAAE,QAAQ;gBACxB,IAAI,EAAE;oBACJ,IAAI,EAAE,WAAW;oBACjB,SAAS,EAAE,oBAAoB;iBAChC;aACF;SACF;KACF;CACF,CAAC;AAEF,AAAO,MAAM,2BAA2B,GAA+B;IACrE,IAAI,EAAE;QACJ,IAAI,EAAE,WAAW;QACjB,SAAS,EAAE,6BAA6B;QACxC,eAAe,EAAE;YACf,wBAAwB,EAAE;gBACxB,cAAc,EAAE,0BAA0B;gBAC1C,QAAQ,EAAE,IAAI;gBACd,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;YACD,uBAAuB,EAAE;gBACvB,cAAc,EAAE,yBAAyB;gBACzC,QAAQ,EAAE,IAAI;gBACd,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;YACD,MAAM,EAAE;gBACN,cAAc,EAAE,QAAQ;gBACxB,IAAI,EAAE;oBACJ,IAAI,EAAE,WAAW;oBACjB,SAAS,EAAE,oBAAoB;iBAChC;aACF;SACF;KACF;CACF,CAAC;AAEF,AAAO,MAAM,yBAAyB,GAA+B;IACnE,IAAI,EAAE;QACJ,IAAI,EAAE,WAAW;QACjB,SAAS,EAAE,2BAA2B;QACtC,eAAe,EAAE;YACf,qBAAqB,EAAE;gBACrB,cAAc,EAAE,uBAAuB;gBACvC,IAAI,EAAE;oBACJ,IAAI,EAAE,WAAW;oBACjB,SAAS,EAAE,uBAAuB;iBACnC;aACF;YACD,4BAA4B,EAAE;gBAC5B,cAAc,EAAE,8BAA8B;gBAC9C,IAAI,EAAE;oBACJ,IAAI,EAAE,WAAW;oBACjB,SAAS,EAAE,8BAA8B;iBAC1C;aACF;YACD,qBAAqB,EAAE;gBACrB,cAAc,EAAE,uBAAuB;gBACvC,QAAQ,EAAE,IAAI;gBACd,IAAI,EAAE;oBACJ,IAAI,EAAE,UAAU;oBAChB,OAAO,EAAE;wBACP,IAAI,EAAE;4BACJ,IAAI,EAAE,WAAW;4BACjB,SAAS,EAAE,oBAAoB;yBAChC;qBACF;iBACF;aACF;SACF;KACF;CACF,CAAC;AAEF,AAAO,MAAM,qBAAqB,GAA+B;IAC/D,IAAI,EAAE;QACJ,IAAI,EAAE,WAAW;QACjB,SAAS,EAAE,uBAAuB;QAClC,eAAe,EAAE;YACf,MAAM,EAAE;gBACN,cAAc,EAAE,QAAQ;gBACxB,QAAQ,EAAE,IAAI;gBACd,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;YACD,oBAAoB,EAAE;gBACpB,cAAc,EAAE,sBAAsB;gBACtC,QAAQ,EAAE,IAAI;gBACd,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;YACD,aAAa,EAAE;gBACb,cAAc,EAAE,eAAe;gBAC/B,QAAQ,EAAE,IAAI;gBACd,IAAI,EAAE;oBACJ,IAAI,EAAE,SAAS;iBAChB;aACF;YACD,6BAA6B,EAAE;gBAC7B,cAAc,EAAE,+BAA+B;gBAC/C,QAAQ,EAAE,IAAI;gBACd,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;YACD,eAAe,EAAE;gBACf,cAAc,EAAE,iBAAiB;gBACjC,QAAQ,EAAE,IAAI;gBACd,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;YACD,SAAS,EAAE;gBACT,cAAc,EAAE,WAAW;gBAC3B,QAAQ,EAAE,IAAI;gBACd,IAAI,EAAE;oBACJ,IAAI,EAAE,UAAU;iBACjB;aACF;YACD,gBAAgB,EAAE;gBAChB,cAAc,EAAE,kBAAkB;gBAClC,QAAQ,EAAE,IAAI;gBACd,IAAI,EAAE;oBACJ,IAAI,EAAE,UAAU;iBACjB;aACF;YACD,KAAK,EAAE;gBACL,cAAc,EAAE,OAAO;gBACvB,IAAI,EAAE;oBACJ,IAAI,EAAE,WAAW;oBACjB,SAAS,EAAE,UAAU;iBACtB;aACF;SACF;KACF;CACF,CAAC;AAEF,AAAO,MAAM,4BAA4B,GAA+B;IACtE,IAAI,EAAE;QACJ,IAAI,EAAE,WAAW;QACjB,SAAS,EAAE,8BAA8B;QACzC,eAAe,EAAE;YACf,MAAM,EAAE;gBACN,cAAc,EAAE,QAAQ;gBACxB,QAAQ,EAAE,IAAI;gBACd,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;YACD,sBAAsB,EAAE;gBACtB,cAAc,EAAE,wBAAwB;gBACxC,QAAQ,EAAE,IAAI;gBACd,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;YACD,yBAAyB,EAAE;gBACzB,cAAc,EAAE,2BAA2B;gBAC3C,QAAQ,EAAE,IAAI;gBACd,IAAI,EAAE;oBACJ,IAAI,EAAE,SAAS;iBAChB;aACF;YACD,qBAAqB,EAAE;gBACrB,cAAc,EAAE,uBAAuB;gBACvC,QAAQ,EAAE,IAAI;gBACd,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;YACD,kBAAkB,EAAE;gBAClB,cAAc,EAAE,oBAAoB;gBACpC,QAAQ,EAAE,IAAI;gBACd,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;YACD,iBAAiB,EAAE;gBACjB,cAAc,EAAE,mBAAmB;gBACnC,QAAQ,EAAE,IAAI;gBACd,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;YACD,mBAAmB,EAAE;gBACnB,cAAc,EAAE,qBAAqB;gBACrC,QAAQ,EAAE,IAAI;gBACd,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;YACD,gBAAgB,EAAE;gBAChB,cAAc,EAAE,kBAAkB;gBAClC,QAAQ,EAAE,IAAI;gBACd,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;YACD,SAAS,EAAE;gBACT,cAAc,EAAE,WAAW;gBAC3B,QAAQ,EAAE,IAAI;gBACd,IAAI,EAAE;oBACJ,IAAI,EAAE,UAAU;iBACjB;aACF;YACD,gBAAgB,EAAE;gBAChB,cAAc,EAAE,kBAAkB;gBAClC,QAAQ,EAAE,IAAI;gBACd,IAAI,EAAE;oBACJ,IAAI,EAAE,UAAU;iBACjB;aACF;YACD,KAAK,EAAE;gBACL,cAAc,EAAE,OAAO;gBACvB,IAAI,EAAE;oBACJ,IAAI,EAAE,WAAW;oBACjB,SAAS,EAAE,UAAU;iBACtB;aACF;SACF;KACF;CACF,CAAC;AAEF,AAAO,MAAM,sBAAsB,GAA+B;IAChE,IAAI,EAAE;QACJ,IAAI,EAAE,WAAW;QACjB,SAAS,EAAE,wBAAwB;QACnC,eAAe,EAAE;YACf,4BAA4B,EAAE;gBAC5B,cAAc,EAAE,8BAA8B;gBAC9C,IAAI,EAAE;oBACJ,IAAI,EAAE,WAAW;oBACjB,SAAS,EAAE,8BAA8B;iBAC1C;aACF;SACF;KACF;CACF,CAAC;AAEF,AAAO,MAAM,4BAA4B,GAA+B;IACtE,IAAI,EAAE;QACJ,IAAI,EAAE,WAAW;QACjB,SAAS,EAAE,8BAA8B;QACzC,eAAe,EAAE;YACf,gBAAgB,EAAE;gBAChB,cAAc,EAAE,kBAAkB;gBAClC,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;YACD,MAAM,EAAE;gBACN,cAAc,EAAE,QAAQ;gBACxB,IAAI,EAAE;oBACJ,IAAI,EAAE,SAAS;iBAChB;aACF;SACF;KACF;CACF,CAAC;AAEF,AAAO,MAAM,0BAA0B,GAA+B;IACpE,IAAI,EAAE;QACJ,IAAI,EAAE,WAAW;QACjB,SAAS,EAAE,4BAA4B;QACvC,eAAe,EAAE;YACf,wBAAwB,EAAE;gBACxB,cAAc,EAAE,0BAA0B;gBAC1C,IAAI,EAAE;oBACJ,IAAI,EAAE,WAAW;oBACjB,SAAS,EAAE,aAAa;iBACzB;aACF;SACF;KACF;CACF,CAAC;AAEF,AAAO,MAAM,kBAAkB,GAA+B;IAC5D,IAAI,EAAE;QACJ,IAAI,EAAE,WAAW;QACjB,SAAS,EAAE,oBAAoB;QAC/B,eAAe,EAAE;YACf,mBAAmB,EAAE;gBACnB,cAAc,EAAE,qBAAqB;gBACrC,IAAI,EAAE;oBACJ,IAAI,EAAE,UAAU;oBAChB,OAAO,EAAE;wBACP,IAAI,EAAE;4BACJ,IAAI,EAAE,WAAW;4BACjB,SAAS,EAAE,sBAAsB;yBAClC;qBACF;iBACF;aACF;SACF;KACF;CACF,CAAC;AAEF,AAAO,MAAM,oBAAoB,GAA+B;IAC9D,IAAI,EAAE;QACJ,IAAI,EAAE,WAAW;QACjB,SAAS,EAAE,sBAAsB;QACjC,eAAe,EAAE;YACf,IAAI,EAAE;gBACJ,cAAc,EAAE,MAAM;gBACtB,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;YACD,KAAK,EAAE;gBACL,cAAc,EAAE,OAAO;gBACvB,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;YACD,kBAAkB,EAAE;gBAClB,cAAc,EAAE,oBAAoB;gBACpC,QAAQ,EAAE,IAAI;gBACd,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;YACD,sBAAsB,EAAE;gBACtB,cAAc,EAAE,wBAAwB;gBACxC,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;SACF;KACF;CACF,CAAC;AAEF,AAAO,MAAM,sBAAsB,GAA+B;IAChE,IAAI,EAAE;QACJ,IAAI,EAAE,WAAW;QACjB,SAAS,EAAE,wBAAwB;QACnC,eAAe,EAAE;YACf,WAAW,EAAE;gBACX,cAAc,EAAE,aAAa;gBAC7B,QAAQ,EAAE,IAAI;gBACd,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;YACD,QAAQ,EAAE;gBACR,cAAc,EAAE,UAAU;gBAC1B,QAAQ,EAAE,IAAI;gBACd,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;YACD,IAAI,EAAE;gBACJ,cAAc,EAAE,MAAM;gBACtB,IAAI,EAAE;oBACJ,IAAI,EAAE,MAAM;oBACZ,aAAa,EAAE;wBACb,gBAAgB;wBAChB,cAAc;wBACd,8BAA8B;wBAC9B,MAAM;qBACP;iBACF;aACF;YACD,sBAAsB,EAAE;gBACtB,cAAc,EAAE,wBAAwB;gBACxC,IAAI,EAAE;oBACJ,IAAI,EAAE,YAAY;oBAClB,KAAK,EAAE;wBACL,IAAI,EAAE;4BACJ,IAAI,EAAE,WAAW;4BACjB,SAAS,EAAE,6BAA6B;yBACzC;qBACF;iBACF;aACF;SACF;KACF;CACF,CAAC;AAEF,AAAO,MAAM,2BAA2B,GAA+B;IACrE,IAAI,EAAE;QACJ,IAAI,EAAE,WAAW;QACjB,SAAS,EAAE,6BAA6B;QACxC,eAAe,EAAE;YACf,WAAW,EAAE;gBACX,cAAc,EAAE,aAAa;gBAC7B,QAAQ,EAAE,IAAI;gBACd,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;YACD,QAAQ,EAAE;gBACR,cAAc,EAAE,UAAU;gBAC1B,QAAQ,EAAE,IAAI;gBACd,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;SACF;KACF;CACF,CAAC;AAEF,AAAO,MAAM,gCAAgC,GAA+B;IAC1E,IAAI,EAAE;QACJ,IAAI,EAAE,WAAW;QACjB,SAAS,EAAE,kCAAkC;QAC7C,eAAe,EAAE;YACf,KAAK,EAAE;gBACL,cAAc,EAAE,OAAO;gBACvB,QAAQ,EAAE,IAAI;gBACd,IAAI,EAAE;oBACJ,IAAI,EAAE,UAAU;oBAChB,OAAO,EAAE;wBACP,IAAI,EAAE;4BACJ,IAAI,EAAE,WAAW;4BACjB,SAAS,EAAE,wBAAwB;yBACpC;qBACF;iBACF;aACF;YACD,QAAQ,EAAE;gBACR,cAAc,EAAE,UAAU;gBAC1B,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;SACF;KACF;CACF,CAAC;AAEF,AAAO,MAAM,aAAa,GAA+B;IACvD,IAAI,EAAE;QACJ,IAAI,EAAE,WAAW;QACjB,SAAS,EAAE,eAAe;QAC1B,eAAe,EAAE;YACf,IAAI,EAAE;gBACJ,cAAc,EAAE,MAAM;gBACtB,IAAI,EAAE;oBACJ,IAAI,EAAE,MAAM;oBACZ,aAAa,EAAE,CAAC,WAAW,EAAE,QAAQ,EAAE,SAAS,CAAC;iBAClD;aACF;YACD,oBAAoB,EAAE;gBACpB,cAAc,EAAE,sBAAsB;gBACtC,IAAI,EAAE;oBACJ,IAAI,EAAE,WAAW;oBACjB,SAAS,EAAE,sBAAsB;iBAClC;aACF;YACD,wBAAwB,EAAE;gBACxB,cAAc,EAAE,0BAA0B;gBAC1C,IAAI,EAAE;oBACJ,IAAI,EAAE,WAAW;oBACjB,SAAS,EAAE,0BAA0B;iBACtC;aACF;SACF;KACF;CACF,CAAC;AAEF,AAAO,MAAM,oBAAoB,GAA+B;IAC9D,IAAI,EAAE;QACJ,IAAI,EAAE,WAAW;QACjB,SAAS,EAAE,sBAAsB;QACjC,eAAe,EAAE;YACf,uBAAuB,EAAE;gBACvB,WAAW,EAAE;oBACX,gBAAgB,EAAE,GAAG;oBACrB,gBAAgB,EAAE,CAAC;iBACpB;gBACD,cAAc,EAAE,yBAAyB;gBACzC,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;YACD,2BAA2B,EAAE;gBAC3B,WAAW,EAAE;oBACX,gBAAgB,EAAE,GAAG;oBACrB,gBAAgB,EAAE,CAAC;iBACpB;gBACD,cAAc,EAAE,6BAA6B;gBAC7C,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;YACD,mCAAmC,EAAE;gBACnC,WAAW,EAAE;oBACX,gBAAgB,EAAE,GAAG;oBACrB,gBAAgB,EAAE,CAAC;iBACpB;gBACD,cAAc,EAAE,qCAAqC;gBACrD,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;YACD,uBAAuB,EAAE;gBACvB,cAAc,EAAE,yBAAyB;gBACzC,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;YACD,sBAAsB,EAAE;gBACtB,cAAc,EAAE,wBAAwB;gBACxC,IAAI,EAAE;oBACJ,IAAI,EAAE,SAAS;iBAChB;aACF;YACD,4BAA4B,EAAE;gBAC5B,cAAc,EAAE,8BAA8B;gBAC9C,IAAI,EAAE;oBACJ,IAAI,EAAE,SAAS;iBAChB;aACF;SACF;KACF;CACF,CAAC;AAEF,AAAO,MAAM,wBAAwB,GAA+B;IAClE,IAAI,EAAE;QACJ,IAAI,EAAE,WAAW;QACjB,SAAS,EAAE,0BAA0B;QACrC,eAAe,EAAE;YACf,wBAAwB,EAAE;gBACxB,cAAc,EAAE,0BAA0B;gBAC1C,IAAI,EAAE;oBACJ,IAAI,EAAE,SAAS;iBAChB;aACF;YACD,wBAAwB,EAAE;gBACxB,cAAc,EAAE,0BAA0B;gBAC1C,IAAI,EAAE;oBACJ,IAAI,EAAE,SAAS;iBAChB;aACF;SACF;KACF;CACF,CAAC;AAEF,AAAO,MAAM,sBAAsB,GAA+B;IAChE,IAAI,EAAE;QACJ,IAAI,EAAE,WAAW;QACjB,SAAS,EAAE,wBAAwB;QACnC,eAAe,EAAE;YACf,OAAO,EAAE;gBACP,cAAc,EAAE,SAAS;gBACzB,IAAI,EAAE;oBACJ,IAAI,EAAE,SAAS;iBAChB;aACF;YACD,WAAW,EAAE;gBACX,cAAc,EAAE,aAAa;gBAC7B,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;YACD,YAAY,EAAE;gBACZ,cAAc,EAAE,cAAc;gBAC9B,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;SACF;KACF;CACF,CAAC;AAEF,AAAO,MAAM,+BAA+B,GAA+B;IACzE,IAAI,EAAE;QACJ,IAAI,EAAE,WAAW;QACjB,SAAS,EAAE,iCAAiC;QAC5C,eAAe,EAAE;YACf,SAAS,EAAE;gBACT,cAAc,EAAE,WAAW;gBAC3B,IAAI,EAAE;oBACJ,IAAI,EAAE,WAAW;oBACjB,SAAS,EAAE,iCAAiC;iBAC7C;aACF;YACD,cAAc,EAAE;gBACd,cAAc,EAAE,gBAAgB;gBAChC,IAAI,EAAE;oBACJ,IAAI,EAAE,WAAW;oBACjB,SAAS,EAAE,sCAAsC;iBAClD;aACF;YACD,cAAc,EAAE;gBACd,cAAc,EAAE,gBAAgB;gBAChC,IAAI,EAAE;oBACJ,IAAI,EAAE,WAAW;oBACjB,SAAS,EAAE,sCAAsC;iBAClD;aACF;YACD,eAAe,EAAE;gBACf,cAAc,EAAE,iBAAiB;gBACjC,IAAI,EAAE;oBACJ,IAAI,EAAE,WAAW;oBACjB,SAAS,EAAE,iBAAiB;iBAC7B;aACF;YACD,kBAAkB,EAAE;gBAClB,cAAc,EAAE,oBAAoB;gBACpC,IAAI,EAAE;oBACJ,IAAI,EAAE,WAAW;oBACjB,SAAS,EAAE,oBAAoB;iBAChC;aACF;YACD,gBAAgB,EAAE;gBAChB,cAAc,EAAE,kBAAkB;gBAClC,IAAI,EAAE;oBACJ,IAAI,EAAE,WAAW;oBACjB,SAAS,EAAE,wCAAwC;iBACpD;aACF;YACD,WAAW,EAAE;gBACX,cAAc,EAAE,aAAa;gBAC7B,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;YACD,QAAQ,EAAE;gBACR,cAAc,EAAE,UAAU;gBAC1B,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;YACD,cAAc,EAAE;gBACd,cAAc,EAAE,gBAAgB;gBAChC,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;YACD,cAAc,EAAE;gBACd,cAAc,EAAE,gBAAgB;gBAChC,IAAI,EAAE;oBACJ,IAAI,EAAE,WAAW;oBACjB,SAAS,EAAE,gBAAgB;iBAC5B;aACF;YACD,sBAAsB,EAAE;gBACtB,cAAc,EAAE,wBAAwB;gBACxC,IAAI,EAAE;oBACJ,IAAI,EAAE,WAAW;oBACjB,SAAS,EAAE,wBAAwB;iBACpC;aACF;YACD,QAAQ,EAAE;gBACR,cAAc,EAAE,UAAU;gBAC1B,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;YACD,mBAAmB,EAAE;gBACnB,cAAc,EAAE,qBAAqB;gBACrC,IAAI,EAAE;oBACJ,IAAI,EAAE,WAAW;oBACjB,SAAS,EAAE,4BAA4B;iBACxC;aACF;YACD,kBAAkB,EAAE;gBAClB,cAAc,EAAE,oBAAoB;gBACpC,IAAI,EAAE;oBACJ,IAAI,EAAE,WAAW;oBACjB,SAAS,EAAE,oBAAoB;iBAChC;aACF;YACD,eAAe,EAAE;gBACf,cAAc,EAAE,iBAAiB;gBACjC,IAAI,EAAE;oBACJ,IAAI,EAAE,WAAW;oBACjB,SAAS,EAAE,uCAAuC;iBACnD;aACF;SACF;KACF;CACF,CAAC;AAEF,AAAO,MAAM,+BAA+B,GAA+B;IACzE,IAAI,EAAE;QACJ,IAAI,EAAE,WAAW;QACjB,SAAS,EAAE,iCAAiC;QAC5C,eAAe,EAAE;YACf,kBAAkB,EAAE;gBAClB,cAAc,EAAE,oBAAoB;gBACpC,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;YACD,aAAa,EAAE;gBACb,cAAc,EAAE,eAAe;gBAC/B,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;YACD,aAAa,EAAE;gBACb,cAAc,EAAE,eAAe;gBAC/B,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;YACD,UAAU,EAAE;gBACV,cAAc,EAAE,YAAY;gBAC5B,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;YACD,oBAAoB,EAAE;gBACpB,cAAc,EAAE,sBAAsB;gBACtC,IAAI,EAAE;oBACJ,IAAI,EAAE,WAAW;oBACjB,SAAS,EAAE,sBAAsB;iBAClC;aACF;YACD,kBAAkB,EAAE;gBAClB,cAAc,EAAE,oBAAoB;gBACpC,IAAI,EAAE;oBACJ,IAAI,EAAE,WAAW;oBACjB,SAAS,EAAE,oBAAoB;iBAChC;aACF;YACD,OAAO,EAAE;gBACP,cAAc,EAAE,SAAS;gBACzB,IAAI,EAAE;oBACJ,IAAI,EAAE,UAAU;oBAChB,OAAO,EAAE;wBACP,IAAI,EAAE;4BACJ,IAAI,EAAE,WAAW;4BACjB,SAAS,EAAE,kBAAkB;yBAC9B;qBACF;iBACF;aACF;YACD,wBAAwB,EAAE;gBACxB,cAAc,EAAE,0BAA0B;gBAC1C,IAAI,EAAE;oBACJ,IAAI,EAAE,SAAS;iBAChB;aACF;SACF;KACF;CACF,CAAC;AAEF,AAAO,MAAM,oCAAoC,GAA+B;IAC9E,IAAI,EAAE;QACJ,IAAI,EAAE,WAAW;QACjB,SAAS,EAAE,sCAAsC;QACjD,eAAe,EAAE;YACf,cAAc,EAAE;gBACd,cAAc,EAAE,gBAAgB;gBAChC,IAAI,EAAE;oBACJ,IAAI,EAAE,WAAW;oBACjB,SAAS,EAAE,gBAAgB;iBAC5B;aACF;YACD,MAAM,EAAE;gBACN,cAAc,EAAE,QAAQ;gBACxB,IAAI,EAAE;oBACJ,IAAI,EAAE,WAAW;oBACjB,SAAS,EAAE,8BAA8B;iBAC1C;aACF;YACD,SAAS,EAAE;gBACT,cAAc,EAAE,WAAW;gBAC3B,IAAI,EAAE;oBACJ,IAAI,EAAE,UAAU;oBAChB,OAAO,EAAE;wBACP,IAAI,EAAE;4BACJ,IAAI,EAAE,WAAW;4BACjB,SAAS,EAAE,gCAAgC;yBAC5C;qBACF;iBACF;aACF;SACF;KACF;CACF,CAAC;AAEF,AAAO,MAAM,4BAA4B,GAA+B;IACtE,IAAI,EAAE;QACJ,IAAI,EAAE,WAAW;QACjB,SAAS,EAAE,8BAA8B;QACzC,eAAe,EAAE;YACf,IAAI,EAAE;gBACJ,cAAc,EAAE,MAAM;gBACtB,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;YACD,OAAO,EAAE;gBACP,cAAc,EAAE,SAAS;gBACzB,IAAI,EAAE;oBACJ,IAAI,EAAE,MAAM;oBACZ,aAAa,EAAE,CAAC,MAAM,EAAE,UAAU,EAAE,WAAW,CAAC;iBACjD;aACF;YACD,uBAAuB,EAAE;gBACvB,cAAc,EAAE,yBAAyB;gBACzC,IAAI,EAAE;oBACJ,IAAI,EAAE,SAAS;iBAChB;aACF;YACD,YAAY,EAAE;gBACZ,cAAc,EAAE,cAAc;gBAC9B,QAAQ,EAAE,IAAI;gBACd,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;YACD,gBAAgB,EAAE;gBAChB,cAAc,EAAE,kBAAkB;gBAClC,IAAI,EAAE;oBACJ,IAAI,EAAE,WAAW;oBACjB,SAAS,EAAE,kBAAkB;iBAC9B;aACF;YACD,UAAU,EAAE;gBACV,cAAc,EAAE,YAAY;gBAC5B,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;YACD,MAAM,EAAE;gBACN,cAAc,EAAE,QAAQ;gBACxB,IAAI,EAAE;oBACJ,IAAI,EAAE,MAAM;oBACZ,aAAa,EAAE,CAAC,SAAS,EAAE,OAAO,CAAC;iBACpC;aACF;YACD,KAAK,EAAE;gBACL,cAAc,EAAE,OAAO;gBACvB,IAAI,EAAE;oBACJ,IAAI,EAAE,WAAW;oBACjB,SAAS,EAAE,iBAAiB;iBAC7B;aACF;YACD,aAAa,EAAE;gBACb,cAAc,EAAE,eAAe;gBAC/B,IAAI,EAAE;oBACJ,IAAI,EAAE,UAAU;oBAChB,OAAO,EAAE;wBACP,IAAI,EAAE;4BACJ,IAAI,EAAE,QAAQ;yBACf;qBACF;iBACF;aACF;YACD,WAAW,EAAE;gBACX,cAAc,EAAE,aAAa;gBAC7B,IAAI,EAAE;oBACJ,IAAI,EAAE,WAAW;oBACjB,SAAS,EAAE,6CAA6C;iBACzD;aACF;SACF;KACF;CACF,CAAC;AAEF,AAAO,MAAM,2CAA2C,GAA+B;IACrF,IAAI,EAAE;QACJ,IAAI,EAAE,WAAW;QACjB,SAAS,EAAE,6CAA6C;QACxD,eAAe,EAAE;YACf,kBAAkB,EAAE;gBAClB,cAAc,EAAE,oBAAoB;gBACpC,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;YACD,iBAAiB,EAAE;gBACjB,cAAc,EAAE,mBAAmB;gBACnC,IAAI,EAAE;oBACJ,IAAI,EAAE,WAAW;oBACjB,SAAS,EAAE,6BAA6B;iBACzC;aACF;YACD,eAAe,EAAE;gBACf,cAAc,EAAE,iBAAiB;gBACjC,IAAI,EAAE;oBACJ,IAAI,EAAE,WAAW;oBACjB,SAAS,EAAE,uBAAuB;iBACnC;aACF;SACF;KACF;CACF,CAAC;AAEF,AAAO,MAAM,8BAA8B,GAA+B;IACxE,IAAI,EAAE;QACJ,IAAI,EAAE,WAAW;QACjB,SAAS,EAAE,gCAAgC;QAC3C,eAAe,EAAE;YACf,IAAI,EAAE;gBACJ,cAAc,EAAE,MAAM;gBACtB,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;YACD,GAAG,EAAE;gBACH,cAAc,EAAE,KAAK;gBACrB,QAAQ,EAAE,IAAI;gBACd,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;YACD,OAAO,EAAE;gBACP,cAAc,EAAE,SAAS;gBACzB,IAAI,EAAE;oBACJ,IAAI,EAAE,MAAM;oBACZ,aAAa,EAAE,CAAC,MAAM,EAAE,UAAU,EAAE,WAAW,CAAC;iBACjD;aACF;YACD,uBAAuB,EAAE;gBACvB,cAAc,EAAE,yBAAyB;gBACzC,IAAI,EAAE;oBACJ,IAAI,EAAE,SAAS;iBAChB;aACF;YACD,YAAY,EAAE;gBACZ,cAAc,EAAE,cAAc;gBAC9B,QAAQ,EAAE,IAAI;gBACd,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;YACD,UAAU,EAAE;gBACV,cAAc,EAAE,YAAY;gBAC5B,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;YACD,WAAW,EAAE;gBACX,cAAc,EAAE,aAAa;gBAC7B,IAAI,EAAE;oBACJ,IAAI,EAAE,WAAW;oBACjB,SAAS,EAAE,6CAA6C;iBACzD;aACF;YACD,iBAAiB,EAAE;gBACjB,cAAc,EAAE,mBAAmB;gBACnC,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;YACD,iBAAiB,EAAE;gBACjB,cAAc,EAAE,mBAAmB;gBACnC,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;SACF;KACF;CACF,CAAC;AAEF,AAAO,MAAM,oCAAoC,GAA+B;IAC9E,IAAI,EAAE;QACJ,IAAI,EAAE,WAAW;QACjB,SAAS,EAAE,sCAAsC;QACjD,eAAe,EAAE;YACf,WAAW,EAAE;gBACX,cAAc,EAAE,aAAa;gBAC7B,IAAI,EAAE;oBACJ,IAAI,EAAE,WAAW;oBACjB,SAAS,EAAE,oBAAoB;iBAChC;aACF;YACD,8BAA8B,EAAE;gBAC9B,cAAc,EAAE,gCAAgC;gBAChD,IAAI,EAAE;oBACJ,IAAI,EAAE,UAAU;oBAChB,OAAO,EAAE;wBACP,IAAI,EAAE;4BACJ,IAAI,EAAE,WAAW;4BACjB,SAAS,EAAE,4CAA4C;yBACxD;qBACF;iBACF;aACF;YACD,iBAAiB,EAAE;gBACjB,cAAc,EAAE,mBAAmB;gBACnC,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;SACF;KACF;CACF,CAAC;AAEF,AAAO,MAAM,kBAAkB,GAA+B;IAC5D,IAAI,EAAE;QACJ,IAAI,EAAE,WAAW;QACjB,SAAS,EAAE,oBAAoB;QAC/B,eAAe,EAAE;YACf,EAAE,EAAE;gBACF,cAAc,EAAE,IAAI;gBACpB,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;SACF;KACF;CACF,CAAC;AAEF,AAAO,MAAM,qDAAqD,GAA+B;IAC/F,IAAI,EAAE;QACJ,IAAI,EAAE,WAAW;QACjB,SAAS,EAAE,uDAAuD;QAClE,eAAe,EAAE;YACf,UAAU,EAAE;gBACV,cAAc,EAAE,YAAY;gBAC5B,IAAI,EAAE;oBACJ,IAAI,EAAE,UAAU;oBAChB,OAAO,EAAE;wBACP,IAAI,EAAE;4BACJ,IAAI,EAAE,QAAQ;yBACf;qBACF;iBACF;aACF;SACF;KACF;CACF,CAAC;AAEF,AAAO,MAAM,kDAAkD,GAA+B;IAC5F,IAAI,EAAE;QACJ,IAAI,EAAE,WAAW;QACjB,SAAS,EAAE,oDAAoD;QAC/D,eAAe,EAAE;YACf,IAAI,EAAE;gBACJ,cAAc,EAAE,MAAM;gBACtB,QAAQ,EAAE,IAAI;gBACd,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;YACD,GAAG,EAAE;gBACH,cAAc,EAAE,KAAK;gBACrB,IAAI,EAAE;oBACJ,IAAI,EAAE,WAAW;oBACjB,SAAS,EAAE,oBAAoB;iBAChC;aACF;YACD,oBAAoB,EAAE;gBACpB,cAAc,EAAE,iCAAiC;gBACjD,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;YACD,WAAW,EAAE;gBACX,cAAc,EAAE,wBAAwB;gBACxC,IAAI,EAAE;oBACJ,IAAI,EAAE,WAAW;oBACjB,SAAS,EACP,+DAA+D;iBAClE;aACF;YACD,MAAM,EAAE;gBACN,cAAc,EAAE,mBAAmB;gBACnC,IAAI,EAAE;oBACJ,IAAI,EAAE,UAAU;oBAChB,OAAO,EAAE;wBACP,IAAI,EAAE;4BACJ,IAAI,EAAE,WAAW;4BACjB,SAAS,EAAE,6BAA6B;yBACzC;qBACF;iBACF;aACF;YACD,cAAc,EAAE;gBACd,cAAc,EAAE,2BAA2B;gBAC3C,IAAI,EAAE;oBACJ,IAAI,EAAE,WAAW;oBACjB,SAAS,EAAE,aAAa;iBACzB;aACF;YACD,sBAAsB,EAAE;gBACtB,cAAc,EAAE,mCAAmC;gBACnD,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;YACD,YAAY,EAAE;gBACZ,cAAc,EAAE,yBAAyB;gBACzC,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;SACF;KACF;CACF,CAAC;AAEF,AAAO,MAAM,6DAA6D,GAA+B;IACvG,IAAI,EAAE;QACJ,IAAI,EAAE,WAAW;QACjB,SAAS,EAAE,+DAA+D;QAC1E,eAAe,EAAE;YACf,eAAe,EAAE;gBACf,cAAc,EAAE,iBAAiB;gBACjC,QAAQ,EAAE,IAAI;gBACd,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;SACF;KACF;CACF,CAAC;AAEF,AAAO,MAAM,2BAA2B,GAA+B;IACrE,IAAI,EAAE;QACJ,IAAI,EAAE,WAAW;QACjB,SAAS,EAAE,6BAA6B;QACxC,eAAe,EAAE;YACf,SAAS,EAAE;gBACT,cAAc,EAAE,WAAW;gBAC3B,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;YACD,GAAG,EAAE;gBACH,cAAc,EAAE,KAAK;gBACrB,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;SACF;KACF;CACF,CAAC;AAEF,AAAO,MAAM,sCAAsC,GAA+B;IAChF,IAAI,EAAE;QACJ,IAAI,EAAE,WAAW;QACjB,SAAS,EAAE,wCAAwC;QACnD,eAAe,EAAE;YACf,UAAU,EAAE;gBACV,cAAc,EAAE,YAAY;gBAC5B,IAAI,EAAE;oBACJ,IAAI,EAAE,UAAU;oBAChB,OAAO,EAAE;wBACP,IAAI,EAAE;4BACJ,IAAI,EAAE,WAAW;4BACjB,SAAS,EAAE,iCAAiC;yBAC7C;qBACF;iBACF;aACF;YACD,oBAAoB,EAAE;gBACpB,cAAc,EAAE,sBAAsB;gBACtC,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;SACF;KACF;CACF,CAAC;AAEF,AAAO,MAAM,qCAAqC,GAA+B;IAC/E,IAAI,EAAE;QACJ,IAAI,EAAE,WAAW;QACjB,SAAS,EAAE,uCAAuC;QAClD,eAAe,EAAE;YACf,gBAAgB,EAAE;gBAChB,cAAc,EAAE,kBAAkB;gBAClC,IAAI,EAAE;oBACJ,IAAI,EAAE,WAAW;oBACjB,SAAS,EAAE,kBAAkB;iBAC9B;aACF;SACF;KACF;CACF,CAAC;AAEF,AAAO,MAAM,aAAa,GAA+B;IACvD,IAAI,EAAE;QACJ,IAAI,EAAE,WAAW;QACjB,SAAS,EAAE,eAAe;QAC1B,eAAe,EAAE;YACf,KAAK,EAAE;gBACL,cAAc,EAAE,OAAO;gBACvB,IAAI,EAAE;oBACJ,IAAI,EAAE,UAAU;oBAChB,OAAO,EAAE;wBACP,IAAI,EAAE;4BACJ,IAAI,EAAE,QAAQ;yBACf;qBACF;iBACF;aACF;YACD,aAAa,EAAE;gBACb,cAAc,EAAE,eAAe;gBAC/B,IAAI,EAAE;oBACJ,IAAI,EAAE,SAAS;iBAChB;aACF;SACF;KACF;CACF,CAAC;AAEF,AAAO,MAAM,iBAAiB,GAA+B;IAC3D,IAAI,EAAE;QACJ,IAAI,EAAE,WAAW;QACjB,SAAS,EAAE,mBAAmB;QAC9B,eAAe,EAAE;YACf,OAAO,EAAE;gBACP,cAAc,EAAE,SAAS;gBACzB,IAAI,EAAE;oBACJ,IAAI,EAAE,SAAS;iBAChB;aACF;YACD,cAAc,EAAE;gBACd,cAAc,EAAE,gBAAgB;gBAChC,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;SACF;KACF;CACF,CAAC;AAEF,AAAO,MAAM,8BAA8B,GAA+B;IACxE,IAAI,EAAE;QACJ,IAAI,EAAE,WAAW;QACjB,SAAS,EAAE,gCAAgC;QAC3C,eAAe,EAAE;YACf,WAAW,EAAE;gBACX,cAAc,EAAE,aAAa;gBAC7B,QAAQ,EAAE,IAAI;gBACd,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;YACD,QAAQ,EAAE;gBACR,cAAc,EAAE,UAAU;gBAC1B,QAAQ,EAAE,IAAI;gBACd,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;YACD,IAAI,EAAE;gBACJ,cAAc,EAAE,MAAM;gBACtB,IAAI,EAAE;oBACJ,IAAI,EAAE,MAAM;oBACZ,aAAa,EAAE;wBACb,gBAAgB;wBAChB,cAAc;wBACd,8BAA8B;wBAC9B,MAAM;qBACP;iBACF;aACF;YACD,sBAAsB,EAAE;gBACtB,cAAc,EAAE,wBAAwB;gBACxC,IAAI,EAAE;oBACJ,IAAI,EAAE,YAAY;oBAClB,KAAK,EAAE;wBACL,IAAI,EAAE;4BACJ,IAAI,EAAE,WAAW;4BACjB,SAAS,EACP,2DAA2D;yBAC9D;qBACF;iBACF;aACF;SACF;KACF;CACF,CAAC;AAEF,AAAO,MAAM,yDAAyD,GAA+B;IACnG,IAAI,EAAE;QACJ,IAAI,EAAE,WAAW;QACjB,SAAS,EAAE,2DAA2D;QACtE,eAAe,EAAE;YACf,WAAW,EAAE;gBACX,cAAc,EAAE,aAAa;gBAC7B,QAAQ,EAAE,IAAI;gBACd,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;YACD,QAAQ,EAAE;gBACR,cAAc,EAAE,UAAU;gBAC1B,QAAQ,EAAE,IAAI;gBACd,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;SACF;KACF;CACF,CAAC;AAEF,AAAO,MAAM,mBAAmB,GAA+B;IAC7D,IAAI,EAAE;QACJ,IAAI,EAAE,WAAW;QACjB,SAAS,EAAE,qBAAqB;QAChC,eAAe,EAAE;YACf,MAAM,EAAE;gBACN,cAAc,EAAE,QAAQ;gBACxB,IAAI,EAAE;oBACJ,IAAI,EAAE,WAAW;oBACjB,SAAS,EAAE,aAAa;iBACzB;aACF;YACD,SAAS,EAAE;gBACT,cAAc,EAAE,WAAW;gBAC3B,IAAI,EAAE;oBACJ,IAAI,EAAE,UAAU;oBAChB,OAAO,EAAE;wBACP,IAAI,EAAE;4BACJ,IAAI,EAAE,WAAW;4BACjB,SAAS,EAAE,eAAe;yBAC3B;qBACF;iBACF;aACF;YACD,aAAa,EAAE;gBACb,cAAc,EAAE,eAAe;gBAC/B,IAAI,EAAE;oBACJ,IAAI,EAAE,SAAS;iBAChB;aACF;SACF;KACF;CACF,CAAC;AAEF,AAAO,MAAM,SAAS,GAA+B;IACnD,IAAI,EAAE;QACJ,IAAI,EAAE,WAAW;QACjB,SAAS,EAAE,WAAW;QACtB,eAAe,EAAE;YACf,QAAQ,EAAE;gBACR,cAAc,EAAE,UAAU;gBAC1B,IAAI,EAAE;oBACJ,IAAI,EAAE,WAAW;oBACjB,SAAS,EAAE,aAAa;iBACzB;aACF;YACD,WAAW,EAAE;gBACX,cAAc,EAAE,aAAa;gBAC7B,IAAI,EAAE;oBACJ,IAAI,EAAE,WAAW;oBACjB,SAAS,EAAE,aAAa;iBACzB;aACF;YACD,OAAO,EAAE;gBACP,cAAc,EAAE,SAAS;gBACzB,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;YACD,OAAO,EAAE;gBACP,cAAc,EAAE,SAAS;gBACzB,IAAI,EAAE;oBACJ,IAAI,EAAE,MAAM;oBACZ,aAAa,EAAE,CAAC,MAAM,EAAE,UAAU,EAAE,WAAW,CAAC;iBACjD;aACF;YACD,UAAU,EAAE;gBACV,cAAc,EAAE,YAAY;gBAC5B,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;YACD,kBAAkB,EAAE;gBAClB,cAAc,EAAE,oBAAoB;gBACpC,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;YACD,iBAAiB,EAAE;gBACjB,cAAc,EAAE,mBAAmB;gBACnC,IAAI,EAAE;oBACJ,IAAI,EAAE,WAAW;oBACjB,SAAS,EAAE,6BAA6B;iBACzC;aACF;SACF;KACF;CACF,CAAC;AAEF,AAAO,MAAM,eAAe,GAA+B;IACzD,IAAI,EAAE;QACJ,IAAI,EAAE,WAAW;QACjB,SAAS,EAAE,iBAAiB;QAC5B,eAAe,EAAE;YACf,KAAK,EAAE;gBACL,cAAc,EAAE,OAAO;gBACvB,QAAQ,EAAE,IAAI;gBACd,IAAI,EAAE;oBACJ,IAAI,EAAE,UAAU;oBAChB,OAAO,EAAE;wBACP,IAAI,EAAE;4BACJ,IAAI,EAAE,WAAW;4BACjB,SAAS,EAAE,OAAO;yBACnB;qBACF;iBACF;aACF;YACD,QAAQ,EAAE;gBACR,cAAc,EAAE,UAAU;gBAC1B,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;SACF;KACF;CACF,CAAC;AAEF,AAAO,MAAM,+BAA+B,GAA+B;IACzE,IAAI,EAAE;QACJ,IAAI,EAAE,WAAW;QACjB,SAAS,EAAE,iCAAiC;QAC5C,eAAe,EAAE;YACf,SAAS,EAAE;gBACT,cAAc,EAAE,WAAW;gBAC3B,QAAQ,EAAE,IAAI;gBACd,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;YACD,wBAAwB,EAAE;gBACxB,cAAc,EAAE,0BAA0B;gBAC1C,QAAQ,EAAE,IAAI;gBACd,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;YACD,aAAa,EAAE;gBACb,cAAc,EAAE,eAAe;gBAC/B,QAAQ,EAAE,IAAI;gBACd,IAAI,EAAE;oBACJ,IAAI,EAAE,SAAS;iBAChB;aACF;SACF;KACF;CACF,CAAC;AAEF,AAAO,MAAM,sCAAsC,GAA+B;IAChF,IAAI,EAAE;QACJ,IAAI,EAAE,WAAW;QACjB,SAAS,EAAE,wCAAwC;QACnD,eAAe,EAAE;YACf,QAAQ,EAAE;gBACR,cAAc,EAAE,UAAU;gBAC1B,QAAQ,EAAE,IAAI;gBACd,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;YACD,EAAE,EAAE;gBACF,cAAc,EAAE,IAAI;gBACpB,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;SACF;KACF;CACF,CAAC;AAEF,AAAO,MAAM,0BAA0B,GAA+B;IACpE,IAAI,EAAE;QACJ,IAAI,EAAE,WAAW;QACjB,SAAS,EAAE,4BAA4B;QACvC,eAAe,EAAE;YACf,eAAe,EAAE;gBACf,cAAc,EAAE,iBAAiB;gBACjC,IAAI,EAAE;oBACJ,IAAI,EAAE,WAAW;oBACjB,SAAS,EAAE,iBAAiB;iBAC7B;aACF;YACD,cAAc,EAAE;gBACd,cAAc,EAAE,gBAAgB;gBAChC,IAAI,EAAE;oBACJ,IAAI,EAAE,WAAW;oBACjB,SAAS,EAAE,oCAAoC;iBAChD;aACF;YACD,SAAS,EAAE;gBACT,cAAc,EAAE,WAAW;gBAC3B,IAAI,EAAE;oBACJ,IAAI,EAAE,WAAW;oBACjB,SAAS,EAAE,WAAW;iBACvB;aACF;YACD,kBAAkB,EAAE;gBAClB,cAAc,EAAE,oBAAoB;gBACpC,IAAI,EAAE;oBACJ,IAAI,EAAE,WAAW;oBACjB,SAAS,EAAE,oBAAoB;iBAChC;aACF;YACD,WAAW,EAAE;gBACX,cAAc,EAAE,aAAa;gBAC7B,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;YACD,IAAI,EAAE;gBACJ,cAAc,EAAE,MAAM;gBACtB,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;YACD,eAAe,EAAE;gBACf,cAAc,EAAE,iBAAiB;gBACjC,IAAI,EAAE;oBACJ,IAAI,EAAE,WAAW;oBACjB,SAAS,EAAE,iBAAiB;iBAC7B;aACF;YACD,QAAQ,EAAE;gBACR,cAAc,EAAE,UAAU;gBAC1B,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;SACF;KACF;CACF,CAAC;AAEF,AAAO,MAAM,kCAAkC,GAA+B;IAC5E,IAAI,EAAE;QACJ,IAAI,EAAE,WAAW;QACjB,SAAS,EAAE,oCAAoC;QAC/C,eAAe,EAAE;YACf,MAAM,EAAE;gBACN,cAAc,EAAE,QAAQ;gBACxB,IAAI,EAAE;oBACJ,IAAI,EAAE,WAAW;oBACjB,SAAS,EAAE,4BAA4B;iBACxC;aACF;YACD,SAAS,EAAE;gBACT,cAAc,EAAE,WAAW;gBAC3B,IAAI,EAAE;oBACJ,IAAI,EAAE,UAAU;oBAChB,OAAO,EAAE;wBACP,IAAI,EAAE;4BACJ,IAAI,EAAE,WAAW;4BACjB,SAAS,EAAE,8BAA8B;yBAC1C;qBACF;iBACF;aACF;SACF;KACF;CACF,CAAC;AAEF,AAAO,MAAM,0BAA0B,GAA+B;IACpE,IAAI,EAAE;QACJ,IAAI,EAAE,WAAW;QACjB,SAAS,EAAE,4BAA4B;QACvC,eAAe,EAAE;YACf,MAAM,EAAE;gBACN,cAAc,EAAE,QAAQ;gBACxB,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;YACD,kBAAkB,EAAE;gBAClB,cAAc,EAAE,oBAAoB;gBACpC,IAAI,EAAE;oBACJ,IAAI,EAAE,WAAW;oBACjB,SAAS,EAAE,wBAAwB;iBACpC;aACF;YACD,IAAI,EAAE;gBACJ,cAAc,EAAE,MAAM;gBACtB,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;YACD,OAAO,EAAE;gBACP,cAAc,EAAE,SAAS;gBACzB,IAAI,EAAE;oBACJ,IAAI,EAAE,MAAM;oBACZ,aAAa,EAAE,CAAC,MAAM,EAAE,UAAU,EAAE,WAAW,CAAC;iBACjD;aACF;YACD,UAAU,EAAE;gBACV,cAAc,EAAE,YAAY;gBAC5B,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;YACD,WAAW,EAAE;gBACX,cAAc,EAAE,aAAa;gBAC7B,IAAI,EAAE;oBACJ,IAAI,EAAE,WAAW;oBACjB,SAAS,EAAE,uBAAuB;iBACnC;aACF;YACD,gBAAgB,EAAE;gBAChB,cAAc,EAAE,kBAAkB;gBAClC,IAAI,EAAE;oBACJ,IAAI,EAAE,WAAW;oBACjB,SAAS,EAAE,oBAAoB;iBAChC;aACF;SACF;KACF;CACF,CAAC;AAEF,AAAO,MAAM,4BAA4B,GAA+B;IACtE,IAAI,EAAE;QACJ,IAAI,EAAE,WAAW;QACjB,SAAS,EAAE,8BAA8B;QACzC,eAAe,EAAE;YACf,GAAG,EAAE;gBACH,cAAc,EAAE,KAAK;gBACrB,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;YACD,IAAI,EAAE;gBACJ,cAAc,EAAE,MAAM;gBACtB,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;YACD,OAAO,EAAE;gBACP,cAAc,EAAE,SAAS;gBACzB,IAAI,EAAE;oBACJ,IAAI,EAAE,MAAM;oBACZ,aAAa,EAAE,CAAC,MAAM,EAAE,UAAU,EAAE,WAAW,CAAC;iBACjD;aACF;YACD,UAAU,EAAE;gBACV,cAAc,EAAE,YAAY;gBAC5B,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;YACD,WAAW,EAAE;gBACX,cAAc,EAAE,aAAa;gBAC7B,IAAI,EAAE;oBACJ,IAAI,EAAE,WAAW;oBACjB,SAAS,EAAE,uBAAuB;iBACnC;aACF;YACD,gBAAgB,EAAE;gBAChB,cAAc,EAAE,kBAAkB;gBAClC,IAAI,EAAE;oBACJ,IAAI,EAAE,WAAW;oBACjB,SAAS,EAAE,oBAAoB;iBAChC;aACF;SACF;KACF;CACF,CAAC;AAEF,AAAO,MAAM,wBAAwB,GAA+B;IAClE,IAAI,EAAE;QACJ,IAAI,EAAE,WAAW;QACjB,SAAS,EAAE,0BAA0B;QACrC,eAAe,EAAE;YACf,iBAAiB,EAAE;gBACjB,cAAc,EAAE,mBAAmB;gBACnC,IAAI,EAAE;oBACJ,IAAI,EAAE,UAAU;oBAChB,OAAO,EAAE;wBACP,IAAI,EAAE;4BACJ,IAAI,EAAE,WAAW;4BACjB,SAAS,EAAE,8BAA8B;yBAC1C;qBACF;iBACF;aACF;YACD,QAAQ,EAAE;gBACR,cAAc,EAAE,UAAU;gBAC1B,IAAI,EAAE;oBACJ,IAAI,EAAE,UAAU;oBAChB,OAAO,EAAE;wBACP,IAAI,EAAE;4BACJ,IAAI,EAAE,WAAW;4BACjB,SAAS,EAAE,oBAAoB;yBAChC;qBACF;iBACF;aACF;SACF;KACF;CACF,CAAC;AAEF,AAAO,MAAM,4BAA4B,GAA+B;IACtE,IAAI,EAAE;QACJ,IAAI,EAAE,WAAW;QACjB,SAAS,EAAE,8BAA8B;QACzC,eAAe,EAAE;YACf,EAAE,EAAE;gBACF,cAAc,EAAE,IAAI;gBACpB,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;YACD,iBAAiB,EAAE;gBACjB,cAAc,EAAE,mBAAmB;gBACnC,IAAI,EAAE;oBACJ,IAAI,EAAE,YAAY;oBAClB,KAAK,EAAE,EAAE,IAAI,EAAE,EAAE,IAAI,EAAE,KAAK,EAAE,EAAE;iBACjC;aACF;SACF;KACF;CACF,CAAC;AAEF,AAAO,MAAM,aAAa,GAA+B;IACvD,IAAI,EAAE;QACJ,IAAI,EAAE,WAAW;QACjB,SAAS,EAAE,eAAe;QAC1B,eAAe,EAAE;YACf,EAAE,EAAE;gBACF,cAAc,EAAE,IAAI;gBACpB,QAAQ,EAAE,IAAI;gBACd,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;YACD,IAAI,EAAE;gBACJ,cAAc,EAAE,MAAM;gBACtB,QAAQ,EAAE,IAAI;gBACd,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;YACD,IAAI,EAAE;gBACJ,cAAc,EAAE,MAAM;gBACtB,QAAQ,EAAE,IAAI;gBACd,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;SACF;KACF;CACF,CAAC;AAEF,AAAO,MAAM,gCAAgC,GAA+B;IAC1E,IAAI,EAAE;QACJ,IAAI,EAAE,WAAW;QACjB,SAAS,EAAE,kCAAkC;QAC7C,eAAe,EAAE;YACf,KAAK,EAAE;gBACL,cAAc,EAAE,OAAO;gBACvB,IAAI,EAAE;oBACJ,IAAI,EAAE,UAAU;oBAChB,OAAO,EAAE;wBACP,IAAI,EAAE;4BACJ,IAAI,EAAE,WAAW;4BACjB,SAAS,EAAE,wBAAwB;yBACpC;qBACF;iBACF;aACF;YACD,QAAQ,EAAE;gBACR,cAAc,EAAE,UAAU;gBAC1B,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;SACF;KACF;CACF,CAAC;AAEF,AAAO,MAAM,oCAAoC,GAA+B;IAC9E,IAAI,EAAE;QACJ,IAAI,EAAE,WAAW;QACjB,SAAS,EAAE,sCAAsC;QACjD,eAAe,EAAE;YACf,oBAAoB,EAAE;gBACpB,cAAc,EAAE,sBAAsB;gBACtC,QAAQ,EAAE,IAAI;gBACd,IAAI,EAAE;oBACJ,IAAI,EAAE,UAAU;oBAChB,OAAO,EAAE;wBACP,IAAI,EAAE;4BACJ,IAAI,EAAE,WAAW;4BACjB,SAAS,EAAE,yCAAyC;yBACrD;qBACF;iBACF;aACF;SACF;KACF;CACF,CAAC;AAEF,AAAO,MAAM,+BAA+B,GAA+B;IACzE,IAAI,EAAE;QACJ,IAAI,EAAE,WAAW;QACjB,SAAS,EAAE,iCAAiC;QAC5C,eAAe,EAAE;YACf,eAAe,EAAE;gBACf,cAAc,EAAE,iBAAiB;gBACjC,IAAI,EAAE;oBACJ,IAAI,EAAE,WAAW;oBACjB,SAAS,EAAE,gCAAgC;iBAC5C;aACF;YACD,QAAQ,EAAE;gBACR,cAAc,EAAE,UAAU;gBAC1B,IAAI,EAAE;oBACJ,IAAI,EAAE,UAAU;oBAChB,OAAO,EAAE;wBACP,IAAI,EAAE;4BACJ,IAAI,EAAE,WAAW;4BACjB,SAAS,EAAE,oBAAoB;yBAChC;qBACF;iBACF;aACF;SACF;KACF;CACF,CAAC;AAEF,AAAO,MAAM,8BAA8B,GAA+B;IACxE,IAAI,EAAE;QACJ,IAAI,EAAE,WAAW;QACjB,SAAS,EAAE,gCAAgC;QAC3C,eAAe,EAAE;YACf,wBAAwB,EAAE;gBACxB,cAAc,EAAE,0BAA0B;gBAC1C,QAAQ,EAAE,IAAI;gBACd,IAAI,EAAE;oBACJ,IAAI,EAAE,UAAU;oBAChB,OAAO,EAAE;wBACP,IAAI,EAAE;4BACJ,IAAI,EAAE,WAAW;4BACjB,SAAS,EAAE,qBAAqB;yBACjC;qBACF;iBACF;aACF;SACF;KACF;CACF,CAAC;AAEF,AAAO,MAAM,kCAAkC,GAA+B;IAC5E,IAAI,EAAE;QACJ,IAAI,EAAE,WAAW;QACjB,SAAS,EAAE,oCAAoC;QAC/C,eAAe,EAAE;YACf,KAAK,EAAE;gBACL,cAAc,EAAE,OAAO;gBACvB,QAAQ,EAAE,IAAI;gBACd,IAAI,EAAE;oBACJ,IAAI,EAAE,UAAU;oBAChB,OAAO,EAAE;wBACP,IAAI,EAAE;4BACJ,IAAI,EAAE,WAAW;4BACjB,SAAS,EAAE,0BAA0B;yBACtC;qBACF;iBACF;aACF;YACD,QAAQ,EAAE;gBACR,cAAc,EAAE,UAAU;gBAC1B,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;SACF;KACF;CACF,CAAC;AAEF,AAAO,MAAM,6BAA6B,GAA+B;IACvE,IAAI,EAAE;QACJ,IAAI,EAAE,WAAW;QACjB,SAAS,EAAE,+BAA+B;QAC1C,eAAe,EAAE;YACf,KAAK,EAAE;gBACL,cAAc,EAAE,OAAO;gBACvB,QAAQ,EAAE,IAAI;gBACd,IAAI,EAAE;oBACJ,IAAI,EAAE,UAAU;oBAChB,OAAO,EAAE;wBACP,IAAI,EAAE;4BACJ,IAAI,EAAE,WAAW;4BACjB,SAAS,EAAE,qBAAqB;yBACjC;qBACF;iBACF;aACF;YACD,QAAQ,EAAE;gBACR,cAAc,EAAE,UAAU;gBAC1B,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;SACF;KACF;CACF,CAAC;AAEF,AAAO,MAAM,+BAA+B,GAA+B;IACzE,IAAI,EAAE;QACJ,IAAI,EAAE,WAAW;QACjB,SAAS,EAAE,iCAAiC;QAC5C,eAAe,EAAE;YACf,QAAQ,EAAE;gBACR,cAAc,EAAE,UAAU;gBAC1B,IAAI,EAAE;oBACJ,IAAI,EAAE,SAAS;iBAChB;aACF;SACF;KACF;CACF,CAAC;AAEF,AAAO,MAAM,iCAAiC,GAA+B;IAC3E,IAAI,EAAE;QACJ,IAAI,EAAE,WAAW;QACjB,SAAS,EAAE,mCAAmC;QAC9C,eAAe,EAAE;YACf,wBAAwB,EAAE;gBACxB,cAAc,EAAE,0BAA0B;gBAC1C,QAAQ,EAAE,IAAI;gBACd,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;YACD,uBAAuB,EAAE;gBACvB,cAAc,EAAE,yBAAyB;gBACzC,QAAQ,EAAE,IAAI;gBACd,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;SACF;KACF;CACF,CAAC;AAEF,AAAO,MAAM,iCAAiC,GAA+B;IAC3E,IAAI,EAAE;QACJ,IAAI,EAAE,WAAW;QACjB,SAAS,EAAE,mCAAmC;QAC9C,eAAe,EAAE;YACf,MAAM,EAAE;gBACN,cAAc,EAAE,QAAQ;gBACxB,QAAQ,EAAE,IAAI;gBACd,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;YACD,oBAAoB,EAAE;gBACpB,cAAc,EAAE,sBAAsB;gBACtC,QAAQ,EAAE,IAAI;gBACd,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;YACD,aAAa,EAAE;gBACb,cAAc,EAAE,eAAe;gBAC/B,QAAQ,EAAE,IAAI;gBACd,IAAI,EAAE;oBACJ,IAAI,EAAE,SAAS;iBAChB;aACF;YACD,6BAA6B,EAAE;gBAC7B,cAAc,EAAE,+BAA+B;gBAC/C,QAAQ,EAAE,IAAI;gBACd,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;YACD,eAAe,EAAE;gBACf,cAAc,EAAE,iBAAiB;gBACjC,QAAQ,EAAE,IAAI;gBACd,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;YACD,aAAa,EAAE;gBACb,cAAc,EAAE,eAAe;gBAC/B,QAAQ,EAAE,IAAI;gBACd,IAAI,EAAE;oBACJ,IAAI,EAAE,UAAU;iBACjB;aACF;YACD,gBAAgB,EAAE;gBAChB,cAAc,EAAE,kBAAkB;gBAClC,QAAQ,EAAE,IAAI;gBACd,IAAI,EAAE;oBACJ,IAAI,EAAE,UAAU;oBAChB,OAAO,EAAE;wBACP,IAAI,EAAE;4BACJ,IAAI,EAAE,WAAW;4BACjB,SAAS,EAAE,uCAAuC;yBACnD;qBACF;iBACF;aACF;YACD,KAAK,EAAE;gBACL,cAAc,EAAE,OAAO;gBACvB,IAAI,EAAE;oBACJ,IAAI,EAAE,WAAW;oBACjB,SAAS,EAAE,UAAU;iBACtB;aACF;SACF;KACF;CACF,CAAC;AAEF,AAAO,MAAM,qCAAqC,GAA+B;IAC/E,IAAI,EAAE;QACJ,IAAI,EAAE,WAAW;QACjB,SAAS,EAAE,uCAAuC;QAClD,eAAe,EAAE;YACf,OAAO,EAAE;gBACP,cAAc,EAAE,SAAS;gBACzB,QAAQ,EAAE,IAAI;gBACd,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;YACD,IAAI,EAAE;gBACJ,cAAc,EAAE,MAAM;gBACtB,QAAQ,EAAE,IAAI;gBACd,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;YACD,OAAO,EAAE;gBACP,cAAc,EAAE,SAAS;gBACzB,QAAQ,EAAE,IAAI;gBACd,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;YACD,IAAI,EAAE;gBACJ,cAAc,EAAE,MAAM;gBACtB,QAAQ,EAAE,IAAI;gBACd,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;YACD,eAAe,EAAE;gBACf,cAAc,EAAE,iBAAiB;gBACjC,QAAQ,EAAE,IAAI;gBACd,IAAI,EAAE;oBACJ,IAAI,EAAE,UAAU;oBAChB,OAAO,EAAE;wBACP,IAAI,EAAE;4BACJ,IAAI,EAAE,QAAQ;yBACf;qBACF;iBACF;aACF;YACD,cAAc,EAAE;gBACd,cAAc,EAAE,gBAAgB;gBAChC,QAAQ,EAAE,IAAI;gBACd,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;YACD,UAAU,EAAE;gBACV,cAAc,EAAE,YAAY;gBAC5B,QAAQ,EAAE,IAAI;gBACd,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;YACD,aAAa,EAAE;gBACb,cAAc,EAAE,eAAe;gBAC/B,QAAQ,EAAE,IAAI;gBACd,IAAI,EAAE;oBACJ,IAAI,EAAE,UAAU;iBACjB;aACF;YACD,oBAAoB,EAAE;gBACpB,cAAc,EAAE,sBAAsB;gBACtC,QAAQ,EAAE,IAAI;gBACd,IAAI,EAAE;oBACJ,IAAI,EAAE,UAAU;iBACjB;aACF;YACD,eAAe,EAAE;gBACf,cAAc,EAAE,iBAAiB;gBACjC,QAAQ,EAAE,IAAI;gBACd,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;SACF;KACF;CACF,CAAC;AAEF,AAAO,MAAM,sCAAsC,GAA+B;IAChF,IAAI,EAAE;QACJ,IAAI,EAAE,WAAW;QACjB,SAAS,EAAE,wCAAwC;QACnD,eAAe,EAAE;YACf,eAAe,EAAE;gBACf,cAAc,EAAE,iBAAiB;gBACjC,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;YACD,aAAa,EAAE;gBACb,cAAc,EAAE,eAAe;gBAC/B,QAAQ,EAAE,IAAI;gBACd,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;YACD,iBAAiB,EAAE;gBACjB,cAAc,EAAE,mBAAmB;gBACnC,IAAI,EAAE;oBACJ,IAAI,EAAE,WAAW;oBACjB,SAAS,EAAE,mBAAmB;iBAC/B;aACF;YACD,eAAe,EAAE;gBACf,cAAc,EAAE,iBAAiB;gBACjC,IAAI,EAAE;oBACJ,IAAI,EAAE,WAAW;oBACjB,SAAS,EAAE,iBAAiB;iBAC7B;aACF;SACF;KACF;CACF,CAAC;AAEF,AAAO,MAAM,iBAAiB,GAA+B;IAC3D,IAAI,EAAE;QACJ,IAAI,EAAE,WAAW;QACjB,SAAS,EAAE,mBAAmB;QAC9B,eAAe,EAAE;YACf,wBAAwB,EAAE;gBACxB,cAAc,EAAE,0BAA0B;gBAC1C,IAAI,EAAE;oBACJ,IAAI,EAAE,UAAU;oBAChB,OAAO,EAAE;wBACP,IAAI,EAAE;4BACJ,IAAI,EAAE,QAAQ;yBACf;qBACF;iBACF;aACF;YACD,kBAAkB,EAAE;gBAClB,cAAc,EAAE,oBAAoB;gBACpC,IAAI,EAAE;oBACJ,IAAI,EAAE,UAAU;oBAChB,OAAO,EAAE;wBACP,IAAI,EAAE;4BACJ,IAAI,EAAE,QAAQ;yBACf;qBACF;iBACF;aACF;YACD,kBAAkB,EAAE;gBAClB,cAAc,EAAE,oBAAoB;gBACpC,IAAI,EAAE;oBACJ,IAAI,EAAE,UAAU;oBAChB,OAAO,EAAE;wBACP,IAAI,EAAE;4BACJ,IAAI,EAAE,QAAQ;yBACf;qBACF;iBACF;aACF;YACD,yBAAyB,EAAE;gBACzB,cAAc,EAAE,2BAA2B;gBAC3C,IAAI,EAAE;oBACJ,IAAI,EAAE,SAAS;iBAChB;aACF;YACD,mBAAmB,EAAE;gBACnB,cAAc,EAAE,qBAAqB;gBACrC,IAAI,EAAE;oBACJ,IAAI,EAAE,UAAU;iBACjB;aACF;SACF;KACF;CACF,CAAC;AAEF,AAAO,MAAM,eAAe,GAA+B;IACzD,IAAI,EAAE;QACJ,IAAI,EAAE,WAAW;QACjB,SAAS,EAAE,iBAAiB;QAC5B,eAAe,EAAE;YACf,wBAAwB,EAAE;gBACxB,cAAc,EAAE,0BAA0B;gBAC1C,IAAI,EAAE;oBACJ,IAAI,EAAE,UAAU;oBAChB,OAAO,EAAE;wBACP,IAAI,EAAE;4BACJ,IAAI,EAAE,QAAQ;yBACf;qBACF;iBACF;aACF;YACD,yBAAyB,EAAE;gBACzB,cAAc,EAAE,2BAA2B;gBAC3C,IAAI,EAAE;oBACJ,IAAI,EAAE,UAAU;oBAChB,OAAO,EAAE;wBACP,IAAI,EAAE;4BACJ,IAAI,EAAE,QAAQ;yBACf;qBACF;iBACF;aACF;YACD,yBAAyB,EAAE;gBACzB,cAAc,EAAE,2BAA2B;gBAC3C,IAAI,EAAE;oBACJ,IAAI,EAAE,UAAU;oBAChB,OAAO,EAAE;wBACP,IAAI,EAAE;4BACJ,IAAI,EAAE,QAAQ;yBACf;qBACF;iBACF;aACF;YACD,gBAAgB,EAAE;gBAChB,cAAc,EAAE,kBAAkB;gBAClC,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;SACF;KACF;CACF,CAAC;AAEF,AAAO,MAAM,kCAAkC,GAA+B;IAC5E,IAAI,EAAE;QACJ,IAAI,EAAE,WAAW;QACjB,SAAS,EAAE,oCAAoC;QAC/C,eAAe,EAAE;YACf,MAAM,EAAE;gBACN,cAAc,EAAE,QAAQ;gBACxB,QAAQ,EAAE,IAAI;gBACd,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;YACD,sBAAsB,EAAE;gBACtB,cAAc,EAAE,wBAAwB;gBACxC,QAAQ,EAAE,IAAI;gBACd,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;YACD,YAAY,EAAE;gBACZ,cAAc,EAAE,cAAc;gBAC9B,QAAQ,EAAE,IAAI;gBACd,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;YACD,yBAAyB,EAAE;gBACzB,cAAc,EAAE,2BAA2B;gBAC3C,QAAQ,EAAE,IAAI;gBACd,IAAI,EAAE;oBACJ,IAAI,EAAE,SAAS;iBAChB;aACF;YACD,kBAAkB,EAAE;gBAClB,cAAc,EAAE,oBAAoB;gBACpC,QAAQ,EAAE,IAAI;gBACd,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;YACD,qBAAqB,EAAE;gBACrB,cAAc,EAAE,uBAAuB;gBACvC,QAAQ,EAAE,IAAI;gBACd,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;YACD,iBAAiB,EAAE;gBACjB,cAAc,EAAE,mBAAmB;gBACnC,QAAQ,EAAE,IAAI;gBACd,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;YACD,mBAAmB,EAAE;gBACnB,cAAc,EAAE,qBAAqB;gBACrC,QAAQ,EAAE,IAAI;gBACd,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;YACD,gBAAgB,EAAE;gBAChB,cAAc,EAAE,kBAAkB;gBAClC,QAAQ,EAAE,IAAI;gBACd,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;YACD,OAAO,EAAE;gBACP,cAAc,EAAE,SAAS;gBACzB,QAAQ,EAAE,IAAI;gBACd,IAAI,EAAE;oBACJ,IAAI,EAAE,UAAU;oBAChB,OAAO,EAAE;wBACP,IAAI,EAAE;4BACJ,IAAI,EAAE,WAAW;4BACjB,SAAS,EAAE,yBAAyB;yBACrC;qBACF;iBACF;aACF;YACD,aAAa,EAAE;gBACb,cAAc,EAAE,eAAe;gBAC/B,QAAQ,EAAE,IAAI;gBACd,IAAI,EAAE;oBACJ,IAAI,EAAE,UAAU;iBACjB;aACF;YACD,KAAK,EAAE;gBACL,cAAc,EAAE,OAAO;gBACvB,IAAI,EAAE;oBACJ,IAAI,EAAE,WAAW;oBACjB,SAAS,EAAE,UAAU;iBACtB;aACF;SACF;KACF;CACF,CAAC;AAEF,AAAO,MAAM,uBAAuB,GAA+B;IACjE,IAAI,EAAE;QACJ,IAAI,EAAE,WAAW;QACjB,SAAS,EAAE,yBAAyB;QACpC,eAAe,EAAE;YACf,OAAO,EAAE;gBACP,cAAc,EAAE,SAAS;gBACzB,QAAQ,EAAE,IAAI;gBACd,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;YACD,IAAI,EAAE;gBACJ,cAAc,EAAE,MAAM;gBACtB,QAAQ,EAAE,IAAI;gBACd,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;YACD,OAAO,EAAE;gBACP,cAAc,EAAE,SAAS;gBACzB,QAAQ,EAAE,IAAI;gBACd,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;YACD,IAAI,EAAE;gBACJ,cAAc,EAAE,MAAM;gBACtB,QAAQ,EAAE,IAAI;gBACd,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;YACD,eAAe,EAAE;gBACf,cAAc,EAAE,iBAAiB;gBACjC,QAAQ,EAAE,IAAI;gBACd,IAAI,EAAE;oBACJ,IAAI,EAAE,UAAU;oBAChB,OAAO,EAAE;wBACP,IAAI,EAAE;4BACJ,IAAI,EAAE,QAAQ;yBACf;qBACF;iBACF;aACF;YACD,iBAAiB,EAAE;gBACjB,cAAc,EAAE,mBAAmB;gBACnC,QAAQ,EAAE,IAAI;gBACd,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;SACF;KACF;CACF,CAAC;AAEF,AAAO,MAAM,qCAAqC,GAA+B;IAC/E,IAAI,EAAE;QACJ,IAAI,EAAE,WAAW;QACjB,SAAS,EAAE,uCAAuC;QAClD,eAAe,EAAE;YACf,SAAS,EAAE;gBACT,cAAc,EAAE,WAAW;gBAC3B,IAAI,EAAE;oBACJ,IAAI,EAAE,WAAW;oBACjB,SAAS,EAAE,uCAAuC;iBACnD;aACF;YACD,cAAc,EAAE;gBACd,cAAc,EAAE,gBAAgB;gBAChC,IAAI,EAAE;oBACJ,IAAI,EAAE,WAAW;oBACjB,SAAS,EAAE,4CAA4C;iBACxD;aACF;YACD,cAAc,EAAE;gBACd,cAAc,EAAE,gBAAgB;gBAChC,IAAI,EAAE;oBACJ,IAAI,EAAE,WAAW;oBACjB,SAAS,EAAE,4CAA4C;iBACxD;aACF;YACD,eAAe,EAAE;gBACf,cAAc,EAAE,iBAAiB;gBACjC,IAAI,EAAE;oBACJ,IAAI,EAAE,WAAW;oBACjB,SAAS,EAAE,iBAAiB;iBAC7B;aACF;YACD,kBAAkB,EAAE;gBAClB,cAAc,EAAE,oBAAoB;gBACpC,IAAI,EAAE;oBACJ,IAAI,EAAE,WAAW;oBACjB,SAAS,EAAE,oBAAoB;iBAChC;aACF;YACD,gBAAgB,EAAE;gBAChB,cAAc,EAAE,kBAAkB;gBAClC,IAAI,EAAE;oBACJ,IAAI,EAAE,WAAW;oBACjB,SAAS,EAAE,wCAAwC;iBACpD;aACF;YACD,WAAW,EAAE;gBACX,cAAc,EAAE,aAAa;gBAC7B,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;YACD,cAAc,EAAE;gBACd,cAAc,EAAE,gBAAgB;gBAChC,IAAI,EAAE;oBACJ,IAAI,EAAE,WAAW;oBACjB,SAAS,EAAE,gBAAgB;iBAC5B;aACF;YACD,sBAAsB,EAAE;gBACtB,cAAc,EAAE,wBAAwB;gBACxC,IAAI,EAAE;oBACJ,IAAI,EAAE,WAAW;oBACjB,SAAS,EAAE,wBAAwB;iBACpC;aACF;YACD,QAAQ,EAAE;gBACR,cAAc,EAAE,UAAU;gBAC1B,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;SACF;KACF;CACF,CAAC;AAEF,AAAO,MAAM,qCAAqC,GAA+B;IAC/E,IAAI,EAAE;QACJ,IAAI,EAAE,WAAW;QACjB,SAAS,EAAE,uCAAuC;QAClD,eAAe,EAAE;YACf,UAAU,EAAE;gBACV,cAAc,EAAE,YAAY;gBAC5B,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;YACD,oBAAoB,EAAE;gBACpB,cAAc,EAAE,sBAAsB;gBACtC,IAAI,EAAE;oBACJ,IAAI,EAAE,WAAW;oBACjB,SAAS,EAAE,sBAAsB;iBAClC;aACF;YACD,kBAAkB,EAAE;gBAClB,cAAc,EAAE,oBAAoB;gBACpC,IAAI,EAAE;oBACJ,IAAI,EAAE,WAAW;oBACjB,SAAS,EAAE,oBAAoB;iBAChC;aACF;YACD,OAAO,EAAE;gBACP,cAAc,EAAE,SAAS;gBACzB,IAAI,EAAE;oBACJ,IAAI,EAAE,UAAU;oBAChB,OAAO,EAAE;wBACP,IAAI,EAAE;4BACJ,IAAI,EAAE,WAAW;4BACjB,SAAS,EAAE,kBAAkB;yBAC9B;qBACF;iBACF;aACF;SACF;KACF;CACF,CAAC;AAEF,AAAO,MAAM,0CAA0C,GAA+B;IACpF,IAAI,EAAE;QACJ,IAAI,EAAE,WAAW;QACjB,SAAS,EAAE,4CAA4C;QACvD,eAAe,EAAE;YACf,cAAc,EAAE;gBACd,cAAc,EAAE,gBAAgB;gBAChC,IAAI,EAAE;oBACJ,IAAI,EAAE,WAAW;oBACjB,SAAS,EAAE,gBAAgB;iBAC5B;aACF;YACD,MAAM,EAAE;gBACN,cAAc,EAAE,QAAQ;gBACxB,IAAI,EAAE;oBACJ,IAAI,EAAE,WAAW;oBACjB,SAAS,EAAE,oCAAoC;iBAChD;aACF;YACD,SAAS,EAAE;gBACT,cAAc,EAAE,WAAW;gBAC3B,IAAI,EAAE;oBACJ,IAAI,EAAE,UAAU;oBAChB,OAAO,EAAE;wBACP,IAAI,EAAE;4BACJ,IAAI,EAAE,WAAW;4BACjB,SAAS,EAAE,gCAAgC;yBAC5C;qBACF;iBACF;aACF;SACF;KACF;CACF,CAAC;AAEF,AAAO,MAAM,kCAAkC,GAA+B;IAC5E,IAAI,EAAE;QACJ,IAAI,EAAE,WAAW;QACjB,SAAS,EAAE,oCAAoC;QAC/C,eAAe,EAAE;YACf,OAAO,EAAE;gBACP,cAAc,EAAE,SAAS;gBACzB,IAAI,EAAE;oBACJ,IAAI,EAAE,MAAM;oBACZ,aAAa,EAAE,CAAC,MAAM,EAAE,UAAU,EAAE,WAAW,CAAC;iBACjD;aACF;YACD,uBAAuB,EAAE;gBACvB,cAAc,EAAE,yBAAyB;gBACzC,IAAI,EAAE;oBACJ,IAAI,EAAE,SAAS;iBAChB;aACF;YACD,UAAU,EAAE;gBACV,cAAc,EAAE,YAAY;gBAC5B,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;YACD,KAAK,EAAE;gBACL,cAAc,EAAE,OAAO;gBACvB,IAAI,EAAE;oBACJ,IAAI,EAAE,WAAW;oBACjB,SAAS,EAAE,iBAAiB;iBAC7B;aACF;YACD,aAAa,EAAE;gBACb,cAAc,EAAE,eAAe;gBAC/B,IAAI,EAAE;oBACJ,IAAI,EAAE,UAAU;oBAChB,OAAO,EAAE;wBACP,IAAI,EAAE;4BACJ,IAAI,EAAE,QAAQ;yBACf;qBACF;iBACF;aACF;YACD,WAAW,EAAE;gBACX,cAAc,EAAE,aAAa;gBAC7B,IAAI,EAAE;oBACJ,IAAI,EAAE,WAAW;oBACjB,SAAS,EAAE,6CAA6C;iBACzD;aACF;SACF;KACF;CACF,CAAC;AAEF,AAAO,MAAM,0CAA0C,GAA+B;IACpF,IAAI,EAAE;QACJ,IAAI,EAAE,WAAW;QACjB,SAAS,EAAE,4CAA4C;QACvD,eAAe,EAAE;YACf,WAAW,EAAE;gBACX,cAAc,EAAE,aAAa;gBAC7B,IAAI,EAAE;oBACJ,IAAI,EAAE,WAAW;oBACjB,SAAS,EAAE,oBAAoB;iBAChC;aACF;YACD,8BAA8B,EAAE;gBAC9B,cAAc,EAAE,gCAAgC;gBAChD,IAAI,EAAE;oBACJ,IAAI,EAAE,UAAU;oBAChB,OAAO,EAAE;wBACP,IAAI,EAAE;4BACJ,IAAI,EAAE,WAAW;4BACjB,SAAS,EAAE,kDAAkD;yBAC9D;qBACF;iBACF;aACF;YACD,iBAAiB,EAAE;gBACjB,cAAc,EAAE,mBAAmB;gBACnC,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;SACF;KACF;CACF,CAAC;AAEF,AAAO,MAAM,wDAAwD,GAA+B;IAClG,IAAI,EAAE;QACJ,IAAI,EAAE,WAAW;QACjB,SAAS,EAAE,0DAA0D;QACrE,eAAe,EAAE;YACf,IAAI,EAAE;gBACJ,cAAc,EAAE,MAAM;gBACtB,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;YACD,oBAAoB,EAAE;gBACpB,cAAc,EAAE,iCAAiC;gBACjD,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;YACD,WAAW,EAAE;gBACX,cAAc,EAAE,wBAAwB;gBACxC,IAAI,EAAE;oBACJ,IAAI,EAAE,WAAW;oBACjB,SAAS,EACP,+DAA+D;iBAClE;aACF;YACD,cAAc,EAAE;gBACd,cAAc,EAAE,2BAA2B;gBAC3C,IAAI,EAAE;oBACJ,IAAI,EAAE,WAAW;oBACjB,SAAS,EAAE,aAAa;iBACzB;aACF;YACD,YAAY,EAAE;gBACZ,cAAc,EAAE,yBAAyB;gBACzC,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;SACF;KACF;CACF,CAAC;AAEF,AAAO,MAAM,mCAAmC,GAA+B;IAC7E,IAAI,EAAE;QACJ,IAAI,EAAE,WAAW;QACjB,SAAS,EAAE,qCAAqC;QAChD,eAAe,EAAE;YACf,WAAW,EAAE;gBACX,cAAc,EAAE,aAAa;gBAC7B,IAAI,EAAE;oBACJ,IAAI,EAAE,UAAU;oBAChB,OAAO,EAAE;wBACP,IAAI,EAAE;4BACJ,IAAI,EAAE,QAAQ;yBACf;qBACF;iBACF;aACF;SACF;KACF;CACF,CAAC;AAEF,AAAO,MAAM,2CAA2C,GAA+B;IACrF,IAAI,EAAE;QACJ,IAAI,EAAE,WAAW;QACjB,SAAS,EAAE,6CAA6C;QACxD,eAAe,EAAE;YACf,WAAW,EAAE;gBACX,cAAc,EAAE,aAAa;gBAC7B,QAAQ,EAAE,IAAI;gBACd,IAAI,EAAE;oBACJ,IAAI,EAAE,UAAU;oBAChB,OAAO,EAAE;wBACP,IAAI,EAAE;4BACJ,IAAI,EAAE,QAAQ;yBACf;qBACF;iBACF;aACF;SACF;KACF;CACF,CAAC;AAEF,AAAO,MAAM,kCAAkC,GAA+B;IAC5E,IAAI,EAAE;QACJ,IAAI,EAAE,WAAW;QACjB,SAAS,EAAE,oCAAoC;QAC/C,eAAe,EAAE;YACf,cAAc,EAAE;gBACd,cAAc,EAAE,gBAAgB;gBAChC,IAAI,EAAE;oBACJ,IAAI,EAAE,WAAW;oBACjB,SAAS,EAAE,mDAAmD;iBAC/D;aACF;YACD,UAAU,EAAE;gBACV,cAAc,EAAE,YAAY;gBAC5B,QAAQ,EAAE,IAAI;gBACd,IAAI,EAAE;oBACJ,IAAI,EAAE,UAAU;oBAChB,OAAO,EAAE;wBACP,IAAI,EAAE;4BACJ,IAAI,EAAE,WAAW;4BACjB,SAAS,EAAE,2CAA2C;yBACvD;qBACF;iBACF;aACF;YACD,QAAQ,EAAE;gBACR,cAAc,EAAE,UAAU;gBAC1B,IAAI,EAAE;oBACJ,IAAI,EAAE,UAAU;oBAChB,OAAO,EAAE;wBACP,IAAI,EAAE;4BACJ,IAAI,EAAE,WAAW;4BACjB,SAAS,EAAE,oBAAoB;yBAChC;qBACF;iBACF;aACF;YACD,qBAAqB,EAAE;gBACrB,cAAc,EAAE,uBAAuB;gBACvC,QAAQ,EAAE,IAAI;gBACd,IAAI,EAAE;oBACJ,IAAI,EAAE,UAAU;oBAChB,OAAO,EAAE;wBACP,IAAI,EAAE;4BACJ,IAAI,EAAE,WAAW;4BACjB,SAAS,EAAE,6BAA6B;yBACzC;qBACF;iBACF;aACF;SACF;KACF;CACF,CAAC;AAEF,AAAO,MAAM,iDAAiD,GAA+B;IAC3F,IAAI,EAAE;QACJ,IAAI,EAAE,WAAW;QACjB,SAAS,EAAE,mDAAmD;QAC9D,eAAe,EAAE;YACf,eAAe,EAAE;gBACf,cAAc,EAAE,iBAAiB;gBACjC,QAAQ,EAAE,IAAI;gBACd,IAAI,EAAE;oBACJ,IAAI,EAAE,UAAU;oBAChB,OAAO,EAAE;wBACP,IAAI,EAAE;4BACJ,IAAI,EAAE,WAAW;4BACjB,SAAS,EAAE,+BAA+B;yBAC3C;qBACF;iBACF;aACF;SACF;KACF;CACF,CAAC;AAEF,AAAO,MAAM,6BAA6B,GAA+B;IACvE,IAAI,EAAE;QACJ,IAAI,EAAE,WAAW;QACjB,SAAS,EAAE,+BAA+B;QAC1C,eAAe,EAAE;YACf,IAAI,EAAE;gBACJ,cAAc,EAAE,MAAM;gBACtB,QAAQ,EAAE,IAAI;gBACd,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;YACD,KAAK,EAAE;gBACL,cAAc,EAAE,OAAO;gBACvB,QAAQ,EAAE,IAAI;gBACd,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;SACF;KACF;CACF,CAAC;AAEF,AAAO,MAAM,yCAAyC,GAA+B;IACnF,IAAI,EAAE;QACJ,IAAI,EAAE,WAAW;QACjB,SAAS,EAAE,2CAA2C;QACtD,eAAe,EAAE;YACf,IAAI,EAAE;gBACJ,cAAc,EAAE,MAAM;gBACtB,QAAQ,EAAE,IAAI;gBACd,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;YACD,eAAe,EAAE;gBACf,cAAc,EAAE,iBAAiB;gBACjC,QAAQ,EAAE,IAAI;gBACd,IAAI,EAAE;oBACJ,IAAI,EAAE,UAAU;oBAChB,OAAO,EAAE;wBACP,IAAI,EAAE;4BACJ,IAAI,EAAE,WAAW;4BACjB,SAAS,EAAE,+BAA+B;yBAC3C;qBACF;iBACF;aACF;SACF;KACF;CACF,CAAC;AAEF,AAAO,MAAM,2BAA2B,GAA+B;IACrE,IAAI,EAAE;QACJ,IAAI,EAAE,WAAW;QACjB,SAAS,EAAE,6BAA6B;QACxC,eAAe,EAAE;YACf,WAAW,EAAE;gBACX,cAAc,EAAE,aAAa;gBAC7B,QAAQ,EAAE,IAAI;gBACd,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;YACD,YAAY,EAAE;gBACZ,cAAc,EAAE,cAAc;gBAC9B,QAAQ,EAAE,IAAI;gBACd,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;SACF;KACF;CACF,CAAC;AAEF,AAAO,MAAM,yCAAyC,GAA+B;IACnF,IAAI,EAAE;QACJ,IAAI,EAAE,WAAW;QACjB,SAAS,EAAE,2CAA2C;QACtD,eAAe,EAAE;YACf,KAAK,EAAE;gBACL,cAAc,EAAE,OAAO;gBACvB,QAAQ,EAAE,IAAI;gBACd,IAAI,EAAE;oBACJ,IAAI,EAAE,UAAU;oBAChB,OAAO,EAAE;wBACP,IAAI,EAAE;4BACJ,IAAI,EAAE,WAAW;4BACjB,SAAS,EAAE,iCAAiC;yBAC7C;qBACF;iBACF;aACF;YACD,QAAQ,EAAE;gBACR,cAAc,EAAE,UAAU;gBAC1B,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;SACF;KACF;CACF,CAAC;AAEF,AAAO,MAAM,wCAAwC,GAA+B;IAClF,IAAI,EAAE;QACJ,IAAI,EAAE,WAAW;QACjB,SAAS,EAAE,0CAA0C;QACrD,eAAe,EAAE;YACf,KAAK,EAAE;gBACL,cAAc,EAAE,OAAO;gBACvB,QAAQ,EAAE,IAAI;gBACd,IAAI,EAAE;oBACJ,IAAI,EAAE,UAAU;oBAChB,OAAO,EAAE;wBACP,IAAI,EAAE;4BACJ,IAAI,EAAE,WAAW;4BACjB,SAAS,EAAE,wBAAwB;yBACpC;qBACF;iBACF;aACF;YACD,QAAQ,EAAE;gBACR,cAAc,EAAE,UAAU;gBAC1B,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;SACF;KACF;CACF,CAAC;AAEF,AAAO,MAAM,oCAAoC,GAA+B;IAC9E,IAAI,EAAE;QACJ,IAAI,EAAE,WAAW;QACjB,SAAS,EAAE,sCAAsC;QACjD,eAAe,EAAE;YACf,KAAK,EAAE;gBACL,cAAc,EAAE,OAAO;gBACvB,QAAQ,EAAE,IAAI;gBACd,IAAI,EAAE;oBACJ,IAAI,EAAE,UAAU;oBAChB,OAAO,EAAE;wBACP,IAAI,EAAE;4BACJ,IAAI,EAAE,WAAW;4BACjB,SAAS,EAAE,2BAA2B;yBACvC;qBACF;iBACF;aACF;YACD,QAAQ,EAAE;gBACR,cAAc,EAAE,UAAU;gBAC1B,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;SACF;KACF;CACF,CAAC;AAEF,AAAO,MAAM,yBAAyB,GAA+B;IACnE,IAAI,EAAE;QACJ,IAAI,EAAE,WAAW;QACjB,SAAS,EAAE,2BAA2B;QACtC,eAAe,EAAE;YACf,YAAY,EAAE;gBACZ,cAAc,EAAE,cAAc;gBAC9B,QAAQ,EAAE,IAAI;gBACd,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;YACD,GAAG,EAAE;gBACH,cAAc,EAAE,KAAK;gBACrB,IAAI,EAAE;oBACJ,IAAI,EAAE,WAAW;oBACjB,SAAS,EAAE,KAAK;iBACjB;aACF;YACD,QAAQ,EAAE;gBACR,cAAc,EAAE,UAAU;gBAC1B,IAAI,EAAE;oBACJ,IAAI,EAAE,WAAW;oBACjB,SAAS,EAAE,mCAAmC;iBAC/C;aACF;SACF;KACF;CACF,CAAC;AAEF,AAAO,MAAM,iCAAiC,GAA+B;IAC3E,IAAI,EAAE;QACJ,IAAI,EAAE,WAAW;QACjB,SAAS,EAAE,mCAAmC;QAC9C,eAAe,EAAE;YACf,OAAO,EAAE;gBACP,cAAc,EAAE,SAAS;gBACzB,QAAQ,EAAE,IAAI;gBACd,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;YACD,OAAO,EAAE;gBACP,cAAc,EAAE,SAAS;gBACzB,QAAQ,EAAE,IAAI;gBACd,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;YACD,eAAe,EAAE;gBACf,cAAc,EAAE,iBAAiB;gBACjC,QAAQ,EAAE,IAAI;gBACd,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;YACD,SAAS,EAAE;gBACT,cAAc,EAAE,WAAW;gBAC3B,QAAQ,EAAE,IAAI;gBACd,IAAI,EAAE;oBACJ,IAAI,EAAE,MAAM;oBACZ,aAAa,EAAE,CAAC,WAAW,EAAE,MAAM,CAAC;iBACrC;aACF;SACF;KACF;CACF,CAAC;AAEF,AAAO,MAAM,0CAA0C,GAA+B;IACpF,IAAI,EAAE;QACJ,IAAI,EAAE,WAAW;QACjB,SAAS,EAAE,4CAA4C;QACvD,eAAe,EAAE;YACf,KAAK,EAAE;gBACL,cAAc,EAAE,OAAO;gBACvB,QAAQ,EAAE,IAAI;gBACd,IAAI,EAAE;oBACJ,IAAI,EAAE,UAAU;oBAChB,OAAO,EAAE;wBACP,IAAI,EAAE;4BACJ,IAAI,EAAE,WAAW;4BACjB,SAAS,EAAE,sCAAsC;yBAClD;qBACF;iBACF;aACF;YACD,QAAQ,EAAE;gBACR,cAAc,EAAE,UAAU;gBAC1B,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;SACF;KACF;CACF,CAAC;AAEF,AAAO,MAAM,oCAAoC,GAA+B;IAC9E,IAAI,EAAE;QACJ,IAAI,EAAE,WAAW;QACjB,SAAS,EAAE,sCAAsC;QACjD,eAAe,EAAE;YACf,UAAU,EAAE;gBACV,cAAc,EAAE,YAAY;gBAC5B,IAAI,EAAE;oBACJ,IAAI,EAAE,WAAW;oBACjB,SAAS,EAAE,gDAAgD;iBAC5D;aACF;YACD,IAAI,EAAE;gBACJ,cAAc,EAAE,MAAM;gBACtB,QAAQ,EAAE,IAAI;gBACd,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;YACD,QAAQ,EAAE;gBACR,cAAc,EAAE,UAAU;gBAC1B,QAAQ,EAAE,IAAI;gBACd,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;SACF;KACF;CACF,CAAC;AAEF,AAAO,MAAM,8CAA8C,GAA+B;IACxF,IAAI,EAAE;QACJ,IAAI,EAAE,WAAW;QACjB,SAAS,EAAE,gDAAgD;QAC3D,eAAe,EAAE;YACf,aAAa,EAAE;gBACb,cAAc,EAAE,eAAe;gBAC/B,IAAI,EAAE;oBACJ,IAAI,EAAE,WAAW;oBACjB,SAAS,EAAE,+BAA+B;iBAC3C;aACF;YACD,QAAQ,EAAE;gBACR,cAAc,EAAE,UAAU;gBAC1B,IAAI,EAAE;oBACJ,IAAI,EAAE,WAAW;oBACjB,SAAS,EAAE,4BAA4B;iBACxC;aACF;YACD,KAAK,EAAE;gBACL,cAAc,EAAE,OAAO;gBACvB,IAAI,EAAE;oBACJ,IAAI,EAAE,WAAW;oBACjB,SAAS,EAAE,UAAU;iBACtB;aACF;YACD,SAAS,EAAE;gBACT,cAAc,EAAE,WAAW;gBAC3B,QAAQ,EAAE,IAAI;gBACd,IAAI,EAAE;oBACJ,IAAI,EAAE,MAAM;oBACZ,aAAa,EAAE,CAAC,SAAS,EAAE,MAAM,EAAE,UAAU,CAAC;iBAC/C;aACF;YACD,oBAAoB,EAAE;gBACpB,cAAc,EAAE,sBAAsB;gBACtC,IAAI,EAAE;oBACJ,IAAI,EAAE,WAAW;oBACjB,SAAS,EAAE,gBAAgB;iBAC5B;aACF;YACD,YAAY,EAAE;gBACZ,cAAc,EAAE,cAAc;gBAC9B,IAAI,EAAE;oBACJ,IAAI,EAAE,WAAW;oBACjB,SAAS,EAAE,oBAAoB;iBAChC;aACF;SACF;KACF;CACF,CAAC;AAEF,AAAO,MAAM,6BAA6B,GAA+B;IACvE,IAAI,EAAE;QACJ,IAAI,EAAE,WAAW;QACjB,SAAS,EAAE,+BAA+B;QAC1C,eAAe,EAAE;YACf,IAAI,EAAE;gBACJ,cAAc,EAAE,MAAM;gBACtB,QAAQ,EAAE,IAAI;gBACd,IAAI,EAAE;oBACJ,IAAI,EAAE,MAAM;oBACZ,aAAa,EAAE,CAAC,gBAAgB,EAAE,WAAW,EAAE,WAAW,EAAE,SAAS,CAAC;iBACvE;aACF;YACD,SAAS,EAAE;gBACT,cAAc,EAAE,WAAW;gBAC3B,QAAQ,EAAE,IAAI;gBACd,IAAI,EAAE;oBACJ,IAAI,EAAE,UAAU;iBACjB;aACF;YACD,OAAO,EAAE;gBACP,cAAc,EAAE,SAAS;gBACzB,QAAQ,EAAE,IAAI;gBACd,IAAI,EAAE;oBACJ,IAAI,EAAE,UAAU;iBACjB;aACF;SACF;KACF;CACF,CAAC;AAEF,AAAO,MAAM,0BAA0B,GAA+B;IACpE,IAAI,EAAE;QACJ,IAAI,EAAE,WAAW;QACjB,SAAS,EAAE,4BAA4B;QACvC,eAAe,EAAE;YACf,uBAAuB,EAAE;gBACvB,cAAc,EAAE,yBAAyB;gBACzC,QAAQ,EAAE,IAAI;gBACd,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;YACD,mBAAmB,EAAE;gBACnB,cAAc,EAAE,qBAAqB;gBACrC,QAAQ,EAAE,IAAI;gBACd,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;YACD,uBAAuB,EAAE;gBACvB,cAAc,EAAE,yBAAyB;gBACzC,QAAQ,EAAE,IAAI;gBACd,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;YACD,oBAAoB,EAAE;gBACpB,cAAc,EAAE,sBAAsB;gBACtC,QAAQ,EAAE,IAAI;gBACd,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;SACF;KACF;CACF,CAAC;AAEF,AAAO,MAAM,kBAAkB,GAA+B;IAC5D,IAAI,EAAE;QACJ,IAAI,EAAE,WAAW;QACjB,SAAS,EAAE,oBAAoB;QAC/B,eAAe,EAAE;YACf,mCAAmC,EAAE;gBACnC,cAAc,EAAE,qCAAqC;gBACrD,QAAQ,EAAE,IAAI;gBACd,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;YACD,6BAA6B,EAAE;gBAC7B,cAAc,EAAE,+BAA+B;gBAC/C,QAAQ,EAAE,IAAI;gBACd,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;YACD,aAAa,EAAE;gBACb,cAAc,EAAE,eAAe;gBAC/B,IAAI,EAAE;oBACJ,IAAI,EAAE,WAAW;oBACjB,SAAS,EAAE,UAAU;iBACtB;aACF;SACF;KACF;CACF,CAAC;AAEF,AAAO,MAAM,2BAA2B,GAA+B;IACrE,IAAI,EAAE;QACJ,IAAI,EAAE,WAAW;QACjB,SAAS,EAAE,6BAA6B;QACxC,eAAe,EAAE;YACf,IAAI,EAAE;gBACJ,cAAc,EAAE,MAAM;gBACtB,QAAQ,EAAE,IAAI;gBACd,IAAI,EAAE;oBACJ,IAAI,EAAE,MAAM;oBACZ,aAAa,EAAE,CAAC,gBAAgB,EAAE,WAAW,EAAE,WAAW,EAAE,SAAS,CAAC;iBACvE;aACF;YACD,SAAS,EAAE;gBACT,cAAc,EAAE,WAAW;gBAC3B,QAAQ,EAAE,IAAI;gBACd,IAAI,EAAE;oBACJ,IAAI,EAAE,UAAU;iBACjB;aACF;YACD,UAAU,EAAE;gBACV,cAAc,EAAE,YAAY;gBAC5B,QAAQ,EAAE,IAAI;gBACd,IAAI,EAAE;oBACJ,IAAI,EAAE,MAAM;oBACZ,aAAa,EAAE,CAAC,OAAO,EAAE,QAAQ,CAAC;iBACnC;aACF;YACD,cAAc,EAAE;gBACd,cAAc,EAAE,gBAAgB;gBAChC,QAAQ,EAAE,IAAI;gBACd,IAAI,EAAE;oBACJ,IAAI,EAAE,UAAU;iBACjB;aACF;SACF;KACF;CACF,CAAC;AAEF,AAAO,MAAM,oBAAoB,GAA+B;IAC9D,IAAI,EAAE;QACJ,IAAI,EAAE,WAAW;QACjB,SAAS,EAAE,sBAAsB;QACjC,eAAe,EAAE;YACf,aAAa,EAAE;gBACb,cAAc,EAAE,eAAe;gBAC/B,QAAQ,EAAE,IAAI;gBACd,IAAI,EAAE;oBACJ,IAAI,EAAE,SAAS;iBAChB;aACF;YACD,wBAAwB,EAAE;gBACxB,cAAc,EAAE,0BAA0B;gBAC1C,QAAQ,EAAE,IAAI;gBACd,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;SACF;KACF;CACF,CAAC;AAEF,AAAO,MAAM,4CAA4C,GAA+B;IACtF,IAAI,EAAE;QACJ,IAAI,EAAE,WAAW;QACjB,SAAS,EAAE,8CAA8C;QACzD,eAAe,EAAE;YACf,sBAAsB,EAAE;gBACtB,cAAc,EAAE,wBAAwB;gBACxC,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;SACF;KACF;CACF,CAAC;AAEF,AAAO,MAAM,8BAA8B,GAA+B;IACxE,IAAI,EAAE;QACJ,IAAI,EAAE,WAAW;QACjB,SAAS,EAAE,gCAAgC;QAC3C,eAAe,EAAE;YACf,WAAW,EAAE;gBACX,cAAc,EAAE,aAAa;gBAC7B,QAAQ,EAAE,IAAI;gBACd,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;YACD,MAAM,EAAE;gBACN,cAAc,EAAE,QAAQ;gBACxB,QAAQ,EAAE,IAAI;gBACd,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;SACF;KACF;CACF,CAAC;AAEF,AAAO,MAAM,4CAA4C,GAA+B;IACtF,IAAI,EAAE;QACJ,IAAI,EAAE,WAAW;QACjB,SAAS,EAAE,8CAA8C;QACzD,eAAe,EAAE;YACf,KAAK,EAAE;gBACL,cAAc,EAAE,OAAO;gBACvB,IAAI,EAAE;oBACJ,IAAI,EAAE,UAAU;oBAChB,OAAO,EAAE;wBACP,IAAI,EAAE;4BACJ,IAAI,EAAE,WAAW;4BACjB,SAAS,EAAE,mCAAmC;yBAC/C;qBACF;iBACF;aACF;SACF;KACF;CACF,CAAC;AAEF,AAAO,MAAM,oCAAoC,GAA+B;IAC9E,IAAI,EAAE;QACJ,IAAI,EAAE,WAAW;QACjB,SAAS,EAAE,sCAAsC;QACjD,eAAe,EAAE;YACf,oBAAoB,EAAE;gBACpB,cAAc,EAAE,sBAAsB;gBACtC,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;YACD,mBAAmB,EAAE;gBACnB,cAAc,EAAE,qBAAqB;gBACrC,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;YACD,aAAa,EAAE;gBACb,cAAc,EAAE,eAAe;gBAC/B,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;YACD,OAAO,EAAE;gBACP,cAAc,EAAE,SAAS;gBACzB,IAAI,EAAE;oBACJ,IAAI,EAAE,WAAW;oBACjB,SAAS,EAAE,iCAAiC;iBAC7C;aACF;YACD,yBAAyB,EAAE;gBACzB,cAAc,EAAE,2BAA2B;gBAC3C,IAAI,EAAE;oBACJ,IAAI,EAAE,WAAW;oBACjB,SAAS,EAAE,2BAA2B;iBACvC;aACF;YACD,KAAK,EAAE;gBACL,cAAc,EAAE,OAAO;gBACvB,IAAI,EAAE;oBACJ,IAAI,EAAE,UAAU;oBAChB,OAAO,EAAE;wBACP,IAAI,EAAE;4BACJ,IAAI,EAAE,WAAW;4BACjB,SAAS,EAAE,kBAAkB;yBAC9B;qBACF;iBACF;aACF;YACD,UAAU,EAAE;gBACV,cAAc,EAAE,YAAY;gBAC5B,IAAI,EAAE;oBACJ,IAAI,EAAE,UAAU;oBAChB,OAAO,EAAE;wBACP,IAAI,EAAE;4BACJ,IAAI,EAAE,WAAW;4BACjB,SAAS,EAAE,qCAAqC;yBACjD;qBACF;iBACF;aACF;YACD,QAAQ,EAAE;gBACR,cAAc,EAAE,UAAU;gBAC1B,IAAI,EAAE;oBACJ,IAAI,EAAE,WAAW;oBACjB,SAAS,EAAE,4BAA4B;iBACxC;aACF;YACD,eAAe,EAAE;gBACf,cAAc,EAAE,iBAAiB;gBACjC,IAAI,EAAE;oBACJ,IAAI,EAAE,WAAW;oBACjB,SAAS,EAAE,6BAA6B;iBACzC;aACF;YACD,QAAQ,EAAE;gBACR,cAAc,EAAE,UAAU;gBAC1B,IAAI,EAAE;oBACJ,IAAI,EAAE,UAAU;oBAChB,OAAO,EAAE;wBACP,IAAI,EAAE;4BACJ,IAAI,EAAE,WAAW;4BACjB,SAAS,EAAE,oBAAoB;yBAChC;qBACF;iBACF;aACF;YACD,YAAY,EAAE;gBACZ,cAAc,EAAE,cAAc;gBAC9B,QAAQ,EAAE,IAAI;gBACd,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;YACD,gBAAgB,EAAE;gBAChB,cAAc,EAAE,kBAAkB;gBAClC,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;SACF;KACF;CACF,CAAC;AAEF,AAAO,MAAM,mDAAmD,GAA+B;IAC7F,IAAI,EAAE;QACJ,IAAI,EAAE,WAAW;QACjB,SAAS,EAAE,qDAAqD;QAChE,eAAe,EAAE;YACf,8BAA8B,EAAE;gBAC9B,cAAc,EAAE,gCAAgC;gBAChD,IAAI,EAAE;oBACJ,IAAI,EAAE,UAAU;oBAChB,OAAO,EAAE;wBACP,IAAI,EAAE;4BACJ,IAAI,EAAE,WAAW;4BACjB,SAAS,EAAE,4CAA4C;yBACxD;qBACF;iBACF;aACF;SACF;KACF;CACF,CAAC;AAEF,AAAO,MAAM,wCAAwC,GAA+B;IAClF,IAAI,EAAE;QACJ,IAAI,EAAE,WAAW;QACjB,SAAS,EAAE,0CAA0C;QACrD,eAAe,EAAE;YACf,kBAAkB,EAAE;gBAClB,cAAc,EAAE,oBAAoB;gBACpC,IAAI,EAAE;oBACJ,IAAI,EAAE,SAAS;iBAChB;aACF;YACD,0BAA0B,EAAE;gBAC1B,cAAc,EAAE,4BAA4B;gBAC5C,IAAI,EAAE;oBACJ,IAAI,EAAE,SAAS;iBAChB;aACF;SACF;KACF;CACF,CAAC;AAEF,AAAO,MAAM,kCAAkC,GAA+B;IAC5E,IAAI,EAAE;QACJ,IAAI,EAAE,WAAW;QACjB,SAAS,EAAE,oCAAoC;QAC/C,eAAe,EAAE;YACf,KAAK,EAAE;gBACL,cAAc,EAAE,OAAO;gBACvB,QAAQ,EAAE,IAAI;gBACd,IAAI,EAAE;oBACJ,IAAI,EAAE,UAAU;oBAChB,OAAO,EAAE;wBACP,IAAI,EAAE;4BACJ,IAAI,EAAE,WAAW;4BACjB,SAAS,EAAE,0BAA0B;yBACtC;qBACF;iBACF;aACF;YACD,QAAQ,EAAE;gBACR,cAAc,EAAE,UAAU;gBAC1B,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;SACF;KACF;CACF,CAAC;AAEF,AAAO,MAAM,qBAAqB,GAA+B;IAC/D,IAAI,EAAE;QACJ,IAAI,EAAE,WAAW;QACjB,SAAS,EAAE,uBAAuB;QAClC,eAAe,EAAE;YACf,mBAAmB,EAAE;gBACnB,cAAc,EAAE,qBAAqB;gBACrC,QAAQ,EAAE,IAAI;gBACd,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;YACD,QAAQ,EAAE;gBACR,cAAc,EAAE,UAAU;gBAC1B,QAAQ,EAAE,IAAI;gBACd,IAAI,EAAE;oBACJ,IAAI,EAAE,UAAU;iBACjB;aACF;YACD,MAAM,EAAE;gBACN,cAAc,EAAE,QAAQ;gBACxB,QAAQ,EAAE,IAAI;gBACd,IAAI,EAAE;oBACJ,IAAI,EAAE,UAAU;iBACjB;aACF;YACD,qBAAqB,EAAE;gBACrB,cAAc,EAAE,uBAAuB;gBACvC,IAAI,EAAE;oBACJ,IAAI,EAAE,SAAS;iBAChB;aACF;YACD,oBAAoB,EAAE;gBACpB,cAAc,EAAE,sBAAsB;gBACtC,IAAI,EAAE;oBACJ,IAAI,EAAE,SAAS;iBAChB;aACF;YACD,mBAAmB,EAAE;gBACnB,cAAc,EAAE,qBAAqB;gBACrC,IAAI,EAAE;oBACJ,IAAI,EAAE,SAAS;iBAChB;aACF;YACD,0BAA0B,EAAE;gBAC1B,cAAc,EAAE,4BAA4B;gBAC5C,IAAI,EAAE;oBACJ,IAAI,EAAE,SAAS;iBAChB;aACF;YACD,gBAAgB,EAAE;gBAChB,cAAc,EAAE,kBAAkB;gBAClC,IAAI,EAAE;oBACJ,IAAI,EAAE,SAAS;iBAChB;aACF;SACF;KACF;CACF,CAAC;AAEF,AAAO,MAAM,2BAA2B,GAA+B;IACrE,IAAI,EAAE;QACJ,IAAI,EAAE,WAAW;QACjB,SAAS,EAAE,6BAA6B;QACxC,eAAe,EAAE;YACf,UAAU,EAAE;gBACV,cAAc,EAAE,YAAY;gBAC5B,IAAI,EAAE;oBACJ,IAAI,EAAE,WAAW;oBACjB,SAAS,EAAE,oBAAoB;iBAChC;aACF;SACF;KACF;CACF,CAAC;AAEF,AAAO,MAAM,kBAAkB,GAA+B;IAC5D,IAAI,EAAE;QACJ,IAAI,EAAE,WAAW;QACjB,SAAS,EAAE,oBAAoB;QAC/B,eAAe,EAAE;YACf,MAAM,EAAE;gBACN,cAAc,EAAE,QAAQ;gBACxB,QAAQ,EAAE,IAAI;gBACd,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;SACF;KACF;CACF,CAAC;AAEF,AAAO,MAAM,oBAAoB,GAA+B;IAC9D,IAAI,EAAE;QACJ,IAAI,EAAE,WAAW;QACjB,SAAS,EAAE,sBAAsB;QACjC,eAAe,EAAE;YACf,KAAK,EAAE;gBACL,cAAc,EAAE,OAAO;gBACvB,QAAQ,EAAE,IAAI;gBACd,IAAI,EAAE;oBACJ,IAAI,EAAE,UAAU;oBAChB,OAAO,EAAE;wBACP,IAAI,EAAE;4BACJ,IAAI,EAAE,WAAW;4BACjB,SAAS,EAAE,wBAAwB;yBACpC;qBACF;iBACF;aACF;YACD,QAAQ,EAAE;gBACR,cAAc,EAAE,UAAU;gBAC1B,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;SACF;KACF;CACF,CAAC;AAEF,AAAO,MAAM,sBAAsB,GAA+B;IAChE,IAAI,EAAE;QACJ,IAAI,EAAE,WAAW;QACjB,SAAS,EAAE,wBAAwB;QACnC,eAAe,EAAE;YACf,MAAM,EAAE;gBACN,cAAc,EAAE,SAAS;gBACzB,QAAQ,EAAE,IAAI;gBACd,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;YACD,EAAE,EAAE;gBACF,cAAc,EAAE,IAAI;gBACpB,QAAQ,EAAE,IAAI;gBACd,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;YACD,MAAM,EAAE;gBACN,cAAc,EAAE,QAAQ;gBACxB,QAAQ,EAAE,IAAI;gBACd,IAAI,EAAE;oBACJ,IAAI,EAAE,MAAM;oBACZ,aAAa,EAAE,CAAC,SAAS,EAAE,OAAO,CAAC;iBACpC;aACF;YACD,KAAK,EAAE;gBACL,cAAc,EAAE,OAAO;gBACvB,QAAQ,EAAE,IAAI;gBACd,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;YACD,WAAW,EAAE;gBACX,cAAc,EAAE,aAAa;gBAC7B,QAAQ,EAAE,IAAI;gBACd,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;SACF;KACF;CACF,CAAC;AAEF,AAAO,MAAM,6BAA6B,GAA+B;IACvE,IAAI,EAAE;QACJ,IAAI,EAAE,WAAW;QACjB,SAAS,EAAE,+BAA+B;QAC1C,eAAe,EAAE;YACf,IAAI,EAAE;gBACJ,cAAc,EAAE,MAAM;gBACtB,QAAQ,EAAE,IAAI;gBACd,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;YACD,IAAI,EAAE;gBACJ,cAAc,EAAE,MAAM;gBACtB,QAAQ,EAAE,IAAI;gBACd,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;YACD,YAAY,EAAE;gBACZ,cAAc,EAAE,cAAc;gBAC9B,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;YACD,QAAQ,EAAE;gBACR,YAAY,EAAE,KAAK;gBACnB,cAAc,EAAE,UAAU;gBAC1B,IAAI,EAAE;oBACJ,IAAI,EAAE,SAAS;iBAChB;aACF;SACF;KACF;CACF,CAAC;AAEF,AAAO,MAAM,eAAe,GAA+B;IACzD,IAAI,EAAE;QACJ,IAAI,EAAE,WAAW;QACjB,SAAS,EAAE,iBAAiB;QAC5B,eAAe,EAAE;YACf,SAAS,EAAE;gBACT,cAAc,EAAE,WAAW;gBAC3B,QAAQ,EAAE,IAAI;gBACd,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;YACD,MAAM,EAAE;gBACN,cAAc,EAAE,QAAQ;gBACxB,IAAI,EAAE;oBACJ,IAAI,EAAE,UAAU;oBAChB,OAAO,EAAE;wBACP,IAAI,EAAE;4BACJ,IAAI,EAAE,QAAQ;yBACf;qBACF;iBACF;aACF;YACD,UAAU,EAAE;gBACV,cAAc,EAAE,YAAY;gBAC5B,IAAI,EAAE;oBACJ,IAAI,EAAE,UAAU;oBAChB,OAAO,EAAE;wBACP,IAAI,EAAE;4BACJ,IAAI,EAAE,WAAW;4BACjB,SAAS,EAAE,0BAA0B;yBACtC;qBACF;iBACF;aACF;SACF;KACF;CACF,CAAC;AAEF,AAAO,MAAM,wBAAwB,GAA+B;IAClE,IAAI,EAAE;QACJ,IAAI,EAAE,WAAW;QACjB,SAAS,EAAE,0BAA0B;QACrC,eAAe,EAAE;YACf,IAAI,EAAE;gBACJ,cAAc,EAAE,MAAM;gBACtB,QAAQ,EAAE,IAAI;gBACd,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;YACD,KAAK,EAAE;gBACL,cAAc,EAAE,OAAO;gBACvB,QAAQ,EAAE,IAAI;gBACd,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;SACF;KACF;CACF,CAAC;AAEF,AAAO,MAAM,gBAAgB,GAA+B;IAC1D,IAAI,EAAE;QACJ,IAAI,EAAE,WAAW;QACjB,SAAS,EAAE,kBAAkB;QAC7B,eAAe,EAAE;YACf,KAAK,EAAE;gBACL,cAAc,EAAE,OAAO;gBACvB,IAAI,EAAE;oBACJ,IAAI,EAAE,UAAU;oBAChB,OAAO,EAAE;wBACP,IAAI,EAAE;4BACJ,IAAI,EAAE,WAAW;4BACjB,SAAS,EAAE,oBAAoB;yBAChC;qBACF;iBACF;aACF;SACF;KACF;CACF,CAAC;AAEF,AAAO,MAAM,oCAAoC,GAA+B;IAC9E,IAAI,EAAE;QACJ,IAAI,EAAE,WAAW;QACjB,SAAS,EAAE,sCAAsC;QACjD,eAAe,EAAE;YACf,MAAM,EAAE;gBACN,cAAc,EAAE,QAAQ;gBACxB,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;YACD,SAAS,EAAE;gBACT,cAAc,EAAE,WAAW;gBAC3B,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;YACD,SAAS,EAAE;gBACT,cAAc,EAAE,WAAW;gBAC3B,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;SACF;KACF;CACF,CAAC;AAEF,AAAO,MAAM,oCAAoC,GAA+B;IAC9E,IAAI,EAAE;QACJ,IAAI,EAAE,WAAW;QACjB,SAAS,EAAE,sCAAsC;QACjD,eAAe,EAAE;YACf,cAAc,EAAE;gBACd,cAAc,EAAE,gBAAgB;gBAChC,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;YACD,gBAAgB,EAAE;gBAChB,cAAc,EAAE,kBAAkB;gBAClC,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;YACD,QAAQ,EAAE;gBACR,cAAc,EAAE,UAAU;gBAC1B,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;YACD,MAAM,EAAE;gBACN,cAAc,EAAE,QAAQ;gBACxB,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;YACD,KAAK,EAAE;gBACL,cAAc,EAAE,OAAO;gBACvB,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;YACD,SAAS,EAAE;gBACT,cAAc,EAAE,WAAW;gBAC3B,IAAI,EAAE;oBACJ,IAAI,EAAE,UAAU;iBACjB;aACF;YACD,OAAO,EAAE;gBACP,cAAc,EAAE,SAAS;gBACzB,IAAI,EAAE;oBACJ,IAAI,EAAE,UAAU;iBACjB;aACF;YACD,QAAQ,EAAE;gBACR,cAAc,EAAE,UAAU;gBAC1B,IAAI,EAAE;oBACJ,IAAI,EAAE,UAAU;oBAChB,OAAO,EAAE;wBACP,IAAI,EAAE;4BACJ,IAAI,EAAE,WAAW;4BACjB,SAAS,EAAE,oBAAoB;yBAChC;qBACF;iBACF;aACF;SACF;KACF;CACF,CAAC;AAEF,AAAO,MAAM,mCAAmC,GAA+B;IAC7E,IAAI,EAAE;QACJ,IAAI,EAAE,WAAW;QACjB,SAAS,EAAE,qCAAqC;QAChD,eAAe,EAAE;YACf,KAAK,EAAE;gBACL,cAAc,EAAE,OAAO;gBACvB,QAAQ,EAAE,IAAI;gBACd,IAAI,EAAE;oBACJ,IAAI,EAAE,UAAU;oBAChB,OAAO,EAAE;wBACP,IAAI,EAAE;4BACJ,IAAI,EAAE,WAAW;4BACjB,SAAS,EAAE,0BAA0B;yBACtC;qBACF;iBACF;aACF;YACD,QAAQ,EAAE;gBACR,cAAc,EAAE,UAAU;gBAC1B,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;SACF;KACF;CACF,CAAC;AAEF,AAAO,MAAM,kBAAkB,GAA+B;IAC5D,IAAI,EAAE;QACJ,IAAI,EAAE,WAAW;QACjB,SAAS,EAAE,oBAAoB;QAC/B,eAAe,EAAE;YACf,KAAK,EAAE;gBACL,cAAc,EAAE,OAAO;gBACvB,QAAQ,EAAE,IAAI;gBACd,IAAI,EAAE;oBACJ,IAAI,EAAE,UAAU;oBAChB,OAAO,EAAE;wBACP,IAAI,EAAE;4BACJ,IAAI,EAAE,WAAW;4BACjB,SAAS,EAAE,aAAa;yBACzB;qBACF;iBACF;aACF;YACD,QAAQ,EAAE;gBACR,cAAc,EAAE,UAAU;gBAC1B,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;SACF;KACF;CACF,CAAC;AAEF,AAAO,MAAM,WAAW,GAA+B;IACrD,IAAI,EAAE;QACJ,IAAI,EAAE,WAAW;QACjB,SAAS,EAAE,aAAa;QACxB,eAAe,EAAE;YACf,YAAY,EAAE;gBACZ,cAAc,EAAE,cAAc;gBAC9B,QAAQ,EAAE,IAAI;gBACd,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;YACD,IAAI,EAAE;gBACJ,cAAc,EAAE,MAAM;gBACtB,QAAQ,EAAE,IAAI;gBACd,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;YACD,IAAI,EAAE;gBACJ,cAAc,EAAE,MAAM;gBACtB,QAAQ,EAAE,IAAI;gBACd,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;YACD,IAAI,EAAE;gBACJ,cAAc,EAAE,MAAM;gBACtB,QAAQ,EAAE,IAAI;gBACd,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;YACD,MAAM,EAAE;gBACN,cAAc,EAAE,QAAQ;gBACxB,QAAQ,EAAE,IAAI;gBACd,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;YACD,IAAI,EAAE;gBACJ,cAAc,EAAE,MAAM;gBACtB,QAAQ,EAAE,IAAI;gBACd,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;YACD,QAAQ,EAAE;gBACR,cAAc,EAAE,UAAU;gBAC1B,IAAI,EAAE;oBACJ,IAAI,EAAE,WAAW;oBACjB,SAAS,EAAE,qBAAqB;iBACjC;aACF;YACD,SAAS,EAAE;gBACT,cAAc,EAAE,WAAW;gBAC3B,QAAQ,EAAE,IAAI;gBACd,IAAI,EAAE;oBACJ,IAAI,EAAE,UAAU;oBAChB,OAAO,EAAE;wBACP,IAAI,EAAE;4BACJ,IAAI,EAAE,QAAQ;yBACf;qBACF;iBACF;aACF;YACD,YAAY,EAAE;gBACZ,cAAc,EAAE,cAAc;gBAC9B,QAAQ,EAAE,IAAI;gBACd,IAAI,EAAE;oBACJ,IAAI,EAAE,UAAU;oBAChB,OAAO,EAAE;wBACP,IAAI,EAAE;4BACJ,IAAI,EAAE,WAAW;4BACjB,SAAS,EAAE,yBAAyB;yBACrC;qBACF;iBACF;aACF;YACD,WAAW,EAAE;gBACX,cAAc,EAAE,aAAa;gBAC7B,QAAQ,EAAE,IAAI;gBACd,IAAI,EAAE;oBACJ,IAAI,EAAE,UAAU;oBAChB,OAAO,EAAE;wBACP,IAAI,EAAE;4BACJ,IAAI,EAAE,QAAQ;yBACf;qBACF;iBACF;aACF;YACD,KAAK,EAAE;gBACL,cAAc,EAAE,OAAO;gBACvB,QAAQ,EAAE,IAAI;gBACd,IAAI,EAAE;oBACJ,IAAI,EAAE,UAAU;oBAChB,OAAO,EAAE;wBACP,IAAI,EAAE;4BACJ,IAAI,EAAE,WAAW;4BACjB,SAAS,EAAE,kBAAkB;yBAC9B;qBACF;iBACF;aACF;YACD,YAAY,EAAE;gBACZ,cAAc,EAAE,cAAc;gBAC9B,QAAQ,EAAE,IAAI;gBACd,IAAI,EAAE;oBACJ,IAAI,EAAE,UAAU;oBAChB,OAAO,EAAE;wBACP,IAAI,EAAE;4BACJ,IAAI,EAAE,WAAW;4BACjB,SAAS,EAAE,yBAAyB;yBACrC;qBACF;iBACF;aACF;YACD,YAAY,EAAE;gBACZ,cAAc,EAAE,cAAc;gBAC9B,QAAQ,EAAE,IAAI;gBACd,IAAI,EAAE;oBACJ,IAAI,EAAE,UAAU;oBAChB,OAAO,EAAE;wBACP,IAAI,EAAE;4BACJ,IAAI,EAAE,WAAW;4BACjB,SAAS,EAAE,yBAAyB;yBACrC;qBACF;iBACF;aACF;SACF;KACF;CACF,CAAC;AAEF,AAAO,MAAM,mBAAmB,GAA+B;IAC7D,IAAI,EAAE;QACJ,IAAI,EAAE,WAAW;QACjB,SAAS,EAAE,qBAAqB;QAChC,eAAe,EAAE;YACf,OAAO,EAAE;gBACP,cAAc,EAAE,SAAS;gBACzB,QAAQ,EAAE,IAAI;gBACd,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;YACD,OAAO,EAAE;gBACP,cAAc,EAAE,SAAS;gBACzB,QAAQ,EAAE,IAAI;gBACd,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;YACD,OAAO,EAAE;gBACP,cAAc,EAAE,SAAS;gBACzB,QAAQ,EAAE,IAAI;gBACd,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;YACD,SAAS,EAAE;gBACT,cAAc,EAAE,WAAW;gBAC3B,QAAQ,EAAE,IAAI;gBACd,IAAI,EAAE;oBACJ,IAAI,EAAE,MAAM;oBACZ,aAAa,EAAE,CAAC,WAAW,EAAE,QAAQ,EAAE,MAAM,CAAC;iBAC/C;aACF;SACF;KACF;CACF,CAAC;AAEF,AAAO,MAAM,uBAAuB,GAA+B;IACjE,IAAI,EAAE;QACJ,IAAI,EAAE,WAAW;QACjB,SAAS,EAAE,yBAAyB;QACpC,eAAe,EAAE;YACf,QAAQ,EAAE;gBACR,cAAc,EAAE,UAAU;gBAC1B,QAAQ,EAAE,IAAI;gBACd,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;YACD,KAAK,EAAE;gBACL,cAAc,EAAE,OAAO;gBACvB,QAAQ,EAAE,IAAI;gBACd,IAAI,EAAE;oBACJ,IAAI,EAAE,UAAU;oBAChB,OAAO,EAAE;wBACP,IAAI,EAAE;4BACJ,IAAI,EAAE,QAAQ;yBACf;qBACF;iBACF;aACF;YACD,WAAW,EAAE;gBACX,cAAc,EAAE,aAAa;gBAC7B,QAAQ,EAAE,IAAI;gBACd,IAAI,EAAE;oBACJ,IAAI,EAAE,UAAU;oBAChB,OAAO,EAAE;wBACP,IAAI,EAAE;4BACJ,IAAI,EAAE,WAAW;4BACjB,SAAS,EAAE,wBAAwB;yBACpC;qBACF;iBACF;aACF;YACD,iBAAiB,EAAE;gBACjB,cAAc,EAAE,mBAAmB;gBACnC,QAAQ,EAAE,IAAI;gBACd,IAAI,EAAE;oBACJ,IAAI,EAAE,UAAU;oBAChB,OAAO,EAAE;wBACP,IAAI,EAAE;4BACJ,IAAI,EAAE,QAAQ;yBACf;qBACF;iBACF;aACF;YACD,IAAI,EAAE;gBACJ,cAAc,EAAE,MAAM;gBACtB,QAAQ,EAAE,IAAI;gBACd,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;SACF;KACF;CACF,CAAC;AAEF,AAAO,MAAM,sBAAsB,GAA+B;IAChE,IAAI,EAAE;QACJ,IAAI,EAAE,WAAW;QACjB,SAAS,EAAE,wBAAwB;QACnC,eAAe,EAAE;YACf,IAAI,EAAE;gBACJ,cAAc,EAAE,MAAM;gBACtB,QAAQ,EAAE,IAAI;gBACd,IAAI,EAAE;oBACJ,IAAI,EAAE,UAAU;oBAChB,OAAO,EAAE;wBACP,IAAI,EAAE;4BACJ,IAAI,EAAE,QAAQ;yBACf;qBACF;iBACF;aACF;YACD,YAAY,EAAE;gBACZ,cAAc,EAAE,cAAc;gBAC9B,QAAQ,EAAE,IAAI;gBACd,IAAI,EAAE;oBACJ,IAAI,EAAE,UAAU;oBAChB,OAAO,EAAE;wBACP,IAAI,EAAE;4BACJ,IAAI,EAAE,WAAW;4BACjB,SAAS,EAAE,yBAAyB;yBACrC;qBACF;iBACF;aACF;SACF;KACF;CACF,CAAC;AAEF,AAAO,MAAM,uBAAuB,GAA+B;IACjE,IAAI,EAAE;QACJ,IAAI,EAAE,WAAW;QACjB,SAAS,EAAE,yBAAyB;QACpC,eAAe,EAAE;YACf,IAAI,EAAE;gBACJ,cAAc,EAAE,MAAM;gBACtB,QAAQ,EAAE,IAAI;gBACd,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;YACD,KAAK,EAAE;gBACL,cAAc,EAAE,OAAO;gBACvB,QAAQ,EAAE,IAAI;gBACd,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;SACF;KACF;CACF,CAAC;AAEF,AAAO,MAAM,gBAAgB,GAA+B;IAC1D,IAAI,EAAE;QACJ,IAAI,EAAE,WAAW;QACjB,SAAS,EAAE,kBAAkB;QAC7B,eAAe,EAAE;YACf,OAAO,EAAE;gBACP,cAAc,EAAE,SAAS;gBACzB,QAAQ,EAAE,IAAI;gBACd,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;YACD,QAAQ,EAAE;gBACR,cAAc,EAAE,UAAU;gBAC1B,QAAQ,EAAE,IAAI;gBACd,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;YACD,YAAY,EAAE;gBACZ,cAAc,EAAE,cAAc;gBAC9B,QAAQ,EAAE,IAAI;gBACd,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;SACF;KACF;CACF,CAAC;AAEF,AAAO,MAAM,uBAAuB,GAA+B;IACjE,IAAI,EAAE;QACJ,IAAI,EAAE,WAAW;QACjB,SAAS,EAAE,yBAAyB;QACpC,eAAe,EAAE;YACf,IAAI,EAAE;gBACJ,cAAc,EAAE,MAAM;gBACtB,QAAQ,EAAE,IAAI;gBACd,IAAI,EAAE;oBACJ,IAAI,EAAE,MAAM;oBACZ,aAAa,EAAE,CAAC,UAAU,EAAE,MAAM,CAAC;iBACpC;aACF;YACD,MAAM,EAAE;gBACN,cAAc,EAAE,QAAQ;gBACxB,QAAQ,EAAE,IAAI;gBACd,IAAI,EAAE;oBACJ,IAAI,EAAE,UAAU;oBAChB,OAAO,EAAE;wBACP,IAAI,EAAE;4BACJ,IAAI,EAAE,QAAQ;yBACf;qBACF;iBACF;aACF;YACD,eAAe,EAAE;gBACf,cAAc,EAAE,iBAAiB;gBACjC,IAAI,EAAE;oBACJ,IAAI,EAAE,WAAW;oBACjB,SAAS,EAAE,4BAA4B;iBACxC;aACF;YACD,UAAU,EAAE;gBACV,cAAc,EAAE,YAAY;gBAC5B,QAAQ,EAAE,IAAI;gBACd,IAAI,EAAE;oBACJ,IAAI,EAAE,MAAM;oBACZ,aAAa,EAAE,CAAC,SAAS,EAAE,6BAA6B,CAAC;iBAC1D;aACF;SACF;KACF;CACF,CAAC;AAEF,AAAO,MAAM,0BAA0B,GAA+B;IACpE,IAAI,EAAE;QACJ,IAAI,EAAE,WAAW;QACjB,SAAS,EAAE,4BAA4B;QACvC,eAAe,EAAE;YACf,SAAS,EAAE;gBACT,cAAc,EAAE,WAAW;gBAC3B,QAAQ,EAAE,IAAI;gBACd,IAAI,EAAE;oBACJ,IAAI,EAAE,UAAU;oBAChB,OAAO,EAAE;wBACP,IAAI,EAAE;4BACJ,IAAI,EAAE,QAAQ;yBACf;qBACF;iBACF;aACF;YACD,KAAK,EAAE;gBACL,cAAc,EAAE,OAAO;gBACvB,QAAQ,EAAE,IAAI;gBACd,IAAI,EAAE;oBACJ,IAAI,EAAE,UAAU;oBAChB,OAAO,EAAE;wBACP,IAAI,EAAE;4BACJ,IAAI,EAAE,QAAQ;yBACf;qBACF;iBACF;aACF;SACF;KACF;CACF,CAAC;AAEF,AAAO,MAAM,OAAO,GAA+B;IACjD,IAAI,EAAE;QACJ,IAAI,EAAE,WAAW;QACjB,SAAS,EAAE,SAAS;QACpB,eAAe,EAAE;YACf,IAAI,EAAE;gBACJ,cAAc,EAAE,MAAM;gBACtB,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;YACD,IAAI,EAAE;gBACJ,cAAc,EAAE,MAAM;gBACtB,QAAQ,EAAE,IAAI;gBACd,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;SACF;KACF;CACF,CAAC;AAEF,AAAO,MAAM,yBAAyB,GAA+B;IACnE,IAAI,EAAE;QACJ,IAAI,EAAE,WAAW;QACjB,SAAS,EAAE,2BAA2B;QACtC,eAAe,EAAE;YACf,IAAI,EAAE;gBACJ,cAAc,EAAE,MAAM;gBACtB,QAAQ,EAAE,IAAI;gBACd,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;YACD,SAAS,EAAE;gBACT,cAAc,EAAE,WAAW;gBAC3B,QAAQ,EAAE,IAAI;gBACd,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;YACD,OAAO,EAAE;gBACP,cAAc,EAAE,SAAS;gBACzB,QAAQ,EAAE,IAAI;gBACd,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;YACD,aAAa,EAAE;gBACb,cAAc,EAAE,eAAe;gBAC/B,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;SACF;KACF;CACF,CAAC;AAEF,AAAO,MAAM,qBAAqB,GAA+B;IAC/D,IAAI,EAAE;QACJ,IAAI,EAAE,WAAW;QACjB,SAAS,EAAE,uBAAuB;QAClC,eAAe,EAAE;YACf,kBAAkB,EAAE;gBAClB,cAAc,EAAE,oBAAoB;gBACpC,IAAI,EAAE;oBACJ,IAAI,EAAE,SAAS;iBAChB;aACF;SACF;KACF;CACF,CAAC;AAEF,AAAO,MAAM,YAAY,GAA+B;IACtD,IAAI,EAAE;QACJ,IAAI,EAAE,WAAW;QACjB,SAAS,EAAE,cAAc;QACzB,eAAe,EAAE;YACf,YAAY,EAAE;gBACZ,cAAc,EAAE,cAAc;gBAC9B,QAAQ,EAAE,IAAI;gBACd,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;YACD,gBAAgB,EAAE;gBAChB,cAAc,EAAE,kBAAkB;gBAClC,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;YACD,cAAc,EAAE;gBACd,cAAc,EAAE,gBAAgB;gBAChC,IAAI,EAAE;oBACJ,IAAI,EAAE,WAAW;oBACjB,SAAS,EAAE,oBAAoB;iBAChC;aACF;YACD,qBAAqB,EAAE;gBACrB,cAAc,EAAE,uBAAuB;gBACvC,IAAI,EAAE;oBACJ,IAAI,EAAE,WAAW;oBACjB,SAAS,EAAE,oBAAoB;iBAChC;aACF;YACD,SAAS,EAAE;gBACT,cAAc,EAAE,WAAW;gBAC3B,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;YACD,gBAAgB,EAAE;gBAChB,cAAc,EAAE,kBAAkB;gBAClC,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;YACD,cAAc,EAAE;gBACd,cAAc,EAAE,gBAAgB;gBAChC,QAAQ,EAAE,IAAI;gBACd,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;YACD,eAAe,EAAE;gBACf,cAAc,EAAE,iBAAiB;gBACjC,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;YACD,iBAAiB,EAAE;gBACjB,cAAc,EAAE,mBAAmB;gBACnC,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;YACD,eAAe,EAAE;gBACf,cAAc,EAAE,iBAAiB;gBACjC,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;SACF;KACF;CACF,CAAC;AAEF,AAAO,MAAM,kBAAkB,GAA+B;IAC5D,IAAI,EAAE;QACJ,IAAI,EAAE,WAAW;QACjB,SAAS,EAAE,oBAAoB;QAC/B,eAAe,EAAE;YACf,EAAE,EAAE;gBACF,cAAc,EAAE,IAAI;gBACpB,QAAQ,EAAE,IAAI;gBACd,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;YACD,GAAG,EAAE;gBACH,cAAc,EAAE,KAAK;gBACrB,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;SACF;KACF;CACF,CAAC;AAEF,AAAO,MAAM,4BAA4B,GAA+B;IACtE,IAAI,EAAE;QACJ,IAAI,EAAE,WAAW;QACjB,SAAS,EAAE,8BAA8B;QACzC,eAAe,EAAE;YACf,OAAO,EAAE;gBACP,cAAc,EAAE,SAAS;gBACzB,QAAQ,EAAE,IAAI;gBACd,IAAI,EAAE;oBACJ,IAAI,EAAE,SAAS;iBAChB;aACF;YACD,kBAAkB,EAAE;gBAClB,cAAc,EAAE,oBAAoB;gBACpC,IAAI,EAAE;oBACJ,IAAI,EAAE,UAAU;oBAChB,OAAO,EAAE;wBACP,IAAI,EAAE;4BACJ,IAAI,EAAE,WAAW;4BACjB,SAAS,EAAE,2BAA2B;yBACvC;qBACF;iBACF;aACF;YACD,yBAAyB,EAAE;gBACzB,cAAc,EAAE,2BAA2B;gBAC3C,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;SACF;KACF;CACF,CAAC;AAEF,AAAO,MAAM,yBAAyB,GAA+B;IACnE,IAAI,EAAE;QACJ,IAAI,EAAE,WAAW;QACjB,SAAS,EAAE,2BAA2B;QACtC,eAAe,EAAE;YACf,iBAAiB,EAAE;gBACjB,cAAc,EAAE,mBAAmB;gBACnC,IAAI,EAAE;oBACJ,IAAI,EAAE,WAAW;oBACjB,SAAS,EAAE,4BAA4B;iBACxC;aACF;YACD,gBAAgB,EAAE;gBAChB,cAAc,EAAE,kBAAkB;gBAClC,IAAI,EAAE;oBACJ,IAAI,EAAE,WAAW;oBACjB,SAAS,EAAE,yBAAyB;iBACrC;aACF;SACF;KACF;CACF,CAAC;AAEF,AAAO,MAAM,0BAA0B,GAA+B;IACpE,IAAI,EAAE;QACJ,IAAI,EAAE,WAAW;QACjB,SAAS,EAAE,4BAA4B;QACvC,eAAe,EAAE;YACf,WAAW,EAAE;gBACX,cAAc,EAAE,aAAa;gBAC7B,IAAI,EAAE;oBACJ,IAAI,EAAE,WAAW;oBACjB,SAAS,EAAE,aAAa;iBACzB;aACF;YACD,SAAS,EAAE;gBACT,cAAc,EAAE,WAAW;gBAC3B,QAAQ,EAAE,IAAI;gBACd,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;SACF;KACF;CACF,CAAC;AAEF,AAAO,MAAM,WAAW,GAA+B;IACrD,IAAI,EAAE;QACJ,IAAI,EAAE,WAAW;QACjB,SAAS,EAAE,aAAa;QACxB,eAAe,EAAE;YACf,EAAE,EAAE;gBACF,cAAc,EAAE,IAAI;gBACpB,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;SACF;KACF;CACF,CAAC;AAEF,AAAO,MAAM,uBAAuB,GAA+B;IACjE,IAAI,EAAE;QACJ,IAAI,EAAE,WAAW;QACjB,SAAS,EAAE,yBAAyB;QACpC,eAAe,EAAE;YACf,WAAW,EAAE;gBACX,cAAc,EAAE,aAAa;gBAC7B,IAAI,EAAE;oBACJ,IAAI,EAAE,WAAW;oBACjB,SAAS,EAAE,aAAa;iBACzB;aACF;YACD,MAAM,EAAE;gBACN,cAAc,EAAE,QAAQ;gBACxB,QAAQ,EAAE,IAAI;gBACd,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;SACF;KACF;CACF,CAAC;AAEF,AAAO,MAAM,UAAU,GAA+B;IACpD,IAAI,EAAE;QACJ,IAAI,EAAE,WAAW;QACjB,SAAS,EAAE,YAAY;QACvB,eAAe,EAAE;YACf,mBAAmB,EAAE;gBACnB,cAAc,EAAE,qBAAqB;gBACrC,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;YACD,IAAI,EAAE;gBACJ,cAAc,EAAE,MAAM;gBACtB,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;SACF;KACF;CACF,CAAC;AAEF,AAAO,MAAM,gBAAgB,GAA+B;IAC1D,IAAI,EAAE;QACJ,IAAI,EAAE,WAAW;QACjB,SAAS,EAAE,kBAAkB;QAC7B,eAAe,EAAE;YACf,KAAK,EAAE;gBACL,cAAc,EAAE,OAAO;gBACvB,QAAQ,EAAE,IAAI;gBACd,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;SACF;KACF;CACF,CAAC;AAEF,AAAO,MAAM,yBAAyB,GAA+B;IACnE,IAAI,EAAE;QACJ,IAAI,EAAE,WAAW;QACjB,SAAS,EAAE,2BAA2B;QACtC,eAAe,EAAE;YACf,UAAU,EAAE;gBACV,cAAc,EAAE,YAAY;gBAC5B,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;SACF;KACF;CACF,CAAC;AAEF,AAAO,MAAM,mBAAmB,GAA+B;IAC7D,IAAI,EAAE;QACJ,IAAI,EAAE,WAAW;QACjB,SAAS,EAAE,qBAAqB;QAChC,eAAe,EAAE;YACf,YAAY,EAAE;gBACZ,cAAc,EAAE,cAAc;gBAC9B,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;YACD,2BAA2B,EAAE;gBAC3B,cAAc,EAAE,6BAA6B;gBAC7C,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;SACF;KACF;CACF,CAAC;AAEF,AAAO,MAAM,UAAU,GAA+B;IACpD,IAAI,EAAE;QACJ,IAAI,EAAE,WAAW;QACjB,SAAS,EAAE,YAAY;QACvB,eAAe,EAAE;YACf,IAAI,EAAE;gBACJ,cAAc,EAAE,MAAM;gBACtB,IAAI,EAAE;oBACJ,IAAI,EAAE,YAAY;oBAClB,KAAK,EAAE,EAAE,IAAI,EAAE,EAAE,IAAI,EAAE,QAAQ,EAAE,EAAE;iBACpC;aACF;YACD,GAAG,EAAE;gBACH,cAAc,EAAE,KAAK;gBACrB,IAAI,EAAE;oBACJ,IAAI,EAAE,WAAW;oBACjB,SAAS,EAAE,SAAS;iBACrB;aACF;YACD,MAAM,EAAE;gBACN,cAAc,EAAE,mBAAmB;gBACnC,IAAI,EAAE;oBACJ,IAAI,EAAE,MAAM;oBACZ,aAAa,EAAE,CAAC,SAAS,EAAE,OAAO,CAAC;iBACpC;aACF;YACD,UAAU,EAAE;gBACV,cAAc,EAAE,uBAAuB;gBACvC,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;YACD,4BAA4B,EAAE;gBAC5B,cAAc,EAAE,yCAAyC;gBACzD,IAAI,EAAE;oBACJ,IAAI,EAAE,WAAW;oBACjB,SAAS,EAAE,8BAA8B;iBAC1C;aACF;YACD,iBAAiB,EAAE;gBACjB,cAAc,EAAE,8BAA8B;gBAC9C,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;YACD,iBAAiB,EAAE;gBACjB,cAAc,EAAE,8BAA8B;gBAC9C,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;YACD,gBAAgB,EAAE;gBAChB,cAAc,EAAE,6BAA6B;gBAC7C,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;YACD,gBAAgB,EAAE;gBAChB,cAAc,EAAE,6BAA6B;gBAC7C,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;YACD,SAAS,EAAE;gBACT,cAAc,EAAE,sBAAsB;gBACtC,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;YACD,UAAU,EAAE;gBACV,cAAc,EAAE,uBAAuB;gBACvC,IAAI,EAAE;oBACJ,IAAI,EAAE,WAAW;oBACjB,SAAS,EAAE,YAAY;iBACxB;aACF;YACD,mBAAmB,EAAE;gBACnB,cAAc,EAAE,gCAAgC;gBAChD,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;YACD,YAAY,EAAE;gBACZ,cAAc,EAAE,yBAAyB;gBACzC,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;YACD,IAAI,EAAE;gBACJ,cAAc,EAAE,iBAAiB;gBACjC,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;YACD,eAAe,EAAE;gBACf,cAAc,EAAE,4BAA4B;gBAC5C,IAAI,EAAE;oBACJ,IAAI,EAAE,SAAS;iBAChB;aACF;YACD,YAAY,EAAE;gBACZ,cAAc,EAAE,yBAAyB;gBACzC,IAAI,EAAE;oBACJ,IAAI,EAAE,WAAW;oBACjB,SAAS,EAAE,2BAA2B;iBACvC;aACF;YACD,qBAAqB,EAAE;gBACrB,cAAc,EAAE,kCAAkC;gBAClD,IAAI,EAAE;oBACJ,IAAI,EAAE,WAAW;oBACjB,SAAS,EAAE,uBAAuB;iBACnC;aACF;YACD,yBAAyB,EAAE;gBACzB,cAAc,EAAE,sCAAsC;gBACtD,IAAI,EAAE;oBACJ,IAAI,EAAE,WAAW;oBACjB,SAAS,EAAE,2BAA2B;iBACvC;aACF;YACD,mBAAmB,EAAE;gBACnB,cAAc,EAAE,gCAAgC;gBAChD,IAAI,EAAE;oBACJ,IAAI,EAAE,SAAS;iBAChB;aACF;YACD,mBAAmB,EAAE;gBACnB,cAAc,EAAE,gCAAgC;gBAChD,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;SACF;KACF;CACF,CAAC;AAEF,AAAO,MAAM,QAAQ,GAA+B;IAClD,IAAI,EAAE;QACJ,IAAI,EAAE,WAAW;QACjB,SAAS,EAAE,UAAU;QACrB,eAAe,EAAE;YACf,KAAK,EAAE;gBACL,cAAc,EAAE,OAAO;gBACvB,QAAQ,EAAE,IAAI;gBACd,IAAI,EAAE;oBACJ,IAAI,EAAE,UAAU;oBAChB,OAAO,EAAE;wBACP,IAAI,EAAE;4BACJ,IAAI,EAAE,WAAW;4BACjB,SAAS,EAAE,MAAM;yBAClB;qBACF;iBACF;aACF;YACD,QAAQ,EAAE;gBACR,cAAc,EAAE,UAAU;gBAC1B,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;SACF;KACF;CACF,CAAC;AAEF,AAAO,MAAM,eAAe,GAA+B;IACzD,IAAI,EAAE;QACJ,IAAI,EAAE,WAAW;QACjB,SAAS,EAAE,iBAAiB;QAC5B,eAAe,EAAE;YACf,MAAM,EAAE;gBACN,cAAc,EAAE,QAAQ;gBACxB,QAAQ,EAAE,IAAI;gBACd,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;YACD,iBAAiB,EAAE;gBACjB,cAAc,EAAE,mBAAmB;gBACnC,QAAQ,EAAE,IAAI;gBACd,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;YACD,wBAAwB,EAAE;gBACxB,cAAc,EAAE,0BAA0B;gBAC1C,IAAI,EAAE;oBACJ,IAAI,EAAE,SAAS;iBAChB;aACF;SACF;KACF;CACF,CAAC;AAEF,AAAO,MAAM,SAAS,GAA+B;IACnD,IAAI,EAAE;QACJ,IAAI,EAAE,WAAW;QACjB,SAAS,EAAE,WAAW;QACtB,eAAe,EAAE;YACf,SAAS,EAAE;gBACT,cAAc,EAAE,WAAW;gBAC3B,QAAQ,EAAE,IAAI;gBACd,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;YACD,qBAAqB,EAAE;gBACrB,cAAc,EAAE,uBAAuB;gBACvC,QAAQ,EAAE,IAAI;gBACd,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;SACF;KACF;CACF,CAAC;AAEF,AAAO,MAAM,WAAW,GAA+B;IACrD,IAAI,EAAE;QACJ,IAAI,EAAE,WAAW;QACjB,SAAS,EAAE,aAAa;QACxB,eAAe,EAAE;YACf,IAAI,EAAE;gBACJ,cAAc,EAAE,MAAM;gBACtB,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;YACD,IAAI,EAAE;gBACJ,cAAc,EAAE,MAAM;gBACtB,QAAQ,EAAE,IAAI;gBACd,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;SACF;KACF;CACF,CAAC;AAEF,AAAO,MAAM,cAAc,GAA+B;IACxD,IAAI,EAAE;QACJ,IAAI,EAAE,WAAW;QACjB,SAAS,EAAE,gBAAgB;QAC3B,eAAe,EAAE;YACf,IAAI,EAAE;gBACJ,cAAc,EAAE,MAAM;gBACtB,IAAI,EAAE;oBACJ,IAAI,EAAE,YAAY;oBAClB,KAAK,EAAE,EAAE,IAAI,EAAE,EAAE,IAAI,EAAE,QAAQ,EAAE,EAAE;iBACpC;aACF;YACD,GAAG,EAAE;gBACH,cAAc,EAAE,KAAK;gBACrB,IAAI,EAAE;oBACJ,IAAI,EAAE,WAAW;oBACjB,SAAS,EAAE,aAAa;iBACzB;aACF;YACD,MAAM,EAAE;gBACN,cAAc,EAAE,mBAAmB;gBACnC,IAAI,EAAE;oBACJ,IAAI,EAAE,MAAM;oBACZ,aAAa,EAAE,CAAC,SAAS,EAAE,OAAO,CAAC;iBACpC;aACF;YACD,UAAU,EAAE;gBACV,cAAc,EAAE,uBAAuB;gBACvC,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;YACD,4BAA4B,EAAE;gBAC5B,cAAc,EAAE,yCAAyC;gBACzD,IAAI,EAAE;oBACJ,IAAI,EAAE,WAAW;oBACjB,SAAS,EAAE,8BAA8B;iBAC1C;aACF;YACD,UAAU,EAAE;gBACV,cAAc,EAAE,uBAAuB;gBACvC,IAAI,EAAE;oBACJ,IAAI,EAAE,WAAW;oBACjB,SAAS,EAAE,YAAY;iBACxB;aACF;YACD,mBAAmB,EAAE;gBACnB,cAAc,EAAE,gCAAgC;gBAChD,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;YACD,YAAY,EAAE;gBACZ,cAAc,EAAE,yBAAyB;gBACzC,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;YACD,mBAAmB,EAAE;gBACnB,cAAc,EAAE,gCAAgC;gBAChD,IAAI,EAAE;oBACJ,IAAI,EAAE,SAAS;iBAChB;aACF;YACD,mBAAmB,EAAE;gBACnB,cAAc,EAAE,gCAAgC;gBAChD,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;YACD,qBAAqB,EAAE;gBACrB,cAAc,EAAE,kCAAkC;gBAClD,IAAI,EAAE;oBACJ,IAAI,EAAE,WAAW;oBACjB,SAAS,EAAE,uBAAuB;iBACnC;aACF;SACF;KACF;CACF,CAAC;AAEF,AAAO,MAAM,YAAY,GAA+B;IACtD,IAAI,EAAE;QACJ,IAAI,EAAE,WAAW;QACjB,SAAS,EAAE,cAAc;QACzB,eAAe,EAAE;YACf,KAAK,EAAE;gBACL,cAAc,EAAE,OAAO;gBACvB,QAAQ,EAAE,IAAI;gBACd,IAAI,EAAE;oBACJ,IAAI,EAAE,UAAU;oBAChB,OAAO,EAAE;wBACP,IAAI,EAAE;4BACJ,IAAI,EAAE,WAAW;4BACjB,SAAS,EAAE,UAAU;yBACtB;qBACF;iBACF;aACF;YACD,QAAQ,EAAE;gBACR,cAAc,EAAE,UAAU;gBAC1B,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;SACF;KACF;CACF,CAAC;AAEF,AAAO,MAAM,qBAAqB,GAA+B;IAC/D,IAAI,EAAE;QACJ,IAAI,EAAE,WAAW;QACjB,SAAS,EAAE,uBAAuB;QAClC,eAAe,EAAE;YACf,IAAI,EAAE;gBACJ,cAAc,EAAE,MAAM;gBACtB,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;YACD,WAAW,EAAE;gBACX,cAAc,EAAE,aAAa;gBAC7B,QAAQ,EAAE,IAAI;gBACd,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;YACD,QAAQ,EAAE;gBACR,cAAc,EAAE,UAAU;gBAC1B,QAAQ,EAAE,IAAI;gBACd,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;SACF;KACF;CACF,CAAC;AAEF,AAAO,MAAM,uBAAuB,GAA+B;IACjE,IAAI,EAAE;QACJ,IAAI,EAAE,WAAW;QACjB,SAAS,EAAE,yBAAyB;QACpC,eAAe,EAAE;YACf,WAAW,EAAE;gBACX,cAAc,EAAE,aAAa;gBAC7B,IAAI,EAAE;oBACJ,IAAI,EAAE,WAAW;oBACjB,SAAS,EAAE,aAAa;iBACzB;aACF;YACD,MAAM,EAAE;gBACN,cAAc,EAAE,QAAQ;gBACxB,QAAQ,EAAE,IAAI;gBACd,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;SACF;KACF;CACF,CAAC;AAEF,AAAO,MAAM,uBAAuB,GAA+B;IACjE,IAAI,EAAE;QACJ,IAAI,EAAE,WAAW;QACjB,SAAS,EAAE,yBAAyB;QACpC,eAAe,EAAE;YACf,IAAI,EAAE;gBACJ,cAAc,EAAE,MAAM;gBACtB,IAAI,EAAE;oBACJ,IAAI,EAAE,YAAY;oBAClB,KAAK,EAAE,EAAE,IAAI,EAAE,EAAE,IAAI,EAAE,QAAQ,EAAE,EAAE;iBACpC;aACF;YACD,QAAQ,EAAE;gBACR,cAAc,EAAE,UAAU;gBAC1B,IAAI,EAAE;oBACJ,IAAI,EAAE,WAAW;oBACjB,SAAS,EAAE,uBAAuB;iBACnC;aACF;YACD,cAAc,EAAE;gBACd,cAAc,EAAE,2BAA2B;gBAC3C,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;YACD,SAAS,EAAE;gBACT,cAAc,EAAE,sBAAsB;gBACtC,IAAI,EAAE;oBACJ,IAAI,EAAE,WAAW;oBACjB,SAAS,EAAE,yBAAyB;iBACrC;aACF;YACD,iCAAiC,EAAE;gBACjC,cAAc,EAAE,8CAA8C;gBAC9D,IAAI,EAAE;oBACJ,IAAI,EAAE,SAAS;iBAChB;aACF;SACF;KACF;CACF,CAAC;AAEF,AAAO,MAAM,qBAAqB,GAA+B;IAC/D,IAAI,EAAE;QACJ,IAAI,EAAE,WAAW;QACjB,SAAS,EAAE,uBAAuB;QAClC,eAAe,EAAE;YACf,KAAK,EAAE;gBACL,cAAc,EAAE,OAAO;gBACvB,QAAQ,EAAE,IAAI;gBACd,IAAI,EAAE;oBACJ,IAAI,EAAE,UAAU;oBAChB,OAAO,EAAE;wBACP,IAAI,EAAE;4BACJ,IAAI,EAAE,WAAW;4BACjB,SAAS,EAAE,mBAAmB;yBAC/B;qBACF;iBACF;aACF;YACD,QAAQ,EAAE;gBACR,cAAc,EAAE,UAAU;gBAC1B,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;SACF;KACF;CACF,CAAC;AAEF,AAAO,MAAM,eAAe,GAA+B;IACzD,IAAI,EAAE;QACJ,IAAI,EAAE,WAAW;QACjB,SAAS,EAAE,iBAAiB;QAC5B,eAAe,EAAE;YACf,KAAK,EAAE;gBACL,cAAc,EAAE,OAAO;gBACvB,QAAQ,EAAE,IAAI;gBACd,IAAI,EAAE;oBACJ,IAAI,EAAE,UAAU;oBAChB,OAAO,EAAE;wBACP,IAAI,EAAE;4BACJ,IAAI,EAAE,QAAQ;yBACf;qBACF;iBACF;aACF;YACD,QAAQ,EAAE;gBACR,cAAc,EAAE,UAAU;gBAC1B,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;SACF;KACF;CACF,CAAC;AAEF,AAAO,MAAM,yBAAyB,GAA+B;IACnE,IAAI,EAAE;QACJ,IAAI,EAAE,WAAW;QACjB,SAAS,EAAE,2BAA2B;QACtC,eAAe,EAAE;YACf,EAAE,EAAE;gBACF,cAAc,EAAE,IAAI;gBACpB,QAAQ,EAAE,IAAI;gBACd,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;YACD,IAAI,EAAE;gBACJ,cAAc,EAAE,MAAM;gBACtB,QAAQ,EAAE,IAAI;gBACd,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;YACD,IAAI,EAAE;gBACJ,cAAc,EAAE,MAAM;gBACtB,QAAQ,EAAE,IAAI;gBACd,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;YACD,eAAe,EAAE;gBACf,cAAc,EAAE,4BAA4B;gBAC5C,IAAI,EAAE;oBACJ,IAAI,EAAE,WAAW;oBACjB,SAAS,EAAE,iBAAiB;iBAC7B;aACF;YACD,iCAAiC,EAAE;gBACjC,cAAc,EAAE,8CAA8C;gBAC9D,IAAI,EAAE;oBACJ,IAAI,EAAE,WAAW;oBACjB,SAAS,EAAE,mCAAmC;iBAC/C;aACF;YACD,iBAAiB,EAAE;gBACjB,cAAc,EAAE,8BAA8B;gBAC9C,QAAQ,EAAE,IAAI;gBACd,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;SACF;KACF;CACF,CAAC;AAEF,AAAO,MAAM,eAAe,GAA+B;IACzD,IAAI,EAAE;QACJ,IAAI,EAAE,WAAW;QACjB,SAAS,EAAE,iBAAiB;QAC5B,eAAe,EAAE;YACf,EAAE,EAAE;gBACF,cAAc,EAAE,IAAI;gBACpB,QAAQ,EAAE,IAAI;gBACd,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;SACF;KACF;CACF,CAAC;AAEF,AAAO,MAAM,iCAAiC,GAA+B;IAC3E,IAAI,EAAE;QACJ,IAAI,EAAE,WAAW;QACjB,SAAS,EAAE,mCAAmC;QAC9C,eAAe,EAAE;YACf,MAAM,EAAE;gBACN,cAAc,EAAE,QAAQ;gBACxB,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;YACD,WAAW,EAAE;gBACX,cAAc,EAAE,aAAa;gBAC7B,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;YACD,eAAe,EAAE;gBACf,cAAc,EAAE,iBAAiB;gBACjC,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;SACF;KACF;CACF,CAAC;AAEF,AAAO,MAAM,gBAAgB,GAA+B;IAC1D,IAAI,EAAE;QACJ,IAAI,EAAE,WAAW;QACjB,SAAS,EAAE,kBAAkB;QAC7B,eAAe,EAAE;YACf,IAAI,EAAE;gBACJ,cAAc,EAAE,MAAM;gBACtB,IAAI,EAAE;oBACJ,IAAI,EAAE,YAAY;oBAClB,KAAK,EAAE,EAAE,IAAI,EAAE,EAAE,IAAI,EAAE,QAAQ,EAAE,EAAE;iBACpC;aACF;SACF;KACF;CACF,CAAC;AAEF,AAAO,MAAM,cAAc,GAA+B;IACxD,IAAI,EAAE;QACJ,IAAI,EAAE,WAAW;QACjB,SAAS,EAAE,gBAAgB;QAC3B,eAAe,EAAE;YACf,KAAK,EAAE;gBACL,cAAc,EAAE,OAAO;gBACvB,QAAQ,EAAE,IAAI;gBACd,IAAI,EAAE;oBACJ,IAAI,EAAE,UAAU;oBAChB,OAAO,EAAE;wBACP,IAAI,EAAE;4BACJ,IAAI,EAAE,WAAW;4BACjB,SAAS,EAAE,YAAY;yBACxB;qBACF;iBACF;aACF;YACD,QAAQ,EAAE;gBACR,cAAc,EAAE,UAAU;gBAC1B,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;SACF;KACF;CACF,CAAC;AAEF,AAAO,MAAM,6BAA6B,GAA+B;IACvE,IAAI,EAAE;QACJ,IAAI,EAAE,WAAW;QACjB,SAAS,EAAE,+BAA+B;QAC1C,eAAe,EAAE;YACf,KAAK,EAAE;gBACL,cAAc,EAAE,OAAO;gBACvB,IAAI,EAAE;oBACJ,IAAI,EAAE,UAAU;oBAChB,OAAO,EAAE;wBACP,IAAI,EAAE;4BACJ,IAAI,EAAE,WAAW;4BACjB,SAAS,EAAE,qBAAqB;yBACjC;qBACF;iBACF;aACF;SACF;KACF;CACF,CAAC;AAEF,AAAO,MAAM,mBAAmB,GAA+B;IAC7D,IAAI,EAAE;QACJ,IAAI,EAAE,WAAW;QACjB,SAAS,EAAE,qBAAqB;QAChC,eAAe,EAAE;YACf,EAAE,EAAE;gBACF,cAAc,EAAE,IAAI;gBACpB,QAAQ,EAAE,IAAI;gBACd,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;YACD,IAAI,EAAE;gBACJ,cAAc,EAAE,MAAM;gBACtB,QAAQ,EAAE,IAAI;gBACd,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;YACD,IAAI,EAAE;gBACJ,cAAc,EAAE,MAAM;gBACtB,QAAQ,EAAE,IAAI;gBACd,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;YACD,OAAO,EAAE;gBACP,cAAc,EAAE,oBAAoB;gBACpC,QAAQ,EAAE,IAAI;gBACd,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;YACD,eAAe,EAAE;gBACf,cAAc,EAAE,4BAA4B;gBAC5C,QAAQ,EAAE,IAAI;gBACd,IAAI,EAAE;oBACJ,IAAI,EAAE,UAAU;oBAChB,OAAO,EAAE;wBACP,IAAI,EAAE;4BACJ,IAAI,EAAE,QAAQ;yBACf;qBACF;iBACF;aACF;YACD,iBAAiB,EAAE;gBACjB,cAAc,EAAE,8BAA8B;gBAC9C,IAAI,EAAE;oBACJ,IAAI,EAAE,UAAU;oBAChB,OAAO,EAAE;wBACP,IAAI,EAAE;4BACJ,IAAI,EAAE,QAAQ;yBACf;qBACF;iBACF;aACF;SACF;KACF;CACF,CAAC;AAEF,AAAO,MAAM,mCAAmC,GAA+B;IAC7E,IAAI,EAAE;QACJ,IAAI,EAAE,WAAW;QACjB,SAAS,EAAE,qCAAqC;QAChD,eAAe,EAAE;YACf,KAAK,EAAE;gBACL,cAAc,EAAE,OAAO;gBACvB,IAAI,EAAE;oBACJ,IAAI,EAAE,UAAU;oBAChB,OAAO,EAAE;wBACP,IAAI,EAAE;4BACJ,IAAI,EAAE,WAAW;4BACjB,SAAS,EAAE,2BAA2B;yBACvC;qBACF;iBACF;aACF;YACD,QAAQ,EAAE;gBACR,cAAc,EAAE,UAAU;gBAC1B,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;SACF;KACF;CACF,CAAC;AAEF,AAAO,MAAM,iBAAiB,GAA+B;IAC3D,IAAI,EAAE;QACJ,IAAI,EAAE,WAAW;QACjB,SAAS,EAAE,mBAAmB;QAC9B,eAAe,EAAE;YACf,EAAE,EAAE;gBACF,cAAc,EAAE,IAAI;gBACpB,QAAQ,EAAE,IAAI;gBACd,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;YACD,IAAI,EAAE;gBACJ,cAAc,EAAE,MAAM;gBACtB,QAAQ,EAAE,IAAI;gBACd,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;YACD,IAAI,EAAE;gBACJ,cAAc,EAAE,MAAM;gBACtB,QAAQ,EAAE,IAAI;gBACd,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;SACF;KACF;CACF,CAAC;AAEF,AAAO,MAAM,oBAAoB,GAA+B;IAC9D,IAAI,EAAE;QACJ,IAAI,EAAE,WAAW;QACjB,SAAS,EAAE,sBAAsB;QACjC,eAAe,EAAE;YACf,KAAK,EAAE;gBACL,cAAc,EAAE,OAAO;gBACvB,QAAQ,EAAE,IAAI;gBACd,IAAI,EAAE;oBACJ,IAAI,EAAE,UAAU;oBAChB,OAAO,EAAE;wBACP,IAAI,EAAE;4BACJ,IAAI,EAAE,WAAW;4BACjB,SAAS,EAAE,kBAAkB;yBAC9B;qBACF;iBACF;aACF;YACD,QAAQ,EAAE;gBACR,cAAc,EAAE,UAAU;gBAC1B,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;SACF;KACF;CACF,CAAC;AAEF,AAAO,MAAM,iBAAiB,GAA+B;IAC3D,IAAI,EAAE;QACJ,IAAI,EAAE,WAAW;QACjB,SAAS,EAAE,mBAAmB;QAC9B,eAAe,EAAE;YACf,UAAU,EAAE;gBACV,cAAc,EAAE,YAAY;gBAC5B,QAAQ,EAAE,IAAI;gBACd,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;SACF;KACF;CACF,CAAC;AAEF,AAAO,MAAM,cAAc,GAA+B;IACxD,IAAI,EAAE;QACJ,IAAI,EAAE,WAAW;QACjB,SAAS,EAAE,gBAAgB;QAC3B,eAAe,EAAE;YACf,WAAW,EAAE;gBACX,cAAc,EAAE,aAAa;gBAC7B,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;YACD,MAAM,EAAE;gBACN,cAAc,EAAE,QAAQ;gBACxB,QAAQ,EAAE,IAAI;gBACd,IAAI,EAAE;oBACJ,IAAI,EAAE,UAAU;oBAChB,OAAO,EAAE;wBACP,IAAI,EAAE;4BACJ,IAAI,EAAE,WAAW;4BACjB,SAAS,EAAE,qBAAqB;yBACjC;qBACF;iBACF;aACF;YACD,oBAAoB,EAAE;gBACpB,cAAc,EAAE,sBAAsB;gBACtC,IAAI,EAAE;oBACJ,IAAI,EAAE,KAAK;iBACZ;aACF;SACF;KACF;CACF,CAAC;AAEF,AAAO,MAAM,mBAAmB,GAA+B;IAC7D,IAAI,EAAE;QACJ,IAAI,EAAE,WAAW;QACjB,SAAS,EAAE,qBAAqB;QAChC,eAAe,EAAE;YACf,IAAI,EAAE;gBACJ,cAAc,EAAE,MAAM;gBACtB,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;YACD,GAAG,EAAE;gBACH,cAAc,EAAE,KAAK;gBACrB,IAAI,EAAE;oBACJ,IAAI,EAAE,UAAU;oBAChB,OAAO,EAAE;wBACP,IAAI,EAAE;4BACJ,IAAI,EAAE,QAAQ;yBACf;qBACF;iBACF;aACF;SACF;KACF;CACF,CAAC;AAEF,AAAO,MAAM,gBAAgB,GAA+B;IAC1D,IAAI,EAAE;QACJ,IAAI,EAAE,WAAW;QACjB,SAAS,EAAE,kBAAkB;QAC7B,eAAe,EAAE;YACf,mBAAmB,EAAE;gBACnB,cAAc,EAAE,qBAAqB;gBACrC,IAAI,EAAE;oBACJ,IAAI,EAAE,SAAS;iBAChB;aACF;SACF;KACF;CACF,CAAC;AAEF,AAAO,MAAM,aAAa,GAA+B;IACvD,IAAI,EAAE;QACJ,IAAI,EAAE,WAAW;QACjB,SAAS,EAAE,eAAe;QAC1B,eAAe,EAAE;YACf,eAAe,EAAE;gBACf,cAAc,EAAE,iBAAiB;gBACjC,QAAQ,EAAE,IAAI;gBACd,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;YACD,OAAO,EAAE;gBACP,cAAc,EAAE,SAAS;gBACzB,IAAI,EAAE;oBACJ,IAAI,EAAE,UAAU;oBAChB,OAAO,EAAE;wBACP,IAAI,EAAE;4BACJ,IAAI,EAAE,WAAW;4BACjB,SAAS,EAAE,uBAAuB;yBACnC;qBACF;iBACF;aACF;SACF;KACF;CACF,CAAC;AAEF,AAAO,MAAM,qBAAqB,GAA+B;IAC/D,IAAI,EAAE;QACJ,IAAI,EAAE,WAAW;QACjB,SAAS,EAAE,uBAAuB;QAClC,eAAe,EAAE;YACf,MAAM,EAAE;gBACN,cAAc,EAAE,QAAQ;gBACxB,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;YACD,KAAK,EAAE;gBACL,cAAc,EAAE,OAAO;gBACvB,QAAQ,EAAE,IAAI;gBACd,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;YACD,OAAO,EAAE;gBACP,cAAc,EAAE,SAAS;gBACzB,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;SACF;KACF;CACF,CAAC;AAEF,AAAO,MAAM,wBAAwB,GAA+B;IAClE,IAAI,EAAE;QACJ,IAAI,EAAE,WAAW;QACjB,SAAS,EAAE,0BAA0B;QACrC,eAAe,EAAE;YACf,EAAE,EAAE;gBACF,cAAc,EAAE,IAAI;gBACpB,QAAQ,EAAE,IAAI;gBACd,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;YACD,IAAI,EAAE;gBACJ,cAAc,EAAE,MAAM;gBACtB,QAAQ,EAAE,IAAI;gBACd,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;YACD,IAAI,EAAE;gBACJ,cAAc,EAAE,MAAM;gBACtB,QAAQ,EAAE,IAAI;gBACd,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;YACD,IAAI,EAAE;gBACJ,cAAc,EAAE,MAAM;gBACtB,IAAI,EAAE;oBACJ,IAAI,EAAE,YAAY;oBAClB,KAAK,EAAE,EAAE,IAAI,EAAE,EAAE,IAAI,EAAE,QAAQ,EAAE,EAAE;iBACpC;aACF;SACF;KACF;CACF,CAAC;AAEF,AAAO,MAAM,sBAAsB,GAA+B;IAChE,IAAI,EAAE;QACJ,IAAI,EAAE,WAAW;QACjB,SAAS,EAAE,wBAAwB;QACnC,eAAe,EAAE;YACf,SAAS,EAAE;gBACT,cAAc,EAAE,WAAW;gBAC3B,QAAQ,EAAE,IAAI;gBACd,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;YACD,KAAK,EAAE;gBACL,cAAc,EAAE,OAAO;gBACvB,QAAQ,EAAE,IAAI;gBACd,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;YACD,GAAG,EAAE;gBACH,cAAc,EAAE,KAAK;gBACrB,QAAQ,EAAE,IAAI;gBACd,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;SACF;KACF;CACF,CAAC;AAEF,AAAO,MAAM,+BAA+B,GAA+B;IACzE,IAAI,EAAE;QACJ,IAAI,EAAE,WAAW;QACjB,SAAS,EAAE,iCAAiC;QAC5C,eAAe,EAAE;YACf,KAAK,EAAE;gBACL,cAAc,EAAE,OAAO;gBACvB,IAAI,EAAE;oBACJ,IAAI,EAAE,WAAW;oBACjB,SAAS,EAAE,eAAe;iBAC3B;aACF;YACD,MAAM,EAAE;gBACN,cAAc,EAAE,QAAQ;gBACxB,IAAI,EAAE;oBACJ,IAAI,EAAE,WAAW;oBACjB,SAAS,EAAE,eAAe;iBAC3B;aACF;SACF;KACF;CACF,CAAC;AAEF,AAAO,MAAM,aAAa,GAA+B;IACvD,IAAI,EAAE;QACJ,IAAI,EAAE,WAAW;QACjB,SAAS,EAAE,eAAe;QAC1B,eAAe,EAAE;YACf,GAAG,EAAE;gBACH,cAAc,EAAE,KAAK;gBACrB,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;YACD,GAAG,EAAE;gBACH,cAAc,EAAE,KAAK;gBACrB,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;SACF;KACF;CACF,CAAC;AAEF,AAAO,MAAM,UAAU,GAA+B;IACpD,IAAI,EAAE;QACJ,IAAI,EAAE,WAAW;QACjB,SAAS,EAAE,YAAY;QACvB,eAAe,EAAE;YACf,SAAS,EAAE;gBACT,cAAc,EAAE,WAAW;gBAC3B,IAAI,EAAE;oBACJ,IAAI,EAAE,UAAU;oBAChB,OAAO,EAAE;wBACP,IAAI,EAAE;4BACJ,IAAI,EAAE,QAAQ;yBACf;qBACF;iBACF;aACF;SACF;KACF;CACF,CAAC;AAEF,AAAO,MAAM,iBAAiB,GAA+B;IAC3D,IAAI,EAAE;QACJ,IAAI,EAAE,WAAW;QACjB,SAAS,EAAE,mBAAmB;QAC9B,eAAe,EAAE;YACf,IAAI,EAAE;gBACJ,cAAc,EAAE,MAAM;gBACtB,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;YACD,SAAS,EAAE;gBACT,cAAc,EAAE,WAAW;gBAC3B,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;YACD,OAAO,EAAE;gBACP,cAAc,EAAE,SAAS;gBACzB,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;SACF;KACF;CACF,CAAC;AAEF,AAAO,MAAM,mBAAmB,GAA+B;IAC7D,IAAI,EAAE;QACJ,IAAI,EAAE,WAAW;QACjB,SAAS,EAAE,qBAAqB;QAChC,eAAe,EAAE;YACf,IAAI,EAAE;gBACJ,cAAc,EAAE,MAAM;gBACtB,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;YACD,KAAK,EAAE;gBACL,cAAc,EAAE,OAAO;gBACvB,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;SACF;KACF;CACF,CAAC;AAEF,AAAO,MAAM,oCAAoC,GAA+B;IAC9E,IAAI,EAAE;QACJ,IAAI,EAAE,WAAW;QACjB,SAAS,EAAE,sCAAsC;QACjD,eAAe,EAAE;YACf,aAAa,EAAE;gBACb,cAAc,EAAE,eAAe;gBAC/B,IAAI,EAAE;oBACJ,IAAI,EAAE,UAAU;oBAChB,OAAO,EAAE;wBACP,IAAI,EAAE;4BACJ,IAAI,EAAE,WAAW;4BACjB,SAAS,EAAE,cAAc;yBAC1B;qBACF;iBACF;aACF;YACD,YAAY,EAAE;gBACZ,cAAc,EAAE,cAAc;gBAC9B,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;YACD,iBAAiB,EAAE;gBACjB,cAAc,EAAE,mBAAmB;gBACnC,IAAI,EAAE;oBACJ,IAAI,EAAE,SAAS;iBAChB;aACF;YACD,aAAa,EAAE;gBACb,cAAc,EAAE,eAAe;gBAC/B,QAAQ,EAAE,IAAI;gBACd,IAAI,EAAE;oBACJ,IAAI,EAAE,UAAU;iBACjB;aACF;YACD,aAAa,EAAE;gBACb,cAAc,EAAE,eAAe;gBAC/B,IAAI,EAAE;oBACJ,IAAI,EAAE,UAAU;iBACjB;aACF;YACD,kBAAkB,EAAE;gBAClB,cAAc,EAAE,oBAAoB;gBACpC,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;YACD,eAAe,EAAE;gBACf,cAAc,EAAE,iBAAiB;gBACjC,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;YACD,uBAAuB,EAAE;gBACvB,cAAc,EAAE,yBAAyB;gBACzC,IAAI,EAAE;oBACJ,IAAI,EAAE,UAAU;oBAChB,OAAO,EAAE;wBACP,IAAI,EAAE;4BACJ,IAAI,EAAE,WAAW;4BACjB,SAAS,EAAE,+BAA+B;yBAC3C;qBACF;iBACF;aACF;SACF;KACF;CACF,CAAC;AAEF,AAAO,MAAM,YAAY,GAA+B;IACtD,IAAI,EAAE;QACJ,IAAI,EAAE,WAAW;QACjB,SAAS,EAAE,cAAc;QACzB,eAAe,EAAE;YACf,IAAI,EAAE;gBACJ,cAAc,EAAE,MAAM;gBACtB,QAAQ,EAAE,IAAI;gBACd,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;YACD,oBAAoB,EAAE;gBACpB,cAAc,EAAE,sBAAsB;gBACtC,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;YACD,kBAAkB,EAAE;gBAClB,cAAc,EAAE,oBAAoB;gBACpC,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;YACD,UAAU,EAAE;gBACV,cAAc,EAAE,YAAY;gBAC5B,IAAI,EAAE;oBACJ,IAAI,EAAE,WAAW;oBACjB,SAAS,EAAE,kBAAkB;iBAC9B;aACF;SACF;KACF;CACF,CAAC;AAEF,AAAO,MAAM,gBAAgB,GAA+B;IAC1D,IAAI,EAAE;QACJ,IAAI,EAAE,WAAW;QACjB,SAAS,EAAE,kBAAkB;QAC7B,eAAe,EAAE;YACf,WAAW,EAAE;gBACX,cAAc,EAAE,aAAa;gBAC7B,IAAI,EAAE;oBACJ,IAAI,EAAE,WAAW;oBACjB,SAAS,EAAE,uBAAuB;iBACnC;aACF;YACD,cAAc,EAAE;gBACd,cAAc,EAAE,gBAAgB;gBAChC,IAAI,EAAE;oBACJ,IAAI,EAAE,UAAU;oBAChB,OAAO,EAAE;wBACP,IAAI,EAAE;4BACJ,IAAI,EAAE,WAAW;4BACjB,SAAS,EAAE,yBAAyB;yBACrC;qBACF;iBACF;aACF;SACF;KACF;CACF,CAAC;AAEF,AAAO,MAAM,0BAA0B,GAA+B;IACpE,IAAI,EAAE;QACJ,IAAI,EAAE,WAAW;QACjB,SAAS,EAAE,4BAA4B;QACvC,eAAe,EAAE;YACf,4BAA4B,EAAE;gBAC5B,cAAc,EAAE,8BAA8B;gBAC9C,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;YACD,2BAA2B,EAAE;gBAC3B,cAAc,EAAE,6BAA6B;gBAC7C,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;SACF;KACF;CACF,CAAC;AAEF,AAAO,MAAM,mBAAmB,GAA+B;IAC7D,IAAI,EAAE;QACJ,IAAI,EAAE,WAAW;QACjB,SAAS,EAAE,qBAAqB;QAChC,eAAe,EAAE;YACf,mBAAmB,EAAE;gBACnB,cAAc,EAAE,qBAAqB;gBACrC,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;SACF;KACF;CACF,CAAC;AAEF,AAAO,MAAM,6BAA6B,GAA+B;IACvE,IAAI,EAAE;QACJ,IAAI,EAAE,WAAW;QACjB,SAAS,EAAE,+BAA+B;QAC1C,eAAe,EAAE;YACf,IAAI,EAAE;gBACJ,cAAc,EAAE,MAAM;gBACtB,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;YACD,gBAAgB,EAAE;gBAChB,cAAc,EAAE,kBAAkB;gBAClC,IAAI,EAAE;oBACJ,IAAI,EAAE,WAAW;oBACjB,SAAS,EAAE,yBAAyB;iBACrC;aACF;YACD,4BAA4B,EAAE;gBAC5B,cAAc,EAAE,8BAA8B;gBAC9C,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;YACD,kBAAkB,EAAE;gBAClB,cAAc,EAAE,oBAAoB;gBACpC,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;YACD,UAAU,EAAE;gBACV,cAAc,EAAE,YAAY;gBAC5B,IAAI,EAAE;oBACJ,IAAI,EAAE,WAAW;oBACjB,SAAS,EAAE,kBAAkB;iBAC9B;aACF;SACF;KACF;CACF,CAAC;AAEF,AAAO,MAAM,uBAAuB,GAA+B;IACjE,IAAI,EAAE;QACJ,IAAI,EAAE,WAAW;QACjB,SAAS,EAAE,yBAAyB;QACpC,eAAe,EAAE;YACf,IAAI,EAAE;gBACJ,cAAc,EAAE,MAAM;gBACtB,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;YACD,IAAI,EAAE;gBACJ,cAAc,EAAE,MAAM;gBACtB,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;SACF;KACF;CACF,CAAC;AAEF,AAAO,MAAM,iCAAiC,GAA+B;IAC3E,IAAI,EAAE;QACJ,IAAI,EAAE,WAAW;QACjB,SAAS,EAAE,mCAAmC;QAC9C,eAAe,EAAE;YACf,MAAM,EAAE;gBACN,cAAc,EAAE,QAAQ;gBACxB,IAAI,EAAE;oBACJ,IAAI,EAAE,WAAW;oBACjB,SAAS,EAAE,8BAA8B;iBAC1C;aACF;YACD,WAAW,EAAE;gBACX,cAAc,EAAE,aAAa;gBAC7B,IAAI,EAAE;oBACJ,IAAI,EAAE,WAAW;oBACjB,SAAS,EAAE,oBAAoB;iBAChC;aACF;YACD,cAAc,EAAE;gBACd,cAAc,EAAE,gBAAgB;gBAChC,IAAI,EAAE;oBACJ,IAAI,EAAE,UAAU;oBAChB,OAAO,EAAE;wBACP,IAAI,EAAE;4BACJ,IAAI,EAAE,WAAW;4BACjB,SAAS,EAAE,sBAAsB;yBAClC;qBACF;iBACF;aACF;SACF;KACF;CACF,CAAC;AAEF,AAAO,MAAM,4BAA4B,GAA+B;IACtE,IAAI,EAAE;QACJ,IAAI,EAAE,WAAW;QACjB,SAAS,EAAE,8BAA8B;QACzC,eAAe,EAAE;YACf,EAAE,EAAE;gBACF,cAAc,EAAE,IAAI;gBACpB,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;YACD,GAAG,EAAE;gBACH,cAAc,EAAE,KAAK;gBACrB,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;SACF;KACF;CACF,CAAC;AAEF,AAAO,MAAM,gBAAgB,GAA+B;IAC1D,IAAI,EAAE;QACJ,IAAI,EAAE,WAAW;QACjB,SAAS,EAAE,kBAAkB;QAC7B,eAAe,EAAE;YACf,QAAQ,EAAE;gBACR,cAAc,EAAE,UAAU;gBAC1B,QAAQ,EAAE,IAAI;gBACd,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;YACD,WAAW,EAAE;gBACX,cAAc,EAAE,aAAa;gBAC7B,IAAI,EAAE;oBACJ,IAAI,EAAE,MAAM;oBACZ,aAAa,EAAE,CAAC,MAAM,EAAE,UAAU,EAAE,WAAW,CAAC;iBACjD;aACF;YACD,MAAM,EAAE;gBACN,cAAc,EAAE,QAAQ;gBACxB,IAAI,EAAE;oBACJ,IAAI,EAAE,WAAW;oBACjB,SAAS,EAAE,8BAA8B;iBAC1C;aACF;SACF;KACF;CACF,CAAC;AAEF,AAAO,MAAM,iBAAiB,GAA+B;IAC3D,IAAI,EAAE;QACJ,IAAI,EAAE,WAAW;QACjB,SAAS,EAAE,mBAAmB;QAC9B,eAAe,EAAE;YACf,eAAe,EAAE;gBACf,cAAc,EAAE,iBAAiB;gBACjC,QAAQ,EAAE,IAAI;gBACd,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;YACD,OAAO,EAAE;gBACP,cAAc,EAAE,SAAS;gBACzB,QAAQ,EAAE,IAAI;gBACd,IAAI,EAAE;oBACJ,IAAI,EAAE,UAAU;oBAChB,OAAO,EAAE;wBACP,IAAI,EAAE;4BACJ,IAAI,EAAE,WAAW;4BACjB,SAAS,EAAE,2BAA2B;yBACvC;qBACF;iBACF;aACF;SACF;KACF;CACF,CAAC;AAEF,AAAO,MAAM,yBAAyB,GAA+B;IACnE,IAAI,EAAE;QACJ,IAAI,EAAE,WAAW;QACjB,SAAS,EAAE,2BAA2B;QACtC,eAAe,EAAE;YACf,MAAM,EAAE;gBACN,cAAc,EAAE,QAAQ;gBACxB,QAAQ,EAAE,IAAI;gBACd,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;YACD,KAAK,EAAE;gBACL,cAAc,EAAE,OAAO;gBACvB,QAAQ,EAAE,IAAI;gBACd,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;YACD,OAAO,EAAE;gBACP,cAAc,EAAE,SAAS;gBACzB,QAAQ,EAAE,IAAI;gBACd,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;YACD,QAAQ,EAAE;gBACR,cAAc,EAAE,UAAU;gBAC1B,QAAQ,EAAE,IAAI;gBACd,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;SACF;KACF;CACF,CAAC;AAEF,AAAO,MAAM,kBAAkB,GAA+B;IAC5D,IAAI,EAAE;QACJ,IAAI,EAAE,WAAW;QACjB,SAAS,EAAE,oBAAoB;QAC/B,eAAe,EAAE;YACf,SAAS,EAAE;gBACT,cAAc,EAAE,WAAW;gBAC3B,QAAQ,EAAE,IAAI;gBACd,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;YACD,wBAAwB,EAAE;gBACxB,cAAc,EAAE,0BAA0B;gBAC1C,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;SACF;KACF;CACF,CAAC;AAEF,AAAO,MAAM,kBAAkB,GAA+B;IAC5D,IAAI,EAAE;QACJ,IAAI,EAAE,WAAW;QACjB,SAAS,EAAE,oBAAoB;QAC/B,eAAe,EAAE;YACf,OAAO,EAAE;gBACP,cAAc,EAAE,SAAS;gBACzB,QAAQ,EAAE,IAAI;gBACd,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;YACD,MAAM,EAAE;gBACN,cAAc,EAAE,QAAQ;gBACxB,QAAQ,EAAE,IAAI;gBACd,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;YACD,MAAM,EAAE;gBACN,cAAc,EAAE,QAAQ;gBACxB,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;SACF;KACF;CACF,CAAC;AAEF,AAAO,MAAM,WAAW,GAA+B;IACrD,IAAI,EAAE;QACJ,IAAI,EAAE,WAAW;QACjB,SAAS,EAAE,aAAa;QACxB,eAAe,EAAE;YACf,KAAK,EAAE;gBACL,cAAc,EAAE,OAAO;gBACvB,QAAQ,EAAE,IAAI;gBACd,IAAI,EAAE;oBACJ,IAAI,EAAE,UAAU;oBAChB,OAAO,EAAE;wBACP,IAAI,EAAE;4BACJ,IAAI,EAAE,WAAW;4BACjB,SAAS,EAAE,SAAS;yBACrB;qBACF;iBACF;aACF;YACD,QAAQ,EAAE;gBACR,cAAc,EAAE,UAAU;gBAC1B,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;SACF;KACF;CACF,CAAC;AAEF,AAAO,MAAM,gBAAgB,GAA+B;IAC1D,IAAI,EAAE;QACJ,IAAI,EAAE,WAAW;QACjB,SAAS,EAAE,kBAAkB;QAC7B,eAAe,EAAE;YACf,KAAK,EAAE;gBACL,cAAc,EAAE,OAAO;gBACvB,QAAQ,EAAE,IAAI;gBACd,IAAI,EAAE;oBACJ,IAAI,EAAE,UAAU;oBAChB,OAAO,EAAE;wBACP,IAAI,EAAE;4BACJ,IAAI,EAAE,WAAW;4BACjB,SAAS,EAAE,cAAc;yBAC1B;qBACF;iBACF;aACF;YACD,QAAQ,EAAE;gBACR,cAAc,EAAE,UAAU;gBAC1B,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;SACF;KACF;CACF,CAAC;AAEF,AAAO,MAAM,uBAAuB,GAA+B;IACjE,IAAI,EAAE;QACJ,IAAI,EAAE,WAAW;QACjB,SAAS,EAAE,yBAAyB;QACpC,eAAe,EAAE;YACf,KAAK,EAAE;gBACL,cAAc,EAAE,OAAO;gBACvB,QAAQ,EAAE,IAAI;gBACd,IAAI,EAAE;oBACJ,IAAI,EAAE,UAAU;oBAChB,OAAO,EAAE;wBACP,IAAI,EAAE;4BACJ,IAAI,EAAE,WAAW;4BACjB,SAAS,EAAE,qBAAqB;yBACjC;qBACF;iBACF;aACF;YACD,QAAQ,EAAE;gBACR,cAAc,EAAE,UAAU;gBAC1B,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;SACF;KACF;CACF,CAAC;AAEF,AAAO,MAAM,sBAAsB,GAA+B;IAChE,IAAI,EAAE;QACJ,IAAI,EAAE,WAAW;QACjB,SAAS,EAAE,wBAAwB;QACnC,eAAe,EAAE;YACf,KAAK,EAAE;gBACL,cAAc,EAAE,OAAO;gBACvB,QAAQ,EAAE,IAAI;gBACd,IAAI,EAAE;oBACJ,IAAI,EAAE,UAAU;oBAChB,OAAO,EAAE;wBACP,IAAI,EAAE;4BACJ,IAAI,EAAE,WAAW;4BACjB,SAAS,EAAE,oBAAoB;yBAChC;qBACF;iBACF;aACF;YACD,QAAQ,EAAE;gBACR,cAAc,EAAE,UAAU;gBAC1B,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;SACF;KACF;CACF,CAAC;AAEF,AAAO,MAAM,6BAA6B,GAA+B;IACvE,IAAI,EAAE;QACJ,IAAI,EAAE,WAAW;QACjB,SAAS,EAAE,+BAA+B;QAC1C,eAAe,EAAE;YACf,KAAK,EAAE;gBACL,cAAc,EAAE,OAAO;gBACvB,QAAQ,EAAE,IAAI;gBACd,IAAI,EAAE;oBACJ,IAAI,EAAE,UAAU;oBAChB,OAAO,EAAE;wBACP,IAAI,EAAE;4BACJ,IAAI,EAAE,WAAW;4BACjB,SAAS,EAAE,2BAA2B;yBACvC;qBACF;iBACF;aACF;YACD,QAAQ,EAAE;gBACR,cAAc,EAAE,UAAU;gBAC1B,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;SACF;KACF;CACF,CAAC;AAEF,AAAO,MAAM,aAAa,GAA+B;IACvD,IAAI,EAAE;QACJ,IAAI,EAAE,WAAW;QACjB,SAAS,EAAE,eAAe;QAC1B,eAAe,EAAE;YACf,aAAa,EAAE;gBACb,cAAc,EAAE,eAAe;gBAC/B,QAAQ,EAAE,IAAI;gBACd,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;YACD,MAAM,EAAE;gBACN,cAAc,EAAE,QAAQ;gBACxB,IAAI,EAAE;oBACJ,IAAI,EAAE,UAAU;oBAChB,OAAO,EAAE;wBACP,IAAI,EAAE;4BACJ,IAAI,EAAE,WAAW;4BACjB,SAAS,EAAE,qBAAqB;yBACjC;qBACF;iBACF;aACF;SACF;KACF;CACF,CAAC;AAEF,AAAO,MAAM,iBAAiB,GAA+B;IAC3D,IAAI,EAAE;QACJ,IAAI,EAAE,WAAW;QACjB,SAAS,EAAE,mBAAmB;QAC9B,eAAe,EAAE;YACf,KAAK,EAAE;gBACL,cAAc,EAAE,OAAO;gBACvB,QAAQ,EAAE,IAAI;gBACd,IAAI,EAAE;oBACJ,IAAI,EAAE,UAAU;oBAChB,OAAO,EAAE;wBACP,IAAI,EAAE;4BACJ,IAAI,EAAE,WAAW;4BACjB,SAAS,EAAE,eAAe;yBAC3B;qBACF;iBACF;aACF;YACD,QAAQ,EAAE;gBACR,cAAc,EAAE,UAAU;gBAC1B,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;SACF;KACF;CACF,CAAC;AAEF,AAAO,MAAM,WAAW,GAA+B;IACrD,IAAI,EAAE;QACJ,IAAI,EAAE,WAAW;QACjB,SAAS,EAAE,aAAa;QACxB,eAAe,EAAE;YACf,IAAI,EAAE;gBACJ,cAAc,EAAE,MAAM;gBACtB,QAAQ,EAAE,IAAI;gBACd,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;YACD,QAAQ,EAAE;gBACR,cAAc,EAAE,UAAU;gBAC1B,QAAQ,EAAE,IAAI;gBACd,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;SACF;KACF;CACF,CAAC;AAEF,AAAO,MAAM,sBAAsB,GAA+B;IAChE,IAAI,EAAE;QACJ,IAAI,EAAE,WAAW;QACjB,SAAS,EAAE,wBAAwB;QACnC,eAAe,EAAE;YACf,KAAK,EAAE;gBACL,cAAc,EAAE,OAAO;gBACvB,QAAQ,EAAE,IAAI;gBACd,IAAI,EAAE;oBACJ,IAAI,EAAE,UAAU;oBAChB,OAAO,EAAE;wBACP,IAAI,EAAE;4BACJ,IAAI,EAAE,WAAW;4BACjB,SAAS,EAAE,oBAAoB;yBAChC;qBACF;iBACF;aACF;YACD,QAAQ,EAAE;gBACR,cAAc,EAAE,UAAU;gBAC1B,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;SACF;KACF;CACF,CAAC;AAEF,AAAO,MAAM,6BAA6B,GAA+B;IACvE,IAAI,EAAE;QACJ,IAAI,EAAE,WAAW;QACjB,SAAS,EAAE,+BAA+B;QAC1C,eAAe,EAAE;YACf,KAAK,EAAE;gBACL,cAAc,EAAE,OAAO;gBACvB,QAAQ,EAAE,IAAI;gBACd,IAAI,EAAE;oBACJ,IAAI,EAAE,UAAU;oBAChB,OAAO,EAAE;wBACP,IAAI,EAAE;4BACJ,IAAI,EAAE,WAAW;4BACjB,SAAS,EAAE,2BAA2B;yBACvC;qBACF;iBACF;aACF;YACD,QAAQ,EAAE;gBACR,cAAc,EAAE,UAAU;gBAC1B,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;SACF;KACF;CACF,CAAC;AAEF,AAAO,MAAM,2BAA2B,GAA+B;IACrE,IAAI,EAAE;QACJ,IAAI,EAAE,WAAW;QACjB,SAAS,EAAE,6BAA6B;QACxC,eAAe,EAAE;YACf,IAAI,EAAE;gBACJ,cAAc,EAAE,MAAM;gBACtB,QAAQ,EAAE,IAAI;gBACd,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;YACD,QAAQ,EAAE;gBACR,cAAc,EAAE,UAAU;gBAC1B,QAAQ,EAAE,IAAI;gBACd,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;YACD,IAAI,EAAE;gBACJ,cAAc,EAAE,MAAM;gBACtB,QAAQ,EAAE,IAAI;gBACd,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;YACD,QAAQ,EAAE;gBACR,cAAc,EAAE,qBAAqB;gBACrC,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;SACF;KACF;CACF,CAAC;AAEF,AAAO,MAAM,YAAY,GAA+B;IACtD,IAAI,EAAE;QACJ,IAAI,EAAE,WAAW;QACjB,SAAS,EAAE,cAAc;QACzB,eAAe,EAAE;YACf,EAAE,EAAE;gBACF,cAAc,EAAE,IAAI;gBACpB,QAAQ,EAAE,IAAI;gBACd,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;YACD,IAAI,EAAE;gBACJ,cAAc,EAAE,MAAM;gBACtB,QAAQ,EAAE,IAAI;gBACd,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;YACD,IAAI,EAAE;gBACJ,cAAc,EAAE,MAAM;gBACtB,QAAQ,EAAE,IAAI;gBACd,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;YACD,QAAQ,EAAE;gBACR,cAAc,EAAE,UAAU;gBAC1B,QAAQ,EAAE,IAAI;gBACd,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;YACD,IAAI,EAAE;gBACJ,cAAc,EAAE,MAAM;gBACtB,QAAQ,EAAE,IAAI;gBACd,IAAI,EAAE;oBACJ,IAAI,EAAE,YAAY;oBAClB,KAAK,EAAE,EAAE,IAAI,EAAE,EAAE,IAAI,EAAE,QAAQ,EAAE,EAAE;iBACpC;aACF;YACD,GAAG,EAAE;gBACH,cAAc,EAAE,KAAK;gBACrB,IAAI,EAAE;oBACJ,IAAI,EAAE,WAAW;oBACjB,SAAS,EAAE,aAAa;iBACzB;aACF;YACD,UAAU,EAAE;gBACV,cAAc,EAAE,YAAY;gBAC5B,IAAI,EAAE;oBACJ,IAAI,EAAE,WAAW;oBACjB,SAAS,EAAE,wBAAwB;iBACpC;aACF;SACF;KACF;CACF,CAAC;AAEF,AAAO,MAAM,WAAW,GAA+B;IACrD,IAAI,EAAE;QACJ,IAAI,EAAE,WAAW;QACjB,SAAS,EAAE,aAAa;QACxB,eAAe,EAAE;YACf,IAAI,EAAE;gBACJ,cAAc,EAAE,MAAM;gBACtB,QAAQ,EAAE,IAAI;gBACd,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;YACD,IAAI,EAAE;gBACJ,cAAc,EAAE,MAAM;gBACtB,QAAQ,EAAE,IAAI;gBACd,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;SACF;KACF;CACF,CAAC;AAEF,AAAO,MAAM,sBAAsB,GAA+B;IAChE,IAAI,EAAE;QACJ,IAAI,EAAE,WAAW;QACjB,SAAS,EAAE,wBAAwB;QACnC,eAAe,EAAE;YACf,cAAc,EAAE;gBACd,cAAc,EAAE,gBAAgB;gBAChC,IAAI,EAAE;oBACJ,IAAI,EAAE,WAAW;oBACjB,SAAS,EAAE,4BAA4B;iBACxC;aACF;YACD,YAAY,EAAE;gBACZ,cAAc,EAAE,cAAc;gBAC9B,IAAI,EAAE;oBACJ,IAAI,EAAE,WAAW;oBACjB,SAAS,EAAE,kBAAkB;iBAC9B;aACF;SACF;KACF;CACF,CAAC;AAEF,AAAO,MAAM,0BAA0B,GAA+B;IACpE,IAAI,EAAE;QACJ,IAAI,EAAE,WAAW;QACjB,SAAS,EAAE,4BAA4B;QACvC,eAAe,EAAE;YACf,iBAAiB,EAAE;gBACjB,cAAc,EAAE,mBAAmB;gBACnC,QAAQ,EAAE,IAAI;gBACd,IAAI,EAAE;oBACJ,IAAI,EAAE,UAAU;oBAChB,OAAO,EAAE;wBACP,IAAI,EAAE;4BACJ,IAAI,EAAE,WAAW;4BACjB,SAAS,EAAE,aAAa;yBACzB;qBACF;iBACF;aACF;SACF;KACF;CACF,CAAC;AAEF,AAAO,MAAM,gBAAgB,GAA+B;IAC1D,IAAI,EAAE;QACJ,IAAI,EAAE,WAAW;QACjB,SAAS,EAAE,kBAAkB;QAC7B,eAAe,EAAE;YACf,oBAAoB,EAAE;gBACpB,cAAc,EAAE,sBAAsB;gBACtC,QAAQ,EAAE,IAAI;gBACd,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;YACD,mBAAmB,EAAE;gBACnB,cAAc,EAAE,qBAAqB;gBACrC,QAAQ,EAAE,IAAI;gBACd,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;YACD,SAAS,EAAE;gBACT,cAAc,EAAE,WAAW;gBAC3B,QAAQ,EAAE,IAAI;gBACd,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;YACD,QAAQ,EAAE;gBACR,cAAc,EAAE,UAAU;gBAC1B,QAAQ,EAAE,IAAI;gBACd,IAAI,EAAE;oBACJ,IAAI,EAAE,UAAU;oBAChB,OAAO,EAAE;wBACP,IAAI,EAAE;4BACJ,IAAI,EAAE,WAAW;4BACjB,SAAS,EAAE,4BAA4B;yBACxC;qBACF;iBACF;aACF;SACF;KACF;CACF,CAAC;AAEF,AAAO,MAAM,0BAA0B,GAA+B;IACpE,IAAI,EAAE;QACJ,IAAI,EAAE,WAAW;QACjB,SAAS,EAAE,4BAA4B;QACvC,eAAe,EAAE;YACf,IAAI,EAAE;gBACJ,cAAc,EAAE,MAAM;gBACtB,QAAQ,EAAE,IAAI;gBACd,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;YACD,aAAa,EAAE;gBACb,cAAc,EAAE,eAAe;gBAC/B,QAAQ,EAAE,IAAI;gBACd,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;YACD,OAAO,EAAE;gBACP,cAAc,EAAE,SAAS;gBACzB,QAAQ,EAAE,IAAI;gBACd,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;YACD,IAAI,EAAE;gBACJ,cAAc,EAAE,MAAM;gBACtB,QAAQ,EAAE,IAAI;gBACd,IAAI,EAAE;oBACJ,IAAI,EAAE,UAAU;iBACjB;aACF;YACD,KAAK,EAAE;gBACL,cAAc,EAAE,OAAO;gBACvB,IAAI,EAAE;oBACJ,IAAI,EAAE,MAAM;oBACZ,aAAa,EAAE,CAAC,MAAM,EAAE,SAAS,EAAE,OAAO,CAAC;iBAC5C;aACF;SACF;KACF;CACF,CAAC;AAEF,AAAO,MAAM,sBAAsB,GAA+B;IAChE,IAAI,EAAE;QACJ,IAAI,EAAE,WAAW;QACjB,SAAS,EAAE,wBAAwB;QACnC,eAAe,EAAE;YACf,KAAK,EAAE;gBACL,cAAc,EAAE,OAAO;gBACvB,QAAQ,EAAE,IAAI;gBACd,IAAI,EAAE;oBACJ,IAAI,EAAE,UAAU;oBAChB,OAAO,EAAE;wBACP,IAAI,EAAE;4BACJ,IAAI,EAAE,WAAW;4BACjB,SAAS,EAAE,cAAc;yBAC1B;qBACF;iBACF;aACF;YACD,QAAQ,EAAE;gBACR,cAAc,EAAE,UAAU;gBAC1B,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;SACF;KACF;CACF,CAAC;AAEF,AAAO,MAAM,gBAAgB,GAA+B;IAC1D,IAAI,EAAE;QACJ,IAAI,EAAE,WAAW;QACjB,SAAS,EAAE,kBAAkB;QAC7B,eAAe,EAAE;YACf,EAAE,EAAE;gBACF,cAAc,EAAE,IAAI;gBACpB,QAAQ,EAAE,IAAI;gBACd,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;YACD,IAAI,EAAE;gBACJ,cAAc,EAAE,MAAM;gBACtB,QAAQ,EAAE,IAAI;gBACd,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;YACD,IAAI,EAAE;gBACJ,cAAc,EAAE,MAAM;gBACtB,QAAQ,EAAE,IAAI;gBACd,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;YACD,QAAQ,EAAE;gBACR,cAAc,EAAE,UAAU;gBAC1B,QAAQ,EAAE,IAAI;gBACd,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;YACD,GAAG,EAAE;gBACH,cAAc,EAAE,KAAK;gBACrB,IAAI,EAAE;oBACJ,IAAI,EAAE,WAAW;oBACjB,SAAS,EAAE,qBAAqB;iBACjC;aACF;YACD,UAAU,EAAE;gBACV,cAAc,EAAE,YAAY;gBAC5B,IAAI,EAAE;oBACJ,IAAI,EAAE,WAAW;oBACjB,SAAS,EAAE,4BAA4B;iBACxC;aACF;SACF;KACF;CACF,CAAC;AAEF,AAAO,MAAM,mBAAmB,GAA+B;IAC7D,IAAI,EAAE;QACJ,IAAI,EAAE,WAAW;QACjB,SAAS,EAAE,qBAAqB;QAChC,eAAe,EAAE;YACf,IAAI,EAAE;gBACJ,cAAc,EAAE,MAAM;gBACtB,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;YACD,IAAI,EAAE;gBACJ,cAAc,EAAE,MAAM;gBACtB,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;YACD,QAAQ,EAAE;gBACR,cAAc,EAAE,UAAU;gBAC1B,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;SACF;KACF;CACF,CAAC;AAEF,AAAO,MAAM,0BAA0B,GAA+B;IACpE,IAAI,EAAE;QACJ,IAAI,EAAE,WAAW;QACjB,SAAS,EAAE,4BAA4B;QACvC,eAAe,EAAE;YACf,QAAQ,EAAE;gBACR,cAAc,EAAE,UAAU;gBAC1B,QAAQ,EAAE,IAAI;gBACd,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;SACF;KACF;CACF,CAAC;AAEF,AAAO,MAAM,0BAA0B,GAA+B;IACpE,IAAI,EAAE;QACJ,IAAI,EAAE,WAAW;QACjB,SAAS,EAAE,4BAA4B;QACvC,eAAe,EAAE;YACf,KAAK,EAAE;gBACL,cAAc,EAAE,OAAO;gBACvB,QAAQ,EAAE,IAAI;gBACd,IAAI,EAAE;oBACJ,IAAI,EAAE,UAAU;oBAChB,OAAO,EAAE;wBACP,IAAI,EAAE;4BACJ,IAAI,EAAE,WAAW;4BACjB,SAAS,EAAE,kBAAkB;yBAC9B;qBACF;iBACF;aACF;YACD,QAAQ,EAAE;gBACR,cAAc,EAAE,UAAU;gBAC1B,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;SACF;KACF;CACF,CAAC;AAEF,AAAO,MAAM,YAAY,GAA+B;IACtD,IAAI,EAAE;QACJ,IAAI,EAAE,WAAW;QACjB,SAAS,EAAE,cAAc;QACzB,eAAe,EAAE;YACf,EAAE,EAAE;gBACF,cAAc,EAAE,IAAI;gBACpB,QAAQ,EAAE,IAAI;gBACd,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;YACD,IAAI,EAAE;gBACJ,cAAc,EAAE,MAAM;gBACtB,QAAQ,EAAE,IAAI;gBACd,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;YACD,IAAI,EAAE;gBACJ,cAAc,EAAE,MAAM;gBACtB,QAAQ,EAAE,IAAI;gBACd,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;YACD,QAAQ,EAAE;gBACR,cAAc,EAAE,UAAU;gBAC1B,QAAQ,EAAE,IAAI;gBACd,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;YACD,IAAI,EAAE;gBACJ,cAAc,EAAE,MAAM;gBACtB,IAAI,EAAE;oBACJ,IAAI,EAAE,YAAY;oBAClB,KAAK,EAAE,EAAE,IAAI,EAAE,EAAE,IAAI,EAAE,QAAQ,EAAE,EAAE;iBACpC;aACF;YACD,UAAU,EAAE;gBACV,cAAc,EAAE,YAAY;gBAC5B,IAAI,EAAE;oBACJ,IAAI,EAAE,WAAW;oBACjB,SAAS,EAAE,wBAAwB;iBACpC;aACF;SACF;KACF;CACF,CAAC;AAEF,AAAO,MAAM,sBAAsB,GAA+B;IAChE,IAAI,EAAE;QACJ,IAAI,EAAE,WAAW;QACjB,SAAS,EAAE,wBAAwB;QACnC,eAAe,EAAE;YACf,UAAU,EAAE;gBACV,cAAc,EAAE,YAAY;gBAC5B,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;YACD,aAAa,EAAE;gBACb,cAAc,EAAE,eAAe;gBAC/B,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;YACD,gBAAgB,EAAE;gBAChB,cAAc,EAAE,kBAAkB;gBAClC,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;YACD,iBAAiB,EAAE;gBACjB,cAAc,EAAE,mBAAmB;gBACnC,IAAI,EAAE;oBACJ,IAAI,EAAE,SAAS;iBAChB;aACF;YACD,kBAAkB,EAAE;gBAClB,cAAc,EAAE,oBAAoB;gBACpC,IAAI,EAAE;oBACJ,IAAI,EAAE,SAAS;iBAChB;aACF;YACD,WAAW,EAAE;gBACX,cAAc,EAAE,aAAa;gBAC7B,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;YACD,WAAW,EAAE;gBACX,cAAc,EAAE,aAAa;gBAC7B,IAAI,EAAE;oBACJ,IAAI,EAAE,WAAW;oBACjB,SAAS,EAAE,yBAAyB;iBACrC;aACF;YACD,SAAS,EAAE;gBACT,cAAc,EAAE,WAAW;gBAC3B,IAAI,EAAE;oBACJ,IAAI,EAAE,WAAW;oBACjB,SAAS,EAAE,uBAAuB;iBACnC;aACF;YACD,cAAc,EAAE;gBACd,cAAc,EAAE,gBAAgB;gBAChC,IAAI,EAAE;oBACJ,IAAI,EAAE,WAAW;oBACjB,SAAS,EAAE,4BAA4B;iBACxC;aACF;YACD,gBAAgB,EAAE;gBAChB,cAAc,EAAE,kBAAkB;gBAClC,IAAI,EAAE;oBACJ,IAAI,EAAE,WAAW;oBACjB,SAAS,EAAE,8BAA8B;iBAC1C;aACF;YACD,iBAAiB,EAAE;gBACjB,cAAc,EAAE,mBAAmB;gBACnC,QAAQ,EAAE,IAAI;gBACd,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;YACD,QAAQ,EAAE;gBACR,cAAc,EAAE,UAAU;gBAC1B,QAAQ,EAAE,IAAI;gBACd,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;SACF;KACF;CACF,CAAC;AAEF,AAAO,MAAM,uBAAuB,GAA+B;IACjE,IAAI,EAAE;QACJ,IAAI,EAAE,WAAW;QACjB,SAAS,EAAE,yBAAyB;QACpC,eAAe,EAAE;YACf,KAAK,EAAE;gBACL,cAAc,EAAE,OAAO;gBACvB,IAAI,EAAE;oBACJ,IAAI,EAAE,UAAU;oBAChB,OAAO,EAAE;wBACP,IAAI,EAAE;4BACJ,IAAI,EAAE,WAAW;4BACjB,SAAS,EAAE,mCAAmC;yBAC/C;qBACF;iBACF;aACF;SACF;KACF;CACF,CAAC;AAEF,AAAO,MAAM,iCAAiC,GAA+B;IAC3E,IAAI,EAAE;QACJ,IAAI,EAAE,WAAW;QACjB,SAAS,EAAE,mCAAmC;QAC9C,eAAe,EAAE;YACf,IAAI,EAAE;gBACJ,cAAc,EAAE,MAAM;gBACtB,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;YACD,GAAG,EAAE;gBACH,cAAc,EAAE,KAAK;gBACrB,IAAI,EAAE;oBACJ,IAAI,EAAE,WAAW;oBACjB,SAAS,EAAE,qBAAqB;iBACjC;aACF;SACF;KACF;CACF,CAAC;AAEF,AAAO,MAAM,qBAAqB,GAA+B;IAC/D,IAAI,EAAE;QACJ,IAAI,EAAE,WAAW;QACjB,SAAS,EAAE,uBAAuB;QAClC,eAAe,EAAE;YACf,OAAO,EAAE;gBACP,cAAc,EAAE,SAAS;gBACzB,IAAI,EAAE;oBACJ,IAAI,EAAE,UAAU;oBAChB,OAAO,EAAE;wBACP,IAAI,EAAE;4BACJ,IAAI,EAAE,WAAW;4BACjB,SAAS,EAAE,8BAA8B;yBAC1C;qBACF;iBACF;aACF;SACF;KACF;CACF,CAAC;AAEF,AAAO,MAAM,4BAA4B,GAA+B;IACtE,IAAI,EAAE;QACJ,IAAI,EAAE,WAAW;QACjB,SAAS,EAAE,8BAA8B;QACzC,eAAe,EAAE;YACf,WAAW,EAAE;gBACX,cAAc,EAAE,aAAa;gBAC7B,IAAI,EAAE;oBACJ,IAAI,EAAE,WAAW;oBACjB,SAAS,EAAE,aAAa;iBACzB;aACF;YACD,iBAAiB,EAAE;gBACjB,cAAc,EAAE,mBAAmB;gBACnC,IAAI,EAAE;oBACJ,IAAI,EAAE,UAAU;oBAChB,OAAO,EAAE;wBACP,IAAI,EAAE;4BACJ,IAAI,EAAE,WAAW;4BACjB,SAAS,EAAE,8BAA8B;yBAC1C;qBACF;iBACF;aACF;SACF;KACF;CACF,CAAC;AAEF,AAAO,MAAM,4BAA4B,GAA+B;IACtE,IAAI,EAAE;QACJ,IAAI,EAAE,WAAW;QACjB,SAAS,EAAE,8BAA8B;QACzC,eAAe,EAAE;YACf,cAAc,EAAE;gBACd,cAAc,EAAE,gBAAgB;gBAChC,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;SACF;KACF;CACF,CAAC;AAEF,AAAO,MAAM,0BAA0B,GAA+B;IACpE,IAAI,EAAE;QACJ,IAAI,EAAE,WAAW;QACjB,SAAS,EAAE,4BAA4B;QACvC,eAAe,EAAE;YACf,0BAA0B,EAAE;gBAC1B,cAAc,EAAE,4BAA4B;gBAC5C,IAAI,EAAE;oBACJ,IAAI,EAAE,UAAU;oBAChB,OAAO,EAAE;wBACP,IAAI,EAAE;4BACJ,IAAI,EAAE,WAAW;4BACjB,SAAS,EAAE,2BAA2B;yBACvC;qBACF;iBACF;aACF;YACD,qBAAqB,EAAE;gBACrB,cAAc,EAAE,uBAAuB;gBACvC,IAAI,EAAE;oBACJ,IAAI,EAAE,WAAW;oBACjB,SAAS,EAAE,aAAa;iBACzB;aACF;SACF;KACF;CACF,CAAC;AAEF,AAAO,MAAM,yBAAyB,GAA+B;IACnE,IAAI,EAAE;QACJ,IAAI,EAAE,WAAW;QACjB,SAAS,EAAE,2BAA2B;QACtC,eAAe,EAAE;YACf,EAAE,EAAE;gBACF,cAAc,EAAE,IAAI;gBACpB,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;YACD,IAAI,EAAE;gBACJ,cAAc,EAAE,MAAM;gBACtB,QAAQ,EAAE,IAAI;gBACd,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;YACD,UAAU,EAAE;gBACV,cAAc,EAAE,YAAY;gBAC5B,IAAI,EAAE;oBACJ,IAAI,EAAE,WAAW;oBACjB,SAAS,EAAE,qCAAqC;iBACjD;aACF;SACF;KACF;CACF,CAAC;AAEF,AAAO,MAAM,mCAAmC,GAA+B;IAC7E,IAAI,EAAE;QACJ,IAAI,EAAE,WAAW;QACjB,SAAS,EAAE,qCAAqC;QAChD,eAAe,EAAE;YACf,wBAAwB,EAAE;gBACxB,cAAc,EAAE,0BAA0B;gBAC1C,QAAQ,EAAE,IAAI;gBACd,IAAI,EAAE;oBACJ,IAAI,EAAE,UAAU;oBAChB,OAAO,EAAE;wBACP,IAAI,EAAE;4BACJ,IAAI,EAAE,WAAW;4BACjB,SAAS,EAAE,qCAAqC;yBACjD;qBACF;iBACF;aACF;SACF;KACF;CACF,CAAC;AAEF,AAAO,MAAM,mCAAmC,GAA+B;IAC7E,IAAI,EAAE;QACJ,IAAI,EAAE,WAAW;QACjB,SAAS,EAAE,qCAAqC;QAChD,eAAe,EAAE;YACf,IAAI,EAAE;gBACJ,cAAc,EAAE,MAAM;gBACtB,QAAQ,EAAE,IAAI;gBACd,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;YACD,UAAU,EAAE;gBACV,cAAc,EAAE,YAAY;gBAC5B,IAAI,EAAE;oBACJ,IAAI,EAAE,WAAW;oBACjB,SAAS,EAAE,+CAA+C;iBAC3D;aACF;SACF;KACF;CACF,CAAC;AAEF,AAAO,MAAM,6CAA6C,GAA+B;IACvF,IAAI,EAAE;QACJ,IAAI,EAAE,WAAW;QACjB,SAAS,EAAE,+CAA+C;QAC1D,eAAe,EAAE;YACf,eAAe,EAAE;gBACf,cAAc,EAAE,iBAAiB;gBACjC,IAAI,EAAE;oBACJ,IAAI,EAAE,WAAW;oBACjB,SAAS,EAAE,aAAa;iBACzB;aACF;YACD,MAAM,EAAE;gBACN,cAAc,EAAE,QAAQ;gBACxB,IAAI,EAAE;oBACJ,IAAI,EAAE,WAAW;oBACjB,SAAS,EAAE,aAAa;iBACzB;aACF;YACD,gBAAgB,EAAE;gBAChB,cAAc,EAAE,kBAAkB;gBAClC,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;SACF;KACF;CACF,CAAC;AAEF,AAAO,MAAM,4BAA4B,GAA+B;IACtE,IAAI,EAAE;QACJ,IAAI,EAAE,WAAW;QACjB,SAAS,EAAE,8BAA8B;QACzC,eAAe,EAAE;YACf,UAAU,EAAE;gBACV,cAAc,EAAE,YAAY;gBAC5B,IAAI,EAAE;oBACJ,IAAI,EAAE,UAAU;oBAChB,OAAO,EAAE;wBACP,IAAI,EAAE;4BACJ,IAAI,EAAE,WAAW;4BACjB,SAAS,EAAE,WAAW;yBACvB;qBACF;iBACF;aACF;SACF;KACF;CACF,CAAC;AAEF,AAAO,MAAM,SAAS,GAA+B;IACnD,IAAI,EAAE;QACJ,IAAI,EAAE,WAAW;QACjB,SAAS,EAAE,WAAW;QACtB,eAAe,EAAE;YACf,IAAI,EAAE;gBACJ,cAAc,EAAE,MAAM;gBACtB,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;YACD,UAAU,EAAE;gBACV,cAAc,EAAE,YAAY;gBAC5B,IAAI,EAAE;oBACJ,IAAI,EAAE,WAAW;oBACjB,SAAS,EAAE,iCAAiC;iBAC7C;aACF;SACF;KACF;CACF,CAAC;AAEF,AAAO,MAAM,+BAA+B,GAA+B;IACzE,IAAI,EAAE;QACJ,IAAI,EAAE,WAAW;QACjB,SAAS,EAAE,iCAAiC;QAC5C,eAAe,EAAE;YACf,SAAS,EAAE;gBACT,cAAc,EAAE,WAAW;gBAC3B,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;YACD,IAAI,EAAE;gBACJ,cAAc,EAAE,MAAM;gBACtB,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;YACD,kBAAkB,EAAE;gBAClB,cAAc,EAAE,oBAAoB;gBACpC,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;YACD,uBAAuB,EAAE;gBACvB,cAAc,EAAE,yBAAyB;gBACzC,IAAI,EAAE;oBACJ,IAAI,EAAE,SAAS;iBAChB;aACF;YACD,QAAQ,EAAE;gBACR,cAAc,EAAE,UAAU;gBAC1B,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;YACD,iBAAiB,EAAE;gBACjB,cAAc,EAAE,mBAAmB;gBACnC,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;YACD,6BAA6B,EAAE;gBAC7B,cAAc,EAAE,+BAA+B;gBAC/C,IAAI,EAAE;oBACJ,IAAI,EAAE,WAAW;oBACjB,SAAS,EAAE,qCAAqC;iBACjD;aACF;YACD,cAAc,EAAE;gBACd,cAAc,EAAE,gBAAgB;gBAChC,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;YACD,iBAAiB,EAAE;gBACjB,cAAc,EAAE,mBAAmB;gBACnC,QAAQ,EAAE,IAAI;gBACd,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;YACD,cAAc,EAAE;gBACd,cAAc,EAAE,gBAAgB;gBAChC,IAAI,EAAE;oBACJ,IAAI,EAAE,UAAU;oBAChB,OAAO,EAAE;wBACP,IAAI,EAAE;4BACJ,IAAI,EAAE,QAAQ;yBACf;qBACF;iBACF;aACF;SACF;KACF;CACF,CAAC;AAEF,AAAO,MAAM,mCAAmC,GAA+B;IAC7E,IAAI,EAAE;QACJ,IAAI,EAAE,WAAW;QACjB,SAAS,EAAE,qCAAqC;QAChD,eAAe,EAAE;YACf,WAAW,EAAE;gBACX,cAAc,EAAE,aAAa;gBAC7B,IAAI,EAAE;oBACJ,IAAI,EAAE,WAAW;oBACjB,SAAS,EAAE,aAAa;iBACzB;aACF;YACD,SAAS,EAAE;gBACT,cAAc,EAAE,WAAW;gBAC3B,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;SACF;KACF;CACF,CAAC;AAEF,AAAO,MAAM,kBAAkB,GAA+B;IAC5D,IAAI,EAAE;QACJ,IAAI,EAAE,WAAW;QACjB,SAAS,EAAE,oBAAoB;QAC/B,eAAe,EAAE;YACf,IAAI,EAAE;gBACJ,cAAc,EAAE,MAAM;gBACtB,IAAI,EAAE;oBACJ,IAAI,EAAE,YAAY;oBAClB,KAAK,EAAE,EAAE,IAAI,EAAE,EAAE,IAAI,EAAE,QAAQ,EAAE,EAAE;iBACpC;aACF;SACF;KACF;CACF,CAAC;AAEF,AAAO,MAAM,wBAAwB,GAA+B;IAClE,IAAI,EAAE;QACJ,IAAI,EAAE,WAAW;QACjB,SAAS,EAAE,0BAA0B;QACrC,eAAe,EAAE;YACf,YAAY,EAAE;gBACZ,cAAc,EAAE,cAAc;gBAC9B,IAAI,EAAE;oBACJ,IAAI,EAAE,WAAW;oBACjB,SAAS,EAAE,6BAA6B;iBACzC;aACF;YACD,UAAU,EAAE;gBACV,cAAc,EAAE,YAAY;gBAC5B,QAAQ,EAAE,IAAI;gBACd,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;YACD,UAAU,EAAE;gBACV,cAAc,EAAE,YAAY;gBAC5B,QAAQ,EAAE,IAAI;gBACd,IAAI,EAAE;oBACJ,IAAI,EAAE,UAAU;oBAChB,OAAO,EAAE;wBACP,IAAI,EAAE;4BACJ,IAAI,EAAE,QAAQ;yBACf;qBACF;iBACF;aACF;YACD,QAAQ,EAAE;gBACR,cAAc,EAAE,UAAU;gBAC1B,QAAQ,EAAE,IAAI;gBACd,IAAI,EAAE;oBACJ,IAAI,EAAE,UAAU;oBAChB,OAAO,EAAE;wBACP,IAAI,EAAE;4BACJ,IAAI,EAAE,WAAW;4BACjB,SAAS,EAAE,4BAA4B;yBACxC;qBACF;iBACF;aACF;SACF;KACF;CACF,CAAC;AAEF,AAAO,MAAM,2BAA2B,GAA+B;IACrE,IAAI,EAAE;QACJ,IAAI,EAAE,WAAW;QACjB,SAAS,EAAE,6BAA6B;QACxC,eAAe,EAAE;YACf,eAAe,EAAE;gBACf,cAAc,EAAE,iBAAiB;gBACjC,QAAQ,EAAE,IAAI;gBACd,IAAI,EAAE;oBACJ,IAAI,EAAE,UAAU;oBAChB,OAAO,EAAE;wBACP,IAAI,EAAE;4BACJ,IAAI,EAAE,WAAW;4BACjB,SAAS,EAAE,iBAAiB;yBAC7B;qBACF;iBACF;aACF;SACF;KACF;CACF,CAAC;AAEF,AAAO,MAAM,eAAe,GAA+B;IACzD,IAAI,EAAE;QACJ,IAAI,EAAE,WAAW;QACjB,SAAS,EAAE,iBAAiB;QAC5B,eAAe,EAAE;YACf,IAAI,EAAE;gBACJ,cAAc,EAAE,MAAM;gBACtB,QAAQ,EAAE,IAAI;gBACd,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;YACD,KAAK,EAAE;gBACL,cAAc,EAAE,OAAO;gBACvB,QAAQ,EAAE,IAAI;gBACd,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;SACF;KACF;CACF,CAAC;AAEF,AAAO,MAAM,sBAAsB,GAA+B;IAChE,IAAI,EAAE;QACJ,IAAI,EAAE,WAAW;QACjB,SAAS,EAAE,wBAAwB;QACnC,eAAe,EAAE;YACf,KAAK,EAAE;gBACL,cAAc,EAAE,OAAO;gBACvB,QAAQ,EAAE,IAAI;gBACd,IAAI,EAAE;oBACJ,IAAI,EAAE,UAAU;oBAChB,OAAO,EAAE;wBACP,IAAI,EAAE;4BACJ,IAAI,EAAE,WAAW;4BACjB,SAAS,EAAE,cAAc;yBAC1B;qBACF;iBACF;aACF;YACD,QAAQ,EAAE;gBACR,cAAc,EAAE,UAAU;gBAC1B,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;SACF;KACF;CACF,CAAC;AAEF,AAAO,MAAM,aAAa,GAA+B;IACvD,IAAI,EAAE;QACJ,IAAI,EAAE,WAAW;QACjB,SAAS,EAAE,eAAe;QAC1B,eAAe,EAAE;YACf,aAAa,EAAE;gBACb,cAAc,EAAE,eAAe;gBAC/B,QAAQ,EAAE,IAAI;gBACd,IAAI,EAAE;oBACJ,IAAI,EAAE,UAAU;oBAChB,OAAO,EAAE;wBACP,IAAI,EAAE;4BACJ,IAAI,EAAE,QAAQ;yBACf;qBACF;iBACF;aACF;SACF;KACF;CACF,CAAC;AAEF,AAAO,MAAM,YAAY,GAA+B;IACtD,IAAI,EAAE;QACJ,IAAI,EAAE,WAAW;QACjB,SAAS,EAAE,cAAc;QACzB,eAAe,EAAE;YACf,EAAE,EAAE;gBACF,cAAc,EAAE,IAAI;gBACpB,QAAQ,EAAE,IAAI;gBACd,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;YACD,IAAI,EAAE;gBACJ,cAAc,EAAE,MAAM;gBACtB,QAAQ,EAAE,IAAI;gBACd,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;SACF;KACF;CACF,CAAC;AAEF,AAAO,MAAM,sBAAsB,GAA+B;IAChE,IAAI,EAAE;QACJ,IAAI,EAAE,WAAW;QACjB,SAAS,EAAE,wBAAwB;QACnC,eAAe,EAAE;YACf,KAAK,EAAE;gBACL,cAAc,EAAE,OAAO;gBACvB,QAAQ,EAAE,IAAI;gBACd,IAAI,EAAE;oBACJ,IAAI,EAAE,UAAU;oBAChB,OAAO,EAAE;wBACP,IAAI,EAAE;4BACJ,IAAI,EAAE,WAAW;4BACjB,SAAS,EAAE,cAAc;yBAC1B;qBACF;iBACF;aACF;YACD,QAAQ,EAAE;gBACR,cAAc,EAAE,UAAU;gBAC1B,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;SACF;KACF;CACF,CAAC;AAEF,AAAO,MAAM,SAAS,GAA+B;IACnD,IAAI,EAAE;QACJ,IAAI,EAAE,WAAW;QACjB,SAAS,EAAE,WAAW;QACtB,eAAe,EAAE;YACf,EAAE,EAAE;gBACF,cAAc,EAAE,IAAI;gBACpB,QAAQ,EAAE,IAAI;gBACd,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;YACD,IAAI,EAAE;gBACJ,cAAc,EAAE,MAAM;gBACtB,QAAQ,EAAE,IAAI;gBACd,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;YACD,IAAI,EAAE;gBACJ,cAAc,EAAE,MAAM;gBACtB,QAAQ,EAAE,IAAI;gBACd,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;YACD,QAAQ,EAAE;gBACR,cAAc,EAAE,UAAU;gBAC1B,QAAQ,EAAE,IAAI;gBACd,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;YACD,UAAU,EAAE;gBACV,cAAc,EAAE,YAAY;gBAC5B,IAAI,EAAE;oBACJ,IAAI,EAAE,WAAW;oBACjB,SAAS,EAAE,qBAAqB;iBACjC;aACF;SACF;KACF;CACF,CAAC;AAEF,AAAO,MAAM,mBAAmB,GAA+B;IAC7D,IAAI,EAAE;QACJ,IAAI,EAAE,WAAW;QACjB,SAAS,EAAE,qBAAqB;QAChC,eAAe,EAAE;YACf,MAAM,EAAE;gBACN,cAAc,EAAE,QAAQ;gBACxB,QAAQ,EAAE,IAAI;gBACd,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;YACD,WAAW,EAAE;gBACX,cAAc,EAAE,aAAa;gBAC7B,QAAQ,EAAE,IAAI;gBACd,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;YACD,OAAO,EAAE;gBACP,cAAc,EAAE,SAAS;gBACzB,QAAQ,EAAE,IAAI;gBACd,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;YACD,KAAK,EAAE;gBACL,cAAc,EAAE,OAAO;gBACvB,QAAQ,EAAE,IAAI;gBACd,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;YACD,SAAS,EAAE;gBACT,cAAc,EAAE,WAAW;gBAC3B,QAAQ,EAAE,IAAI;gBACd,IAAI,EAAE;oBACJ,IAAI,EAAE,SAAS;iBAChB;aACF;YACD,QAAQ,EAAE;gBACR,cAAc,EAAE,UAAU;gBAC1B,QAAQ,EAAE,IAAI;gBACd,IAAI,EAAE;oBACJ,IAAI,EAAE,SAAS;iBAChB;aACF;SACF;KACF;CACF,CAAC;AAEF,AAAO,MAAM,mBAAmB,GAA+B;IAC7D,IAAI,EAAE;QACJ,IAAI,EAAE,WAAW;QACjB,SAAS,EAAE,qBAAqB;QAChC,eAAe,EAAE;YACf,KAAK,EAAE;gBACL,cAAc,EAAE,OAAO;gBACvB,QAAQ,EAAE,IAAI;gBACd,IAAI,EAAE;oBACJ,IAAI,EAAE,UAAU;oBAChB,OAAO,EAAE;wBACP,IAAI,EAAE;4BACJ,IAAI,EAAE,WAAW;4BACjB,SAAS,EAAE,WAAW;yBACvB;qBACF;iBACF;aACF;YACD,QAAQ,EAAE;gBACR,cAAc,EAAE,UAAU;gBAC1B,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;SACF;KACF;CACF,CAAC;AAEF,AAAO,MAAM,QAAQ,GAA+B;IAClD,IAAI,EAAE;QACJ,IAAI,EAAE,WAAW;QACjB,SAAS,EAAE,UAAU;QACrB,eAAe,EAAE;YACf,EAAE,EAAE;gBACF,cAAc,EAAE,IAAI;gBACpB,QAAQ,EAAE,IAAI;gBACd,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;YACD,IAAI,EAAE;gBACJ,cAAc,EAAE,MAAM;gBACtB,QAAQ,EAAE,IAAI;gBACd,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;YACD,IAAI,EAAE;gBACJ,cAAc,EAAE,MAAM;gBACtB,QAAQ,EAAE,IAAI;gBACd,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;YACD,QAAQ,EAAE;gBACR,cAAc,EAAE,UAAU;gBAC1B,QAAQ,EAAE,IAAI;gBACd,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;YACD,UAAU,EAAE;gBACV,cAAc,EAAE,YAAY;gBAC5B,IAAI,EAAE;oBACJ,IAAI,EAAE,WAAW;oBACjB,SAAS,EAAE,oBAAoB;iBAChC;aACF;SACF;KACF;CACF,CAAC;AAEF,AAAO,MAAM,kBAAkB,GAA+B;IAC5D,IAAI,EAAE;QACJ,IAAI,EAAE,WAAW;QACjB,SAAS,EAAE,oBAAoB;QAC/B,eAAe,EAAE;YACf,IAAI,EAAE;gBACJ,cAAc,EAAE,MAAM;gBACtB,QAAQ,EAAE,IAAI;gBACd,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;YACD,KAAK,EAAE;gBACL,cAAc,EAAE,OAAO;gBACvB,QAAQ,EAAE,IAAI;gBACd,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;YACD,QAAQ,EAAE;gBACR,cAAc,EAAE,UAAU;gBAC1B,QAAQ,EAAE,IAAI;gBACd,IAAI,EAAE;oBACJ,IAAI,EAAE,UAAU;oBAChB,OAAO,EAAE;wBACP,IAAI,EAAE;4BACJ,IAAI,EAAE,WAAW;4BACjB,SAAS,EAAE,yBAAyB;yBACrC;qBACF;iBACF;aACF;SACF;KACF;CACF,CAAC;AAEF,AAAO,MAAM,uBAAuB,GAA+B;IACjE,IAAI,EAAE;QACJ,IAAI,EAAE,WAAW;QACjB,SAAS,EAAE,yBAAyB;QACpC,eAAe,EAAE;YACf,OAAO,EAAE;gBACP,cAAc,EAAE,SAAS;gBACzB,QAAQ,EAAE,IAAI;gBACd,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;YACD,KAAK,EAAE;gBACL,cAAc,EAAE,OAAO;gBACvB,QAAQ,EAAE,IAAI;gBACd,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;YACD,SAAS,EAAE;gBACT,cAAc,EAAE,WAAW;gBAC3B,QAAQ,EAAE,IAAI;gBACd,IAAI,EAAE;oBACJ,IAAI,EAAE,SAAS;iBAChB;aACF;YACD,QAAQ,EAAE;gBACR,cAAc,EAAE,UAAU;gBAC1B,QAAQ,EAAE,IAAI;gBACd,IAAI,EAAE;oBACJ,IAAI,EAAE,SAAS;iBAChB;aACF;SACF;KACF;CACF,CAAC;AAEF,AAAO,MAAM,kBAAkB,GAA+B;IAC5D,IAAI,EAAE;QACJ,IAAI,EAAE,WAAW;QACjB,SAAS,EAAE,oBAAoB;QAC/B,eAAe,EAAE;YACf,KAAK,EAAE;gBACL,cAAc,EAAE,OAAO;gBACvB,QAAQ,EAAE,IAAI;gBACd,IAAI,EAAE;oBACJ,IAAI,EAAE,UAAU;oBAChB,OAAO,EAAE;wBACP,IAAI,EAAE;4BACJ,IAAI,EAAE,WAAW;4BACjB,SAAS,EAAE,UAAU;yBACtB;qBACF;iBACF;aACF;YACD,QAAQ,EAAE;gBACR,cAAc,EAAE,UAAU;gBAC1B,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;SACF;KACF;CACF,CAAC;AAEF,AAAO,MAAM,iCAAiC,GAA+B;IAC3E,IAAI,EAAE;QACJ,IAAI,EAAE,WAAW;QACjB,SAAS,EAAE,mCAAmC;QAC9C,eAAe,EAAE;YACf,MAAM,EAAE;gBACN,cAAc,EAAE,QAAQ;gBACxB,IAAI,EAAE;oBACJ,IAAI,EAAE,YAAY;oBAClB,KAAK,EAAE,EAAE,IAAI,EAAE,EAAE,IAAI,EAAE,KAAK,EAAE,EAAE;iBACjC;aACF;SACF;KACF;CACF,CAAC;AAEF,AAAO,MAAM,oBAAoB,GAA+B;IAC9D,IAAI,EAAE;QACJ,IAAI,EAAE,WAAW;QACjB,SAAS,EAAE,sBAAsB;QACjC,eAAe,EAAE;YACf,YAAY,EAAE;gBACZ,cAAc,EAAE,cAAc;gBAC9B,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;YACD,gBAAgB,EAAE;gBAChB,cAAc,EAAE,kBAAkB;gBAClC,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;YACD,IAAI,EAAE;gBACJ,cAAc,EAAE,MAAM;gBACtB,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;YACD,gBAAgB,EAAE;gBAChB,cAAc,EAAE,kBAAkB;gBAClC,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;YACD,uBAAuB,EAAE;gBACvB,cAAc,EAAE,yBAAyB;gBACzC,QAAQ,EAAE,IAAI;gBACd,IAAI,EAAE;oBACJ,IAAI,EAAE,SAAS;iBAChB;aACF;YACD,WAAW,EAAE;gBACX,cAAc,EAAE,aAAa;gBAC7B,QAAQ,EAAE,IAAI;gBACd,IAAI,EAAE;oBACJ,IAAI,EAAE,UAAU;oBAChB,OAAO,EAAE;wBACP,IAAI,EAAE;4BACJ,IAAI,EAAE,QAAQ;yBACf;qBACF;iBACF;aACF;SACF;KACF;CACF,CAAC;AAEF,AAAO,MAAM,qBAAqB,GAA+B;IAC/D,IAAI,EAAE;QACJ,IAAI,EAAE,WAAW;QACjB,SAAS,EAAE,uBAAuB;QAClC,eAAe,EAAE;YACf,YAAY,EAAE;gBACZ,cAAc,EAAE,cAAc;gBAC9B,IAAI,EAAE;oBACJ,IAAI,EAAE,WAAW;oBACjB,SAAS,EAAE,iBAAiB;iBAC7B;aACF;SACF;KACF;CACF,CAAC;AAEF,AAAO,MAAM,eAAe,GAA+B;IACzD,IAAI,EAAE;QACJ,IAAI,EAAE,WAAW;QACjB,SAAS,EAAE,iBAAiB;QAC5B,eAAe,EAAE;YACf,EAAE,EAAE;gBACF,cAAc,EAAE,IAAI;gBACpB,QAAQ,EAAE,IAAI;gBACd,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;SACF;KACF;CACF,CAAC;AAEF,AAAO,MAAM,+BAA+B,GAA+B;IACzE,IAAI,EAAE;QACJ,IAAI,EAAE,WAAW;QACjB,SAAS,EAAE,iCAAiC;QAC5C,eAAe,kCACV,WAAW,CAAC,IAAI,CAAC,eAAe,KACnC,gBAAgB,EAAE;gBAChB,cAAc,EAAE,kBAAkB;gBAClC,IAAI,EAAE;oBACJ,IAAI,EAAE,WAAW;oBACjB,SAAS,EAAE,oBAAoB;iBAChC;aACF,GACF;KACF;CACF,CAAC;AAEF,AAAO,MAAM,2BAA2B,GAA+B;IACrE,IAAI,EAAE;QACJ,IAAI,EAAE,WAAW;QACjB,SAAS,EAAE,6BAA6B;QACxC,eAAe,kCACV,WAAW,CAAC,IAAI,CAAC,eAAe,KACnC,IAAI,EAAE;gBACJ,cAAc,EAAE,MAAM;gBACtB,QAAQ,EAAE,IAAI;gBACd,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF,EACD,QAAQ,EAAE;gBACR,cAAc,EAAE,UAAU;gBAC1B,QAAQ,EAAE,IAAI;gBACd,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF,EACD,IAAI,EAAE;gBACJ,cAAc,EAAE,MAAM;gBACtB,IAAI,EAAE;oBACJ,IAAI,EAAE,YAAY;oBAClB,KAAK,EAAE,EAAE,IAAI,EAAE,EAAE,IAAI,EAAE,QAAQ,EAAE,EAAE;iBACpC;aACF,EACD,gBAAgB,EAAE;gBAChB,cAAc,EAAE,kBAAkB;gBAClC,IAAI,EAAE;oBACJ,IAAI,EAAE,WAAW;oBACjB,SAAS,EAAE,kBAAkB;iBAC9B;aACF,GACF;KACF;CACF,CAAC;AAEF,AAAO,MAAM,cAAc,GAA+B;IACxD,IAAI,EAAE;QACJ,IAAI,EAAE,WAAW;QACjB,SAAS,EAAE,gBAAgB;QAC3B,eAAe,kCACV,WAAW,CAAC,IAAI,CAAC,eAAe,KACnC,SAAS,EAAE;gBACT,cAAc,EAAE,WAAW;gBAC3B,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF,EACD,KAAK,EAAE;gBACL,cAAc,EAAE,OAAO;gBACvB,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF,EACD,GAAG,EAAE;gBACH,cAAc,EAAE,KAAK;gBACrB,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF,EACD,OAAO,EAAE;gBACP,cAAc,EAAE,SAAS;gBACzB,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF,EACD,YAAY,EAAE;gBACZ,cAAc,EAAE,cAAc;gBAC9B,QAAQ,EAAE,IAAI;gBACd,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF,EACD,oBAAoB,EAAE;gBACpB,cAAc,EAAE,sBAAsB;gBACtC,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF,EACD,uBAAuB,EAAE;gBACvB,cAAc,EAAE,yBAAyB;gBACzC,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF,GACF;KACF;CACF,CAAC;AAEF,AAAO,MAAM,2BAA2B,GAA+B;IACrE,IAAI,EAAE;QACJ,IAAI,EAAE,WAAW;QACjB,SAAS,EAAE,6BAA6B;QACxC,eAAe,oBACV,WAAW,CAAC,IAAI,CAAC,eAAe,CACpC;KACF;CACF,CAAC;AAEF,AAAO,MAAM,qBAAqB,GAA+B;IAC/D,IAAI,EAAE;QACJ,IAAI,EAAE,WAAW;QACjB,SAAS,EAAE,uBAAuB;QAClC,eAAe,kCACV,WAAW,CAAC,IAAI,CAAC,eAAe,KACnC,kBAAkB,EAAE;gBAClB,cAAc,EAAE,oBAAoB;gBACpC,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF,EACD,iBAAiB,EAAE;gBACjB,cAAc,EAAE,mBAAmB;gBACnC,IAAI,EAAE;oBACJ,IAAI,EAAE,WAAW;oBACjB,SAAS,EAAE,6BAA6B;iBACzC;aACF,EACD,eAAe,EAAE;gBACf,cAAc,EAAE,iBAAiB;gBACjC,IAAI,EAAE;oBACJ,IAAI,EAAE,WAAW;oBACjB,SAAS,EAAE,uBAAuB;iBACnC;aACF,GACF;KACF;CACF,CAAC;AAEF,AAAO,MAAM,yBAAyB,GAA+B;IACnE,IAAI,EAAE;QACJ,IAAI,EAAE,WAAW;QACjB,SAAS,EAAE,2BAA2B;QACtC,eAAe,kCACV,WAAW,CAAC,IAAI,CAAC,eAAe,KACnC,OAAO,EAAE;gBACP,cAAc,EAAE,oBAAoB;gBACpC,IAAI,EAAE;oBACJ,IAAI,EAAE,SAAS;iBAChB;aACF,EACD,YAAY,EAAE;gBACZ,cAAc,EAAE,yBAAyB;gBACzC,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF,GACF;KACF;CACF,CAAC;AAEF,AAAO,MAAM,qCAAqC,GAA+B;IAC/E,IAAI,EAAE;QACJ,IAAI,EAAE,WAAW;QACjB,SAAS,EAAE,uCAAuC;QAClD,eAAe,kCACV,WAAW,CAAC,IAAI,CAAC,eAAe,KACnC,IAAI,EAAE;gBACJ,cAAc,EAAE,MAAM;gBACtB,QAAQ,EAAE,IAAI;gBACd,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF,EACD,MAAM,EAAE;gBACN,cAAc,EAAE,mBAAmB;gBACnC,IAAI,EAAE;oBACJ,IAAI,EAAE,WAAW;oBACjB,SAAS,EAAE,oBAAoB;iBAChC;aACF,EACD,OAAO,EAAE;gBACP,cAAc,EAAE,oBAAoB;gBACpC,IAAI,EAAE;oBACJ,IAAI,EAAE,SAAS;iBAChB;aACF,EACD,4BAA4B,EAAE;gBAC5B,cAAc,EAAE,yCAAyC;gBACzD,IAAI,EAAE;oBACJ,IAAI,EAAE,WAAW;oBACjB,SAAS,EAAE,oDAAoD;iBAChE;aACF,EACD,uBAAuB,EAAE;gBACvB,cAAc,EAAE,oCAAoC;gBACpD,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF,EACD,qCAAqC,EAAE;gBACrC,cAAc,EAAE,kDAAkD;gBAClE,IAAI,EAAE;oBACJ,IAAI,EAAE,UAAU;oBAChB,OAAO,EAAE;wBACP,IAAI,EAAE;4BACJ,IAAI,EAAE,WAAW;4BACjB,SAAS,EAAE,aAAa;yBACzB;qBACF;iBACF;aACF,EACD,yBAAyB,EAAE;gBACzB,cAAc,EAAE,sCAAsC;gBACtD,IAAI,EAAE;oBACJ,IAAI,EAAE,UAAU;oBAChB,OAAO,EAAE;wBACP,IAAI,EAAE;4BACJ,IAAI,EAAE,WAAW;4BACjB,SAAS,EAAE,aAAa;yBACzB;qBACF;iBACF;aACF,EACD,+BAA+B,EAAE;gBAC/B,cAAc,EAAE,4CAA4C;gBAC5D,IAAI,EAAE;oBACJ,IAAI,EAAE,UAAU;oBAChB,OAAO,EAAE;wBACP,IAAI,EAAE;4BACJ,IAAI,EAAE,WAAW;4BACjB,SAAS,EAAE,aAAa;yBACzB;qBACF;iBACF;aACF,EACD,2BAA2B,EAAE;gBAC3B,cAAc,EAAE,wCAAwC;gBACxD,IAAI,EAAE;oBACJ,IAAI,EAAE,UAAU;oBAChB,OAAO,EAAE;wBACP,IAAI,EAAE;4BACJ,IAAI,EAAE,WAAW;4BACjB,SAAS,EAAE,aAAa;yBACzB;qBACF;iBACF;aACF,GACF;KACF;CACF,CAAC;AAEF,AAAO,MAAM,0CAA0C,GAA+B;IACpF,IAAI,EAAE;QACJ,IAAI,EAAE,WAAW;QACjB,SAAS,EAAE,4CAA4C;QACvD,eAAe,kCACV,WAAW,CAAC,IAAI,CAAC,eAAe,KACnC,IAAI,EAAE;gBACJ,cAAc,EAAE,MAAM;gBACtB,QAAQ,EAAE,IAAI;gBACd,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF,EACD,OAAO,EAAE;gBACP,cAAc,EAAE,oBAAoB;gBACpC,IAAI,EAAE;oBACJ,IAAI,EAAE,SAAS;iBAChB;aACF,EACD,2BAA2B,EAAE;gBAC3B,cAAc,EAAE,wCAAwC;gBACxD,IAAI,EAAE;oBACJ,IAAI,EAAE,SAAS;iBAChB;aACF,EACD,UAAU,EAAE;gBACV,cAAc,EAAE,uBAAuB;gBACvC,IAAI,EAAE;oBACJ,IAAI,EAAE,SAAS;iBAChB;aACF,EACD,oBAAoB,EAAE;gBACpB,cAAc,EAAE,iCAAiC;gBACjD,IAAI,EAAE;oBACJ,IAAI,EAAE,WAAW;oBACjB,SAAS,EAAE,aAAa;iBACzB;aACF,EACD,WAAW,EAAE;gBACX,cAAc,EAAE,wBAAwB;gBACxC,IAAI,EAAE;oBACJ,IAAI,EAAE,WAAW;oBACjB,SAAS,EAAE,uDAAuD;iBACnE;aACF,EACD,gBAAgB,EAAE;gBAChB,cAAc,EAAE,6BAA6B;gBAC7C,IAAI,EAAE;oBACJ,IAAI,EAAE,UAAU;oBAChB,OAAO,EAAE;wBACP,IAAI,EAAE;4BACJ,IAAI,EAAE,WAAW;4BACjB,SAAS,EAAE,uCAAuC;yBACnD;qBACF;iBACF;aACF,EACD,kBAAkB,EAAE;gBAClB,cAAc,EAAE,+BAA+B;gBAC/C,IAAI,EAAE;oBACJ,IAAI,EAAE,SAAS;iBAChB;aACF,EACD,YAAY,EAAE;gBACZ,cAAc,EAAE,yBAAyB;gBACzC,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF,GACF;KACF;CACF,CAAC;AAEF,AAAO,MAAM,2BAA2B,GAA+B;IACrE,IAAI,EAAE;QACJ,IAAI,EAAE,WAAW;QACjB,SAAS,EAAE,6BAA6B;QACxC,eAAe,kCACV,WAAW,CAAC,IAAI,CAAC,eAAe,KACnC,MAAM,EAAE;gBACN,cAAc,EAAE,SAAS;gBACzB,QAAQ,EAAE,IAAI;gBACd,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF,EACD,cAAc,EAAE;gBACd,cAAc,EAAE,gBAAgB;gBAChC,QAAQ,EAAE,IAAI;gBACd,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF,EACD,UAAU,EAAE;gBACV,cAAc,EAAE,YAAY;gBAC5B,QAAQ,EAAE,IAAI;gBACd,IAAI,EAAE;oBACJ,IAAI,EAAE,YAAY;oBAClB,KAAK,EAAE,EAAE,IAAI,EAAE,EAAE,IAAI,EAAE,KAAK,EAAE,EAAE;iBACjC;aACF,EACD,SAAS,EAAE;gBACT,cAAc,EAAE,WAAW;gBAC3B,QAAQ,EAAE,IAAI;gBACd,IAAI,EAAE;oBACJ,IAAI,EAAE,UAAU;oBAChB,OAAO,EAAE;wBACP,IAAI,EAAE;4BACJ,IAAI,EAAE,YAAY;4BAClB,KAAK,EAAE,EAAE,IAAI,EAAE,EAAE,IAAI,EAAE,KAAK,EAAE,EAAE;yBACjC;qBACF;iBACF;aACF,GACF;KACF;CACF,CAAC;AAEF,AAAO,MAAM,2CAA2C,GAA+B;IACrF,IAAI,EAAE;QACJ,IAAI,EAAE,WAAW;QACjB,SAAS,EAAE,6CAA6C;QACxD,eAAe,kCACV,WAAW,CAAC,IAAI,CAAC,eAAe,KACnC,IAAI,EAAE;gBACJ,cAAc,EAAE,MAAM;gBACtB,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF,EACD,MAAM,EAAE;gBACN,cAAc,EAAE,mBAAmB;gBACnC,IAAI,EAAE;oBACJ,IAAI,EAAE,WAAW;oBACjB,SAAS,EAAE,oBAAoB;iBAChC;aACF,EACD,OAAO,EAAE;gBACP,cAAc,EAAE,oBAAoB;gBACpC,IAAI,EAAE;oBACJ,IAAI,EAAE,SAAS;iBAChB;aACF,EACD,4BAA4B,EAAE;gBAC5B,cAAc,EAAE,yCAAyC;gBACzD,IAAI,EAAE;oBACJ,IAAI,EAAE,WAAW;oBACjB,SAAS,EAAE,0DAA0D;iBACtE;aACF,EACD,uBAAuB,EAAE;gBACvB,cAAc,EAAE,oCAAoC;gBACpD,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF,EACD,qCAAqC,EAAE;gBACrC,cAAc,EAAE,kDAAkD;gBAClE,IAAI,EAAE;oBACJ,IAAI,EAAE,UAAU;oBAChB,OAAO,EAAE;wBACP,IAAI,EAAE;4BACJ,IAAI,EAAE,WAAW;4BACjB,SAAS,EAAE,aAAa;yBACzB;qBACF;iBACF;aACF,EACD,yBAAyB,EAAE;gBACzB,cAAc,EAAE,sCAAsC;gBACtD,IAAI,EAAE;oBACJ,IAAI,EAAE,UAAU;oBAChB,OAAO,EAAE;wBACP,IAAI,EAAE;4BACJ,IAAI,EAAE,WAAW;4BACjB,SAAS,EAAE,aAAa;yBACzB;qBACF;iBACF;aACF,EACD,+BAA+B,EAAE;gBAC/B,cAAc,EAAE,4CAA4C;gBAC5D,IAAI,EAAE;oBACJ,IAAI,EAAE,UAAU;oBAChB,OAAO,EAAE;wBACP,IAAI,EAAE;4BACJ,IAAI,EAAE,WAAW;4BACjB,SAAS,EAAE,aAAa;yBACzB;qBACF;iBACF;aACF,EACD,2BAA2B,EAAE;gBAC3B,cAAc,EAAE,wCAAwC;gBACxD,IAAI,EAAE;oBACJ,IAAI,EAAE,UAAU;oBAChB,OAAO,EAAE;wBACP,IAAI,EAAE;4BACJ,IAAI,EAAE,WAAW;4BACjB,SAAS,EAAE,aAAa;yBACzB;qBACF;iBACF;aACF,GACF;KACF;CACF,CAAC;AAEF,AAAO,MAAM,gDAAgD,GAA+B;IAC1F,IAAI,EAAE;QACJ,IAAI,EAAE,WAAW;QACjB,SAAS,EAAE,kDAAkD;QAC7D,eAAe,kCACV,WAAW,CAAC,IAAI,CAAC,eAAe,KACnC,IAAI,EAAE;gBACJ,cAAc,EAAE,MAAM;gBACtB,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF,EACD,OAAO,EAAE;gBACP,cAAc,EAAE,oBAAoB;gBACpC,IAAI,EAAE;oBACJ,IAAI,EAAE,SAAS;iBAChB;aACF,EACD,2BAA2B,EAAE;gBAC3B,cAAc,EAAE,wCAAwC;gBACxD,IAAI,EAAE;oBACJ,IAAI,EAAE,SAAS;iBAChB;aACF,EACD,UAAU,EAAE;gBACV,cAAc,EAAE,uBAAuB;gBACvC,IAAI,EAAE;oBACJ,IAAI,EAAE,SAAS;iBAChB;aACF,EACD,oBAAoB,EAAE;gBACpB,cAAc,EAAE,iCAAiC;gBACjD,IAAI,EAAE;oBACJ,IAAI,EAAE,WAAW;oBACjB,SAAS,EAAE,aAAa;iBACzB;aACF,EACD,WAAW,EAAE;gBACX,cAAc,EAAE,wBAAwB;gBACxC,IAAI,EAAE;oBACJ,IAAI,EAAE,WAAW;oBACjB,SAAS,EAAE,uDAAuD;iBACnE;aACF,EACD,gBAAgB,EAAE;gBAChB,cAAc,EAAE,6BAA6B;gBAC7C,IAAI,EAAE;oBACJ,IAAI,EAAE,UAAU;oBAChB,OAAO,EAAE;wBACP,IAAI,EAAE;4BACJ,IAAI,EAAE,WAAW;4BACjB,SAAS,EAAE,6CAA6C;yBACzD;qBACF;iBACF;aACF,EACD,kBAAkB,EAAE;gBAClB,cAAc,EAAE,+BAA+B;gBAC/C,IAAI,EAAE;oBACJ,IAAI,EAAE,SAAS;iBAChB;aACF,EACD,YAAY,EAAE;gBACZ,cAAc,EAAE,yBAAyB;gBACzC,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF,GACF;KACF;CACF,CAAC;AAEF,AAAO,MAAM,eAAe,GAA+B;IACzD,IAAI,EAAE;QACJ,IAAI,EAAE,WAAW;QACjB,SAAS,EAAE,iBAAiB;QAC5B,eAAe,kCACV,QAAQ,CAAC,IAAI,CAAC,eAAe,KAChC,GAAG,EAAE;gBACH,cAAc,EAAE,KAAK;gBACrB,IAAI,EAAE;oBACJ,IAAI,EAAE,WAAW;oBACjB,SAAS,EAAE,KAAK;iBACjB;aACF,EACD,yBAAyB,EAAE;gBACzB,cAAc,EAAE,sCAAsC;gBACtD,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF,EACD,wBAAwB,EAAE;gBACxB,cAAc,EAAE,qCAAqC;gBACrD,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF,EACD,eAAe,EAAE;gBACf,cAAc,EAAE,4BAA4B;gBAC5C,IAAI,EAAE;oBACJ,IAAI,EAAE,UAAU;oBAChB,OAAO,EAAE;wBACP,IAAI,EAAE;4BACJ,IAAI,EAAE,WAAW;4BACjB,SAAS,EAAE,aAAa;yBACzB;qBACF;iBACF;aACF,EACD,uBAAuB,EAAE;gBACvB,cAAc,EAAE,oCAAoC;gBACpD,IAAI,EAAE;oBACJ,IAAI,EAAE,WAAW;oBACjB,SAAS,EAAE,aAAa;iBACzB;aACF,EACD,QAAQ,EAAE;gBACR,cAAc,EAAE,qBAAqB;gBACrC,QAAQ,EAAE,IAAI;gBACd,IAAI,EAAE;oBACJ,IAAI,EAAE,UAAU;oBAChB,OAAO,EAAE;wBACP,IAAI,EAAE;4BACJ,IAAI,EAAE,WAAW;4BACjB,SAAS,EAAE,oBAAoB;yBAChC;qBACF;iBACF;aACF,GACF;KACF;CACF,CAAC;AAEF,AAAO,MAAM,uBAAuB,GAA+B;IACjE,IAAI,EAAE;QACJ,IAAI,EAAE,WAAW;QACjB,SAAS,EAAE,yBAAyB;QACpC,eAAe,kCACV,QAAQ,CAAC,IAAI,CAAC,eAAe,KAChC,2BAA2B,EAAE;gBAC3B,cAAc,EAAE,wCAAwC;gBACxD,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF,EACD,eAAe,EAAE;gBACf,cAAc,EAAE,4BAA4B;gBAC5C,QAAQ,EAAE,IAAI;gBACd,IAAI,EAAE;oBACJ,IAAI,EAAE,UAAU;oBAChB,OAAO,EAAE;wBACP,IAAI,EAAE;4BACJ,IAAI,EAAE,WAAW;4BACjB,SAAS,EAAE,iCAAiC;yBAC7C;qBACF;iBACF;aACF,EACD,uBAAuB,EAAE;gBACvB,cAAc,EAAE,oCAAoC;gBACpD,QAAQ,EAAE,IAAI;gBACd,IAAI,EAAE;oBACJ,IAAI,EAAE,UAAU;oBAChB,OAAO,EAAE;wBACP,IAAI,EAAE;4BACJ,IAAI,EAAE,WAAW;4BACjB,SAAS,EAAE,iCAAiC;yBAC7C;qBACF;iBACF;aACF,EACD,gBAAgB,EAAE;gBAChB,cAAc,EAAE,6BAA6B;gBAC7C,QAAQ,EAAE,IAAI;gBACd,IAAI,EAAE;oBACJ,IAAI,EAAE,UAAU;oBAChB,OAAO,EAAE;wBACP,IAAI,EAAE;4BACJ,IAAI,EAAE,WAAW;4BACjB,SAAS,EAAE,iCAAiC;yBAC7C;qBACF;iBACF;aACF,EACD,gBAAgB,EAAE;gBAChB,cAAc,EAAE,6BAA6B;gBAC7C,IAAI,EAAE;oBACJ,IAAI,EAAE,WAAW;oBACjB,SAAS,EAAE,oBAAoB;iBAChC;aACF,GACF;KACF;CACF,CAAC;AAEF,AAAO,MAAM,kBAAkB,GAA+B;IAC5D,IAAI,EAAE;QACJ,IAAI,EAAE,WAAW;QACjB,SAAS,EAAE,oBAAoB;QAC/B,eAAe,kCACV,QAAQ,CAAC,IAAI,CAAC,eAAe,KAChC,KAAK,EAAE;gBACL,cAAc,EAAE,OAAO;gBACvB,IAAI,EAAE;oBACJ,IAAI,EAAE,UAAU;oBAChB,OAAO,EAAE;wBACP,IAAI,EAAE;4BACJ,IAAI,EAAE,QAAQ;yBACf;qBACF;iBACF;aACF,EACD,wBAAwB,EAAE;gBACxB,WAAW,EAAE;oBACX,gBAAgB,EAAE,CAAC;iBACpB;gBACD,cAAc,EAAE,qCAAqC;gBACrD,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF,EACD,KAAK,EAAE;gBACL,cAAc,EAAE,kBAAkB;gBAClC,QAAQ,EAAE,IAAI;gBACd,IAAI,EAAE;oBACJ,IAAI,EAAE,UAAU;oBAChB,OAAO,EAAE;wBACP,IAAI,EAAE;4BACJ,IAAI,EAAE,WAAW;4BACjB,SAAS,EAAE,qBAAqB;yBACjC;qBACF;iBACF;aACF,EACD,YAAY,EAAE;gBACZ,cAAc,EAAE,yBAAyB;gBACzC,IAAI,EAAE;oBACJ,IAAI,EAAE,WAAW;oBACjB,SAAS,EAAE,gCAAgC;iBAC5C;aACF,EACD,yBAAyB,EAAE;gBACzB,cAAc,EAAE,sCAAsC;gBACtD,IAAI,EAAE;oBACJ,IAAI,EAAE,SAAS;iBAChB;aACF,GACF;KACF;CACF,CAAC;AAEF,AAAO,MAAM,aAAa,GAA+B;IACvD,IAAI,EAAE;QACJ,IAAI,EAAE,WAAW;QACjB,SAAS,EAAE,eAAe;QAC1B,eAAe,kCACV,QAAQ,CAAC,IAAI,CAAC,eAAe,KAChC,GAAG,EAAE;gBACH,cAAc,EAAE,KAAK;gBACrB,IAAI,EAAE;oBACJ,IAAI,EAAE,WAAW;oBACjB,SAAS,EAAE,KAAK;iBACjB;aACF,EACD,mBAAmB,EAAE;gBACnB,WAAW,EAAE;oBACX,gBAAgB,EAAE,CAAC;iBACpB;gBACD,cAAc,EAAE,gCAAgC;gBAChD,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF,EACD,oBAAoB,EAAE;gBACpB,cAAc,EAAE,iCAAiC;gBACjD,IAAI,EAAE;oBACJ,IAAI,EAAE,SAAS;iBAChB;aACF,EACD,MAAM,EAAE;gBACN,cAAc,EAAE,mBAAmB;gBACnC,QAAQ,EAAE,IAAI;gBACd,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF,EACD,eAAe,EAAE;gBACf,cAAc,EAAE,4BAA4B;gBAC5C,QAAQ,EAAE,IAAI;gBACd,IAAI,EAAE;oBACJ,IAAI,EAAE,UAAU;oBAChB,OAAO,EAAE;wBACP,IAAI,EAAE;4BACJ,IAAI,EAAE,WAAW;4BACjB,SAAS,EAAE,qBAAqB;yBACjC;qBACF;iBACF;aACF,EACD,WAAW,EAAE;gBACX,cAAc,EAAE,wBAAwB;gBACxC,IAAI,EAAE;oBACJ,IAAI,EAAE,MAAM;oBACZ,aAAa,EAAE;wBACb,MAAM;wBACN,uBAAuB;wBACvB,0BAA0B;qBAC3B;iBACF;aACF,EACD,gBAAgB,EAAE;gBAChB,cAAc,EAAE,6BAA6B;gBAC7C,QAAQ,EAAE,IAAI;gBACd,IAAI,EAAE;oBACJ,IAAI,EAAE,UAAU;iBACjB;aACF,EACD,iBAAiB,EAAE;gBACjB,cAAc,EAAE,8BAA8B;gBAC9C,QAAQ,EAAE,IAAI;gBACd,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF,EACD,YAAY,EAAE;gBACZ,cAAc,EAAE,yBAAyB;gBACzC,IAAI,EAAE;oBACJ,IAAI,EAAE,WAAW;oBACjB,SAAS,EAAE,2BAA2B;iBACvC;aACF,EACD,WAAW,EAAE;gBACX,cAAc,EAAE,wBAAwB;gBACxC,QAAQ,EAAE,IAAI;gBACd,IAAI,EAAE;oBACJ,IAAI,EAAE,UAAU;iBACjB;aACF,GACF;KACF;CACF,CAAC;AAEF,AAAO,MAAM,oBAAoB,GAA+B;IAC9D,IAAI,EAAE;QACJ,IAAI,EAAE,WAAW;QACjB,SAAS,EAAE,sBAAsB;QACjC,eAAe,kCACV,QAAQ,CAAC,IAAI,CAAC,eAAe,KAChC,SAAS,EAAE;gBACT,cAAc,EAAE,sBAAsB;gBACtC,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF,GACF;KACF;CACF,CAAC;AAEF,AAAO,MAAM,4BAA4B,GAA+B;IACtE,IAAI,EAAE;QACJ,IAAI,EAAE,WAAW;QACjB,SAAS,EAAE,8BAA8B;QACzC,eAAe,kCACV,QAAQ,CAAC,IAAI,CAAC,eAAe,KAChC,eAAe,EAAE;gBACf,cAAc,EAAE,4BAA4B;gBAC5C,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF,EACD,WAAW,EAAE;gBACX,cAAc,EAAE,wBAAwB;gBACxC,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF,EACD,aAAa,EAAE;gBACb,cAAc,EAAE,0BAA0B;gBAC1C,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF,EACD,iBAAiB,EAAE;gBACjB,cAAc,EAAE,8BAA8B;gBAC9C,IAAI,EAAE;oBACJ,IAAI,EAAE,SAAS;iBAChB;aACF,EACD,0BAA0B,EAAE;gBAC1B,cAAc,EAAE,uCAAuC;gBACvD,IAAI,EAAE;oBACJ,IAAI,EAAE,SAAS;iBAChB;aACF,GACF;KACF;CACF,CAAC;AAEF,AAAO,MAAM,uBAAuB,GAA+B;IACjE,IAAI,EAAE;QACJ,IAAI,EAAE,WAAW;QACjB,SAAS,EAAE,yBAAyB;QACpC,eAAe,kCACV,QAAQ,CAAC,IAAI,CAAC,eAAe,KAChC,cAAc,EAAE;gBACd,cAAc,EAAE,2BAA2B;gBAC3C,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF,EACD,SAAS,EAAE;gBACT,cAAc,EAAE,sBAAsB;gBACtC,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF,EACD,kBAAkB,EAAE;gBAClB,cAAc,EAAE,iBAAiB;gBACjC,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF,EACD,kBAAkB,EAAE;gBAClB,cAAc,EAAE,+BAA+B;gBAC/C,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF,EACD,uBAAuB,EAAE;gBACvB,cAAc,EAAE,oCAAoC;gBACpD,IAAI,EAAE;oBACJ,IAAI,EAAE,SAAS;iBAChB;aACF,EACD,sBAAsB,EAAE;gBACtB,cAAc,EAAE,mCAAmC;gBACnD,IAAI,EAAE;oBACJ,IAAI,EAAE,SAAS;iBAChB;aACF,EACD,QAAQ,EAAE;gBACR,cAAc,EAAE,qBAAqB;gBACrC,IAAI,EAAE;oBACJ,IAAI,EAAE,YAAY;oBAClB,KAAK,EAAE,EAAE,IAAI,EAAE,EAAE,IAAI,EAAE,KAAK,EAAE,EAAE;iBACjC;aACF,EACD,iBAAiB,EAAE;gBACjB,cAAc,EAAE,8BAA8B;gBAC9C,IAAI,EAAE;oBACJ,IAAI,EAAE,YAAY;oBAClB,KAAK,EAAE,EAAE,IAAI,EAAE,EAAE,IAAI,EAAE,KAAK,EAAE,EAAE;iBACjC;aACF,EACD,iBAAiB,EAAE;gBACjB,cAAc,EAAE,8BAA8B;gBAC9C,QAAQ,EAAE,IAAI;gBACd,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF,EACD,YAAY,EAAE;gBACZ,cAAc,EAAE,yBAAyB;gBACzC,IAAI,EAAE;oBACJ,IAAI,EAAE,WAAW;oBACjB,SAAS,EAAE,qCAAqC;iBACjD;aACF,EACD,gBAAgB,EAAE;gBAChB,cAAc,EAAE,6BAA6B;gBAC7C,IAAI,EAAE;oBACJ,IAAI,EAAE,SAAS;iBAChB;aACF,EACD,6BAA6B,EAAE;gBAC7B,cAAc,EAAE,0CAA0C;gBAC1D,IAAI,EAAE;oBACJ,IAAI,EAAE,YAAY;oBAClB,KAAK,EAAE,EAAE,IAAI,EAAE,EAAE,IAAI,EAAE,KAAK,EAAE,EAAE;iBACjC;aACF,GACF;KACF;CACF,CAAC;AAEF,AAAO,MAAM,cAAc,GAA+B;IACxD,IAAI,EAAE;QACJ,IAAI,EAAE,WAAW;QACjB,SAAS,EAAE,gBAAgB;QAC3B,eAAe,kCACV,QAAQ,CAAC,IAAI,CAAC,eAAe,KAChC,IAAI,EAAE;gBACJ,cAAc,EAAE,MAAM;gBACtB,IAAI,EAAE;oBACJ,IAAI,EAAE,WAAW;oBACjB,SAAS,EAAE,MAAM;iBAClB;aACF,EACD,SAAS,EAAE;gBACT,cAAc,EAAE,WAAW;gBAC3B,QAAQ,EAAE,IAAI;gBACd,IAAI,EAAE;oBACJ,IAAI,EAAE,UAAU;oBAChB,OAAO,EAAE;wBACP,IAAI,EAAE;4BACJ,IAAI,EAAE,WAAW;4BACjB,SAAS,EAAE,yBAAyB;yBACrC;qBACF;iBACF;aACF,EACD,QAAQ,EAAE;gBACR,cAAc,EAAE,UAAU;gBAC1B,IAAI,EAAE;oBACJ,IAAI,EAAE,WAAW;oBACjB,SAAS,EAAE,wBAAwB;iBACpC;aACF,EACD,KAAK,EAAE;gBACL,cAAc,EAAE,OAAO;gBACvB,IAAI,EAAE;oBACJ,IAAI,EAAE,UAAU;oBAChB,OAAO,EAAE;wBACP,IAAI,EAAE;4BACJ,IAAI,EAAE,QAAQ;yBACf;qBACF;iBACF;aACF,EACD,gBAAgB,EAAE;gBAChB,cAAc,EAAE,kBAAkB;gBAClC,IAAI,EAAE;oBACJ,IAAI,EAAE,WAAW;oBACjB,SAAS,EAAE,kBAAkB;iBAC9B;aACF,EACD,eAAe,EAAE;gBACf,cAAc,EAAE,4BAA4B;gBAC5C,IAAI,EAAE;oBACJ,IAAI,EAAE,WAAW;oBACjB,SAAS,EAAE,iBAAiB;iBAC7B;aACF,EACD,cAAc,EAAE;gBACd,cAAc,EAAE,2BAA2B;gBAC3C,IAAI,EAAE;oBACJ,IAAI,EAAE,WAAW;oBACjB,SAAS,EAAE,gBAAgB;iBAC5B;aACF,EACD,sBAAsB,EAAE;gBACtB,cAAc,EAAE,mCAAmC;gBACnD,IAAI,EAAE;oBACJ,IAAI,EAAE,WAAW;oBACjB,SAAS,EAAE,wBAAwB;iBACpC;aACF,EACD,SAAS,EAAE;gBACT,cAAc,EAAE,sBAAsB;gBACtC,IAAI,EAAE;oBACJ,IAAI,EAAE,WAAW;oBACjB,SAAS,EAAE,WAAW;iBACvB;aACF,EACD,cAAc,EAAE;gBACd,cAAc,EAAE,2BAA2B;gBAC3C,IAAI,EAAE;oBACJ,IAAI,EAAE,WAAW;oBACjB,SAAS,EAAE,gBAAgB;iBAC5B;aACF,EACD,eAAe,EAAE;gBACf,cAAc,EAAE,4BAA4B;gBAC5C,IAAI,EAAE;oBACJ,IAAI,EAAE,WAAW;oBACjB,SAAS,EAAE,iBAAiB;iBAC7B;aACF,EACD,kBAAkB,EAAE;gBAClB,cAAc,EAAE,+BAA+B;gBAC/C,IAAI,EAAE;oBACJ,IAAI,EAAE,WAAW;oBACjB,SAAS,EAAE,oBAAoB;iBAChC;aACF,EACD,eAAe,EAAE;gBACf,cAAc,EAAE,4BAA4B;gBAC5C,IAAI,EAAE;oBACJ,IAAI,EAAE,WAAW;oBACjB,SAAS,EAAE,aAAa;iBACzB;aACF,EACD,sBAAsB,EAAE;gBACtB,cAAc,EAAE,mCAAmC;gBACnD,IAAI,EAAE;oBACJ,IAAI,EAAE,WAAW;oBACjB,SAAS,EAAE,aAAa;iBACzB;aACF,EACD,uBAAuB,EAAE;gBACvB,cAAc,EAAE,oCAAoC;gBACpD,IAAI,EAAE;oBACJ,IAAI,EAAE,WAAW;oBACjB,SAAS,EAAE,aAAa;iBACzB;aACF,EACD,QAAQ,EAAE;gBACR,cAAc,EAAE,qBAAqB;gBACrC,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF,EACD,cAAc,EAAE;gBACd,cAAc,EAAE,2BAA2B;gBAC3C,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF,EACD,cAAc,EAAE;gBACd,cAAc,EAAE,2BAA2B;gBAC3C,IAAI,EAAE;oBACJ,IAAI,EAAE,WAAW;oBACjB,SAAS,EAAE,gBAAgB;iBAC5B;aACF,EACD,IAAI,EAAE;gBACJ,cAAc,EAAE,iBAAiB;gBACjC,IAAI,EAAE;oBACJ,IAAI,EAAE,WAAW;oBACjB,SAAS,EAAE,aAAa;iBACzB;aACF,EACD,SAAS,EAAE;gBACT,cAAc,EAAE,sBAAsB;gBACtC,IAAI,EAAE;oBACJ,IAAI,EAAE,WAAW;oBACjB,SAAS,EAAE,aAAa;iBACzB;aACF,EACD,iBAAiB,EAAE;gBACjB,cAAc,EAAE,8BAA8B;gBAC9C,QAAQ,EAAE,IAAI;gBACd,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF,EACD,YAAY,EAAE;gBACZ,cAAc,EAAE,yBAAyB;gBACzC,IAAI,EAAE;oBACJ,IAAI,EAAE,WAAW;oBACjB,SAAS,EAAE,4BAA4B;iBACxC;aACF,EACD,WAAW,EAAE;gBACX,cAAc,EAAE,wBAAwB;gBACxC,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF,EACD,IAAI,EAAE;gBACJ,cAAc,EAAE,iBAAiB;gBACjC,QAAQ,EAAE,IAAI;gBACd,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF,EACD,oBAAoB,EAAE;gBACpB,cAAc,EAAE,iCAAiC;gBACjD,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF,EACD,mBAAmB,EAAE;gBACnB,cAAc,EAAE,gCAAgC;gBAChD,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF,EACD,sBAAsB,EAAE;gBACtB,cAAc,EAAE,mCAAmC;gBACnD,IAAI,EAAE;oBACJ,IAAI,EAAE,WAAW;oBACjB,SAAS,EAAE,wBAAwB;iBACpC;aACF,EACD,QAAQ,EAAE;gBACR,cAAc,EAAE,qBAAqB;gBACrC,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF,EACD,mBAAmB,EAAE;gBACnB,cAAc,EAAE,gCAAgC;gBAChD,IAAI,EAAE;oBACJ,IAAI,EAAE,WAAW;oBACjB,SAAS,EAAE,4BAA4B;iBACxC;aACF,EACD,kBAAkB,EAAE;gBAClB,cAAc,EAAE,+BAA+B;gBAC/C,IAAI,EAAE;oBACJ,IAAI,EAAE,WAAW;oBACjB,SAAS,EAAE,oBAAoB;iBAChC;aACF,EACD,WAAW,EAAE;gBACX,cAAc,EAAE,wBAAwB;gBACxC,QAAQ,EAAE,IAAI;gBACd,IAAI,EAAE;oBACJ,IAAI,EAAE,UAAU;iBACjB;aACF,GACF;KACF;CACF,CAAC;AAEF,AAAO,MAAM,sBAAsB,GAA+B;IAChE,IAAI,EAAE;QACJ,IAAI,EAAE,WAAW;QACjB,SAAS,EAAE,wBAAwB;QACnC,eAAe,kCACV,QAAQ,CAAC,IAAI,CAAC,eAAe,KAChC,GAAG,EAAE;gBACH,cAAc,EAAE,KAAK;gBACrB,IAAI,EAAE;oBACJ,IAAI,EAAE,WAAW;oBACjB,SAAS,EAAE,KAAK;iBACjB;aACF,EACD,IAAI,EAAE;gBACJ,cAAc,EAAE,MAAM;gBACtB,IAAI,EAAE;oBACJ,IAAI,EAAE,WAAW;oBACjB,SAAS,EAAE,MAAM;iBAClB;aACF,EACD,QAAQ,EAAE;gBACR,cAAc,EAAE,UAAU;gBAC1B,IAAI,EAAE;oBACJ,IAAI,EAAE,WAAW;oBACjB,SAAS,EAAE,gCAAgC;iBAC5C;aACF,EACD,KAAK,EAAE;gBACL,cAAc,EAAE,OAAO;gBACvB,IAAI,EAAE;oBACJ,IAAI,EAAE,UAAU;oBAChB,OAAO,EAAE;wBACP,IAAI,EAAE;4BACJ,IAAI,EAAE,QAAQ;yBACf;qBACF;iBACF;aACF,EACD,gBAAgB,EAAE;gBAChB,cAAc,EAAE,kBAAkB;gBAClC,IAAI,EAAE;oBACJ,IAAI,EAAE,WAAW;oBACjB,SAAS,EAAE,kBAAkB;iBAC9B;aACF,EACD,aAAa,EAAE;gBACb,cAAc,EAAE,0BAA0B;gBAC1C,IAAI,EAAE;oBACJ,IAAI,EAAE,WAAW;oBACjB,SAAS,EAAE,eAAe;iBAC3B;aACF,EACD,sBAAsB,EAAE;gBACtB,cAAc,EAAE,mCAAmC;gBACnD,IAAI,EAAE;oBACJ,IAAI,EAAE,WAAW;oBACjB,SAAS,EAAE,wBAAwB;iBACpC;aACF,EACD,qBAAqB,EAAE;gBACrB,cAAc,EAAE,kCAAkC;gBAClD,IAAI,EAAE;oBACJ,IAAI,EAAE,WAAW;oBACjB,SAAS,EAAE,iCAAiC;iBAC7C;aACF,EACD,iBAAiB,EAAE;gBACjB,cAAc,EAAE,8BAA8B;gBAC9C,QAAQ,EAAE,IAAI;gBACd,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF,EACD,aAAa,EAAE;gBACb,cAAc,EAAE,0BAA0B;gBAC1C,IAAI,EAAE;oBACJ,IAAI,EAAE,SAAS;iBAChB;aACF,EACD,sCAAsC,EAAE;gBACtC,cAAc,EAAE,mDAAmD;gBACnE,IAAI,EAAE;oBACJ,IAAI,EAAE,SAAS;iBAChB;aACF,EACD,QAAQ,EAAE;gBACR,cAAc,EAAE,qBAAqB;gBACrC,QAAQ,EAAE,IAAI;gBACd,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF,EACD,oBAAoB,EAAE;gBACpB,cAAc,EAAE,iCAAiC;gBACjD,IAAI,EAAE;oBACJ,IAAI,EAAE,SAAS;iBAChB;aACF,EACD,WAAW,EAAE;gBACX,cAAc,EAAE,wBAAwB;gBACxC,IAAI,EAAE;oBACJ,IAAI,EAAE,SAAS;iBAChB;aACF,EACD,wBAAwB,EAAE;gBACxB,cAAc,EAAE,qCAAqC;gBACrD,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF,EACD,uBAAuB,EAAE;gBACvB,cAAc,EAAE,oCAAoC;gBACpD,IAAI,EAAE;oBACJ,IAAI,EAAE,WAAW;oBACjB,SAAS,EAAE,aAAa;iBACzB;aACF,EACD,SAAS,EAAE;gBACT,cAAc,EAAE,sBAAsB;gBACtC,IAAI,EAAE;oBACJ,IAAI,EAAE,WAAW;oBACjB,SAAS,EAAE,aAAa;iBACzB;aACF,EACD,sBAAsB,EAAE;gBACtB,cAAc,EAAE,mCAAmC;gBACnD,IAAI,EAAE;oBACJ,IAAI,EAAE,WAAW;oBACjB,SAAS,EAAE,wBAAwB;iBACpC;aACF,EACD,aAAa,EAAE;gBACb,cAAc,EAAE,0BAA0B;gBAC1C,IAAI,EAAE;oBACJ,IAAI,EAAE,WAAW;oBACjB,SAAS,EAAE,eAAe;iBAC3B;aACF,EACD,iBAAiB,EAAE;gBACjB,cAAc,EAAE,8BAA8B;gBAC9C,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF,EACD,iBAAiB,EAAE;gBACjB,cAAc,EAAE,8BAA8B;gBAC9C,IAAI,EAAE;oBACJ,IAAI,EAAE,WAAW;oBACjB,SAAS,EAAE,mBAAmB;iBAC/B;aACF,EACD,WAAW,EAAE;gBACX,cAAc,EAAE,wBAAwB;gBACxC,QAAQ,EAAE,IAAI;gBACd,IAAI,EAAE;oBACJ,IAAI,EAAE,UAAU;iBACjB;aACF,GACF;KACF;CACF,CAAC;AAEF,AAAO,MAAM,KAAK,GAA+B;IAC/C,IAAI,EAAE;QACJ,IAAI,EAAE,WAAW;QACjB,SAAS,EAAE,OAAO;QAClB,eAAe,kCACV,QAAQ,CAAC,IAAI,CAAC,eAAe,KAChC,gBAAgB,EAAE;gBAChB,cAAc,EAAE,kBAAkB;gBAClC,IAAI,EAAE;oBACJ,IAAI,EAAE,WAAW;oBACjB,SAAS,EAAE,kBAAkB;iBAC9B;aACF,EACD,oBAAoB,EAAE;gBACpB,cAAc,EAAE,iCAAiC;gBACjD,IAAI,EAAE;oBACJ,IAAI,EAAE,WAAW;oBACjB,SAAS,EAAE,aAAa;iBACzB;aACF,EACD,cAAc,EAAE;gBACd,cAAc,EAAE,2BAA2B;gBAC3C,IAAI,EAAE;oBACJ,IAAI,EAAE,WAAW;oBACjB,SAAS,EAAE,qBAAqB;iBACjC;aACF,EACD,iBAAiB,EAAE;gBACjB,cAAc,EAAE,8BAA8B;gBAC9C,QAAQ,EAAE,IAAI;gBACd,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF,EACD,gBAAgB,EAAE;gBAChB,cAAc,EAAE,6BAA6B;gBAC7C,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF,GACF;KACF;CACF,CAAC;AAEF,AAAO,MAAM,sBAAsB,GAA+B;IAChE,IAAI,EAAE;QACJ,IAAI,EAAE,WAAW;QACjB,SAAS,EAAE,wBAAwB;QACnC,eAAe,kCACV,QAAQ,CAAC,IAAI,CAAC,eAAe,KAChC,MAAM,EAAE;gBACN,cAAc,EAAE,mBAAmB;gBACnC,IAAI,EAAE;oBACJ,IAAI,EAAE,WAAW;oBACjB,SAAS,EAAE,wCAAwC;iBACpD;aACF,EACD,iBAAiB,EAAE;gBACjB,cAAc,EAAE,8BAA8B;gBAC9C,QAAQ,EAAE,IAAI;gBACd,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF,EACD,wBAAwB,EAAE;gBACxB,cAAc,EAAE,qCAAqC;gBACrD,QAAQ,EAAE,IAAI;gBACd,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF,EACD,aAAa,EAAE;gBACb,cAAc,EAAE,0BAA0B;gBAC1C,QAAQ,EAAE,IAAI;gBACd,IAAI,EAAE;oBACJ,IAAI,EAAE,UAAU;oBAChB,OAAO,EAAE;wBACP,IAAI,EAAE;4BACJ,IAAI,EAAE,WAAW;4BACjB,SAAS,EAAE,cAAc;yBAC1B;qBACF;iBACF;aACF,GACF;KACF;CACF,CAAC;AAEF,AAAO,MAAM,wBAAwB,GAA+B;IAClE,IAAI,EAAE;QACJ,IAAI,EAAE,WAAW;QACjB,SAAS,EAAE,0BAA0B;QACrC,eAAe,kCACV,QAAQ,CAAC,IAAI,CAAC,eAAe,KAChC,KAAK,EAAE;gBACL,cAAc,EAAE,OAAO;gBACvB,IAAI,EAAE;oBACJ,IAAI,EAAE,UAAU;oBAChB,OAAO,EAAE;wBACP,IAAI,EAAE;4BACJ,IAAI,EAAE,QAAQ;yBACf;qBACF;iBACF;aACF,EACD,oBAAoB,EAAE;gBACpB,cAAc,EAAE,iCAAiC;gBACjD,QAAQ,EAAE,IAAI;gBACd,IAAI,EAAE;oBACJ,IAAI,EAAE,UAAU;oBAChB,OAAO,EAAE;wBACP,IAAI,EAAE;4BACJ,IAAI,EAAE,WAAW;4BACjB,SAAS,EAAE,qBAAqB;yBACjC;qBACF;iBACF;aACF,EACD,yBAAyB,EAAE;gBACzB,cAAc,EAAE,sCAAsC;gBACtD,QAAQ,EAAE,IAAI;gBACd,IAAI,EAAE;oBACJ,IAAI,EAAE,UAAU;oBAChB,OAAO,EAAE;wBACP,IAAI,EAAE;4BACJ,IAAI,EAAE,WAAW;4BACjB,SAAS,EAAE,qBAAqB;yBACjC;qBACF;iBACF;aACF,EACD,YAAY,EAAE;gBACZ,cAAc,EAAE,yBAAyB;gBACzC,IAAI,EAAE;oBACJ,IAAI,EAAE,WAAW;oBACjB,SAAS,EAAE,sCAAsC;iBAClD;aACF,GACF;KACF;CACF,CAAC;AAEF,AAAO,MAAM,mBAAmB,GAA+B;IAC7D,IAAI,EAAE;QACJ,IAAI,EAAE,WAAW;QACjB,SAAS,EAAE,qBAAqB;QAChC,eAAe,kCACV,QAAQ,CAAC,IAAI,CAAC,eAAe,KAChC,GAAG,EAAE;gBACH,cAAc,EAAE,KAAK;gBACrB,IAAI,EAAE;oBACJ,IAAI,EAAE,WAAW;oBACjB,SAAS,EAAE,KAAK;iBACjB;aACF,EACD,KAAK,EAAE;gBACL,cAAc,EAAE,OAAO;gBACvB,IAAI,EAAE;oBACJ,IAAI,EAAE,UAAU;oBAChB,OAAO,EAAE;wBACP,IAAI,EAAE;4BACJ,IAAI,EAAE,QAAQ;yBACf;qBACF;iBACF;aACF,EACD,aAAa,EAAE;gBACb,cAAc,EAAE,0BAA0B;gBAC1C,QAAQ,EAAE,IAAI;gBACd,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF,EACD,yBAAyB,EAAE;gBACzB,cAAc,EAAE,sCAAsC;gBACtD,QAAQ,EAAE,IAAI;gBACd,IAAI,EAAE;oBACJ,IAAI,EAAE,UAAU;oBAChB,OAAO,EAAE;wBACP,IAAI,EAAE;4BACJ,IAAI,EAAE,WAAW;4BACjB,SAAS,EAAE,qBAAqB;yBACjC;qBACF;iBACF;aACF,EACD,gBAAgB,EAAE;gBAChB,cAAc,EAAE,6BAA6B;gBAC7C,QAAQ,EAAE,IAAI;gBACd,IAAI,EAAE;oBACJ,IAAI,EAAE,UAAU;iBACjB;aACF,EACD,iBAAiB,EAAE;gBACjB,cAAc,EAAE,8BAA8B;gBAC9C,QAAQ,EAAE,IAAI;gBACd,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF,EACD,YAAY,EAAE;gBACZ,cAAc,EAAE,yBAAyB;gBACzC,IAAI,EAAE;oBACJ,IAAI,EAAE,WAAW;oBACjB,SAAS,EAAE,iCAAiC;iBAC7C;aACF,EACD,WAAW,EAAE;gBACX,cAAc,EAAE,wBAAwB;gBACxC,QAAQ,EAAE,IAAI;gBACd,IAAI,EAAE;oBACJ,IAAI,EAAE,UAAU;iBACjB;aACF,GACF;KACF;CACF,CAAC;AAEF,AAAO,MAAM,wBAAwB,GAA+B;IAClE,IAAI,EAAE;QACJ,IAAI,EAAE,WAAW;QACjB,SAAS,EAAE,0BAA0B;QACrC,eAAe,kCACV,QAAQ,CAAC,IAAI,CAAC,eAAe,KAChC,MAAM,EAAE;gBACN,cAAc,EAAE,mBAAmB;gBACnC,IAAI,EAAE;oBACJ,IAAI,EAAE,WAAW;oBACjB,SAAS,EAAE,sBAAsB;iBAClC;aACF,EACD,aAAa,EAAE;gBACb,cAAc,EAAE,0BAA0B;gBAC1C,IAAI,EAAE;oBACJ,IAAI,EAAE,WAAW;oBACjB,SAAS,EAAE,6BAA6B;iBACzC;aACF,EACD,QAAQ,EAAE;gBACR,cAAc,EAAE,qBAAqB;gBACrC,IAAI,EAAE;oBACJ,IAAI,EAAE,WAAW;oBACjB,SAAS,EAAE,4BAA4B;iBACxC;aACF,EACD,KAAK,EAAE;gBACL,cAAc,EAAE,kBAAkB;gBAClC,IAAI,EAAE;oBACJ,IAAI,EAAE,WAAW;oBACjB,SAAS,EAAE,UAAU;iBACtB;aACF,GACF;KACF;CACF,CAAC;AAEF,AAAO,MAAM,wBAAwB,GAA+B;IAClE,IAAI,EAAE;QACJ,IAAI,EAAE,WAAW;QACjB,SAAS,EAAE,0BAA0B;QACrC,eAAe,kCACV,QAAQ,CAAC,IAAI,CAAC,eAAe,KAChC,UAAU,EAAE;gBACV,cAAc,EAAE,YAAY;gBAC5B,QAAQ,EAAE,IAAI;gBACd,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF,EACD,GAAG,EAAE;gBACH,cAAc,EAAE,KAAK;gBACrB,IAAI,EAAE;oBACJ,IAAI,EAAE,WAAW;oBACjB,SAAS,EAAE,KAAK;iBACjB;aACF,EACD,IAAI,EAAE;gBACJ,cAAc,EAAE,MAAM;gBACtB,IAAI,EAAE;oBACJ,IAAI,EAAE,WAAW;oBACjB,SAAS,EAAE,MAAM;iBAClB;aACF,EACD,SAAS,EAAE;gBACT,cAAc,EAAE,WAAW;gBAC3B,QAAQ,EAAE,IAAI;gBACd,IAAI,EAAE;oBACJ,IAAI,EAAE,UAAU;oBAChB,OAAO,EAAE;wBACP,IAAI,EAAE;4BACJ,IAAI,EAAE,WAAW;4BACjB,SAAS,EAAE,yBAAyB;yBACrC;qBACF;iBACF;aACF,EACD,KAAK,EAAE;gBACL,cAAc,EAAE,OAAO;gBACvB,QAAQ,EAAE,IAAI;gBACd,IAAI,EAAE;oBACJ,IAAI,EAAE,UAAU;oBAChB,OAAO,EAAE;wBACP,IAAI,EAAE;4BACJ,IAAI,EAAE,QAAQ;yBACf;qBACF;iBACF;aACF,EACD,kBAAkB,EAAE;gBAClB,cAAc,EAAE,+BAA+B;gBAC/C,QAAQ,EAAE,IAAI;gBACd,IAAI,EAAE;oBACJ,IAAI,EAAE,SAAS;iBAChB;aACF,EACD,IAAI,EAAE;gBACJ,cAAc,EAAE,iBAAiB;gBACjC,QAAQ,EAAE,IAAI;gBACd,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF,EACD,YAAY,EAAE;gBACZ,cAAc,EAAE,yBAAyB;gBACzC,IAAI,EAAE;oBACJ,IAAI,EAAE,WAAW;oBACjB,SAAS,EAAE,sCAAsC;iBAClD;aACF,EACD,eAAe,EAAE;gBACf,cAAc,EAAE,4BAA4B;gBAC5C,IAAI,EAAE;oBACJ,IAAI,EAAE,WAAW;oBACjB,SAAS,EAAE,iBAAiB;iBAC7B;aACF,EACD,cAAc,EAAE;gBACd,cAAc,EAAE,2BAA2B;gBAC3C,IAAI,EAAE;oBACJ,IAAI,EAAE,WAAW;oBACjB,SAAS,EAAE,gBAAgB;iBAC5B;aACF,EACD,sBAAsB,EAAE;gBACtB,cAAc,EAAE,mCAAmC;gBACnD,IAAI,EAAE;oBACJ,IAAI,EAAE,WAAW;oBACjB,SAAS,EAAE,wBAAwB;iBACpC;aACF,EACD,SAAS,EAAE;gBACT,cAAc,EAAE,sBAAsB;gBACtC,IAAI,EAAE;oBACJ,IAAI,EAAE,WAAW;oBACjB,SAAS,EAAE,WAAW;iBACvB;aACF,EACD,eAAe,EAAE;gBACf,cAAc,EAAE,4BAA4B;gBAC5C,IAAI,EAAE;oBACJ,IAAI,EAAE,WAAW;oBACjB,SAAS,EAAE,iBAAiB;iBAC7B;aACF,EACD,cAAc,EAAE;gBACd,cAAc,EAAE,2BAA2B;gBAC3C,IAAI,EAAE;oBACJ,IAAI,EAAE,WAAW;oBACjB,SAAS,EAAE,gBAAgB;iBAC5B;aACF,EACD,2BAA2B,EAAE;gBAC3B,cAAc,EAAE,wCAAwC;gBACxD,IAAI,EAAE;oBACJ,IAAI,EAAE,WAAW;oBACjB,SAAS,EAAE,qDAAqD;iBACjE;aACF,EACD,kBAAkB,EAAE;gBAClB,cAAc,EAAE,+BAA+B;gBAC/C,IAAI,EAAE;oBACJ,IAAI,EAAE,WAAW;oBACjB,SAAS,EAAE,oBAAoB;iBAChC;aACF,EACD,eAAe,EAAE;gBACf,cAAc,EAAE,4BAA4B;gBAC5C,IAAI,EAAE;oBACJ,IAAI,EAAE,WAAW;oBACjB,SAAS,EAAE,aAAa;iBACzB;aACF,EACD,iBAAiB,EAAE;gBACjB,cAAc,EAAE,8BAA8B;gBAC9C,QAAQ,EAAE,IAAI;gBACd,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF,EACD,WAAW,EAAE;gBACX,cAAc,EAAE,wBAAwB;gBACxC,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF,EACD,sBAAsB,EAAE;gBACtB,cAAc,EAAE,mCAAmC;gBACnD,QAAQ,EAAE,IAAI;gBACd,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF,EACD,gBAAgB,EAAE;gBAChB,cAAc,EAAE,6BAA6B;gBAC7C,IAAI,EAAE;oBACJ,IAAI,EAAE,WAAW;oBACjB,SAAS,EAAE,0CAA0C;iBACtD;aACF,EACD,QAAQ,EAAE;gBACR,cAAc,EAAE,qBAAqB;gBACrC,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF,GACF;KACF;CACF,CAAC;AAEF,AAAO,MAAM,wBAAwB,GAA+B;IAClE,IAAI,EAAE;QACJ,IAAI,EAAE,WAAW;QACjB,SAAS,EAAE,0BAA0B;QACrC,eAAe,kCACV,QAAQ,CAAC,IAAI,CAAC,eAAe,KAChC,MAAM,EAAE;gBACN,cAAc,EAAE,mBAAmB;gBACnC,IAAI,EAAE;oBACJ,IAAI,EAAE,WAAW;oBACjB,SAAS,EAAE,sCAAsC;iBAClD;aACF,EACD,UAAU,EAAE;gBACV,cAAc,EAAE,uBAAuB;gBACvC,IAAI,EAAE;oBACJ,IAAI,EAAE,UAAU;oBAChB,OAAO,EAAE;wBACP,IAAI,EAAE;4BACJ,IAAI,EAAE,WAAW;4BACjB,SAAS,EAAE,0BAA0B;yBACtC;qBACF;iBACF;aACF,EACD,mBAAmB,EAAE;gBACnB,cAAc,EAAE,gCAAgC;gBAChD,IAAI,EAAE;oBACJ,IAAI,EAAE,UAAU;oBAChB,OAAO,EAAE;wBACP,IAAI,EAAE;4BACJ,IAAI,EAAE,WAAW;4BACjB,SAAS,EAAE,0BAA0B;yBACtC;qBACF;iBACF;aACF,EACD,cAAc,EAAE;gBACd,YAAY,EAAE,KAAK;gBACnB,cAAc,EAAE,2BAA2B;gBAC3C,IAAI,EAAE;oBACJ,IAAI,EAAE,SAAS;iBAChB;aACF,EACD,SAAS,EAAE;gBACT,cAAc,EAAE,sBAAsB;gBACtC,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF,EACD,aAAa,EAAE;gBACb,cAAc,EAAE,0BAA0B;gBAC1C,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF,EACD,gBAAgB,EAAE;gBAChB,cAAc,EAAE,6BAA6B;gBAC7C,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF,EACD,aAAa,EAAE;gBACb,cAAc,EAAE,0BAA0B;gBAC1C,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF,EACD,YAAY,EAAE;gBACZ,cAAc,EAAE,yBAAyB;gBACzC,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF,EACD,iBAAiB,EAAE;gBACjB,cAAc,EAAE,8BAA8B;gBAC9C,QAAQ,EAAE,IAAI;gBACd,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF,EACD,YAAY,EAAE;gBACZ,cAAc,EAAE,yBAAyB;gBACzC,IAAI,EAAE;oBACJ,IAAI,EAAE,WAAW;oBACjB,SAAS,EAAE,sCAAsC;iBAClD;aACF,GACF;KACF;CACF,CAAC;AAEF,AAAO,MAAM,IAAI,GAA+B;IAC9C,IAAI,EAAE;QACJ,IAAI,EAAE,WAAW;QACjB,SAAS,EAAE,MAAM;QACjB,eAAe,kCACV,QAAQ,CAAC,IAAI,CAAC,eAAe,KAChC,SAAS,EAAE;gBACT,cAAc,EAAE,WAAW;gBAC3B,QAAQ,EAAE,IAAI;gBACd,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF,EACD,iBAAiB,EAAE;gBACjB,cAAc,EAAE,mBAAmB;gBACnC,QAAQ,EAAE,IAAI;gBACd,IAAI,EAAE;oBACJ,IAAI,EAAE,UAAU;oBAChB,OAAO,EAAE;wBACP,IAAI,EAAE;4BACJ,IAAI,EAAE,QAAQ;yBACf;qBACF;iBACF;aACF,EACD,GAAG,EAAE;gBACH,cAAc,EAAE,KAAK;gBACrB,IAAI,EAAE;oBACJ,IAAI,EAAE,WAAW;oBACjB,SAAS,EAAE,SAAS;iBACrB;aACF,EACD,KAAK,EAAE;gBACL,cAAc,EAAE,OAAO;gBACvB,IAAI,EAAE;oBACJ,IAAI,EAAE,UAAU;oBAChB,OAAO,EAAE;wBACP,IAAI,EAAE;4BACJ,IAAI,EAAE,QAAQ;yBACf;qBACF;iBACF;aACF,EACD,gBAAgB,EAAE;gBAChB,cAAc,EAAE,kBAAkB;gBAClC,IAAI,EAAE;oBACJ,IAAI,EAAE,WAAW;oBACjB,SAAS,EAAE,kBAAkB;iBAC9B;aACF,EACD,WAAW,EAAE;gBACX,cAAc,EAAE,wBAAwB;gBACxC,QAAQ,EAAE,IAAI;gBACd,IAAI,EAAE;oBACJ,IAAI,EAAE,UAAU;iBACjB;aACF,EACD,MAAM,EAAE;gBACN,cAAc,EAAE,mBAAmB;gBACnC,IAAI,EAAE;oBACJ,IAAI,EAAE,MAAM;oBACZ,aAAa,EAAE,CAAC,SAAS,EAAE,OAAO,CAAC;iBACpC;aACF,EACD,gBAAgB,EAAE;gBAChB,cAAc,EAAE,6BAA6B;gBAC7C,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF,EACD,YAAY,EAAE;gBACZ,cAAc,EAAE,yBAAyB;gBACzC,IAAI,EAAE;oBACJ,IAAI,EAAE,WAAW;oBACjB,SAAS,EAAE,2BAA2B;iBACvC;aACF,EACD,qBAAqB,EAAE;gBACrB,cAAc,EAAE,kCAAkC;gBAClD,IAAI,EAAE;oBACJ,IAAI,EAAE,WAAW;oBACjB,SAAS,EAAE,uBAAuB;iBACnC;aACF,EACD,YAAY,EAAE;gBACZ,cAAc,EAAE,yBAAyB;gBACzC,IAAI,EAAE;oBACJ,IAAI,EAAE,WAAW;oBACjB,SAAS,EAAE,cAAc;iBAC1B;aACF,EACD,UAAU,EAAE;gBACV,cAAc,EAAE,uBAAuB;gBACvC,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF,EACD,aAAa,EAAE;gBACb,cAAc,EAAE,0BAA0B;gBAC1C,QAAQ,EAAE,IAAI;gBACd,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF,EACD,QAAQ,EAAE;gBACR,cAAc,EAAE,qBAAqB;gBACrC,QAAQ,EAAE,IAAI;gBACd,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF,EACD,4BAA4B,EAAE;gBAC5B,cAAc,EAAE,yCAAyC;gBACzD,IAAI,EAAE;oBACJ,IAAI,EAAE,WAAW;oBACjB,SAAS,EAAE,8BAA8B;iBAC1C;aACF,EACD,iBAAiB,EAAE;gBACjB,cAAc,EAAE,8BAA8B;gBAC9C,QAAQ,EAAE,IAAI;gBACd,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF,EACD,iBAAiB,EAAE;gBACjB,cAAc,EAAE,8BAA8B;gBAC9C,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF,EACD,iBAAiB,EAAE;gBACjB,cAAc,EAAE,8BAA8B;gBAC9C,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF,EACD,gBAAgB,EAAE;gBAChB,cAAc,EAAE,6BAA6B;gBAC7C,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF,EACD,gBAAgB,EAAE;gBAChB,cAAc,EAAE,6BAA6B;gBAC7C,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF,EACD,SAAS,EAAE;gBACT,cAAc,EAAE,sBAAsB;gBACtC,QAAQ,EAAE,IAAI;gBACd,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF,EACD,UAAU,EAAE;gBACV,cAAc,EAAE,uBAAuB;gBACvC,IAAI,EAAE;oBACJ,IAAI,EAAE,WAAW;oBACjB,SAAS,EAAE,YAAY;iBACxB;aACF,EACD,SAAS,EAAE;gBACT,cAAc,EAAE,sBAAsB;gBACtC,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF,EACD,SAAS,EAAE;gBACT,cAAc,EAAE,sBAAsB;gBACtC,QAAQ,EAAE,IAAI;gBACd,IAAI,EAAE;oBACJ,IAAI,EAAE,UAAU;oBAChB,OAAO,EAAE;wBACP,IAAI,EAAE;4BACJ,IAAI,EAAE,WAAW;4BACjB,SAAS,EAAE,kBAAkB;yBAC9B;qBACF;iBACF;aACF,EACD,mBAAmB,EAAE;gBACnB,cAAc,EAAE,gCAAgC;gBAChD,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF,EACD,YAAY,EAAE;gBACZ,cAAc,EAAE,yBAAyB;gBACzC,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF,EACD,IAAI,EAAE;gBACJ,cAAc,EAAE,iBAAiB;gBACjC,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF,EACD,eAAe,EAAE;gBACf,cAAc,EAAE,4BAA4B;gBAC5C,IAAI,EAAE;oBACJ,IAAI,EAAE,SAAS;iBAChB;aACF,EACD,yBAAyB,EAAE;gBACzB,cAAc,EAAE,sCAAsC;gBACtD,IAAI,EAAE;oBACJ,IAAI,EAAE,WAAW;oBACjB,SAAS,EAAE,2BAA2B;iBACvC;aACF,EACD,mBAAmB,EAAE;gBACnB,cAAc,EAAE,gCAAgC;gBAChD,IAAI,EAAE;oBACJ,IAAI,EAAE,SAAS;iBAChB;aACF,EACD,eAAe,EAAE;gBACf,cAAc,EAAE,4BAA4B;gBAC5C,IAAI,EAAE;oBACJ,IAAI,EAAE,WAAW;oBACjB,SAAS,EAAE,qBAAqB;iBACjC;aACF,EACD,iBAAiB,EAAE;gBACjB,cAAc,EAAE,8BAA8B;gBAC9C,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF,EACD,mBAAmB,EAAE;gBACnB,cAAc,EAAE,gCAAgC;gBAChD,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF,GACF;KACF;CACF,CAAC;AAEF,AAAO,MAAM,QAAQ,GAA+B;IAClD,IAAI,EAAE;QACJ,IAAI,EAAE,WAAW;QACjB,SAAS,EAAE,UAAU;QACrB,eAAe,kCACV,QAAQ,CAAC,IAAI,CAAC,eAAe,KAChC,SAAS,EAAE;gBACT,cAAc,EAAE,WAAW;gBAC3B,QAAQ,EAAE,IAAI;gBACd,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF,EACD,GAAG,EAAE;gBACH,cAAc,EAAE,KAAK;gBACrB,IAAI,EAAE;oBACJ,IAAI,EAAE,WAAW;oBACjB,SAAS,EAAE,aAAa;iBACzB;aACF,EACD,gBAAgB,EAAE;gBAChB,cAAc,EAAE,kBAAkB;gBAClC,IAAI,EAAE;oBACJ,IAAI,EAAE,WAAW;oBACjB,SAAS,EAAE,kBAAkB;iBAC9B;aACF,EACD,WAAW,EAAE;gBACX,cAAc,EAAE,wBAAwB;gBACxC,QAAQ,EAAE,IAAI;gBACd,IAAI,EAAE;oBACJ,IAAI,EAAE,UAAU;iBACjB;aACF,EACD,MAAM,EAAE;gBACN,cAAc,EAAE,mBAAmB;gBACnC,IAAI,EAAE;oBACJ,IAAI,EAAE,MAAM;oBACZ,aAAa,EAAE,CAAC,SAAS,EAAE,OAAO,CAAC;iBACpC;aACF,EACD,gBAAgB,EAAE;gBAChB,cAAc,EAAE,6BAA6B;gBAC7C,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF,EACD,YAAY,EAAE;gBACZ,cAAc,EAAE,yBAAyB;gBACzC,IAAI,EAAE;oBACJ,IAAI,EAAE,WAAW;oBACjB,SAAS,EAAE,2BAA2B;iBACvC;aACF,EACD,qBAAqB,EAAE;gBACrB,cAAc,EAAE,kCAAkC;gBAClD,IAAI,EAAE;oBACJ,IAAI,EAAE,WAAW;oBACjB,SAAS,EAAE,uBAAuB;iBACnC;aACF,EACD,YAAY,EAAE;gBACZ,cAAc,EAAE,yBAAyB;gBACzC,IAAI,EAAE;oBACJ,IAAI,EAAE,WAAW;oBACjB,SAAS,EAAE,cAAc;iBAC1B;aACF,EACD,UAAU,EAAE;gBACV,cAAc,EAAE,uBAAuB;gBACvC,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF,EACD,aAAa,EAAE;gBACb,cAAc,EAAE,0BAA0B;gBAC1C,QAAQ,EAAE,IAAI;gBACd,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF,EACD,SAAS,EAAE;gBACT,cAAc,EAAE,sBAAsB;gBACtC,QAAQ,EAAE,IAAI;gBACd,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF,EACD,QAAQ,EAAE;gBACR,cAAc,EAAE,qBAAqB;gBACrC,QAAQ,EAAE,IAAI;gBACd,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF,EACD,4BAA4B,EAAE;gBAC5B,cAAc,EAAE,yCAAyC;gBACzD,IAAI,EAAE;oBACJ,IAAI,EAAE,WAAW;oBACjB,SAAS,EAAE,8BAA8B;iBAC1C;aACF,EACD,iBAAiB,EAAE;gBACjB,cAAc,EAAE,8BAA8B;gBAC9C,QAAQ,EAAE,IAAI;gBACd,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF,EACD,WAAW,EAAE;gBACX,cAAc,EAAE,wBAAwB;gBACxC,IAAI,EAAE;oBACJ,IAAI,EAAE,SAAS;iBAChB;aACF,EACD,UAAU,EAAE;gBACV,cAAc,EAAE,uBAAuB;gBACvC,IAAI,EAAE;oBACJ,IAAI,EAAE,WAAW;oBACjB,SAAS,EAAE,YAAY;iBACxB;aACF,EACD,mBAAmB,EAAE;gBACnB,cAAc,EAAE,gCAAgC;gBAChD,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF,EACD,YAAY,EAAE;gBACZ,cAAc,EAAE,yBAAyB;gBACzC,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF,EACD,eAAe,EAAE;gBACf,cAAc,EAAE,4BAA4B;gBAC5C,IAAI,EAAE;oBACJ,IAAI,EAAE,WAAW;oBACjB,SAAS,EAAE,qBAAqB;iBACjC;aACF,EACD,mBAAmB,EAAE;gBACnB,cAAc,EAAE,gCAAgC;gBAChD,IAAI,EAAE;oBACJ,IAAI,EAAE,SAAS;iBAChB;aACF,EACD,mBAAmB,EAAE;gBACnB,cAAc,EAAE,gCAAgC;gBAChD,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF,EACD,iBAAiB,EAAE;gBACjB,cAAc,EAAE,8BAA8B;gBAC9C,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF,GACF;KACF;CACF,CAAC;AAEF,AAAO,MAAM,iBAAiB,GAA+B;IAC3D,IAAI,EAAE;QACJ,IAAI,EAAE,WAAW;QACjB,SAAS,EAAE,mBAAmB;QAC9B,eAAe,kCACV,QAAQ,CAAC,IAAI,CAAC,eAAe,KAChC,QAAQ,EAAE;gBACR,cAAc,EAAE,UAAU;gBAC1B,IAAI,EAAE;oBACJ,IAAI,EAAE,WAAW;oBACjB,SAAS,EAAE,uBAAuB;iBACnC;aACF,EACD,cAAc,EAAE;gBACd,cAAc,EAAE,2BAA2B;gBAC3C,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF,EACD,SAAS,EAAE;gBACT,cAAc,EAAE,sBAAsB;gBACtC,IAAI,EAAE;oBACJ,IAAI,EAAE,WAAW;oBACjB,SAAS,EAAE,yBAAyB;iBACrC;aACF,EACD,YAAY,EAAE;gBACZ,cAAc,EAAE,yBAAyB;gBACzC,QAAQ,EAAE,IAAI;gBACd,IAAI,EAAE;oBACJ,IAAI,EAAE,UAAU;oBAChB,OAAO,EAAE;wBACP,IAAI,EAAE;4BACJ,IAAI,EAAE,WAAW;4BACjB,SAAS,EAAE,yBAAyB;yBACrC;qBACF;iBACF;aACF,EACD,iBAAiB,EAAE;gBACjB,cAAc,EAAE,8BAA8B;gBAC9C,QAAQ,EAAE,IAAI;gBACd,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF,EACD,iCAAiC,EAAE;gBACjC,cAAc,EAAE,8CAA8C;gBAC9D,IAAI,EAAE;oBACJ,IAAI,EAAE,SAAS;iBAChB;aACF,EACD,wBAAwB,EAAE;gBACxB,cAAc,EAAE,qCAAqC;gBACrD,QAAQ,EAAE,IAAI;gBACd,IAAI,EAAE;oBACJ,IAAI,EAAE,UAAU;iBACjB;aACF,EACD,oBAAoB,EAAE;gBACpB,cAAc,EAAE,iCAAiC;gBACjD,IAAI,EAAE;oBACJ,IAAI,EAAE,WAAW;oBACjB,SAAS,EAAE,UAAU;iBACtB;aACF,GACF;KACF;CACF,CAAC;AAEF,AAAO,MAAM,UAAU,GAA+B;IACpD,IAAI,EAAE;QACJ,IAAI,EAAE,WAAW;QACjB,SAAS,EAAE,YAAY;QACvB,eAAe,kCACV,QAAQ,CAAC,IAAI,CAAC,eAAe,KAChC,gBAAgB,EAAE;gBAChB,cAAc,EAAE,kBAAkB;gBAClC,IAAI,EAAE;oBACJ,IAAI,EAAE,WAAW;oBACjB,SAAS,EAAE,kBAAkB;iBAC9B;aACF,EACD,0BAA0B,EAAE;gBAC1B,cAAc,EAAE,uCAAuC;gBACvD,QAAQ,EAAE,IAAI;gBACd,IAAI,EAAE;oBACJ,IAAI,EAAE,UAAU;oBAChB,OAAO,EAAE;wBACP,IAAI,EAAE;4BACJ,IAAI,EAAE,WAAW;4BACjB,SAAS,EAAE,2BAA2B;yBACvC;qBACF;iBACF;aACF,EACD,iBAAiB,EAAE;gBACjB,cAAc,EAAE,8BAA8B;gBAC9C,QAAQ,EAAE,IAAI;gBACd,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF,EACD,WAAW,EAAE;gBACX,cAAc,EAAE,wBAAwB;gBACxC,QAAQ,EAAE,IAAI;gBACd,IAAI,EAAE;oBACJ,IAAI,EAAE,UAAU;iBACjB;aACF,GACF;KACF;CACF,CAAC;AAEF,AAAO,MAAM,OAAO,GAA+B;IACjD,IAAI,EAAE;QACJ,IAAI,EAAE,WAAW;QACjB,SAAS,EAAE,SAAS;QACpB,eAAe,kCACV,QAAQ,CAAC,IAAI,CAAC,eAAe,KAChC,WAAW,EAAE;gBACX,cAAc,EAAE,wBAAwB;gBACxC,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF,EACD,UAAU,EAAE;gBACV,cAAc,EAAE,uBAAuB;gBACvC,IAAI,EAAE;oBACJ,IAAI,EAAE,WAAW;oBACjB,SAAS,EAAE,mBAAmB;iBAC/B;aACF,EACD,iBAAiB,EAAE;gBACjB,cAAc,EAAE,8BAA8B;gBAC9C,QAAQ,EAAE,IAAI;gBACd,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF,EACD,cAAc,EAAE;gBACd,cAAc,EAAE,2BAA2B;gBAC3C,IAAI,EAAE;oBACJ,IAAI,EAAE,WAAW;oBACjB,SAAS,EAAE,gBAAgB;iBAC5B;aACF,EACD,gBAAgB,EAAE;gBAChB,cAAc,EAAE,6BAA6B;gBAC7C,IAAI,EAAE;oBACJ,IAAI,EAAE,WAAW;oBACjB,SAAS,EAAE,kBAAkB;iBAC9B;aACF,EACD,aAAa,EAAE;gBACb,cAAc,EAAE,0BAA0B;gBAC1C,IAAI,EAAE;oBACJ,IAAI,EAAE,WAAW;oBACjB,SAAS,EAAE,eAAe;iBAC3B;aACF,GACF;KACF;CACF,CAAC;AAEF,AAAO,MAAM,YAAY,GAA+B;IACtD,IAAI,EAAE;QACJ,IAAI,EAAE,WAAW;QACjB,SAAS,EAAE,cAAc;QACzB,eAAe,kCACV,QAAQ,CAAC,IAAI,CAAC,eAAe,KAChC,WAAW,EAAE;gBACX,cAAc,EAAE,wBAAwB;gBACxC,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF,EACD,IAAI,EAAE;gBACJ,cAAc,EAAE,iBAAiB;gBACjC,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF,EACD,mBAAmB,EAAE;gBACnB,cAAc,EAAE,gCAAgC;gBAChD,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF,EACD,cAAc,EAAE;gBACd,cAAc,EAAE,2BAA2B;gBAC3C,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF,EACD,MAAM,EAAE;gBACN,cAAc,EAAE,mBAAmB;gBACnC,IAAI,EAAE;oBACJ,IAAI,EAAE,MAAM;oBACZ,aAAa,EAAE,CAAC,SAAS,EAAE,OAAO,CAAC;iBACpC;aACF,EACD,OAAO,EAAE;gBACP,cAAc,EAAE,oBAAoB;gBACpC,IAAI,EAAE;oBACJ,IAAI,EAAE,MAAM;oBACZ,aAAa,EAAE,CAAC,aAAa,EAAE,aAAa,CAAC;iBAC9C;aACF,EACD,gBAAgB,EAAE;gBAChB,cAAc,EAAE,6BAA6B;gBAC7C,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF,EACD,aAAa,EAAE;gBACb,cAAc,EAAE,0BAA0B;gBAC1C,IAAI,EAAE;oBACJ,IAAI,EAAE,UAAU;iBACjB;aACF,EACD,UAAU,EAAE;gBACV,cAAc,EAAE,uBAAuB;gBACvC,IAAI,EAAE;oBACJ,IAAI,EAAE,WAAW;oBACjB,SAAS,EAAE,wBAAwB;iBACpC;aACF,EACD,WAAW,EAAE;gBACX,cAAc,EAAE,wBAAwB;gBACxC,IAAI,EAAE;oBACJ,IAAI,EAAE,WAAW;oBACjB,SAAS,EAAE,iCAAiC;iBAC7C;aACF,EACD,UAAU,EAAE;gBACV,cAAc,EAAE,uBAAuB;gBACvC,IAAI,EAAE;oBACJ,IAAI,EAAE,WAAW;oBACjB,SAAS,EAAE,YAAY;iBACxB;aACF,EACD,YAAY,EAAE;gBACZ,cAAc,EAAE,yBAAyB;gBACzC,IAAI,EAAE;oBACJ,IAAI,EAAE,WAAW;oBACjB,SAAS,EAAE,mBAAmB;iBAC/B;aACF,EACD,iBAAiB,EAAE;gBACjB,cAAc,EAAE,8BAA8B;gBAC9C,QAAQ,EAAE,IAAI;gBACd,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF,EACD,QAAQ,EAAE;gBACR,cAAc,EAAE,qBAAqB;gBACrC,IAAI,EAAE;oBACJ,IAAI,EAAE,UAAU;oBAChB,OAAO,EAAE;wBACP,IAAI,EAAE;4BACJ,IAAI,EAAE,WAAW;4BACjB,SAAS,EAAE,qBAAqB;yBACjC;qBACF;iBACF;aACF,GACF;KACF;CACF,CAAC;AAEF,AAAO,MAAM,mBAAmB,GAA+B;IAC7D,IAAI,EAAE;QACJ,IAAI,EAAE,WAAW;QACjB,SAAS,EAAE,qBAAqB;QAChC,eAAe,kCACV,QAAQ,CAAC,IAAI,CAAC,eAAe,KAChC,iBAAiB,EAAE;gBACjB,cAAc,EAAE,8BAA8B;gBAC9C,IAAI,EAAE;oBACJ,IAAI,EAAE,WAAW;oBACjB,SAAS,EAAE,sCAAsC;iBAClD;aACF,EACD,iBAAiB,EAAE;gBACjB,cAAc,EAAE,8BAA8B;gBAC9C,QAAQ,EAAE,IAAI;gBACd,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF,EACD,cAAc,EAAE;gBACd,cAAc,EAAE,2BAA2B;gBAC3C,IAAI,EAAE;oBACJ,IAAI,EAAE,WAAW;oBACjB,SAAS,EAAE,mCAAmC;iBAC/C;aACF,EACD,iBAAiB,EAAE;gBACjB,cAAc,EAAE,8BAA8B;gBAC9C,IAAI,EAAE;oBACJ,IAAI,EAAE,WAAW;oBACjB,SAAS,EAAE,mBAAmB;iBAC/B;aACF,GACF;KACF;CACF,CAAC;AAEF,AAAO,MAAM,kBAAkB,GAA+B;IAC5D,IAAI,EAAE;QACJ,IAAI,EAAE,WAAW;QACjB,SAAS,EAAE,oBAAoB;QAC/B,eAAe,kCACV,QAAQ,CAAC,IAAI,CAAC,eAAe,KAChC,WAAW,EAAE;gBACX,cAAc,EAAE,wBAAwB;gBACxC,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF,EACD,IAAI,EAAE;gBACJ,cAAc,EAAE,iBAAiB;gBACjC,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF,EACD,mBAAmB,EAAE;gBACnB,cAAc,EAAE,gCAAgC;gBAChD,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF,EACD,cAAc,EAAE;gBACd,cAAc,EAAE,2BAA2B;gBAC3C,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF,EACD,aAAa,EAAE;gBACb,cAAc,EAAE,0BAA0B;gBAC1C,IAAI,EAAE;oBACJ,IAAI,EAAE,UAAU;iBACjB;aACF,EACD,eAAe,EAAE;gBACf,cAAc,EAAE,4BAA4B;gBAC5C,IAAI,EAAE;oBACJ,IAAI,EAAE,MAAM;oBACZ,aAAa,EAAE,CAAC,SAAS,EAAE,OAAO,CAAC;iBACpC;aACF,GACF;KACF;CACF,CAAC;AAEF,AAAO,MAAM,yBAAyB,GAA+B;IACnE,IAAI,EAAE;QACJ,IAAI,EAAE,WAAW;QACjB,SAAS,EAAE,2BAA2B;QACtC,eAAe,kCACV,QAAQ,CAAC,IAAI,CAAC,eAAe,KAChC,iBAAiB,EAAE;gBACjB,cAAc,EAAE,8BAA8B;gBAC9C,IAAI,EAAE;oBACJ,IAAI,EAAE,WAAW;oBACjB,SAAS,EAAE,4CAA4C;iBACxD;aACF,EACD,iBAAiB,EAAE;gBACjB,cAAc,EAAE,8BAA8B;gBAC9C,QAAQ,EAAE,IAAI;gBACd,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF,EACD,iBAAiB,EAAE;gBACjB,cAAc,EAAE,8BAA8B;gBAC9C,IAAI,EAAE;oBACJ,IAAI,EAAE,WAAW;oBACjB,SAAS,EAAE,mBAAmB;iBAC/B;aACF,GACF;KACF;CACF,CAAC;AAEF,AAAO,MAAM,qBAAqB,GAA+B;IAC/D,IAAI,EAAE;QACJ,IAAI,EAAE,WAAW;QACjB,SAAS,EAAE,uBAAuB;QAClC,eAAe,kCACV,cAAc,CAAC,IAAI,CAAC,eAAe,KACtC,GAAG,EAAE;gBACH,cAAc,EAAE,KAAK;gBACrB,IAAI,EAAE;oBACJ,IAAI,EAAE,WAAW;oBACjB,SAAS,EAAE,KAAK;iBACjB;aACF,EACD,yBAAyB,EAAE;gBACzB,cAAc,EAAE,sCAAsC;gBACtD,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF,EACD,wBAAwB,EAAE;gBACxB,cAAc,EAAE,qCAAqC;gBACrD,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF,EACD,eAAe,EAAE;gBACf,cAAc,EAAE,4BAA4B;gBAC5C,IAAI,EAAE;oBACJ,IAAI,EAAE,UAAU;oBAChB,OAAO,EAAE;wBACP,IAAI,EAAE;4BACJ,IAAI,EAAE,WAAW;4BACjB,SAAS,EAAE,aAAa;yBACzB;qBACF;iBACF;aACF,EACD,uBAAuB,EAAE;gBACvB,cAAc,EAAE,oCAAoC;gBACpD,IAAI,EAAE;oBACJ,IAAI,EAAE,WAAW;oBACjB,SAAS,EAAE,aAAa;iBACzB;aACF,EACD,QAAQ,EAAE;gBACR,cAAc,EAAE,qBAAqB;gBACrC,QAAQ,EAAE,IAAI;gBACd,IAAI,EAAE;oBACJ,IAAI,EAAE,UAAU;oBAChB,OAAO,EAAE;wBACP,IAAI,EAAE;4BACJ,IAAI,EAAE,WAAW;4BACjB,SAAS,EAAE,oBAAoB;yBAChC;qBACF;iBACF;aACF,GACF;KACF;CACF,CAAC;AAEF,AAAO,MAAM,6BAA6B,GAA+B;IACvE,IAAI,EAAE;QACJ,IAAI,EAAE,WAAW;QACjB,SAAS,EAAE,+BAA+B;QAC1C,eAAe,oBACV,cAAc,CAAC,IAAI,CAAC,eAAe,CACvC;KACF;CACF,CAAC;AAEF,AAAO,MAAM,wBAAwB,GAA+B;IAClE,IAAI,EAAE;QACJ,IAAI,EAAE,WAAW;QACjB,SAAS,EAAE,0BAA0B;QACrC,eAAe,kCACV,cAAc,CAAC,IAAI,CAAC,eAAe,KACtC,KAAK,EAAE;gBACL,cAAc,EAAE,OAAO;gBACvB,IAAI,EAAE;oBACJ,IAAI,EAAE,UAAU;oBAChB,OAAO,EAAE;wBACP,IAAI,EAAE;4BACJ,IAAI,EAAE,QAAQ;yBACf;qBACF;iBACF;aACF,EACD,wBAAwB,EAAE;gBACxB,WAAW,EAAE;oBACX,gBAAgB,EAAE,CAAC;iBACpB;gBACD,cAAc,EAAE,qCAAqC;gBACrD,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF,EACD,KAAK,EAAE;gBACL,cAAc,EAAE,kBAAkB;gBAClC,QAAQ,EAAE,IAAI;gBACd,IAAI,EAAE;oBACJ,IAAI,EAAE,UAAU;oBAChB,OAAO,EAAE;wBACP,IAAI,EAAE;4BACJ,IAAI,EAAE,WAAW;4BACjB,SAAS,EAAE,qBAAqB;yBACjC;qBACF;iBACF;aACF,EACD,YAAY,EAAE;gBACZ,cAAc,EAAE,yBAAyB;gBACzC,IAAI,EAAE;oBACJ,IAAI,EAAE,WAAW;oBACjB,SAAS,EAAE,gCAAgC;iBAC5C;aACF,EACD,yBAAyB,EAAE;gBACzB,cAAc,EAAE,sCAAsC;gBACtD,IAAI,EAAE;oBACJ,IAAI,EAAE,SAAS;iBAChB;aACF,GACF;KACF;CACF,CAAC;AAEF,AAAO,MAAM,mBAAmB,GAA+B;IAC7D,IAAI,EAAE;QACJ,IAAI,EAAE,WAAW;QACjB,SAAS,EAAE,qBAAqB;QAChC,eAAe,kCACV,cAAc,CAAC,IAAI,CAAC,eAAe,KACtC,mBAAmB,EAAE;gBACnB,WAAW,EAAE;oBACX,gBAAgB,EAAE,CAAC;iBACpB;gBACD,cAAc,EAAE,gCAAgC;gBAChD,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF,EACD,oBAAoB,EAAE;gBACpB,cAAc,EAAE,iCAAiC;gBACjD,IAAI,EAAE;oBACJ,IAAI,EAAE,SAAS;iBAChB;aACF,EACD,MAAM,EAAE;gBACN,cAAc,EAAE,mBAAmB;gBACnC,QAAQ,EAAE,IAAI;gBACd,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF,EACD,eAAe,EAAE;gBACf,cAAc,EAAE,4BAA4B;gBAC5C,QAAQ,EAAE,IAAI;gBACd,IAAI,EAAE;oBACJ,IAAI,EAAE,UAAU;oBAChB,OAAO,EAAE;wBACP,IAAI,EAAE;4BACJ,IAAI,EAAE,WAAW;4BACjB,SAAS,EAAE,qBAAqB;yBACjC;qBACF;iBACF;aACF,EACD,WAAW,EAAE;gBACX,cAAc,EAAE,wBAAwB;gBACxC,IAAI,EAAE;oBACJ,IAAI,EAAE,MAAM;oBACZ,aAAa,EAAE;wBACb,MAAM;wBACN,uBAAuB;wBACvB,0BAA0B;qBAC3B;iBACF;aACF,EACD,gBAAgB,EAAE;gBAChB,cAAc,EAAE,6BAA6B;gBAC7C,QAAQ,EAAE,IAAI;gBACd,IAAI,EAAE;oBACJ,IAAI,EAAE,UAAU;iBACjB;aACF,EACD,iBAAiB,EAAE;gBACjB,cAAc,EAAE,8BAA8B;gBAC9C,QAAQ,EAAE,IAAI;gBACd,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF,EACD,YAAY,EAAE;gBACZ,cAAc,EAAE,yBAAyB;gBACzC,IAAI,EAAE;oBACJ,IAAI,EAAE,WAAW;oBACjB,SAAS,EAAE,2BAA2B;iBACvC;aACF,EACD,WAAW,EAAE;gBACX,cAAc,EAAE,wBAAwB;gBACxC,QAAQ,EAAE,IAAI;gBACd,IAAI,EAAE;oBACJ,IAAI,EAAE,UAAU;iBACjB;aACF,GACF;KACF;CACF,CAAC;AAEF,AAAO,MAAM,0BAA0B,GAA+B;IACpE,IAAI,EAAE;QACJ,IAAI,EAAE,WAAW;QACjB,SAAS,EAAE,4BAA4B;QACvC,eAAe,kCACV,cAAc,CAAC,IAAI,CAAC,eAAe,KACtC,SAAS,EAAE;gBACT,cAAc,EAAE,sBAAsB;gBACtC,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF,GACF;KACF;CACF,CAAC;AAEF,AAAO,MAAM,6BAA6B,GAA+B;IACvE,IAAI,EAAE;QACJ,IAAI,EAAE,WAAW;QACjB,SAAS,EAAE,+BAA+B;QAC1C,eAAe,kCACV,cAAc,CAAC,IAAI,CAAC,eAAe,KACtC,cAAc,EAAE;gBACd,cAAc,EAAE,2BAA2B;gBAC3C,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF,EACD,SAAS,EAAE;gBACT,cAAc,EAAE,sBAAsB;gBACtC,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF,EACD,IAAI,EAAE;gBACJ,cAAc,EAAE,iBAAiB;gBACjC,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF,EACD,kBAAkB,EAAE;gBAClB,cAAc,EAAE,+BAA+B;gBAC/C,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF,EACD,uBAAuB,EAAE;gBACvB,cAAc,EAAE,oCAAoC;gBACpD,IAAI,EAAE;oBACJ,IAAI,EAAE,SAAS;iBAChB;aACF,EACD,sBAAsB,EAAE;gBACtB,cAAc,EAAE,mCAAmC;gBACnD,IAAI,EAAE;oBACJ,IAAI,EAAE,SAAS;iBAChB;aACF,EACD,QAAQ,EAAE;gBACR,cAAc,EAAE,qBAAqB;gBACrC,IAAI,EAAE;oBACJ,IAAI,EAAE,YAAY;oBAClB,KAAK,EAAE,EAAE,IAAI,EAAE,EAAE,IAAI,EAAE,KAAK,EAAE,EAAE;iBACjC;aACF,EACD,iBAAiB,EAAE;gBACjB,cAAc,EAAE,8BAA8B;gBAC9C,IAAI,EAAE;oBACJ,IAAI,EAAE,YAAY;oBAClB,KAAK,EAAE,EAAE,IAAI,EAAE,EAAE,IAAI,EAAE,KAAK,EAAE,EAAE;iBACjC;aACF,EACD,gBAAgB,EAAE;gBAChB,cAAc,EAAE,6BAA6B;gBAC7C,IAAI,EAAE;oBACJ,IAAI,EAAE,SAAS;iBAChB;aACF,EACD,6BAA6B,EAAE;gBAC7B,cAAc,EAAE,0CAA0C;gBAC1D,IAAI,EAAE;oBACJ,IAAI,EAAE,YAAY;oBAClB,KAAK,EAAE,EAAE,IAAI,EAAE,EAAE,IAAI,EAAE,KAAK,EAAE,EAAE;iBACjC;aACF,GACF;KACF;CACF,CAAC;AAEF,AAAO,MAAM,WAAW,GAA+B;IACrD,IAAI,EAAE;QACJ,IAAI,EAAE,WAAW;QACjB,SAAS,EAAE,aAAa;QACxB,eAAe,kCACV,cAAc,CAAC,IAAI,CAAC,eAAe,KACtC,oBAAoB,EAAE;gBACpB,cAAc,EAAE,iCAAiC;gBACjD,IAAI,EAAE;oBACJ,IAAI,EAAE,WAAW;oBACjB,SAAS,EAAE,aAAa;iBACzB;aACF,EACD,cAAc,EAAE;gBACd,cAAc,EAAE,2BAA2B;gBAC3C,IAAI,EAAE;oBACJ,IAAI,EAAE,WAAW;oBACjB,SAAS,EAAE,qBAAqB;iBACjC;aACF,EACD,iBAAiB,EAAE;gBACjB,cAAc,EAAE,8BAA8B;gBAC9C,QAAQ,EAAE,IAAI;gBACd,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF,EACD,gBAAgB,EAAE;gBAChB,cAAc,EAAE,6BAA6B;gBAC7C,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF,GACF;KACF;CACF,CAAC;AAEF,AAAO,MAAM,oBAAoB,GAA+B;IAC9D,IAAI,EAAE;QACJ,IAAI,EAAE,WAAW;QACjB,SAAS,EAAE,sBAAsB;QACjC,eAAe,kCACV,cAAc,CAAC,IAAI,CAAC,eAAe,KACtC,IAAI,EAAE;gBACJ,cAAc,EAAE,MAAM;gBACtB,IAAI,EAAE;oBACJ,IAAI,EAAE,WAAW;oBACjB,SAAS,EAAE,MAAM;iBAClB;aACF,EACD,QAAQ,EAAE;gBACR,cAAc,EAAE,UAAU;gBAC1B,IAAI,EAAE;oBACJ,IAAI,EAAE,WAAW;oBACjB,SAAS,EAAE,wBAAwB;iBACpC;aACF,EACD,KAAK,EAAE;gBACL,cAAc,EAAE,OAAO;gBACvB,IAAI,EAAE;oBACJ,IAAI,EAAE,UAAU;oBAChB,OAAO,EAAE;wBACP,IAAI,EAAE;4BACJ,IAAI,EAAE,QAAQ;yBACf;qBACF;iBACF;aACF,EACD,eAAe,EAAE;gBACf,cAAc,EAAE,4BAA4B;gBAC5C,IAAI,EAAE;oBACJ,IAAI,EAAE,WAAW;oBACjB,SAAS,EAAE,iBAAiB;iBAC7B;aACF,EACD,cAAc,EAAE;gBACd,cAAc,EAAE,2BAA2B;gBAC3C,IAAI,EAAE;oBACJ,IAAI,EAAE,WAAW;oBACjB,SAAS,EAAE,gBAAgB;iBAC5B;aACF,EACD,sBAAsB,EAAE;gBACtB,cAAc,EAAE,mCAAmC;gBACnD,IAAI,EAAE;oBACJ,IAAI,EAAE,WAAW;oBACjB,SAAS,EAAE,wBAAwB;iBACpC;aACF,EACD,SAAS,EAAE;gBACT,cAAc,EAAE,sBAAsB;gBACtC,IAAI,EAAE;oBACJ,IAAI,EAAE,WAAW;oBACjB,SAAS,EAAE,WAAW;iBACvB;aACF,EACD,cAAc,EAAE;gBACd,cAAc,EAAE,2BAA2B;gBAC3C,IAAI,EAAE;oBACJ,IAAI,EAAE,WAAW;oBACjB,SAAS,EAAE,gBAAgB;iBAC5B;aACF,EACD,eAAe,EAAE;gBACf,cAAc,EAAE,4BAA4B;gBAC5C,IAAI,EAAE;oBACJ,IAAI,EAAE,WAAW;oBACjB,SAAS,EAAE,iBAAiB;iBAC7B;aACF,EACD,kBAAkB,EAAE;gBAClB,cAAc,EAAE,+BAA+B;gBAC/C,IAAI,EAAE;oBACJ,IAAI,EAAE,WAAW;oBACjB,SAAS,EAAE,oBAAoB;iBAChC;aACF,EACD,eAAe,EAAE;gBACf,cAAc,EAAE,4BAA4B;gBAC5C,IAAI,EAAE;oBACJ,IAAI,EAAE,WAAW;oBACjB,SAAS,EAAE,aAAa;iBACzB;aACF,EACD,sBAAsB,EAAE;gBACtB,cAAc,EAAE,mCAAmC;gBACnD,IAAI,EAAE;oBACJ,IAAI,EAAE,WAAW;oBACjB,SAAS,EAAE,aAAa;iBACzB;aACF,EACD,uBAAuB,EAAE;gBACvB,cAAc,EAAE,oCAAoC;gBACpD,IAAI,EAAE;oBACJ,IAAI,EAAE,WAAW;oBACjB,SAAS,EAAE,aAAa;iBACzB;aACF,EACD,QAAQ,EAAE;gBACR,cAAc,EAAE,qBAAqB;gBACrC,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF,EACD,cAAc,EAAE;gBACd,cAAc,EAAE,2BAA2B;gBAC3C,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF,EACD,cAAc,EAAE;gBACd,cAAc,EAAE,2BAA2B;gBAC3C,IAAI,EAAE;oBACJ,IAAI,EAAE,WAAW;oBACjB,SAAS,EAAE,gBAAgB;iBAC5B;aACF,EACD,IAAI,EAAE;gBACJ,cAAc,EAAE,iBAAiB;gBACjC,IAAI,EAAE;oBACJ,IAAI,EAAE,WAAW;oBACjB,SAAS,EAAE,aAAa;iBACzB;aACF,EACD,SAAS,EAAE;gBACT,cAAc,EAAE,sBAAsB;gBACtC,IAAI,EAAE;oBACJ,IAAI,EAAE,WAAW;oBACjB,SAAS,EAAE,aAAa;iBACzB;aACF,EACD,iBAAiB,EAAE;gBACjB,cAAc,EAAE,8BAA8B;gBAC9C,QAAQ,EAAE,IAAI;gBACd,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF,EACD,YAAY,EAAE;gBACZ,cAAc,EAAE,yBAAyB;gBACzC,IAAI,EAAE;oBACJ,IAAI,EAAE,WAAW;oBACjB,SAAS,EAAE,4BAA4B;iBACxC;aACF,EACD,WAAW,EAAE;gBACX,cAAc,EAAE,wBAAwB;gBACxC,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF,EACD,IAAI,EAAE;gBACJ,cAAc,EAAE,iBAAiB;gBACjC,QAAQ,EAAE,IAAI;gBACd,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF,EACD,oBAAoB,EAAE;gBACpB,cAAc,EAAE,iCAAiC;gBACjD,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF,EACD,mBAAmB,EAAE;gBACnB,cAAc,EAAE,gCAAgC;gBAChD,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF,EACD,sBAAsB,EAAE;gBACtB,cAAc,EAAE,mCAAmC;gBACnD,IAAI,EAAE;oBACJ,IAAI,EAAE,WAAW;oBACjB,SAAS,EAAE,wBAAwB;iBACpC;aACF,EACD,QAAQ,EAAE;gBACR,cAAc,EAAE,qBAAqB;gBACrC,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF,EACD,mBAAmB,EAAE;gBACnB,cAAc,EAAE,gCAAgC;gBAChD,IAAI,EAAE;oBACJ,IAAI,EAAE,WAAW;oBACjB,SAAS,EAAE,4BAA4B;iBACxC;aACF,EACD,kBAAkB,EAAE;gBAClB,cAAc,EAAE,+BAA+B;gBAC/C,IAAI,EAAE;oBACJ,IAAI,EAAE,WAAW;oBACjB,SAAS,EAAE,oBAAoB;iBAChC;aACF,EACD,WAAW,EAAE;gBACX,cAAc,EAAE,wBAAwB;gBACxC,QAAQ,EAAE,IAAI;gBACd,IAAI,EAAE;oBACJ,IAAI,EAAE,UAAU;iBACjB;aACF,GACF;KACF;CACF,CAAC;AAEF,AAAO,MAAM,4BAA4B,GAA+B;IACtE,IAAI,EAAE;QACJ,IAAI,EAAE,WAAW;QACjB,SAAS,EAAE,8BAA8B;QACzC,eAAe,kCACV,cAAc,CAAC,IAAI,CAAC,eAAe,KACtC,MAAM,EAAE;gBACN,cAAc,EAAE,mBAAmB;gBACnC,IAAI,EAAE;oBACJ,IAAI,EAAE,WAAW;oBACjB,SAAS,EAAE,wCAAwC;iBACpD;aACF,EACD,iBAAiB,EAAE;gBACjB,cAAc,EAAE,8BAA8B;gBAC9C,QAAQ,EAAE,IAAI;gBACd,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF,EACD,wBAAwB,EAAE;gBACxB,cAAc,EAAE,qCAAqC;gBACrD,QAAQ,EAAE,IAAI;gBACd,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF,EACD,aAAa,EAAE;gBACb,cAAc,EAAE,0BAA0B;gBAC1C,QAAQ,EAAE,IAAI;gBACd,IAAI,EAAE;oBACJ,IAAI,EAAE,UAAU;oBAChB,OAAO,EAAE;wBACP,IAAI,EAAE;4BACJ,IAAI,EAAE,WAAW;4BACjB,SAAS,EAAE,cAAc;yBAC1B;qBACF;iBACF;aACF,GACF;KACF;CACF,CAAC;AAEF,AAAO,MAAM,8BAA8B,GAA+B;IACxE,IAAI,EAAE;QACJ,IAAI,EAAE,WAAW;QACjB,SAAS,EAAE,gCAAgC;QAC3C,eAAe,kCACV,cAAc,CAAC,IAAI,CAAC,eAAe,KACtC,oBAAoB,EAAE;gBACpB,cAAc,EAAE,iCAAiC;gBACjD,QAAQ,EAAE,IAAI;gBACd,IAAI,EAAE;oBACJ,IAAI,EAAE,UAAU;oBAChB,OAAO,EAAE;wBACP,IAAI,EAAE;4BACJ,IAAI,EAAE,WAAW;4BACjB,SAAS,EAAE,qBAAqB;yBACjC;qBACF;iBACF;aACF,EACD,yBAAyB,EAAE;gBACzB,cAAc,EAAE,sCAAsC;gBACtD,QAAQ,EAAE,IAAI;gBACd,IAAI,EAAE;oBACJ,IAAI,EAAE,UAAU;oBAChB,OAAO,EAAE;wBACP,IAAI,EAAE;4BACJ,IAAI,EAAE,WAAW;4BACjB,SAAS,EAAE,qBAAqB;yBACjC;qBACF;iBACF;aACF,EACD,YAAY,EAAE;gBACZ,cAAc,EAAE,yBAAyB;gBACzC,IAAI,EAAE;oBACJ,IAAI,EAAE,WAAW;oBACjB,SAAS,EAAE,sCAAsC;iBAClD;aACF,GACF;KACF;CACF,CAAC;AAEF,AAAO,MAAM,yBAAyB,GAA+B;IACnE,IAAI,EAAE;QACJ,IAAI,EAAE,WAAW;QACjB,SAAS,EAAE,2BAA2B;QACtC,eAAe,kCACV,cAAc,CAAC,IAAI,CAAC,eAAe,KACtC,GAAG,EAAE;gBACH,cAAc,EAAE,KAAK;gBACrB,IAAI,EAAE;oBACJ,IAAI,EAAE,WAAW;oBACjB,SAAS,EAAE,KAAK;iBACjB;aACF,EACD,aAAa,EAAE;gBACb,cAAc,EAAE,0BAA0B;gBAC1C,QAAQ,EAAE,IAAI;gBACd,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF,EACD,yBAAyB,EAAE;gBACzB,cAAc,EAAE,sCAAsC;gBACtD,QAAQ,EAAE,IAAI;gBACd,IAAI,EAAE;oBACJ,IAAI,EAAE,UAAU;oBAChB,OAAO,EAAE;wBACP,IAAI,EAAE;4BACJ,IAAI,EAAE,WAAW;4BACjB,SAAS,EAAE,qBAAqB;yBACjC;qBACF;iBACF;aACF,EACD,gBAAgB,EAAE;gBAChB,cAAc,EAAE,6BAA6B;gBAC7C,QAAQ,EAAE,IAAI;gBACd,IAAI,EAAE;oBACJ,IAAI,EAAE,UAAU;iBACjB;aACF,EACD,iBAAiB,EAAE;gBACjB,cAAc,EAAE,8BAA8B;gBAC9C,QAAQ,EAAE,IAAI;gBACd,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF,EACD,YAAY,EAAE;gBACZ,cAAc,EAAE,yBAAyB;gBACzC,IAAI,EAAE;oBACJ,IAAI,EAAE,WAAW;oBACjB,SAAS,EAAE,iCAAiC;iBAC7C;aACF,EACD,WAAW,EAAE;gBACX,cAAc,EAAE,wBAAwB;gBACxC,QAAQ,EAAE,IAAI;gBACd,IAAI,EAAE;oBACJ,IAAI,EAAE,UAAU;iBACjB;aACF,GACF;KACF;CACF,CAAC;AAEF,AAAO,MAAM,4BAA4B,GAA+B;IACtE,IAAI,EAAE;QACJ,IAAI,EAAE,WAAW;QACjB,SAAS,EAAE,8BAA8B;QACzC,eAAe,kCACV,cAAc,CAAC,IAAI,CAAC,eAAe,KACtC,GAAG,EAAE;gBACH,cAAc,EAAE,KAAK;gBACrB,IAAI,EAAE;oBACJ,IAAI,EAAE,WAAW;oBACjB,SAAS,EAAE,KAAK;iBACjB;aACF,EACD,IAAI,EAAE;gBACJ,cAAc,EAAE,MAAM;gBACtB,IAAI,EAAE;oBACJ,IAAI,EAAE,WAAW;oBACjB,SAAS,EAAE,MAAM;iBAClB;aACF,EACD,QAAQ,EAAE;gBACR,cAAc,EAAE,UAAU;gBAC1B,IAAI,EAAE;oBACJ,IAAI,EAAE,WAAW;oBACjB,SAAS,EAAE,gCAAgC;iBAC5C;aACF,EACD,aAAa,EAAE;gBACb,cAAc,EAAE,0BAA0B;gBAC1C,IAAI,EAAE;oBACJ,IAAI,EAAE,WAAW;oBACjB,SAAS,EAAE,eAAe;iBAC3B;aACF,EACD,sBAAsB,EAAE;gBACtB,cAAc,EAAE,mCAAmC;gBACnD,IAAI,EAAE;oBACJ,IAAI,EAAE,WAAW;oBACjB,SAAS,EAAE,wBAAwB;iBACpC;aACF,EACD,qBAAqB,EAAE;gBACrB,cAAc,EAAE,kCAAkC;gBAClD,IAAI,EAAE;oBACJ,IAAI,EAAE,WAAW;oBACjB,SAAS,EAAE,uCAAuC;iBACnD;aACF,EACD,aAAa,EAAE;gBACb,cAAc,EAAE,0BAA0B;gBAC1C,IAAI,EAAE;oBACJ,IAAI,EAAE,SAAS;iBAChB;aACF,EACD,sCAAsC,EAAE;gBACtC,cAAc,EAAE,mDAAmD;gBACnE,IAAI,EAAE;oBACJ,IAAI,EAAE,SAAS;iBAChB;aACF,EACD,oBAAoB,EAAE;gBACpB,cAAc,EAAE,iCAAiC;gBACjD,IAAI,EAAE;oBACJ,IAAI,EAAE,SAAS;iBAChB;aACF,EACD,sBAAsB,EAAE;gBACtB,cAAc,EAAE,mCAAmC;gBACnD,IAAI,EAAE;oBACJ,IAAI,EAAE,WAAW;oBACjB,SAAS,EAAE,wBAAwB;iBACpC;aACF,EACD,aAAa,EAAE;gBACb,cAAc,EAAE,0BAA0B;gBAC1C,IAAI,EAAE;oBACJ,IAAI,EAAE,WAAW;oBACjB,SAAS,EAAE,eAAe;iBAC3B;aACF,EACD,uBAAuB,EAAE;gBACvB,cAAc,EAAE,oCAAoC;gBACpD,IAAI,EAAE;oBACJ,IAAI,EAAE,WAAW;oBACjB,SAAS,EAAE,aAAa;iBACzB;aACF,GACF;KACF;CACF,CAAC;AAEF,AAAO,MAAM,8BAA8B,GAA+B;IACxE,IAAI,EAAE;QACJ,IAAI,EAAE,WAAW;QACjB,SAAS,EAAE,gCAAgC;QAC3C,eAAe,kCACV,cAAc,CAAC,IAAI,CAAC,eAAe,KACtC,MAAM,EAAE;gBACN,cAAc,EAAE,mBAAmB;gBACnC,IAAI,EAAE;oBACJ,IAAI,EAAE,WAAW;oBACjB,SAAS,EAAE,sCAAsC;iBAClD;aACF,EACD,UAAU,EAAE;gBACV,cAAc,EAAE,uBAAuB;gBACvC,IAAI,EAAE;oBACJ,IAAI,EAAE,UAAU;oBAChB,OAAO,EAAE;wBACP,IAAI,EAAE;4BACJ,IAAI,EAAE,WAAW;4BACjB,SAAS,EAAE,0BAA0B;yBACtC;qBACF;iBACF;aACF,EACD,mBAAmB,EAAE;gBACnB,cAAc,EAAE,gCAAgC;gBAChD,IAAI,EAAE;oBACJ,IAAI,EAAE,UAAU;oBAChB,OAAO,EAAE;wBACP,IAAI,EAAE;4BACJ,IAAI,EAAE,WAAW;4BACjB,SAAS,EAAE,0BAA0B;yBACtC;qBACF;iBACF;aACF,EACD,cAAc,EAAE;gBACd,YAAY,EAAE,KAAK;gBACnB,cAAc,EAAE,2BAA2B;gBAC3C,IAAI,EAAE;oBACJ,IAAI,EAAE,SAAS;iBAChB;aACF,EACD,SAAS,EAAE;gBACT,cAAc,EAAE,sBAAsB;gBACtC,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF,EACD,aAAa,EAAE;gBACb,cAAc,EAAE,0BAA0B;gBAC1C,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF,EACD,gBAAgB,EAAE;gBAChB,cAAc,EAAE,6BAA6B;gBAC7C,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF,EACD,aAAa,EAAE;gBACb,cAAc,EAAE,0BAA0B;gBAC1C,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF,EACD,YAAY,EAAE;gBACZ,cAAc,EAAE,yBAAyB;gBACzC,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF,EACD,iBAAiB,EAAE;gBACjB,cAAc,EAAE,8BAA8B;gBAC9C,QAAQ,EAAE,IAAI;gBACd,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF,EACD,YAAY,EAAE;gBACZ,cAAc,EAAE,yBAAyB;gBACzC,IAAI,EAAE;oBACJ,IAAI,EAAE,WAAW;oBACjB,SAAS,EAAE,sCAAsC;iBAClD;aACF,GACF;KACF;CACF,CAAC;AAEF,AAAO,MAAM,+BAA+B,GAA+B;IACzE,IAAI,EAAE;QACJ,IAAI,EAAE,WAAW;QACjB,SAAS,EAAE,iCAAiC;QAC5C,eAAe,kCACV,mBAAmB,CAAC,IAAI,CAAC,eAAe,KAC3C,IAAI,EAAE;gBACJ,cAAc,EAAE,MAAM;gBACtB,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF,EACD,IAAI,EAAE;gBACJ,cAAc,EAAE,MAAM;gBACtB,QAAQ,EAAE,IAAI;gBACd,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF,EACD,cAAc,EAAE;gBACd,cAAc,EAAE,2BAA2B;gBAC3C,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF,EACD,SAAS,EAAE;gBACT,cAAc,EAAE,sBAAsB;gBACtC,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF,EACD,kBAAkB,EAAE;gBAClB,cAAc,EAAE,iBAAiB;gBACjC,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF,EACD,kBAAkB,EAAE;gBAClB,cAAc,EAAE,+BAA+B;gBAC/C,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF,EACD,uBAAuB,EAAE;gBACvB,cAAc,EAAE,oCAAoC;gBACpD,IAAI,EAAE;oBACJ,IAAI,EAAE,SAAS;iBAChB;aACF,EACD,sBAAsB,EAAE;gBACtB,cAAc,EAAE,mCAAmC;gBACnD,IAAI,EAAE;oBACJ,IAAI,EAAE,SAAS;iBAChB;aACF,EACD,QAAQ,EAAE;gBACR,cAAc,EAAE,qBAAqB;gBACrC,IAAI,EAAE;oBACJ,IAAI,EAAE,YAAY;oBAClB,KAAK,EAAE,EAAE,IAAI,EAAE,EAAE,IAAI,EAAE,KAAK,EAAE,EAAE;iBACjC;aACF,EACD,iBAAiB,EAAE;gBACjB,cAAc,EAAE,8BAA8B;gBAC9C,IAAI,EAAE;oBACJ,IAAI,EAAE,YAAY;oBAClB,KAAK,EAAE,EAAE,IAAI,EAAE,EAAE,IAAI,EAAE,KAAK,EAAE,EAAE;iBACjC;aACF,EACD,iBAAiB,EAAE;gBACjB,cAAc,EAAE,8BAA8B;gBAC9C,QAAQ,EAAE,IAAI;gBACd,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF,EACD,wBAAwB,EAAE;gBACxB,cAAc,EAAE,qCAAqC;gBACrD,IAAI,EAAE;oBACJ,IAAI,EAAE,UAAU;oBAChB,OAAO,EAAE;wBACP,IAAI,EAAE;4BACJ,IAAI,EAAE,QAAQ;yBACf;qBACF;iBACF;aACF,EACD,gBAAgB,EAAE;gBAChB,cAAc,EAAE,6BAA6B;gBAC7C,IAAI,EAAE;oBACJ,IAAI,EAAE,SAAS;iBAChB;aACF,EACD,6BAA6B,EAAE;gBAC7B,cAAc,EAAE,0CAA0C;gBAC1D,IAAI,EAAE;oBACJ,IAAI,EAAE,YAAY;oBAClB,KAAK,EAAE,EAAE,IAAI,EAAE,EAAE,IAAI,EAAE,KAAK,EAAE,EAAE;iBACjC;aACF,GACF;KACF;CACF,CAAC;AAEF,AAAO,MAAM,qCAAqC,GAA+B;IAC/E,IAAI,EAAE;QACJ,IAAI,EAAE,WAAW;QACjB,SAAS,EAAE,uCAAuC;QAClD,eAAe,kCACV,mBAAmB,CAAC,IAAI,CAAC,eAAe,KAC3C,IAAI,EAAE;gBACJ,cAAc,EAAE,MAAM;gBACtB,QAAQ,EAAE,IAAI;gBACd,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF,EACD,IAAI,EAAE;gBACJ,cAAc,EAAE,MAAM;gBACtB,QAAQ,EAAE,IAAI;gBACd,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF,EACD,cAAc,EAAE;gBACd,cAAc,EAAE,2BAA2B;gBAC3C,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF,EACD,SAAS,EAAE;gBACT,cAAc,EAAE,sBAAsB;gBACtC,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF,EACD,kBAAkB,EAAE;gBAClB,cAAc,EAAE,iBAAiB;gBACjC,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF,EACD,kBAAkB,EAAE;gBAClB,cAAc,EAAE,+BAA+B;gBAC/C,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF,EACD,uBAAuB,EAAE;gBACvB,cAAc,EAAE,oCAAoC;gBACpD,IAAI,EAAE;oBACJ,IAAI,EAAE,SAAS;iBAChB;aACF,EACD,sBAAsB,EAAE;gBACtB,cAAc,EAAE,mCAAmC;gBACnD,IAAI,EAAE;oBACJ,IAAI,EAAE,SAAS;iBAChB;aACF,EACD,QAAQ,EAAE;gBACR,cAAc,EAAE,qBAAqB;gBACrC,IAAI,EAAE;oBACJ,IAAI,EAAE,YAAY;oBAClB,KAAK,EAAE,EAAE,IAAI,EAAE,EAAE,IAAI,EAAE,KAAK,EAAE,EAAE;iBACjC;aACF,EACD,iBAAiB,EAAE;gBACjB,cAAc,EAAE,8BAA8B;gBAC9C,IAAI,EAAE;oBACJ,IAAI,EAAE,YAAY;oBAClB,KAAK,EAAE,EAAE,IAAI,EAAE,EAAE,IAAI,EAAE,KAAK,EAAE,EAAE;iBACjC;aACF,EACD,iBAAiB,EAAE;gBACjB,cAAc,EAAE,8BAA8B;gBAC9C,QAAQ,EAAE,IAAI;gBACd,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF,EACD,wBAAwB,EAAE;gBACxB,cAAc,EAAE,qCAAqC;gBACrD,IAAI,EAAE;oBACJ,IAAI,EAAE,UAAU;oBAChB,OAAO,EAAE;wBACP,IAAI,EAAE;4BACJ,IAAI,EAAE,QAAQ;yBACf;qBACF;iBACF;aACF,EACD,gBAAgB,EAAE;gBAChB,cAAc,EAAE,6BAA6B;gBAC7C,IAAI,EAAE;oBACJ,IAAI,EAAE,SAAS;iBAChB;aACF,EACD,6BAA6B,EAAE;gBAC7B,cAAc,EAAE,0CAA0C;gBAC1D,IAAI,EAAE;oBACJ,IAAI,EAAE,YAAY;oBAClB,KAAK,EAAE,EAAE,IAAI,EAAE,EAAE,IAAI,EAAE,KAAK,EAAE,EAAE;iBACjC;aACF,GACF;KACF;CACF,CAAC;AAEF,AAAO,MAAM,iCAAiC,GAA+B;IAC3E,IAAI,EAAE;QACJ,IAAI,EAAE,WAAW;QACjB,SAAS,EAAE,mCAAmC;QAC9C,eAAe,kCACV,mBAAmB,CAAC,IAAI,CAAC,eAAe,KAC3C,IAAI,EAAE;gBACJ,cAAc,EAAE,MAAM;gBACtB,QAAQ,EAAE,IAAI;gBACd,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF,EACD,IAAI,EAAE;gBACJ,cAAc,EAAE,MAAM;gBACtB,QAAQ,EAAE,IAAI;gBACd,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF,EACD,cAAc,EAAE;gBACd,cAAc,EAAE,2BAA2B;gBAC3C,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF,EACD,SAAS,EAAE;gBACT,cAAc,EAAE,sBAAsB;gBACtC,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF,EACD,kBAAkB,EAAE;gBAClB,cAAc,EAAE,iBAAiB;gBACjC,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF,EACD,kBAAkB,EAAE;gBAClB,cAAc,EAAE,+BAA+B;gBAC/C,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF,EACD,uBAAuB,EAAE;gBACvB,cAAc,EAAE,oCAAoC;gBACpD,IAAI,EAAE;oBACJ,IAAI,EAAE,SAAS;iBAChB;aACF,EACD,sBAAsB,EAAE;gBACtB,cAAc,EAAE,mCAAmC;gBACnD,IAAI,EAAE;oBACJ,IAAI,EAAE,SAAS;iBAChB;aACF,EACD,QAAQ,EAAE;gBACR,cAAc,EAAE,qBAAqB;gBACrC,IAAI,EAAE;oBACJ,IAAI,EAAE,YAAY;oBAClB,KAAK,EAAE,EAAE,IAAI,EAAE,EAAE,IAAI,EAAE,KAAK,EAAE,EAAE;iBACjC;aACF,EACD,iBAAiB,EAAE;gBACjB,cAAc,EAAE,8BAA8B;gBAC9C,IAAI,EAAE;oBACJ,IAAI,EAAE,YAAY;oBAClB,KAAK,EAAE,EAAE,IAAI,EAAE,EAAE,IAAI,EAAE,KAAK,EAAE,EAAE;iBACjC;aACF,EACD,iBAAiB,EAAE;gBACjB,cAAc,EAAE,8BAA8B;gBAC9C,QAAQ,EAAE,IAAI;gBACd,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF,EACD,YAAY,EAAE;gBACZ,cAAc,EAAE,yBAAyB;gBACzC,IAAI,EAAE;oBACJ,IAAI,EAAE,WAAW;oBACjB,SAAS,EAAE,qCAAqC;iBACjD;aACF,EACD,gBAAgB,EAAE;gBAChB,cAAc,EAAE,6BAA6B;gBAC7C,IAAI,EAAE;oBACJ,IAAI,EAAE,SAAS;iBAChB;aACF,EACD,6BAA6B,EAAE;gBAC7B,cAAc,EAAE,0CAA0C;gBAC1D,IAAI,EAAE;oBACJ,IAAI,EAAE,YAAY;oBAClB,KAAK,EAAE,EAAE,IAAI,EAAE,EAAE,IAAI,EAAE,KAAK,EAAE,EAAE;iBACjC;aACF,GACF;KACF;CACF,CAAC;AAEF,AAAO,MAAM,uCAAuC,GAA+B;IACjF,IAAI,EAAE;QACJ,IAAI,EAAE,WAAW;QACjB,SAAS,EAAE,yCAAyC;QACpD,eAAe,kCACV,mBAAmB,CAAC,IAAI,CAAC,eAAe,KAC3C,IAAI,EAAE;gBACJ,cAAc,EAAE,MAAM;gBACtB,QAAQ,EAAE,IAAI;gBACd,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF,EACD,IAAI,EAAE;gBACJ,cAAc,EAAE,MAAM;gBACtB,QAAQ,EAAE,IAAI;gBACd,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF,EACD,cAAc,EAAE;gBACd,cAAc,EAAE,2BAA2B;gBAC3C,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF,EACD,SAAS,EAAE;gBACT,cAAc,EAAE,sBAAsB;gBACtC,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF,EACD,kBAAkB,EAAE;gBAClB,cAAc,EAAE,iBAAiB;gBACjC,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF,EACD,kBAAkB,EAAE;gBAClB,cAAc,EAAE,+BAA+B;gBAC/C,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF,EACD,uBAAuB,EAAE;gBACvB,cAAc,EAAE,oCAAoC;gBACpD,IAAI,EAAE;oBACJ,IAAI,EAAE,SAAS;iBAChB;aACF,EACD,sBAAsB,EAAE;gBACtB,cAAc,EAAE,mCAAmC;gBACnD,IAAI,EAAE;oBACJ,IAAI,EAAE,SAAS;iBAChB;aACF,EACD,QAAQ,EAAE;gBACR,cAAc,EAAE,qBAAqB;gBACrC,IAAI,EAAE;oBACJ,IAAI,EAAE,YAAY;oBAClB,KAAK,EAAE,EAAE,IAAI,EAAE,EAAE,IAAI,EAAE,KAAK,EAAE,EAAE;iBACjC;aACF,EACD,iBAAiB,EAAE;gBACjB,cAAc,EAAE,8BAA8B;gBAC9C,IAAI,EAAE;oBACJ,IAAI,EAAE,YAAY;oBAClB,KAAK,EAAE,EAAE,IAAI,EAAE,EAAE,IAAI,EAAE,KAAK,EAAE,EAAE;iBACjC;aACF,EACD,gBAAgB,EAAE;gBAChB,cAAc,EAAE,6BAA6B;gBAC7C,IAAI,EAAE;oBACJ,IAAI,EAAE,SAAS;iBAChB;aACF,EACD,6BAA6B,EAAE;gBAC7B,cAAc,EAAE,0CAA0C;gBAC1D,IAAI,EAAE;oBACJ,IAAI,EAAE,YAAY;oBAClB,KAAK,EAAE,EAAE,IAAI,EAAE,EAAE,IAAI,EAAE,KAAK,EAAE,EAAE;iBACjC;aACF,GACF;KACF;CACF,CAAC;AAEF,AAAO,MAAM,iCAAiC,GAA+B;IAC3E,IAAI,EAAE;QACJ,IAAI,EAAE,WAAW;QACjB,SAAS,EAAE,mCAAmC;QAC9C,eAAe,kCACV,yBAAyB,CAAC,IAAI,CAAC,eAAe,KACjD,IAAI,EAAE;gBACJ,cAAc,EAAE,MAAM;gBACtB,QAAQ,EAAE,IAAI;gBACd,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF,GACF;KACF;CACF,CAAC;AAEF,AAAO,MAAM,WAAW,GAA+B;IACrD,IAAI,EAAE;QACJ,IAAI,EAAE,WAAW;QACjB,SAAS,EAAE,aAAa;QACxB,eAAe,kCACV,SAAS,CAAC,IAAI,CAAC,eAAe,KACjC,MAAM,EAAE;gBACN,cAAc,EAAE,QAAQ;gBACxB,QAAQ,EAAE,IAAI;gBACd,IAAI,EAAE;oBACJ,IAAI,EAAE,MAAM;oBACZ,aAAa,EAAE,CAAC,SAAS,EAAE,OAAO,CAAC;iBACpC;aACF,EACD,OAAO,EAAE;gBACP,cAAc,EAAE,SAAS;gBACzB,QAAQ,EAAE,IAAI;gBACd,IAAI,EAAE;oBACJ,IAAI,EAAE,MAAM;oBACZ,aAAa,EAAE,CAAC,aAAa,EAAE,aAAa,CAAC;iBAC9C;aACF,GACF;KACF;CACF,CAAC;AAEF,AAAO,MAAM,aAAa,GAA+B;IACvD,IAAI,EAAE;QACJ,IAAI,EAAE,WAAW;QACjB,SAAS,EAAE,eAAe;QAC1B,eAAe,kCACV,SAAS,CAAC,IAAI,CAAC,eAAe,KACjC,GAAG,EAAE;gBACH,cAAc,EAAE,KAAK;gBACrB,QAAQ,EAAE,IAAI;gBACd,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF,GACF;KACF;CACF,CAAC;AAEF,AAAO,MAAM,YAAY,GAA+B;IACtD,IAAI,EAAE;QACJ,IAAI,EAAE,WAAW;QACjB,SAAS,EAAE,cAAc;QACzB,eAAe,kCACV,aAAa,CAAC,IAAI,CAAC,eAAe,KACrC,YAAY,EAAE;gBACZ,cAAc,EAAE,yBAAyB;gBACzC,IAAI,EAAE;oBACJ,IAAI,EAAE,UAAU;oBAChB,OAAO,EAAE;wBACP,IAAI,EAAE;4BACJ,IAAI,EAAE,WAAW;4BACjB,SAAS,EAAE,oBAAoB;yBAChC;qBACF;iBACF;aACF,EACD,cAAc,EAAE;gBACd,cAAc,EAAE,2BAA2B;gBAC3C,IAAI,EAAE;oBACJ,IAAI,EAAE,WAAW;oBACjB,SAAS,EAAE,4BAA4B;iBACxC;aACF,EACD,iBAAiB,EAAE;gBACjB,cAAc,EAAE,8BAA8B;gBAC9C,QAAQ,EAAE,IAAI;gBACd,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF,EACD,eAAe,EAAE;gBACf,cAAc,EAAE,4BAA4B;gBAC5C,QAAQ,EAAE,IAAI;gBACd,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF,EACD,WAAW,EAAE;gBACX,cAAc,EAAE,wBAAwB;gBACxC,IAAI,EAAE;oBACJ,IAAI,EAAE,UAAU;iBACjB;aACF,EACD,kBAAkB,EAAE;gBAClB,cAAc,EAAE,+BAA+B;gBAC/C,IAAI,EAAE;oBACJ,IAAI,EAAE,WAAW;oBACjB,SAAS,EAAE,oBAAoB;iBAChC;aACF,EACD,YAAY,EAAE;gBACZ,cAAc,EAAE,yBAAyB;gBACzC,IAAI,EAAE;oBACJ,IAAI,EAAE,WAAW;oBACjB,SAAS,EAAE,0BAA0B;iBACtC;aACF,GACF;KACF;CACF,CAAC;AAEF,AAAO,MAAM,uCAAuC,GAA+B;IACjF,IAAI,EAAE;QACJ,IAAI,EAAE,WAAW;QACjB,SAAS,EAAE,yCAAyC;QACpD,eAAe,kCACV,+BAA+B,CAAC,IAAI,CAAC,eAAe,KACvD,IAAI,EAAE;gBACJ,cAAc,EAAE,MAAM;gBACtB,QAAQ,EAAE,IAAI;gBACd,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF,GACF;KACF;CACF,CAAC;AAEF,AAAO,MAAM,yCAAyC,GAA+B;IACnF,IAAI,EAAE;QACJ,IAAI,EAAE,WAAW;QACjB,SAAS,EAAE,2CAA2C;QACtD,eAAe,oBACV,+BAA+B,CAAC,IAAI,CAAC,eAAe,CACxD;KACF;CACF,CAAC;AAEF,AAAO,MAAM,0BAA0B,GAA+B;IACpE,IAAI,EAAE;QACJ,IAAI,EAAE,WAAW;QACjB,SAAS,EAAE,4BAA4B;QACvC,eAAe,kCACV,qBAAqB,CAAC,IAAI,CAAC,eAAe,KAC7C,cAAc,EAAE;gBACd,cAAc,EAAE,gBAAgB;gBAChC,QAAQ,EAAE,IAAI;gBACd,IAAI,EAAE;oBACJ,IAAI,EAAE,MAAM;oBACZ,aAAa,EAAE,CAAC,WAAW,EAAE,UAAU,EAAE,YAAY,EAAE,WAAW,CAAC;iBACpE;aACF,GACF;KACF;CACF,CAAC;AAEF,AAAO,MAAM,sBAAsB,GAA+B;IAChE,IAAI,EAAE;QACJ,IAAI,EAAE,WAAW;QACjB,SAAS,EAAE,wBAAwB;QACnC,eAAe,oBACV,qBAAqB,CAAC,IAAI,CAAC,eAAe,CAC9C;KACF;CACF,CAAC;AAEF,AAAO,MAAM,kBAAkB,GAA+B;IAC5D,IAAI,EAAE;QACJ,IAAI,EAAE,WAAW;QACjB,SAAS,EAAE,oBAAoB;QAC/B,eAAe,kCACV,sBAAsB,CAAC,IAAI,CAAC,eAAe,KAC9C,MAAM,EAAE;gBACN,cAAc,EAAE,QAAQ;gBACxB,QAAQ,EAAE,IAAI;gBACd,IAAI,EAAE;oBACJ,IAAI,EAAE,UAAU;oBAChB,OAAO,EAAE;wBACP,IAAI,EAAE;4BACJ,IAAI,EAAE,QAAQ;yBACf;qBACF;iBACF;aACF,EACD,UAAU,EAAE;gBACV,cAAc,EAAE,YAAY;gBAC5B,IAAI,EAAE;oBACJ,IAAI,EAAE,UAAU;oBAChB,OAAO,EAAE;wBACP,IAAI,EAAE;4BACJ,IAAI,EAAE,WAAW;4BACjB,SAAS,EAAE,+BAA+B;yBAC3C;qBACF;iBACF;aACF,GACF;KACF;CACF,CAAC;AAEF,AAAO,MAAM,gBAAgB,GAA+B;IAC1D,IAAI,EAAE;QACJ,IAAI,EAAE,WAAW;QACjB,SAAS,EAAE,kBAAkB;QAC7B,eAAe,kCACV,iBAAiB,CAAC,IAAI,CAAC,eAAe,KACzC,WAAW,EAAE;gBACX,cAAc,EAAE,wBAAwB;gBACxC,QAAQ,EAAE,IAAI;gBACd,IAAI,EAAE;oBACJ,IAAI,EAAE,UAAU;iBACjB;aACF,EACD,gBAAgB,EAAE;gBAChB,cAAc,EAAE,6BAA6B;gBAC7C,QAAQ,EAAE,IAAI;gBACd,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF,EACD,MAAM,EAAE;gBACN,cAAc,EAAE,mBAAmB;gBACnC,QAAQ,EAAE,IAAI;gBACd,IAAI,EAAE;oBACJ,IAAI,EAAE,MAAM;oBACZ,aAAa,EAAE,CAAC,SAAS,EAAE,OAAO,CAAC;iBACpC;aACF,EACD,gBAAgB,EAAE;gBAChB,cAAc,EAAE,6BAA6B;gBAC7C,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF,EACD,YAAY,EAAE;gBACZ,cAAc,EAAE,yBAAyB;gBACzC,IAAI,EAAE;oBACJ,IAAI,EAAE,WAAW;oBACjB,SAAS,EAAE,2BAA2B;iBACvC;aACF,EACD,qBAAqB,EAAE;gBACrB,cAAc,EAAE,kCAAkC;gBAClD,IAAI,EAAE;oBACJ,IAAI,EAAE,WAAW;oBACjB,SAAS,EAAE,uBAAuB;iBACnC;aACF,EACD,QAAQ,EAAE;gBACR,cAAc,EAAE,qBAAqB;gBACrC,QAAQ,EAAE,IAAI;gBACd,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF,EACD,cAAc,EAAE;gBACd,cAAc,EAAE,2BAA2B;gBAC3C,QAAQ,EAAE,IAAI;gBACd,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF,EACD,UAAU,EAAE;gBACV,cAAc,EAAE,uBAAuB;gBACvC,IAAI,EAAE;oBACJ,IAAI,EAAE,WAAW;oBACjB,SAAS,EAAE,YAAY;iBACxB;aACF,EACD,mBAAmB,EAAE;gBACnB,cAAc,EAAE,gCAAgC;gBAChD,IAAI,EAAE;oBACJ,IAAI,EAAE,SAAS;iBAChB;aACF,EACD,mBAAmB,EAAE;gBACnB,cAAc,EAAE,gCAAgC;gBAChD,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF,EACD,mBAAmB,EAAE;gBACnB,cAAc,EAAE,gCAAgC;gBAChD,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF,EACD,YAAY,EAAE;gBACZ,cAAc,EAAE,yBAAyB;gBACzC,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF,EACD,iBAAiB,EAAE;gBACjB,cAAc,EAAE,8BAA8B;gBAC9C,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF,EACD,gBAAgB,EAAE;gBAChB,cAAc,EAAE,6BAA6B;gBAC7C,QAAQ,EAAE,IAAI;gBACd,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF,EACD,sBAAsB,EAAE;gBACtB,cAAc,EAAE,mCAAmC;gBACnD,QAAQ,EAAE,IAAI;gBACd,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF,GACF;KACF;CACF,CAAC;AAEF,AAAO,MAAM,aAAa,GAA+B;IACvD,IAAI,EAAE;QACJ,IAAI,EAAE,WAAW;QACjB,SAAS,EAAE,eAAe;QAC1B,eAAe,kCACV,wBAAwB,CAAC,IAAI,CAAC,eAAe,KAChD,WAAW,EAAE;gBACX,cAAc,EAAE,wBAAwB;gBACxC,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF,EACD,UAAU,EAAE;gBACV,cAAc,EAAE,uBAAuB;gBACvC,IAAI,EAAE;oBACJ,IAAI,EAAE,WAAW;oBACjB,SAAS,EAAE,mBAAmB;iBAC/B;aACF,EACD,iBAAiB,EAAE;gBACjB,cAAc,EAAE,8BAA8B;gBAC9C,QAAQ,EAAE,IAAI;gBACd,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF,EACD,cAAc,EAAE;gBACd,cAAc,EAAE,2BAA2B;gBAC3C,IAAI,EAAE;oBACJ,IAAI,EAAE,WAAW;oBACjB,SAAS,EAAE,gBAAgB;iBAC5B;aACF,EACD,gBAAgB,EAAE;gBAChB,cAAc,EAAE,6BAA6B;gBAC7C,IAAI,EAAE;oBACJ,IAAI,EAAE,WAAW;oBACjB,SAAS,EAAE,kBAAkB;iBAC9B;aACF,EACD,aAAa,EAAE;gBACb,cAAc,EAAE,0BAA0B;gBAC1C,IAAI,EAAE;oBACJ,IAAI,EAAE,WAAW;oBACjB,SAAS,EAAE,eAAe;iBAC3B;aACF,GACF;KACF;CACF,CAAC;AAEF,AAAO,MAAM,kBAAkB,GAA+B;IAC5D,IAAI,EAAE;QACJ,IAAI,EAAE,WAAW;QACjB,SAAS,EAAE,oBAAoB;QAC/B,eAAe,kCACV,wBAAwB,CAAC,IAAI,CAAC,eAAe,KAChD,WAAW,EAAE;gBACX,cAAc,EAAE,wBAAwB;gBACxC,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF,EACD,IAAI,EAAE;gBACJ,cAAc,EAAE,iBAAiB;gBACjC,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF,EACD,mBAAmB,EAAE;gBACnB,cAAc,EAAE,gCAAgC;gBAChD,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF,EACD,cAAc,EAAE;gBACd,cAAc,EAAE,2BAA2B;gBAC3C,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF,EACD,MAAM,EAAE;gBACN,cAAc,EAAE,mBAAmB;gBACnC,IAAI,EAAE;oBACJ,IAAI,EAAE,MAAM;oBACZ,aAAa,EAAE,CAAC,SAAS,EAAE,OAAO,CAAC;iBACpC;aACF,EACD,OAAO,EAAE;gBACP,cAAc,EAAE,oBAAoB;gBACpC,IAAI,EAAE;oBACJ,IAAI,EAAE,MAAM;oBACZ,aAAa,EAAE,CAAC,aAAa,EAAE,aAAa,CAAC;iBAC9C;aACF,EACD,gBAAgB,EAAE;gBAChB,cAAc,EAAE,6BAA6B;gBAC7C,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF,EACD,aAAa,EAAE;gBACb,cAAc,EAAE,0BAA0B;gBAC1C,IAAI,EAAE;oBACJ,IAAI,EAAE,UAAU;iBACjB;aACF,EACD,UAAU,EAAE;gBACV,cAAc,EAAE,uBAAuB;gBACvC,IAAI,EAAE;oBACJ,IAAI,EAAE,WAAW;oBACjB,SAAS,EAAE,wBAAwB;iBACpC;aACF,EACD,WAAW,EAAE;gBACX,cAAc,EAAE,wBAAwB;gBACxC,IAAI,EAAE;oBACJ,IAAI,EAAE,WAAW;oBACjB,SAAS,EAAE,iCAAiC;iBAC7C;aACF,EACD,UAAU,EAAE;gBACV,cAAc,EAAE,uBAAuB;gBACvC,IAAI,EAAE;oBACJ,IAAI,EAAE,WAAW;oBACjB,SAAS,EAAE,YAAY;iBACxB;aACF,EACD,YAAY,EAAE;gBACZ,cAAc,EAAE,yBAAyB;gBACzC,IAAI,EAAE;oBACJ,IAAI,EAAE,WAAW;oBACjB,SAAS,EAAE,mBAAmB;iBAC/B;aACF,EACD,iBAAiB,EAAE;gBACjB,cAAc,EAAE,8BAA8B;gBAC9C,QAAQ,EAAE,IAAI;gBACd,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF,EACD,QAAQ,EAAE;gBACR,cAAc,EAAE,qBAAqB;gBACrC,IAAI,EAAE;oBACJ,IAAI,EAAE,UAAU;oBAChB,OAAO,EAAE;wBACP,IAAI,EAAE;4BACJ,IAAI,EAAE,WAAW;4BACjB,SAAS,EAAE,qBAAqB;yBACjC;qBACF;iBACF;aACF,GACF;KACF;CACF,CAAC;AAEF,AAAO,MAAM,yBAAyB,GAA+B;IACnE,IAAI,EAAE;QACJ,IAAI,EAAE,WAAW;QACjB,SAAS,EAAE,2BAA2B;QACtC,eAAe,kCACV,wBAAwB,CAAC,IAAI,CAAC,eAAe,KAChD,iBAAiB,EAAE;gBACjB,cAAc,EAAE,8BAA8B;gBAC9C,IAAI,EAAE;oBACJ,IAAI,EAAE,WAAW;oBACjB,SAAS,EAAE,sCAAsC;iBAClD;aACF,EACD,iBAAiB,EAAE;gBACjB,cAAc,EAAE,8BAA8B;gBAC9C,QAAQ,EAAE,IAAI;gBACd,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF,EACD,cAAc,EAAE;gBACd,cAAc,EAAE,2BAA2B;gBAC3C,IAAI,EAAE;oBACJ,IAAI,EAAE,WAAW;oBACjB,SAAS,EAAE,mCAAmC;iBAC/C;aACF,EACD,iBAAiB,EAAE;gBACjB,cAAc,EAAE,8BAA8B;gBAC9C,IAAI,EAAE;oBACJ,IAAI,EAAE,WAAW;oBACjB,SAAS,EAAE,mBAAmB;iBAC/B;aACF,GACF;KACF;CACF,CAAC;AAEF,AAAO,MAAM,wBAAwB,GAA+B;IAClE,IAAI,EAAE;QACJ,IAAI,EAAE,WAAW;QACjB,SAAS,EAAE,0BAA0B;QACrC,eAAe,kCACV,wBAAwB,CAAC,IAAI,CAAC,eAAe,KAChD,WAAW,EAAE;gBACX,cAAc,EAAE,wBAAwB;gBACxC,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF,EACD,IAAI,EAAE;gBACJ,cAAc,EAAE,iBAAiB;gBACjC,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF,EACD,mBAAmB,EAAE;gBACnB,cAAc,EAAE,gCAAgC;gBAChD,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF,EACD,cAAc,EAAE;gBACd,cAAc,EAAE,2BAA2B;gBAC3C,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF,EACD,aAAa,EAAE;gBACb,cAAc,EAAE,0BAA0B;gBAC1C,IAAI,EAAE;oBACJ,IAAI,EAAE,UAAU;iBACjB;aACF,EACD,eAAe,EAAE;gBACf,cAAc,EAAE,4BAA4B;gBAC5C,IAAI,EAAE;oBACJ,IAAI,EAAE,MAAM;oBACZ,aAAa,EAAE,CAAC,SAAS,EAAE,OAAO,CAAC;iBACpC;aACF,GACF;KACF;CACF,CAAC;AAEF,AAAO,MAAM,+BAA+B,GAA+B;IACzE,IAAI,EAAE;QACJ,IAAI,EAAE,WAAW;QACjB,SAAS,EAAE,iCAAiC;QAC5C,eAAe,kCACV,wBAAwB,CAAC,IAAI,CAAC,eAAe,KAChD,iBAAiB,EAAE;gBACjB,cAAc,EAAE,8BAA8B;gBAC9C,IAAI,EAAE;oBACJ,IAAI,EAAE,WAAW;oBACjB,SAAS,EAAE,4CAA4C;iBACxD;aACF,EACD,iBAAiB,EAAE;gBACjB,cAAc,EAAE,8BAA8B;gBAC9C,QAAQ,EAAE,IAAI;gBACd,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF,EACD,iBAAiB,EAAE;gBACjB,cAAc,EAAE,8BAA8B;gBAC9C,IAAI,EAAE;oBACJ,IAAI,EAAE,WAAW;oBACjB,SAAS,EAAE,mBAAmB;iBAC/B;aACF,GACF;KACF;CACF,CAAC;AAEF,AAAO,MAAM,oCAAoC,GAA+B;IAC9E,IAAI,EAAE;QACJ,IAAI,EAAE,WAAW;QACjB,SAAS,EAAE,sCAAsC;QACjD,eAAe,oBACV,oCAAoC,CAAC,IAAI,CAAC,eAAe,CAC7D;KACF;CACF,CAAC;AAEF,AAAO,MAAM,0CAA0C,GAA+B;IACpF,IAAI,EAAE;QACJ,IAAI,EAAE,WAAW;QACjB,SAAS,EAAE,4CAA4C;QACvD,eAAe,kCACV,oCAAoC,CAAC,IAAI,CAAC,eAAe,KAC5D,MAAM,EAAE;gBACN,cAAc,EAAE,QAAQ;gBACxB,IAAI,EAAE;oBACJ,IAAI,EAAE,WAAW;oBACjB,SAAS,EAAE,oBAAoB;iBAChC;aACF,EACD,aAAa,EAAE;gBACb,cAAc,EAAE,eAAe;gBAC/B,IAAI,EAAE;oBACJ,IAAI,EAAE,WAAW;oBACjB,SAAS,EAAE,oBAAoB;iBAChC;aACF,EACD,iBAAiB,EAAE;gBACjB,cAAc,EAAE,mBAAmB;gBACnC,IAAI,EAAE;oBACJ,IAAI,EAAE,SAAS;iBAChB;aACF,GACF;KACF;CACF,CAAC;AAEF,AAAO,MAAM,qBAAqB,GAA+B;IAC/D,IAAI,EAAE;QACJ,IAAI,EAAE,WAAW;QACjB,SAAS,EAAE,uBAAuB;QAClC,eAAe,kCACV,mBAAmB,CAAC,IAAI,CAAC,eAAe,KAC3C,eAAe,EAAE;gBACf,cAAc,EAAE,iBAAiB;gBACjC,IAAI,EAAE;oBACJ,IAAI,EAAE,WAAW;oBACjB,SAAS,EAAE,4BAA4B;iBACxC;aACF,GACF;KACF;CACF,CAAC;AAEF,AAAO,MAAM,uBAAuB,GAA+B;IACjE,IAAI,EAAE;QACJ,IAAI,EAAE,WAAW;QACjB,SAAS,EAAE,yBAAyB;QACpC,eAAe,kCACV,mBAAmB,CAAC,IAAI,CAAC,eAAe,KAC3C,GAAG,EAAE;gBACH,cAAc,EAAE,KAAK;gBACrB,QAAQ,EAAE,IAAI;gBACd,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF,GACF;KACF;CACF,CAAC;AAEF,AAAO,MAAM,kBAAkB,GAA+B;IAC5D,IAAI,EAAE;QACJ,IAAI,EAAE,WAAW;QACjB,SAAS,EAAE,oBAAoB;QAC/B,eAAe,oBACV,gBAAgB,CAAC,IAAI,CAAC,eAAe,CACzC;KACF;CACF,CAAC;AAEF,AAAO,MAAM,oBAAoB,GAA+B;IAC9D,IAAI,EAAE;QACJ,IAAI,EAAE,WAAW;QACjB,SAAS,EAAE,sBAAsB;QACjC,eAAe,kCACV,gBAAgB,CAAC,IAAI,CAAC,eAAe,KACxC,GAAG,EAAE;gBACH,cAAc,EAAE,KAAK;gBACrB,QAAQ,EAAE,IAAI;gBACd,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF,GACF;KACF;CACF,CAAC;AAEF,AAAO,MAAM,wBAAwB,GAA+B;IAClE,IAAI,EAAE;QACJ,IAAI,EAAE,WAAW;QACjB,SAAS,EAAE,0BAA0B;QACrC,eAAe,kCACV,WAAW,CAAC,IAAI,CAAC,eAAe,KACnC,QAAQ,EAAE;gBACR,cAAc,EAAE,qBAAqB;gBACrC,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF,GACF;KACF;CACF,CAAC;AAEF,AAAO,MAAM,gBAAgB,GAA+B;IAC1D,IAAI,EAAE;QACJ,IAAI,EAAE,WAAW;QACjB,SAAS,EAAE,kBAAkB;QAC7B,eAAe,oBACV,2BAA2B,CAAC,IAAI,CAAC,eAAe,CACpD;KACF;CACF,CAAC;AAEF,AAAO,MAAM,qBAAqB,GAA+B;IAC/D,IAAI,EAAE;QACJ,IAAI,EAAE,WAAW;QACjB,SAAS,EAAE,uBAAuB;QAClC,eAAe,kCACV,2BAA2B,CAAC,IAAI,CAAC,eAAe,KACnD,MAAM,EAAE;gBACN,cAAc,EAAE,mBAAmB;gBACnC,IAAI,EAAE;oBACJ,IAAI,EAAE,MAAM;oBACZ,aAAa,EAAE,CAAC,SAAS,EAAE,OAAO,CAAC;iBACpC;aACF,EACD,OAAO,EAAE;gBACP,cAAc,EAAE,oBAAoB;gBACpC,IAAI,EAAE;oBACJ,IAAI,EAAE,MAAM;oBACZ,aAAa,EAAE,CAAC,aAAa,EAAE,aAAa,CAAC;iBAC9C;aACF,EACD,aAAa,EAAE;gBACb,cAAc,EAAE,0BAA0B;gBAC1C,IAAI,EAAE;oBACJ,IAAI,EAAE,UAAU;iBACjB;aACF,EACD,UAAU,EAAE;gBACV,cAAc,EAAE,uBAAuB;gBACvC,IAAI,EAAE;oBACJ,IAAI,EAAE,WAAW;oBACjB,SAAS,EAAE,wBAAwB;iBACpC;aACF,EACD,WAAW,EAAE;gBACX,cAAc,EAAE,wBAAwB;gBACxC,IAAI,EAAE;oBACJ,IAAI,EAAE,WAAW;oBACjB,SAAS,EAAE,iCAAiC;iBAC7C;aACF,EACD,UAAU,EAAE;gBACV,cAAc,EAAE,uBAAuB;gBACvC,IAAI,EAAE;oBACJ,IAAI,EAAE,WAAW;oBACjB,SAAS,EAAE,YAAY;iBACxB;aACF,EACD,gBAAgB,EAAE;gBAChB,cAAc,EAAE,6BAA6B;gBAC7C,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF,EACD,QAAQ,EAAE;gBACR,cAAc,EAAE,qBAAqB;gBACrC,IAAI,EAAE;oBACJ,IAAI,EAAE,UAAU;oBAChB,OAAO,EAAE;wBACP,IAAI,EAAE;4BACJ,IAAI,EAAE,WAAW;4BACjB,SAAS,EAAE,qBAAqB;yBACjC;qBACF;iBACF;aACF,EACD,YAAY,EAAE;gBACZ,cAAc,EAAE,yBAAyB;gBACzC,IAAI,EAAE;oBACJ,IAAI,EAAE,WAAW;oBACjB,SAAS,EAAE,mBAAmB;iBAC/B;aACF,GACF;KACF;CACF,CAAC;AAEF,AAAO,MAAM,4BAA4B,GAA+B;IACtE,IAAI,EAAE;QACJ,IAAI,EAAE,WAAW;QACjB,SAAS,EAAE,8BAA8B;QACzC,eAAe,kCACV,2BAA2B,CAAC,IAAI,CAAC,eAAe,KACnD,aAAa,EAAE;gBACb,cAAc,EAAE,0BAA0B;gBAC1C,IAAI,EAAE;oBACJ,IAAI,EAAE,UAAU;iBACjB;aACF,EACD,aAAa,EAAE;gBACb,cAAc,EAAE,0BAA0B;gBAC1C,IAAI,EAAE;oBACJ,IAAI,EAAE,UAAU;iBACjB;aACF,GACF;KACF;CACF,CAAC;AAEF,AAAO,MAAM,mBAAmB,GAA+B;IAC7D,IAAI,EAAE;QACJ,IAAI,EAAE,WAAW;QACjB,SAAS,EAAE,qBAAqB;QAChC,eAAe,kCACV,2BAA2B,CAAC,IAAI,CAAC,eAAe,KACnD,IAAI,EAAE;gBACJ,cAAc,EAAE,iBAAiB;gBACjC,IAAI,EAAE;oBACJ,IAAI,EAAE,WAAW;oBACjB,SAAS,EAAE,cAAc;iBAC1B;aACF,EACD,WAAW,EAAE;gBACX,cAAc,EAAE,wBAAwB;gBACxC,IAAI,EAAE;oBACJ,IAAI,EAAE,WAAW;oBACjB,SAAS,EAAE,aAAa;iBACzB;aACF,EACD,cAAc,EAAE;gBACd,cAAc,EAAE,2BAA2B;gBAC3C,IAAI,EAAE;oBACJ,IAAI,EAAE,UAAU;oBAChB,OAAO,EAAE;wBACP,IAAI,EAAE;4BACJ,IAAI,EAAE,WAAW;4BACjB,SAAS,EAAE,eAAe;yBAC3B;qBACF;iBACF;aACF,EACD,4BAA4B,EAAE;gBAC5B,cAAc,EAAE,yCAAyC;gBACzD,IAAI,EAAE;oBACJ,IAAI,EAAE,WAAW;oBACjB,SAAS,EAAE,8BAA8B;iBAC1C;aACF,EACD,gBAAgB,EAAE;gBAChB,cAAc,EAAE,6BAA6B;gBAC7C,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF,EACD,UAAU,EAAE;gBACV,cAAc,EAAE,uBAAuB;gBACvC,IAAI,EAAE;oBACJ,IAAI,EAAE,WAAW;oBACjB,SAAS,EAAE,yBAAyB;iBACrC;aACF,EACD,QAAQ,EAAE;gBACR,cAAc,EAAE,qBAAqB;gBACrC,IAAI,EAAE;oBACJ,IAAI,EAAE,UAAU;oBAChB,OAAO,EAAE;wBACP,IAAI,EAAE;4BACJ,IAAI,EAAE,WAAW;4BACjB,SAAS,EAAE,4BAA4B;yBACxC;qBACF;iBACF;aACF,GACF;KACF;CACF,CAAC;AAEF,AAAO,MAAM,uCAAuC,GAA+B;IACjF,IAAI,EAAE;QACJ,IAAI,EAAE,WAAW;QACjB,SAAS,EAAE,yCAAyC;QACpD,eAAe,kCACV,yCAAyC,CAAC,IAAI,CAAC,eAAe,KACjE,WAAW,EAAE;gBACX,cAAc,EAAE,aAAa;gBAC7B,IAAI,EAAE;oBACJ,IAAI,EAAE,UAAU;oBAChB,OAAO,EAAE;wBACP,IAAI,EAAE;4BACJ,IAAI,EAAE,QAAQ;yBACf;qBACF;iBACF;aACF,GACF;KACF;CACF,CAAC;AAEF,AAAO,MAAM,aAAa,GAA+B;IACvD,IAAI,EAAE;QACJ,IAAI,EAAE,WAAW;QACjB,SAAS,EAAE,eAAe;QAC1B,eAAe,oBACV,wBAAwB,CAAC,IAAI,CAAC,eAAe,CACjD;KACF;CACF,CAAC;AAEF,AAAO,MAAM,kBAAkB,GAA+B;IAC5D,IAAI,EAAE;QACJ,IAAI,EAAE,WAAW;QACjB,SAAS,EAAE,oBAAoB;QAC/B,eAAe,kCACV,wBAAwB,CAAC,IAAI,CAAC,eAAe,KAChD,MAAM,EAAE;gBACN,cAAc,EAAE,mBAAmB;gBACnC,IAAI,EAAE;oBACJ,IAAI,EAAE,MAAM;oBACZ,aAAa,EAAE,CAAC,SAAS,EAAE,OAAO,CAAC;iBACpC;aACF,EACD,OAAO,EAAE;gBACP,cAAc,EAAE,oBAAoB;gBACpC,IAAI,EAAE;oBACJ,IAAI,EAAE,MAAM;oBACZ,aAAa,EAAE,CAAC,aAAa,EAAE,aAAa,CAAC;iBAC9C;aACF,EACD,aAAa,EAAE;gBACb,cAAc,EAAE,0BAA0B;gBAC1C,IAAI,EAAE;oBACJ,IAAI,EAAE,UAAU;iBACjB;aACF,EACD,UAAU,EAAE;gBACV,cAAc,EAAE,uBAAuB;gBACvC,IAAI,EAAE;oBACJ,IAAI,EAAE,WAAW;oBACjB,SAAS,EAAE,wBAAwB;iBACpC;aACF,EACD,WAAW,EAAE;gBACX,cAAc,EAAE,wBAAwB;gBACxC,IAAI,EAAE;oBACJ,IAAI,EAAE,WAAW;oBACjB,SAAS,EAAE,iCAAiC;iBAC7C;aACF,EACD,UAAU,EAAE;gBACV,cAAc,EAAE,uBAAuB;gBACvC,IAAI,EAAE;oBACJ,IAAI,EAAE,WAAW;oBACjB,SAAS,EAAE,YAAY;iBACxB;aACF,EACD,gBAAgB,EAAE;gBAChB,cAAc,EAAE,6BAA6B;gBAC7C,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF,EACD,QAAQ,EAAE;gBACR,cAAc,EAAE,qBAAqB;gBACrC,IAAI,EAAE;oBACJ,IAAI,EAAE,UAAU;oBAChB,OAAO,EAAE;wBACP,IAAI,EAAE;4BACJ,IAAI,EAAE,WAAW;4BACjB,SAAS,EAAE,qBAAqB;yBACjC;qBACF;iBACF;aACF,EACD,YAAY,EAAE;gBACZ,cAAc,EAAE,yBAAyB;gBACzC,IAAI,EAAE;oBACJ,IAAI,EAAE,WAAW;oBACjB,SAAS,EAAE,mBAAmB;iBAC/B;aACF,GACF;KACF;CACF,CAAC;AAEF,AAAO,MAAM,yBAAyB,GAA+B;IACnE,IAAI,EAAE;QACJ,IAAI,EAAE,WAAW;QACjB,SAAS,EAAE,2BAA2B;QACtC,eAAe,kCACV,wBAAwB,CAAC,IAAI,CAAC,eAAe,KAChD,aAAa,EAAE;gBACb,cAAc,EAAE,0BAA0B;gBAC1C,IAAI,EAAE;oBACJ,IAAI,EAAE,UAAU;iBACjB;aACF,EACD,aAAa,EAAE;gBACb,cAAc,EAAE,0BAA0B;gBAC1C,IAAI,EAAE;oBACJ,IAAI,EAAE,UAAU;iBACjB;aACF,GACF;KACF;CACF,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACrteF;;;;;;;AAaA,AAwEO,MAAM,MAAM,GAAuB;IACxC,aAAa,EAAE,QAAQ;IACvB,MAAM,EAAE;QACN,YAAY,EAAE,kBAAkB;QAChC,UAAU,EAAE,IAAI;QAChB,cAAc,EAAE,QAAQ;QACxB,IAAI,EAAE;YACJ,IAAI,EAAE,QAAQ;SACf;KACF;CACF,CAAC;AAEF,AAAO,MAAM,KAAK,GAA0B;IAC1C,aAAa,EAAE,OAAO;IACtB,MAAM,EAAE;QACN,cAAc,EAAE,OAAO;QACvB,QAAQ,EAAE,IAAI;QACd,IAAI,EAAE;YACJ,IAAI,EAAE,QAAQ;SACf;KACF;IACD,YAAY,EAAE,IAAI;CACnB,CAAC;AAEF,AAAO,MAAM,UAAU,GAA4B;IACjD,aAAa,EAAE,YAAY;IAC3B,MAAM,EAAE;QACN,YAAY,EAAE,YAAY;QAC1B,UAAU,EAAE,IAAI;QAChB,cAAc,EAAE,aAAa;QAC7B,IAAI,EAAE;YACJ,IAAI,EAAE,QAAQ;SACf;KACF;CACF,CAAC;AAEF,AAAO,MAAM,WAAW,GAAuB;IAC7C,aAAa,EAAE,CAAC,SAAS,EAAE,aAAa,CAAC;IACzC,MAAM,EAAE;QACN,YAAY,EAAE,kBAAkB;QAChC,UAAU,EAAE,IAAI;QAChB,cAAc,EAAE,cAAc;QAC9B,IAAI,EAAE;YACJ,IAAI,EAAE,QAAQ;SACf;KACF;CACF,CAAC;AAEF,AAAO,MAAM,UAAU,GAAuB;IAC5C,aAAa,EAAE,YAAY;IAC3B,MAAM,EAAEC,eAAqB;CAC9B,CAAC;AAEF,AAAO,MAAM,iBAAiB,GAA0B;IACtD,aAAa,EAAE,mBAAmB;IAClC,MAAM,EAAE;QACN,cAAc,EAAE,mBAAmB;QACnC,QAAQ,EAAE,IAAI;QACd,IAAI,EAAE;YACJ,IAAI,EAAE,QAAQ;SACf;KACF;CACF,CAAC;AAEF,AAAO,MAAM,mBAAmB,GAA0B;IACxD,aAAa,EAAE,qBAAqB;IACpC,MAAM,EAAE;QACN,cAAc,EAAE,qBAAqB;QACrC,QAAQ,EAAE,IAAI;QACd,IAAI,EAAE;YACJ,IAAI,EAAE,QAAQ;SACf;KACF;CACF,CAAC;AAEF,AAAO,MAAM,cAAc,GAA0B;IACnD,aAAa,EAAE,gBAAgB;IAC/B,MAAM,EAAE;QACN,cAAc,EAAE,gBAAgB;QAChC,QAAQ,EAAE,IAAI;QACd,IAAI,EAAE;YACJ,IAAI,EAAE,QAAQ;SACf;KACF;CACF,CAAC;AAEF,AAAO,MAAM,WAAW,GAAuB;IAC7C,aAAa,EAAE,YAAY;IAC3B,MAAM,EAAEC,qBAA2B;CACpC,CAAC;AAEF,AAAO,MAAM,MAAM,GAA4B;IAC7C,aAAa,EAAE,CAAC,SAAS,EAAE,QAAQ,CAAC;IACpC,MAAM,EAAE;QACN,cAAc,EAAE,SAAS;QACzB,IAAI,EAAE;YACJ,IAAI,EAAE,QAAQ;SACf;KACF;CACF,CAAC;AAEF,AAAO,MAAM,QAAQ,GAA0B;IAC7C,aAAa,EAAE,UAAU;IACzB,MAAM,EAAE;QACN,cAAc,EAAE,UAAU;QAC1B,QAAQ,EAAE,IAAI;QACd,IAAI,EAAE;YACJ,IAAI,EAAE,QAAQ;SACf;KACF;IACD,YAAY,EAAE,IAAI;CACnB,CAAC;AAEF,AAAO,MAAM,WAAW,GAAuB;IAC7C,aAAa,EAAE,YAAY;IAC3B,MAAM,EAAEC,uBAA6B;CACtC,CAAC;AAEF,AAAO,MAAM,2BAA2B,GAA0B;IAChE,aAAa,EAAE,6BAA6B;IAC5C,MAAM,EAAE;QACN,cAAc,EAAE,6BAA6B;QAC7C,QAAQ,EAAE,IAAI;QACd,IAAI,EAAE;YACJ,IAAI,EAAE,QAAQ;SACf;KACF;CACF,CAAC;AAEF,AAAO,MAAM,WAAW,GAAuB;IAC7C,aAAa,EAAE,YAAY;IAC3B,MAAM,EAAEC,6BAAmC;CAC5C,CAAC;AAEF,AAAO,MAAM,uBAAuB,GAA4B;IAC9D,aAAa,EAAE,CAAC,SAAS,EAAE,yBAAyB,CAAC;IACrD,MAAM,EAAE;QACN,cAAc,EAAE,yBAAyB;QACzC,IAAI,EAAE;YACJ,IAAI,EAAE,QAAQ;SACf;KACF;CACF,CAAC;AAEF,AAAO,MAAM,WAAW,GAAuB;IAC7C,aAAa,EAAE,YAAY;IAC3B,MAAM,EAAEC,kBAAwB;CACjC,CAAC;AAEF,AAAO,MAAM,aAAa,GAA0B;IAClD,aAAa,EAAE,eAAe;IAC9B,MAAM,EAAE;QACN,cAAc,EAAE,eAAe;QAC/B,QAAQ,EAAE,IAAI;QACd,IAAI,EAAE;YACJ,IAAI,EAAE,QAAQ;SACf;KACF;CACF,CAAC;AAEF,AAAO,MAAM,WAAW,GAAuB;IAC7C,aAAa,EAAE,YAAY;IAC3B,MAAM,EAAEC,wBAA8B;CACvC,CAAC;AAEF,AAAO,MAAM,OAAO,GAA4B;IAC9C,aAAa,EAAE,CAAC,SAAS,EAAE,QAAQ,CAAC;IACpC,MAAM,EAAE;QACN,cAAc,EAAE,SAAS;QACzB,IAAI,EAAE;YACJ,IAAI,EAAE,MAAM;YACZ,aAAa,EAAE,CAAC,cAAc,EAAE,UAAU,CAAC;SAC5C;KACF;CACF,CAAC;AAEF,AAAO,MAAM,WAAW,GAAuB;IAC7C,aAAa,EAAE,YAAY;IAC3B,MAAM,EAAEC,aAAmB;CAC5B,CAAC;AAEF,AAAO,MAAM,QAAQ,GAA0B;IAC7C,aAAa,EAAE,UAAU;IACzB,MAAM,EAAE;QACN,cAAc,EAAE,UAAU;QAC1B,QAAQ,EAAE,IAAI;QACd,IAAI,EAAE;YACJ,IAAI,EAAE,QAAQ;SACf;KACF;CACF,CAAC;AAEF,AAAO,MAAM,WAAW,GAAuB;IAC7C,aAAa,EAAE,YAAY;IAC3B,MAAM,EAAEC,mBAAyB;CAClC,CAAC;AAEF,AAAO,MAAM,WAAW,GAAuB;IAC7C,aAAa,EAAE,YAAY;IAC3B,MAAM,EAAEC,oBAA0B;CACnC,CAAC;AAEF,AAAO,MAAM,gBAAgB,GAA0B;IACrD,aAAa,EAAE,kBAAkB;IACjC,MAAM,EAAE;QACN,cAAc,EAAE,kBAAkB;QAClC,QAAQ,EAAE,IAAI;QACd,IAAI,EAAE;YACJ,IAAI,EAAE,QAAQ;SACf;KACF;CACF,CAAC;AAEF,AAAO,MAAM,WAAW,GAAuB;IAC7C,aAAa,EAAE,YAAY;IAC3B,MAAM,EAAEC,0BAAgC;CACzC,CAAC;AAEF,AAAO,MAAM,QAAQ,GAA0B;IAC7C,aAAa,EAAE,UAAU;IACzB,MAAM,EAAE;QACN,cAAc,EAAE,UAAU;QAC1B,QAAQ,EAAE,IAAI;QACd,IAAI,EAAE;YACJ,IAAI,EAAE,QAAQ;SACf;KACF;CACF,CAAC;AAEF,AAAO,MAAM,aAAa,GAA0B;IAClD,aAAa,EAAE,eAAe;IAC9B,MAAM,EAAE;QACN,cAAc,EAAE,eAAe;QAC/B,QAAQ,EAAE,IAAI;QACd,IAAI,EAAE;YACJ,IAAI,EAAE,QAAQ;SACf;KACF;CACF,CAAC;AAEF,AAAO,MAAM,SAAS,GAA0B;IAC9C,aAAa,EAAE,WAAW;IAC1B,MAAM,EAAE;QACN,cAAc,EAAE,MAAM;QACtB,QAAQ,EAAE,IAAI;QACd,IAAI,EAAE;YACJ,IAAI,EAAE,QAAQ;SACf;KACF;CACF,CAAC;AAEF,AAAO,MAAM,OAAO,GAA0B;IAC5C,aAAa,EAAE,SAAS;IACxB,MAAM,EAAE;QACN,cAAc,EAAE,SAAS;QACzB,QAAQ,EAAE,IAAI;QACd,IAAI,EAAE;YACJ,IAAI,EAAE,QAAQ;SACf;KACF;CACF,CAAC;AAEF,AAAO,MAAM,MAAM,GAA4B;IAC7C,aAAa,EAAE,CAAC,SAAS,EAAE,QAAQ,CAAC;IACpC,MAAM,EAAE;QACN,cAAc,EAAE,SAAS;QACzB,IAAI,EAAE;YACJ,IAAI,EAAE,QAAQ;SACf;KACF;CACF,CAAC;AAEF,AAAO,MAAM,GAAG,GAA4B;IAC1C,aAAa,EAAE,CAAC,SAAS,EAAE,KAAK,CAAC;IACjC,MAAM,EAAE;QACN,cAAc,EAAE,MAAM;QACtB,IAAI,EAAE;YACJ,IAAI,EAAE,QAAQ;SACf;KACF;CACF,CAAC;AAEF,AAAO,MAAM,OAAO,GAA4B;IAC9C,aAAa,EAAE,CAAC,SAAS,EAAE,SAAS,CAAC;IACrC,MAAM,EAAE;QACN,cAAc,EAAE,UAAU;QAC1B,IAAI,EAAE;YACJ,IAAI,EAAE,QAAQ;SACf;KACF;CACF,CAAC;AAEF,AAAO,MAAM,mBAAmB,GAAuB;IACrD,aAAa,EAAE,qBAAqB;IACpC,MAAM,EAAEC,uBAA6B;CACtC,CAAC;AAEF,AAAO,MAAM,MAAM,GAA0B;IAC3C,aAAa,EAAE,QAAQ;IACvB,MAAM,EAAE;QACN,cAAc,EAAE,QAAQ;QACxB,QAAQ,EAAE,IAAI;QACd,IAAI,EAAE;YACJ,IAAI,EAAE,QAAQ;SACf;KACF;CACF,CAAC;AAEF,AAAO,MAAM,eAAe,GAA0B;IACpD,aAAa,EAAE,iBAAiB;IAChC,MAAM,EAAE;QACN,cAAc,EAAE,iBAAiB;QACjC,QAAQ,EAAE,IAAI;QACd,IAAI,EAAE;YACJ,IAAI,EAAE,QAAQ;SACf;KACF;CACF,CAAC;AAEF,AAAO,MAAM,oBAAoB,GAAuB;IACtD,aAAa,EAAE,qBAAqB;IACpC,MAAM,EAAEC,6BAAmC;CAC5C,CAAC;AAEF,AAAO,MAAM,KAAK,GAA0B;IAC1C,aAAa,EAAE,OAAO;IACtB,MAAM,EAAE;QACN,cAAc,EAAE,OAAO;QACvB,QAAQ,EAAE,IAAI;QACd,IAAI,EAAE;YACJ,IAAI,EAAE,QAAQ;SACf;KACF;CACF,CAAC;AAEF,AAAO,MAAM,IAAI,GAA0B;IACzC,aAAa,EAAE,MAAM;IACrB,MAAM,EAAE;QACN,cAAc,EAAE,MAAM;QACtB,QAAQ,EAAE,IAAI;QACd,IAAI,EAAE;YACJ,IAAI,EAAE,QAAQ;SACf;KACF;CACF,CAAC;AAEF,AAAO,MAAM,QAAQ,GAA0B;IAC7C,aAAa,EAAE,UAAU;IACzB,MAAM,EAAE;QACN,cAAc,EAAE,UAAU;QAC1B,QAAQ,EAAE,IAAI;QACd,IAAI,EAAE;YACJ,IAAI,EAAE,QAAQ;SACf;KACF;CACF,CAAC;AAEF,AAAO,MAAM,SAAS,GAA0B;IAC9C,aAAa,EAAE,UAAU;IACzB,MAAM,EAAE;QACN,WAAW,EAAE;YACX,OAAO,EAAE,IAAI,MAAM,CAAC,eAAe,CAAC;SACrC;QACD,cAAc,EAAE,UAAU;QAC1B,QAAQ,EAAE,IAAI;QACd,IAAI,EAAE;YACJ,IAAI,EAAE,QAAQ;SACf;KACF;CACF,CAAC;AAEF,AAAO,MAAM,YAAY,GAAuB;IAC9C,aAAa,EAAE,YAAY;IAC3B,MAAM,EAAEC,+BAAqC;CAC9C,CAAC;AAEF,AAAO,MAAM,YAAY,GAAuB;IAC9C,aAAa,EAAE,YAAY;IAC3B,MAAM,EAAEC,cAAoB;CAC7B,CAAC;AAEF,AAAO,MAAM,YAAY,GAAuB;IAC9C,aAAa,EAAE,YAAY;IAC3B,MAAM,EAAEC,oBAA0B;CACnC,CAAC;AAEF,AAAO,MAAM,aAAa,GAA4B;IACpD,aAAa,EAAE,CAAC,SAAS,EAAE,eAAe,CAAC;IAC3C,MAAM,EAAE;QACN,cAAc,EAAE,eAAe;QAC/B,IAAI,EAAE;YACJ,IAAI,EAAE,SAAS;SAChB;KACF;CACF,CAAC;AAEF,AAAO,MAAM,SAAS,GAA4B;IAChD,aAAa,EAAE,CAAC,SAAS,EAAE,WAAW,CAAC;IACvC,MAAM,EAAE;QACN,cAAc,EAAE,WAAW;QAC3B,IAAI,EAAE;YACJ,IAAI,EAAE,SAAS;SAChB;KACF;CACF,CAAC;AAEF,AAAO,MAAM,UAAU,GAA4B;IACjD,aAAa,EAAE,CAAC,SAAS,EAAE,YAAY,CAAC;IACxC,MAAM,EAAE;QACN,cAAc,EAAE,YAAY;QAC5B,IAAI,EAAE;YACJ,IAAI,EAAE,QAAQ;SACf;KACF;CACF,CAAC;AAEF,AAAO,MAAM,YAAY,GAA4B;IACnD,aAAa,EAAE,CAAC,SAAS,EAAE,cAAc,CAAC;IAC1C,MAAM,EAAE;QACN,YAAY,EAAE,KAAK;QACnB,cAAc,EAAE,cAAc;QAC9B,IAAI,EAAE;YACJ,IAAI,EAAE,SAAS;SAChB;KACF;CACF,CAAC;AAEF,AAAO,MAAM,YAAY,GAAuB;IAC9C,aAAa,EAAE,CAAC,SAAS,EAAE,YAAY,CAAC;IACxC,MAAM,EAAEC,+BAAqC;CAC9C,CAAC;AAEF,AAAO,MAAM,6BAA6B,GAA4B;IACpE,aAAa,EAAE,CAAC,SAAS,EAAE,+BAA+B,CAAC;IAC3D,MAAM,EAAE;QACN,cAAc,EAAE,+BAA+B;QAC/C,IAAI,EAAE;YACJ,IAAI,EAAE,QAAQ;SACf;KACF;CACF,CAAC;AAEF,AAAO,MAAM,mBAAmB,GAAuB;IACrD,aAAa,EAAE,qBAAqB;IACpC,MAAM,EAAEC,sCAA4C;CACrD,CAAC;AAEF,AAAO,MAAM,YAAY,GAAuB;IAC9C,aAAa,EAAE,YAAY;IAC3B,MAAM,EAAEC,eAAqB;CAC9B,CAAC;AAEF,AAAO,MAAM,OAAO,GAAuB;IACzC,aAAa,EAAE,QAAQ;IACvB,MAAM,EAAE;QACN,YAAY,EAAE,6BAA6B;QAC3C,UAAU,EAAE,IAAI;QAChB,cAAc,EAAE,QAAQ;QACxB,IAAI,EAAE;YACJ,IAAI,EAAE,QAAQ;SACf;KACF;CACF,CAAC;AAEF,AAAO,MAAM,YAAY,GAAuB;IAC9C,aAAa,EAAE,YAAY;IAC3B,MAAM,EAAEC,sBAA4B;CACrC,CAAC;AAEF,AAAO,MAAM,cAAc,GAA0B;IACnD,aAAa,EAAE,gBAAgB;IAC/B,MAAM,EAAE;QACN,cAAc,EAAE,gBAAgB;QAChC,QAAQ,EAAE,IAAI;QACd,IAAI,EAAE;YACJ,IAAI,EAAE,QAAQ;SACf;KACF;CACF,CAAC;AAEF,AAAO,MAAM,YAAY,GAAuB;IAC9C,aAAa,EAAE,YAAY;IAC3B,MAAM,EAAEC,4BAAkC;CAC3C,CAAC;AAEF,AAAO,MAAM,OAAO,GAA4B;IAC9C,aAAa,EAAE,CAAC,SAAS,EAAE,QAAQ,CAAC;IACpC,MAAM,EAAE;QACN,cAAc,EAAE,SAAS;QACzB,IAAI,EAAE;YACJ,IAAI,EAAE,QAAQ;SACf;KACF;CACF,CAAC;AAEF,AAAO,MAAM,aAAa,GAAuB;IAC/C,aAAa,EAAE,CAAC,SAAS,EAAE,eAAe,CAAC;IAC3C,MAAM,EAAEC,mCAAyC;CAClD,CAAC;AAEF,AAAO,MAAM,cAAc,GAAuB;IAChD,aAAa,EAAE,eAAe;IAC9B,MAAM,EAAEC,2CAAiD;CAC1D,CAAC;AAEF,AAAO,MAAM,sBAAsB,GAAuB;IACxD,aAAa,EAAE,CAAC,SAAS,EAAE,wBAAwB,CAAC;IACpD,MAAM,EAAEC,uCAA6C;CACtD,CAAC;AAEF,AAAO,MAAM,oBAAoB,GAA4B;IAC3D,aAAa,EAAE,sBAAsB;IACrC,MAAM,EAAE;QACN,cAAc,EAAE,sBAAsB;QACtC,QAAQ,EAAE,IAAI;QACd,IAAI,EAAE;YACJ,IAAI,EAAE,QAAQ;SACf;KACF;CACF,CAAC;AAEF,AAAO,MAAM,IAAI,GAA4B;IAC3C,aAAa,EAAE,CAAC,SAAS,EAAE,MAAM,CAAC;IAClC,MAAM,EAAE;QACN,cAAc,EAAE,MAAM;QACtB,IAAI,EAAE;YACJ,IAAI,EAAE,QAAQ;SACf;KACF;CACF,CAAC;AAEF,AAAO,MAAM,gBAAgB,GAA4B;IACvD,aAAa,EAAE,CAAC,SAAS,EAAE,kBAAkB,CAAC;IAC9C,MAAM,EAAE;QACN,cAAc,EAAE,kBAAkB;QAClC,IAAI,EAAE;YACJ,IAAI,EAAE,QAAQ;SACf;KACF;CACF,CAAC;AAEF,AAAO,MAAM,YAAY,GAAuB;IAC9C,aAAa,EAAE,YAAY;IAC3B,MAAM,EAAEC,4CAAkD;CAC3D,CAAC;AAEF,AAAO,MAAM,YAAY,GAAuB;IAC9C,aAAa,EAAE,YAAY;IAC3B,MAAM,EAAEC,8BAAoC;CAC7C,CAAC;AAEF,AAAO,MAAM,YAAY,GAAuB;IAC9C,aAAa,EAAE,YAAY;IAC3B,MAAM,EAAEC,KAAW;CACpB,CAAC;AAEF,AAAO,MAAM,SAAS,GAA0B;IAC9C,aAAa,EAAE,WAAW;IAC1B,MAAM,EAAE;QACN,cAAc,EAAE,WAAW;QAC3B,QAAQ,EAAE,IAAI;QACd,IAAI,EAAE;YACJ,IAAI,EAAE,QAAQ;SACf;KACF;CACF,CAAC;AAEF,AAAO,MAAM,YAAY,GAAuB;IAC9C,aAAa,EAAE,YAAY;IAC3B,MAAM,EAAEC,WAAiB;CAC1B,CAAC;AAEF,AAAO,MAAM,YAAY,GAAuB;IAC9C,aAAa,EAAE,YAAY;IAC3B,MAAM,EAAEC,sBAA4B;CACrC,CAAC;AAEF,AAAO,MAAM,0BAA0B,GAA0B;IAC/D,aAAa,EAAE,4BAA4B;IAC3C,MAAM,EAAE;QACN,cAAc,EAAE,4BAA4B;QAC5C,QAAQ,EAAE,IAAI;QACd,IAAI,EAAE;YACJ,IAAI,EAAE,QAAQ;SACf;KACF;CACF,CAAC;AAEF,AAAO,MAAM,YAAY,GAAuB;IAC9C,aAAa,EAAE,YAAY;IAC3B,MAAM,EAAEC,4BAAkC;CAC3C,CAAC;AAEF,AAAO,MAAM,OAAO,GAA4B;IAC9C,aAAa,EAAE,CAAC,SAAS,EAAE,QAAQ,CAAC;IACpC,MAAM,EAAE;QACN,cAAc,EAAE,SAAS;QACzB,IAAI,EAAE;YACJ,IAAI,EAAE,QAAQ;SACf;KACF;CACF,CAAC;AAEF,AAAO,MAAM,YAAY,GAAuB;IAC9C,aAAa,EAAE,YAAY;IAC3B,MAAM,EAAEC,YAAkB;CAC3B,CAAC;AAEF,AAAO,MAAM,gBAAgB,GAA0B;IACrD,aAAa,EAAE,kBAAkB;IACjC,MAAM,EAAE;QACN,cAAc,EAAE,kBAAkB;QAClC,QAAQ,EAAE,IAAI;QACd,IAAI,EAAE;YACJ,IAAI,EAAE,QAAQ;SACf;KACF;CACF,CAAC;AAEF,AAAO,MAAM,OAAO,GAA4B;IAC9C,aAAa,EAAE,CAAC,SAAS,EAAE,QAAQ,CAAC;IACpC,MAAM,EAAE;QACN,cAAc,EAAE,SAAS;QACzB,IAAI,EAAE;YACJ,IAAI,EAAE,QAAQ;SACf;KACF;CACF,CAAC;AAEF,AAAO,MAAM,YAAY,GAAuB;IAC9C,aAAa,EAAE,YAAY;IAC3B,MAAM,EAAEC,wBAA8B;CACvC,CAAC;AAEF,AAAO,MAAM,4BAA4B,GAA0B;IACjE,aAAa,EAAE,8BAA8B;IAC7C,MAAM,EAAE;QACN,cAAc,EAAE,8BAA8B;QAC9C,QAAQ,EAAE,IAAI;QACd,IAAI,EAAE;YACJ,IAAI,EAAE,QAAQ;SACf;KACF;CACF,CAAC;AAEF,AAAO,MAAM,YAAY,GAAuB;IAC9C,aAAa,EAAE,YAAY;IAC3B,MAAM,EAAEC,8BAAoC;CAC7C,CAAC;AAEF,AAAO,MAAM,OAAO,GAA4B;IAC9C,aAAa,EAAE,CAAC,SAAS,EAAE,QAAQ,CAAC;IACpC,MAAM,EAAE;QACN,cAAc,EAAE,SAAS;QACzB,IAAI,EAAE;YACJ,IAAI,EAAE,QAAQ;SACf;KACF;CACF,CAAC;AAEF,AAAO,MAAM,OAAO,GAA4B;IAC9C,aAAa,EAAE,CAAC,SAAS,EAAE,QAAQ,CAAC;IACpC,MAAM,EAAE;QACN,cAAc,EAAE,SAAS;QACzB,IAAI,EAAE;YACJ,IAAI,EAAE,QAAQ;SACf;KACF;CACF,CAAC;AAEF,AAAO,MAAM,YAAY,GAAuB;IAC9C,aAAa,EAAE,YAAY;IAC3B,MAAM,EAAEC,mBAAyB;CAClC,CAAC;AAEF,AAAO,MAAM,uBAAuB,GAA0B;IAC5D,aAAa,EAAE,yBAAyB;IACxC,MAAM,EAAE;QACN,cAAc,EAAE,yBAAyB;QACzC,QAAQ,EAAE,IAAI;QACd,IAAI,EAAE;YACJ,IAAI,EAAE,QAAQ;SACf;KACF;CACF,CAAC;AAEF,AAAO,MAAM,YAAY,GAAuB;IAC9C,aAAa,EAAE,YAAY;IAC3B,MAAM,EAAEC,yBAA+B;CACxC,CAAC;AAEF,AAAO,MAAM,OAAO,GAA4B;IAC9C,aAAa,EAAE,CAAC,SAAS,EAAE,QAAQ,CAAC;IACpC,MAAM,EAAE;QACN,cAAc,EAAE,SAAS;QACzB,IAAI,EAAE;YACJ,IAAI,EAAE,QAAQ;SACf;KACF;CACF,CAAC;AAEF,AAAO,MAAM,oBAAoB,GAAuB;IACtD,aAAa,EAAE,qBAAqB;IACpC,MAAM,EAAEC,+BAAqC;CAC9C,CAAC;AAEF,AAAO,MAAM,iBAAiB,GAA0B;IACtD,aAAa,EAAE,mBAAmB;IAClC,MAAM,EAAE;QACN,cAAc,EAAE,mBAAmB;QACnC,QAAQ,EAAE,IAAI;QACd,IAAI,EAAE;YACJ,IAAI,EAAE,QAAQ;SACf;KACF;CACF,CAAC;AAEF,AAAO,MAAM,oBAAoB,GAAuB;IACtD,aAAa,EAAE,qBAAqB;IACpC,MAAM,EAAEC,qCAA2C;CACpD,CAAC;AAEF,AAAO,MAAM,oBAAoB,GAAuB;IACtD,aAAa,EAAE,qBAAqB;IACpC,MAAM,EAAEC,iCAAuC;CAChD,CAAC;AAEF,AAAO,MAAM,UAAU,GAA0B;IAC/C,aAAa,EAAE,YAAY;IAC3B,MAAM,EAAE;QACN,cAAc,EAAE,YAAY;QAC5B,QAAQ,EAAE,IAAI;QACd,IAAI,EAAE;YACJ,IAAI,EAAE,QAAQ;SACf;KACF;CACF,CAAC;AAEF,AAAO,MAAM,oBAAoB,GAAuB;IACtD,aAAa,EAAE,qBAAqB;IACpC,MAAM,EAAEC,uCAA6C;CACtD,CAAC;AAEF,AAAO,MAAM,wBAAwB,GAAuB;IAC1D,aAAa,EAAE,CAAC,SAAS,EAAE,0BAA0B,CAAC;IACtD,MAAM,EAAEC,yCAA+C;CACxD,CAAC;AAEF,AAAO,MAAM,YAAY,GAAuB;IAC9C,aAAa,EAAE,YAAY;IAC3B,MAAM,EAAEC,wBAA8B;CACvC,CAAC;AAEF,AAAO,MAAM,0BAA0B,GAA0B;IAC/D,aAAa,EAAE,4BAA4B;IAC3C,MAAM,EAAE;QACN,cAAc,EAAE,4BAA4B;QAC5C,QAAQ,EAAE,IAAI;QACd,IAAI,EAAE;YACJ,IAAI,EAAE,QAAQ;SACf;KACF;CACF,CAAC;AAEF,AAAO,MAAM,MAAM,GAA4B;IAC7C,aAAa,EAAE,CAAC,SAAS,EAAE,QAAQ,CAAC;IACpC,MAAM,EAAE;QACN,cAAc,EAAE,SAAS;QACzB,IAAI,EAAE;YACJ,IAAI,EAAE,QAAQ;SACf;KACF;CACF,CAAC;AAEF,AAAO,MAAM,YAAY,GAAuB;IAC9C,aAAa,EAAE,YAAY;IAC3B,MAAM,EAAEC,0BAAgC;CACzC,CAAC;AAEF,AAAO,MAAM,YAAY,GAAuB;IAC9C,aAAa,EAAE,YAAY;IAC3B,MAAM,EAAEC,sBAA4B;CACrC,CAAC;AAEF,AAAO,MAAM,SAAS,GAA0B;IAC9C,aAAa,EAAE,WAAW;IAC1B,MAAM,EAAE;QACN,cAAc,EAAE,WAAW;QAC3B,QAAQ,EAAE,IAAI;QACd,IAAI,EAAE;YACJ,IAAI,EAAE,QAAQ;SACf;KACF;CACF,CAAC;AAEF,AAAO,MAAM,UAAU,GAAuB;IAC5C,aAAa,EAAE,YAAY;IAC3B,MAAM,EAAEC,wBAA8B;CACvC,CAAC;AAEF,AAAO,MAAM,cAAc,GAA0B;IACnD,aAAa,EAAE,gBAAgB;IAC/B,MAAM,EAAE;QACN,cAAc,EAAE,gBAAgB;QAChC,QAAQ,EAAE,IAAI;QACd,IAAI,EAAE;YACJ,IAAI,EAAE,QAAQ;SACf;KACF;CACF,CAAC;AAEF,AAAO,MAAM,WAAW,GAAuB;IAC7C,aAAa,EAAE,YAAY;IAC3B,MAAM,EAAEC,8BAAoC;CAC7C,CAAC;AAEF,AAAO,MAAM,WAAW,GAA4B;IAClD,aAAa,EAAE,YAAY;IAC3B,MAAM,EAAE;QACN,YAAY,EAAE,YAAY;QAC1B,UAAU,EAAE,IAAI;QAChB,cAAc,EAAE,aAAa;QAC7B,IAAI,EAAE;YACJ,IAAI,EAAE,QAAQ;SACf;KACF;CACF,CAAC;AAEF,AAAO,MAAM,wBAAwB,GAA4B;IAC/D,aAAa,EAAE,CAAC,SAAS,EAAE,0BAA0B,CAAC;IACtD,MAAM,EAAE;QACN,cAAc,EAAE,0BAA0B;QAC1C,IAAI,EAAE;YACJ,IAAI,EAAE,QAAQ;SACf;KACF;CACF,CAAC;AAEF,AAAO,MAAM,IAAI,GAAuB;IACtC,aAAa,EAAE,MAAM;IACrB,MAAM,EAAEC,IAAU;CACnB,CAAC;AAEF,AAAO,MAAM,QAAQ,GAA0B;IAC7C,aAAa,EAAE,UAAU;IACzB,MAAM,EAAE;QACN,cAAc,EAAE,UAAU;QAC1B,QAAQ,EAAE,IAAI;QACd,IAAI,EAAE;YACJ,IAAI,EAAE,QAAQ;SACf;KACF;CACF,CAAC;AAEF,AAAO,MAAM,WAAW,GAA4B;IAClD,aAAa,EAAE,YAAY;IAC3B,MAAM,EAAE;QACN,YAAY,EAAE,YAAY;QAC1B,UAAU,EAAE,IAAI;QAChB,cAAc,EAAE,aAAa;QAC7B,IAAI,EAAE;YACJ,IAAI,EAAE,QAAQ;SACf;KACF;CACF,CAAC;AAEF,AAAO,MAAM,KAAK,GAAuB;IACvC,aAAa,EAAE,MAAM;IACrB,MAAM,EAAEC,UAAgB;CACzB,CAAC;AAEF,AAAO,MAAM,eAAe,GAAuB;IACjD,aAAa,EAAE,iBAAiB;IAChC,MAAM,EAAEC,eAAqB;CAC9B,CAAC;AAEF,AAAO,MAAM,QAAQ,GAAuB;IAC1C,aAAa,EAAE,UAAU;IACzB,MAAM,EAAEC,QAAc;CACvB,CAAC;AAEF,AAAO,MAAM,YAAY,GAA0B;IACjD,aAAa,EAAE,cAAc;IAC7B,MAAM,EAAE;QACN,cAAc,EAAE,cAAc;QAC9B,QAAQ,EAAE,IAAI;QACd,IAAI,EAAE;YACJ,IAAI,EAAE,QAAQ;SACf;KACF;CACF,CAAC;AAEF,AAAO,MAAM,SAAS,GAAuB;IAC3C,aAAa,EAAE,UAAU;IACzB,MAAM,EAAEC,cAAoB;CAC7B,CAAC;AAEF,AAAO,MAAM,iBAAiB,GAAuB;IACnD,aAAa,EAAE,mBAAmB;IAClC,MAAM,EAAEC,iBAAuB;CAChC,CAAC;AAEF,AAAO,MAAM,qBAAqB,GAA0B;IAC1D,aAAa,EAAE,uBAAuB;IACtC,MAAM,EAAE;QACN,cAAc,EAAE,uBAAuB;QACvC,QAAQ,EAAE,IAAI;QACd,IAAI,EAAE;YACJ,IAAI,EAAE,QAAQ;SACf;KACF;CACF,CAAC;AAEF,AAAO,MAAM,kBAAkB,GAAuB;IACpD,aAAa,EAAE,mBAAmB;IAClC,MAAM,EAAEC,uBAA6B;CACtC,CAAC;AAEF,AAAO,MAAM,UAAU,GAAuB;IAC5C,aAAa,EAAE,YAAY;IAC3B,MAAM,EAAEC,UAAgB;CACzB,CAAC;AAEF,AAAO,MAAM,cAAc,GAA0B;IACnD,aAAa,EAAE,gBAAgB;IAC/B,MAAM,EAAE;QACN,cAAc,EAAE,gBAAgB;QAChC,QAAQ,EAAE,IAAI;QACd,IAAI,EAAE;YACJ,IAAI,EAAE,QAAQ;SACf;KACF;CACF,CAAC;AAEF,AAAO,MAAM,WAAW,GAAuB;IAC7C,aAAa,EAAE,YAAY;IAC3B,MAAM,EAAEC,gBAAsB;CAC/B,CAAC;AAEF,AAAO,MAAM,yBAAyB,GAAuB;IAC3D,aAAa,EAAE,2BAA2B;IAC1C,MAAM,EAAEC,yBAA+B;CACxC,CAAC;AAEF,AAAO,MAAM,6BAA6B,GAA0B;IAClE,aAAa,EAAE,+BAA+B;IAC9C,MAAM,EAAE;QACN,cAAc,EAAE,+BAA+B;QAC/C,QAAQ,EAAE,IAAI;QACd,IAAI,EAAE;YACJ,IAAI,EAAE,QAAQ;SACf;KACF;CACF,CAAC;AAEF,AAAO,MAAM,kBAAkB,GAA0B;IACvD,aAAa,EAAE,oBAAoB;IACnC,MAAM,EAAE;QACN,cAAc,EAAE,oBAAoB;QACpC,QAAQ,EAAE,IAAI;QACd,IAAI,EAAE;YACJ,IAAI,EAAE,QAAQ;SACf;KACF;CACF,CAAC;AAEF,AAAO,MAAM,oBAAoB,GAA0B;IACzD,aAAa,EAAE,sBAAsB;IACrC,MAAM,EAAE;QACN,cAAc,EAAE,sBAAsB;QACtC,QAAQ,EAAE,IAAI;QACd,IAAI,EAAE;YACJ,IAAI,EAAE,QAAQ;SACf;KACF;CACF,CAAC;AAEF,AAAO,MAAM,OAAO,GAAuB;IACzC,aAAa,EAAE,SAAS;IACxB,MAAM,EAAEC,OAAa;CACtB,CAAC;AAEF,AAAO,MAAM,WAAW,GAA0B;IAChD,aAAa,EAAE,aAAa;IAC5B,MAAM,EAAE;QACN,cAAc,EAAE,aAAa;QAC7B,QAAQ,EAAE,IAAI;QACd,IAAI,EAAE;YACJ,IAAI,EAAE,QAAQ;SACf;KACF;CACF,CAAC;AAEF,AAAO,MAAM,WAAW,GAA4B;IAClD,aAAa,EAAE,YAAY;IAC3B,MAAM,EAAE;QACN,YAAY,EAAE,YAAY;QAC1B,UAAU,EAAE,IAAI;QAChB,cAAc,EAAE,aAAa;QAC7B,IAAI,EAAE;YACJ,IAAI,EAAE,QAAQ;SACf;KACF;CACF,CAAC;AAEF,AAAO,MAAM,QAAQ,GAAuB;IAC1C,aAAa,EAAE,SAAS;IACxB,MAAM,EAAEC,aAAmB;CAC5B,CAAC;AAEF,AAAO,MAAM,OAAO,GAA4B;IAC9C,aAAa,EAAE,CAAC,SAAS,EAAE,QAAQ,CAAC;IACpC,MAAM,EAAE;QACN,cAAc,EAAE,SAAS;QACzB,IAAI,EAAE;YACJ,IAAI,EAAE,QAAQ;SACf;KACF;CACF,CAAC;AAEF,AAAO,MAAM,OAAO,GAA4B;IAC9C,aAAa,EAAE,CAAC,SAAS,EAAE,QAAQ,CAAC;IACpC,MAAM,EAAE;QACN,cAAc,EAAE,SAAS;QACzB,IAAI,EAAE;YACJ,IAAI,EAAE,QAAQ;SACf;KACF;CACF,CAAC;AAEF,AAAO,MAAM,YAAY,GAAuB;IAC9C,aAAa,EAAE,cAAc;IAC7B,MAAM,EAAEC,YAAkB;CAC3B,CAAC;AAEF,AAAO,MAAM,gBAAgB,GAA0B;IACrD,aAAa,EAAE,kBAAkB;IACjC,MAAM,EAAE;QACN,cAAc,EAAE,kBAAkB;QAClC,QAAQ,EAAE,IAAI;QACd,IAAI,EAAE;YACJ,IAAI,EAAE,QAAQ;SACf;KACF;CACF,CAAC;AAEF,AAAO,MAAM,aAAa,GAAuB;IAC/C,aAAa,EAAE,cAAc;IAC7B,MAAM,EAAEC,kBAAwB;CACjC,CAAC;AAEF,AAAO,MAAM,mBAAmB,GAAuB;IACrD,aAAa,EAAE,qBAAqB;IACpC,MAAM,EAAEC,mBAAyB;CAClC,CAAC;AAEF,AAAO,MAAM,uBAAuB,GAA0B;IAC5D,aAAa,EAAE,yBAAyB;IACxC,MAAM,EAAE;QACN,cAAc,EAAE,yBAAyB;QACzC,QAAQ,EAAE,IAAI;QACd,IAAI,EAAE;YACJ,IAAI,EAAE,QAAQ;SACf;KACF;CACF,CAAC;AAEF,AAAO,MAAM,oBAAoB,GAAuB;IACtD,aAAa,EAAE,qBAAqB;IACpC,MAAM,EAAEC,yBAA+B;CACxC,CAAC;AAEF,AAAO,MAAM,OAAO,GAA4B;IAC9C,aAAa,EAAE,CAAC,SAAS,EAAE,QAAQ,CAAC;IACpC,MAAM,EAAE;QACN,cAAc,EAAE,SAAS;QACzB,IAAI,EAAE;YACJ,IAAI,EAAE,QAAQ;SACf;KACF;CACF,CAAC;AAEF,AAAO,MAAM,kBAAkB,GAAuB;IACpD,aAAa,EAAE,oBAAoB;IACnC,MAAM,EAAEC,kBAAwB;CACjC,CAAC;AAEF,AAAO,MAAM,sBAAsB,GAA0B;IAC3D,aAAa,EAAE,wBAAwB;IACvC,MAAM,EAAE;QACN,cAAc,EAAE,wBAAwB;QACxC,QAAQ,EAAE,IAAI;QACd,IAAI,EAAE;YACJ,IAAI,EAAE,QAAQ;SACf;KACF;CACF,CAAC;AAEF,AAAO,MAAM,mBAAmB,GAAuB;IACrD,aAAa,EAAE,oBAAoB;IACnC,MAAM,EAAEC,wBAA8B;CACvC,CAAC;AAEF,AAAO,MAAM,yBAAyB,GAAuB;IAC3D,aAAa,EAAE,2BAA2B;IAC1C,MAAM,EAAEC,yBAA+B;CACxC,CAAC;AAEF,AAAO,MAAM,6BAA6B,GAA0B;IAClE,aAAa,EAAE,+BAA+B;IAC9C,MAAM,EAAE;QACN,cAAc,EAAE,+BAA+B;QAC/C,QAAQ,EAAE,IAAI;QACd,IAAI,EAAE;YACJ,IAAI,EAAE,QAAQ;SACf;KACF;CACF,CAAC;AAEF,AAAO,MAAM,0BAA0B,GAAuB;IAC5D,aAAa,EAAE,2BAA2B;IAC1C,MAAM,EAAEC,+BAAqC;CAC9C,CAAC;AAEF,AAAO,MAAM,aAAa,GAAuB;IAC/C,aAAa,EAAE,eAAe;IAC9B,MAAM,EAAEC,aAAmB;CAC5B,CAAC;AAEF,AAAO,MAAM,QAAQ,GAA4B;IAC/C,aAAa,EAAE,CAAC,SAAS,EAAE,UAAU,CAAC;IACtC,MAAM,EAAE;QACN,cAAc,EAAE,UAAU;QAC1B,IAAI,EAAE;YACJ,IAAI,EAAE,QAAQ;SACf;KACF;CACF,CAAC;AAEF,AAAO,MAAM,iBAAiB,GAA0B;IACtD,aAAa,EAAE,mBAAmB;IAClC,MAAM,EAAE;QACN,cAAc,EAAE,mBAAmB;QACnC,QAAQ,EAAE,IAAI;QACd,IAAI,EAAE;YACJ,IAAI,EAAE,QAAQ;SACf;KACF;CACF,CAAC;AAEF,AAAO,MAAM,iBAAiB,GAA0B;IACtD,aAAa,EAAE,mBAAmB;IAClC,MAAM,EAAE;QACN,cAAc,EAAE,mBAAmB;QACnC,QAAQ,EAAE,IAAI;QACd,IAAI,EAAE;YACJ,IAAI,EAAE,QAAQ;SACf;KACF;CACF,CAAC;AAEF,AAAO,MAAM,gBAAgB,GAA0B;IACrD,aAAa,EAAE,kBAAkB;IACjC,MAAM,EAAE;QACN,cAAc,EAAE,kBAAkB;QAClC,QAAQ,EAAE,IAAI;QACd,IAAI,EAAE;YACJ,IAAI,EAAE,QAAQ;SACf;KACF;CACF,CAAC;AAEF,AAAO,MAAM,gBAAgB,GAA0B;IACrD,aAAa,EAAE,kBAAkB;IACjC,MAAM,EAAE;QACN,cAAc,EAAE,kBAAkB;QAClC,QAAQ,EAAE,IAAI;QACd,IAAI,EAAE;YACJ,IAAI,EAAE,QAAQ;SACf;KACF;CACF,CAAC;AAEF,AAAO,MAAM,WAAW,GAA4B;IAClD,aAAa,EAAE,YAAY;IAC3B,MAAM,EAAE;QACN,YAAY,EAAE,YAAY;QAC1B,UAAU,EAAE,IAAI;QAChB,cAAc,EAAE,aAAa;QAC7B,IAAI,EAAE;YACJ,IAAI,EAAE,QAAQ;SACf;KACF;CACF,CAAC;AAEF,AAAO,MAAM,OAAO,GAAuB;IACzC,aAAa,EAAE,QAAQ;IACvB,MAAM,EAAE;QACN,YAAY,EAAE,mBAAmB;QACjC,UAAU,EAAE,IAAI;QAChB,cAAc,EAAE,QAAQ;QACxB,IAAI,EAAE;YACJ,IAAI,EAAE,QAAQ;SACf;KACF;CACF,CAAC;AAEF,AAAO,MAAM,QAAQ,GAA0B;IAC7C,aAAa,EAAE,UAAU;IACzB,MAAM,EAAE;QACN,cAAc,EAAE,UAAU;QAC1B,QAAQ,EAAE,IAAI;QACd,IAAI,EAAE;YACJ,IAAI,EAAE,QAAQ;SACf;KACF;CACF,CAAC;AAEF,AAAO,MAAM,YAAY,GAAuB;IAC9C,aAAa,EAAE,CAAC,SAAS,EAAE,YAAY,CAAC;IACxC,MAAM,EAAEC,YAAkB;CAC3B,CAAC;AAEF,AAAO,MAAM,YAAY,GAAuB;IAC9C,aAAa,EAAE,CAAC,SAAS,EAAE,YAAY,CAAC;IACxC,MAAM,EAAEC,kBAAwB;CACjC,CAAC;AAEF,AAAO,MAAM,YAAY,GAAuB;IAC9C,aAAa,EAAE,CAAC,SAAS,EAAE,YAAY,CAAC;IACxC,MAAM,EAAEC,aAAmB;CAC5B,CAAC;AAEF,AAAO,MAAM,YAAY,GAAuB;IAC9C,aAAa,EAAE,CAAC,SAAS,EAAE,YAAY,CAAC;IACxC,MAAM,EAAEC,YAAkB;CAC3B,CAAC;AAEF,AAAO,MAAM,YAAY,GAA0B;IACjD,aAAa,EAAE,cAAc;IAC7B,MAAM,EAAE;QACN,cAAc,EAAE,cAAc;QAC9B,QAAQ,EAAE,IAAI;QACd,IAAI,EAAE;YACJ,IAAI,EAAE,QAAQ;SACf;KACF;CACF,CAAC;AAEF,AAAO,MAAM,aAAa,GAA0B;IAClD,aAAa,EAAE,eAAe;IAC9B,MAAM,EAAE;QACN,cAAc,EAAE,eAAe;QAC/B,QAAQ,EAAE,IAAI;QACd,IAAI,EAAE;YACJ,IAAI,EAAE,QAAQ;SACf;KACF;CACF,CAAC;AAEF,AAAO,MAAM,YAAY,GAA0B;IACjD,aAAa,EAAE,cAAc;IAC7B,MAAM,EAAE;QACN,cAAc,EAAE,cAAc;QAC9B,QAAQ,EAAE,IAAI;QACd,IAAI,EAAE;YACJ,IAAI,EAAE,QAAQ;SACf;KACF;CACF,CAAC;;AC10CF;;;;;;;AAoBA;AACA;AACA,MAAa,cAAc;;;;;IAOzB,YAAY,MAA+B;QACzC,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;KACtB;;;;;IAMM,IAAI,CACT,OAAsC;QAEtC,MAAM,IAAI,GAAG,IAAI,CAAC,aAAa,CAAC,OAAO,CAAC,CAAC;QACzC,OAAO;YACL,IAAI;gBACF,OAAO,IAAI,CAAC,IAAI,EAAE,CAAC;aACpB;YACD,CAAC,MAAM,CAAC,aAAa,CAAC;gBACpB,OAAO,IAAI,CAAC;aACb;YACD,MAAM,EAAE;gBACN,OAAO,IAAI,CAAC,cAAc,CAAC,OAAO,CAAC,CAAC;aACrC;SACF,CAAC;KACH;IAEc,cAAc,CAC3B,OAAsC;;YAEtC,IAAI,MAAM,GAAG,oBAAM,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,CAAA,CAAC;YACvC,0BAAM,MAAM,CAAC,KAAK,IAAI,EAAE,CAAA,CAAC;SAC1B;KAAA;IAEc,aAAa,CAC1B,OAAsC;;;;gBAEtC,KAAyB,IAAA,KAAAC,oBAAA,IAAI,CAAC,cAAc,CAAC,OAAO,CAAC,CAAA,IAAA;oBAA1C,MAAM,IAAI,WAAA,CAAA;oBACnB,oBAAA,OAAOC,uBAAAD,oBAAA,IAAI,CAAA,CAAA,CAAA,CAAC;iBACb;;;;;;;;;SACF;KAAA;;;;;IAMO,KAAK,CACX,OAAsC;QAEtC,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CAAC,EAAE,OAAO,EAAE,EAAE,iBAAiB,CAAC,CAAC;KACzE;CACF;AACD;AACA,MAAM,UAAU,GAAGE,2BAA2B,CAAC,OAAO,cAAc,KAAK,CAAC,CAAC;AAE3E,MAAM,iBAAiB,GAA6B;IAClD,IAAI,EAAE,yCAAyC;IAC/C,UAAU,EAAE,KAAK;IACjB,SAAS,EAAE;QACT,GAAG,EAAE;YACH,UAAU,EAAEC,0BAAkC;SAC/C;QACD,OAAO,EAAE;YACP,UAAU,EAAEC,UAAkB;SAC/B;KACF;IACD,eAAe,EAAE,CAACC,UAAqB,CAAC;IACxC,aAAa,EAAE,CAACC,KAAgB,CAAC;IACjC,gBAAgB,EAAE,CAACC,MAAiB,CAAC;IACrC,UAAU;CACX,CAAC;;ACjGF;;;;;;;AAqCA;AACA;AACA,MAAa,oBAAoB;;;;;IAO/B,YAAY,MAA+B;QACzC,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;KACtB;;;;;IAMM,kBAAkB,CACvB,OAA0D;QAE1D,MAAM,IAAI,GAAG,IAAI,CAAC,2BAA2B,CAAC,OAAO,CAAC,CAAC;QACvD,OAAO;YACL,IAAI;gBACF,OAAO,IAAI,CAAC,IAAI,EAAE,CAAC;aACpB;YACD,CAAC,MAAM,CAAC,aAAa,CAAC;gBACpB,OAAO,IAAI,CAAC;aACb;YACD,MAAM,EAAE;gBACN,OAAO,IAAI,CAAC,4BAA4B,CAAC,OAAO,CAAC,CAAC;aACnD;SACF,CAAC;KACH;IAEc,4BAA4B,CACzC,OAA0D;;YAE1D,IAAI,MAAM,GAAG,oBAAM,IAAI,CAAC,mBAAmB,CAAC,OAAO,CAAC,CAAA,CAAC;YACrD,0BAAM,MAAM,CAAC,KAAK,IAAI,EAAE,CAAA,CAAC;YACzB,IAAI,iBAAiB,GAAG,MAAM,CAAC,QAAQ,CAAC;YACxC,OAAO,iBAAiB,EAAE;gBACxB,MAAM,GAAG,oBAAM,IAAI,CAAC,uBAAuB,CAAC,iBAAiB,EAAE,OAAO,CAAC,CAAA,CAAC;gBACxE,iBAAiB,GAAG,MAAM,CAAC,QAAQ,CAAC;gBACpC,0BAAM,MAAM,CAAC,KAAK,IAAI,EAAE,CAAA,CAAC;aAC1B;SACF;KAAA;IAEc,2BAA2B,CACxC,OAA0D;;;;gBAE1D,KAAyB,IAAA,KAAAP,oBAAA,IAAI,CAAC,4BAA4B,CAAC,OAAO,CAAC,CAAA,IAAA;oBAAxD,MAAM,IAAI,WAAA,CAAA;oBACnB,oBAAA,OAAOC,uBAAAD,oBAAA,IAAI,CAAA,CAAA,CAAA,CAAC;iBACb;;;;;;;;;SACF;KAAA;;;;;;IAOM,IAAI,CACT,iBAAyB,EACzB,OAA4C;QAE5C,MAAM,IAAI,GAAG,IAAI,CAAC,aAAa,CAAC,iBAAiB,EAAE,OAAO,CAAC,CAAC;QAC5D,OAAO;YACL,IAAI;gBACF,OAAO,IAAI,CAAC,IAAI,EAAE,CAAC;aACpB;YACD,CAAC,MAAM,CAAC,aAAa,CAAC;gBACpB,OAAO,IAAI,CAAC;aACb;YACD,MAAM,EAAE;gBACN,OAAO,IAAI,CAAC,cAAc,CAAC,iBAAiB,EAAE,OAAO,CAAC,CAAC;aACxD;SACF,CAAC;KACH;IAEc,cAAc,CAC3B,iBAAyB,EACzB,OAA4C;;YAE5C,IAAI,MAAM,GAAG,oBAAM,IAAI,CAAC,KAAK,CAAC,iBAAiB,EAAE,OAAO,CAAC,CAAA,CAAC;YAC1D,0BAAM,MAAM,CAAC,KAAK,IAAI,EAAE,CAAA,CAAC;YACzB,IAAI,iBAAiB,GAAG,MAAM,CAAC,QAAQ,CAAC;YACxC,OAAO,iBAAiB,EAAE;gBACxB,MAAM,GAAG,oBAAM,IAAI,CAAC,SAAS,CAC3B,iBAAiB,EACjB,iBAAiB,EACjB,OAAO,CACR,CAAA,CAAC;gBACF,iBAAiB,GAAG,MAAM,CAAC,QAAQ,CAAC;gBACpC,0BAAM,MAAM,CAAC,KAAK,IAAI,EAAE,CAAA,CAAC;aAC1B;SACF;KAAA;IAEc,aAAa,CAC1B,iBAAyB,EACzB,OAA4C;;;;gBAE5C,KAAyB,IAAA,KAAAA,oBAAA,IAAI,CAAC,cAAc,CAAC,iBAAiB,EAAE,OAAO,CAAC,CAAA,IAAA;oBAA7D,MAAM,IAAI,WAAA,CAAA;oBACnB,oBAAA,OAAOC,uBAAAD,oBAAA,IAAI,CAAA,CAAA,CAAA,CAAC;iBACb;;;;;;;;;SACF;KAAA;;;;;;;;IASM,kBAAkB,CACvB,iBAAyB,EACzB,mBAA2B,EAC3B,OAA0D;QAE1D,MAAM,IAAI,GAAG,IAAI,CAAC,2BAA2B,CAC3C,iBAAiB,EACjB,mBAAmB,EACnB,OAAO,CACR,CAAC;QACF,OAAO;YACL,IAAI;gBACF,OAAO,IAAI,CAAC,IAAI,EAAE,CAAC;aACpB;YACD,CAAC,MAAM,CAAC,aAAa,CAAC;gBACpB,OAAO,IAAI,CAAC;aACb;YACD,MAAM,EAAE;gBACN,OAAO,IAAI,CAAC,4BAA4B,CACtC,iBAAiB,EACjB,mBAAmB,EACnB,OAAO,CACR,CAAC;aACH;SACF,CAAC;KACH;IAEc,4BAA4B,CACzC,iBAAyB,EACzB,mBAA2B,EAC3B,OAA0D;;YAE1D,IAAI,MAAM,GAAG,oBAAM,IAAI,CAAC,mBAAmB,CACzC,iBAAiB,EACjB,mBAAmB,EACnB,OAAO,CACR,CAAA,CAAC;YACF,0BAAM,MAAM,CAAC,KAAK,IAAI,EAAE,CAAA,CAAC;SAC1B;KAAA;IAEc,2BAA2B,CACxC,iBAAyB,EACzB,mBAA2B,EAC3B,OAA0D;;;;gBAE1D,KAAyB,IAAA,KAAAA,oBAAA,IAAI,CAAC,4BAA4B,CACxD,iBAAiB,EACjB,mBAAmB,EACnB,OAAO,CACR,CAAA,IAAA;oBAJU,MAAM,IAAI,WAAA,CAAA;oBAKnB,oBAAA,OAAOC,uBAAAD,oBAAA,IAAI,CAAA,CAAA,CAAA,CAAC;iBACb;;;;;;;;;SACF;KAAA;;;;;;;;IASD,cAAc,CACZ,iBAAyB,EACzB,mBAA2B,EAC3B,UAA2B,EAC3B,OAAsD;QAEtD,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,iBAAiB,EAAE,mBAAmB,EAAE,UAAU,EAAE,OAAO,EAAE,EAC/D,2BAA2B,CAC5B,CAAC;KACH;;;;;;;;IASD,MAAM,CACJ,iBAAyB,EACzB,mBAA2B,EAC3B,UAAiC,EACjC,OAA8C;QAE9C,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,iBAAiB,EAAE,mBAAmB,EAAE,UAAU,EAAE,OAAO,EAAE,EAC/D,mBAAmB,CACpB,CAAC;KACH;;;;;;;IAQD,MAAM,CACJ,iBAAyB,EACzB,mBAA2B,EAC3B,OAA8C;QAE9C,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,iBAAiB,EAAE,mBAAmB,EAAE,OAAO,EAAE,EACnD,mBAAmB,CACpB,CAAC;KACH;;;;;;;IAQD,GAAG,CACD,iBAAyB,EACzB,mBAA2B,EAC3B,OAA2C;QAE3C,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,iBAAiB,EAAE,mBAAmB,EAAE,OAAO,EAAE,EACnD,gBAAgB,CACjB,CAAC;KACH;;;;;IAMO,mBAAmB,CACzB,OAA0D;QAE1D,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,OAAO,EAAE,EACX,+BAA+B,CAChC,CAAC;KACH;;;;;;IAOO,KAAK,CACX,iBAAyB,EACzB,OAA4C;QAE5C,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,iBAAiB,EAAE,OAAO,EAAE,EAC9BQ,mBAAiB,CAClB,CAAC;KACH;;;;;;;;IASO,mBAAmB,CACzB,iBAAyB,EACzB,mBAA2B,EAC3B,OAA0D;QAE1D,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,iBAAiB,EAAE,mBAAmB,EAAE,OAAO,EAAE,EACnD,+BAA+B,CAChC,CAAC;KACH;;;;;;IAOO,uBAAuB,CAC7B,QAAgB,EAChB,OAA8D;QAE9D,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,QAAQ,EAAE,OAAO,EAAE,EACrB,mCAAmC,CACpC,CAAC;KACH;;;;;;;IAQO,SAAS,CACf,iBAAyB,EACzB,QAAgB,EAChB,OAAgD;QAEhD,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,iBAAiB,EAAE,QAAQ,EAAE,OAAO,EAAE,EACxC,qBAAqB,CACtB,CAAC;KACH;CACF;AACD;AACA,MAAMC,YAAU,GAAGP,2BAA2B,CAAC,OAAO,cAAc,KAAK,CAAC,CAAC;AAE3E,MAAM,2BAA2B,GAA6B;IAC5D,IAAI,EACF,uIAAuI;IACzI,UAAU,EAAE,KAAK;IACjB,SAAS,EAAE;QACT,GAAG,EAAE;YACH,UAAU,EAAEQ,eAAuB;SACpC;QACD,OAAO,EAAE;YACP,UAAU,EAAEN,UAAkB;SAC/B;KACF;IACD,WAAW,EAAEO,UAAqB;IAClC,eAAe,EAAE,CAACN,UAAqB,CAAC;IACxC,aAAa,EAAE;QACbC,KAAgB;QAChBM,iBAA4B;QAC5BC,mBAA8B;QAC9BC,cAAyB;KAC1B;IACD,gBAAgB,EAAE,CAACP,MAAiB,EAAEQ,WAAsB,CAAC;IAC7D,SAAS,EAAE,MAAM;gBACjBN,YAAU;CACX,CAAC;AACF,MAAM,mBAAmB,GAA6B;IACpD,IAAI,EACF,uIAAuI;IACzI,UAAU,EAAE,OAAO;IACnB,SAAS,EAAE;QACT,GAAG,EAAE;YACH,UAAU,EAAEC,eAAuB;SACpC;QACD,OAAO,EAAE;YACP,UAAU,EAAEN,UAAkB;SAC/B;KACF;IACD,WAAW,EAAEY,WAAsB;IACnC,eAAe,EAAE,CAACX,UAAqB,CAAC;IACxC,aAAa,EAAE;QACbC,KAAgB;QAChBM,iBAA4B;QAC5BC,mBAA8B;QAC9BC,cAAyB;KAC1B;IACD,gBAAgB,EAAE,CAACP,MAAiB,EAAEQ,WAAsB,CAAC;IAC7D,SAAS,EAAE,MAAM;gBACjBN,YAAU;CACX,CAAC;AACF,MAAM,mBAAmB,GAA6B;IACpD,IAAI,EACF,uIAAuI;IACzI,UAAU,EAAE,QAAQ;IACpB,SAAS,EAAE;QACT,GAAG,EAAE,EAAE;QACP,GAAG,EAAE,EAAE;QACP,OAAO,EAAE;YACP,UAAU,EAAEL,UAAkB;SAC/B;KACF;IACD,eAAe,EAAE,CAACC,UAAqB,CAAC;IACxC,aAAa,EAAE;QACbC,KAAgB;QAChBM,iBAA4B;QAC5BC,mBAA8B;QAC9BC,cAAyB;KAC1B;IACD,gBAAgB,EAAE,CAACP,MAAiB,CAAC;gBACrCE,YAAU;CACX,CAAC;AACF,MAAM,gBAAgB,GAA6B;IACjD,IAAI,EACF,uIAAuI;IACzI,UAAU,EAAE,KAAK;IACjB,SAAS,EAAE;QACT,GAAG,EAAE;YACH,UAAU,EAAEC,eAAuB;SACpC;QACD,OAAO,EAAE;YACP,UAAU,EAAEN,UAAkB;SAC/B;KACF;IACD,eAAe,EAAE,CAACC,UAAqB,CAAC;IACxC,aAAa,EAAE;QACbC,KAAgB;QAChBM,iBAA4B;QAC5BC,mBAA8B;QAC9BC,cAAyB;KAC1B;IACD,gBAAgB,EAAE,CAACP,MAAiB,CAAC;gBACrCE,YAAU;CACX,CAAC;AACF,MAAM,+BAA+B,GAA6B;IAChE,IAAI,EACF,8EAA8E;IAChF,UAAU,EAAE,KAAK;IACjB,SAAS,EAAE;QACT,GAAG,EAAE;YACH,UAAU,EAAEQ,yBAAiC;SAC9C;QACD,OAAO,EAAE;YACP,UAAU,EAAEb,UAAkB;SAC/B;KACF;IACD,eAAe,EAAE,CAACC,UAAqB,EAAEa,MAAiB,CAAC;IAC3D,aAAa,EAAE,CAACZ,KAAgB,EAAEQ,cAAyB,CAAC;IAC5D,gBAAgB,EAAE,CAACP,MAAiB,CAAC;gBACrCE,YAAU;CACX,CAAC;AACF,MAAMD,mBAAiB,GAA6B;IAClD,IAAI,EACF,iHAAiH;IACnH,UAAU,EAAE,KAAK;IACjB,SAAS,EAAE;QACT,GAAG,EAAE;YACH,UAAU,EAAES,yBAAiC;SAC9C;QACD,OAAO,EAAE;YACP,UAAU,EAAEb,UAAkB;SAC/B;KACF;IACD,eAAe,EAAE,CAACC,UAAqB,CAAC;IACxC,aAAa,EAAE;QACbC,KAAgB;QAChBM,iBAA4B;QAC5BE,cAAyB;KAC1B;IACD,gBAAgB,EAAE,CAACP,MAAiB,CAAC;gBACrCE,YAAU;CACX,CAAC;AACF,MAAM,+BAA+B,GAA6B;IAChE,IAAI,EACF,+IAA+I;IACjJ,UAAU,EAAE,KAAK;IACjB,SAAS,EAAE;QACT,GAAG,EAAE;YACH,UAAU,EAAEU,4BAAoC;SACjD;QACD,OAAO,EAAE;YACP,UAAU,EAAEf,UAAkB;SAC/B;KACF;IACD,eAAe,EAAE,CAACC,UAAqB,CAAC;IACxC,aAAa,EAAE;QACbC,KAAgB;QAChBM,iBAA4B;QAC5BC,mBAA8B;QAC9BC,cAAyB;KAC1B;IACD,gBAAgB,EAAE,CAACP,MAAiB,CAAC;gBACrCE,YAAU;CACX,CAAC;AACF,MAAM,mCAAmC,GAA6B;IACpE,IAAI,EAAE,YAAY;IAClB,UAAU,EAAE,KAAK;IACjB,SAAS,EAAE;QACT,GAAG,EAAE;YACH,UAAU,EAAEQ,yBAAiC;SAC9C;QACD,OAAO,EAAE;YACP,UAAU,EAAEb,UAAkB;SAC/B;KACF;IACD,eAAe,EAAE,CAACC,UAAqB,EAAEa,MAAiB,CAAC;IAC3D,aAAa,EAAE;QACbZ,KAAgB;QAChBQ,cAAyB;QACzBM,QAAmB;KACpB;IACD,gBAAgB,EAAE,CAACb,MAAiB,CAAC;gBACrCE,YAAU;CACX,CAAC;AACF,MAAM,qBAAqB,GAA6B;IACtD,IAAI,EAAE,YAAY;IAClB,UAAU,EAAE,KAAK;IACjB,SAAS,EAAE;QACT,GAAG,EAAE;YACH,UAAU,EAAEQ,yBAAiC;SAC9C;QACD,OAAO,EAAE;YACP,UAAU,EAAEb,UAAkB;SAC/B;KACF;IACD,eAAe,EAAE,CAACC,UAAqB,CAAC;IACxC,aAAa,EAAE;QACbC,KAAgB;QAChBM,iBAA4B;QAC5BE,cAAyB;QACzBM,QAAmB;KACpB;IACD,gBAAgB,EAAE,CAACb,MAAiB,CAAC;gBACrCE,YAAU;CACX,CAAC;;ACniBF;;;;;;;AAkCA;AACA;AACA,MAAa,4BAA4B;;;;;IAOvC,YAAY,MAA+B;QACzC,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;KACtB;;;;;IAMM,kBAAkB,CACvB,OAAkE;QAElE,MAAM,IAAI,GAAG,IAAI,CAAC,2BAA2B,CAAC,OAAO,CAAC,CAAC;QACvD,OAAO;YACL,IAAI;gBACF,OAAO,IAAI,CAAC,IAAI,EAAE,CAAC;aACpB;YACD,CAAC,MAAM,CAAC,aAAa,CAAC;gBACpB,OAAO,IAAI,CAAC;aACb;YACD,MAAM,EAAE;gBACN,OAAO,IAAI,CAAC,4BAA4B,CAAC,OAAO,CAAC,CAAC;aACnD;SACF,CAAC;KACH;IAEc,4BAA4B,CACzC,OAAkE;;YAElE,IAAI,MAAM,GAAG,oBAAM,IAAI,CAAC,mBAAmB,CAAC,OAAO,CAAC,CAAA,CAAC;YACrD,0BAAM,MAAM,CAAC,KAAK,IAAI,EAAE,CAAA,CAAC;YACzB,IAAI,iBAAiB,GAAG,MAAM,CAAC,QAAQ,CAAC;YACxC,OAAO,iBAAiB,EAAE;gBACxB,MAAM,GAAG,oBAAM,IAAI,CAAC,uBAAuB,CAAC,iBAAiB,EAAE,OAAO,CAAC,CAAA,CAAC;gBACxE,iBAAiB,GAAG,MAAM,CAAC,QAAQ,CAAC;gBACpC,0BAAM,MAAM,CAAC,KAAK,IAAI,EAAE,CAAA,CAAC;aAC1B;SACF;KAAA;IAEc,2BAA2B,CACxC,OAAkE;;;;gBAElE,KAAyB,IAAA,KAAAT,oBAAA,IAAI,CAAC,4BAA4B,CAAC,OAAO,CAAC,CAAA,IAAA;oBAAxD,MAAM,IAAI,WAAA,CAAA;oBACnB,oBAAA,OAAOC,uBAAAD,oBAAA,IAAI,CAAA,CAAA,CAAA,CAAC;iBACb;;;;;;;;;SACF;KAAA;;;;;;IAOM,mBAAmB,CACxB,iBAAyB,EACzB,OAAmE;QAEnE,MAAM,IAAI,GAAG,IAAI,CAAC,4BAA4B,CAAC,iBAAiB,EAAE,OAAO,CAAC,CAAC;QAC3E,OAAO;YACL,IAAI;gBACF,OAAO,IAAI,CAAC,IAAI,EAAE,CAAC;aACpB;YACD,CAAC,MAAM,CAAC,aAAa,CAAC;gBACpB,OAAO,IAAI,CAAC;aACb;YACD,MAAM,EAAE;gBACN,OAAO,IAAI,CAAC,6BAA6B,CAAC,iBAAiB,EAAE,OAAO,CAAC,CAAC;aACvE;SACF,CAAC;KACH;IAEc,6BAA6B,CAC1C,iBAAyB,EACzB,OAAmE;;YAEnE,IAAI,MAAM,GAAG,oBAAM,IAAI,CAAC,oBAAoB,CAAC,iBAAiB,EAAE,OAAO,CAAC,CAAA,CAAC;YACzE,0BAAM,MAAM,CAAC,KAAK,IAAI,EAAE,CAAA,CAAC;YACzB,IAAI,iBAAiB,GAAG,MAAM,CAAC,QAAQ,CAAC;YACxC,OAAO,iBAAiB,EAAE;gBACxB,MAAM,GAAG,oBAAM,IAAI,CAAC,wBAAwB,CAC1C,iBAAiB,EACjB,iBAAiB,EACjB,OAAO,CACR,CAAA,CAAC;gBACF,iBAAiB,GAAG,MAAM,CAAC,QAAQ,CAAC;gBACpC,0BAAM,MAAM,CAAC,KAAK,IAAI,EAAE,CAAA,CAAC;aAC1B;SACF;KAAA;IAEc,4BAA4B,CACzC,iBAAyB,EACzB,OAAmE;;;;gBAEnE,KAAyB,IAAA,KAAAA,oBAAA,IAAI,CAAC,6BAA6B,CACzD,iBAAiB,EACjB,OAAO,CACR,CAAA,IAAA;oBAHU,MAAM,IAAI,WAAA,CAAA;oBAInB,oBAAA,OAAOC,uBAAAD,oBAAA,IAAI,CAAA,CAAA,CAAA,CAAC;iBACb;;;;;;;;;SACF;KAAA;;;;;;;;IASD,cAAc,CACZ,iBAAyB,EACzB,2BAAmC,EACnC,UAAmC,EACnC,OAA8D;QAE9D,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,iBAAiB,EAAE,2BAA2B,EAAE,UAAU,EAAE,OAAO,EAAE,EACvEqB,6BAA2B,CAC5B,CAAC;KACH;;;;;;;;IASD,MAAM,CACJ,iBAAyB,EACzB,2BAAmC,EACnC,UAAyC,EACzC,OAAsD;QAEtD,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,iBAAiB,EAAE,2BAA2B,EAAE,UAAU,EAAE,OAAO,EAAE,EACvEC,qBAAmB,CACpB,CAAC;KACH;;;;;;;IAQD,MAAM,CACJ,iBAAyB,EACzB,2BAAmC,EACnC,OAAsD;QAEtD,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,iBAAiB,EAAE,2BAA2B,EAAE,OAAO,EAAE,EAC3DC,qBAAmB,CACpB,CAAC;KACH;;;;;;;IAQD,GAAG,CACD,iBAAyB,EACzB,2BAAmC,EACnC,OAAmD;QAEnD,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,iBAAiB,EAAE,2BAA2B,EAAE,OAAO,EAAE,EAC3DC,kBAAgB,CACjB,CAAC;KACH;;;;;IAMO,mBAAmB,CACzB,OAAkE;QAElE,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,OAAO,EAAE,EACXC,iCAA+B,CAChC,CAAC;KACH;;;;;;IAOO,oBAAoB,CAC1B,iBAAyB,EACzB,OAAmE;QAEnE,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,iBAAiB,EAAE,OAAO,EAAE,EAC9B,gCAAgC,CACjC,CAAC;KACH;;;;;;IAOO,uBAAuB,CAC7B,QAAgB,EAChB,OAAsE;QAEtE,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,QAAQ,EAAE,OAAO,EAAE,EACrBC,qCAAmC,CACpC,CAAC;KACH;;;;;;;IAQO,wBAAwB,CAC9B,iBAAyB,EACzB,QAAgB,EAChB,OAAuE;QAEvE,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,iBAAiB,EAAE,QAAQ,EAAE,OAAO,EAAE,EACxC,oCAAoC,CACrC,CAAC;KACH;CACF;AACD;AACA,MAAMjB,YAAU,GAAGP,2BAA2B,CAAC,OAAO,cAAc,KAAK,CAAC,CAAC;AAE3E,MAAMmB,6BAA2B,GAA6B;IAC5D,IAAI,EACF,uJAAuJ;IACzJ,UAAU,EAAE,KAAK;IACjB,SAAS,EAAE;QACT,GAAG,EAAE;YACH,UAAU,EAAEM,uBAA+B;SAC5C;QACD,GAAG,EAAE;YACH,UAAU,EAAEA,uBAA+B;SAC5C;QACD,OAAO,EAAE;YACP,UAAU,EAAEvB,UAAkB;SAC/B;KACF;IACD,WAAW,EAAEwB,WAAsB;IACnC,eAAe,EAAE,CAACvB,UAAqB,CAAC;IACxC,aAAa,EAAE;QACbC,KAAgB;QAChBM,iBAA4B;QAC5BE,cAAyB;QACzBe,2BAAsC;KACvC;IACD,gBAAgB,EAAE,CAACtB,MAAiB,EAAEQ,WAAsB,CAAC;IAC7D,SAAS,EAAE,MAAM;gBACjBN,YAAU;CACX,CAAC;AACF,MAAMa,qBAAmB,GAA6B;IACpD,IAAI,EACF,uJAAuJ;IACzJ,UAAU,EAAE,OAAO;IACnB,SAAS,EAAE;QACT,GAAG,EAAE;YACH,UAAU,EAAEK,uBAA+B;SAC5C;QACD,OAAO,EAAE;YACP,UAAU,EAAEvB,UAAkB;SAC/B;KACF;IACD,WAAW,EAAE0B,WAAsB;IACnC,eAAe,EAAE,CAACzB,UAAqB,CAAC;IACxC,aAAa,EAAE;QACbC,KAAgB;QAChBM,iBAA4B;QAC5BE,cAAyB;QACzBe,2BAAsC;KACvC;IACD,gBAAgB,EAAE,CAACtB,MAAiB,EAAEQ,WAAsB,CAAC;IAC7D,SAAS,EAAE,MAAM;gBACjBN,YAAU;CACX,CAAC;AACF,MAAMc,qBAAmB,GAA6B;IACpD,IAAI,EACF,uJAAuJ;IACzJ,UAAU,EAAE,QAAQ;IACpB,SAAS,EAAE;QACT,GAAG,EAAE,EAAE;QACP,OAAO,EAAE;YACP,UAAU,EAAEnB,UAAkB;SAC/B;KACF;IACD,eAAe,EAAE,CAACC,UAAqB,CAAC;IACxC,aAAa,EAAE;QACbC,KAAgB;QAChBM,iBAA4B;QAC5BE,cAAyB;QACzBe,2BAAsC;KACvC;IACD,gBAAgB,EAAE,CAACtB,MAAiB,CAAC;gBACrCE,YAAU;CACX,CAAC;AACF,MAAMe,kBAAgB,GAA6B;IACjD,IAAI,EACF,uJAAuJ;IACzJ,UAAU,EAAE,KAAK;IACjB,SAAS,EAAE;QACT,GAAG,EAAE;YACH,UAAU,EAAEG,uBAA+B;SAC5C;QACD,OAAO,EAAE;YACP,UAAU,EAAEvB,UAAkB;SAC/B;KACF;IACD,eAAe,EAAE,CAACC,UAAqB,EAAE0B,uBAAkC,CAAC;IAC5E,aAAa,EAAE;QACbzB,KAAgB;QAChBM,iBAA4B;QAC5BE,cAAyB;QACzBe,2BAAsC;KACvC;IACD,gBAAgB,EAAE,CAACtB,MAAiB,CAAC;gBACrCE,YAAU;CACX,CAAC;AACF,MAAMgB,iCAA+B,GAA6B;IAChE,IAAI,EACF,sFAAsF;IACxF,UAAU,EAAE,KAAK;IACjB,SAAS,EAAE;QACT,GAAG,EAAE;YACH,UAAU,EAAEO,iCAAyC;SACtD;QACD,OAAO,EAAE;YACP,UAAU,EAAE5B,UAAkB;SAC/B;KACF;IACD,eAAe,EAAE,CAACC,UAAqB,CAAC;IACxC,aAAa,EAAE,CAACC,KAAgB,EAAEQ,cAAyB,CAAC;IAC5D,gBAAgB,EAAE,CAACP,MAAiB,CAAC;gBACrCE,YAAU;CACX,CAAC;AACF,MAAM,gCAAgC,GAA6B;IACjE,IAAI,EACF,yHAAyH;IAC3H,UAAU,EAAE,KAAK;IACjB,SAAS,EAAE;QACT,GAAG,EAAE;YACH,UAAU,EAAEuB,iCAAyC;SACtD;QACD,OAAO,EAAE;YACP,UAAU,EAAE5B,UAAkB;SAC/B;KACF;IACD,eAAe,EAAE,CAACC,UAAqB,CAAC;IACxC,aAAa,EAAE;QACbC,KAAgB;QAChBM,iBAA4B;QAC5BE,cAAyB;KAC1B;IACD,gBAAgB,EAAE,CAACP,MAAiB,CAAC;gBACrCE,YAAU;CACX,CAAC;AACF,MAAMiB,qCAAmC,GAA6B;IACpE,IAAI,EAAE,YAAY;IAClB,UAAU,EAAE,KAAK;IACjB,SAAS,EAAE;QACT,GAAG,EAAE;YACH,UAAU,EAAEM,iCAAyC;SACtD;QACD,OAAO,EAAE;YACP,UAAU,EAAE5B,UAAkB;SAC/B;KACF;IACD,eAAe,EAAE,CAACC,UAAqB,CAAC;IACxC,aAAa,EAAE;QACbC,KAAgB;QAChBQ,cAAyB;QACzBM,QAAmB;KACpB;IACD,gBAAgB,EAAE,CAACb,MAAiB,CAAC;gBACrCE,YAAU;CACX,CAAC;AACF,MAAM,oCAAoC,GAA6B;IACrE,IAAI,EAAE,YAAY;IAClB,UAAU,EAAE,KAAK;IACjB,SAAS,EAAE;QACT,GAAG,EAAE;YACH,UAAU,EAAEuB,iCAAyC;SACtD;QACD,OAAO,EAAE;YACP,UAAU,EAAE5B,UAAkB;SAC/B;KACF;IACD,eAAe,EAAE,CAACC,UAAqB,CAAC;IACxC,aAAa,EAAE;QACbC,KAAgB;QAChBM,iBAA4B;QAC5BE,cAAyB;QACzBM,QAAmB;KACpB;IACD,gBAAgB,EAAE,CAACb,MAAiB,CAAC;gBACrCE,YAAU;CACX,CAAC;;AChcF;;;;;;;AAkCA;AACA;AACA,MAAa,uBAAuB;;;;;IAOlC,YAAY,MAA+B;QACzC,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;KACtB;;;;;;;IAQM,mBAAmB,CACxB,iBAAyB,EACzB,OAA8D;QAE9D,MAAM,IAAI,GAAG,IAAI,CAAC,4BAA4B,CAAC,iBAAiB,EAAE,OAAO,CAAC,CAAC;QAC3E,OAAO;YACL,IAAI;gBACF,OAAO,IAAI,CAAC,IAAI,EAAE,CAAC;aACpB;YACD,CAAC,MAAM,CAAC,aAAa,CAAC;gBACpB,OAAO,IAAI,CAAC;aACb;YACD,MAAM,EAAE;gBACN,OAAO,IAAI,CAAC,6BAA6B,CAAC,iBAAiB,EAAE,OAAO,CAAC,CAAC;aACvE;SACF,CAAC;KACH;IAEc,6BAA6B,CAC1C,iBAAyB,EACzB,OAA8D;;YAE9D,IAAI,MAAM,GAAG,oBAAM,IAAI,CAAC,oBAAoB,CAAC,iBAAiB,EAAE,OAAO,CAAC,CAAA,CAAC;YACzE,0BAAM,MAAM,CAAC,KAAK,IAAI,EAAE,CAAA,CAAC;YACzB,IAAI,iBAAiB,GAAG,MAAM,CAAC,QAAQ,CAAC;YACxC,OAAO,iBAAiB,EAAE;gBACxB,MAAM,GAAG,oBAAM,IAAI,CAAC,wBAAwB,CAC1C,iBAAiB,EACjB,iBAAiB,EACjB,OAAO,CACR,CAAA,CAAC;gBACF,iBAAiB,GAAG,MAAM,CAAC,QAAQ,CAAC;gBACpC,0BAAM,MAAM,CAAC,KAAK,IAAI,EAAE,CAAA,CAAC;aAC1B;SACF;KAAA;IAEc,4BAA4B,CACzC,iBAAyB,EACzB,OAA8D;;;;gBAE9D,KAAyB,IAAA,KAAAT,oBAAA,IAAI,CAAC,6BAA6B,CACzD,iBAAiB,EACjB,OAAO,CACR,CAAA,IAAA;oBAHU,MAAM,IAAI,WAAA,CAAA;oBAInB,oBAAA,OAAOC,uBAAAD,oBAAA,IAAI,CAAA,CAAA,CAAA,CAAC;iBACb;;;;;;;;;SACF;KAAA;;;;;;IAOM,kBAAkB,CACvB,OAA6D;QAE7D,MAAM,IAAI,GAAG,IAAI,CAAC,2BAA2B,CAAC,OAAO,CAAC,CAAC;QACvD,OAAO;YACL,IAAI;gBACF,OAAO,IAAI,CAAC,IAAI,EAAE,CAAC;aACpB;YACD,CAAC,MAAM,CAAC,aAAa,CAAC;gBACpB,OAAO,IAAI,CAAC;aACb;YACD,MAAM,EAAE;gBACN,OAAO,IAAI,CAAC,4BAA4B,CAAC,OAAO,CAAC,CAAC;aACnD;SACF,CAAC;KACH;IAEc,4BAA4B,CACzC,OAA6D;;YAE7D,IAAI,MAAM,GAAG,oBAAM,IAAI,CAAC,mBAAmB,CAAC,OAAO,CAAC,CAAA,CAAC;YACrD,0BAAM,MAAM,CAAC,KAAK,IAAI,EAAE,CAAA,CAAC;YACzB,IAAI,iBAAiB,GAAG,MAAM,CAAC,QAAQ,CAAC;YACxC,OAAO,iBAAiB,EAAE;gBACxB,MAAM,GAAG,oBAAM,IAAI,CAAC,uBAAuB,CAAC,iBAAiB,EAAE,OAAO,CAAC,CAAA,CAAC;gBACxE,iBAAiB,GAAG,MAAM,CAAC,QAAQ,CAAC;gBACpC,0BAAM,MAAM,CAAC,KAAK,IAAI,EAAE,CAAA,CAAC;aAC1B;SACF;KAAA;IAEc,2BAA2B,CACxC,OAA6D;;;;gBAE7D,KAAyB,IAAA,KAAAA,oBAAA,IAAI,CAAC,4BAA4B,CAAC,OAAO,CAAC,CAAA,IAAA;oBAAxD,MAAM,IAAI,WAAA,CAAA;oBACnB,oBAAA,OAAOC,uBAAAD,oBAAA,IAAI,CAAA,CAAA,CAAA,CAAC;iBACb;;;;;;;;;SACF;KAAA;;;;;;;;;IAUD,cAAc,CACZ,iBAAyB,EACzB,aAAqB,EACrB,UAA8B,EAC9B,OAAyD;QAEzD,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,iBAAiB,EAAE,aAAa,EAAE,UAAU,EAAE,OAAO,EAAE,EACzDqB,6BAA2B,CAC5B,CAAC;KACH;;;;;;;;IASD,MAAM,CACJ,iBAAyB,EACzB,aAAqB,EACrB,UAAoC,EACpC,OAAiD;QAEjD,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,iBAAiB,EAAE,aAAa,EAAE,UAAU,EAAE,OAAO,EAAE,EACzDC,qBAAmB,CACpB,CAAC;KACH;;;;;;;IAQD,MAAM,CACJ,iBAAyB,EACzB,aAAqB,EACrB,OAAiD;QAEjD,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,iBAAiB,EAAE,aAAa,EAAE,OAAO,EAAE,EAC7CC,qBAAmB,CACpB,CAAC;KACH;;;;;;;IAQD,GAAG,CACD,iBAAyB,EACzB,aAAqB,EACrB,OAA8C;QAE9C,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,iBAAiB,EAAE,aAAa,EAAE,OAAO,EAAE,EAC7CC,kBAAgB,CACjB,CAAC;KACH;;;;;;;IAQO,oBAAoB,CAC1B,iBAAyB,EACzB,OAA8D;QAE9D,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,iBAAiB,EAAE,OAAO,EAAE,EAC9BS,kCAAgC,CACjC,CAAC;KACH;;;;;;IAOO,mBAAmB,CACzB,OAA6D;QAE7D,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,OAAO,EAAE,EACXR,iCAA+B,CAChC,CAAC;KACH;;;;;;;IAQO,wBAAwB,CAC9B,iBAAyB,EACzB,QAAgB,EAChB,OAAkE;QAElE,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,iBAAiB,EAAE,QAAQ,EAAE,OAAO,EAAE,EACxCS,sCAAoC,CACrC,CAAC;KACH;;;;;;IAOO,uBAAuB,CAC7B,QAAgB,EAChB,OAAiE;QAEjE,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,QAAQ,EAAE,OAAO,EAAE,EACrBR,qCAAmC,CACpC,CAAC;KACH;CACF;AACD;AACA,MAAMjB,YAAU,GAAGP,2BAA2B,CAAC,OAAO,cAAc,KAAK,CAAC,CAAC;AAE3E,MAAMmB,6BAA2B,GAA6B;IAC5D,IAAI,EACF,2HAA2H;IAC7H,UAAU,EAAE,KAAK;IACjB,SAAS,EAAE;QACT,GAAG,EAAE;YACH,UAAU,EAAEc,kBAA0B;SACvC;QACD,GAAG,EAAE;YACH,UAAU,EAAEA,kBAA0B;SACvC;QACD,OAAO,EAAE;YACP,UAAU,EAAE/B,UAAkB;SAC/B;KACF;IACD,WAAW,EAAEgC,WAAsB;IACnC,eAAe,EAAE,CAAC/B,UAAqB,CAAC;IACxC,aAAa,EAAE;QACbC,KAAgB;QAChBM,iBAA4B;QAC5BE,cAAyB;QACzBuB,aAAwB;KACzB;IACD,gBAAgB,EAAE,CAAC9B,MAAiB,EAAEQ,WAAsB,CAAC;IAC7D,SAAS,EAAE,MAAM;gBACjBN,YAAU;CACX,CAAC;AACF,MAAMa,qBAAmB,GAA6B;IACpD,IAAI,EACF,2HAA2H;IAC7H,UAAU,EAAE,OAAO;IACnB,SAAS,EAAE;QACT,GAAG,EAAE;YACH,UAAU,EAAEa,kBAA0B;SACvC;QACD,OAAO,EAAE;YACP,UAAU,EAAE/B,UAAkB;SAC/B;KACF;IACD,WAAW,EAAEkC,WAAsB;IACnC,eAAe,EAAE,CAACjC,UAAqB,CAAC;IACxC,aAAa,EAAE;QACbC,KAAgB;QAChBM,iBAA4B;QAC5BE,cAAyB;QACzBuB,aAAwB;KACzB;IACD,gBAAgB,EAAE,CAAC9B,MAAiB,EAAEQ,WAAsB,CAAC;IAC7D,SAAS,EAAE,MAAM;gBACjBN,YAAU;CACX,CAAC;AACF,MAAMc,qBAAmB,GAA6B;IACpD,IAAI,EACF,2HAA2H;IAC7H,UAAU,EAAE,QAAQ;IACpB,SAAS,EAAE;QACT,GAAG,EAAE,EAAE;QACP,GAAG,EAAE,EAAE;QACP,OAAO,EAAE;YACP,UAAU,EAAEnB,UAAkB;SAC/B;KACF;IACD,eAAe,EAAE,CAACC,UAAqB,CAAC;IACxC,aAAa,EAAE;QACbC,KAAgB;QAChBM,iBAA4B;QAC5BE,cAAyB;QACzBuB,aAAwB;KACzB;IACD,gBAAgB,EAAE,CAAC9B,MAAiB,CAAC;gBACrCE,YAAU;CACX,CAAC;AACF,MAAMe,kBAAgB,GAA6B;IACjD,IAAI,EACF,2HAA2H;IAC7H,UAAU,EAAE,KAAK;IACjB,SAAS,EAAE;QACT,GAAG,EAAE;YACH,UAAU,EAAEW,kBAA0B;SACvC;QACD,OAAO,EAAE;YACP,UAAU,EAAE/B,UAAkB;SAC/B;KACF;IACD,eAAe,EAAE,CAACC,UAAqB,EAAEkC,OAAkB,CAAC;IAC5D,aAAa,EAAE;QACbjC,KAAgB;QAChBM,iBAA4B;QAC5BE,cAAyB;QACzBuB,aAAwB;KACzB;IACD,gBAAgB,EAAE,CAAC9B,MAAiB,CAAC;gBACrCE,YAAU;CACX,CAAC;AACF,MAAMwB,kCAAgC,GAA6B;IACjE,IAAI,EACF,2GAA2G;IAC7G,UAAU,EAAE,KAAK;IACjB,SAAS,EAAE;QACT,GAAG,EAAE;YACH,UAAU,EAAEO,4BAAoC;SACjD;QACD,OAAO,EAAE;YACP,UAAU,EAAEpC,UAAkB;SAC/B;KACF;IACD,eAAe,EAAE,CAACC,UAAqB,CAAC;IACxC,aAAa,EAAE;QACbC,KAAgB;QAChBM,iBAA4B;QAC5BE,cAAyB;KAC1B;IACD,gBAAgB,EAAE,CAACP,MAAiB,CAAC;gBACrCE,YAAU;CACX,CAAC;AACF,MAAMgB,iCAA+B,GAA6B;IAChE,IAAI,EACF,wEAAwE;IAC1E,UAAU,EAAE,KAAK;IACjB,SAAS,EAAE;QACT,GAAG,EAAE;YACH,UAAU,EAAEe,4BAAoC;SACjD;QACD,OAAO,EAAE;YACP,UAAU,EAAEpC,UAAkB;SAC/B;KACF;IACD,eAAe,EAAE,CAACC,UAAqB,CAAC;IACxC,aAAa,EAAE,CAACC,KAAgB,EAAEQ,cAAyB,CAAC;IAC5D,gBAAgB,EAAE,CAACP,MAAiB,CAAC;gBACrCE,YAAU;CACX,CAAC;AACF,MAAMyB,sCAAoC,GAA6B;IACrE,IAAI,EAAE,YAAY;IAClB,UAAU,EAAE,KAAK;IACjB,SAAS,EAAE;QACT,GAAG,EAAE;YACH,UAAU,EAAEM,4BAAoC;SACjD;QACD,OAAO,EAAE;YACP,UAAU,EAAEpC,UAAkB;SAC/B;KACF;IACD,eAAe,EAAE,CAACC,UAAqB,CAAC;IACxC,aAAa,EAAE;QACbC,KAAgB;QAChBM,iBAA4B;QAC5BE,cAAyB;QACzBM,QAAmB;KACpB;IACD,gBAAgB,EAAE,CAACb,MAAiB,CAAC;gBACrCE,YAAU;CACX,CAAC;AACF,MAAMiB,qCAAmC,GAA6B;IACpE,IAAI,EAAE,YAAY;IAClB,UAAU,EAAE,KAAK;IACjB,SAAS,EAAE;QACT,GAAG,EAAE;YACH,UAAU,EAAEc,4BAAoC;SACjD;QACD,OAAO,EAAE;YACP,UAAU,EAAEpC,UAAkB;SAC/B;KACF;IACD,eAAe,EAAE,CAACC,UAAqB,CAAC;IACxC,aAAa,EAAE;QACbC,KAAgB;QAChBQ,cAAyB;QACzBM,QAAmB;KACpB;IACD,gBAAgB,EAAE,CAACb,MAAiB,CAAC;gBACrCE,YAAU;CACX,CAAC;;ACtcF;;;;;;;MAUa,OAAO;IAClB,YACU,eAAkE,EAClE,IAA6B,EAC7B,IAIe,EAChB,cAAsB,IAAI,CAAC,IAAK,EAChC,gBAAwB,IAAI,CAAC,UAAU;QARtC,oBAAe,GAAf,eAAe,CAAmD;QAClE,SAAI,GAAJ,IAAI,CAAyB;QAC7B,SAAI,GAAJ,IAAI,CAIW;QAChB,gBAAW,GAAX,WAAW,CAAqB;QAChC,kBAAa,GAAb,aAAa,CAA0B;KAC5C;IACS,kBAAkB;;YAC7B,OAAO,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,IAAI,CAAC,CAAC;SACnD;KAAA;IACY,eAAe,CAAC,IAAY;;YACvC,MAAM,KAA+B,IAAI,CAAC,IAAI,EAAxC,AAAkB,QAAQ,oBAA1B,eAA4B,CAAY,CAAC;YAC/C,OAAO,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,IAAI,kCAChC,QAAQ,KACX,IAAI,EACJ,UAAU,EAAE,KAAK,IACjB,CAAC;SACJ;KAAA;CACF;;ACjCD;;;;;;;AAiCA;AACA;AACA,MAAa,kBAAkB;;;;;IAO7B,YAAY,MAA+B;QACzC,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;KACtB;;;;;;;;IASM,eAAe,CACpB,iBAAyB,EACzB,aAAqB,EACrB,OAAqD;QAErD,MAAM,IAAI,GAAG,IAAI,CAAC,wBAAwB,CACxC,iBAAiB,EACjB,aAAa,EACb,OAAO,CACR,CAAC;QACF,OAAO;YACL,IAAI;gBACF,OAAO,IAAI,CAAC,IAAI,EAAE,CAAC;aACpB;YACD,CAAC,MAAM,CAAC,aAAa,CAAC;gBACpB,OAAO,IAAI,CAAC;aACb;YACD,MAAM,EAAE;gBACN,OAAO,IAAI,CAAC,yBAAyB,CACnC,iBAAiB,EACjB,aAAa,EACb,OAAO,CACR,CAAC;aACH;SACF,CAAC;KACH;IAEc,yBAAyB,CACtC,iBAAyB,EACzB,aAAqB,EACrB,OAAqD;;YAErD,IAAI,MAAM,GAAG,oBAAM,IAAI,CAAC,gBAAgB,CACtC,iBAAiB,EACjB,aAAa,EACb,OAAO,CACR,CAAA,CAAC;YACF,0BAAM,MAAM,CAAC,KAAK,IAAI,EAAE,CAAA,CAAC;YACzB,IAAI,iBAAiB,GAAG,MAAM,CAAC,QAAQ,CAAC;YACxC,OAAO,iBAAiB,EAAE;gBACxB,MAAM,GAAG,oBAAM,IAAI,CAAC,oBAAoB,CACtC,iBAAiB,EACjB,aAAa,EACb,iBAAiB,EACjB,OAAO,CACR,CAAA,CAAC;gBACF,iBAAiB,GAAG,MAAM,CAAC,QAAQ,CAAC;gBACpC,0BAAM,MAAM,CAAC,KAAK,IAAI,EAAE,CAAA,CAAC;aAC1B;SACF;KAAA;IAEc,wBAAwB,CACrC,iBAAyB,EACzB,aAAqB,EACrB,OAAqD;;;;gBAErD,KAAyB,IAAA,KAAAT,oBAAA,IAAI,CAAC,yBAAyB,CACrD,iBAAiB,EACjB,aAAa,EACb,OAAO,CACR,CAAA,IAAA;oBAJU,MAAM,IAAI,WAAA,CAAA;oBAKnB,oBAAA,OAAOC,uBAAAD,oBAAA,IAAI,CAAA,CAAA,CAAA,CAAC;iBACb;;;;;;;;;SACF;KAAA;;;;;;;;;IAUK,mBAAmB,CACvB,iBAAyB,EACzB,aAAqB,EACrB,QAAgB,EAChB,UAAyB,EACzB,OAAoD;;YAOpD,MAAM,mBAAmB,GAAG,CAC1B,IAAmC,EACnC,IAA8B;gBAE9B,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;aACrD,CAAA,CAAC;YACF,MAAM,aAAa,GAAG,CACpB,IAAmC,EACnC,IAA8B;;gBAE9B,IAAI,kBAAkB,GAEN,SAAS,CAAC;gBAC1B,MAAM,gBAAgB,GAAG,MAAA,IAAI,CAAC,OAAO,0CAAE,UAAU,CAAC;gBAClD,MAAM,QAAQ,GAAmC,CAC/C,WAA6C,EAC7C,YAAqB;oBAErB,kBAAkB,GAAG,WAAW,CAAC;oBACjC,gBAAgB,aAAhB,gBAAgB,uBAAhB,gBAAgB,CAAG,WAAW,EAAE,YAAY,CAAC,CAAC;iBAC/C,CAAC;gBACF,MAAM,WAAW,mCACZ,IAAI,KACP,OAAO,kCACF,IAAI,CAAC,OAAO,KACf,UAAU,EAAE,QAAQ,MAEvB,CAAC;gBACF,MAAM,YAAY,GAAG,MAAM,mBAAmB,CAAC,WAAW,EAAE,IAAI,CAAC,CAAC;gBAClE,OAAO;oBACL,YAAY;oBACZ,WAAW,EAAE;wBACX,UAAU,EAAE,kBAAmB,CAAC,MAAM;wBACtC,IAAI,EAAE,kBAAmB,CAAC,UAAU;wBACpC,OAAO,EAAE,kBAAmB,CAAC,OAAO,CAAC,MAAM,EAAE;qBAC9C;iBACF,CAAC;aACH,CAAA,CAAC;YAEF,MAAM,GAAG,GAAG,IAAI,OAAO,CACrB,aAAa,EACb,EAAE,iBAAiB,EAAE,aAAa,EAAE,QAAQ,EAAE,UAAU,EAAE,OAAO,EAAE,EACnEqB,6BAA2B,CAC5B,CAAC;YACF,OAAO,IAAIoB,iBAAS,CAAC,GAAG,EAAE;gBACxB,UAAU,EAAE,OAAO,aAAP,OAAO,uBAAP,OAAO,CAAE,UAAU;gBAC/B,YAAY,EAAE,OAAO,aAAP,OAAO,uBAAP,OAAO,CAAE,kBAAkB;aAC1C,CAAC,CAAC;SACJ;KAAA;;;;;;;;;IAUK,0BAA0B,CAC9B,iBAAyB,EACzB,aAAqB,EACrB,QAAgB,EAChB,UAAyB,EACzB,OAAoD;;YAEpD,MAAM,MAAM,GAAG,MAAM,IAAI,CAAC,mBAAmB,CAC3C,iBAAiB,EACjB,aAAa,EACb,QAAQ,EACR,UAAU,EACV,OAAO,CACR,CAAC;YACF,OAAO,MAAM,CAAC,aAAa,EAAE,CAAC;SAC/B;KAAA;;;;;;;;;IAUK,WAAW,CACf,iBAAyB,EACzB,aAAqB,EACrB,QAAgB,EAChB,UAA+B,EAC/B,OAA4C;;YAO5C,MAAM,mBAAmB,GAAG,CAC1B,IAAmC,EACnC,IAA8B;gBAE9B,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;aACrD,CAAA,CAAC;YACF,MAAM,aAAa,GAAG,CACpB,IAAmC,EACnC,IAA8B;;gBAE9B,IAAI,kBAAkB,GAEN,SAAS,CAAC;gBAC1B,MAAM,gBAAgB,GAAG,MAAA,IAAI,CAAC,OAAO,0CAAE,UAAU,CAAC;gBAClD,MAAM,QAAQ,GAAmC,CAC/C,WAA6C,EAC7C,YAAqB;oBAErB,kBAAkB,GAAG,WAAW,CAAC;oBACjC,gBAAgB,aAAhB,gBAAgB,uBAAhB,gBAAgB,CAAG,WAAW,EAAE,YAAY,CAAC,CAAC;iBAC/C,CAAC;gBACF,MAAM,WAAW,mCACZ,IAAI,KACP,OAAO,kCACF,IAAI,CAAC,OAAO,KACf,UAAU,EAAE,QAAQ,MAEvB,CAAC;gBACF,MAAM,YAAY,GAAG,MAAM,mBAAmB,CAAC,WAAW,EAAE,IAAI,CAAC,CAAC;gBAClE,OAAO;oBACL,YAAY;oBACZ,WAAW,EAAE;wBACX,UAAU,EAAE,kBAAmB,CAAC,MAAM;wBACtC,IAAI,EAAE,kBAAmB,CAAC,UAAU;wBACpC,OAAO,EAAE,kBAAmB,CAAC,OAAO,CAAC,MAAM,EAAE;qBAC9C;iBACF,CAAC;aACH,CAAA,CAAC;YAEF,MAAM,GAAG,GAAG,IAAI,OAAO,CACrB,aAAa,EACb,EAAE,iBAAiB,EAAE,aAAa,EAAE,QAAQ,EAAE,UAAU,EAAE,OAAO,EAAE,EACnEnB,qBAAmB,CACpB,CAAC;YACF,OAAO,IAAImB,iBAAS,CAAC,GAAG,EAAE;gBACxB,UAAU,EAAE,OAAO,aAAP,OAAO,uBAAP,OAAO,CAAE,UAAU;gBAC/B,YAAY,EAAE,OAAO,aAAP,OAAO,uBAAP,OAAO,CAAE,kBAAkB;aAC1C,CAAC,CAAC;SACJ;KAAA;;;;;;;;;IAUK,kBAAkB,CACtB,iBAAyB,EACzB,aAAqB,EACrB,QAAgB,EAChB,UAA+B,EAC/B,OAA4C;;YAE5C,MAAM,MAAM,GAAG,MAAM,IAAI,CAAC,WAAW,CACnC,iBAAiB,EACjB,aAAa,EACb,QAAQ,EACR,UAAU,EACV,OAAO,CACR,CAAC;YACF,OAAO,MAAM,CAAC,aAAa,EAAE,CAAC;SAC/B;KAAA;;;;;;;;IASK,WAAW,CACf,iBAAyB,EACzB,aAAqB,EACrB,QAAgB,EAChB,OAA4C;;YAE5C,MAAM,mBAAmB,GAAG,CAC1B,IAAmC,EACnC,IAA8B;gBAE9B,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;aACrD,CAAA,CAAC;YACF,MAAM,aAAa,GAAG,CACpB,IAAmC,EACnC,IAA8B;;gBAE9B,IAAI,kBAAkB,GAEN,SAAS,CAAC;gBAC1B,MAAM,gBAAgB,GAAG,MAAA,IAAI,CAAC,OAAO,0CAAE,UAAU,CAAC;gBAClD,MAAM,QAAQ,GAAmC,CAC/C,WAA6C,EAC7C,YAAqB;oBAErB,kBAAkB,GAAG,WAAW,CAAC;oBACjC,gBAAgB,aAAhB,gBAAgB,uBAAhB,gBAAgB,CAAG,WAAW,EAAE,YAAY,CAAC,CAAC;iBAC/C,CAAC;gBACF,MAAM,WAAW,mCACZ,IAAI,KACP,OAAO,kCACF,IAAI,CAAC,OAAO,KACf,UAAU,EAAE,QAAQ,MAEvB,CAAC;gBACF,MAAM,YAAY,GAAG,MAAM,mBAAmB,CAAC,WAAW,EAAE,IAAI,CAAC,CAAC;gBAClE,OAAO;oBACL,YAAY;oBACZ,WAAW,EAAE;wBACX,UAAU,EAAE,kBAAmB,CAAC,MAAM;wBACtC,IAAI,EAAE,kBAAmB,CAAC,UAAU;wBACpC,OAAO,EAAE,kBAAmB,CAAC,OAAO,CAAC,MAAM,EAAE;qBAC9C;iBACF,CAAC;aACH,CAAA,CAAC;YAEF,MAAM,GAAG,GAAG,IAAI,OAAO,CACrB,aAAa,EACb,EAAE,iBAAiB,EAAE,aAAa,EAAE,QAAQ,EAAE,OAAO,EAAE,EACvDlB,qBAAmB,CACpB,CAAC;YACF,OAAO,IAAIkB,iBAAS,CAAC,GAAG,EAAE;gBACxB,UAAU,EAAE,OAAO,aAAP,OAAO,uBAAP,OAAO,CAAE,UAAU;gBAC/B,YAAY,EAAE,OAAO,aAAP,OAAO,uBAAP,OAAO,CAAE,kBAAkB;aAC1C,CAAC,CAAC;SACJ;KAAA;;;;;;;;IASK,kBAAkB,CACtB,iBAAyB,EACzB,aAAqB,EACrB,QAAgB,EAChB,OAA4C;;YAE5C,MAAM,MAAM,GAAG,MAAM,IAAI,CAAC,WAAW,CACnC,iBAAiB,EACjB,aAAa,EACb,QAAQ,EACR,OAAO,CACR,CAAC;YACF,OAAO,MAAM,CAAC,aAAa,EAAE,CAAC;SAC/B;KAAA;;;;;;;;IASD,GAAG,CACD,iBAAyB,EACzB,aAAqB,EACrB,QAAgB,EAChB,OAAyC;QAEzC,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,iBAAiB,EAAE,aAAa,EAAE,QAAQ,EAAE,OAAO,EAAE,EACvDjB,kBAAgB,CACjB,CAAC;KACH;;;;;;;;IASO,gBAAgB,CACtB,iBAAyB,EACzB,aAAqB,EACrB,OAAqD;QAErD,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,iBAAiB,EAAE,aAAa,EAAE,OAAO,EAAE,EAC7C,4BAA4B,CAC7B,CAAC;KACH;;;;;;;;;;;IAYK,YAAY,CAChB,iBAAyB,EACzB,aAAqB,EACrB,QAAgB,EAChB,OAA6C;;YAE7C,MAAM,mBAAmB,GAAG,CAC1B,IAAmC,EACnC,IAA8B;gBAE9B,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;aACrD,CAAA,CAAC;YACF,MAAM,aAAa,GAAG,CACpB,IAAmC,EACnC,IAA8B;;gBAE9B,IAAI,kBAAkB,GAEN,SAAS,CAAC;gBAC1B,MAAM,gBAAgB,GAAG,MAAA,IAAI,CAAC,OAAO,0CAAE,UAAU,CAAC;gBAClD,MAAM,QAAQ,GAAmC,CAC/C,WAA6C,EAC7C,YAAqB;oBAErB,kBAAkB,GAAG,WAAW,CAAC;oBACjC,gBAAgB,aAAhB,gBAAgB,uBAAhB,gBAAgB,CAAG,WAAW,EAAE,YAAY,CAAC,CAAC;iBAC/C,CAAC;gBACF,MAAM,WAAW,mCACZ,IAAI,KACP,OAAO,kCACF,IAAI,CAAC,OAAO,KACf,UAAU,EAAE,QAAQ,MAEvB,CAAC;gBACF,MAAM,YAAY,GAAG,MAAM,mBAAmB,CAAC,WAAW,EAAE,IAAI,CAAC,CAAC;gBAClE,OAAO;oBACL,YAAY;oBACZ,WAAW,EAAE;wBACX,UAAU,EAAE,kBAAmB,CAAC,MAAM;wBACtC,IAAI,EAAE,kBAAmB,CAAC,UAAU;wBACpC,OAAO,EAAE,kBAAmB,CAAC,OAAO,CAAC,MAAM,EAAE;qBAC9C;iBACF,CAAC;aACH,CAAA,CAAC;YAEF,MAAM,GAAG,GAAG,IAAI,OAAO,CACrB,aAAa,EACb,EAAE,iBAAiB,EAAE,aAAa,EAAE,QAAQ,EAAE,OAAO,EAAE,EACvD,oBAAoB,CACrB,CAAC;YACF,OAAO,IAAIiB,iBAAS,CAAC,GAAG,EAAE;gBACxB,UAAU,EAAE,OAAO,aAAP,OAAO,uBAAP,OAAO,CAAE,UAAU;gBAC/B,YAAY,EAAE,OAAO,aAAP,OAAO,uBAAP,OAAO,CAAE,kBAAkB;aAC1C,CAAC,CAAC;SACJ;KAAA;;;;;;;;;;;IAYK,mBAAmB,CACvB,iBAAyB,EACzB,aAAqB,EACrB,QAAgB,EAChB,OAA6C;;YAE7C,MAAM,MAAM,GAAG,MAAM,IAAI,CAAC,YAAY,CACpC,iBAAiB,EACjB,aAAa,EACb,QAAQ,EACR,OAAO,CACR,CAAC;YACF,OAAO,MAAM,CAAC,aAAa,EAAE,CAAC;SAC/B;KAAA;;;;;;;;IASO,oBAAoB,CAC1B,iBAAyB,EACzB,aAAqB,EACrB,QAAgB,EAChB,OAAyD;QAEzD,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,iBAAiB,EAAE,aAAa,EAAE,QAAQ,EAAE,OAAO,EAAE,EACvD,gCAAgC,CACjC,CAAC;KACH;CACF;AACD;AACA,MAAMhC,YAAU,GAAGP,2BAA2B,CAAC,OAAO,cAAc,KAAK,CAAC,CAAC;AAE3E,MAAMmB,6BAA2B,GAA6B;IAC5D,IAAI,EACF,4IAA4I;IAC9I,UAAU,EAAE,KAAK;IACjB,SAAS,EAAE;QACT,GAAG,EAAE;YACH,UAAU,EAAEqB,aAAqB;SAClC;QACD,GAAG,EAAE;YACH,UAAU,EAAEA,aAAqB;SAClC;QACD,GAAG,EAAE;YACH,UAAU,EAAEA,aAAqB;SAClC;QACD,GAAG,EAAE;YACH,UAAU,EAAEA,aAAqB;SAClC;QACD,OAAO,EAAE;YACP,UAAU,EAAEtC,UAAkB;SAC/B;KACF;IACD,WAAW,EAAEuC,WAAsB;IACnC,eAAe,EAAE,CAACtC,UAAqB,CAAC;IACxC,aAAa,EAAE;QACbC,KAAgB;QAChBM,iBAA4B;QAC5BE,cAAyB;QACzBuB,aAAwB;QACxBO,QAAmB;KACpB;IACD,gBAAgB,EAAE,CAACrC,MAAiB,EAAEQ,WAAsB,CAAC;IAC7D,SAAS,EAAE,MAAM;gBACjBN,YAAU;CACX,CAAC;AACF,MAAMa,qBAAmB,GAA6B;IACpD,IAAI,EACF,4IAA4I;IAC9I,UAAU,EAAE,OAAO;IACnB,SAAS,EAAE;QACT,GAAG,EAAE;YACH,UAAU,EAAEoB,aAAqB;SAClC;QACD,GAAG,EAAE;YACH,UAAU,EAAEA,aAAqB;SAClC;QACD,GAAG,EAAE;YACH,UAAU,EAAEA,aAAqB;SAClC;QACD,GAAG,EAAE;YACH,UAAU,EAAEA,aAAqB;SAClC;QACD,OAAO,EAAE;YACP,UAAU,EAAEtC,UAAkB;SAC/B;KACF;IACD,WAAW,EAAEyC,WAAsB;IACnC,eAAe,EAAE,CAACxC,UAAqB,CAAC;IACxC,aAAa,EAAE;QACbC,KAAgB;QAChBM,iBAA4B;QAC5BE,cAAyB;QACzBuB,aAAwB;QACxBO,QAAmB;KACpB;IACD,gBAAgB,EAAE,CAACrC,MAAiB,EAAEQ,WAAsB,CAAC;IAC7D,SAAS,EAAE,MAAM;gBACjBN,YAAU;CACX,CAAC;AACF,MAAMc,qBAAmB,GAA6B;IACpD,IAAI,EACF,4IAA4I;IAC9I,UAAU,EAAE,QAAQ;IACpB,SAAS,EAAE;QACT,GAAG,EAAE,EAAE;QACP,GAAG,EAAE,EAAE;QACP,GAAG,EAAE,EAAE;QACP,GAAG,EAAE,EAAE;QACP,OAAO,EAAE;YACP,UAAU,EAAEnB,UAAkB;SAC/B;KACF;IACD,eAAe,EAAE,CAACC,UAAqB,CAAC;IACxC,aAAa,EAAE;QACbC,KAAgB;QAChBM,iBAA4B;QAC5BE,cAAyB;QACzBuB,aAAwB;QACxBO,QAAmB;KACpB;IACD,gBAAgB,EAAE,CAACrC,MAAiB,CAAC;gBACrCE,YAAU;CACX,CAAC;AACF,MAAMe,kBAAgB,GAA6B;IACjD,IAAI,EACF,4IAA4I;IAC9I,UAAU,EAAE,KAAK;IACjB,SAAS,EAAE;QACT,GAAG,EAAE;YACH,UAAU,EAAEkB,aAAqB;SAClC;QACD,OAAO,EAAE;YACP,UAAU,EAAEtC,UAAkB;SAC/B;KACF;IACD,eAAe,EAAE,CAACC,UAAqB,EAAEkC,OAAkB,CAAC;IAC5D,aAAa,EAAE;QACbjC,KAAgB;QAChBM,iBAA4B;QAC5BE,cAAyB;QACzBuB,aAAwB;QACxBO,QAAmB;KACpB;IACD,gBAAgB,EAAE,CAACrC,MAAiB,CAAC;gBACrCE,YAAU;CACX,CAAC;AACF,MAAM,4BAA4B,GAA6B;IAC7D,IAAI,EACF,iIAAiI;IACnI,UAAU,EAAE,KAAK;IACjB,SAAS,EAAE;QACT,GAAG,EAAE;YACH,UAAU,EAAEqC,uBAA+B;SAC5C;QACD,OAAO,EAAE;YACP,UAAU,EAAE1C,UAAkB;SAC/B;KACF;IACD,eAAe,EAAE,CAACC,UAAqB,CAAC;IACxC,aAAa,EAAE;QACbC,KAAgB;QAChBM,iBAA4B;QAC5BE,cAAyB;QACzBuB,aAAwB;KACzB;IACD,gBAAgB,EAAE,CAAC9B,MAAiB,CAAC;gBACrCE,YAAU;CACX,CAAC;AACF,MAAM,oBAAoB,GAA6B;IACrD,IAAI,EACF,oJAAoJ;IACtJ,UAAU,EAAE,MAAM;IAClB,SAAS,EAAE;QACT,GAAG,EAAE,EAAE;QACP,GAAG,EAAE,EAAE;QACP,GAAG,EAAE,EAAE;QACP,GAAG,EAAE,EAAE;QACP,OAAO,EAAE;YACP,UAAU,EAAEL,UAAkB;SAC/B;KACF;IACD,eAAe,EAAE,CAACC,UAAqB,CAAC;IACxC,aAAa,EAAE;QACbC,KAAgB;QAChBM,iBAA4B;QAC5BE,cAAyB;QACzBuB,aAAwB;QACxBO,QAAmB;KACpB;IACD,gBAAgB,EAAE,CAACrC,MAAiB,CAAC;gBACrCE,YAAU;CACX,CAAC;AACF,MAAM,gCAAgC,GAA6B;IACjE,IAAI,EAAE,YAAY;IAClB,UAAU,EAAE,KAAK;IACjB,SAAS,EAAE;QACT,GAAG,EAAE;YACH,UAAU,EAAEqC,uBAA+B;SAC5C;QACD,OAAO,EAAE;YACP,UAAU,EAAE1C,UAAkB;SAC/B;KACF;IACD,eAAe,EAAE,CAACC,UAAqB,CAAC;IACxC,aAAa,EAAE;QACbC,KAAgB;QAChBM,iBAA4B;QAC5BE,cAAyB;QACzBM,QAAmB;QACnBiB,aAAwB;KACzB;IACD,gBAAgB,EAAE,CAAC9B,MAAiB,CAAC;gBACrCE,YAAU;CACX,CAAC;;ACrtBF;;;;;;;AAoCA;AACA;AACA,MAAa,iBAAiB;;;;;IAO5B,YAAY,MAA+B;QACzC,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;KACtB;;;;;;IAOM,kBAAkB,CACvB,OAAuD;QAEvD,MAAM,IAAI,GAAG,IAAI,CAAC,2BAA2B,CAAC,OAAO,CAAC,CAAC;QACvD,OAAO;YACL,IAAI;gBACF,OAAO,IAAI,CAAC,IAAI,EAAE,CAAC;aACpB;YACD,CAAC,MAAM,CAAC,aAAa,CAAC;gBACpB,OAAO,IAAI,CAAC;aACb;YACD,MAAM,EAAE;gBACN,OAAO,IAAI,CAAC,4BAA4B,CAAC,OAAO,CAAC,CAAC;aACnD;SACF,CAAC;KACH;IAEc,4BAA4B,CACzC,OAAuD;;YAEvD,IAAI,MAAM,GAAG,oBAAM,IAAI,CAAC,mBAAmB,CAAC,OAAO,CAAC,CAAA,CAAC;YACrD,0BAAM,MAAM,CAAC,KAAK,IAAI,EAAE,CAAA,CAAC;YACzB,IAAI,iBAAiB,GAAG,MAAM,CAAC,QAAQ,CAAC;YACxC,OAAO,iBAAiB,EAAE;gBACxB,MAAM,GAAG,oBAAM,IAAI,CAAC,uBAAuB,CAAC,iBAAiB,EAAE,OAAO,CAAC,CAAA,CAAC;gBACxE,iBAAiB,GAAG,MAAM,CAAC,QAAQ,CAAC;gBACpC,0BAAM,MAAM,CAAC,KAAK,IAAI,EAAE,CAAA,CAAC;aAC1B;SACF;KAAA;IAEc,2BAA2B,CACxC,OAAuD;;;;gBAEvD,KAAyB,IAAA,KAAAT,oBAAA,IAAI,CAAC,4BAA4B,CAAC,OAAO,CAAC,CAAA,IAAA;oBAAxD,MAAM,IAAI,WAAA,CAAA;oBACnB,oBAAA,OAAOC,uBAAAD,oBAAA,IAAI,CAAA,CAAA,CAAA,CAAC;iBACb;;;;;;;;;SACF;KAAA;;;;;;;IAQM,mBAAmB,CACxB,iBAAyB,EACzB,OAAwD;QAExD,MAAM,IAAI,GAAG,IAAI,CAAC,4BAA4B,CAAC,iBAAiB,EAAE,OAAO,CAAC,CAAC;QAC3E,OAAO;YACL,IAAI;gBACF,OAAO,IAAI,CAAC,IAAI,EAAE,CAAC;aACpB;YACD,CAAC,MAAM,CAAC,aAAa,CAAC;gBACpB,OAAO,IAAI,CAAC;aACb;YACD,MAAM,EAAE;gBACN,OAAO,IAAI,CAAC,6BAA6B,CAAC,iBAAiB,EAAE,OAAO,CAAC,CAAC;aACvE;SACF,CAAC;KACH;IAEc,6BAA6B,CAC1C,iBAAyB,EACzB,OAAwD;;YAExD,IAAI,MAAM,GAAG,oBAAM,IAAI,CAAC,oBAAoB,CAAC,iBAAiB,EAAE,OAAO,CAAC,CAAA,CAAC;YACzE,0BAAM,MAAM,CAAC,KAAK,IAAI,EAAE,CAAA,CAAC;YACzB,IAAI,iBAAiB,GAAG,MAAM,CAAC,QAAQ,CAAC;YACxC,OAAO,iBAAiB,EAAE;gBACxB,MAAM,GAAG,oBAAM,IAAI,CAAC,wBAAwB,CAC1C,iBAAiB,EACjB,iBAAiB,EACjB,OAAO,CACR,CAAA,CAAC;gBACF,iBAAiB,GAAG,MAAM,CAAC,QAAQ,CAAC;gBACpC,0BAAM,MAAM,CAAC,KAAK,IAAI,EAAE,CAAA,CAAC;aAC1B;SACF;KAAA;IAEc,4BAA4B,CACzC,iBAAyB,EACzB,OAAwD;;;;gBAExD,KAAyB,IAAA,KAAAA,oBAAA,IAAI,CAAC,6BAA6B,CACzD,iBAAiB,EACjB,OAAO,CACR,CAAA,IAAA;oBAHU,MAAM,IAAI,WAAA,CAAA;oBAInB,oBAAA,OAAOC,uBAAAD,oBAAA,IAAI,CAAA,CAAA,CAAA,CAAC;iBACb;;;;;;;;;SACF;KAAA;;;;;;IAOO,mBAAmB,CACzB,OAAuD;QAEvD,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,OAAO,EAAE,EACXyB,iCAA+B,CAChC,CAAC;KACH;;;;;;;IAQO,oBAAoB,CAC1B,iBAAyB,EACzB,OAAwD;QAExD,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,iBAAiB,EAAE,OAAO,EAAE,EAC9BQ,kCAAgC,CACjC,CAAC;KACH;;;;;;;;IASD,MAAM,CACJ,iBAAyB,EACzB,gBAAwB,EACxB,UAAgC,EAChC,OAA2C;QAE3C,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,iBAAiB,EAAE,gBAAgB,EAAE,UAAU,EAAE,OAAO,EAAE,EAC5D,mBAAmB,CACpB,CAAC;KACH;;;;;;;;IASD,MAAM,CACJ,iBAAyB,EACzB,gBAAwB,EACxB,UAAsC,EACtC,OAA2C;QAE3C,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,iBAAiB,EAAE,gBAAgB,EAAE,UAAU,EAAE,OAAO,EAAE,EAC5DX,qBAAmB,CACpB,CAAC;KACH;;;;;;;IAQD,MAAM,CACJ,iBAAyB,EACzB,gBAAwB,EACxB,OAA2C;QAE3C,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,iBAAiB,EAAE,gBAAgB,EAAE,OAAO,EAAE,EAChDC,qBAAmB,CACpB,CAAC;KACH;;;;;;;IAQD,GAAG,CACD,iBAAyB,EACzB,gBAAwB,EACxB,OAAwC;QAExC,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,iBAAiB,EAAE,gBAAgB,EAAE,OAAO,EAAE,EAChDC,kBAAgB,CACjB,CAAC;KACH;;;;;;;;;IAUD,eAAe,CACb,iBAAyB,EACzB,gBAAwB,EACxB,OAAoD;QAEpD,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,iBAAiB,EAAE,gBAAgB,EAAE,OAAO,EAAE,EAChD,4BAA4B,CAC7B,CAAC;KACH;;;;;;IAOO,uBAAuB,CAC7B,QAAgB,EAChB,OAA2D;QAE3D,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,QAAQ,EAAE,OAAO,EAAE,EACrBE,qCAAmC,CACpC,CAAC;KACH;;;;;;;IAQO,wBAAwB,CAC9B,iBAAyB,EACzB,QAAgB,EAChB,OAA4D;QAE5D,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,iBAAiB,EAAE,QAAQ,EAAE,OAAO,EAAE,EACxCQ,sCAAoC,CACrC,CAAC;KACH;CACF;AACD;AACA,MAAMzB,YAAU,GAAGP,2BAA2B,CAAC,OAAO,cAAc,KAAK,CAAC,CAAC;AAE3E,MAAMuB,iCAA+B,GAA6B;IAChE,IAAI,EACF,2EAA2E;IAC7E,UAAU,EAAE,KAAK;IACjB,SAAS,EAAE;QACT,GAAG,EAAE;YACH,UAAU,EAAEsB,4BAAoC;SACjD;QACD,OAAO,EAAE;YACP,UAAU,EAAE3C,UAAkB;SAC/B;KACF;IACD,eAAe,EAAE,CAACC,UAAqB,CAAC;IACxC,aAAa,EAAE,CAACC,KAAgB,EAAEQ,cAAyB,CAAC;IAC5D,gBAAgB,EAAE,CAACP,MAAiB,CAAC;gBACrCE,YAAU;CACX,CAAC;AACF,MAAMwB,kCAAgC,GAA6B;IACjE,IAAI,EACF,8GAA8G;IAChH,UAAU,EAAE,KAAK;IACjB,SAAS,EAAE;QACT,GAAG,EAAE;YACH,UAAU,EAAEc,4BAAoC;SACjD;QACD,OAAO,EAAE;YACP,UAAU,EAAE3C,UAAkB;SAC/B;KACF;IACD,eAAe,EAAE,CAACC,UAAqB,CAAC;IACxC,aAAa,EAAE;QACbC,KAAgB;QAChBM,iBAA4B;QAC5BE,cAAyB;KAC1B;IACD,gBAAgB,EAAE,CAACP,MAAiB,CAAC;gBACrCE,YAAU;CACX,CAAC;AACF,MAAM,mBAAmB,GAA6B;IACpD,IAAI,EACF,iIAAiI;IACnI,UAAU,EAAE,KAAK;IACjB,SAAS,EAAE;QACT,GAAG,EAAE;YACH,UAAU,EAAEuC,oBAA4B;SACzC;QACD,GAAG,EAAE;YACH,UAAU,EAAEA,oBAA4B;SACzC;QACD,OAAO,EAAE;YACP,UAAU,EAAE5C,UAAkB;SAC/B;KACF;IACD,WAAW,EAAE6C,WAAsB;IACnC,eAAe,EAAE,CAAC5C,UAAqB,CAAC;IACxC,aAAa,EAAE;QACbC,KAAgB;QAChBM,iBAA4B;QAC5BE,cAAyB;QACzBoC,gBAA2B;KAC5B;IACD,gBAAgB,EAAE,CAAC3C,MAAiB,EAAEQ,WAAsB,CAAC;IAC7D,SAAS,EAAE,MAAM;gBACjBN,YAAU;CACX,CAAC;AACF,MAAMa,qBAAmB,GAA6B;IACpD,IAAI,EACF,iIAAiI;IACnI,UAAU,EAAE,OAAO;IACnB,SAAS,EAAE;QACT,GAAG,EAAE;YACH,UAAU,EAAE0B,oBAA4B;SACzC;QACD,OAAO,EAAE;YACP,UAAU,EAAE5C,UAAkB;SAC/B;KACF;IACD,WAAW,EAAE+C,WAAsB;IACnC,eAAe,EAAE,CAAC9C,UAAqB,CAAC;IACxC,aAAa,EAAE;QACbC,KAAgB;QAChBM,iBAA4B;QAC5BE,cAAyB;QACzBoC,gBAA2B;KAC5B;IACD,gBAAgB,EAAE,CAAC3C,MAAiB,EAAEQ,WAAsB,CAAC;IAC7D,SAAS,EAAE,MAAM;gBACjBN,YAAU;CACX,CAAC;AACF,MAAMc,qBAAmB,GAA6B;IACpD,IAAI,EACF,iIAAiI;IACnI,UAAU,EAAE,QAAQ;IACpB,SAAS,EAAE;QACT,GAAG,EAAE,EAAE;QACP,GAAG,EAAE,EAAE;QACP,OAAO,EAAE;YACP,UAAU,EAAEnB,UAAkB;SAC/B;KACF;IACD,eAAe,EAAE,CAACC,UAAqB,CAAC;IACxC,aAAa,EAAE;QACbC,KAAgB;QAChBM,iBAA4B;QAC5BE,cAAyB;QACzBoC,gBAA2B;KAC5B;IACD,gBAAgB,EAAE,CAAC3C,MAAiB,CAAC;gBACrCE,YAAU;CACX,CAAC;AACF,MAAMe,kBAAgB,GAA6B;IACjD,IAAI,EACF,iIAAiI;IACnI,UAAU,EAAE,KAAK;IACjB,SAAS,EAAE;QACT,GAAG,EAAE;YACH,UAAU,EAAEwB,oBAA4B;SACzC;QACD,OAAO,EAAE;YACP,UAAU,EAAE5C,UAAkB;SAC/B;KACF;IACD,eAAe,EAAE,CAACC,UAAqB,CAAC;IACxC,aAAa,EAAE;QACbC,KAAgB;QAChBM,iBAA4B;QAC5BE,cAAyB;QACzBoC,gBAA2B;KAC5B;IACD,gBAAgB,EAAE,CAAC3C,MAAiB,CAAC;gBACrCE,YAAU;CACX,CAAC;AACF,MAAM,4BAA4B,GAA6B;IAC7D,IAAI,EACF,iJAAiJ;IACnJ,UAAU,EAAE,MAAM;IAClB,SAAS,EAAE;QACT,GAAG,EAAE;YACH,UAAU,EAAE2C,iCAAyC;SACtD;QACD,OAAO,EAAE;YACP,UAAU,EAAEhD,UAAkB;SAC/B;KACF;IACD,eAAe,EAAE,CAACC,UAAqB,CAAC;IACxC,aAAa,EAAE;QACbC,KAAgB;QAChBM,iBAA4B;QAC5BE,cAAyB;QACzBoC,gBAA2B;KAC5B;IACD,gBAAgB,EAAE,CAAC3C,MAAiB,CAAC;gBACrCE,YAAU;CACX,CAAC;AACF,MAAMiB,qCAAmC,GAA6B;IACpE,IAAI,EAAE,YAAY;IAClB,UAAU,EAAE,KAAK;IACjB,SAAS,EAAE;QACT,GAAG,EAAE;YACH,UAAU,EAAEqB,4BAAoC;SACjD;QACD,OAAO,EAAE;YACP,UAAU,EAAE3C,UAAkB;SAC/B;KACF;IACD,eAAe,EAAE,CAACC,UAAqB,CAAC;IACxC,aAAa,EAAE;QACbC,KAAgB;QAChBQ,cAAyB;QACzBM,QAAmB;KACpB;IACD,gBAAgB,EAAE,CAACb,MAAiB,CAAC;gBACrCE,YAAU;CACX,CAAC;AACF,MAAMyB,sCAAoC,GAA6B;IACrE,IAAI,EAAE,YAAY;IAClB,UAAU,EAAE,KAAK;IACjB,SAAS,EAAE;QACT,GAAG,EAAE;YACH,UAAU,EAAEa,4BAAoC;SACjD;QACD,OAAO,EAAE;YACP,UAAU,EAAE3C,UAAkB;SAC/B;KACF;IACD,eAAe,EAAE,CAACC,UAAqB,CAAC;IACxC,aAAa,EAAE;QACbC,KAAgB;QAChBM,iBAA4B;QAC5BE,cAAyB;QACzBM,QAAmB;KACpB;IACD,gBAAgB,EAAE,CAACb,MAAiB,CAAC;gBACrCE,YAAU;CACX,CAAC;;AChfF;;;;;;;AASA,AAaA;AACA,MAAa,iCAAiC;;;;;IAQ5C,YAAY,MAA+B;QACzC,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;KACtB;;;;;;;;;IAUD,GAAG,CACD,QAAgB,EAChB,aAAqB,EACrB,OAAe,EACf,SAAiB,EACjB,OAAwD;QAExD,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,QAAQ,EAAE,aAAa,EAAE,OAAO,EAAE,SAAS,EAAE,OAAO,EAAE,EACxDe,kBAAgB,CACjB,CAAC;KACH;;;;;;;IAQD,SAAS,CACP,QAAgB,EAChB,aAAqB,EACrB,OAA8D;QAE9D,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,QAAQ,EAAE,aAAa,EAAE,OAAO,EAAE,EACpC,sBAAsB,CACvB,CAAC;KACH;;;;;;;;IASD,YAAY,CACV,QAAgB,EAChB,aAAqB,EACrB,SAAiB,EACjB,OAAiE;QAEjE,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,QAAQ,EAAE,aAAa,EAAE,SAAS,EAAE,OAAO,EAAE,EAC/C,yBAAyB,CAC1B,CAAC;KACH;CACF;AACD;AACA,MAAMf,YAAU,GAAGP,2BAA2B,CAAC,OAAO,cAAc,KAAK,CAAC,CAAC;AAE3E,MAAMsB,kBAAgB,GAA6B;IACjD,IAAI,EACF,uKAAuK;IACzK,UAAU,EAAE,KAAK;IACjB,SAAS,EAAE;QACT,GAAG,EAAE;YACH,UAAU,EAAE6B,4BAAoC;SACjD;QACD,OAAO,EAAE;YACP,UAAU,EAAEjD,UAAkB;SAC/B;KACF;IACD,eAAe,EAAE,CAACC,UAAqB,CAAC;IACxC,aAAa,EAAE;QACbC,KAAgB;QAChBQ,cAAyB;QACzBwC,QAAmB;QACnBC,aAAwB;QACxBC,SAAoB;QACpBC,OAAkB;KACnB;IACD,gBAAgB,EAAE,CAAClD,MAAiB,CAAC;gBACrCE,YAAU;CACX,CAAC;AACF,MAAM,sBAAsB,GAA6B;IACvD,IAAI,EACF,6IAA6I;IAC/I,UAAU,EAAE,KAAK;IACjB,SAAS,EAAE;QACT,GAAG,EAAE;YACH,UAAU,EAAE;gBACV,IAAI,EAAE;oBACJ,IAAI,EAAE,UAAU;oBAChB,OAAO,EAAE;wBACP,IAAI,EAAE;4BACJ,IAAI,EAAE,WAAW;4BACjB,SAAS,EAAE,8BAA8B;yBAC1C;qBACF;iBACF;aACF;SACF;QACD,OAAO,EAAE;YACP,UAAU,EAAEL,UAAkB;SAC/B;KACF;IACD,eAAe,EAAE,CAACC,UAAqB,CAAC;IACxC,aAAa,EAAE;QACbC,KAAgB;QAChBQ,cAAyB;QACzBwC,QAAmB;QACnBC,aAAwB;KACzB;IACD,gBAAgB,EAAE,CAAChD,MAAiB,CAAC;gBACrCE,YAAU;CACX,CAAC;AACF,MAAM,yBAAyB,GAA6B;IAC1D,IAAI,EACF,6JAA6J;IAC/J,UAAU,EAAE,KAAK;IACjB,SAAS,EAAE;QACT,GAAG,EAAE;YACH,UAAU,EAAE;gBACV,IAAI,EAAE;oBACJ,IAAI,EAAE,UAAU;oBAChB,OAAO,EAAE;wBACP,IAAI,EAAE;4BACJ,IAAI,EAAE,WAAW;4BACjB,SAAS,EAAE,8BAA8B;yBAC1C;qBACF;iBACF;aACF;SACF;QACD,OAAO,EAAE;YACP,UAAU,EAAEL,UAAkB;SAC/B;KACF;IACD,eAAe,EAAE;QACfC,UAAqB;QACrBqD,MAAiB;QACjBC,GAAc;QACdC,OAAkB;KACnB;IACD,aAAa,EAAE;QACbtD,KAAgB;QAChBQ,cAAyB;QACzBwC,QAAmB;QACnBC,aAAwB;QACxBC,SAAoB;KACrB;IACD,gBAAgB,EAAE,CAACjD,MAAiB,CAAC;gBACrCE,YAAU;CACX,CAAC;;AC5LF;;;;;;;AA6BA;AACA,MAAa,4BAA4B;;;;;IAOvC,YAAY,MAA+B;QACzC,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;KACtB;;;;;;;;;IAUK,mBAAmB,CACvB,iBAAyB,EACzB,MAAc,EACd,eAAuB,EACvB,mBAA4C,EAC5C,OAA8D;;YAO9D,MAAM,mBAAmB,GAAG,CAC1B,IAAmC,EACnC,IAA8B;gBAE9B,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;aACrD,CAAA,CAAC;YACF,MAAM,aAAa,GAAG,CACpB,IAAmC,EACnC,IAA8B;;gBAE9B,IAAI,kBAAkB,GAEN,SAAS,CAAC;gBAC1B,MAAM,gBAAgB,GAAG,MAAA,IAAI,CAAC,OAAO,0CAAE,UAAU,CAAC;gBAClD,MAAM,QAAQ,GAAmC,CAC/C,WAA6C,EAC7C,YAAqB;oBAErB,kBAAkB,GAAG,WAAW,CAAC;oBACjC,gBAAgB,aAAhB,gBAAgB,uBAAhB,gBAAgB,CAAG,WAAW,EAAE,YAAY,CAAC,CAAC;iBAC/C,CAAC;gBACF,MAAM,WAAW,mCACZ,IAAI,KACP,OAAO,kCACF,IAAI,CAAC,OAAO,KACf,UAAU,EAAE,QAAQ,MAEvB,CAAC;gBACF,MAAM,YAAY,GAAG,MAAM,mBAAmB,CAAC,WAAW,EAAE,IAAI,CAAC,CAAC;gBAClE,OAAO;oBACL,YAAY;oBACZ,WAAW,EAAE;wBACX,UAAU,EAAE,kBAAmB,CAAC,MAAM;wBACtC,IAAI,EAAE,kBAAmB,CAAC,UAAU;wBACpC,OAAO,EAAE,kBAAmB,CAAC,OAAO,CAAC,MAAM,EAAE;qBAC9C;iBACF,CAAC;aACH,CAAA,CAAC;YAEF,MAAM,GAAG,GAAG,IAAI,OAAO,CACrB,aAAa,EACb;gBACE,iBAAiB;gBACjB,MAAM;gBACN,eAAe;gBACf,mBAAmB;gBACnB,OAAO;aACR,EACDY,6BAA2B,CAC5B,CAAC;YACF,OAAO,IAAIoB,iBAAS,CAAC,GAAG,EAAE;gBACxB,UAAU,EAAE,OAAO,aAAP,OAAO,uBAAP,OAAO,CAAE,UAAU;gBAC/B,YAAY,EAAE,OAAO,aAAP,OAAO,uBAAP,OAAO,CAAE,kBAAkB;aAC1C,CAAC,CAAC;SACJ;KAAA;;;;;;;;;IAUK,0BAA0B,CAC9B,iBAAyB,EACzB,MAAc,EACd,eAAuB,EACvB,mBAA4C,EAC5C,OAA8D;;YAE9D,MAAM,MAAM,GAAG,MAAM,IAAI,CAAC,mBAAmB,CAC3C,iBAAiB,EACjB,MAAM,EACN,eAAe,EACf,mBAAmB,EACnB,OAAO,CACR,CAAC;YACF,OAAO,MAAM,CAAC,aAAa,EAAE,CAAC;SAC/B;KAAA;;;;;;;;;IAUK,WAAW,CACf,iBAAyB,EACzB,MAAc,EACd,eAAuB,EACvB,mBAAkD,EAClD,OAAsD;;YAOtD,MAAM,mBAAmB,GAAG,CAC1B,IAAmC,EACnC,IAA8B;gBAE9B,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;aACrD,CAAA,CAAC;YACF,MAAM,aAAa,GAAG,CACpB,IAAmC,EACnC,IAA8B;;gBAE9B,IAAI,kBAAkB,GAEN,SAAS,CAAC;gBAC1B,MAAM,gBAAgB,GAAG,MAAA,IAAI,CAAC,OAAO,0CAAE,UAAU,CAAC;gBAClD,MAAM,QAAQ,GAAmC,CAC/C,WAA6C,EAC7C,YAAqB;oBAErB,kBAAkB,GAAG,WAAW,CAAC;oBACjC,gBAAgB,aAAhB,gBAAgB,uBAAhB,gBAAgB,CAAG,WAAW,EAAE,YAAY,CAAC,CAAC;iBAC/C,CAAC;gBACF,MAAM,WAAW,mCACZ,IAAI,KACP,OAAO,kCACF,IAAI,CAAC,OAAO,KACf,UAAU,EAAE,QAAQ,MAEvB,CAAC;gBACF,MAAM,YAAY,GAAG,MAAM,mBAAmB,CAAC,WAAW,EAAE,IAAI,CAAC,CAAC;gBAClE,OAAO;oBACL,YAAY;oBACZ,WAAW,EAAE;wBACX,UAAU,EAAE,kBAAmB,CAAC,MAAM;wBACtC,IAAI,EAAE,kBAAmB,CAAC,UAAU;wBACpC,OAAO,EAAE,kBAAmB,CAAC,OAAO,CAAC,MAAM,EAAE;qBAC9C;iBACF,CAAC;aACH,CAAA,CAAC;YAEF,MAAM,GAAG,GAAG,IAAI,OAAO,CACrB,aAAa,EACb;gBACE,iBAAiB;gBACjB,MAAM;gBACN,eAAe;gBACf,mBAAmB;gBACnB,OAAO;aACR,EACDnB,qBAAmB,CACpB,CAAC;YACF,OAAO,IAAImB,iBAAS,CAAC,GAAG,EAAE;gBACxB,UAAU,EAAE,OAAO,aAAP,OAAO,uBAAP,OAAO,CAAE,UAAU;gBAC/B,YAAY,EAAE,OAAO,aAAP,OAAO,uBAAP,OAAO,CAAE,kBAAkB;aAC1C,CAAC,CAAC;SACJ;KAAA;;;;;;;;;IAUK,kBAAkB,CACtB,iBAAyB,EACzB,MAAc,EACd,eAAuB,EACvB,mBAAkD,EAClD,OAAsD;;YAEtD,MAAM,MAAM,GAAG,MAAM,IAAI,CAAC,WAAW,CACnC,iBAAiB,EACjB,MAAM,EACN,eAAe,EACf,mBAAmB,EACnB,OAAO,CACR,CAAC;YACF,OAAO,MAAM,CAAC,aAAa,EAAE,CAAC;SAC/B;KAAA;;;;;;;;IASK,WAAW,CACf,iBAAyB,EACzB,MAAc,EACd,eAAuB,EACvB,OAAsD;;YAEtD,MAAM,mBAAmB,GAAG,CAC1B,IAAmC,EACnC,IAA8B;gBAE9B,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;aACrD,CAAA,CAAC;YACF,MAAM,aAAa,GAAG,CACpB,IAAmC,EACnC,IAA8B;;gBAE9B,IAAI,kBAAkB,GAEN,SAAS,CAAC;gBAC1B,MAAM,gBAAgB,GAAG,MAAA,IAAI,CAAC,OAAO,0CAAE,UAAU,CAAC;gBAClD,MAAM,QAAQ,GAAmC,CAC/C,WAA6C,EAC7C,YAAqB;oBAErB,kBAAkB,GAAG,WAAW,CAAC;oBACjC,gBAAgB,aAAhB,gBAAgB,uBAAhB,gBAAgB,CAAG,WAAW,EAAE,YAAY,CAAC,CAAC;iBAC/C,CAAC;gBACF,MAAM,WAAW,mCACZ,IAAI,KACP,OAAO,kCACF,IAAI,CAAC,OAAO,KACf,UAAU,EAAE,QAAQ,MAEvB,CAAC;gBACF,MAAM,YAAY,GAAG,MAAM,mBAAmB,CAAC,WAAW,EAAE,IAAI,CAAC,CAAC;gBAClE,OAAO;oBACL,YAAY;oBACZ,WAAW,EAAE;wBACX,UAAU,EAAE,kBAAmB,CAAC,MAAM;wBACtC,IAAI,EAAE,kBAAmB,CAAC,UAAU;wBACpC,OAAO,EAAE,kBAAmB,CAAC,OAAO,CAAC,MAAM,EAAE;qBAC9C;iBACF,CAAC;aACH,CAAA,CAAC;YAEF,MAAM,GAAG,GAAG,IAAI,OAAO,CACrB,aAAa,EACb,EAAE,iBAAiB,EAAE,MAAM,EAAE,eAAe,EAAE,OAAO,EAAE,EACvDlB,qBAAmB,CACpB,CAAC;YACF,OAAO,IAAIkB,iBAAS,CAAC,GAAG,EAAE;gBACxB,UAAU,EAAE,OAAO,aAAP,OAAO,uBAAP,OAAO,CAAE,UAAU;gBAC/B,YAAY,EAAE,OAAO,aAAP,OAAO,uBAAP,OAAO,CAAE,kBAAkB;aAC1C,CAAC,CAAC;SACJ;KAAA;;;;;;;;IASK,kBAAkB,CACtB,iBAAyB,EACzB,MAAc,EACd,eAAuB,EACvB,OAAsD;;YAEtD,MAAM,MAAM,GAAG,MAAM,IAAI,CAAC,WAAW,CACnC,iBAAiB,EACjB,MAAM,EACN,eAAe,EACf,OAAO,CACR,CAAC;YACF,OAAO,MAAM,CAAC,aAAa,EAAE,CAAC;SAC/B;KAAA;;;;;;;;IASD,GAAG,CACD,iBAAyB,EACzB,MAAc,EACd,eAAuB,EACvB,OAAmD;QAEnD,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,iBAAiB,EAAE,MAAM,EAAE,eAAe,EAAE,OAAO,EAAE,EACvDjB,kBAAgB,CACjB,CAAC;KACH;;;;;;;IAQD,IAAI,CACF,iBAAyB,EACzB,MAAc,EACd,OAAoD;QAEpD,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,iBAAiB,EAAE,MAAM,EAAE,OAAO,EAAE,EACtChB,mBAAiB,CAClB,CAAC;KACH;CACF;AACD;AACA,MAAMC,YAAU,GAAGP,2BAA2B,CAAC,OAAO,cAAc,KAAK,CAAC,CAAC;AAE3E,MAAMmB,6BAA2B,GAA6B;IAC5D,IAAI,EACF,sJAAsJ;IACxJ,UAAU,EAAE,KAAK;IACjB,SAAS,EAAE;QACT,GAAG,EAAE;YACH,UAAU,EAAEwC,uBAA+B;SAC5C;QACD,GAAG,EAAE;YACH,UAAU,EAAEA,uBAA+B;SAC5C;QACD,GAAG,EAAE;YACH,UAAU,EAAEA,uBAA+B;SAC5C;QACD,GAAG,EAAE;YACH,UAAU,EAAEA,uBAA+B;SAC5C;QACD,OAAO,EAAE;YACP,UAAU,EAAEzD,UAAkB;SAC/B;KACF;IACD,WAAW,EAAE0D,mBAA8B;IAC3C,eAAe,EAAE,CAACzD,UAAqB,CAAC;IACxC,aAAa,EAAE;QACbC,KAAgB;QAChBM,iBAA4B;QAC5BE,cAAyB;QACzBiD,MAAiB;QACjBC,eAA0B;KAC3B;IACD,gBAAgB,EAAE,CAACzD,MAAiB,EAAEQ,WAAsB,CAAC;IAC7D,SAAS,EAAE,MAAM;gBACjBN,YAAU;CACX,CAAC;AACF,MAAMa,qBAAmB,GAA6B;IACpD,IAAI,EACF,sJAAsJ;IACxJ,UAAU,EAAE,OAAO;IACnB,SAAS,EAAE;QACT,GAAG,EAAE;YACH,UAAU,EAAEuC,uBAA+B;SAC5C;QACD,GAAG,EAAE;YACH,UAAU,EAAEA,uBAA+B;SAC5C;QACD,GAAG,EAAE;YACH,UAAU,EAAEA,uBAA+B;SAC5C;QACD,GAAG,EAAE;YACH,UAAU,EAAEA,uBAA+B;SAC5C;QACD,OAAO,EAAE;YACP,UAAU,EAAEzD,UAAkB;SAC/B;KACF;IACD,WAAW,EAAE6D,oBAA+B;IAC5C,eAAe,EAAE,CAAC5D,UAAqB,CAAC;IACxC,aAAa,EAAE;QACbC,KAAgB;QAChBM,iBAA4B;QAC5BE,cAAyB;QACzBiD,MAAiB;QACjBC,eAA0B;KAC3B;IACD,gBAAgB,EAAE,CAACzD,MAAiB,EAAEQ,WAAsB,CAAC;IAC7D,SAAS,EAAE,MAAM;gBACjBN,YAAU;CACX,CAAC;AACF,MAAMc,qBAAmB,GAA6B;IACpD,IAAI,EACF,sJAAsJ;IACxJ,UAAU,EAAE,QAAQ;IACpB,SAAS,EAAE;QACT,GAAG,EAAE,EAAE;QACP,GAAG,EAAE,EAAE;QACP,GAAG,EAAE,EAAE;QACP,GAAG,EAAE,EAAE;QACP,OAAO,EAAE;YACP,UAAU,EAAEnB,UAAkB;SAC/B;KACF;IACD,eAAe,EAAE,CAACC,UAAqB,CAAC;IACxC,aAAa,EAAE;QACbC,KAAgB;QAChBM,iBAA4B;QAC5BE,cAAyB;QACzBiD,MAAiB;QACjBC,eAA0B;KAC3B;IACD,gBAAgB,EAAE,CAACzD,MAAiB,CAAC;gBACrCE,YAAU;CACX,CAAC;AACF,MAAMe,kBAAgB,GAA6B;IACjD,IAAI,EACF,sJAAsJ;IACxJ,UAAU,EAAE,KAAK;IACjB,SAAS,EAAE;QACT,GAAG,EAAE;YACH,UAAU,EAAEqC,uBAA+B;SAC5C;QACD,OAAO,EAAE;YACP,UAAU,EAAEzD,UAAkB;SAC/B;KACF;IACD,eAAe,EAAE,CAACC,UAAqB,EAAEa,MAAiB,CAAC;IAC3D,aAAa,EAAE;QACbZ,KAAgB;QAChBM,iBAA4B;QAC5BE,cAAyB;QACzBiD,MAAiB;QACjBC,eAA0B;KAC3B;IACD,gBAAgB,EAAE,CAACzD,MAAiB,CAAC;gBACrCE,YAAU;CACX,CAAC;AACF,MAAMD,mBAAiB,GAA6B;IAClD,IAAI,EACF,oIAAoI;IACtI,UAAU,EAAE,KAAK;IACjB,SAAS,EAAE;QACT,GAAG,EAAE;YACH,UAAU,EAAE0D,kCAA0C;SACvD;QACD,OAAO,EAAE;YACP,UAAU,EAAE9D,UAAkB;SAC/B;KACF;IACD,eAAe,EAAE,CAACC,UAAqB,EAAEa,MAAiB,CAAC;IAC3D,aAAa,EAAE;QACbZ,KAAgB;QAChBM,iBAA4B;QAC5BE,cAAyB;QACzBiD,MAAiB;KAClB;IACD,gBAAgB,EAAE,CAACxD,MAAiB,CAAC;gBACrCE,YAAU;CACX,CAAC;;ACvfF;;;;;;;AASA,AAiBA;AACA,MAAa,wBAAwB;;;;;IAOnC,YAAY,MAA+B;QACzC,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;KACtB;;;;;;;;;;IAWD,GAAG,CACD,QAAgB,EAChB,aAAqB,EACrB,KAAa,EACb,IAAY,EACZ,OAAe,EACf,OAA+C;QAE/C,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,QAAQ,EAAE,aAAa,EAAE,KAAK,EAAE,IAAI,EAAE,OAAO,EAAE,OAAO,EAAE,EAC1De,kBAAgB,CACjB,CAAC;KACH;;;;;;;;;;IAWD,IAAI,CACF,QAAgB,EAChB,aAAqB,EACrB,KAAa,EACb,IAAY,EACZ,OAAgD;QAEhD,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,QAAQ,EAAE,aAAa,EAAE,KAAK,EAAE,IAAI,EAAE,OAAO,EAAE,EACjDhB,mBAAiB,CAClB,CAAC;KACH;;;;;;;IAQD,UAAU,CACR,QAAgB,EAChB,aAAqB,EACrB,OAAsD;QAEtD,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,QAAQ,EAAE,aAAa,EAAE,OAAO,EAAE,EACpC,uBAAuB,CACxB,CAAC;KACH;;;;;;IAOD,cAAc,CACZ,QAAgB,EAChB,OAA0D;QAE1D,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,QAAQ,EAAE,OAAO,EAAE,EACrB,2BAA2B,CAC5B,CAAC;KACH;;;;;;;;IASD,QAAQ,CACN,QAAgB,EAChB,aAAqB,EACrB,KAAa,EACb,OAAoD;QAEpD,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,QAAQ,EAAE,aAAa,EAAE,KAAK,EAAE,OAAO,EAAE,EAC3C,qBAAqB,CACtB,CAAC;KACH;CACF;AACD;AACA,MAAMC,YAAU,GAAGP,2BAA2B,CAAC,OAAO,cAAc,KAAK,CAAC,CAAC;AAE3E,MAAMsB,kBAAgB,GAA6B;IACjD,IAAI,EACF,iLAAiL;IACnL,UAAU,EAAE,KAAK;IACjB,SAAS,EAAE;QACT,GAAG,EAAE;YACH,UAAU,EAAE2C,mBAA2B;SACxC;QACD,OAAO,EAAE;YACP,UAAU,EAAE/D,UAAkB;SAC/B;KACF;IACD,eAAe,EAAE,CAACC,UAAqB,CAAC;IACxC,aAAa,EAAE;QACbC,KAAgB;QAChBQ,cAAyB;QACzBwC,QAAmB;QACnBC,aAAwB;QACxBE,OAAkB;QAClBW,KAAgB;QAChBC,IAAe;KAChB;IACD,gBAAgB,EAAE,CAAC9D,MAAiB,CAAC;gBACrCE,YAAU;CACX,CAAC;AACF,MAAMD,mBAAiB,GAA6B;IAClD,IAAI,EACF,uKAAuK;IACzK,UAAU,EAAE,KAAK;IACjB,SAAS,EAAE;QACT,GAAG,EAAE;YACH,UAAU,EAAE;gBACV,IAAI,EAAE;oBACJ,IAAI,EAAE,UAAU;oBAChB,OAAO,EAAE;wBACP,IAAI,EAAE;4BACJ,IAAI,EAAE,WAAW;4BACjB,SAAS,EAAE,6BAA6B;yBACzC;qBACF;iBACF;aACF;SACF;QACD,OAAO,EAAE;YACP,UAAU,EAAEJ,UAAkB;SAC/B;KACF;IACD,eAAe,EAAE;QACfC,UAAqB;QACrBa,MAAiB;QACjByC,GAAc;QACdC,OAAkB;KACnB;IACD,aAAa,EAAE;QACbtD,KAAgB;QAChBQ,cAAyB;QACzBwC,QAAmB;QACnBC,aAAwB;QACxBa,KAAgB;QAChBC,IAAe;KAChB;IACD,gBAAgB,EAAE,CAAC9D,MAAiB,CAAC;gBACrCE,YAAU;CACX,CAAC;AACF,MAAM,uBAAuB,GAA6B;IACxD,IAAI,EACF,0IAA0I;IAC5I,UAAU,EAAE,KAAK;IACjB,SAAS,EAAE;QACT,GAAG,EAAE;YACH,UAAU,EAAE;gBACV,IAAI,EAAE;oBACJ,IAAI,EAAE,UAAU;oBAChB,OAAO,EAAE;wBACP,IAAI,EAAE;4BACJ,IAAI,EAAE,WAAW;4BACjB,SAAS,EAAE,6BAA6B;yBACzC;qBACF;iBACF;aACF;SACF;QACD,OAAO,EAAE;YACP,UAAU,EAAEL,UAAkB;SAC/B;KACF;IACD,eAAe,EAAE,CAACC,UAAqB,CAAC;IACxC,aAAa,EAAE;QACbC,KAAgB;QAChBQ,cAAyB;QACzBwC,QAAmB;QACnBC,aAAwB;KACzB;IACD,gBAAgB,EAAE,CAAChD,MAAiB,CAAC;gBACrCE,YAAU;CACX,CAAC;AACF,MAAM,2BAA2B,GAA6B;IAC5D,IAAI,EACF,6FAA6F;IAC/F,UAAU,EAAE,KAAK;IACjB,SAAS,EAAE;QACT,GAAG,EAAE;YACH,UAAU,EAAE;gBACV,IAAI,EAAE;oBACJ,IAAI,EAAE,UAAU;oBAChB,OAAO,EAAE;wBACP,IAAI,EAAE;4BACJ,IAAI,EAAE,WAAW;4BACjB,SAAS,EAAE,6BAA6B;yBACzC;qBACF;iBACF;aACF;SACF;QACD,OAAO,EAAE;YACP,UAAU,EAAEL,UAAkB;SAC/B;KACF;IACD,eAAe,EAAE,CAACC,UAAqB,CAAC;IACxC,aAAa,EAAE;QACbC,KAAgB;QAChBQ,cAAyB;QACzBwC,QAAmB;KACpB;IACD,gBAAgB,EAAE,CAAC/C,MAAiB,CAAC;gBACrCE,YAAU;CACX,CAAC;AACF,MAAM,qBAAqB,GAA6B;IACtD,IAAI,EACF,uJAAuJ;IACzJ,UAAU,EAAE,KAAK;IACjB,SAAS,EAAE;QACT,GAAG,EAAE;YACH,UAAU,EAAE;gBACV,IAAI,EAAE;oBACJ,IAAI,EAAE,UAAU;oBAChB,OAAO,EAAE;wBACP,IAAI,EAAE;4BACJ,IAAI,EAAE,WAAW;4BACjB,SAAS,EAAE,6BAA6B;yBACzC;qBACF;iBACF;aACF;SACF;QACD,OAAO,EAAE;YACP,UAAU,EAAEL,UAAkB;SAC/B;KACF;IACD,eAAe,EAAE,CAACC,UAAqB,CAAC;IACxC,aAAa,EAAE;QACbC,KAAgB;QAChBQ,cAAyB;QACzBwC,QAAmB;QACnBC,aAAwB;QACxBa,KAAgB;KACjB;IACD,gBAAgB,EAAE,CAAC7D,MAAiB,CAAC;gBACrCE,YAAU;CACX,CAAC;;ACxSF;;;;;;;AASA,AAiBA;AACA,MAAa,gCAAgC;;;;;IAQ3C,YAAY,MAA+B;QACzC,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;KACtB;;;;;;;;;;;IAYD,GAAG,CACD,QAAgB,EAChB,QAAgB,EAChB,aAAqB,EACrB,KAAa,EACb,IAAY,EACZ,OAAe,EACf,OAAuD;QAEvD,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,QAAQ,EAAE,QAAQ,EAAE,aAAa,EAAE,KAAK,EAAE,IAAI,EAAE,OAAO,EAAE,OAAO,EAAE,EACpEe,kBAAgB,CACjB,CAAC;KACH;;;;;;;;;;;IAYD,IAAI,CACF,QAAgB,EAChB,QAAgB,EAChB,aAAqB,EACrB,KAAa,EACb,IAAY,EACZ,OAAwD;QAExD,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,QAAQ,EAAE,QAAQ,EAAE,aAAa,EAAE,KAAK,EAAE,IAAI,EAAE,OAAO,EAAE,EAC3DhB,mBAAiB,CAClB,CAAC;KACH;;;;;;;;IASD,UAAU,CACR,QAAgB,EAChB,QAAgB,EAChB,aAAqB,EACrB,OAA8D;QAE9D,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,QAAQ,EAAE,QAAQ,EAAE,aAAa,EAAE,OAAO,EAAE,EAC9C8D,yBAAuB,CACxB,CAAC;KACH;;;;;;;IAQD,cAAc,CACZ,QAAgB,EAChB,QAAgB,EAChB,OAAkE;QAElE,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,QAAQ,EAAE,QAAQ,EAAE,OAAO,EAAE,EAC/BC,6BAA2B,CAC5B,CAAC;KACH;;;;;;;;;;IAWD,QAAQ,CACN,QAAgB,EAChB,QAAgB,EAChB,aAAqB,EACrB,KAAa,EACb,OAA4D;QAE5D,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,QAAQ,EAAE,QAAQ,EAAE,aAAa,EAAE,KAAK,EAAE,OAAO,EAAE,EACrDC,uBAAqB,CACtB,CAAC;KACH;CACF;AACD;AACA,MAAM/D,YAAU,GAAGP,2BAA2B,CAAC,OAAO,cAAc,KAAK,CAAC,CAAC;AAE3E,MAAMsB,kBAAgB,GAA6B;IACjD,IAAI,EACF,sMAAsM;IACxM,UAAU,EAAE,KAAK;IACjB,SAAS,EAAE;QACT,GAAG,EAAE;YACH,UAAU,EAAE2C,mBAA2B;SACxC;QACD,OAAO,EAAE;YACP,UAAU,EAAE/D,UAAkB;SAC/B;KACF;IACD,eAAe,EAAE,CAACC,UAAqB,CAAC;IACxC,aAAa,EAAE;QACbC,KAAgB;QAChBQ,cAAyB;QACzBwC,QAAmB;QACnBC,aAAwB;QACxBE,OAAkB;QAClBW,KAAgB;QAChBC,IAAe;QACfI,QAAmB;KACpB;IACD,gBAAgB,EAAE,CAAClE,MAAiB,CAAC;gBACrCE,YAAU;CACX,CAAC;AACF,MAAMD,mBAAiB,GAA6B;IAClD,IAAI,EACF,4LAA4L;IAC9L,UAAU,EAAE,KAAK;IACjB,SAAS,EAAE;QACT,GAAG,EAAE;YACH,UAAU,EAAE;gBACV,IAAI,EAAE;oBACJ,IAAI,EAAE,UAAU;oBAChB,OAAO,EAAE;wBACP,IAAI,EAAE;4BACJ,IAAI,EAAE,WAAW;4BACjB,SAAS,EAAE,6BAA6B;yBACzC;qBACF;iBACF;aACF;SACF;QACD,OAAO,EAAE;YACP,UAAU,EAAEJ,UAAkB;SAC/B;KACF;IACD,eAAe,EAAE;QACfC,UAAqB;QACrBa,MAAiB;QACjByC,GAAc;QACdC,OAAkB;KACnB;IACD,aAAa,EAAE;QACbtD,KAAgB;QAChBQ,cAAyB;QACzBwC,QAAmB;QACnBC,aAAwB;QACxBa,KAAgB;QAChBC,IAAe;QACfI,QAAmB;KACpB;IACD,gBAAgB,EAAE,CAAClE,MAAiB,CAAC;gBACrCE,YAAU;CACX,CAAC;AACF,MAAM6D,yBAAuB,GAA6B;IACxD,IAAI,EACF,+JAA+J;IACjK,UAAU,EAAE,KAAK;IACjB,SAAS,EAAE;QACT,GAAG,EAAE;YACH,UAAU,EAAE;gBACV,IAAI,EAAE;oBACJ,IAAI,EAAE,UAAU;oBAChB,OAAO,EAAE;wBACP,IAAI,EAAE;4BACJ,IAAI,EAAE,WAAW;4BACjB,SAAS,EAAE,6BAA6B;yBACzC;qBACF;iBACF;aACF;SACF;QACD,OAAO,EAAE;YACP,UAAU,EAAElE,UAAkB;SAC/B;KACF;IACD,eAAe,EAAE,CAACC,UAAqB,CAAC;IACxC,aAAa,EAAE;QACbC,KAAgB;QAChBQ,cAAyB;QACzBwC,QAAmB;QACnBC,aAAwB;QACxBkB,QAAmB;KACpB;IACD,gBAAgB,EAAE,CAAClE,MAAiB,CAAC;gBACrCE,YAAU;CACX,CAAC;AACF,MAAM8D,6BAA2B,GAA6B;IAC5D,IAAI,EACF,kHAAkH;IACpH,UAAU,EAAE,KAAK;IACjB,SAAS,EAAE;QACT,GAAG,EAAE;YACH,UAAU,EAAE;gBACV,IAAI,EAAE;oBACJ,IAAI,EAAE,UAAU;oBAChB,OAAO,EAAE;wBACP,IAAI,EAAE;4BACJ,IAAI,EAAE,WAAW;4BACjB,SAAS,EAAE,6BAA6B;yBACzC;qBACF;iBACF;aACF;SACF;QACD,OAAO,EAAE;YACP,UAAU,EAAEnE,UAAkB;SAC/B;KACF;IACD,eAAe,EAAE,CAACC,UAAqB,CAAC;IACxC,aAAa,EAAE;QACbC,KAAgB;QAChBQ,cAAyB;QACzBwC,QAAmB;QACnBmB,QAAmB;KACpB;IACD,gBAAgB,EAAE,CAAClE,MAAiB,CAAC;gBACrCE,YAAU;CACX,CAAC;AACF,MAAM+D,uBAAqB,GAA6B;IACtD,IAAI,EACF,4KAA4K;IAC9K,UAAU,EAAE,KAAK;IACjB,SAAS,EAAE;QACT,GAAG,EAAE;YACH,UAAU,EAAE;gBACV,IAAI,EAAE;oBACJ,IAAI,EAAE,UAAU;oBAChB,OAAO,EAAE;wBACP,IAAI,EAAE;4BACJ,IAAI,EAAE,WAAW;4BACjB,SAAS,EAAE,6BAA6B;yBACzC;qBACF;iBACF;aACF;SACF;QACD,OAAO,EAAE;YACP,UAAU,EAAEpE,UAAkB;SAC/B;KACF;IACD,eAAe,EAAE,CAACC,UAAqB,CAAC;IACxC,aAAa,EAAE;QACbC,KAAgB;QAChBQ,cAAyB;QACzBwC,QAAmB;QACnBC,aAAwB;QACxBa,KAAgB;QAChBK,QAAmB;KACpB;IACD,gBAAgB,EAAE,CAAClE,MAAiB,CAAC;gBACrCE,YAAU;CACX,CAAC;;ACzTF;;;;;;;AAsBA;AACA;AACA,MAAa,mBAAmB;;;;;IAO9B,YAAY,MAA+B;QACzC,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;KACtB;;;;;;;IAQM,IAAI,CACT,QAAgB,EAChB,OAAiC;QAEjC,MAAM,IAAI,GAAG,IAAI,CAAC,aAAa,CAAC,QAAQ,EAAE,OAAO,CAAC,CAAC;QACnD,OAAO;YACL,IAAI;gBACF,OAAO,IAAI,CAAC,IAAI,EAAE,CAAC;aACpB;YACD,CAAC,MAAM,CAAC,aAAa,CAAC;gBACpB,OAAO,IAAI,CAAC;aACb;YACD,MAAM,EAAE;gBACN,OAAO,IAAI,CAAC,cAAc,CAAC,QAAQ,EAAE,OAAO,CAAC,CAAC;aAC/C;SACF,CAAC;KACH;IAEc,cAAc,CAC3B,QAAgB,EAChB,OAAiC;;YAEjC,IAAI,MAAM,GAAG,oBAAM,IAAI,CAAC,KAAK,CAAC,QAAQ,EAAE,OAAO,CAAC,CAAA,CAAC;YACjD,0BAAM,MAAM,CAAC,KAAK,IAAI,EAAE,CAAA,CAAC;YACzB,IAAI,iBAAiB,GAAG,MAAM,CAAC,QAAQ,CAAC;YACxC,OAAO,iBAAiB,EAAE;gBACxB,MAAM,GAAG,oBAAM,IAAI,CAAC,SAAS,CAAC,QAAQ,EAAE,iBAAiB,EAAE,OAAO,CAAC,CAAA,CAAC;gBACpE,iBAAiB,GAAG,MAAM,CAAC,QAAQ,CAAC;gBACpC,0BAAM,MAAM,CAAC,KAAK,IAAI,EAAE,CAAA,CAAC;aAC1B;SACF;KAAA;IAEc,aAAa,CAC1B,QAAgB,EAChB,OAAiC;;;;gBAEjC,KAAyB,IAAA,KAAAT,oBAAA,IAAI,CAAC,cAAc,CAAC,QAAQ,EAAE,OAAO,CAAC,CAAA,IAAA;oBAApD,MAAM,IAAI,WAAA,CAAA;oBACnB,oBAAA,OAAOC,uBAAAD,oBAAA,IAAI,CAAA,CAAA,CAAA,CAAC;iBACb;;;;;;;;;SACF;KAAA;;;;;;;IAQO,KAAK,CACX,QAAgB,EAChB,OAAiC;QAEjC,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,QAAQ,EAAE,OAAO,EAAE,EACrBQ,mBAAiB,CAClB,CAAC;KACH;;;;;;;IAQO,SAAS,CACf,QAAgB,EAChB,QAAgB,EAChB,OAAqC;QAErC,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,QAAQ,EAAE,QAAQ,EAAE,OAAO,EAAE,EAC/BkE,uBAAqB,CACtB,CAAC;KACH;CACF;AACD;AACA,MAAMjE,YAAU,GAAGP,2BAA2B,CAAC,OAAO,cAAc,KAAK,CAAC,CAAC;AAE3E,MAAMM,mBAAiB,GAA6B;IAClD,IAAI,EACF,yFAAyF;IAC3F,UAAU,EAAE,KAAK;IACjB,SAAS,EAAE;QACT,GAAG,EAAE;YACH,UAAU,EAAEmE,gBAAwB;SACrC;QACD,OAAO,EAAE;YACP,UAAU,EAAEvE,UAAkB;SAC/B;KACF;IACD,eAAe,EAAE,CAACC,UAAqB,CAAC;IACxC,aAAa,EAAE;QACbC,KAAgB;QAChBQ,cAAyB;QACzB8D,SAAoB;KACrB;IACD,gBAAgB,EAAE,CAACrE,MAAiB,CAAC;gBACrCE,YAAU;CACX,CAAC;AACF,MAAMiE,uBAAqB,GAA6B;IACtD,IAAI,EAAE,YAAY;IAClB,UAAU,EAAE,KAAK;IACjB,SAAS,EAAE;QACT,GAAG,EAAE;YACH,UAAU,EAAEC,gBAAwB;SACrC;QACD,OAAO,EAAE;YACP,UAAU,EAAEvE,UAAkB;SAC/B;KACF;IACD,eAAe,EAAE,CAACC,UAAqB,CAAC;IACxC,aAAa,EAAE;QACbC,KAAgB;QAChBQ,cAAyB;QACzBM,QAAmB;QACnBwD,SAAoB;KACrB;IACD,gBAAgB,EAAE,CAACrE,MAAiB,CAAC;gBACrCE,YAAU;CACX,CAAC;;AC/JF;;;;;;;AAqEA;AACA;AACA,MAAa,mBAAmB;;;;;IAO9B,YAAY,MAA+B;QACzC,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;KACtB;;;;;;IAOM,cAAc,CACnB,QAAgB,EAChB,OAAqD;QAErD,MAAM,IAAI,GAAG,IAAI,CAAC,uBAAuB,CAAC,QAAQ,EAAE,OAAO,CAAC,CAAC;QAC7D,OAAO;YACL,IAAI;gBACF,OAAO,IAAI,CAAC,IAAI,EAAE,CAAC;aACpB;YACD,CAAC,MAAM,CAAC,aAAa,CAAC;gBACpB,OAAO,IAAI,CAAC;aACb;YACD,MAAM,EAAE;gBACN,OAAO,IAAI,CAAC,wBAAwB,CAAC,QAAQ,EAAE,OAAO,CAAC,CAAC;aACzD;SACF,CAAC;KACH;IAEc,wBAAwB,CACrC,QAAgB,EAChB,OAAqD;;YAErD,IAAI,MAAM,GAAG,oBAAM,IAAI,CAAC,eAAe,CAAC,QAAQ,EAAE,OAAO,CAAC,CAAA,CAAC;YAC3D,0BAAM,MAAM,CAAC,KAAK,IAAI,EAAE,CAAA,CAAC;YACzB,IAAI,iBAAiB,GAAG,MAAM,CAAC,QAAQ,CAAC;YACxC,OAAO,iBAAiB,EAAE;gBACxB,MAAM,GAAG,oBAAM,IAAI,CAAC,mBAAmB,CACrC,QAAQ,EACR,iBAAiB,EACjB,OAAO,CACR,CAAA,CAAC;gBACF,iBAAiB,GAAG,MAAM,CAAC,QAAQ,CAAC;gBACpC,0BAAM,MAAM,CAAC,KAAK,IAAI,EAAE,CAAA,CAAC;aAC1B;SACF;KAAA;IAEc,uBAAuB,CACpC,QAAgB,EAChB,OAAqD;;;;gBAErD,KAAyB,IAAA,KAAAT,oBAAA,IAAI,CAAC,wBAAwB,CAAC,QAAQ,EAAE,OAAO,CAAC,CAAA,IAAA;oBAA9D,MAAM,IAAI,WAAA,CAAA;oBACnB,oBAAA,OAAOC,uBAAAD,oBAAA,IAAI,CAAA,CAAA,CAAA,CAAC;iBACb;;;;;;;;;SACF;KAAA;;;;;;;IAQM,IAAI,CACT,iBAAyB,EACzB,OAA2C;QAE3C,MAAM,IAAI,GAAG,IAAI,CAAC,aAAa,CAAC,iBAAiB,EAAE,OAAO,CAAC,CAAC;QAC5D,OAAO;YACL,IAAI;gBACF,OAAO,IAAI,CAAC,IAAI,EAAE,CAAC;aACpB;YACD,CAAC,MAAM,CAAC,aAAa,CAAC;gBACpB,OAAO,IAAI,CAAC;aACb;YACD,MAAM,EAAE;gBACN,OAAO,IAAI,CAAC,cAAc,CAAC,iBAAiB,EAAE,OAAO,CAAC,CAAC;aACxD;SACF,CAAC;KACH;IAEc,cAAc,CAC3B,iBAAyB,EACzB,OAA2C;;YAE3C,IAAI,MAAM,GAAG,oBAAM,IAAI,CAAC,KAAK,CAAC,iBAAiB,EAAE,OAAO,CAAC,CAAA,CAAC;YAC1D,0BAAM,MAAM,CAAC,KAAK,IAAI,EAAE,CAAA,CAAC;YACzB,IAAI,iBAAiB,GAAG,MAAM,CAAC,QAAQ,CAAC;YACxC,OAAO,iBAAiB,EAAE;gBACxB,MAAM,GAAG,oBAAM,IAAI,CAAC,SAAS,CAC3B,iBAAiB,EACjB,iBAAiB,EACjB,OAAO,CACR,CAAA,CAAC;gBACF,iBAAiB,GAAG,MAAM,CAAC,QAAQ,CAAC;gBACpC,0BAAM,MAAM,CAAC,KAAK,IAAI,EAAE,CAAA,CAAC;aAC1B;SACF;KAAA;IAEc,aAAa,CAC1B,iBAAyB,EACzB,OAA2C;;;;gBAE3C,KAAyB,IAAA,KAAAA,oBAAA,IAAI,CAAC,cAAc,CAAC,iBAAiB,EAAE,OAAO,CAAC,CAAA,IAAA;oBAA7D,MAAM,IAAI,WAAA,CAAA;oBACnB,oBAAA,OAAOC,uBAAAD,oBAAA,IAAI,CAAA,CAAA,CAAA,CAAC;iBACb;;;;;;;;;SACF;KAAA;;;;;;IAOM,OAAO,CACZ,OAA8C;QAE9C,MAAM,IAAI,GAAG,IAAI,CAAC,gBAAgB,CAAC,OAAO,CAAC,CAAC;QAC5C,OAAO;YACL,IAAI;gBACF,OAAO,IAAI,CAAC,IAAI,EAAE,CAAC;aACpB;YACD,CAAC,MAAM,CAAC,aAAa,CAAC;gBACpB,OAAO,IAAI,CAAC;aACb;YACD,MAAM,EAAE;gBACN,OAAO,IAAI,CAAC,iBAAiB,CAAC,OAAO,CAAC,CAAC;aACxC;SACF,CAAC;KACH;IAEc,iBAAiB,CAC9B,OAA8C;;YAE9C,IAAI,MAAM,GAAG,oBAAM,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAA,CAAC;YAC1C,0BAAM,MAAM,CAAC,KAAK,IAAI,EAAE,CAAA,CAAC;YACzB,IAAI,iBAAiB,GAAG,MAAM,CAAC,QAAQ,CAAC;YACxC,OAAO,iBAAiB,EAAE;gBACxB,MAAM,GAAG,oBAAM,IAAI,CAAC,YAAY,CAAC,iBAAiB,EAAE,OAAO,CAAC,CAAA,CAAC;gBAC7D,iBAAiB,GAAG,MAAM,CAAC,QAAQ,CAAC;gBACpC,0BAAM,MAAM,CAAC,KAAK,IAAI,EAAE,CAAA,CAAC;aAC1B;SACF;KAAA;IAEc,gBAAgB,CAC7B,OAA8C;;;;gBAE9C,KAAyB,IAAA,KAAAA,oBAAA,IAAI,CAAC,iBAAiB,CAAC,OAAO,CAAC,CAAA,IAAA;oBAA7C,MAAM,IAAI,WAAA,CAAA;oBACnB,oBAAA,OAAOC,uBAAAD,oBAAA,IAAI,CAAA,CAAA,CAAA,CAAC;iBACb;;;;;;;;;SACF;KAAA;;;;;;;IAQM,kBAAkB,CACvB,iBAAyB,EACzB,MAAc,EACd,OAAyD;QAEzD,MAAM,IAAI,GAAG,IAAI,CAAC,2BAA2B,CAC3C,iBAAiB,EACjB,MAAM,EACN,OAAO,CACR,CAAC;QACF,OAAO;YACL,IAAI;gBACF,OAAO,IAAI,CAAC,IAAI,EAAE,CAAC;aACpB;YACD,CAAC,MAAM,CAAC,aAAa,CAAC;gBACpB,OAAO,IAAI,CAAC;aACb;YACD,MAAM,EAAE;gBACN,OAAO,IAAI,CAAC,4BAA4B,CACtC,iBAAiB,EACjB,MAAM,EACN,OAAO,CACR,CAAC;aACH;SACF,CAAC;KACH;IAEc,4BAA4B,CACzC,iBAAyB,EACzB,MAAc,EACd,OAAyD;;YAEzD,IAAI,MAAM,GAAG,oBAAM,IAAI,CAAC,mBAAmB,CACzC,iBAAiB,EACjB,MAAM,EACN,OAAO,CACR,CAAA,CAAC;YACF,0BAAM,MAAM,CAAC,KAAK,IAAI,EAAE,CAAA,CAAC;SAC1B;KAAA;IAEc,2BAA2B,CACxC,iBAAyB,EACzB,MAAc,EACd,OAAyD;;;;gBAEzD,KAAyB,IAAA,KAAAA,oBAAA,IAAI,CAAC,4BAA4B,CACxD,iBAAiB,EACjB,MAAM,EACN,OAAO,CACR,CAAA,IAAA;oBAJU,MAAM,IAAI,WAAA,CAAA;oBAKnB,oBAAA,OAAOC,uBAAAD,oBAAA,IAAI,CAAA,CAAA,CAAA,CAAC;iBACb;;;;;;;;;SACF;KAAA;;;;;;IAOO,eAAe,CACrB,QAAgB,EAChB,OAAqD;QAErD,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,QAAQ,EAAE,OAAO,EAAE,EACrB,2BAA2B,CAC5B,CAAC;KACH;;;;;;;;;IAUK,YAAY,CAChB,iBAAyB,EACzB,MAAc,EACd,UAA2C,EAC3C,OAA8C;;YAO9C,MAAM,mBAAmB,GAAG,CAC1B,IAAmC,EACnC,IAA8B;gBAE9B,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;aACrD,CAAA,CAAC;YACF,MAAM,aAAa,GAAG,CACpB,IAAmC,EACnC,IAA8B;;gBAE9B,IAAI,kBAAkB,GAEN,SAAS,CAAC;gBAC1B,MAAM,gBAAgB,GAAG,MAAA,IAAI,CAAC,OAAO,0CAAE,UAAU,CAAC;gBAClD,MAAM,QAAQ,GAAmC,CAC/C,WAA6C,EAC7C,YAAqB;oBAErB,kBAAkB,GAAG,WAAW,CAAC;oBACjC,gBAAgB,aAAhB,gBAAgB,uBAAhB,gBAAgB,CAAG,WAAW,EAAE,YAAY,CAAC,CAAC;iBAC/C,CAAC;gBACF,MAAM,WAAW,mCACZ,IAAI,KACP,OAAO,kCACF,IAAI,CAAC,OAAO,KACf,UAAU,EAAE,QAAQ,MAEvB,CAAC;gBACF,MAAM,YAAY,GAAG,MAAM,mBAAmB,CAAC,WAAW,EAAE,IAAI,CAAC,CAAC;gBAClE,OAAO;oBACL,YAAY;oBACZ,WAAW,EAAE;wBACX,UAAU,EAAE,kBAAmB,CAAC,MAAM;wBACtC,IAAI,EAAE,kBAAmB,CAAC,UAAU;wBACpC,OAAO,EAAE,kBAAmB,CAAC,OAAO,CAAC,MAAM,EAAE;qBAC9C;iBACF,CAAC;aACH,CAAA,CAAC;YAEF,MAAM,GAAG,GAAG,IAAI,OAAO,CACrB,aAAa,EACb,EAAE,iBAAiB,EAAE,MAAM,EAAE,UAAU,EAAE,OAAO,EAAE,EAClD,oBAAoB,CACrB,CAAC;YACF,OAAO,IAAIyC,iBAAS,CAAC,GAAG,EAAE;gBACxB,UAAU,EAAE,OAAO,aAAP,OAAO,uBAAP,OAAO,CAAE,UAAU;gBAC/B,YAAY,EAAE,OAAO,aAAP,OAAO,uBAAP,OAAO,CAAE,kBAAkB;gBACzC,yBAAyB,EAAE,UAAU;aACtC,CAAC,CAAC;SACJ;KAAA;;;;;;;;;IAUK,mBAAmB,CACvB,iBAAyB,EACzB,MAAc,EACd,UAA2C,EAC3C,OAA8C;;YAE9C,MAAM,MAAM,GAAG,MAAM,IAAI,CAAC,YAAY,CACpC,iBAAiB,EACjB,MAAM,EACN,UAAU,EACV,OAAO,CACR,CAAC;YACF,OAAO,MAAM,CAAC,aAAa,EAAE,CAAC;SAC/B;KAAA;;;;;;;;;IAUK,mBAAmB,CACvB,iBAAyB,EACzB,MAAc,EACd,UAA0B,EAC1B,OAAqD;;YAOrD,MAAM,mBAAmB,GAAG,CAC1B,IAAmC,EACnC,IAA8B;gBAE9B,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;aACrD,CAAA,CAAC;YACF,MAAM,aAAa,GAAG,CACpB,IAAmC,EACnC,IAA8B;;gBAE9B,IAAI,kBAAkB,GAEN,SAAS,CAAC;gBAC1B,MAAM,gBAAgB,GAAG,MAAA,IAAI,CAAC,OAAO,0CAAE,UAAU,CAAC;gBAClD,MAAM,QAAQ,GAAmC,CAC/C,WAA6C,EAC7C,YAAqB;oBAErB,kBAAkB,GAAG,WAAW,CAAC;oBACjC,gBAAgB,aAAhB,gBAAgB,uBAAhB,gBAAgB,CAAG,WAAW,EAAE,YAAY,CAAC,CAAC;iBAC/C,CAAC;gBACF,MAAM,WAAW,mCACZ,IAAI,KACP,OAAO,kCACF,IAAI,CAAC,OAAO,KACf,UAAU,EAAE,QAAQ,MAEvB,CAAC;gBACF,MAAM,YAAY,GAAG,MAAM,mBAAmB,CAAC,WAAW,EAAE,IAAI,CAAC,CAAC;gBAClE,OAAO;oBACL,YAAY;oBACZ,WAAW,EAAE;wBACX,UAAU,EAAE,kBAAmB,CAAC,MAAM;wBACtC,IAAI,EAAE,kBAAmB,CAAC,UAAU;wBACpC,OAAO,EAAE,kBAAmB,CAAC,OAAO,CAAC,MAAM,EAAE;qBAC9C;iBACF,CAAC;aACH,CAAA,CAAC;YAEF,MAAM,GAAG,GAAG,IAAI,OAAO,CACrB,aAAa,EACb,EAAE,iBAAiB,EAAE,MAAM,EAAE,UAAU,EAAE,OAAO,EAAE,EAClDpB,6BAA2B,CAC5B,CAAC;YACF,OAAO,IAAIoB,iBAAS,CAAC,GAAG,EAAE;gBACxB,UAAU,EAAE,OAAO,aAAP,OAAO,uBAAP,OAAO,CAAE,UAAU;gBAC/B,YAAY,EAAE,OAAO,aAAP,OAAO,uBAAP,OAAO,CAAE,kBAAkB;aAC1C,CAAC,CAAC;SACJ;KAAA;;;;;;;;;IAUK,0BAA0B,CAC9B,iBAAyB,EACzB,MAAc,EACd,UAA0B,EAC1B,OAAqD;;YAErD,MAAM,MAAM,GAAG,MAAM,IAAI,CAAC,mBAAmB,CAC3C,iBAAiB,EACjB,MAAM,EACN,UAAU,EACV,OAAO,CACR,CAAC;YACF,OAAO,MAAM,CAAC,aAAa,EAAE,CAAC;SAC/B;KAAA;;;;;;;;IASK,WAAW,CACf,iBAAyB,EACzB,MAAc,EACd,UAAgC,EAChC,OAA6C;;YAO7C,MAAM,mBAAmB,GAAG,CAC1B,IAAmC,EACnC,IAA8B;gBAE9B,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;aACrD,CAAA,CAAC;YACF,MAAM,aAAa,GAAG,CACpB,IAAmC,EACnC,IAA8B;;gBAE9B,IAAI,kBAAkB,GAEN,SAAS,CAAC;gBAC1B,MAAM,gBAAgB,GAAG,MAAA,IAAI,CAAC,OAAO,0CAAE,UAAU,CAAC;gBAClD,MAAM,QAAQ,GAAmC,CAC/C,WAA6C,EAC7C,YAAqB;oBAErB,kBAAkB,GAAG,WAAW,CAAC;oBACjC,gBAAgB,aAAhB,gBAAgB,uBAAhB,gBAAgB,CAAG,WAAW,EAAE,YAAY,CAAC,CAAC;iBAC/C,CAAC;gBACF,MAAM,WAAW,mCACZ,IAAI,KACP,OAAO,kCACF,IAAI,CAAC,OAAO,KACf,UAAU,EAAE,QAAQ,MAEvB,CAAC;gBACF,MAAM,YAAY,GAAG,MAAM,mBAAmB,CAAC,WAAW,EAAE,IAAI,CAAC,CAAC;gBAClE,OAAO;oBACL,YAAY;oBACZ,WAAW,EAAE;wBACX,UAAU,EAAE,kBAAmB,CAAC,MAAM;wBACtC,IAAI,EAAE,kBAAmB,CAAC,UAAU;wBACpC,OAAO,EAAE,kBAAmB,CAAC,OAAO,CAAC,MAAM,EAAE;qBAC9C;iBACF,CAAC;aACH,CAAA,CAAC;YAEF,MAAM,GAAG,GAAG,IAAI,OAAO,CACrB,aAAa,EACb,EAAE,iBAAiB,EAAE,MAAM,EAAE,UAAU,EAAE,OAAO,EAAE,EAClDnB,qBAAmB,CACpB,CAAC;YACF,OAAO,IAAImB,iBAAS,CAAC,GAAG,EAAE;gBACxB,UAAU,EAAE,OAAO,aAAP,OAAO,uBAAP,OAAO,CAAE,UAAU;gBAC/B,YAAY,EAAE,OAAO,aAAP,OAAO,uBAAP,OAAO,CAAE,kBAAkB;aAC1C,CAAC,CAAC;SACJ;KAAA;;;;;;;;IASK,kBAAkB,CACtB,iBAAyB,EACzB,MAAc,EACd,UAAgC,EAChC,OAA6C;;YAE7C,MAAM,MAAM,GAAG,MAAM,IAAI,CAAC,WAAW,CACnC,iBAAiB,EACjB,MAAM,EACN,UAAU,EACV,OAAO,CACR,CAAC;YACF,OAAO,MAAM,CAAC,aAAa,EAAE,CAAC;SAC/B;KAAA;;;;;;;IAQK,WAAW,CACf,iBAAyB,EACzB,MAAc,EACd,OAA6C;;YAE7C,MAAM,mBAAmB,GAAG,CAC1B,IAAmC,EACnC,IAA8B;gBAE9B,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;aACrD,CAAA,CAAC;YACF,MAAM,aAAa,GAAG,CACpB,IAAmC,EACnC,IAA8B;;gBAE9B,IAAI,kBAAkB,GAEN,SAAS,CAAC;gBAC1B,MAAM,gBAAgB,GAAG,MAAA,IAAI,CAAC,OAAO,0CAAE,UAAU,CAAC;gBAClD,MAAM,QAAQ,GAAmC,CAC/C,WAA6C,EAC7C,YAAqB;oBAErB,kBAAkB,GAAG,WAAW,CAAC;oBACjC,gBAAgB,aAAhB,gBAAgB,uBAAhB,gBAAgB,CAAG,WAAW,EAAE,YAAY,CAAC,CAAC;iBAC/C,CAAC;gBACF,MAAM,WAAW,mCACZ,IAAI,KACP,OAAO,kCACF,IAAI,CAAC,OAAO,KACf,UAAU,EAAE,QAAQ,MAEvB,CAAC;gBACF,MAAM,YAAY,GAAG,MAAM,mBAAmB,CAAC,WAAW,EAAE,IAAI,CAAC,CAAC;gBAClE,OAAO;oBACL,YAAY;oBACZ,WAAW,EAAE;wBACX,UAAU,EAAE,kBAAmB,CAAC,MAAM;wBACtC,IAAI,EAAE,kBAAmB,CAAC,UAAU;wBACpC,OAAO,EAAE,kBAAmB,CAAC,OAAO,CAAC,MAAM,EAAE;qBAC9C;iBACF,CAAC;aACH,CAAA,CAAC;YAEF,MAAM,GAAG,GAAG,IAAI,OAAO,CACrB,aAAa,EACb,EAAE,iBAAiB,EAAE,MAAM,EAAE,OAAO,EAAE,EACtClB,qBAAmB,CACpB,CAAC;YACF,OAAO,IAAIkB,iBAAS,CAAC,GAAG,EAAE;gBACxB,UAAU,EAAE,OAAO,aAAP,OAAO,uBAAP,OAAO,CAAE,UAAU;gBAC/B,YAAY,EAAE,OAAO,aAAP,OAAO,uBAAP,OAAO,CAAE,kBAAkB;aAC1C,CAAC,CAAC;SACJ;KAAA;;;;;;;IAQK,kBAAkB,CACtB,iBAAyB,EACzB,MAAc,EACd,OAA6C;;YAE7C,MAAM,MAAM,GAAG,MAAM,IAAI,CAAC,WAAW,CAAC,iBAAiB,EAAE,MAAM,EAAE,OAAO,CAAC,CAAC;YAC1E,OAAO,MAAM,CAAC,aAAa,EAAE,CAAC;SAC/B;KAAA;;;;;;;IAQD,GAAG,CACD,iBAAyB,EACzB,MAAc,EACd,OAA0C;QAE1C,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,iBAAiB,EAAE,MAAM,EAAE,OAAO,EAAE,EACtCjB,kBAAgB,CACjB,CAAC;KACH;;;;;;;IAQD,YAAY,CACV,iBAAyB,EACzB,MAAc,EACd,OAAmD;QAEnD,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,iBAAiB,EAAE,MAAM,EAAE,OAAO,EAAE,EACtC,yBAAyB,CAC1B,CAAC;KACH;;;;;;;;IASK,0BAA0B,CAC9B,iBAAyB,EACzB,MAAc,EACd,OAA4D;;YAE5D,MAAM,mBAAmB,GAAG,CAC1B,IAAmC,EACnC,IAA8B;gBAE9B,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;aACrD,CAAA,CAAC;YACF,MAAM,aAAa,GAAG,CACpB,IAAmC,EACnC,IAA8B;;gBAE9B,IAAI,kBAAkB,GAEN,SAAS,CAAC;gBAC1B,MAAM,gBAAgB,GAAG,MAAA,IAAI,CAAC,OAAO,0CAAE,UAAU,CAAC;gBAClD,MAAM,QAAQ,GAAmC,CAC/C,WAA6C,EAC7C,YAAqB;oBAErB,kBAAkB,GAAG,WAAW,CAAC;oBACjC,gBAAgB,aAAhB,gBAAgB,uBAAhB,gBAAgB,CAAG,WAAW,EAAE,YAAY,CAAC,CAAC;iBAC/C,CAAC;gBACF,MAAM,WAAW,mCACZ,IAAI,KACP,OAAO,kCACF,IAAI,CAAC,OAAO,KACf,UAAU,EAAE,QAAQ,MAEvB,CAAC;gBACF,MAAM,YAAY,GAAG,MAAM,mBAAmB,CAAC,WAAW,EAAE,IAAI,CAAC,CAAC;gBAClE,OAAO;oBACL,YAAY;oBACZ,WAAW,EAAE;wBACX,UAAU,EAAE,kBAAmB,CAAC,MAAM;wBACtC,IAAI,EAAE,kBAAmB,CAAC,UAAU;wBACpC,OAAO,EAAE,kBAAmB,CAAC,OAAO,CAAC,MAAM,EAAE;qBAC9C;iBACF,CAAC;aACH,CAAA,CAAC;YAEF,MAAM,GAAG,GAAG,IAAI,OAAO,CACrB,aAAa,EACb,EAAE,iBAAiB,EAAE,MAAM,EAAE,OAAO,EAAE,EACtC,kCAAkC,CACnC,CAAC;YACF,OAAO,IAAIiB,iBAAS,CAAC,GAAG,EAAE;gBACxB,UAAU,EAAE,OAAO,aAAP,OAAO,uBAAP,OAAO,CAAE,UAAU;gBAC/B,YAAY,EAAE,OAAO,aAAP,OAAO,uBAAP,OAAO,CAAE,kBAAkB;aAC1C,CAAC,CAAC;SACJ;KAAA;;;;;;;;IASK,iCAAiC,CACrC,iBAAyB,EACzB,MAAc,EACd,OAA4D;;YAE5D,MAAM,MAAM,GAAG,MAAM,IAAI,CAAC,0BAA0B,CAClD,iBAAiB,EACjB,MAAM,EACN,OAAO,CACR,CAAC;YACF,OAAO,MAAM,CAAC,aAAa,EAAE,CAAC;SAC/B;KAAA;;;;;;;;IASK,eAAe,CACnB,iBAAyB,EACzB,MAAc,EACd,OAAiD;;YAEjD,MAAM,mBAAmB,GAAG,CAC1B,IAAmC,EACnC,IAA8B;gBAE9B,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;aACrD,CAAA,CAAC;YACF,MAAM,aAAa,GAAG,CACpB,IAAmC,EACnC,IAA8B;;gBAE9B,IAAI,kBAAkB,GAEN,SAAS,CAAC;gBAC1B,MAAM,gBAAgB,GAAG,MAAA,IAAI,CAAC,OAAO,0CAAE,UAAU,CAAC;gBAClD,MAAM,QAAQ,GAAmC,CAC/C,WAA6C,EAC7C,YAAqB;oBAErB,kBAAkB,GAAG,WAAW,CAAC;oBACjC,gBAAgB,aAAhB,gBAAgB,uBAAhB,gBAAgB,CAAG,WAAW,EAAE,YAAY,CAAC,CAAC;iBAC/C,CAAC;gBACF,MAAM,WAAW,mCACZ,IAAI,KACP,OAAO,kCACF,IAAI,CAAC,OAAO,KACf,UAAU,EAAE,QAAQ,MAEvB,CAAC;gBACF,MAAM,YAAY,GAAG,MAAM,mBAAmB,CAAC,WAAW,EAAE,IAAI,CAAC,CAAC;gBAClE,OAAO;oBACL,YAAY;oBACZ,WAAW,EAAE;wBACX,UAAU,EAAE,kBAAmB,CAAC,MAAM;wBACtC,IAAI,EAAE,kBAAmB,CAAC,UAAU;wBACpC,OAAO,EAAE,kBAAmB,CAAC,OAAO,CAAC,MAAM,EAAE;qBAC9C;iBACF,CAAC;aACH,CAAA,CAAC;YAEF,MAAM,GAAG,GAAG,IAAI,OAAO,CACrB,aAAa,EACb,EAAE,iBAAiB,EAAE,MAAM,EAAE,OAAO,EAAE,EACtC,uBAAuB,CACxB,CAAC;YACF,OAAO,IAAIA,iBAAS,CAAC,GAAG,EAAE;gBACxB,UAAU,EAAE,OAAO,aAAP,OAAO,uBAAP,OAAO,CAAE,UAAU;gBAC/B,YAAY,EAAE,OAAO,aAAP,OAAO,uBAAP,OAAO,CAAE,kBAAkB;aAC1C,CAAC,CAAC;SACJ;KAAA;;;;;;;;IASK,sBAAsB,CAC1B,iBAAyB,EACzB,MAAc,EACd,OAAiD;;YAEjD,MAAM,MAAM,GAAG,MAAM,IAAI,CAAC,eAAe,CACvC,iBAAiB,EACjB,MAAM,EACN,OAAO,CACR,CAAC;YACF,OAAO,MAAM,CAAC,aAAa,EAAE,CAAC;SAC/B;KAAA;;;;;;;;;;;;IAaD,UAAU,CACR,iBAAyB,EACzB,MAAc,EACd,OAAiD;QAEjD,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,iBAAiB,EAAE,MAAM,EAAE,OAAO,EAAE,EACtC,uBAAuB,CACxB,CAAC;KACH;;;;;;;IAQO,KAAK,CACX,iBAAyB,EACzB,OAA2C;QAE3C,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,iBAAiB,EAAE,OAAO,EAAE,EAC9BjC,mBAAiB,CAClB,CAAC;KACH;;;;;;IAOO,QAAQ,CACd,OAA8C;QAE9C,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CAAC,EAAE,OAAO,EAAE,EAAE,oBAAoB,CAAC,CAAC;KAC5E;;;;;;;IAQO,mBAAmB,CACzB,iBAAyB,EACzB,MAAc,EACd,OAAyD;QAEzD,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,iBAAiB,EAAE,MAAM,EAAE,OAAO,EAAE,EACtCqE,iCAA+B,CAChC,CAAC;KACH;;;;;;;;IASK,aAAa,CACjB,iBAAyB,EACzB,MAAc,EACd,OAA+C;;YAE/C,MAAM,mBAAmB,GAAG,CAC1B,IAAmC,EACnC,IAA8B;gBAE9B,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;aACrD,CAAA,CAAC;YACF,MAAM,aAAa,GAAG,CACpB,IAAmC,EACnC,IAA8B;;gBAE9B,IAAI,kBAAkB,GAEN,SAAS,CAAC;gBAC1B,MAAM,gBAAgB,GAAG,MAAA,IAAI,CAAC,OAAO,0CAAE,UAAU,CAAC;gBAClD,MAAM,QAAQ,GAAmC,CAC/C,WAA6C,EAC7C,YAAqB;oBAErB,kBAAkB,GAAG,WAAW,CAAC;oBACjC,gBAAgB,aAAhB,gBAAgB,uBAAhB,gBAAgB,CAAG,WAAW,EAAE,YAAY,CAAC,CAAC;iBAC/C,CAAC;gBACF,MAAM,WAAW,mCACZ,IAAI,KACP,OAAO,kCACF,IAAI,CAAC,OAAO,KACf,UAAU,EAAE,QAAQ,MAEvB,CAAC;gBACF,MAAM,YAAY,GAAG,MAAM,mBAAmB,CAAC,WAAW,EAAE,IAAI,CAAC,CAAC;gBAClE,OAAO;oBACL,YAAY;oBACZ,WAAW,EAAE;wBACX,UAAU,EAAE,kBAAmB,CAAC,MAAM;wBACtC,IAAI,EAAE,kBAAmB,CAAC,UAAU;wBACpC,OAAO,EAAE,kBAAmB,CAAC,OAAO,CAAC,MAAM,EAAE;qBAC9C;iBACF,CAAC;aACH,CAAA,CAAC;YAEF,MAAM,GAAG,GAAG,IAAI,OAAO,CACrB,aAAa,EACb,EAAE,iBAAiB,EAAE,MAAM,EAAE,OAAO,EAAE,EACtC,qBAAqB,CACtB,CAAC;YACF,OAAO,IAAIpC,iBAAS,CAAC,GAAG,EAAE;gBACxB,UAAU,EAAE,OAAO,aAAP,OAAO,uBAAP,OAAO,CAAE,UAAU;gBAC/B,YAAY,EAAE,OAAO,aAAP,OAAO,uBAAP,OAAO,CAAE,kBAAkB;aAC1C,CAAC,CAAC;SACJ;KAAA;;;;;;;;IASK,oBAAoB,CACxB,iBAAyB,EACzB,MAAc,EACd,OAA+C;;YAE/C,MAAM,MAAM,GAAG,MAAM,IAAI,CAAC,aAAa,CAAC,iBAAiB,EAAE,MAAM,EAAE,OAAO,CAAC,CAAC;YAC5E,OAAO,MAAM,CAAC,aAAa,EAAE,CAAC;SAC/B;KAAA;;;;;;;IAQK,YAAY,CAChB,iBAAyB,EACzB,MAAc,EACd,OAA8C;;YAE9C,MAAM,mBAAmB,GAAG,CAC1B,IAAmC,EACnC,IAA8B;gBAE9B,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;aACrD,CAAA,CAAC;YACF,MAAM,aAAa,GAAG,CACpB,IAAmC,EACnC,IAA8B;;gBAE9B,IAAI,kBAAkB,GAEN,SAAS,CAAC;gBAC1B,MAAM,gBAAgB,GAAG,MAAA,IAAI,CAAC,OAAO,0CAAE,UAAU,CAAC;gBAClD,MAAM,QAAQ,GAAmC,CAC/C,WAA6C,EAC7C,YAAqB;oBAErB,kBAAkB,GAAG,WAAW,CAAC;oBACjC,gBAAgB,aAAhB,gBAAgB,uBAAhB,gBAAgB,CAAG,WAAW,EAAE,YAAY,CAAC,CAAC;iBAC/C,CAAC;gBACF,MAAM,WAAW,mCACZ,IAAI,KACP,OAAO,kCACF,IAAI,CAAC,OAAO,KACf,UAAU,EAAE,QAAQ,MAEvB,CAAC;gBACF,MAAM,YAAY,GAAG,MAAM,mBAAmB,CAAC,WAAW,EAAE,IAAI,CAAC,CAAC;gBAClE,OAAO;oBACL,YAAY;oBACZ,WAAW,EAAE;wBACX,UAAU,EAAE,kBAAmB,CAAC,MAAM;wBACtC,IAAI,EAAE,kBAAmB,CAAC,UAAU;wBACpC,OAAO,EAAE,kBAAmB,CAAC,OAAO,CAAC,MAAM,EAAE;qBAC9C;iBACF,CAAC;aACH,CAAA,CAAC;YAEF,MAAM,GAAG,GAAG,IAAI,OAAO,CACrB,aAAa,EACb,EAAE,iBAAiB,EAAE,MAAM,EAAE,OAAO,EAAE,EACtC,oBAAoB,CACrB,CAAC;YACF,OAAO,IAAIA,iBAAS,CAAC,GAAG,EAAE;gBACxB,UAAU,EAAE,OAAO,aAAP,OAAO,uBAAP,OAAO,CAAE,UAAU;gBAC/B,YAAY,EAAE,OAAO,aAAP,OAAO,uBAAP,OAAO,CAAE,kBAAkB;aAC1C,CAAC,CAAC;SACJ;KAAA;;;;;;;IAQK,mBAAmB,CACvB,iBAAyB,EACzB,MAAc,EACd,OAA8C;;YAE9C,MAAM,MAAM,GAAG,MAAM,IAAI,CAAC,YAAY,CAAC,iBAAiB,EAAE,MAAM,EAAE,OAAO,CAAC,CAAC;YAC3E,OAAO,MAAM,CAAC,aAAa,EAAE,CAAC;SAC/B;KAAA;;;;;;;IAQK,YAAY,CAChB,iBAAyB,EACzB,MAAc,EACd,OAA8C;;YAE9C,MAAM,mBAAmB,GAAG,CAC1B,IAAmC,EACnC,IAA8B;gBAE9B,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;aACrD,CAAA,CAAC;YACF,MAAM,aAAa,GAAG,CACpB,IAAmC,EACnC,IAA8B;;gBAE9B,IAAI,kBAAkB,GAEN,SAAS,CAAC;gBAC1B,MAAM,gBAAgB,GAAG,MAAA,IAAI,CAAC,OAAO,0CAAE,UAAU,CAAC;gBAClD,MAAM,QAAQ,GAAmC,CAC/C,WAA6C,EAC7C,YAAqB;oBAErB,kBAAkB,GAAG,WAAW,CAAC;oBACjC,gBAAgB,aAAhB,gBAAgB,uBAAhB,gBAAgB,CAAG,WAAW,EAAE,YAAY,CAAC,CAAC;iBAC/C,CAAC;gBACF,MAAM,WAAW,mCACZ,IAAI,KACP,OAAO,kCACF,IAAI,CAAC,OAAO,KACf,UAAU,EAAE,QAAQ,MAEvB,CAAC;gBACF,MAAM,YAAY,GAAG,MAAM,mBAAmB,CAAC,WAAW,EAAE,IAAI,CAAC,CAAC;gBAClE,OAAO;oBACL,YAAY;oBACZ,WAAW,EAAE;wBACX,UAAU,EAAE,kBAAmB,CAAC,MAAM;wBACtC,IAAI,EAAE,kBAAmB,CAAC,UAAU;wBACpC,OAAO,EAAE,kBAAmB,CAAC,OAAO,CAAC,MAAM,EAAE;qBAC9C;iBACF,CAAC;aACH,CAAA,CAAC;YAEF,MAAM,GAAG,GAAG,IAAI,OAAO,CACrB,aAAa,EACb,EAAE,iBAAiB,EAAE,MAAM,EAAE,OAAO,EAAE,EACtCqC,sBAAoB,CACrB,CAAC;YACF,OAAO,IAAIrC,iBAAS,CAAC,GAAG,EAAE;gBACxB,UAAU,EAAE,OAAO,aAAP,OAAO,uBAAP,OAAO,CAAE,UAAU;gBAC/B,YAAY,EAAE,OAAO,aAAP,OAAO,uBAAP,OAAO,CAAE,kBAAkB;aAC1C,CAAC,CAAC;SACJ;KAAA;;;;;;;IAQK,mBAAmB,CACvB,iBAAyB,EACzB,MAAc,EACd,OAA8C;;YAE9C,MAAM,MAAM,GAAG,MAAM,IAAI,CAAC,YAAY,CAAC,iBAAiB,EAAE,MAAM,EAAE,OAAO,CAAC,CAAC;YAC3E,OAAO,MAAM,CAAC,aAAa,EAAE,CAAC;SAC/B;KAAA;;;;;;;IAQK,UAAU,CACd,iBAAyB,EACzB,MAAc,EACd,OAA4C;;YAE5C,MAAM,mBAAmB,GAAG,CAC1B,IAAmC,EACnC,IAA8B;gBAE9B,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;aACrD,CAAA,CAAC;YACF,MAAM,aAAa,GAAG,CACpB,IAAmC,EACnC,IAA8B;;gBAE9B,IAAI,kBAAkB,GAEN,SAAS,CAAC;gBAC1B,MAAM,gBAAgB,GAAG,MAAA,IAAI,CAAC,OAAO,0CAAE,UAAU,CAAC;gBAClD,MAAM,QAAQ,GAAmC,CAC/C,WAA6C,EAC7C,YAAqB;oBAErB,kBAAkB,GAAG,WAAW,CAAC;oBACjC,gBAAgB,aAAhB,gBAAgB,uBAAhB,gBAAgB,CAAG,WAAW,EAAE,YAAY,CAAC,CAAC;iBAC/C,CAAC;gBACF,MAAM,WAAW,mCACZ,IAAI,KACP,OAAO,kCACF,IAAI,CAAC,OAAO,KACf,UAAU,EAAE,QAAQ,MAEvB,CAAC;gBACF,MAAM,YAAY,GAAG,MAAM,mBAAmB,CAAC,WAAW,EAAE,IAAI,CAAC,CAAC;gBAClE,OAAO;oBACL,YAAY;oBACZ,WAAW,EAAE;wBACX,UAAU,EAAE,kBAAmB,CAAC,MAAM;wBACtC,IAAI,EAAE,kBAAmB,CAAC,UAAU;wBACpC,OAAO,EAAE,kBAAmB,CAAC,OAAO,CAAC,MAAM,EAAE;qBAC9C;iBACF,CAAC;aACH,CAAA,CAAC;YAEF,MAAM,GAAG,GAAG,IAAI,OAAO,CACrB,aAAa,EACb,EAAE,iBAAiB,EAAE,MAAM,EAAE,OAAO,EAAE,EACtC,kBAAkB,CACnB,CAAC;YACF,OAAO,IAAIA,iBAAS,CAAC,GAAG,EAAE;gBACxB,UAAU,EAAE,OAAO,aAAP,OAAO,uBAAP,OAAO,CAAE,UAAU;gBAC/B,YAAY,EAAE,OAAO,aAAP,OAAO,uBAAP,OAAO,CAAE,kBAAkB;aAC1C,CAAC,CAAC;SACJ;KAAA;;;;;;;IAQK,iBAAiB,CACrB,iBAAyB,EACzB,MAAc,EACd,OAA4C;;YAE5C,MAAM,MAAM,GAAG,MAAM,IAAI,CAAC,UAAU,CAAC,iBAAiB,EAAE,MAAM,EAAE,OAAO,CAAC,CAAC;YACzE,OAAO,MAAM,CAAC,aAAa,EAAE,CAAC;SAC/B;KAAA;;;;;;;IAQK,aAAa,CACjB,iBAAyB,EACzB,MAAc,EACd,OAA+C;;YAE/C,MAAM,mBAAmB,GAAG,CAC1B,IAAmC,EACnC,IAA8B;gBAE9B,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;aACrD,CAAA,CAAC;YACF,MAAM,aAAa,GAAG,CACpB,IAAmC,EACnC,IAA8B;;gBAE9B,IAAI,kBAAkB,GAEN,SAAS,CAAC;gBAC1B,MAAM,gBAAgB,GAAG,MAAA,IAAI,CAAC,OAAO,0CAAE,UAAU,CAAC;gBAClD,MAAM,QAAQ,GAAmC,CAC/C,WAA6C,EAC7C,YAAqB;oBAErB,kBAAkB,GAAG,WAAW,CAAC;oBACjC,gBAAgB,aAAhB,gBAAgB,uBAAhB,gBAAgB,CAAG,WAAW,EAAE,YAAY,CAAC,CAAC;iBAC/C,CAAC;gBACF,MAAM,WAAW,mCACZ,IAAI,KACP,OAAO,kCACF,IAAI,CAAC,OAAO,KACf,UAAU,EAAE,QAAQ,MAEvB,CAAC;gBACF,MAAM,YAAY,GAAG,MAAM,mBAAmB,CAAC,WAAW,EAAE,IAAI,CAAC,CAAC;gBAClE,OAAO;oBACL,YAAY;oBACZ,WAAW,EAAE;wBACX,UAAU,EAAE,kBAAmB,CAAC,MAAM;wBACtC,IAAI,EAAE,kBAAmB,CAAC,UAAU;wBACpC,OAAO,EAAE,kBAAmB,CAAC,OAAO,CAAC,MAAM,EAAE;qBAC9C;iBACF,CAAC;aACH,CAAA,CAAC;YAEF,MAAM,GAAG,GAAG,IAAI,OAAO,CACrB,aAAa,EACb,EAAE,iBAAiB,EAAE,MAAM,EAAE,OAAO,EAAE,EACtC,qBAAqB,CACtB,CAAC;YACF,OAAO,IAAIA,iBAAS,CAAC,GAAG,EAAE;gBACxB,UAAU,EAAE,OAAO,aAAP,OAAO,uBAAP,OAAO,CAAE,UAAU;gBAC/B,YAAY,EAAE,OAAO,aAAP,OAAO,uBAAP,OAAO,CAAE,kBAAkB;aAC1C,CAAC,CAAC;SACJ;KAAA;;;;;;;IAQK,oBAAoB,CACxB,iBAAyB,EACzB,MAAc,EACd,OAA+C;;YAE/C,MAAM,MAAM,GAAG,MAAM,IAAI,CAAC,aAAa,CAAC,iBAAiB,EAAE,MAAM,EAAE,OAAO,CAAC,CAAC;YAC5E,OAAO,MAAM,CAAC,aAAa,EAAE,CAAC;SAC/B;KAAA;;;;;;;IAQK,YAAY,CAChB,iBAAyB,EACzB,MAAc,EACd,OAA8C;;YAE9C,MAAM,mBAAmB,GAAG,CAC1B,IAAmC,EACnC,IAA8B;gBAE9B,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;aACrD,CAAA,CAAC;YACF,MAAM,aAAa,GAAG,CACpB,IAAmC,EACnC,IAA8B;;gBAE9B,IAAI,kBAAkB,GAEN,SAAS,CAAC;gBAC1B,MAAM,gBAAgB,GAAG,MAAA,IAAI,CAAC,OAAO,0CAAE,UAAU,CAAC;gBAClD,MAAM,QAAQ,GAAmC,CAC/C,WAA6C,EAC7C,YAAqB;oBAErB,kBAAkB,GAAG,WAAW,CAAC;oBACjC,gBAAgB,aAAhB,gBAAgB,uBAAhB,gBAAgB,CAAG,WAAW,EAAE,YAAY,CAAC,CAAC;iBAC/C,CAAC;gBACF,MAAM,WAAW,mCACZ,IAAI,KACP,OAAO,kCACF,IAAI,CAAC,OAAO,KACf,UAAU,EAAE,QAAQ,MAEvB,CAAC;gBACF,MAAM,YAAY,GAAG,MAAM,mBAAmB,CAAC,WAAW,EAAE,IAAI,CAAC,CAAC;gBAClE,OAAO;oBACL,YAAY;oBACZ,WAAW,EAAE;wBACX,UAAU,EAAE,kBAAmB,CAAC,MAAM;wBACtC,IAAI,EAAE,kBAAmB,CAAC,UAAU;wBACpC,OAAO,EAAE,kBAAmB,CAAC,OAAO,CAAC,MAAM,EAAE;qBAC9C;iBACF,CAAC;aACH,CAAA,CAAC;YAEF,MAAM,GAAG,GAAG,IAAI,OAAO,CACrB,aAAa,EACb,EAAE,iBAAiB,EAAE,MAAM,EAAE,OAAO,EAAE,EACtC,oBAAoB,CACrB,CAAC;YACF,OAAO,IAAIA,iBAAS,CAAC,GAAG,EAAE;gBACxB,UAAU,EAAE,OAAO,aAAP,OAAO,uBAAP,OAAO,CAAE,UAAU;gBAC/B,YAAY,EAAE,OAAO,aAAP,OAAO,uBAAP,OAAO,CAAE,kBAAkB;aAC1C,CAAC,CAAC;SACJ;KAAA;;;;;;;IAQK,mBAAmB,CACvB,iBAAyB,EACzB,MAAc,EACd,OAA8C;;YAE9C,MAAM,MAAM,GAAG,MAAM,IAAI,CAAC,YAAY,CAAC,iBAAiB,EAAE,MAAM,EAAE,OAAO,CAAC,CAAC;YAC3E,OAAO,MAAM,CAAC,aAAa,EAAE,CAAC;SAC/B;KAAA;;;;;;;IAQD,2BAA2B,CACzB,iBAAyB,EACzB,MAAc,EACd,OAAkE;QAElE,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,iBAAiB,EAAE,MAAM,EAAE,OAAO,EAAE,EACtC,wCAAwC,CACzC,CAAC;KACH;;;;;;;IAQK,uBAAuB,CAC3B,iBAAyB,EACzB,MAAc,EACd,OAAyD;;YAEzD,MAAM,mBAAmB,GAAG,CAC1B,IAAmC,EACnC,IAA8B;gBAE9B,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;aACrD,CAAA,CAAC;YACF,MAAM,aAAa,GAAG,CACpB,IAAmC,EACnC,IAA8B;;gBAE9B,IAAI,kBAAkB,GAEN,SAAS,CAAC;gBAC1B,MAAM,gBAAgB,GAAG,MAAA,IAAI,CAAC,OAAO,0CAAE,UAAU,CAAC;gBAClD,MAAM,QAAQ,GAAmC,CAC/C,WAA6C,EAC7C,YAAqB;oBAErB,kBAAkB,GAAG,WAAW,CAAC;oBACjC,gBAAgB,aAAhB,gBAAgB,uBAAhB,gBAAgB,CAAG,WAAW,EAAE,YAAY,CAAC,CAAC;iBAC/C,CAAC;gBACF,MAAM,WAAW,mCACZ,IAAI,KACP,OAAO,kCACF,IAAI,CAAC,OAAO,KACf,UAAU,EAAE,QAAQ,MAEvB,CAAC;gBACF,MAAM,YAAY,GAAG,MAAM,mBAAmB,CAAC,WAAW,EAAE,IAAI,CAAC,CAAC;gBAClE,OAAO;oBACL,YAAY;oBACZ,WAAW,EAAE;wBACX,UAAU,EAAE,kBAAmB,CAAC,MAAM;wBACtC,IAAI,EAAE,kBAAmB,CAAC,UAAU;wBACpC,OAAO,EAAE,kBAAmB,CAAC,OAAO,CAAC,MAAM,EAAE;qBAC9C;iBACF,CAAC;aACH,CAAA,CAAC;YAEF,MAAM,GAAG,GAAG,IAAI,OAAO,CACrB,aAAa,EACb,EAAE,iBAAiB,EAAE,MAAM,EAAE,OAAO,EAAE,EACtC,+BAA+B,CAChC,CAAC;YACF,OAAO,IAAIA,iBAAS,CAAC,GAAG,EAAE;gBACxB,UAAU,EAAE,OAAO,aAAP,OAAO,uBAAP,OAAO,CAAE,UAAU;gBAC/B,YAAY,EAAE,OAAO,aAAP,OAAO,uBAAP,OAAO,CAAE,kBAAkB;aAC1C,CAAC,CAAC;SACJ;KAAA;;;;;;;IAQK,8BAA8B,CAClC,iBAAyB,EACzB,MAAc,EACd,OAAyD;;YAEzD,MAAM,MAAM,GAAG,MAAM,IAAI,CAAC,uBAAuB,CAC/C,iBAAiB,EACjB,MAAM,EACN,OAAO,CACR,CAAC;YACF,OAAO,MAAM,CAAC,aAAa,EAAE,CAAC;SAC/B;KAAA;;;;;;;IAQD,gBAAgB,CACd,iBAAyB,EACzB,MAAc,EACd,OAAuD;QAEvD,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,iBAAiB,EAAE,MAAM,EAAE,OAAO,EAAE,EACtC,6BAA6B,CAC9B,CAAC;KACH;;;;;;;IAQK,kBAAkB,CACtB,iBAAyB,EACzB,MAAc,EACd,OAAoD;;YAOpD,MAAM,mBAAmB,GAAG,CAC1B,IAAmC,EACnC,IAA8B;gBAE9B,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;aACrD,CAAA,CAAC;YACF,MAAM,aAAa,GAAG,CACpB,IAAmC,EACnC,IAA8B;;gBAE9B,IAAI,kBAAkB,GAEN,SAAS,CAAC;gBAC1B,MAAM,gBAAgB,GAAG,MAAA,IAAI,CAAC,OAAO,0CAAE,UAAU,CAAC;gBAClD,MAAM,QAAQ,GAAmC,CAC/C,WAA6C,EAC7C,YAAqB;oBAErB,kBAAkB,GAAG,WAAW,CAAC;oBACjC,gBAAgB,aAAhB,gBAAgB,uBAAhB,gBAAgB,CAAG,WAAW,EAAE,YAAY,CAAC,CAAC;iBAC/C,CAAC;gBACF,MAAM,WAAW,mCACZ,IAAI,KACP,OAAO,kCACF,IAAI,CAAC,OAAO,KACf,UAAU,EAAE,QAAQ,MAEvB,CAAC;gBACF,MAAM,YAAY,GAAG,MAAM,mBAAmB,CAAC,WAAW,EAAE,IAAI,CAAC,CAAC;gBAClE,OAAO;oBACL,YAAY;oBACZ,WAAW,EAAE;wBACX,UAAU,EAAE,kBAAmB,CAAC,MAAM;wBACtC,IAAI,EAAE,kBAAmB,CAAC,UAAU;wBACpC,OAAO,EAAE,kBAAmB,CAAC,OAAO,CAAC,MAAM,EAAE;qBAC9C;iBACF,CAAC;aACH,CAAA,CAAC;YAEF,MAAM,GAAG,GAAG,IAAI,OAAO,CACrB,aAAa,EACb,EAAE,iBAAiB,EAAE,MAAM,EAAE,OAAO,EAAE,EACtC,0BAA0B,CAC3B,CAAC;YACF,OAAO,IAAIA,iBAAS,CAAC,GAAG,EAAE;gBACxB,UAAU,EAAE,OAAO,aAAP,OAAO,uBAAP,OAAO,CAAE,UAAU;gBAC/B,YAAY,EAAE,OAAO,aAAP,OAAO,uBAAP,OAAO,CAAE,kBAAkB;gBACzC,yBAAyB,EAAE,UAAU;aACtC,CAAC,CAAC;SACJ;KAAA;;;;;;;IAQK,yBAAyB,CAC7B,iBAAyB,EACzB,MAAc,EACd,OAAoD;;YAEpD,MAAM,MAAM,GAAG,MAAM,IAAI,CAAC,kBAAkB,CAC1C,iBAAiB,EACjB,MAAM,EACN,OAAO,CACR,CAAC;YACF,OAAO,MAAM,CAAC,aAAa,EAAE,CAAC;SAC/B;KAAA;;;;;;;;IASK,mBAAmB,CACvB,iBAAyB,EACzB,MAAc,EACd,mBAA2D,EAC3D,OAAqD;;YAOrD,MAAM,mBAAmB,GAAG,CAC1B,IAAmC,EACnC,IAA8B;gBAE9B,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;aACrD,CAAA,CAAC;YACF,MAAM,aAAa,GAAG,CACpB,IAAmC,EACnC,IAA8B;;gBAE9B,IAAI,kBAAkB,GAEN,SAAS,CAAC;gBAC1B,MAAM,gBAAgB,GAAG,MAAA,IAAI,CAAC,OAAO,0CAAE,UAAU,CAAC;gBAClD,MAAM,QAAQ,GAAmC,CAC/C,WAA6C,EAC7C,YAAqB;oBAErB,kBAAkB,GAAG,WAAW,CAAC;oBACjC,gBAAgB,aAAhB,gBAAgB,uBAAhB,gBAAgB,CAAG,WAAW,EAAE,YAAY,CAAC,CAAC;iBAC/C,CAAC;gBACF,MAAM,WAAW,mCACZ,IAAI,KACP,OAAO,kCACF,IAAI,CAAC,OAAO,KACf,UAAU,EAAE,QAAQ,MAEvB,CAAC;gBACF,MAAM,YAAY,GAAG,MAAM,mBAAmB,CAAC,WAAW,EAAE,IAAI,CAAC,CAAC;gBAClE,OAAO;oBACL,YAAY;oBACZ,WAAW,EAAE;wBACX,UAAU,EAAE,kBAAmB,CAAC,MAAM;wBACtC,IAAI,EAAE,kBAAmB,CAAC,UAAU;wBACpC,OAAO,EAAE,kBAAmB,CAAC,OAAO,CAAC,MAAM,EAAE;qBAC9C;iBACF,CAAC;aACH,CAAA,CAAC;YAEF,MAAM,GAAG,GAAG,IAAI,OAAO,CACrB,aAAa,EACb,EAAE,iBAAiB,EAAE,MAAM,EAAE,mBAAmB,EAAE,OAAO,EAAE,EAC3D,2BAA2B,CAC5B,CAAC;YACF,OAAO,IAAIA,iBAAS,CAAC,GAAG,EAAE;gBACxB,UAAU,EAAE,OAAO,aAAP,OAAO,uBAAP,OAAO,CAAE,UAAU;gBAC/B,YAAY,EAAE,OAAO,aAAP,OAAO,uBAAP,OAAO,CAAE,kBAAkB;gBACzC,yBAAyB,EAAE,UAAU;aACtC,CAAC,CAAC;SACJ;KAAA;;;;;;;;IASK,0BAA0B,CAC9B,iBAAyB,EACzB,MAAc,EACd,mBAA2D,EAC3D,OAAqD;;YAErD,MAAM,MAAM,GAAG,MAAM,IAAI,CAAC,mBAAmB,CAC3C,iBAAiB,EACjB,MAAM,EACN,mBAAmB,EACnB,OAAO,CACR,CAAC;YACF,OAAO,MAAM,CAAC,aAAa,EAAE,CAAC;SAC/B;KAAA;;;;;;;;IASK,eAAe,CACnB,iBAAyB,EACzB,MAAc,EACd,UAA2B,EAC3B,OAAiD;;YAOjD,MAAM,mBAAmB,GAAG,CAC1B,IAAmC,EACnC,IAA8B;gBAE9B,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;aACrD,CAAA,CAAC;YACF,MAAM,aAAa,GAAG,CACpB,IAAmC,EACnC,IAA8B;;gBAE9B,IAAI,kBAAkB,GAEN,SAAS,CAAC;gBAC1B,MAAM,gBAAgB,GAAG,MAAA,IAAI,CAAC,OAAO,0CAAE,UAAU,CAAC;gBAClD,MAAM,QAAQ,GAAmC,CAC/C,WAA6C,EAC7C,YAAqB;oBAErB,kBAAkB,GAAG,WAAW,CAAC;oBACjC,gBAAgB,aAAhB,gBAAgB,uBAAhB,gBAAgB,CAAG,WAAW,EAAE,YAAY,CAAC,CAAC;iBAC/C,CAAC;gBACF,MAAM,WAAW,mCACZ,IAAI,KACP,OAAO,kCACF,IAAI,CAAC,OAAO,KACf,UAAU,EAAE,QAAQ,MAEvB,CAAC;gBACF,MAAM,YAAY,GAAG,MAAM,mBAAmB,CAAC,WAAW,EAAE,IAAI,CAAC,CAAC;gBAClE,OAAO;oBACL,YAAY;oBACZ,WAAW,EAAE;wBACX,UAAU,EAAE,kBAAmB,CAAC,MAAM;wBACtC,IAAI,EAAE,kBAAmB,CAAC,UAAU;wBACpC,OAAO,EAAE,kBAAmB,CAAC,OAAO,CAAC,MAAM,EAAE;qBAC9C;iBACF,CAAC;aACH,CAAA,CAAC;YAEF,MAAM,GAAG,GAAG,IAAI,OAAO,CACrB,aAAa,EACb,EAAE,iBAAiB,EAAE,MAAM,EAAE,UAAU,EAAE,OAAO,EAAE,EAClD,uBAAuB,CACxB,CAAC;YACF,OAAO,IAAIA,iBAAS,CAAC,GAAG,EAAE;gBACxB,UAAU,EAAE,OAAO,aAAP,OAAO,uBAAP,OAAO,CAAE,UAAU;gBAC/B,YAAY,EAAE,OAAO,aAAP,OAAO,uBAAP,OAAO,CAAE,kBAAkB;gBACzC,yBAAyB,EAAE,UAAU;aACtC,CAAC,CAAC;SACJ;KAAA;;;;;;;;IASK,sBAAsB,CAC1B,iBAAyB,EACzB,MAAc,EACd,UAA2B,EAC3B,OAAiD;;YAEjD,MAAM,MAAM,GAAG,MAAM,IAAI,CAAC,eAAe,CACvC,iBAAiB,EACjB,MAAM,EACN,UAAU,EACV,OAAO,CACR,CAAC;YACF,OAAO,MAAM,CAAC,aAAa,EAAE,CAAC;SAC/B;KAAA;;;;;;;IAQO,mBAAmB,CACzB,QAAgB,EAChB,QAAgB,EAChB,OAAyD;QAEzD,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,QAAQ,EAAE,QAAQ,EAAE,OAAO,EAAE,EAC/B,+BAA+B,CAChC,CAAC;KACH;;;;;;;IAQO,SAAS,CACf,iBAAyB,EACzB,QAAgB,EAChB,OAA+C;QAE/C,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,iBAAiB,EAAE,QAAQ,EAAE,OAAO,EAAE,EACxCiC,uBAAqB,CACtB,CAAC;KACH;;;;;;IAOO,YAAY,CAClB,QAAgB,EAChB,OAAkD;QAElD,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,QAAQ,EAAE,OAAO,EAAE,EACrB,wBAAwB,CACzB,CAAC;KACH;CACF;AACD;AACA,MAAMjE,YAAU,GAAGP,2BAA2B,CAAC,OAAO,cAAc,KAAK,CAAC,CAAC;AAE3E,MAAM,2BAA2B,GAA6B;IAC5D,IAAI,EACF,kGAAkG;IACpG,UAAU,EAAE,KAAK;IACjB,SAAS,EAAE;QACT,GAAG,EAAE;YACH,UAAU,EAAE6E,wBAAgC;SAC7C;QACD,OAAO,EAAE;YACP,UAAU,EAAE3E,UAAkB;SAC/B;KACF;IACD,eAAe,EAAE,CAACC,UAAqB,CAAC;IACxC,aAAa,EAAE;QACbC,KAAgB;QAChBQ,cAAyB;QACzB8D,SAAoB;KACrB;IACD,gBAAgB,EAAE,CAACrE,MAAiB,CAAC;gBACrCE,YAAU;CACX,CAAC;AACF,MAAM,oBAAoB,GAA6B;IACrD,IAAI,EACF,iIAAiI;IACnI,UAAU,EAAE,MAAM;IAClB,SAAS,EAAE;QACT,GAAG,EAAE;YACH,UAAU,EAAEuE,2BAAmC;SAChD;QACD,GAAG,EAAE;YACH,UAAU,EAAEA,2BAAmC;SAChD;QACD,GAAG,EAAE;YACH,UAAU,EAAEA,2BAAmC;SAChD;QACD,GAAG,EAAE;YACH,UAAU,EAAEA,2BAAmC;SAChD;QACD,OAAO,EAAE;YACP,UAAU,EAAE5E,UAAkB;SAC/B;KACF;IACD,WAAW,EAAE6E,YAAuB;IACpC,eAAe,EAAE,CAAC5E,UAAqB,CAAC;IACxC,aAAa,EAAE;QACbC,KAAgB;QAChBM,iBAA4B;QAC5BE,cAAyB;QACzBiD,MAAiB;KAClB;IACD,gBAAgB,EAAE,CAACxD,MAAiB,EAAEQ,WAAsB,CAAC;IAC7D,SAAS,EAAE,MAAM;gBACjBN,YAAU;CACX,CAAC;AACF,MAAMY,6BAA2B,GAA6B;IAC5D,IAAI,EACF,yHAAyH;IAC3H,UAAU,EAAE,KAAK;IACjB,SAAS,EAAE;QACT,GAAG,EAAE;YACH,UAAU,EAAE6D,cAAsB;SACnC;QACD,GAAG,EAAE;YACH,UAAU,EAAEA,cAAsB;SACnC;QACD,GAAG,EAAE;YACH,UAAU,EAAEA,cAAsB;SACnC;QACD,GAAG,EAAE;YACH,UAAU,EAAEA,cAAsB;SACnC;QACD,OAAO,EAAE;YACP,UAAU,EAAE9E,UAAkB;SAC/B;KACF;IACD,WAAW,EAAE+E,YAAuB;IACpC,eAAe,EAAE,CAAC9E,UAAqB,CAAC;IACxC,aAAa,EAAE;QACbC,KAAgB;QAChBM,iBAA4B;QAC5BE,cAAyB;QACzBiD,MAAiB;KAClB;IACD,gBAAgB,EAAE,CAACxD,MAAiB,EAAEQ,WAAsB,CAAC;IAC7D,SAAS,EAAE,MAAM;gBACjBN,YAAU;CACX,CAAC;AACF,MAAMa,qBAAmB,GAA6B;IACpD,IAAI,EACF,yHAAyH;IAC3H,UAAU,EAAE,OAAO;IACnB,SAAS,EAAE;QACT,GAAG,EAAE;YACH,UAAU,EAAE4D,cAAsB;SACnC;QACD,GAAG,EAAE;YACH,UAAU,EAAEA,cAAsB;SACnC;QACD,GAAG,EAAE;YACH,UAAU,EAAEA,cAAsB;SACnC;QACD,GAAG,EAAE;YACH,UAAU,EAAEA,cAAsB;SACnC;QACD,OAAO,EAAE;YACP,UAAU,EAAE9E,UAAkB;SAC/B;KACF;IACD,WAAW,EAAEgF,YAAuB;IACpC,eAAe,EAAE,CAAC/E,UAAqB,CAAC;IACxC,aAAa,EAAE;QACbC,KAAgB;QAChBM,iBAA4B;QAC5BE,cAAyB;QACzBiD,MAAiB;KAClB;IACD,gBAAgB,EAAE,CAACxD,MAAiB,EAAEQ,WAAsB,CAAC;IAC7D,SAAS,EAAE,MAAM;gBACjBN,YAAU;CACX,CAAC;AACF,MAAMc,qBAAmB,GAA6B;IACpD,IAAI,EACF,yHAAyH;IAC3H,UAAU,EAAE,QAAQ;IACpB,SAAS,EAAE;QACT,GAAG,EAAE,EAAE;QACP,GAAG,EAAE,EAAE;QACP,GAAG,EAAE,EAAE;QACP,GAAG,EAAE,EAAE;QACP,OAAO,EAAE;YACP,UAAU,EAAEnB,UAAkB;SAC/B;KACF;IACD,eAAe,EAAE,CAACC,UAAqB,EAAEgF,aAAwB,CAAC;IAClE,aAAa,EAAE;QACb/E,KAAgB;QAChBM,iBAA4B;QAC5BE,cAAyB;QACzBiD,MAAiB;KAClB;IACD,gBAAgB,EAAE,CAACxD,MAAiB,CAAC;gBACrCE,YAAU;CACX,CAAC;AACF,MAAMe,kBAAgB,GAA6B;IACjD,IAAI,EACF,yHAAyH;IAC3H,UAAU,EAAE,KAAK;IACjB,SAAS,EAAE;QACT,GAAG,EAAE;YACH,UAAU,EAAE0D,cAAsB;SACnC;QACD,OAAO,EAAE;YACP,UAAU,EAAE9E,UAAkB;SAC/B;KACF;IACD,eAAe,EAAE,CAACC,UAAqB,EAAEkC,OAAkB,CAAC;IAC5D,aAAa,EAAE;QACbjC,KAAgB;QAChBM,iBAA4B;QAC5BE,cAAyB;QACzBiD,MAAiB;KAClB;IACD,gBAAgB,EAAE,CAACxD,MAAiB,CAAC;gBACrCE,YAAU;CACX,CAAC;AACF,MAAM,yBAAyB,GAA6B;IAC1D,IAAI,EACF,sIAAsI;IACxI,UAAU,EAAE,KAAK;IACjB,SAAS,EAAE;QACT,GAAG,EAAE;YACH,UAAU,EAAE6E,0BAAkC;SAC/C;QACD,OAAO,EAAE;YACP,UAAU,EAAElF,UAAkB;SAC/B;KACF;IACD,eAAe,EAAE,CAACC,UAAqB,CAAC;IACxC,aAAa,EAAE;QACbC,KAAgB;QAChBM,iBAA4B;QAC5BE,cAAyB;QACzBiD,MAAiB;KAClB;IACD,gBAAgB,EAAE,CAACxD,MAAiB,CAAC;gBACrCE,YAAU;CACX,CAAC;AACF,MAAM,kCAAkC,GAA6B;IACnE,IAAI,EACF,+IAA+I;IACjJ,UAAU,EAAE,MAAM;IAClB,SAAS,EAAE;QACT,GAAG,EAAE,EAAE;QACP,GAAG,EAAE,EAAE;QACP,GAAG,EAAE,EAAE;QACP,GAAG,EAAE,EAAE;QACP,OAAO,EAAE;YACP,UAAU,EAAEL,UAAkB;SAC/B;KACF;IACD,eAAe,EAAE,CAACC,UAAqB,CAAC;IACxC,aAAa,EAAE;QACbC,KAAgB;QAChBM,iBAA4B;QAC5BE,cAAyB;QACzBiD,MAAiB;KAClB;IACD,gBAAgB,EAAE,CAACxD,MAAiB,CAAC;gBACrCE,YAAU;CACX,CAAC;AACF,MAAM,uBAAuB,GAA6B;IACxD,IAAI,EACF,oIAAoI;IACtI,UAAU,EAAE,MAAM;IAClB,SAAS,EAAE;QACT,GAAG,EAAE,EAAE;QACP,GAAG,EAAE,EAAE;QACP,GAAG,EAAE,EAAE;QACP,GAAG,EAAE,EAAE;QACP,OAAO,EAAE;YACP,UAAU,EAAEL,UAAkB;SAC/B;KACF;IACD,eAAe,EAAE,CAACC,UAAqB,EAAEkF,SAAoB,CAAC;IAC9D,aAAa,EAAE;QACbjF,KAAgB;QAChBM,iBAA4B;QAC5BE,cAAyB;QACzBiD,MAAiB;KAClB;IACD,gBAAgB,EAAE,CAACxD,MAAiB,CAAC;gBACrCE,YAAU;CACX,CAAC;AACF,MAAM,uBAAuB,GAA6B;IACxD,IAAI,EACF,oIAAoI;IACtI,UAAU,EAAE,MAAM;IAClB,SAAS,EAAE;QACT,GAAG,EAAE,EAAE;QACP,OAAO,EAAE;YACP,UAAU,EAAEL,UAAkB;SAC/B;KACF;IACD,eAAe,EAAE,CAACC,UAAqB,CAAC;IACxC,aAAa,EAAE;QACbC,KAAgB;QAChBM,iBAA4B;QAC5BE,cAAyB;QACzBiD,MAAiB;KAClB;IACD,gBAAgB,EAAE,CAACxD,MAAiB,CAAC;gBACrCE,YAAU;CACX,CAAC;AACF,MAAMD,mBAAiB,GAA6B;IAClD,IAAI,EACF,gHAAgH;IAClH,UAAU,EAAE,KAAK;IACjB,SAAS,EAAE;QACT,GAAG,EAAE;YACH,UAAU,EAAEuE,wBAAgC;SAC7C;QACD,OAAO,EAAE;YACP,UAAU,EAAE3E,UAAkB;SAC/B;KACF;IACD,eAAe,EAAE,CAACC,UAAqB,EAAEqD,MAAiB,CAAC;IAC3D,aAAa,EAAE;QACbpD,KAAgB;QAChBM,iBAA4B;QAC5BE,cAAyB;KAC1B;IACD,gBAAgB,EAAE,CAACP,MAAiB,CAAC;gBACrCE,YAAU;CACX,CAAC;AACF,MAAM,oBAAoB,GAA6B;IACrD,IAAI,EACF,6EAA6E;IAC/E,UAAU,EAAE,KAAK;IACjB,SAAS,EAAE;QACT,GAAG,EAAE;YACH,UAAU,EAAEsE,wBAAgC;SAC7C;QACD,OAAO,EAAE;YACP,UAAU,EAAE3E,UAAkB;SAC/B;KACF;IACD,eAAe,EAAE;QACfC,UAAqB;QACrBqD,MAAiB;QACjB8B,UAAqB;KACtB;IACD,aAAa,EAAE,CAAClF,KAAgB,EAAEQ,cAAyB,CAAC;IAC5D,gBAAgB,EAAE,CAACP,MAAiB,CAAC;gBACrCE,YAAU;CACX,CAAC;AACF,MAAMoE,iCAA+B,GAA6B;IAChE,IAAI,EACF,iIAAiI;IACnI,UAAU,EAAE,KAAK;IACjB,SAAS,EAAE;QACT,GAAG,EAAE;YACH,UAAU,EAAE1D,4BAAoC;SACjD;QACD,OAAO,EAAE;YACP,UAAU,EAAEf,UAAkB;SAC/B;KACF;IACD,eAAe,EAAE,CAACC,UAAqB,CAAC;IACxC,aAAa,EAAE;QACbC,KAAgB;QAChBM,iBAA4B;QAC5BE,cAAyB;QACzBiD,MAAiB;KAClB;IACD,gBAAgB,EAAE,CAACxD,MAAiB,CAAC;gBACrCE,YAAU;CACX,CAAC;AACF,MAAM,qBAAqB,GAA6B;IACtD,IAAI,EACF,kIAAkI;IACpI,UAAU,EAAE,MAAM;IAClB,SAAS,EAAE;QACT,GAAG,EAAE,EAAE;QACP,GAAG,EAAE,EAAE;QACP,GAAG,EAAE,EAAE;QACP,GAAG,EAAE,EAAE;QACP,OAAO,EAAE;YACP,UAAU,EAAEL,UAAkB;SAC/B;KACF;IACD,eAAe,EAAE,CAACC,UAAqB,EAAEoF,YAAuB,CAAC;IACjE,aAAa,EAAE;QACbnF,KAAgB;QAChBM,iBAA4B;QAC5BE,cAAyB;QACzBiD,MAAiB;KAClB;IACD,gBAAgB,EAAE,CAACxD,MAAiB,CAAC;gBACrCE,YAAU;CACX,CAAC;AACF,MAAM,oBAAoB,GAA6B;IACrD,IAAI,EACF,iIAAiI;IACnI,UAAU,EAAE,MAAM;IAClB,SAAS,EAAE;QACT,GAAG,EAAE,EAAE;QACP,GAAG,EAAE,EAAE;QACP,GAAG,EAAE,EAAE;QACP,GAAG,EAAE,EAAE;QACP,OAAO,EAAE;YACP,UAAU,EAAEL,UAAkB;SAC/B;KACF;IACD,eAAe,EAAE,CAACC,UAAqB,CAAC;IACxC,aAAa,EAAE;QACbC,KAAgB;QAChBM,iBAA4B;QAC5BE,cAAyB;QACzBiD,MAAiB;KAClB;IACD,gBAAgB,EAAE,CAACxD,MAAiB,CAAC;gBACrCE,YAAU;CACX,CAAC;AACF,MAAMqE,sBAAoB,GAA6B;IACrD,IAAI,EACF,iIAAiI;IACnI,UAAU,EAAE,MAAM;IAClB,SAAS,EAAE;QACT,GAAG,EAAE,EAAE;QACP,GAAG,EAAE,EAAE;QACP,GAAG,EAAE,EAAE;QACP,GAAG,EAAE,EAAE;QACP,OAAO,EAAE;YACP,UAAU,EAAE1E,UAAkB;SAC/B;KACF;IACD,eAAe,EAAE,CAACC,UAAqB,CAAC;IACxC,aAAa,EAAE;QACbC,KAAgB;QAChBM,iBAA4B;QAC5BE,cAAyB;QACzBiD,MAAiB;KAClB;IACD,gBAAgB,EAAE,CAACxD,MAAiB,CAAC;gBACrCE,YAAU;CACX,CAAC;AACF,MAAM,kBAAkB,GAA6B;IACnD,IAAI,EACF,+HAA+H;IACjI,UAAU,EAAE,MAAM;IAClB,SAAS,EAAE;QACT,GAAG,EAAE,EAAE;QACP,GAAG,EAAE,EAAE;QACP,GAAG,EAAE,EAAE;QACP,GAAG,EAAE,EAAE;QACP,OAAO,EAAE;YACP,UAAU,EAAEL,UAAkB;SAC/B;KACF;IACD,eAAe,EAAE,CAACC,UAAqB,CAAC;IACxC,aAAa,EAAE;QACbC,KAAgB;QAChBM,iBAA4B;QAC5BE,cAAyB;QACzBiD,MAAiB;KAClB;IACD,gBAAgB,EAAE,CAACxD,MAAiB,CAAC;gBACrCE,YAAU;CACX,CAAC;AACF,MAAM,qBAAqB,GAA6B;IACtD,IAAI,EACF,kIAAkI;IACpI,UAAU,EAAE,MAAM;IAClB,SAAS,EAAE;QACT,GAAG,EAAE,EAAE;QACP,GAAG,EAAE,EAAE;QACP,GAAG,EAAE,EAAE;QACP,GAAG,EAAE,EAAE;QACP,OAAO,EAAE;YACP,UAAU,EAAEL,UAAkB;SAC/B;KACF;IACD,eAAe,EAAE,CAACC,UAAqB,CAAC;IACxC,aAAa,EAAE;QACbC,KAAgB;QAChBM,iBAA4B;QAC5BE,cAAyB;QACzBiD,MAAiB;KAClB;IACD,gBAAgB,EAAE,CAACxD,MAAiB,CAAC;gBACrCE,YAAU;CACX,CAAC;AACF,MAAM,oBAAoB,GAA6B;IACrD,IAAI,EACF,iIAAiI;IACnI,UAAU,EAAE,MAAM;IAClB,SAAS,EAAE;QACT,GAAG,EAAE,EAAE;QACP,GAAG,EAAE,EAAE;QACP,GAAG,EAAE,EAAE;QACP,GAAG,EAAE,EAAE;QACP,OAAO,EAAE;YACP,UAAU,EAAEL,UAAkB;SAC/B;KACF;IACD,WAAW,EAAEsF,YAAuB;IACpC,eAAe,EAAE,CAACrF,UAAqB,CAAC;IACxC,aAAa,EAAE;QACbC,KAAgB;QAChBM,iBAA4B;QAC5BE,cAAyB;QACzBiD,MAAiB;KAClB;IACD,gBAAgB,EAAE,CAACxD,MAAiB,EAAEQ,WAAsB,CAAC;IAC7D,SAAS,EAAE,MAAM;gBACjBN,YAAU;CACX,CAAC;AACF,MAAM,wCAAwC,GAA6B;IACzE,IAAI,EACF,qJAAqJ;IACvJ,UAAU,EAAE,MAAM;IAClB,SAAS,EAAE;QACT,GAAG,EAAE;YACH,UAAU,EAAEkF,iCAAyC;SACtD;QACD,OAAO,EAAE;YACP,UAAU,EAAEvF,UAAkB;SAC/B;KACF;IACD,eAAe,EAAE;QACfC,UAAqB;QACrBuF,6BAAwC;KACzC;IACD,aAAa,EAAE;QACbtF,KAAgB;QAChBM,iBAA4B;QAC5BE,cAAyB;QACzBiD,MAAiB;KAClB;IACD,gBAAgB,EAAE,CAACxD,MAAiB,CAAC;gBACrCE,YAAU;CACX,CAAC;AACF,MAAM,+BAA+B,GAA6B;IAChE,IAAI,EACF,4IAA4I;IAC9I,UAAU,EAAE,MAAM;IAClB,SAAS,EAAE;QACT,GAAG,EAAE,EAAE;QACP,GAAG,EAAE,EAAE;QACP,GAAG,EAAE,EAAE;QACP,GAAG,EAAE,EAAE;QACP,OAAO,EAAE;YACP,UAAU,EAAEL,UAAkB;SAC/B;KACF;IACD,eAAe,EAAE,CAACC,UAAqB,CAAC;IACxC,aAAa,EAAE;QACbC,KAAgB;QAChBM,iBAA4B;QAC5BE,cAAyB;QACzBiD,MAAiB;KAClB;IACD,gBAAgB,EAAE,CAACxD,MAAiB,CAAC;gBACrCE,YAAU;CACX,CAAC;AACF,MAAM,6BAA6B,GAA6B;IAC9D,IAAI,EACF,0IAA0I;IAC5I,UAAU,EAAE,MAAM;IAClB,SAAS,EAAE;QACT,GAAG,EAAE,EAAE;QACP,OAAO,EAAE;YACP,UAAU,EAAEL,UAAkB;SAC/B;KACF;IACD,eAAe,EAAE,CAACC,UAAqB,CAAC;IACxC,aAAa,EAAE;QACbC,KAAgB;QAChBM,iBAA4B;QAC5BE,cAAyB;QACzBiD,MAAiB;KAClB;IACD,gBAAgB,EAAE,CAACxD,MAAiB,CAAC;gBACrCE,YAAU;CACX,CAAC;AACF,MAAM,0BAA0B,GAA6B;IAC3D,IAAI,EACF,uIAAuI;IACzI,UAAU,EAAE,MAAM;IAClB,SAAS,EAAE;QACT,GAAG,EAAE;YACH,UAAU,EAAEoF,iCAAyC;SACtD;QACD,GAAG,EAAE;YACH,UAAU,EAAEA,iCAAyC;SACtD;QACD,GAAG,EAAE;YACH,UAAU,EAAEA,iCAAyC;SACtD;QACD,GAAG,EAAE;YACH,UAAU,EAAEA,iCAAyC;SACtD;QACD,OAAO,EAAE;YACP,UAAU,EAAEzF,UAAkB;SAC/B;KACF;IACD,eAAe,EAAE,CAACC,UAAqB,CAAC;IACxC,aAAa,EAAE;QACbC,KAAgB;QAChBM,iBAA4B;QAC5BE,cAAyB;QACzBiD,MAAiB;KAClB;IACD,gBAAgB,EAAE,CAACxD,MAAiB,CAAC;gBACrCE,YAAU;CACX,CAAC;AACF,MAAM,2BAA2B,GAA6B;IAC5D,IAAI,EACF,wIAAwI;IAC1I,UAAU,EAAE,MAAM;IAClB,SAAS,EAAE;QACT,GAAG,EAAE;YACH,UAAU,EAAEqF,kCAA0C;SACvD;QACD,GAAG,EAAE;YACH,UAAU,EAAEA,kCAA0C;SACvD;QACD,GAAG,EAAE;YACH,UAAU,EAAEA,kCAA0C;SACvD;QACD,GAAG,EAAE;YACH,UAAU,EAAEA,kCAA0C;SACvD;QACD,OAAO,EAAE;YACP,UAAU,EAAE1F,UAAkB;SAC/B;KACF;IACD,WAAW,EAAE2F,mBAA8B;IAC3C,eAAe,EAAE,CAAC1F,UAAqB,CAAC;IACxC,aAAa,EAAE;QACbC,KAAgB;QAChBM,iBAA4B;QAC5BE,cAAyB;QACzBiD,MAAiB;KAClB;IACD,gBAAgB,EAAE,CAACxD,MAAiB,EAAEQ,WAAsB,CAAC;IAC7D,SAAS,EAAE,MAAM;gBACjBN,YAAU;CACX,CAAC;AACF,MAAM,uBAAuB,GAA6B;IACxD,IAAI,EACF,oIAAoI;IACtI,UAAU,EAAE,MAAM;IAClB,SAAS,EAAE;QACT,GAAG,EAAE;YACH,UAAU,EAAEuF,gBAAwB;SACrC;QACD,GAAG,EAAE;YACH,UAAU,EAAEA,gBAAwB;SACrC;QACD,GAAG,EAAE;YACH,UAAU,EAAEA,gBAAwB;SACrC;QACD,GAAG,EAAE;YACH,UAAU,EAAEA,gBAAwB;SACrC;KACF;IACD,WAAW,EAAEC,YAAuB;IACpC,eAAe,EAAE,CAAC5F,UAAqB,CAAC;IACxC,aAAa,EAAE;QACbC,KAAgB;QAChBM,iBAA4B;QAC5BE,cAAyB;QACzBiD,MAAiB;KAClB;IACD,gBAAgB,EAAE,CAAChD,WAAsB,EAAEmF,OAAkB,CAAC;IAC9D,SAAS,EAAE,MAAM;gBACjBzF,YAAU;CACX,CAAC;AACF,MAAM,+BAA+B,GAA6B;IAChE,IAAI,EAAE,YAAY;IAClB,UAAU,EAAE,KAAK;IACjB,SAAS,EAAE;QACT,GAAG,EAAE;YACH,UAAU,EAAEsE,wBAAgC;SAC7C;QACD,OAAO,EAAE;YACP,UAAU,EAAE3E,UAAkB;SAC/B;KACF;IACD,eAAe,EAAE,CAACC,UAAqB,CAAC;IACxC,aAAa,EAAE;QACbC,KAAgB;QAChBQ,cAAyB;QACzBM,QAAmB;QACnBwD,SAAoB;KACrB;IACD,gBAAgB,EAAE,CAACrE,MAAiB,CAAC;gBACrCE,YAAU;CACX,CAAC;AACF,MAAMiE,uBAAqB,GAA6B;IACtD,IAAI,EAAE,YAAY;IAClB,UAAU,EAAE,KAAK;IACjB,SAAS,EAAE;QACT,GAAG,EAAE;YACH,UAAU,EAAEK,wBAAgC;SAC7C;QACD,OAAO,EAAE;YACP,UAAU,EAAE3E,UAAkB;SAC/B;KACF;IACD,eAAe,EAAE,CAACC,UAAqB,EAAEqD,MAAiB,CAAC;IAC3D,aAAa,EAAE;QACbpD,KAAgB;QAChBM,iBAA4B;QAC5BE,cAAyB;QACzBM,QAAmB;KACpB;IACD,gBAAgB,EAAE,CAACb,MAAiB,CAAC;gBACrCE,YAAU;CACX,CAAC;AACF,MAAM,wBAAwB,GAA6B;IACzD,IAAI,EAAE,YAAY;IAClB,UAAU,EAAE,KAAK;IACjB,SAAS,EAAE;QACT,GAAG,EAAE;YACH,UAAU,EAAEsE,wBAAgC;SAC7C;QACD,OAAO,EAAE;YACP,UAAU,EAAE3E,UAAkB;SAC/B;KACF;IACD,eAAe,EAAE;QACfC,UAAqB;QACrBqD,MAAiB;QACjB8B,UAAqB;KACtB;IACD,aAAa,EAAE;QACblF,KAAgB;QAChBQ,cAAyB;QACzBM,QAAmB;KACpB;IACD,gBAAgB,EAAE,CAACb,MAAiB,CAAC;gBACrCE,YAAU;CACX,CAAC;;AC57EF;;;;;;;AAqEA;AACA;AACA,MAAa,2BAA2B;;;;;IAOtC,YAAY,MAA+B;QACzC,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;KACtB;;;;;;IAOM,cAAc,CACnB,QAAgB,EAChB,OAA6D;QAE7D,MAAM,IAAI,GAAG,IAAI,CAAC,uBAAuB,CAAC,QAAQ,EAAE,OAAO,CAAC,CAAC;QAC7D,OAAO;YACL,IAAI;gBACF,OAAO,IAAI,CAAC,IAAI,EAAE,CAAC;aACpB;YACD,CAAC,MAAM,CAAC,aAAa,CAAC;gBACpB,OAAO,IAAI,CAAC;aACb;YACD,MAAM,EAAE;gBACN,OAAO,IAAI,CAAC,wBAAwB,CAAC,QAAQ,EAAE,OAAO,CAAC,CAAC;aACzD;SACF,CAAC;KACH;IAEc,wBAAwB,CACrC,QAAgB,EAChB,OAA6D;;YAE7D,IAAI,MAAM,GAAG,oBAAM,IAAI,CAAC,eAAe,CAAC,QAAQ,EAAE,OAAO,CAAC,CAAA,CAAC;YAC3D,0BAAM,MAAM,CAAC,KAAK,IAAI,EAAE,CAAA,CAAC;YACzB,IAAI,iBAAiB,GAAG,MAAM,CAAC,QAAQ,CAAC;YACxC,OAAO,iBAAiB,EAAE;gBACxB,MAAM,GAAG,oBAAM,IAAI,CAAC,mBAAmB,CACrC,QAAQ,EACR,iBAAiB,EACjB,OAAO,CACR,CAAA,CAAC;gBACF,iBAAiB,GAAG,MAAM,CAAC,QAAQ,CAAC;gBACpC,0BAAM,MAAM,CAAC,KAAK,IAAI,EAAE,CAAA,CAAC;aAC1B;SACF;KAAA;IAEc,uBAAuB,CACpC,QAAgB,EAChB,OAA6D;;;;gBAE7D,KAAyB,IAAA,KAAAT,oBAAA,IAAI,CAAC,wBAAwB,CAAC,QAAQ,EAAE,OAAO,CAAC,CAAA,IAAA;oBAA9D,MAAM,IAAI,WAAA,CAAA;oBACnB,oBAAA,OAAOC,uBAAAD,oBAAA,IAAI,CAAA,CAAA,CAAA,CAAC;iBACb;;;;;;;;;SACF;KAAA;;;;;;IAOM,IAAI,CACT,iBAAyB,EACzB,OAAmD;QAEnD,MAAM,IAAI,GAAG,IAAI,CAAC,aAAa,CAAC,iBAAiB,EAAE,OAAO,CAAC,CAAC;QAC5D,OAAO;YACL,IAAI;gBACF,OAAO,IAAI,CAAC,IAAI,EAAE,CAAC;aACpB;YACD,CAAC,MAAM,CAAC,aAAa,CAAC;gBACpB,OAAO,IAAI,CAAC;aACb;YACD,MAAM,EAAE;gBACN,OAAO,IAAI,CAAC,cAAc,CAAC,iBAAiB,EAAE,OAAO,CAAC,CAAC;aACxD;SACF,CAAC;KACH;IAEc,cAAc,CAC3B,iBAAyB,EACzB,OAAmD;;YAEnD,IAAI,MAAM,GAAG,oBAAM,IAAI,CAAC,KAAK,CAAC,iBAAiB,EAAE,OAAO,CAAC,CAAA,CAAC;YAC1D,0BAAM,MAAM,CAAC,KAAK,IAAI,EAAE,CAAA,CAAC;YACzB,IAAI,iBAAiB,GAAG,MAAM,CAAC,QAAQ,CAAC;YACxC,OAAO,iBAAiB,EAAE;gBACxB,MAAM,GAAG,oBAAM,IAAI,CAAC,SAAS,CAC3B,iBAAiB,EACjB,iBAAiB,EACjB,OAAO,CACR,CAAA,CAAC;gBACF,iBAAiB,GAAG,MAAM,CAAC,QAAQ,CAAC;gBACpC,0BAAM,MAAM,CAAC,KAAK,IAAI,EAAE,CAAA,CAAC;aAC1B;SACF;KAAA;IAEc,aAAa,CAC1B,iBAAyB,EACzB,OAAmD;;;;gBAEnD,KAAyB,IAAA,KAAAA,oBAAA,IAAI,CAAC,cAAc,CAAC,iBAAiB,EAAE,OAAO,CAAC,CAAA,IAAA;oBAA7D,MAAM,IAAI,WAAA,CAAA;oBACnB,oBAAA,OAAOC,uBAAAD,oBAAA,IAAI,CAAA,CAAA,CAAA,CAAC;iBACb;;;;;;;;;SACF;KAAA;;;;;;;IAQM,OAAO,CACZ,OAAsD;QAEtD,MAAM,IAAI,GAAG,IAAI,CAAC,gBAAgB,CAAC,OAAO,CAAC,CAAC;QAC5C,OAAO;YACL,IAAI;gBACF,OAAO,IAAI,CAAC,IAAI,EAAE,CAAC;aACpB;YACD,CAAC,MAAM,CAAC,aAAa,CAAC;gBACpB,OAAO,IAAI,CAAC;aACb;YACD,MAAM,EAAE;gBACN,OAAO,IAAI,CAAC,iBAAiB,CAAC,OAAO,CAAC,CAAC;aACxC;SACF,CAAC;KACH;IAEc,iBAAiB,CAC9B,OAAsD;;YAEtD,IAAI,MAAM,GAAG,oBAAM,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAA,CAAC;YAC1C,0BAAM,MAAM,CAAC,KAAK,IAAI,EAAE,CAAA,CAAC;YACzB,IAAI,iBAAiB,GAAG,MAAM,CAAC,QAAQ,CAAC;YACxC,OAAO,iBAAiB,EAAE;gBACxB,MAAM,GAAG,oBAAM,IAAI,CAAC,YAAY,CAAC,iBAAiB,EAAE,OAAO,CAAC,CAAA,CAAC;gBAC7D,iBAAiB,GAAG,MAAM,CAAC,QAAQ,CAAC;gBACpC,0BAAM,MAAM,CAAC,KAAK,IAAI,EAAE,CAAA,CAAC;aAC1B;SACF;KAAA;IAEc,gBAAgB,CAC7B,OAAsD;;;;gBAEtD,KAAyB,IAAA,KAAAA,oBAAA,IAAI,CAAC,iBAAiB,CAAC,OAAO,CAAC,CAAA,IAAA;oBAA7C,MAAM,IAAI,WAAA,CAAA;oBACnB,oBAAA,OAAOC,uBAAAD,oBAAA,IAAI,CAAA,CAAA,CAAA,CAAC;iBACb;;;;;;;;;SACF;KAAA;;;;;;;;IASM,QAAQ,CACb,iBAAyB,EACzB,cAAsB,EACtB,OAAuD;QAEvD,MAAM,IAAI,GAAG,IAAI,CAAC,iBAAiB,CACjC,iBAAiB,EACjB,cAAc,EACd,OAAO,CACR,CAAC;QACF,OAAO;YACL,IAAI;gBACF,OAAO,IAAI,CAAC,IAAI,EAAE,CAAC;aACpB;YACD,CAAC,MAAM,CAAC,aAAa,CAAC;gBACpB,OAAO,IAAI,CAAC;aACb;YACD,MAAM,EAAE;gBACN,OAAO,IAAI,CAAC,kBAAkB,CAC5B,iBAAiB,EACjB,cAAc,EACd,OAAO,CACR,CAAC;aACH;SACF,CAAC;KACH;IAEc,kBAAkB,CAC/B,iBAAyB,EACzB,cAAsB,EACtB,OAAuD;;YAEvD,IAAI,MAAM,GAAG,oBAAM,IAAI,CAAC,SAAS,CAC/B,iBAAiB,EACjB,cAAc,EACd,OAAO,CACR,CAAA,CAAC;YACF,0BAAM,MAAM,CAAC,KAAK,IAAI,EAAE,CAAA,CAAC;YACzB,IAAI,iBAAiB,GAAG,MAAM,CAAC,QAAQ,CAAC;YACxC,OAAO,iBAAiB,EAAE;gBACxB,MAAM,GAAG,oBAAM,IAAI,CAAC,aAAa,CAC/B,iBAAiB,EACjB,cAAc,EACd,iBAAiB,EACjB,OAAO,CACR,CAAA,CAAC;gBACF,iBAAiB,GAAG,MAAM,CAAC,QAAQ,CAAC;gBACpC,0BAAM,MAAM,CAAC,KAAK,IAAI,EAAE,CAAA,CAAC;aAC1B;SACF;KAAA;IAEc,iBAAiB,CAC9B,iBAAyB,EACzB,cAAsB,EACtB,OAAuD;;;;gBAEvD,KAAyB,IAAA,KAAAA,oBAAA,IAAI,CAAC,kBAAkB,CAC9C,iBAAiB,EACjB,cAAc,EACd,OAAO,CACR,CAAA,IAAA;oBAJU,MAAM,IAAI,WAAA,CAAA;oBAKnB,oBAAA,OAAOC,uBAAAD,oBAAA,IAAI,CAAA,CAAA,CAAA,CAAC;iBACb;;;;;;;;;SACF;KAAA;;;;;;;IAQM,oBAAoB,CACzB,iBAAyB,EACzB,cAAsB,EACtB,OAAkE;QAElE,MAAM,IAAI,GAAG,IAAI,CAAC,4BAA4B,CAC5C,iBAAiB,EACjB,cAAc,EACd,OAAO,CACR,CAAC;QACF,OAAO;YACL,IAAI;gBACF,OAAO,IAAI,CAAC,IAAI,EAAE,CAAC;aACpB;YACD,CAAC,MAAM,CAAC,aAAa,CAAC;gBACpB,OAAO,IAAI,CAAC;aACb;YACD,MAAM,EAAE;gBACN,OAAO,IAAI,CAAC,6BAA6B,CACvC,iBAAiB,EACjB,cAAc,EACd,OAAO,CACR,CAAC;aACH;SACF,CAAC;KACH;IAEc,6BAA6B,CAC1C,iBAAyB,EACzB,cAAsB,EACtB,OAAkE;;YAElE,IAAI,MAAM,GAAG,oBAAM,IAAI,CAAC,oBAAoB,CAC1C,iBAAiB,EACjB,cAAc,EACd,OAAO,CACR,CAAA,CAAC;YACF,0BAAM,MAAM,CAAC,KAAK,IAAI,EAAE,CAAA,CAAC;YACzB,IAAI,iBAAiB,GAAG,MAAM,CAAC,QAAQ,CAAC;YACxC,OAAO,iBAAiB,EAAE;gBACxB,MAAM,GAAG,oBAAM,IAAI,CAAC,wBAAwB,CAC1C,iBAAiB,EACjB,cAAc,EACd,iBAAiB,EACjB,OAAO,CACR,CAAA,CAAC;gBACF,iBAAiB,GAAG,MAAM,CAAC,QAAQ,CAAC;gBACpC,0BAAM,MAAM,CAAC,KAAK,IAAI,EAAE,CAAA,CAAC;aAC1B;SACF;KAAA;IAEc,4BAA4B,CACzC,iBAAyB,EACzB,cAAsB,EACtB,OAAkE;;;;gBAElE,KAAyB,IAAA,KAAAA,oBAAA,IAAI,CAAC,6BAA6B,CACzD,iBAAiB,EACjB,cAAc,EACd,OAAO,CACR,CAAA,IAAA;oBAJU,MAAM,IAAI,WAAA,CAAA;oBAKnB,oBAAA,OAAOC,uBAAAD,oBAAA,IAAI,CAAA,CAAA,CAAA,CAAC;iBACb;;;;;;;;;SACF;KAAA;;;;;;IAOO,eAAe,CACrB,QAAgB,EAChB,OAA6D;QAE7D,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,QAAQ,EAAE,OAAO,EAAE,EACrBmG,6BAA2B,CAC5B,CAAC;KACH;;;;;;;;IASK,mBAAmB,CACvB,iBAAyB,EACzB,cAAsB,EACtB,UAAkC,EAClC,OAA6D;;YAO7D,MAAM,mBAAmB,GAAG,CAC1B,IAAmC,EACnC,IAA8B;gBAE9B,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;aACrD,CAAA,CAAC;YACF,MAAM,aAAa,GAAG,CACpB,IAAmC,EACnC,IAA8B;;gBAE9B,IAAI,kBAAkB,GAEN,SAAS,CAAC;gBAC1B,MAAM,gBAAgB,GAAG,MAAA,IAAI,CAAC,OAAO,0CAAE,UAAU,CAAC;gBAClD,MAAM,QAAQ,GAAmC,CAC/C,WAA6C,EAC7C,YAAqB;oBAErB,kBAAkB,GAAG,WAAW,CAAC;oBACjC,gBAAgB,aAAhB,gBAAgB,uBAAhB,gBAAgB,CAAG,WAAW,EAAE,YAAY,CAAC,CAAC;iBAC/C,CAAC;gBACF,MAAM,WAAW,mCACZ,IAAI,KACP,OAAO,kCACF,IAAI,CAAC,OAAO,KACf,UAAU,EAAE,QAAQ,MAEvB,CAAC;gBACF,MAAM,YAAY,GAAG,MAAM,mBAAmB,CAAC,WAAW,EAAE,IAAI,CAAC,CAAC;gBAClE,OAAO;oBACL,YAAY;oBACZ,WAAW,EAAE;wBACX,UAAU,EAAE,kBAAmB,CAAC,MAAM;wBACtC,IAAI,EAAE,kBAAmB,CAAC,UAAU;wBACpC,OAAO,EAAE,kBAAmB,CAAC,OAAO,CAAC,MAAM,EAAE;qBAC9C;iBACF,CAAC;aACH,CAAA,CAAC;YAEF,MAAM,GAAG,GAAG,IAAI,OAAO,CACrB,aAAa,EACb,EAAE,iBAAiB,EAAE,cAAc,EAAE,UAAU,EAAE,OAAO,EAAE,EAC1D9E,6BAA2B,CAC5B,CAAC;YACF,OAAO,IAAIoB,iBAAS,CAAC,GAAG,EAAE;gBACxB,UAAU,EAAE,OAAO,aAAP,OAAO,uBAAP,OAAO,CAAE,UAAU;gBAC/B,YAAY,EAAE,OAAO,aAAP,OAAO,uBAAP,OAAO,CAAE,kBAAkB;aAC1C,CAAC,CAAC;SACJ;KAAA;;;;;;;;IASK,0BAA0B,CAC9B,iBAAyB,EACzB,cAAsB,EACtB,UAAkC,EAClC,OAA6D;;YAE7D,MAAM,MAAM,GAAG,MAAM,IAAI,CAAC,mBAAmB,CAC3C,iBAAiB,EACjB,cAAc,EACd,UAAU,EACV,OAAO,CACR,CAAC;YACF,OAAO,MAAM,CAAC,aAAa,EAAE,CAAC;SAC/B;KAAA;;;;;;;;IASK,WAAW,CACf,iBAAyB,EACzB,cAAsB,EACtB,UAAwC,EACxC,OAAqD;;YAOrD,MAAM,mBAAmB,GAAG,CAC1B,IAAmC,EACnC,IAA8B;gBAE9B,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;aACrD,CAAA,CAAC;YACF,MAAM,aAAa,GAAG,CACpB,IAAmC,EACnC,IAA8B;;gBAE9B,IAAI,kBAAkB,GAEN,SAAS,CAAC;gBAC1B,MAAM,gBAAgB,GAAG,MAAA,IAAI,CAAC,OAAO,0CAAE,UAAU,CAAC;gBAClD,MAAM,QAAQ,GAAmC,CAC/C,WAA6C,EAC7C,YAAqB;oBAErB,kBAAkB,GAAG,WAAW,CAAC;oBACjC,gBAAgB,aAAhB,gBAAgB,uBAAhB,gBAAgB,CAAG,WAAW,EAAE,YAAY,CAAC,CAAC;iBAC/C,CAAC;gBACF,MAAM,WAAW,mCACZ,IAAI,KACP,OAAO,kCACF,IAAI,CAAC,OAAO,KACf,UAAU,EAAE,QAAQ,MAEvB,CAAC;gBACF,MAAM,YAAY,GAAG,MAAM,mBAAmB,CAAC,WAAW,EAAE,IAAI,CAAC,CAAC;gBAClE,OAAO;oBACL,YAAY;oBACZ,WAAW,EAAE;wBACX,UAAU,EAAE,kBAAmB,CAAC,MAAM;wBACtC,IAAI,EAAE,kBAAmB,CAAC,UAAU;wBACpC,OAAO,EAAE,kBAAmB,CAAC,OAAO,CAAC,MAAM,EAAE;qBAC9C;iBACF,CAAC;aACH,CAAA,CAAC;YAEF,MAAM,GAAG,GAAG,IAAI,OAAO,CACrB,aAAa,EACb,EAAE,iBAAiB,EAAE,cAAc,EAAE,UAAU,EAAE,OAAO,EAAE,EAC1DnB,qBAAmB,CACpB,CAAC;YACF,OAAO,IAAImB,iBAAS,CAAC,GAAG,EAAE;gBACxB,UAAU,EAAE,OAAO,aAAP,OAAO,uBAAP,OAAO,CAAE,UAAU;gBAC/B,YAAY,EAAE,OAAO,aAAP,OAAO,uBAAP,OAAO,CAAE,kBAAkB;aAC1C,CAAC,CAAC;SACJ;KAAA;;;;;;;;IASK,kBAAkB,CACtB,iBAAyB,EACzB,cAAsB,EACtB,UAAwC,EACxC,OAAqD;;YAErD,MAAM,MAAM,GAAG,MAAM,IAAI,CAAC,WAAW,CACnC,iBAAiB,EACjB,cAAc,EACd,UAAU,EACV,OAAO,CACR,CAAC;YACF,OAAO,MAAM,CAAC,aAAa,EAAE,CAAC;SAC/B;KAAA;;;;;;;IAQK,WAAW,CACf,iBAAyB,EACzB,cAAsB,EACtB,OAAqD;;YAErD,MAAM,mBAAmB,GAAG,CAC1B,IAAmC,EACnC,IAA8B;gBAE9B,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;aACrD,CAAA,CAAC;YACF,MAAM,aAAa,GAAG,CACpB,IAAmC,EACnC,IAA8B;;gBAE9B,IAAI,kBAAkB,GAEN,SAAS,CAAC;gBAC1B,MAAM,gBAAgB,GAAG,MAAA,IAAI,CAAC,OAAO,0CAAE,UAAU,CAAC;gBAClD,MAAM,QAAQ,GAAmC,CAC/C,WAA6C,EAC7C,YAAqB;oBAErB,kBAAkB,GAAG,WAAW,CAAC;oBACjC,gBAAgB,aAAhB,gBAAgB,uBAAhB,gBAAgB,CAAG,WAAW,EAAE,YAAY,CAAC,CAAC;iBAC/C,CAAC;gBACF,MAAM,WAAW,mCACZ,IAAI,KACP,OAAO,kCACF,IAAI,CAAC,OAAO,KACf,UAAU,EAAE,QAAQ,MAEvB,CAAC;gBACF,MAAM,YAAY,GAAG,MAAM,mBAAmB,CAAC,WAAW,EAAE,IAAI,CAAC,CAAC;gBAClE,OAAO;oBACL,YAAY;oBACZ,WAAW,EAAE;wBACX,UAAU,EAAE,kBAAmB,CAAC,MAAM;wBACtC,IAAI,EAAE,kBAAmB,CAAC,UAAU;wBACpC,OAAO,EAAE,kBAAmB,CAAC,OAAO,CAAC,MAAM,EAAE;qBAC9C;iBACF,CAAC;aACH,CAAA,CAAC;YAEF,MAAM,GAAG,GAAG,IAAI,OAAO,CACrB,aAAa,EACb,EAAE,iBAAiB,EAAE,cAAc,EAAE,OAAO,EAAE,EAC9ClB,qBAAmB,CACpB,CAAC;YACF,OAAO,IAAIkB,iBAAS,CAAC,GAAG,EAAE;gBACxB,UAAU,EAAE,OAAO,aAAP,OAAO,uBAAP,OAAO,CAAE,UAAU;gBAC/B,YAAY,EAAE,OAAO,aAAP,OAAO,uBAAP,OAAO,CAAE,kBAAkB;aAC1C,CAAC,CAAC;SACJ;KAAA;;;;;;;IAQK,kBAAkB,CACtB,iBAAyB,EACzB,cAAsB,EACtB,OAAqD;;YAErD,MAAM,MAAM,GAAG,MAAM,IAAI,CAAC,WAAW,CACnC,iBAAiB,EACjB,cAAc,EACd,OAAO,CACR,CAAC;YACF,OAAO,MAAM,CAAC,aAAa,EAAE,CAAC;SAC/B;KAAA;;;;;;;IAQD,GAAG,CACD,iBAAyB,EACzB,cAAsB,EACtB,OAAkD;QAElD,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,iBAAiB,EAAE,cAAc,EAAE,OAAO,EAAE,EAC9CjB,kBAAgB,CACjB,CAAC;KACH;;;;;;;;;IAUK,eAAe,CACnB,iBAAyB,EACzB,cAAsB,EACtB,OAAyD;;YAEzD,MAAM,mBAAmB,GAAG,CAC1B,IAAmC,EACnC,IAA8B;gBAE9B,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;aACrD,CAAA,CAAC;YACF,MAAM,aAAa,GAAG,CACpB,IAAmC,EACnC,IAA8B;;gBAE9B,IAAI,kBAAkB,GAEN,SAAS,CAAC;gBAC1B,MAAM,gBAAgB,GAAG,MAAA,IAAI,CAAC,OAAO,0CAAE,UAAU,CAAC;gBAClD,MAAM,QAAQ,GAAmC,CAC/C,WAA6C,EAC7C,YAAqB;oBAErB,kBAAkB,GAAG,WAAW,CAAC;oBACjC,gBAAgB,aAAhB,gBAAgB,uBAAhB,gBAAgB,CAAG,WAAW,EAAE,YAAY,CAAC,CAAC;iBAC/C,CAAC;gBACF,MAAM,WAAW,mCACZ,IAAI,KACP,OAAO,kCACF,IAAI,CAAC,OAAO,KACf,UAAU,EAAE,QAAQ,MAEvB,CAAC;gBACF,MAAM,YAAY,GAAG,MAAM,mBAAmB,CAAC,WAAW,EAAE,IAAI,CAAC,CAAC;gBAClE,OAAO;oBACL,YAAY;oBACZ,WAAW,EAAE;wBACX,UAAU,EAAE,kBAAmB,CAAC,MAAM;wBACtC,IAAI,EAAE,kBAAmB,CAAC,UAAU;wBACpC,OAAO,EAAE,kBAAmB,CAAC,OAAO,CAAC,MAAM,EAAE;qBAC9C;iBACF,CAAC;aACH,CAAA,CAAC;YAEF,MAAM,GAAG,GAAG,IAAI,OAAO,CACrB,aAAa,EACb,EAAE,iBAAiB,EAAE,cAAc,EAAE,OAAO,EAAE,EAC9C4E,yBAAuB,CACxB,CAAC;YACF,OAAO,IAAI3D,iBAAS,CAAC,GAAG,EAAE;gBACxB,UAAU,EAAE,OAAO,aAAP,OAAO,uBAAP,OAAO,CAAE,UAAU;gBAC/B,YAAY,EAAE,OAAO,aAAP,OAAO,uBAAP,OAAO,CAAE,kBAAkB;aAC1C,CAAC,CAAC;SACJ;KAAA;;;;;;;;;IAUK,sBAAsB,CAC1B,iBAAyB,EACzB,cAAsB,EACtB,OAAyD;;YAEzD,MAAM,MAAM,GAAG,MAAM,IAAI,CAAC,eAAe,CACvC,iBAAiB,EACjB,cAAc,EACd,OAAO,CACR,CAAC;YACF,OAAO,MAAM,CAAC,aAAa,EAAE,CAAC;SAC/B;KAAA;;;;;;;;IASK,oBAAoB,CACxB,iBAAyB,EACzB,cAAsB,EACtB,aAA0D,EAC1D,OAA8D;;YAE9D,MAAM,mBAAmB,GAAG,CAC1B,IAAmC,EACnC,IAA8B;gBAE9B,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;aACrD,CAAA,CAAC;YACF,MAAM,aAAa,GAAG,CACpB,IAAmC,EACnC,IAA8B;;gBAE9B,IAAI,kBAAkB,GAEN,SAAS,CAAC;gBAC1B,MAAM,gBAAgB,GAAG,MAAA,IAAI,CAAC,OAAO,0CAAE,UAAU,CAAC;gBAClD,MAAM,QAAQ,GAAmC,CAC/C,WAA6C,EAC7C,YAAqB;oBAErB,kBAAkB,GAAG,WAAW,CAAC;oBACjC,gBAAgB,aAAhB,gBAAgB,uBAAhB,gBAAgB,CAAG,WAAW,EAAE,YAAY,CAAC,CAAC;iBAC/C,CAAC;gBACF,MAAM,WAAW,mCACZ,IAAI,KACP,OAAO,kCACF,IAAI,CAAC,OAAO,KACf,UAAU,EAAE,QAAQ,MAEvB,CAAC;gBACF,MAAM,YAAY,GAAG,MAAM,mBAAmB,CAAC,WAAW,EAAE,IAAI,CAAC,CAAC;gBAClE,OAAO;oBACL,YAAY;oBACZ,WAAW,EAAE;wBACX,UAAU,EAAE,kBAAmB,CAAC,MAAM;wBACtC,IAAI,EAAE,kBAAmB,CAAC,UAAU;wBACpC,OAAO,EAAE,kBAAmB,CAAC,OAAO,CAAC,MAAM,EAAE;qBAC9C;iBACF,CAAC;aACH,CAAA,CAAC;YAEF,MAAM,GAAG,GAAG,IAAI,OAAO,CACrB,aAAa,EACb,EAAE,iBAAiB,EAAE,cAAc,EAAE,aAAa,EAAE,OAAO,EAAE,EAC7D,4BAA4B,CAC7B,CAAC;YACF,OAAO,IAAIA,iBAAS,CAAC,GAAG,EAAE;gBACxB,UAAU,EAAE,OAAO,aAAP,OAAO,uBAAP,OAAO,CAAE,UAAU;gBAC/B,YAAY,EAAE,OAAO,aAAP,OAAO,uBAAP,OAAO,CAAE,kBAAkB;aAC1C,CAAC,CAAC;SACJ;KAAA;;;;;;;;IASK,2BAA2B,CAC/B,iBAAyB,EACzB,cAAsB,EACtB,aAA0D,EAC1D,OAA8D;;YAE9D,MAAM,MAAM,GAAG,MAAM,IAAI,CAAC,oBAAoB,CAC5C,iBAAiB,EACjB,cAAc,EACd,aAAa,EACb,OAAO,CACR,CAAC;YACF,OAAO,MAAM,CAAC,aAAa,EAAE,CAAC;SAC/B;KAAA;;;;;;;IAQD,eAAe,CACb,iBAAyB,EACzB,cAAsB,EACtB,OAA8D;QAE9D,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,iBAAiB,EAAE,cAAc,EAAE,OAAO,EAAE,EAC9C,4BAA4B,CAC7B,CAAC;KACH;;;;;;IAOO,KAAK,CACX,iBAAyB,EACzB,OAAmD;QAEnD,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,iBAAiB,EAAE,OAAO,EAAE,EAC9BjC,mBAAiB,CAClB,CAAC;KACH;;;;;;;IAQO,QAAQ,CACd,OAAsD;QAEtD,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CAAC,EAAE,OAAO,EAAE,EAAE6F,sBAAoB,CAAC,CAAC;KAC5E;;;;;;;;IASO,SAAS,CACf,iBAAyB,EACzB,cAAsB,EACtB,OAAuD;QAEvD,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,iBAAiB,EAAE,cAAc,EAAE,OAAO,EAAE,EAC9C7B,uBAAqB,CACtB,CAAC;KACH;;;;;;;IAQO,oBAAoB,CAC1B,iBAAyB,EACzB,cAAsB,EACtB,OAAkE;QAElE,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,iBAAiB,EAAE,cAAc,EAAE,OAAO,EAAE,EAC9C,gCAAgC,CACjC,CAAC;KACH;;;;;;;;;IAUK,aAAa,CACjB,iBAAyB,EACzB,cAAsB,EACtB,OAAuD;;YAEvD,MAAM,mBAAmB,GAAG,CAC1B,IAAmC,EACnC,IAA8B;gBAE9B,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;aACrD,CAAA,CAAC;YACF,MAAM,aAAa,GAAG,CACpB,IAAmC,EACnC,IAA8B;;gBAE9B,IAAI,kBAAkB,GAEN,SAAS,CAAC;gBAC1B,MAAM,gBAAgB,GAAG,MAAA,IAAI,CAAC,OAAO,0CAAE,UAAU,CAAC;gBAClD,MAAM,QAAQ,GAAmC,CAC/C,WAA6C,EAC7C,YAAqB;oBAErB,kBAAkB,GAAG,WAAW,CAAC;oBACjC,gBAAgB,aAAhB,gBAAgB,uBAAhB,gBAAgB,CAAG,WAAW,EAAE,YAAY,CAAC,CAAC;iBAC/C,CAAC;gBACF,MAAM,WAAW,mCACZ,IAAI,KACP,OAAO,kCACF,IAAI,CAAC,OAAO,KACf,UAAU,EAAE,QAAQ,MAEvB,CAAC;gBACF,MAAM,YAAY,GAAG,MAAM,mBAAmB,CAAC,WAAW,EAAE,IAAI,CAAC,CAAC;gBAClE,OAAO;oBACL,YAAY;oBACZ,WAAW,EAAE;wBACX,UAAU,EAAE,kBAAmB,CAAC,MAAM;wBACtC,IAAI,EAAE,kBAAmB,CAAC,UAAU;wBACpC,OAAO,EAAE,kBAAmB,CAAC,OAAO,CAAC,MAAM,EAAE;qBAC9C;iBACF,CAAC;aACH,CAAA,CAAC;YAEF,MAAM,GAAG,GAAG,IAAI,OAAO,CACrB,aAAa,EACb,EAAE,iBAAiB,EAAE,cAAc,EAAE,OAAO,EAAE,EAC9C8B,uBAAqB,CACtB,CAAC;YACF,OAAO,IAAI7D,iBAAS,CAAC,GAAG,EAAE;gBACxB,UAAU,EAAE,OAAO,aAAP,OAAO,uBAAP,OAAO,CAAE,UAAU;gBAC/B,YAAY,EAAE,OAAO,aAAP,OAAO,uBAAP,OAAO,CAAE,kBAAkB;aAC1C,CAAC,CAAC;SACJ;KAAA;;;;;;;;;IAUK,oBAAoB,CACxB,iBAAyB,EACzB,cAAsB,EACtB,OAAuD;;YAEvD,MAAM,MAAM,GAAG,MAAM,IAAI,CAAC,aAAa,CACrC,iBAAiB,EACjB,cAAc,EACd,OAAO,CACR,CAAC;YACF,OAAO,MAAM,CAAC,aAAa,EAAE,CAAC;SAC/B;KAAA;;;;;;;IAQK,YAAY,CAChB,iBAAyB,EACzB,cAAsB,EACtB,OAAsD;;YAEtD,MAAM,mBAAmB,GAAG,CAC1B,IAAmC,EACnC,IAA8B;gBAE9B,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;aACrD,CAAA,CAAC;YACF,MAAM,aAAa,GAAG,CACpB,IAAmC,EACnC,IAA8B;;gBAE9B,IAAI,kBAAkB,GAEN,SAAS,CAAC;gBAC1B,MAAM,gBAAgB,GAAG,MAAA,IAAI,CAAC,OAAO,0CAAE,UAAU,CAAC;gBAClD,MAAM,QAAQ,GAAmC,CAC/C,WAA6C,EAC7C,YAAqB;oBAErB,kBAAkB,GAAG,WAAW,CAAC;oBACjC,gBAAgB,aAAhB,gBAAgB,uBAAhB,gBAAgB,CAAG,WAAW,EAAE,YAAY,CAAC,CAAC;iBAC/C,CAAC;gBACF,MAAM,WAAW,mCACZ,IAAI,KACP,OAAO,kCACF,IAAI,CAAC,OAAO,KACf,UAAU,EAAE,QAAQ,MAEvB,CAAC;gBACF,MAAM,YAAY,GAAG,MAAM,mBAAmB,CAAC,WAAW,EAAE,IAAI,CAAC,CAAC;gBAClE,OAAO;oBACL,YAAY;oBACZ,WAAW,EAAE;wBACX,UAAU,EAAE,kBAAmB,CAAC,MAAM;wBACtC,IAAI,EAAE,kBAAmB,CAAC,UAAU;wBACpC,OAAO,EAAE,kBAAmB,CAAC,OAAO,CAAC,MAAM,EAAE;qBAC9C;iBACF,CAAC;aACH,CAAA,CAAC;YAEF,MAAM,GAAG,GAAG,IAAI,OAAO,CACrB,aAAa,EACb,EAAE,iBAAiB,EAAE,cAAc,EAAE,OAAO,EAAE,EAC9CqC,sBAAoB,CACrB,CAAC;YACF,OAAO,IAAIrC,iBAAS,CAAC,GAAG,EAAE;gBACxB,UAAU,EAAE,OAAO,aAAP,OAAO,uBAAP,OAAO,CAAE,UAAU;gBAC/B,YAAY,EAAE,OAAO,aAAP,OAAO,uBAAP,OAAO,CAAE,kBAAkB;aAC1C,CAAC,CAAC;SACJ;KAAA;;;;;;;IAQK,mBAAmB,CACvB,iBAAyB,EACzB,cAAsB,EACtB,OAAsD;;YAEtD,MAAM,MAAM,GAAG,MAAM,IAAI,CAAC,YAAY,CACpC,iBAAiB,EACjB,cAAc,EACd,OAAO,CACR,CAAC;YACF,OAAO,MAAM,CAAC,aAAa,EAAE,CAAC;SAC/B;KAAA;;;;;;;IAQK,UAAU,CACd,iBAAyB,EACzB,cAAsB,EACtB,OAAoD;;YAEpD,MAAM,mBAAmB,GAAG,CAC1B,IAAmC,EACnC,IAA8B;gBAE9B,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;aACrD,CAAA,CAAC;YACF,MAAM,aAAa,GAAG,CACpB,IAAmC,EACnC,IAA8B;;gBAE9B,IAAI,kBAAkB,GAEN,SAAS,CAAC;gBAC1B,MAAM,gBAAgB,GAAG,MAAA,IAAI,CAAC,OAAO,0CAAE,UAAU,CAAC;gBAClD,MAAM,QAAQ,GAAmC,CAC/C,WAA6C,EAC7C,YAAqB;oBAErB,kBAAkB,GAAG,WAAW,CAAC;oBACjC,gBAAgB,aAAhB,gBAAgB,uBAAhB,gBAAgB,CAAG,WAAW,EAAE,YAAY,CAAC,CAAC;iBAC/C,CAAC;gBACF,MAAM,WAAW,mCACZ,IAAI,KACP,OAAO,kCACF,IAAI,CAAC,OAAO,KACf,UAAU,EAAE,QAAQ,MAEvB,CAAC;gBACF,MAAM,YAAY,GAAG,MAAM,mBAAmB,CAAC,WAAW,EAAE,IAAI,CAAC,CAAC;gBAClE,OAAO;oBACL,YAAY;oBACZ,WAAW,EAAE;wBACX,UAAU,EAAE,kBAAmB,CAAC,MAAM;wBACtC,IAAI,EAAE,kBAAmB,CAAC,UAAU;wBACpC,OAAO,EAAE,kBAAmB,CAAC,OAAO,CAAC,MAAM,EAAE;qBAC9C;iBACF,CAAC;aACH,CAAA,CAAC;YAEF,MAAM,GAAG,GAAG,IAAI,OAAO,CACrB,aAAa,EACb,EAAE,iBAAiB,EAAE,cAAc,EAAE,OAAO,EAAE,EAC9C8D,oBAAkB,CACnB,CAAC;YACF,OAAO,IAAI9D,iBAAS,CAAC,GAAG,EAAE;gBACxB,UAAU,EAAE,OAAO,aAAP,OAAO,uBAAP,OAAO,CAAE,UAAU;gBAC/B,YAAY,EAAE,OAAO,aAAP,OAAO,uBAAP,OAAO,CAAE,kBAAkB;aAC1C,CAAC,CAAC;SACJ;KAAA;;;;;;;IAQK,iBAAiB,CACrB,iBAAyB,EACzB,cAAsB,EACtB,OAAoD;;YAEpD,MAAM,MAAM,GAAG,MAAM,IAAI,CAAC,UAAU,CAClC,iBAAiB,EACjB,cAAc,EACd,OAAO,CACR,CAAC;YACF,OAAO,MAAM,CAAC,aAAa,EAAE,CAAC;SAC/B;KAAA;;;;;;;;IASK,aAAa,CACjB,iBAAyB,EACzB,cAAsB,EACtB,OAAuD;;YAEvD,MAAM,mBAAmB,GAAG,CAC1B,IAAmC,EACnC,IAA8B;gBAE9B,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;aACrD,CAAA,CAAC;YACF,MAAM,aAAa,GAAG,CACpB,IAAmC,EACnC,IAA8B;;gBAE9B,IAAI,kBAAkB,GAEN,SAAS,CAAC;gBAC1B,MAAM,gBAAgB,GAAG,MAAA,IAAI,CAAC,OAAO,0CAAE,UAAU,CAAC;gBAClD,MAAM,QAAQ,GAAmC,CAC/C,WAA6C,EAC7C,YAAqB;oBAErB,kBAAkB,GAAG,WAAW,CAAC;oBACjC,gBAAgB,aAAhB,gBAAgB,uBAAhB,gBAAgB,CAAG,WAAW,EAAE,YAAY,CAAC,CAAC;iBAC/C,CAAC;gBACF,MAAM,WAAW,mCACZ,IAAI,KACP,OAAO,kCACF,IAAI,CAAC,OAAO,KACf,UAAU,EAAE,QAAQ,MAEvB,CAAC;gBACF,MAAM,YAAY,GAAG,MAAM,mBAAmB,CAAC,WAAW,EAAE,IAAI,CAAC,CAAC;gBAClE,OAAO;oBACL,YAAY;oBACZ,WAAW,EAAE;wBACX,UAAU,EAAE,kBAAmB,CAAC,MAAM;wBACtC,IAAI,EAAE,kBAAmB,CAAC,UAAU;wBACpC,OAAO,EAAE,kBAAmB,CAAC,OAAO,CAAC,MAAM,EAAE;qBAC9C;iBACF,CAAC;aACH,CAAA,CAAC;YAEF,MAAM,GAAG,GAAG,IAAI,OAAO,CACrB,aAAa,EACb,EAAE,iBAAiB,EAAE,cAAc,EAAE,OAAO,EAAE,EAC9C+D,uBAAqB,CACtB,CAAC;YACF,OAAO,IAAI/D,iBAAS,CAAC,GAAG,EAAE;gBACxB,UAAU,EAAE,OAAO,aAAP,OAAO,uBAAP,OAAO,CAAE,UAAU;gBAC/B,YAAY,EAAE,OAAO,aAAP,OAAO,uBAAP,OAAO,CAAE,kBAAkB;aAC1C,CAAC,CAAC;SACJ;KAAA;;;;;;;;IASK,oBAAoB,CACxB,iBAAyB,EACzB,cAAsB,EACtB,OAAuD;;YAEvD,MAAM,MAAM,GAAG,MAAM,IAAI,CAAC,aAAa,CACrC,iBAAiB,EACjB,cAAc,EACd,OAAO,CACR,CAAC;YACF,OAAO,MAAM,CAAC,aAAa,EAAE,CAAC;SAC/B;KAAA;;;;;;;;;;IAWK,uBAAuB,CAC3B,iBAAyB,EACzB,cAAsB,EACtB,OAAiE;;YAEjE,MAAM,mBAAmB,GAAG,CAC1B,IAAmC,EACnC,IAA8B;gBAE9B,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;aACrD,CAAA,CAAC;YACF,MAAM,aAAa,GAAG,CACpB,IAAmC,EACnC,IAA8B;;gBAE9B,IAAI,kBAAkB,GAEN,SAAS,CAAC;gBAC1B,MAAM,gBAAgB,GAAG,MAAA,IAAI,CAAC,OAAO,0CAAE,UAAU,CAAC;gBAClD,MAAM,QAAQ,GAAmC,CAC/C,WAA6C,EAC7C,YAAqB;oBAErB,kBAAkB,GAAG,WAAW,CAAC;oBACjC,gBAAgB,aAAhB,gBAAgB,uBAAhB,gBAAgB,CAAG,WAAW,EAAE,YAAY,CAAC,CAAC;iBAC/C,CAAC;gBACF,MAAM,WAAW,mCACZ,IAAI,KACP,OAAO,kCACF,IAAI,CAAC,OAAO,KACf,UAAU,EAAE,QAAQ,MAEvB,CAAC;gBACF,MAAM,YAAY,GAAG,MAAM,mBAAmB,CAAC,WAAW,EAAE,IAAI,CAAC,CAAC;gBAClE,OAAO;oBACL,YAAY;oBACZ,WAAW,EAAE;wBACX,UAAU,EAAE,kBAAmB,CAAC,MAAM;wBACtC,IAAI,EAAE,kBAAmB,CAAC,UAAU;wBACpC,OAAO,EAAE,kBAAmB,CAAC,OAAO,CAAC,MAAM,EAAE;qBAC9C;iBACF,CAAC;aACH,CAAA,CAAC;YAEF,MAAM,GAAG,GAAG,IAAI,OAAO,CACrB,aAAa,EACb,EAAE,iBAAiB,EAAE,cAAc,EAAE,OAAO,EAAE,EAC9CgE,iCAA+B,CAChC,CAAC;YACF,OAAO,IAAIhE,iBAAS,CAAC,GAAG,EAAE;gBACxB,UAAU,EAAE,OAAO,aAAP,OAAO,uBAAP,OAAO,CAAE,UAAU;gBAC/B,YAAY,EAAE,OAAO,aAAP,OAAO,uBAAP,OAAO,CAAE,kBAAkB;aAC1C,CAAC,CAAC;SACJ;KAAA;;;;;;;;;;IAWK,8BAA8B,CAClC,iBAAyB,EACzB,cAAsB,EACtB,OAAiE;;YAEjE,MAAM,MAAM,GAAG,MAAM,IAAI,CAAC,uBAAuB,CAC/C,iBAAiB,EACjB,cAAc,EACd,OAAO,CACR,CAAC;YACF,OAAO,MAAM,CAAC,aAAa,EAAE,CAAC;SAC/B;KAAA;;;;;;;;IASK,oBAAoB,CACxB,iBAAyB,EACzB,cAAsB,EACtB,aAA0D,EAC1D,OAA8D;;YAE9D,MAAM,mBAAmB,GAAG,CAC1B,IAAmC,EACnC,IAA8B;gBAE9B,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;aACrD,CAAA,CAAC;YACF,MAAM,aAAa,GAAG,CACpB,IAAmC,EACnC,IAA8B;;gBAE9B,IAAI,kBAAkB,GAEN,SAAS,CAAC;gBAC1B,MAAM,gBAAgB,GAAG,MAAA,IAAI,CAAC,OAAO,0CAAE,UAAU,CAAC;gBAClD,MAAM,QAAQ,GAAmC,CAC/C,WAA6C,EAC7C,YAAqB;oBAErB,kBAAkB,GAAG,WAAW,CAAC;oBACjC,gBAAgB,aAAhB,gBAAgB,uBAAhB,gBAAgB,CAAG,WAAW,EAAE,YAAY,CAAC,CAAC;iBAC/C,CAAC;gBACF,MAAM,WAAW,mCACZ,IAAI,KACP,OAAO,kCACF,IAAI,CAAC,OAAO,KACf,UAAU,EAAE,QAAQ,MAEvB,CAAC;gBACF,MAAM,YAAY,GAAG,MAAM,mBAAmB,CAAC,WAAW,EAAE,IAAI,CAAC,CAAC;gBAClE,OAAO;oBACL,YAAY;oBACZ,WAAW,EAAE;wBACX,UAAU,EAAE,kBAAmB,CAAC,MAAM;wBACtC,IAAI,EAAE,kBAAmB,CAAC,UAAU;wBACpC,OAAO,EAAE,kBAAmB,CAAC,OAAO,CAAC,MAAM,EAAE;qBAC9C;iBACF,CAAC;aACH,CAAA,CAAC;YAEF,MAAM,GAAG,GAAG,IAAI,OAAO,CACrB,aAAa,EACb,EAAE,iBAAiB,EAAE,cAAc,EAAE,aAAa,EAAE,OAAO,EAAE,EAC7D,4BAA4B,CAC7B,CAAC;YACF,OAAO,IAAIA,iBAAS,CAAC,GAAG,EAAE;gBACxB,UAAU,EAAE,OAAO,aAAP,OAAO,uBAAP,OAAO,CAAE,UAAU;gBAC/B,YAAY,EAAE,OAAO,aAAP,OAAO,uBAAP,OAAO,CAAE,kBAAkB;aAC1C,CAAC,CAAC;SACJ;KAAA;;;;;;;;IASK,2BAA2B,CAC/B,iBAAyB,EACzB,cAAsB,EACtB,aAA0D,EAC1D,OAA8D;;YAE9D,MAAM,MAAM,GAAG,MAAM,IAAI,CAAC,oBAAoB,CAC5C,iBAAiB,EACjB,cAAc,EACd,aAAa,EACb,OAAO,CACR,CAAC;YACF,OAAO,MAAM,CAAC,aAAa,EAAE,CAAC;SAC/B;KAAA;;;;;;;;;IAUK,YAAY,CAChB,iBAAyB,EACzB,cAAsB,EACtB,OAAsD;;YAEtD,MAAM,mBAAmB,GAAG,CAC1B,IAAmC,EACnC,IAA8B;gBAE9B,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;aACrD,CAAA,CAAC;YACF,MAAM,aAAa,GAAG,CACpB,IAAmC,EACnC,IAA8B;;gBAE9B,IAAI,kBAAkB,GAEN,SAAS,CAAC;gBAC1B,MAAM,gBAAgB,GAAG,MAAA,IAAI,CAAC,OAAO,0CAAE,UAAU,CAAC;gBAClD,MAAM,QAAQ,GAAmC,CAC/C,WAA6C,EAC7C,YAAqB;oBAErB,kBAAkB,GAAG,WAAW,CAAC;oBACjC,gBAAgB,aAAhB,gBAAgB,uBAAhB,gBAAgB,CAAG,WAAW,EAAE,YAAY,CAAC,CAAC;iBAC/C,CAAC;gBACF,MAAM,WAAW,mCACZ,IAAI,KACP,OAAO,kCACF,IAAI,CAAC,OAAO,KACf,UAAU,EAAE,QAAQ,MAEvB,CAAC;gBACF,MAAM,YAAY,GAAG,MAAM,mBAAmB,CAAC,WAAW,EAAE,IAAI,CAAC,CAAC;gBAClE,OAAO;oBACL,YAAY;oBACZ,WAAW,EAAE;wBACX,UAAU,EAAE,kBAAmB,CAAC,MAAM;wBACtC,IAAI,EAAE,kBAAmB,CAAC,UAAU;wBACpC,OAAO,EAAE,kBAAmB,CAAC,OAAO,CAAC,MAAM,EAAE;qBAC9C;iBACF,CAAC;aACH,CAAA,CAAC;YAEF,MAAM,GAAG,GAAG,IAAI,OAAO,CACrB,aAAa,EACb,EAAE,iBAAiB,EAAE,cAAc,EAAE,OAAO,EAAE,EAC9CiE,sBAAoB,CACrB,CAAC;YACF,OAAO,IAAIjE,iBAAS,CAAC,GAAG,EAAE;gBACxB,UAAU,EAAE,OAAO,aAAP,OAAO,uBAAP,OAAO,CAAE,UAAU;gBAC/B,YAAY,EAAE,OAAO,aAAP,OAAO,uBAAP,OAAO,CAAE,kBAAkB;aAC1C,CAAC,CAAC;SACJ;KAAA;;;;;;;;;IAUK,mBAAmB,CACvB,iBAAyB,EACzB,cAAsB,EACtB,OAAsD;;YAEtD,MAAM,MAAM,GAAG,MAAM,IAAI,CAAC,YAAY,CACpC,iBAAiB,EACjB,cAAc,EACd,OAAO,CACR,CAAC;YACF,OAAO,MAAM,CAAC,aAAa,EAAE,CAAC;SAC/B;KAAA;;;;;;;;IASK,eAAe,CACnB,iBAAyB,EACzB,cAAsB,EACtB,OAAyD;;YAEzD,MAAM,mBAAmB,GAAG,CAC1B,IAAmC,EACnC,IAA8B;gBAE9B,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;aACrD,CAAA,CAAC;YACF,MAAM,aAAa,GAAG,CACpB,IAAmC,EACnC,IAA8B;;gBAE9B,IAAI,kBAAkB,GAEN,SAAS,CAAC;gBAC1B,MAAM,gBAAgB,GAAG,MAAA,IAAI,CAAC,OAAO,0CAAE,UAAU,CAAC;gBAClD,MAAM,QAAQ,GAAmC,CAC/C,WAA6C,EAC7C,YAAqB;oBAErB,kBAAkB,GAAG,WAAW,CAAC;oBACjC,gBAAgB,aAAhB,gBAAgB,uBAAhB,gBAAgB,CAAG,WAAW,EAAE,YAAY,CAAC,CAAC;iBAC/C,CAAC;gBACF,MAAM,WAAW,mCACZ,IAAI,KACP,OAAO,kCACF,IAAI,CAAC,OAAO,KACf,UAAU,EAAE,QAAQ,MAEvB,CAAC;gBACF,MAAM,YAAY,GAAG,MAAM,mBAAmB,CAAC,WAAW,EAAE,IAAI,CAAC,CAAC;gBAClE,OAAO;oBACL,YAAY;oBACZ,WAAW,EAAE;wBACX,UAAU,EAAE,kBAAmB,CAAC,MAAM;wBACtC,IAAI,EAAE,kBAAmB,CAAC,UAAU;wBACpC,OAAO,EAAE,kBAAmB,CAAC,OAAO,CAAC,MAAM,EAAE;qBAC9C;iBACF,CAAC;aACH,CAAA,CAAC;YAEF,MAAM,GAAG,GAAG,IAAI,OAAO,CACrB,aAAa,EACb,EAAE,iBAAiB,EAAE,cAAc,EAAE,OAAO,EAAE,EAC9C,uBAAuB,CACxB,CAAC;YACF,OAAO,IAAIA,iBAAS,CAAC,GAAG,EAAE;gBACxB,UAAU,EAAE,OAAO,aAAP,OAAO,uBAAP,OAAO,CAAE,UAAU;gBAC/B,YAAY,EAAE,OAAO,aAAP,OAAO,uBAAP,OAAO,CAAE,kBAAkB;aAC1C,CAAC,CAAC;SACJ;KAAA;;;;;;;;IASK,sBAAsB,CAC1B,iBAAyB,EACzB,cAAsB,EACtB,OAAyD;;YAEzD,MAAM,MAAM,GAAG,MAAM,IAAI,CAAC,eAAe,CACvC,iBAAiB,EACjB,cAAc,EACd,OAAO,CACR,CAAC;YACF,OAAO,MAAM,CAAC,aAAa,EAAE,CAAC;SAC/B;KAAA;;;;;;;;;IAUD,kDAAkD,CAChD,iBAAyB,EACzB,cAAsB,EACtB,oBAA4B,EAC5B,OAAiG;QAIjG,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,iBAAiB,EAAE,cAAc,EAAE,oBAAoB,EAAE,OAAO,EAAE,EACpE,+DAA+D,CAChE,CAAC;KACH;;;;;;;;IASD,6BAA6B,CAC3B,iBAAyB,EACzB,cAAsB,EACtB,UAAwD,EACxD,OAA4E;QAE5E,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,iBAAiB,EAAE,cAAc,EAAE,UAAU,EAAE,OAAO,EAAE,EAC1D,0CAA0C,CAC3C,CAAC;KACH;;;;;;;;IASK,iCAAiC,CACrC,iBAAyB,EACzB,cAAsB,EACtB,UAA0C,EAC1C,OAA2E;;YAE3E,MAAM,mBAAmB,GAAG,CAC1B,IAAmC,EACnC,IAA8B;gBAE9B,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;aACrD,CAAA,CAAC;YACF,MAAM,aAAa,GAAG,CACpB,IAAmC,EACnC,IAA8B;;gBAE9B,IAAI,kBAAkB,GAEN,SAAS,CAAC;gBAC1B,MAAM,gBAAgB,GAAG,MAAA,IAAI,CAAC,OAAO,0CAAE,UAAU,CAAC;gBAClD,MAAM,QAAQ,GAAmC,CAC/C,WAA6C,EAC7C,YAAqB;oBAErB,kBAAkB,GAAG,WAAW,CAAC;oBACjC,gBAAgB,aAAhB,gBAAgB,uBAAhB,gBAAgB,CAAG,WAAW,EAAE,YAAY,CAAC,CAAC;iBAC/C,CAAC;gBACF,MAAM,WAAW,mCACZ,IAAI,KACP,OAAO,kCACF,IAAI,CAAC,OAAO,KACf,UAAU,EAAE,QAAQ,MAEvB,CAAC;gBACF,MAAM,YAAY,GAAG,MAAM,mBAAmB,CAAC,WAAW,EAAE,IAAI,CAAC,CAAC;gBAClE,OAAO;oBACL,YAAY;oBACZ,WAAW,EAAE;wBACX,UAAU,EAAE,kBAAmB,CAAC,MAAM;wBACtC,IAAI,EAAE,kBAAmB,CAAC,UAAU;wBACpC,OAAO,EAAE,kBAAmB,CAAC,OAAO,CAAC,MAAM,EAAE;qBAC9C;iBACF,CAAC;aACH,CAAA,CAAC;YAEF,MAAM,GAAG,GAAG,IAAI,OAAO,CACrB,aAAa,EACb,EAAE,iBAAiB,EAAE,cAAc,EAAE,UAAU,EAAE,OAAO,EAAE,EAC1D,yCAAyC,CAC1C,CAAC;YACF,OAAO,IAAIA,iBAAS,CAAC,GAAG,EAAE;gBACxB,UAAU,EAAE,OAAO,aAAP,OAAO,uBAAP,OAAO,CAAE,UAAU;gBAC/B,YAAY,EAAE,OAAO,aAAP,OAAO,uBAAP,OAAO,CAAE,kBAAkB;aAC1C,CAAC,CAAC;SACJ;KAAA;;;;;;;;IASK,wCAAwC,CAC5C,iBAAyB,EACzB,cAAsB,EACtB,UAA0C,EAC1C,OAA2E;;YAE3E,MAAM,MAAM,GAAG,MAAM,IAAI,CAAC,iCAAiC,CACzD,iBAAiB,EACjB,cAAc,EACd,UAAU,EACV,OAAO,CACR,CAAC;YACF,OAAO,MAAM,CAAC,aAAa,EAAE,CAAC;SAC/B;KAAA;;;;;;;IAQO,mBAAmB,CACzB,QAAgB,EAChB,QAAgB,EAChB,OAAiE;QAEjE,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,QAAQ,EAAE,QAAQ,EAAE,OAAO,EAAE,EAC/BkE,iCAA+B,CAChC,CAAC;KACH;;;;;;;IAQO,SAAS,CACf,iBAAyB,EACzB,QAAgB,EAChB,OAAuD;QAEvD,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,iBAAiB,EAAE,QAAQ,EAAE,OAAO,EAAE,EACxCjC,uBAAqB,CACtB,CAAC;KACH;;;;;;IAOO,YAAY,CAClB,QAAgB,EAChB,OAA0D;QAE1D,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,QAAQ,EAAE,OAAO,EAAE,EACrBkC,0BAAwB,CACzB,CAAC;KACH;;;;;;;;IASO,aAAa,CACnB,iBAAyB,EACzB,cAAsB,EACtB,QAAgB,EAChB,OAA2D;QAE3D,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,iBAAiB,EAAE,cAAc,EAAE,QAAQ,EAAE,OAAO,EAAE,EACxD,yBAAyB,CAC1B,CAAC;KACH;;;;;;;;IASO,wBAAwB,CAC9B,iBAAyB,EACzB,cAAsB,EACtB,QAAgB,EAChB,OAAsE;QAEtE,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,iBAAiB,EAAE,cAAc,EAAE,QAAQ,EAAE,OAAO,EAAE,EACxD,oCAAoC,CACrC,CAAC;KACH;CACF;AACD;AACA,MAAMnG,YAAU,GAAGP,2BAA2B,CAAC,OAAO,cAAc,KAAK,CAAC,CAAC;AAE3E,MAAMiG,6BAA2B,GAA6B;IAC5D,IAAI,EACF,0GAA0G;IAC5G,UAAU,EAAE,KAAK;IACjB,SAAS,EAAE;QACT,GAAG,EAAE;YACH,UAAU,EAAEU,gCAAwC;SACrD;QACD,OAAO,EAAE;YACP,UAAU,EAAEzG,UAAkB;SAC/B;KACF;IACD,eAAe,EAAE,CAACC,UAAqB,CAAC;IACxC,aAAa,EAAE;QACbC,KAAgB;QAChBQ,cAAyB;QACzB8D,SAAoB;KACrB;IACD,gBAAgB,EAAE,CAACrE,MAAiB,CAAC;gBACrCE,YAAU;CACX,CAAC;AACF,MAAMY,6BAA2B,GAA6B;IAC5D,IAAI,EACF,yIAAyI;IAC3I,UAAU,EAAE,KAAK;IACjB,SAAS,EAAE;QACT,GAAG,EAAE;YACH,UAAU,EAAEyF,sBAA8B;SAC3C;QACD,GAAG,EAAE;YACH,UAAU,EAAEA,sBAA8B;SAC3C;QACD,GAAG,EAAE;YACH,UAAU,EAAEA,sBAA8B;SAC3C;QACD,GAAG,EAAE;YACH,UAAU,EAAEA,sBAA8B;SAC3C;QACD,OAAO,EAAE;YACP,UAAU,EAAE1G,UAAkB;SAC/B;KACF;IACD,WAAW,EAAE2G,YAAuB;IACpC,eAAe,EAAE,CAAC1G,UAAqB,CAAC;IACxC,aAAa,EAAE;QACbC,KAAgB;QAChBM,iBAA4B;QAC5BE,cAAyB;QACzBkG,cAAyB;KAC1B;IACD,gBAAgB,EAAE,CAACzG,MAAiB,EAAEQ,WAAsB,CAAC;IAC7D,SAAS,EAAE,MAAM;gBACjBN,YAAU;CACX,CAAC;AACF,MAAMa,qBAAmB,GAA6B;IACpD,IAAI,EACF,yIAAyI;IAC3I,UAAU,EAAE,OAAO;IACnB,SAAS,EAAE;QACT,GAAG,EAAE;YACH,UAAU,EAAEwF,sBAA8B;SAC3C;QACD,GAAG,EAAE;YACH,UAAU,EAAEA,sBAA8B;SAC3C;QACD,GAAG,EAAE;YACH,UAAU,EAAEA,sBAA8B;SAC3C;QACD,GAAG,EAAE;YACH,UAAU,EAAEA,sBAA8B;SAC3C;QACD,OAAO,EAAE;YACP,UAAU,EAAE1G,UAAkB;SAC/B;KACF;IACD,WAAW,EAAE6G,YAAuB;IACpC,eAAe,EAAE,CAAC5G,UAAqB,CAAC;IACxC,aAAa,EAAE;QACbC,KAAgB;QAChBM,iBAA4B;QAC5BE,cAAyB;QACzBkG,cAAyB;KAC1B;IACD,gBAAgB,EAAE,CAACzG,MAAiB,EAAEQ,WAAsB,CAAC;IAC7D,SAAS,EAAE,MAAM;gBACjBN,YAAU;CACX,CAAC;AACF,MAAMc,qBAAmB,GAA6B;IACpD,IAAI,EACF,yIAAyI;IAC3I,UAAU,EAAE,QAAQ;IACpB,SAAS,EAAE;QACT,GAAG,EAAE,EAAE;QACP,GAAG,EAAE,EAAE;QACP,GAAG,EAAE,EAAE;QACP,GAAG,EAAE,EAAE;QACP,OAAO,EAAE;YACP,UAAU,EAAEnB,UAAkB;SAC/B;KACF;IACD,eAAe,EAAE,CAACC,UAAqB,EAAEgF,aAAwB,CAAC;IAClE,aAAa,EAAE;QACb/E,KAAgB;QAChBM,iBAA4B;QAC5BE,cAAyB;QACzBkG,cAAyB;KAC1B;IACD,gBAAgB,EAAE,CAACzG,MAAiB,CAAC;gBACrCE,YAAU;CACX,CAAC;AACF,MAAMe,kBAAgB,GAA6B;IACjD,IAAI,EACF,yIAAyI;IAC3I,UAAU,EAAE,KAAK;IACjB,SAAS,EAAE;QACT,GAAG,EAAE;YACH,UAAU,EAAEsF,sBAA8B;SAC3C;QACD,OAAO,EAAE;YACP,UAAU,EAAE1G,UAAkB;SAC/B;KACF;IACD,eAAe,EAAE,CAACC,UAAqB,EAAE6G,OAAkB,CAAC;IAC5D,aAAa,EAAE;QACb5G,KAAgB;QAChBM,iBAA4B;QAC5BE,cAAyB;QACzBkG,cAAyB;KAC1B;IACD,gBAAgB,EAAE,CAACzG,MAAiB,CAAC;gBACrCE,YAAU;CACX,CAAC;AACF,MAAM2F,yBAAuB,GAA6B;IACxD,IAAI,EACF,oJAAoJ;IACtJ,UAAU,EAAE,MAAM;IAClB,SAAS,EAAE;QACT,GAAG,EAAE,EAAE;QACP,GAAG,EAAE,EAAE;QACP,GAAG,EAAE,EAAE;QACP,GAAG,EAAE,EAAE;QACP,OAAO,EAAE;YACP,UAAU,EAAEhG,UAAkB;SAC/B;KACF;IACD,WAAW,EAAE+G,aAAwB;IACrC,eAAe,EAAE,CAAC9G,UAAqB,CAAC;IACxC,aAAa,EAAE;QACbC,KAAgB;QAChBM,iBAA4B;QAC5BE,cAAyB;QACzBkG,cAAyB;KAC1B;IACD,gBAAgB,EAAE,CAACzG,MAAiB,EAAEQ,WAAsB,CAAC;IAC7D,SAAS,EAAE,MAAM;gBACjBN,YAAU;CACX,CAAC;AACF,MAAM,4BAA4B,GAA6B;IAC7D,IAAI,EACF,gJAAgJ;IAClJ,UAAU,EAAE,MAAM;IAClB,SAAS,EAAE;QACT,GAAG,EAAE,EAAE;QACP,GAAG,EAAE,EAAE;QACP,GAAG,EAAE,EAAE;QACP,GAAG,EAAE,EAAE;QACP,OAAO,EAAE;YACP,UAAU,EAAEL,UAAkB;SAC/B;KACF;IACD,WAAW,EAAEgH,cAAyB;IACtC,eAAe,EAAE,CAAC/G,UAAqB,EAAEgF,aAAwB,CAAC;IAClE,aAAa,EAAE;QACb/E,KAAgB;QAChBM,iBAA4B;QAC5BE,cAAyB;QACzBkG,cAAyB;KAC1B;IACD,gBAAgB,EAAE,CAACzG,MAAiB,EAAEQ,WAAsB,CAAC;IAC7D,SAAS,EAAE,MAAM;gBACjBN,YAAU;CACX,CAAC;AACF,MAAM,4BAA4B,GAA6B;IAC7D,IAAI,EACF,sJAAsJ;IACxJ,UAAU,EAAE,KAAK;IACjB,SAAS,EAAE;QACT,GAAG,EAAE;YACH,UAAU,EAAE4G,kCAA0C;SACvD;QACD,OAAO,EAAE;YACP,UAAU,EAAEjH,UAAkB;SAC/B;KACF;IACD,eAAe,EAAE,CAACC,UAAqB,CAAC;IACxC,aAAa,EAAE;QACbC,KAAgB;QAChBM,iBAA4B;QAC5BE,cAAyB;QACzBkG,cAAyB;KAC1B;IACD,gBAAgB,EAAE,CAACzG,MAAiB,CAAC;gBACrCE,YAAU;CACX,CAAC;AACF,MAAMD,mBAAiB,GAA6B;IAClD,IAAI,EACF,wHAAwH;IAC1H,UAAU,EAAE,KAAK;IACjB,SAAS,EAAE;QACT,GAAG,EAAE;YACH,UAAU,EAAEqG,gCAAwC;SACrD;QACD,OAAO,EAAE;YACP,UAAU,EAAEzG,UAAkB;SAC/B;KACF;IACD,eAAe,EAAE,CAACC,UAAqB,CAAC;IACxC,aAAa,EAAE;QACbC,KAAgB;QAChBM,iBAA4B;QAC5BE,cAAyB;KAC1B;IACD,gBAAgB,EAAE,CAACP,MAAiB,CAAC;gBACrCE,YAAU;CACX,CAAC;AACF,MAAM4F,sBAAoB,GAA6B;IACrD,IAAI,EACF,qFAAqF;IACvF,UAAU,EAAE,KAAK;IACjB,SAAS,EAAE;QACT,GAAG,EAAE;YACH,UAAU,EAAEiB,wCAAgD;SAC7D;QACD,OAAO,EAAE;YACP,UAAU,EAAElH,UAAkB;SAC/B;KACF;IACD,eAAe,EAAE,CAACC,UAAqB,CAAC;IACxC,aAAa,EAAE,CAACC,KAAgB,EAAEQ,cAAyB,CAAC;IAC5D,gBAAgB,EAAE,CAACP,MAAiB,CAAC;gBACrCE,YAAU;CACX,CAAC;AACF,MAAM+D,uBAAqB,GAA6B;IACtD,IAAI,EACF,8IAA8I;IAChJ,UAAU,EAAE,KAAK;IACjB,SAAS,EAAE;QACT,GAAG,EAAE;YACH,UAAU,EAAE+C,oCAA4C;SACzD;QACD,OAAO,EAAE;YACP,UAAU,EAAEnH,UAAkB;SAC/B;KACF;IACD,eAAe,EAAE,CAACC,UAAqB,CAAC;IACxC,aAAa,EAAE;QACbC,KAAgB;QAChBM,iBAA4B;QAC5BE,cAAyB;QACzBkG,cAAyB;KAC1B;IACD,gBAAgB,EAAE,CAACzG,MAAiB,CAAC;gBACrCE,YAAU;CACX,CAAC;AACF,MAAM,gCAAgC,GAA6B;IACjE,IAAI,EACF,0JAA0J;IAC5J,UAAU,EAAE,KAAK;IACjB,SAAS,EAAE;QACT,GAAG,EAAE;YACH,UAAU,EAAE+G,0CAAkD;SAC/D;QACD,OAAO,EAAE;YACP,UAAU,EAAEpH,UAAkB;SAC/B;KACF;IACD,eAAe,EAAE,CAACC,UAAqB,CAAC;IACxC,aAAa,EAAE;QACbC,KAAgB;QAChBM,iBAA4B;QAC5BE,cAAyB;QACzBkG,cAAyB;KAC1B;IACD,gBAAgB,EAAE,CAACzG,MAAiB,CAAC;gBACrCE,YAAU;CACX,CAAC;AACF,MAAM6F,uBAAqB,GAA6B;IACtD,IAAI,EACF,kJAAkJ;IACpJ,UAAU,EAAE,MAAM;IAClB,SAAS,EAAE;QACT,GAAG,EAAE,EAAE;QACP,GAAG,EAAE,EAAE;QACP,GAAG,EAAE,EAAE;QACP,GAAG,EAAE,EAAE;QACP,OAAO,EAAE;YACP,UAAU,EAAElG,UAAkB;SAC/B;KACF;IACD,WAAW,EAAE+G,aAAwB;IACrC,eAAe,EAAE,CAAC9G,UAAqB,EAAEoF,YAAuB,CAAC;IACjE,aAAa,EAAE;QACbnF,KAAgB;QAChBM,iBAA4B;QAC5BE,cAAyB;QACzBkG,cAAyB;KAC1B;IACD,gBAAgB,EAAE,CAACzG,MAAiB,EAAEQ,WAAsB,CAAC;IAC7D,SAAS,EAAE,MAAM;gBACjBN,YAAU;CACX,CAAC;AACF,MAAMqE,sBAAoB,GAA6B;IACrD,IAAI,EACF,iJAAiJ;IACnJ,UAAU,EAAE,MAAM;IAClB,SAAS,EAAE;QACT,GAAG,EAAE,EAAE;QACP,GAAG,EAAE,EAAE;QACP,GAAG,EAAE,EAAE;QACP,GAAG,EAAE,EAAE;QACP,OAAO,EAAE;YACP,UAAU,EAAE1E,UAAkB;SAC/B;KACF;IACD,WAAW,EAAE+G,aAAwB;IACrC,eAAe,EAAE,CAAC9G,UAAqB,CAAC;IACxC,aAAa,EAAE;QACbC,KAAgB;QAChBM,iBAA4B;QAC5BE,cAAyB;QACzBkG,cAAyB;KAC1B;IACD,gBAAgB,EAAE,CAACzG,MAAiB,EAAEQ,WAAsB,CAAC;IAC7D,SAAS,EAAE,MAAM;gBACjBN,YAAU;CACX,CAAC;AACF,MAAM8F,oBAAkB,GAA6B;IACnD,IAAI,EACF,+IAA+I;IACjJ,UAAU,EAAE,MAAM;IAClB,SAAS,EAAE;QACT,GAAG,EAAE,EAAE;QACP,GAAG,EAAE,EAAE;QACP,GAAG,EAAE,EAAE;QACP,GAAG,EAAE,EAAE;QACP,OAAO,EAAE;YACP,UAAU,EAAEnG,UAAkB;SAC/B;KACF;IACD,WAAW,EAAE+G,aAAwB;IACrC,eAAe,EAAE,CAAC9G,UAAqB,CAAC;IACxC,aAAa,EAAE;QACbC,KAAgB;QAChBM,iBAA4B;QAC5BE,cAAyB;QACzBkG,cAAyB;KAC1B;IACD,gBAAgB,EAAE,CAACzG,MAAiB,EAAEQ,WAAsB,CAAC;IAC7D,SAAS,EAAE,MAAM;gBACjBN,YAAU;CACX,CAAC;AACF,MAAM+F,uBAAqB,GAA6B;IACtD,IAAI,EACF,kJAAkJ;IACpJ,UAAU,EAAE,MAAM;IAClB,SAAS,EAAE;QACT,GAAG,EAAE,EAAE;QACP,GAAG,EAAE,EAAE;QACP,GAAG,EAAE,EAAE;QACP,GAAG,EAAE,EAAE;QACP,OAAO,EAAE;YACP,UAAU,EAAEpG,UAAkB;SAC/B;KACF;IACD,WAAW,EAAE+G,aAAwB;IACrC,eAAe,EAAE,CAAC9G,UAAqB,CAAC;IACxC,aAAa,EAAE;QACbC,KAAgB;QAChBM,iBAA4B;QAC5BE,cAAyB;QACzBkG,cAAyB;KAC1B;IACD,gBAAgB,EAAE,CAACzG,MAAiB,EAAEQ,WAAsB,CAAC;IAC7D,SAAS,EAAE,MAAM;gBACjBN,YAAU;CACX,CAAC;AACF,MAAMgG,iCAA+B,GAA6B;IAChE,IAAI,EACF,4JAA4J;IAC9J,UAAU,EAAE,MAAM;IAClB,SAAS,EAAE;QACT,GAAG,EAAE,EAAE;QACP,GAAG,EAAE,EAAE;QACP,GAAG,EAAE,EAAE;QACP,GAAG,EAAE,EAAE;QACP,OAAO,EAAE;YACP,UAAU,EAAErG,UAAkB;SAC/B;KACF;IACD,WAAW,EAAE+G,aAAwB;IACrC,eAAe,EAAE,CAAC9G,UAAqB,CAAC;IACxC,aAAa,EAAE;QACbC,KAAgB;QAChBM,iBAA4B;QAC5BE,cAAyB;QACzBkG,cAAyB;KAC1B;IACD,gBAAgB,EAAE,CAACzG,MAAiB,EAAEQ,WAAsB,CAAC;IAC7D,SAAS,EAAE,MAAM;gBACjBN,YAAU;CACX,CAAC;AACF,MAAM,4BAA4B,GAA6B;IAC7D,IAAI,EACF,uJAAuJ;IACzJ,UAAU,EAAE,MAAM;IAClB,SAAS,EAAE;QACT,GAAG,EAAE,EAAE;QACP,GAAG,EAAE,EAAE;QACP,GAAG,EAAE,EAAE;QACP,GAAG,EAAE,EAAE;QACP,OAAO,EAAE;YACP,UAAU,EAAEL,UAAkB;SAC/B;KACF;IACD,WAAW,EAAEgH,cAAyB;IACtC,eAAe,EAAE,CAAC/G,UAAqB,CAAC;IACxC,aAAa,EAAE;QACbC,KAAgB;QAChBM,iBAA4B;QAC5BE,cAAyB;QACzBkG,cAAyB;KAC1B;IACD,gBAAgB,EAAE,CAACzG,MAAiB,EAAEQ,WAAsB,CAAC;IAC7D,SAAS,EAAE,MAAM;gBACjBN,YAAU;CACX,CAAC;AACF,MAAMiG,sBAAoB,GAA6B;IACrD,IAAI,EACF,iJAAiJ;IACnJ,UAAU,EAAE,MAAM;IAClB,SAAS,EAAE;QACT,GAAG,EAAE,EAAE;QACP,GAAG,EAAE,EAAE;QACP,GAAG,EAAE,EAAE;QACP,GAAG,EAAE,EAAE;QACP,OAAO,EAAE;YACP,UAAU,EAAEtG,UAAkB;SAC/B;KACF;IACD,WAAW,EAAEqH,sBAAiC;IAC9C,eAAe,EAAE,CAACpH,UAAqB,CAAC;IACxC,aAAa,EAAE;QACbC,KAAgB;QAChBM,iBAA4B;QAC5BE,cAAyB;QACzBkG,cAAyB;KAC1B;IACD,gBAAgB,EAAE,CAACzG,MAAiB,EAAEQ,WAAsB,CAAC;IAC7D,SAAS,EAAE,MAAM;gBACjBN,YAAU;CACX,CAAC;AACF,MAAM,uBAAuB,GAA6B;IACxD,IAAI,EACF,oJAAoJ;IACtJ,UAAU,EAAE,MAAM;IAClB,SAAS,EAAE;QACT,GAAG,EAAE,EAAE;QACP,GAAG,EAAE,EAAE;QACP,GAAG,EAAE,EAAE;QACP,GAAG,EAAE,EAAE;QACP,OAAO,EAAE;YACP,UAAU,EAAEL,UAAkB;SAC/B;KACF;IACD,WAAW,EAAE+G,aAAwB;IACrC,eAAe,EAAE,CAAC9G,UAAqB,CAAC;IACxC,aAAa,EAAE;QACbC,KAAgB;QAChBM,iBAA4B;QAC5BE,cAAyB;QACzBkG,cAAyB;KAC1B;IACD,gBAAgB,EAAE,CAACzG,MAAiB,EAAEQ,WAAsB,CAAC;IAC7D,SAAS,EAAE,MAAM;gBACjBN,YAAU;CACX,CAAC;AACF,MAAM,+DAA+D,GAA6B;IAChG,IAAI,EACF,4LAA4L;IAC9L,UAAU,EAAE,MAAM;IAClB,SAAS,EAAE;QACT,GAAG,EAAE;YACH,UAAU,EAAEiH,oBAA4B;SACzC;QACD,OAAO,EAAE;YACP,UAAU,EAAEtH,UAAkB;SAC/B;KACF;IACD,eAAe,EAAE;QACfC,UAAqB;QACrBsH,oBAA+B;QAC/BC,IAAe;QACfC,gBAA2B;KAC5B;IACD,aAAa,EAAE;QACbvH,KAAgB;QAChBM,iBAA4B;QAC5BE,cAAyB;QACzBkG,cAAyB;KAC1B;IACD,gBAAgB,EAAE,CAACzG,MAAiB,CAAC;gBACrCE,YAAU;CACX,CAAC;AACF,MAAM,0CAA0C,GAA6B;IAC3E,IAAI,EACF,uKAAuK;IACzK,UAAU,EAAE,MAAM;IAClB,SAAS,EAAE;QACT,GAAG,EAAE,EAAE;QACP,OAAO,EAAE;YACP,UAAU,EAAEL,UAAkB;SAC/B;KACF;IACD,WAAW,EAAE0H,YAAuB;IACpC,eAAe,EAAE,CAACzH,UAAqB,CAAC;IACxC,aAAa,EAAE;QACbC,KAAgB;QAChBM,iBAA4B;QAC5BE,cAAyB;QACzBkG,cAAyB;KAC1B;IACD,gBAAgB,EAAE,CAACzG,MAAiB,EAAEQ,WAAsB,CAAC;IAC7D,SAAS,EAAE,MAAM;gBACjBN,YAAU;CACX,CAAC;AACF,MAAM,yCAAyC,GAA6B;IAC1E,IAAI,EACF,sKAAsK;IACxK,UAAU,EAAE,MAAM;IAClB,SAAS,EAAE;QACT,GAAG,EAAE,EAAE;QACP,GAAG,EAAE,EAAE;QACP,GAAG,EAAE,EAAE;QACP,GAAG,EAAE,EAAE;QACP,OAAO,EAAE;YACP,UAAU,EAAEL,UAAkB;SAC/B;KACF;IACD,WAAW,EAAE2H,YAAuB;IACpC,eAAe,EAAE,CAAC1H,UAAqB,CAAC;IACxC,aAAa,EAAE;QACbC,KAAgB;QAChBM,iBAA4B;QAC5BE,cAAyB;QACzBkG,cAAyB;KAC1B;IACD,gBAAgB,EAAE,CAACzG,MAAiB,EAAEQ,WAAsB,CAAC;IAC7D,SAAS,EAAE,MAAM;gBACjBN,YAAU;CACX,CAAC;AACF,MAAMkG,iCAA+B,GAA6B;IAChE,IAAI,EAAE,YAAY;IAClB,UAAU,EAAE,KAAK;IACjB,SAAS,EAAE;QACT,GAAG,EAAE;YACH,UAAU,EAAEE,gCAAwC;SACrD;QACD,OAAO,EAAE;YACP,UAAU,EAAEzG,UAAkB;SAC/B;KACF;IACD,eAAe,EAAE,CAACC,UAAqB,CAAC;IACxC,aAAa,EAAE;QACbC,KAAgB;QAChBQ,cAAyB;QACzBM,QAAmB;QACnBwD,SAAoB;KACrB;IACD,gBAAgB,EAAE,CAACrE,MAAiB,CAAC;gBACrCE,YAAU;CACX,CAAC;AACF,MAAMiE,uBAAqB,GAA6B;IACtD,IAAI,EAAE,YAAY;IAClB,UAAU,EAAE,KAAK;IACjB,SAAS,EAAE;QACT,GAAG,EAAE;YACH,UAAU,EAAEmC,gCAAwC;SACrD;QACD,OAAO,EAAE;YACP,UAAU,EAAEzG,UAAkB;SAC/B;KACF;IACD,eAAe,EAAE,CAACC,UAAqB,CAAC;IACxC,aAAa,EAAE;QACbC,KAAgB;QAChBM,iBAA4B;QAC5BE,cAAyB;QACzBM,QAAmB;KACpB;IACD,gBAAgB,EAAE,CAACb,MAAiB,CAAC;gBACrCE,YAAU;CACX,CAAC;AACF,MAAMmG,0BAAwB,GAA6B;IACzD,IAAI,EAAE,YAAY;IAClB,UAAU,EAAE,KAAK;IACjB,SAAS,EAAE;QACT,GAAG,EAAE;YACH,UAAU,EAAEU,wCAAgD;SAC7D;QACD,OAAO,EAAE;YACP,UAAU,EAAElH,UAAkB;SAC/B;KACF;IACD,eAAe,EAAE,CAACC,UAAqB,CAAC;IACxC,aAAa,EAAE;QACbC,KAAgB;QAChBQ,cAAyB;QACzBM,QAAmB;KACpB;IACD,gBAAgB,EAAE,CAACb,MAAiB,CAAC;gBACrCE,YAAU;CACX,CAAC;AACF,MAAM,yBAAyB,GAA6B;IAC1D,IAAI,EAAE,YAAY;IAClB,UAAU,EAAE,KAAK;IACjB,SAAS,EAAE;QACT,GAAG,EAAE;YACH,UAAU,EAAE8G,oCAA4C;SACzD;QACD,OAAO,EAAE;YACP,UAAU,EAAEnH,UAAkB;SAC/B;KACF;IACD,eAAe,EAAE,CAACC,UAAqB,CAAC;IACxC,aAAa,EAAE;QACbC,KAAgB;QAChBM,iBAA4B;QAC5BE,cAAyB;QACzBM,QAAmB;QACnB4F,cAAyB;KAC1B;IACD,gBAAgB,EAAE,CAACzG,MAAiB,CAAC;gBACrCE,YAAU;CACX,CAAC;AACF,MAAM,oCAAoC,GAA6B;IACrE,IAAI,EAAE,YAAY;IAClB,UAAU,EAAE,KAAK;IACjB,SAAS,EAAE;QACT,GAAG,EAAE;YACH,UAAU,EAAE+G,0CAAkD;SAC/D;QACD,OAAO,EAAE;YACP,UAAU,EAAEpH,UAAkB;SAC/B;KACF;IACD,eAAe,EAAE,CAACC,UAAqB,CAAC;IACxC,aAAa,EAAE;QACbC,KAAgB;QAChBM,iBAA4B;QAC5BE,cAAyB;QACzBM,QAAmB;QACnB4F,cAAyB;KAC1B;IACD,gBAAgB,EAAE,CAACzG,MAAiB,CAAC;gBACrCE,YAAU;CACX,CAAC;;ACr5EF;;;;;;;AAoBA;AACA;AACA,MAAa,uBAAuB;;;;;IAOlC,YAAY,MAA+B;QACzC,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;KACtB;;;;;;;IAQM,IAAI,CACT,QAAgB,EAChB,OAA+C;QAE/C,MAAM,IAAI,GAAG,IAAI,CAAC,aAAa,CAAC,QAAQ,EAAE,OAAO,CAAC,CAAC;QACnD,OAAO;YACL,IAAI;gBACF,OAAO,IAAI,CAAC,IAAI,EAAE,CAAC;aACpB;YACD,CAAC,MAAM,CAAC,aAAa,CAAC;gBACpB,OAAO,IAAI,CAAC;aACb;YACD,MAAM,EAAE;gBACN,OAAO,IAAI,CAAC,cAAc,CAAC,QAAQ,EAAE,OAAO,CAAC,CAAC;aAC/C;SACF,CAAC;KACH;IAEc,cAAc,CAC3B,QAAgB,EAChB,OAA+C;;YAE/C,IAAI,MAAM,GAAG,oBAAM,IAAI,CAAC,KAAK,CAAC,QAAQ,EAAE,OAAO,CAAC,CAAA,CAAC;YACjD,0BAAM,MAAM,CAAC,KAAK,IAAI,EAAE,CAAA,CAAC;SAC1B;KAAA;IAEc,aAAa,CAC1B,QAAgB,EAChB,OAA+C;;;;gBAE/C,KAAyB,IAAA,KAAAT,oBAAA,IAAI,CAAC,cAAc,CAAC,QAAQ,EAAE,OAAO,CAAC,CAAA,IAAA;oBAApD,MAAM,IAAI,WAAA,CAAA;oBACnB,oBAAA,OAAOC,uBAAAD,oBAAA,IAAI,CAAA,CAAA,CAAA,CAAC;iBACb;;;;;;;;;SACF;KAAA;;;;;;;IAQO,KAAK,CACX,QAAgB,EAChB,OAA+C;QAE/C,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,QAAQ,EAAE,OAAO,EAAE,EACrBQ,mBAAiB,CAClB,CAAC;KACH;CACF;AACD;AACA,MAAMC,YAAU,GAAGP,2BAA2B,CAAC,OAAO,cAAc,KAAK,CAAC,CAAC;AAE3E,MAAMM,mBAAiB,GAA6B;IAClD,IAAI,EACF,0FAA0F;IAC5F,UAAU,EAAE,KAAK;IACjB,SAAS,EAAE;QACT,GAAG,EAAE;YACH,UAAU,EAAEW,4BAAoC;SACjD;QACD,OAAO,EAAE;YACP,UAAU,EAAEf,UAAkB;SAC/B;KACF;IACD,eAAe,EAAE,CAACC,UAAqB,CAAC;IACxC,aAAa,EAAE;QACbC,KAAgB;QAChBQ,cAAyB;QACzB8D,SAAoB;KACrB;IACD,gBAAgB,EAAE,CAACrE,MAAiB,CAAC;gBACrCE,YAAU;CACX,CAAC;;ACjHF;;;;;;;AAoCA;AACA;AACA,MAAa,UAAU;;;;;IAOrB,YAAY,MAA+B;QACzC,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;KACtB;;;;;;IAOM,mBAAmB,CACxB,iBAAyB,EACzB,OAAiD;QAEjD,MAAM,IAAI,GAAG,IAAI,CAAC,4BAA4B,CAAC,iBAAiB,EAAE,OAAO,CAAC,CAAC;QAC3E,OAAO;YACL,IAAI;gBACF,OAAO,IAAI,CAAC,IAAI,EAAE,CAAC;aACpB;YACD,CAAC,MAAM,CAAC,aAAa,CAAC;gBACpB,OAAO,IAAI,CAAC;aACb;YACD,MAAM,EAAE;gBACN,OAAO,IAAI,CAAC,6BAA6B,CAAC,iBAAiB,EAAE,OAAO,CAAC,CAAC;aACvE;SACF,CAAC;KACH;IAEc,6BAA6B,CAC1C,iBAAyB,EACzB,OAAiD;;YAEjD,IAAI,MAAM,GAAG,oBAAM,IAAI,CAAC,oBAAoB,CAAC,iBAAiB,EAAE,OAAO,CAAC,CAAA,CAAC;YACzE,0BAAM,MAAM,CAAC,KAAK,IAAI,EAAE,CAAA,CAAC;YACzB,IAAI,iBAAiB,GAAG,MAAM,CAAC,QAAQ,CAAC;YACxC,OAAO,iBAAiB,EAAE;gBACxB,MAAM,GAAG,oBAAM,IAAI,CAAC,wBAAwB,CAC1C,iBAAiB,EACjB,iBAAiB,EACjB,OAAO,CACR,CAAA,CAAC;gBACF,iBAAiB,GAAG,MAAM,CAAC,QAAQ,CAAC;gBACpC,0BAAM,MAAM,CAAC,KAAK,IAAI,EAAE,CAAA,CAAC;aAC1B;SACF;KAAA;IAEc,4BAA4B,CACzC,iBAAyB,EACzB,OAAiD;;;;gBAEjD,KAAyB,IAAA,KAAAT,oBAAA,IAAI,CAAC,6BAA6B,CACzD,iBAAiB,EACjB,OAAO,CACR,CAAA,IAAA;oBAHU,MAAM,IAAI,WAAA,CAAA;oBAInB,oBAAA,OAAOC,uBAAAD,oBAAA,IAAI,CAAA,CAAA,CAAA,CAAC;iBACb;;;;;;;;;SACF;KAAA;;;;;;IAOM,IAAI,CACT,OAAkC;QAElC,MAAM,IAAI,GAAG,IAAI,CAAC,aAAa,CAAC,OAAO,CAAC,CAAC;QACzC,OAAO;YACL,IAAI;gBACF,OAAO,IAAI,CAAC,IAAI,EAAE,CAAC;aACpB;YACD,CAAC,MAAM,CAAC,aAAa,CAAC;gBACpB,OAAO,IAAI,CAAC;aACb;YACD,MAAM,EAAE;gBACN,OAAO,IAAI,CAAC,cAAc,CAAC,OAAO,CAAC,CAAC;aACrC;SACF,CAAC;KACH;IAEc,cAAc,CAC3B,OAAkC;;YAElC,IAAI,MAAM,GAAG,oBAAM,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,CAAA,CAAC;YACvC,0BAAM,MAAM,CAAC,KAAK,IAAI,EAAE,CAAA,CAAC;YACzB,IAAI,iBAAiB,GAAG,MAAM,CAAC,QAAQ,CAAC;YACxC,OAAO,iBAAiB,EAAE;gBACxB,MAAM,GAAG,oBAAM,IAAI,CAAC,SAAS,CAAC,iBAAiB,EAAE,OAAO,CAAC,CAAA,CAAC;gBAC1D,iBAAiB,GAAG,MAAM,CAAC,QAAQ,CAAC;gBACpC,0BAAM,MAAM,CAAC,KAAK,IAAI,EAAE,CAAA,CAAC;aAC1B;SACF;KAAA;IAEc,aAAa,CAC1B,OAAkC;;;;gBAElC,KAAyB,IAAA,KAAAA,oBAAA,IAAI,CAAC,cAAc,CAAC,OAAO,CAAC,CAAA,IAAA;oBAA1C,MAAM,IAAI,WAAA,CAAA;oBACnB,oBAAA,OAAOC,uBAAAD,oBAAA,IAAI,CAAA,CAAA,CAAA,CAAC;iBACb;;;;;;;;;SACF;KAAA;;;;;;;;IASK,mBAAmB,CACvB,iBAAyB,EACzB,SAAiB,EACjB,UAAiB,EACjB,OAA4C;;YAO5C,MAAM,mBAAmB,GAAG,CAC1B,IAAmC,EACnC,IAA8B;gBAE9B,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;aACrD,CAAA,CAAC;YACF,MAAM,aAAa,GAAG,CACpB,IAAmC,EACnC,IAA8B;;gBAE9B,IAAI,kBAAkB,GAEN,SAAS,CAAC;gBAC1B,MAAM,gBAAgB,GAAG,MAAA,IAAI,CAAC,OAAO,0CAAE,UAAU,CAAC;gBAClD,MAAM,QAAQ,GAAmC,CAC/C,WAA6C,EAC7C,YAAqB;oBAErB,kBAAkB,GAAG,WAAW,CAAC;oBACjC,gBAAgB,aAAhB,gBAAgB,uBAAhB,gBAAgB,CAAG,WAAW,EAAE,YAAY,CAAC,CAAC;iBAC/C,CAAC;gBACF,MAAM,WAAW,mCACZ,IAAI,KACP,OAAO,kCACF,IAAI,CAAC,OAAO,KACf,UAAU,EAAE,QAAQ,MAEvB,CAAC;gBACF,MAAM,YAAY,GAAG,MAAM,mBAAmB,CAAC,WAAW,EAAE,IAAI,CAAC,CAAC;gBAClE,OAAO;oBACL,YAAY;oBACZ,WAAW,EAAE;wBACX,UAAU,EAAE,kBAAmB,CAAC,MAAM;wBACtC,IAAI,EAAE,kBAAmB,CAAC,UAAU;wBACpC,OAAO,EAAE,kBAAmB,CAAC,OAAO,CAAC,MAAM,EAAE;qBAC9C;iBACF,CAAC;aACH,CAAA,CAAC;YAEF,MAAM,GAAG,GAAG,IAAI,OAAO,CACrB,aAAa,EACb,EAAE,iBAAiB,EAAE,SAAS,EAAE,UAAU,EAAE,OAAO,EAAE,EACrDqB,6BAA2B,CAC5B,CAAC;YACF,OAAO,IAAIoB,iBAAS,CAAC,GAAG,EAAE;gBACxB,UAAU,EAAE,OAAO,aAAP,OAAO,uBAAP,OAAO,CAAE,UAAU;gBAC/B,YAAY,EAAE,OAAO,aAAP,OAAO,uBAAP,OAAO,CAAE,kBAAkB;aAC1C,CAAC,CAAC;SACJ;KAAA;;;;;;;;IASK,0BAA0B,CAC9B,iBAAyB,EACzB,SAAiB,EACjB,UAAiB,EACjB,OAA4C;;YAE5C,MAAM,MAAM,GAAG,MAAM,IAAI,CAAC,mBAAmB,CAC3C,iBAAiB,EACjB,SAAS,EACT,UAAU,EACV,OAAO,CACR,CAAC;YACF,OAAO,MAAM,CAAC,aAAa,EAAE,CAAC;SAC/B;KAAA;;;;;;;;IASK,WAAW,CACf,iBAAyB,EACzB,SAAiB,EACjB,UAAuB,EACvB,OAAoC;;YAIpC,MAAM,mBAAmB,GAAG,CAC1B,IAAmC,EACnC,IAA8B;gBAE9B,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;aACrD,CAAA,CAAC;YACF,MAAM,aAAa,GAAG,CACpB,IAAmC,EACnC,IAA8B;;gBAE9B,IAAI,kBAAkB,GAEN,SAAS,CAAC;gBAC1B,MAAM,gBAAgB,GAAG,MAAA,IAAI,CAAC,OAAO,0CAAE,UAAU,CAAC;gBAClD,MAAM,QAAQ,GAAmC,CAC/C,WAA6C,EAC7C,YAAqB;oBAErB,kBAAkB,GAAG,WAAW,CAAC;oBACjC,gBAAgB,aAAhB,gBAAgB,uBAAhB,gBAAgB,CAAG,WAAW,EAAE,YAAY,CAAC,CAAC;iBAC/C,CAAC;gBACF,MAAM,WAAW,mCACZ,IAAI,KACP,OAAO,kCACF,IAAI,CAAC,OAAO,KACf,UAAU,EAAE,QAAQ,MAEvB,CAAC;gBACF,MAAM,YAAY,GAAG,MAAM,mBAAmB,CAAC,WAAW,EAAE,IAAI,CAAC,CAAC;gBAClE,OAAO;oBACL,YAAY;oBACZ,WAAW,EAAE;wBACX,UAAU,EAAE,kBAAmB,CAAC,MAAM;wBACtC,IAAI,EAAE,kBAAmB,CAAC,UAAU;wBACpC,OAAO,EAAE,kBAAmB,CAAC,OAAO,CAAC,MAAM,EAAE;qBAC9C;iBACF,CAAC;aACH,CAAA,CAAC;YAEF,MAAM,GAAG,GAAG,IAAI,OAAO,CACrB,aAAa,EACb,EAAE,iBAAiB,EAAE,SAAS,EAAE,UAAU,EAAE,OAAO,EAAE,EACrDnB,qBAAmB,CACpB,CAAC;YACF,OAAO,IAAImB,iBAAS,CAAC,GAAG,EAAE;gBACxB,UAAU,EAAE,OAAO,aAAP,OAAO,uBAAP,OAAO,CAAE,UAAU;gBAC/B,YAAY,EAAE,OAAO,aAAP,OAAO,uBAAP,OAAO,CAAE,kBAAkB;aAC1C,CAAC,CAAC;SACJ;KAAA;;;;;;;;IASK,kBAAkB,CACtB,iBAAyB,EACzB,SAAiB,EACjB,UAAuB,EACvB,OAAoC;;YAEpC,MAAM,MAAM,GAAG,MAAM,IAAI,CAAC,WAAW,CACnC,iBAAiB,EACjB,SAAS,EACT,UAAU,EACV,OAAO,CACR,CAAC;YACF,OAAO,MAAM,CAAC,aAAa,EAAE,CAAC;SAC/B;KAAA;;;;;;;IAQK,WAAW,CACf,iBAAyB,EACzB,SAAiB,EACjB,OAAoC;;YAEpC,MAAM,mBAAmB,GAAG,CAC1B,IAAmC,EACnC,IAA8B;gBAE9B,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;aACrD,CAAA,CAAC;YACF,MAAM,aAAa,GAAG,CACpB,IAAmC,EACnC,IAA8B;;gBAE9B,IAAI,kBAAkB,GAEN,SAAS,CAAC;gBAC1B,MAAM,gBAAgB,GAAG,MAAA,IAAI,CAAC,OAAO,0CAAE,UAAU,CAAC;gBAClD,MAAM,QAAQ,GAAmC,CAC/C,WAA6C,EAC7C,YAAqB;oBAErB,kBAAkB,GAAG,WAAW,CAAC;oBACjC,gBAAgB,aAAhB,gBAAgB,uBAAhB,gBAAgB,CAAG,WAAW,EAAE,YAAY,CAAC,CAAC;iBAC/C,CAAC;gBACF,MAAM,WAAW,mCACZ,IAAI,KACP,OAAO,kCACF,IAAI,CAAC,OAAO,KACf,UAAU,EAAE,QAAQ,MAEvB,CAAC;gBACF,MAAM,YAAY,GAAG,MAAM,mBAAmB,CAAC,WAAW,EAAE,IAAI,CAAC,CAAC;gBAClE,OAAO;oBACL,YAAY;oBACZ,WAAW,EAAE;wBACX,UAAU,EAAE,kBAAmB,CAAC,MAAM;wBACtC,IAAI,EAAE,kBAAmB,CAAC,UAAU;wBACpC,OAAO,EAAE,kBAAmB,CAAC,OAAO,CAAC,MAAM,EAAE;qBAC9C;iBACF,CAAC;aACH,CAAA,CAAC;YAEF,MAAM,GAAG,GAAG,IAAI,OAAO,CACrB,aAAa,EACb,EAAE,iBAAiB,EAAE,SAAS,EAAE,OAAO,EAAE,EACzClB,qBAAmB,CACpB,CAAC;YACF,OAAO,IAAIkB,iBAAS,CAAC,GAAG,EAAE;gBACxB,UAAU,EAAE,OAAO,aAAP,OAAO,uBAAP,OAAO,CAAE,UAAU;gBAC/B,YAAY,EAAE,OAAO,aAAP,OAAO,uBAAP,OAAO,CAAE,kBAAkB;aAC1C,CAAC,CAAC;SACJ;KAAA;;;;;;;IAQK,kBAAkB,CACtB,iBAAyB,EACzB,SAAiB,EACjB,OAAoC;;YAEpC,MAAM,MAAM,GAAG,MAAM,IAAI,CAAC,WAAW,CACnC,iBAAiB,EACjB,SAAS,EACT,OAAO,CACR,CAAC;YACF,OAAO,MAAM,CAAC,aAAa,EAAE,CAAC;SAC/B;KAAA;;;;;;;IAQD,GAAG,CACD,iBAAyB,EACzB,SAAiB,EACjB,OAAiC;QAEjC,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,iBAAiB,EAAE,SAAS,EAAE,OAAO,EAAE,EACzCjB,kBAAgB,CACjB,CAAC;KACH;;;;;;IAOO,oBAAoB,CAC1B,iBAAyB,EACzB,OAAiD;QAEjD,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,iBAAiB,EAAE,OAAO,EAAE,EAC9BS,kCAAgC,CACjC,CAAC;KACH;;;;;;IAOO,KAAK,CACX,OAAkC;QAElC,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CAAC,EAAE,OAAO,EAAE,EAAEzB,mBAAiB,CAAC,CAAC;KACzE;;;;;;;IAQO,wBAAwB,CAC9B,iBAAyB,EACzB,QAAgB,EAChB,OAAqD;QAErD,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,iBAAiB,EAAE,QAAQ,EAAE,OAAO,EAAE,EACxC0B,sCAAoC,CACrC,CAAC;KACH;;;;;;IAOO,SAAS,CACf,QAAgB,EAChB,OAAsC;QAEtC,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,QAAQ,EAAE,OAAO,EAAE,EACrBwC,uBAAqB,CACtB,CAAC;KACH;CACF;AACD;AACA,MAAMjE,YAAU,GAAGP,2BAA2B,CAAC,OAAO,cAAc,KAAK,CAAC,CAAC;AAE3E,MAAMmB,6BAA2B,GAA6B;IAC5D,IAAI,EACF,mHAAmH;IACrH,UAAU,EAAE,KAAK;IACjB,SAAS,EAAE;QACT,GAAG,EAAE;YACH,UAAU,EAAE2G,KAAa;SAC1B;QACD,GAAG,EAAE;YACH,UAAU,EAAEA,KAAa;SAC1B;QACD,GAAG,EAAE;YACH,UAAU,EAAEA,KAAa;SAC1B;QACD,GAAG,EAAE;YACH,UAAU,EAAEA,KAAa;SAC1B;QACD,OAAO,EAAE;YACP,UAAU,EAAE5H,UAAkB;SAC/B;KACF;IACD,WAAW,EAAE6H,YAAuB;IACpC,eAAe,EAAE,CAAC5H,UAAqB,CAAC;IACxC,aAAa,EAAE;QACbC,KAAgB;QAChBM,iBAA4B;QAC5BE,cAAyB;QACzBoH,SAAoB;KACrB;IACD,gBAAgB,EAAE,CAAC3H,MAAiB,EAAEQ,WAAsB,CAAC;IAC7D,SAAS,EAAE,MAAM;gBACjBN,YAAU;CACX,CAAC;AACF,MAAMa,qBAAmB,GAA6B;IACpD,IAAI,EACF,mHAAmH;IACrH,UAAU,EAAE,OAAO;IACnB,SAAS,EAAE;QACT,GAAG,EAAE;YACH,UAAU,EAAE0G,KAAa;SAC1B;QACD,GAAG,EAAE;YACH,UAAU,EAAEA,KAAa;SAC1B;QACD,GAAG,EAAE;YACH,UAAU,EAAEA,KAAa;SAC1B;QACD,GAAG,EAAE;YACH,UAAU,EAAEA,KAAa;SAC1B;QACD,OAAO,EAAE;YACP,UAAU,EAAE5H,UAAkB;SAC/B;KACF;IACD,WAAW,EAAE+H,YAAuB;IACpC,eAAe,EAAE,CAAC9H,UAAqB,CAAC;IACxC,aAAa,EAAE;QACbC,KAAgB;QAChBM,iBAA4B;QAC5BE,cAAyB;QACzBoH,SAAoB;KACrB;IACD,gBAAgB,EAAE,CAAC3H,MAAiB,EAAEQ,WAAsB,CAAC;IAC7D,SAAS,EAAE,MAAM;gBACjBN,YAAU;CACX,CAAC;AACF,MAAMc,qBAAmB,GAA6B;IACpD,IAAI,EACF,mHAAmH;IACrH,UAAU,EAAE,QAAQ;IACpB,SAAS,EAAE;QACT,GAAG,EAAE,EAAE;QACP,GAAG,EAAE,EAAE;QACP,GAAG,EAAE,EAAE;QACP,GAAG,EAAE,EAAE;QACP,OAAO,EAAE;YACP,UAAU,EAAEnB,UAAkB;SAC/B;KACF;IACD,eAAe,EAAE,CAACC,UAAqB,CAAC;IACxC,aAAa,EAAE;QACbC,KAAgB;QAChBM,iBAA4B;QAC5BE,cAAyB;QACzBoH,SAAoB;KACrB;IACD,gBAAgB,EAAE,CAAC3H,MAAiB,CAAC;gBACrCE,YAAU;CACX,CAAC;AACF,MAAMe,kBAAgB,GAA6B;IACjD,IAAI,EACF,mHAAmH;IACrH,UAAU,EAAE,KAAK;IACjB,SAAS,EAAE;QACT,GAAG,EAAE;YACH,UAAU,EAAEwG,KAAa;SAC1B;QACD,OAAO,EAAE;YACP,UAAU,EAAE5H,UAAkB;SAC/B;KACF;IACD,eAAe,EAAE,CAACC,UAAqB,EAAEa,MAAiB,CAAC;IAC3D,aAAa,EAAE;QACbZ,KAAgB;QAChBM,iBAA4B;QAC5BE,cAAyB;QACzBoH,SAAoB;KACrB;IACD,gBAAgB,EAAE,CAAC3H,MAAiB,CAAC;gBACrCE,YAAU;CACX,CAAC;AACF,MAAMwB,kCAAgC,GAA6B;IACjE,IAAI,EACF,uGAAuG;IACzG,UAAU,EAAE,KAAK;IACjB,SAAS,EAAE;QACT,GAAG,EAAE;YACH,UAAU,EAAEmG,eAAuB;SACpC;QACD,OAAO,EAAE;YACP,UAAU,EAAEhI,UAAkB;SAC/B;KACF;IACD,eAAe,EAAE,CAACC,UAAqB,CAAC;IACxC,aAAa,EAAE;QACbC,KAAgB;QAChBM,iBAA4B;QAC5BE,cAAyB;KAC1B;IACD,gBAAgB,EAAE,CAACP,MAAiB,CAAC;gBACrCE,YAAU;CACX,CAAC;AACF,MAAMD,mBAAiB,GAA6B;IAClD,IAAI,EAAE,oEAAoE;IAC1E,UAAU,EAAE,KAAK;IACjB,SAAS,EAAE;QACT,GAAG,EAAE;YACH,UAAU,EAAE4H,eAAuB;SACpC;QACD,OAAO,EAAE;YACP,UAAU,EAAEhI,UAAkB;SAC/B;KACF;IACD,eAAe,EAAE,CAACC,UAAqB,CAAC;IACxC,aAAa,EAAE,CAACC,KAAgB,EAAEQ,cAAyB,CAAC;IAC5D,gBAAgB,EAAE,CAACP,MAAiB,CAAC;gBACrCE,YAAU;CACX,CAAC;AACF,MAAMyB,sCAAoC,GAA6B;IACrE,IAAI,EAAE,YAAY;IAClB,UAAU,EAAE,KAAK;IACjB,SAAS,EAAE;QACT,GAAG,EAAE;YACH,UAAU,EAAEkG,eAAuB;SACpC;QACD,OAAO,EAAE;YACP,UAAU,EAAEhI,UAAkB;SAC/B;KACF;IACD,eAAe,EAAE,CAACC,UAAqB,CAAC;IACxC,aAAa,EAAE;QACbC,KAAgB;QAChBM,iBAA4B;QAC5BE,cAAyB;QACzBM,QAAmB;KACpB;IACD,gBAAgB,EAAE,CAACb,MAAiB,CAAC;gBACrCE,YAAU;CACX,CAAC;AACF,MAAMiE,uBAAqB,GAA6B;IACtD,IAAI,EAAE,YAAY;IAClB,UAAU,EAAE,KAAK;IACjB,SAAS,EAAE;QACT,GAAG,EAAE;YACH,UAAU,EAAE0D,eAAuB;SACpC;QACD,OAAO,EAAE;YACP,UAAU,EAAEhI,UAAkB;SAC/B;KACF;IACD,eAAe,EAAE,CAACC,UAAqB,CAAC;IACxC,aAAa,EAAE;QACbC,KAAgB;QAChBQ,cAAyB;QACzBM,QAAmB;KACpB;IACD,gBAAgB,EAAE,CAACb,MAAiB,CAAC;gBACrCE,YAAU;CACX,CAAC;;AC5pBF;;;;;;;AAoCA;AACA;AACA,MAAa,2BAA2B;;;;;IAOtC,YAAY,MAA+B;QACzC,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;KACtB;;;;;;IAOM,IAAI,CACT,iBAAyB,EACzB,OAAmD;QAEnD,MAAM,IAAI,GAAG,IAAI,CAAC,aAAa,CAAC,iBAAiB,EAAE,OAAO,CAAC,CAAC;QAC5D,OAAO;YACL,IAAI;gBACF,OAAO,IAAI,CAAC,IAAI,EAAE,CAAC;aACpB;YACD,CAAC,MAAM,CAAC,aAAa,CAAC;gBACpB,OAAO,IAAI,CAAC;aACb;YACD,MAAM,EAAE;gBACN,OAAO,IAAI,CAAC,cAAc,CAAC,iBAAiB,EAAE,OAAO,CAAC,CAAC;aACxD;SACF,CAAC;KACH;IAEc,cAAc,CAC3B,iBAAyB,EACzB,OAAmD;;YAEnD,IAAI,MAAM,GAAG,oBAAM,IAAI,CAAC,KAAK,CAAC,iBAAiB,EAAE,OAAO,CAAC,CAAA,CAAC;YAC1D,0BAAM,MAAM,CAAC,KAAK,IAAI,EAAE,CAAA,CAAC;YACzB,IAAI,iBAAiB,GAAG,MAAM,CAAC,QAAQ,CAAC;YACxC,OAAO,iBAAiB,EAAE;gBACxB,MAAM,GAAG,oBAAM,IAAI,CAAC,SAAS,CAC3B,iBAAiB,EACjB,iBAAiB,EACjB,OAAO,CACR,CAAA,CAAC;gBACF,iBAAiB,GAAG,MAAM,CAAC,QAAQ,CAAC;gBACpC,0BAAM,MAAM,CAAC,KAAK,IAAI,EAAE,CAAA,CAAC;aAC1B;SACF;KAAA;IAEc,aAAa,CAC1B,iBAAyB,EACzB,OAAmD;;;;gBAEnD,KAAyB,IAAA,KAAAT,oBAAA,IAAI,CAAC,cAAc,CAAC,iBAAiB,EAAE,OAAO,CAAC,CAAA,IAAA;oBAA7D,MAAM,IAAI,WAAA,CAAA;oBACnB,oBAAA,OAAOC,uBAAAD,oBAAA,IAAI,CAAA,CAAA,CAAA,CAAC;iBACb;;;;;;;;;SACF;KAAA;;;;;;;IAQM,OAAO,CACZ,OAAsD;QAEtD,MAAM,IAAI,GAAG,IAAI,CAAC,gBAAgB,CAAC,OAAO,CAAC,CAAC;QAC5C,OAAO;YACL,IAAI;gBACF,OAAO,IAAI,CAAC,IAAI,EAAE,CAAC;aACpB;YACD,CAAC,MAAM,CAAC,aAAa,CAAC;gBACpB,OAAO,IAAI,CAAC;aACb;YACD,MAAM,EAAE;gBACN,OAAO,IAAI,CAAC,iBAAiB,CAAC,OAAO,CAAC,CAAC;aACxC;SACF,CAAC;KACH;IAEc,iBAAiB,CAC9B,OAAsD;;YAEtD,IAAI,MAAM,GAAG,oBAAM,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAA,CAAC;YAC1C,0BAAM,MAAM,CAAC,KAAK,IAAI,EAAE,CAAA,CAAC;YACzB,IAAI,iBAAiB,GAAG,MAAM,CAAC,QAAQ,CAAC;YACxC,OAAO,iBAAiB,EAAE;gBACxB,MAAM,GAAG,oBAAM,IAAI,CAAC,YAAY,CAAC,iBAAiB,EAAE,OAAO,CAAC,CAAA,CAAC;gBAC7D,iBAAiB,GAAG,MAAM,CAAC,QAAQ,CAAC;gBACpC,0BAAM,MAAM,CAAC,KAAK,IAAI,EAAE,CAAA,CAAC;aAC1B;SACF;KAAA;IAEc,gBAAgB,CAC7B,OAAsD;;;;gBAEtD,KAAyB,IAAA,KAAAA,oBAAA,IAAI,CAAC,iBAAiB,CAAC,OAAO,CAAC,CAAA,IAAA;oBAA7C,MAAM,IAAI,WAAA,CAAA;oBACnB,oBAAA,OAAOC,uBAAAD,oBAAA,IAAI,CAAA,CAAA,CAAA,CAAC;iBACb;;;;;;;;;SACF;KAAA;;;;;;;;;;IAWD,cAAc,CACZ,iBAAyB,EACzB,0BAAkC,EAClC,UAAkC,EAClC,OAA6D;QAE7D,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,iBAAiB,EAAE,0BAA0B,EAAE,UAAU,EAAE,OAAO,EAAE,EACtEqB,6BAA2B,CAC5B,CAAC;KACH;;;;;;;;IASD,MAAM,CACJ,iBAAyB,EACzB,0BAAkC,EAClC,UAAwC,EACxC,OAAqD;QAErD,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,iBAAiB,EAAE,0BAA0B,EAAE,UAAU,EAAE,OAAO,EAAE,EACtEC,qBAAmB,CACpB,CAAC;KACH;;;;;;;;IASK,WAAW,CACf,iBAAyB,EACzB,0BAAkC,EAClC,OAAqD;;YAErD,MAAM,mBAAmB,GAAG,CAC1B,IAAmC,EACnC,IAA8B;gBAE9B,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;aACrD,CAAA,CAAC;YACF,MAAM,aAAa,GAAG,CACpB,IAAmC,EACnC,IAA8B;;gBAE9B,IAAI,kBAAkB,GAEN,SAAS,CAAC;gBAC1B,MAAM,gBAAgB,GAAG,MAAA,IAAI,CAAC,OAAO,0CAAE,UAAU,CAAC;gBAClD,MAAM,QAAQ,GAAmC,CAC/C,WAA6C,EAC7C,YAAqB;oBAErB,kBAAkB,GAAG,WAAW,CAAC;oBACjC,gBAAgB,aAAhB,gBAAgB,uBAAhB,gBAAgB,CAAG,WAAW,EAAE,YAAY,CAAC,CAAC;iBAC/C,CAAC;gBACF,MAAM,WAAW,mCACZ,IAAI,KACP,OAAO,kCACF,IAAI,CAAC,OAAO,KACf,UAAU,EAAE,QAAQ,MAEvB,CAAC;gBACF,MAAM,YAAY,GAAG,MAAM,mBAAmB,CAAC,WAAW,EAAE,IAAI,CAAC,CAAC;gBAClE,OAAO;oBACL,YAAY;oBACZ,WAAW,EAAE;wBACX,UAAU,EAAE,kBAAmB,CAAC,MAAM;wBACtC,IAAI,EAAE,kBAAmB,CAAC,UAAU;wBACpC,OAAO,EAAE,kBAAmB,CAAC,OAAO,CAAC,MAAM,EAAE;qBAC9C;iBACF,CAAC;aACH,CAAA,CAAC;YAEF,MAAM,GAAG,GAAG,IAAI,OAAO,CACrB,aAAa,EACb,EAAE,iBAAiB,EAAE,0BAA0B,EAAE,OAAO,EAAE,EAC1DC,qBAAmB,CACpB,CAAC;YACF,OAAO,IAAIkB,iBAAS,CAAC,GAAG,EAAE;gBACxB,UAAU,EAAE,OAAO,aAAP,OAAO,uBAAP,OAAO,CAAE,UAAU;gBAC/B,YAAY,EAAE,OAAO,aAAP,OAAO,uBAAP,OAAO,CAAE,kBAAkB;aAC1C,CAAC,CAAC;SACJ;KAAA;;;;;;;;IASK,kBAAkB,CACtB,iBAAyB,EACzB,0BAAkC,EAClC,OAAqD;;YAErD,MAAM,MAAM,GAAG,MAAM,IAAI,CAAC,WAAW,CACnC,iBAAiB,EACjB,0BAA0B,EAC1B,OAAO,CACR,CAAC;YACF,OAAO,MAAM,CAAC,aAAa,EAAE,CAAC;SAC/B;KAAA;;;;;;;IAQD,GAAG,CACD,iBAAyB,EACzB,0BAAkC,EAClC,OAAkD;QAElD,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,iBAAiB,EAAE,0BAA0B,EAAE,OAAO,EAAE,EAC1DjB,kBAAgB,CACjB,CAAC;KACH;;;;;;IAOO,KAAK,CACX,iBAAyB,EACzB,OAAmD;QAEnD,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,iBAAiB,EAAE,OAAO,EAAE,EAC9BhB,mBAAiB,CAClB,CAAC;KACH;;;;;;;IAQO,QAAQ,CACd,OAAsD;QAEtD,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CAAC,EAAE,OAAO,EAAE,EAAE6F,sBAAoB,CAAC,CAAC;KAC5E;;;;;;;IAQO,SAAS,CACf,iBAAyB,EACzB,QAAgB,EAChB,OAAuD;QAEvD,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,iBAAiB,EAAE,QAAQ,EAAE,OAAO,EAAE,EACxC3B,uBAAqB,CACtB,CAAC;KACH;;;;;;IAOO,YAAY,CAClB,QAAgB,EAChB,OAA0D;QAE1D,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,QAAQ,EAAE,OAAO,EAAE,EACrBkC,0BAAwB,CACzB,CAAC;KACH;CACF;AACD;AACA,MAAMnG,YAAU,GAAGP,2BAA2B,CAAC,OAAO,cAAc,KAAK,CAAC,CAAC;AAE3E,MAAMmB,6BAA2B,GAA6B;IAC5D,IAAI,EACF,qJAAqJ;IACvJ,UAAU,EAAE,KAAK;IACjB,SAAS,EAAE;QACT,GAAG,EAAE;YACH,UAAU,EAAEgH,sBAA8B;SAC3C;QACD,GAAG,EAAE;YACH,UAAU,EAAEA,sBAA8B;SAC3C;QACD,OAAO,EAAE;YACP,UAAU,EAAEjI,UAAkB;SAC/B;KACF;IACD,WAAW,EAAEkI,YAAuB;IACpC,eAAe,EAAE,CAACjI,UAAqB,CAAC;IACxC,aAAa,EAAE;QACbC,KAAgB;QAChBM,iBAA4B;QAC5BE,cAAyB;QACzByH,0BAAqC;KACtC;IACD,gBAAgB,EAAE,CAAChI,MAAiB,EAAEQ,WAAsB,CAAC;IAC7D,SAAS,EAAE,MAAM;gBACjBN,YAAU;CACX,CAAC;AACF,MAAMa,qBAAmB,GAA6B;IACpD,IAAI,EACF,qJAAqJ;IACvJ,UAAU,EAAE,OAAO;IACnB,SAAS,EAAE;QACT,GAAG,EAAE;YACH,UAAU,EAAE+G,sBAA8B;SAC3C;QACD,OAAO,EAAE;YACP,UAAU,EAAEjI,UAAkB;SAC/B;KACF;IACD,WAAW,EAAEoI,YAAuB;IACpC,eAAe,EAAE,CAACnI,UAAqB,CAAC;IACxC,aAAa,EAAE;QACbC,KAAgB;QAChBM,iBAA4B;QAC5BE,cAAyB;QACzByH,0BAAqC;KACtC;IACD,gBAAgB,EAAE,CAAChI,MAAiB,EAAEQ,WAAsB,CAAC;IAC7D,SAAS,EAAE,MAAM;gBACjBN,YAAU;CACX,CAAC;AACF,MAAMc,qBAAmB,GAA6B;IACpD,IAAI,EACF,qJAAqJ;IACvJ,UAAU,EAAE,QAAQ;IACpB,SAAS,EAAE;QACT,GAAG,EAAE,EAAE;QACP,GAAG,EAAE,EAAE;QACP,GAAG,EAAE,EAAE;QACP,GAAG,EAAE,EAAE;QACP,OAAO,EAAE;YACP,UAAU,EAAEnB,UAAkB;SAC/B;KACF;IACD,eAAe,EAAE,CAACC,UAAqB,CAAC;IACxC,aAAa,EAAE;QACbC,KAAgB;QAChBM,iBAA4B;QAC5BE,cAAyB;QACzByH,0BAAqC;KACtC;IACD,gBAAgB,EAAE,CAAChI,MAAiB,CAAC;gBACrCE,YAAU;CACX,CAAC;AACF,MAAMe,kBAAgB,GAA6B;IACjD,IAAI,EACF,qJAAqJ;IACvJ,UAAU,EAAE,KAAK;IACjB,SAAS,EAAE;QACT,GAAG,EAAE;YACH,UAAU,EAAE6G,sBAA8B;SAC3C;QACD,OAAO,EAAE;YACP,UAAU,EAAEjI,UAAkB;SAC/B;KACF;IACD,eAAe,EAAE,CAACC,UAAqB,EAAEoI,OAAkB,CAAC;IAC5D,aAAa,EAAE;QACbnI,KAAgB;QAChBM,iBAA4B;QAC5BE,cAAyB;QACzByH,0BAAqC;KACtC;IACD,gBAAgB,EAAE,CAAChI,MAAiB,CAAC;gBACrCE,YAAU;CACX,CAAC;AACF,MAAMD,mBAAiB,GAA6B;IAClD,IAAI,EACF,wHAAwH;IAC1H,UAAU,EAAE,KAAK;IACjB,SAAS,EAAE;QACT,GAAG,EAAE;YACH,UAAU,EAAEkI,gCAAwC;SACrD;QACD,OAAO,EAAE;YACP,UAAU,EAAEtI,UAAkB;SAC/B;KACF;IACD,eAAe,EAAE,CAACC,UAAqB,CAAC;IACxC,aAAa,EAAE;QACbC,KAAgB;QAChBM,iBAA4B;QAC5BE,cAAyB;KAC1B;IACD,gBAAgB,EAAE,CAACP,MAAiB,CAAC;gBACrCE,YAAU;CACX,CAAC;AACF,MAAM4F,sBAAoB,GAA6B;IACrD,IAAI,EACF,qFAAqF;IACvF,UAAU,EAAE,KAAK;IACjB,SAAS,EAAE;QACT,GAAG,EAAE;YACH,UAAU,EAAEqC,gCAAwC;SACrD;QACD,OAAO,EAAE;YACP,UAAU,EAAEtI,UAAkB;SAC/B;KACF;IACD,eAAe,EAAE,CAACC,UAAqB,CAAC;IACxC,aAAa,EAAE,CAACC,KAAgB,EAAEQ,cAAyB,CAAC;IAC5D,gBAAgB,EAAE,CAACP,MAAiB,CAAC;gBACrCE,YAAU;CACX,CAAC;AACF,MAAMiE,uBAAqB,GAA6B;IACtD,IAAI,EAAE,YAAY;IAClB,UAAU,EAAE,KAAK;IACjB,SAAS,EAAE;QACT,GAAG,EAAE;YACH,UAAU,EAAEgE,gCAAwC;SACrD;QACD,OAAO,EAAE;YACP,UAAU,EAAEtI,UAAkB;SAC/B;KACF;IACD,eAAe,EAAE,CAACC,UAAqB,CAAC;IACxC,aAAa,EAAE;QACbC,KAAgB;QAChBM,iBAA4B;QAC5BE,cAAyB;QACzBM,QAAmB;KACpB;IACD,gBAAgB,EAAE,CAACb,MAAiB,CAAC;gBACrCE,YAAU;CACX,CAAC;AACF,MAAMmG,0BAAwB,GAA6B;IACzD,IAAI,EAAE,YAAY;IAClB,UAAU,EAAE,KAAK;IACjB,SAAS,EAAE;QACT,GAAG,EAAE;YACH,UAAU,EAAE8B,gCAAwC;SACrD;QACD,OAAO,EAAE;YACP,UAAU,EAAEtI,UAAkB;SAC/B;KACF;IACD,eAAe,EAAE,CAACC,UAAqB,CAAC;IACxC,aAAa,EAAE;QACbC,KAAgB;QAChBQ,cAAyB;QACzBM,QAAmB;KACpB;IACD,gBAAgB,EAAE,CAACb,MAAiB,CAAC;gBACrCE,YAAU;CACX,CAAC;;ACtgBF;;;;;;;AAwBA;AACA,MAAa,iBAAiB;;;;;IAO5B,YAAY,MAA+B;QACzC,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;KACtB;;;;;;;;;;IAWK,WAAW,CACf,iBAAyB,EACzB,0BAAkC,EAClC,gBAAwB,EACxB,UAAwB,EACxB,OAA2C;;YAO3C,MAAM,mBAAmB,GAAG,CAC1B,IAAmC,EACnC,IAA8B;gBAE9B,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;aACrD,CAAA,CAAC;YACF,MAAM,aAAa,GAAG,CACpB,IAAmC,EACnC,IAA8B;;gBAE9B,IAAI,kBAAkB,GAEN,SAAS,CAAC;gBAC1B,MAAM,gBAAgB,GAAG,MAAA,IAAI,CAAC,OAAO,0CAAE,UAAU,CAAC;gBAClD,MAAM,QAAQ,GAAmC,CAC/C,WAA6C,EAC7C,YAAqB;oBAErB,kBAAkB,GAAG,WAAW,CAAC;oBACjC,gBAAgB,aAAhB,gBAAgB,uBAAhB,gBAAgB,CAAG,WAAW,EAAE,YAAY,CAAC,CAAC;iBAC/C,CAAC;gBACF,MAAM,WAAW,mCACZ,IAAI,KACP,OAAO,kCACF,IAAI,CAAC,OAAO,KACf,UAAU,EAAE,QAAQ,MAEvB,CAAC;gBACF,MAAM,YAAY,GAAG,MAAM,mBAAmB,CAAC,WAAW,EAAE,IAAI,CAAC,CAAC;gBAClE,OAAO;oBACL,YAAY;oBACZ,WAAW,EAAE;wBACX,UAAU,EAAE,kBAAmB,CAAC,MAAM;wBACtC,IAAI,EAAE,kBAAmB,CAAC,UAAU;wBACpC,OAAO,EAAE,kBAAmB,CAAC,OAAO,CAAC,MAAM,EAAE;qBAC9C;iBACF,CAAC;aACH,CAAA,CAAC;YAEF,MAAM,GAAG,GAAG,IAAI,OAAO,CACrB,aAAa,EACb;gBACE,iBAAiB;gBACjB,0BAA0B;gBAC1B,gBAAgB;gBAChB,UAAU;gBACV,OAAO;aACR,EACDkI,qBAAmB,CACpB,CAAC;YACF,OAAO,IAAIlG,iBAAS,CAAC,GAAG,EAAE;gBACxB,UAAU,EAAE,OAAO,aAAP,OAAO,uBAAP,OAAO,CAAE,UAAU;gBAC/B,YAAY,EAAE,OAAO,aAAP,OAAO,uBAAP,OAAO,CAAE,kBAAkB;aAC1C,CAAC,CAAC;SACJ;KAAA;;;;;;;;;;IAWK,kBAAkB,CACtB,iBAAyB,EACzB,0BAAkC,EAClC,gBAAwB,EACxB,UAAwB,EACxB,OAA2C;;YAE3C,MAAM,MAAM,GAAG,MAAM,IAAI,CAAC,WAAW,CACnC,iBAAiB,EACjB,0BAA0B,EAC1B,gBAAgB,EAChB,UAAU,EACV,OAAO,CACR,CAAC;YACF,OAAO,MAAM,CAAC,aAAa,EAAE,CAAC;SAC/B;KAAA;;;;;;;;IASK,WAAW,CACf,iBAAyB,EACzB,0BAAkC,EAClC,gBAAwB,EACxB,OAA2C;;YAE3C,MAAM,mBAAmB,GAAG,CAC1B,IAAmC,EACnC,IAA8B;gBAE9B,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;aACrD,CAAA,CAAC;YACF,MAAM,aAAa,GAAG,CACpB,IAAmC,EACnC,IAA8B;;gBAE9B,IAAI,kBAAkB,GAEN,SAAS,CAAC;gBAC1B,MAAM,gBAAgB,GAAG,MAAA,IAAI,CAAC,OAAO,0CAAE,UAAU,CAAC;gBAClD,MAAM,QAAQ,GAAmC,CAC/C,WAA6C,EAC7C,YAAqB;oBAErB,kBAAkB,GAAG,WAAW,CAAC;oBACjC,gBAAgB,aAAhB,gBAAgB,uBAAhB,gBAAgB,CAAG,WAAW,EAAE,YAAY,CAAC,CAAC;iBAC/C,CAAC;gBACF,MAAM,WAAW,mCACZ,IAAI,KACP,OAAO,kCACF,IAAI,CAAC,OAAO,KACf,UAAU,EAAE,QAAQ,MAEvB,CAAC;gBACF,MAAM,YAAY,GAAG,MAAM,mBAAmB,CAAC,WAAW,EAAE,IAAI,CAAC,CAAC;gBAClE,OAAO;oBACL,YAAY;oBACZ,WAAW,EAAE;wBACX,UAAU,EAAE,kBAAmB,CAAC,MAAM;wBACtC,IAAI,EAAE,kBAAmB,CAAC,UAAU;wBACpC,OAAO,EAAE,kBAAmB,CAAC,OAAO,CAAC,MAAM,EAAE;qBAC9C;iBACF,CAAC;aACH,CAAA,CAAC;YAEF,MAAM,GAAG,GAAG,IAAI,OAAO,CACrB,aAAa,EACb;gBACE,iBAAiB;gBACjB,0BAA0B;gBAC1B,gBAAgB;gBAChB,OAAO;aACR,EACDlB,qBAAmB,CACpB,CAAC;YACF,OAAO,IAAIkB,iBAAS,CAAC,GAAG,EAAE;gBACxB,UAAU,EAAE,OAAO,aAAP,OAAO,uBAAP,OAAO,CAAE,UAAU;gBAC/B,YAAY,EAAE,OAAO,aAAP,OAAO,uBAAP,OAAO,CAAE,kBAAkB;aAC1C,CAAC,CAAC;SACJ;KAAA;;;;;;;;IASK,kBAAkB,CACtB,iBAAyB,EACzB,0BAAkC,EAClC,gBAAwB,EACxB,OAA2C;;YAE3C,MAAM,MAAM,GAAG,MAAM,IAAI,CAAC,WAAW,CACnC,iBAAiB,EACjB,0BAA0B,EAC1B,gBAAgB,EAChB,OAAO,CACR,CAAC;YACF,OAAO,MAAM,CAAC,aAAa,EAAE,CAAC;SAC/B;KAAA;;;;;;;;IASD,GAAG,CACD,iBAAyB,EACzB,0BAAkC,EAClC,gBAAwB,EACxB,OAAwC;QAExC,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC;YACE,iBAAiB;YACjB,0BAA0B;YAC1B,gBAAgB;YAChB,OAAO;SACR,EACDjB,kBAAgB,CACjB,CAAC;KACH;CACF;AACD;AACA,MAAMf,YAAU,GAAGP,2BAA2B,CAAC,OAAO,cAAc,KAAK,CAAC,CAAC;AAE3E,MAAMyI,qBAAmB,GAA6B;IACpD,IAAI,EACF,sLAAsL;IACxL,UAAU,EAAE,KAAK;IACjB,SAAS,EAAE;QACT,GAAG,EAAE;YACH,UAAU,EAAEC,YAAoB;SACjC;QACD,GAAG,EAAE;YACH,UAAU,EAAEA,YAAoB;SACjC;QACD,GAAG,EAAE;YACH,UAAU,EAAEA,YAAoB;SACjC;QACD,GAAG,EAAE;YACH,UAAU,EAAEA,YAAoB;SACjC;QACD,OAAO,EAAE;YACP,UAAU,EAAExI,UAAkB;SAC/B;KACF;IACD,WAAW,EAAEyI,YAAuB;IACpC,eAAe,EAAE,CAACxI,UAAqB,CAAC;IACxC,aAAa,EAAE;QACbC,KAAgB;QAChBM,iBAA4B;QAC5BE,cAAyB;QACzByH,0BAAqC;QACrCO,gBAA2B;KAC5B;IACD,gBAAgB,EAAE,CAACvI,MAAiB,EAAEQ,WAAsB,CAAC;IAC7D,SAAS,EAAE,MAAM;gBACjBN,YAAU;CACX,CAAC;AACF,MAAMc,qBAAmB,GAA6B;IACpD,IAAI,EACF,sLAAsL;IACxL,UAAU,EAAE,QAAQ;IACpB,SAAS,EAAE;QACT,GAAG,EAAE,EAAE;QACP,GAAG,EAAE,EAAE;QACP,GAAG,EAAE,EAAE;QACP,GAAG,EAAE,EAAE;QACP,OAAO,EAAE;YACP,UAAU,EAAEnB,UAAkB;SAC/B;KACF;IACD,eAAe,EAAE,CAACC,UAAqB,CAAC;IACxC,aAAa,EAAE;QACbC,KAAgB;QAChBM,iBAA4B;QAC5BE,cAAyB;QACzByH,0BAAqC;QACrCO,gBAA2B;KAC5B;IACD,gBAAgB,EAAE,CAACvI,MAAiB,CAAC;gBACrCE,YAAU;CACX,CAAC;AACF,MAAMe,kBAAgB,GAA6B;IACjD,IAAI,EACF,sLAAsL;IACxL,UAAU,EAAE,KAAK;IACjB,SAAS,EAAE;QACT,GAAG,EAAE;YACH,UAAU,EAAEoH,YAAoB;SACjC;QACD,OAAO,EAAE;YACP,UAAU,EAAExI,UAAkB;SAC/B;KACF;IACD,eAAe,EAAE,CAACC,UAAqB,EAAE0I,OAAkB,CAAC;IAC5D,aAAa,EAAE;QACbzI,KAAgB;QAChBM,iBAA4B;QAC5BE,cAAyB;QACzByH,0BAAqC;QACrCO,gBAA2B;KAC5B;IACD,gBAAgB,EAAE,CAACvI,MAAiB,CAAC;gBACrCE,YAAU;CACX,CAAC;;AChVF;;;;;;;AAkCA;AACA;AACA,MAAa,6BAA6B;;;;;IAQxC,YAAY,MAA+B;QACzC,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;KACtB;;;;;;;IAQM,mBAAmB,CACxB,iBAAyB,EACzB,OAAoE;QAEpE,MAAM,IAAI,GAAG,IAAI,CAAC,4BAA4B,CAAC,iBAAiB,EAAE,OAAO,CAAC,CAAC;QAC3E,OAAO;YACL,IAAI;gBACF,OAAO,IAAI,CAAC,IAAI,EAAE,CAAC;aACpB;YACD,CAAC,MAAM,CAAC,aAAa,CAAC;gBACpB,OAAO,IAAI,CAAC;aACb;YACD,MAAM,EAAE;gBACN,OAAO,IAAI,CAAC,6BAA6B,CAAC,iBAAiB,EAAE,OAAO,CAAC,CAAC;aACvE;SACF,CAAC;KACH;IAEc,6BAA6B,CAC1C,iBAAyB,EACzB,OAAoE;;YAEpE,IAAI,MAAM,GAAG,oBAAM,IAAI,CAAC,oBAAoB,CAAC,iBAAiB,EAAE,OAAO,CAAC,CAAA,CAAC;YACzE,0BAAM,MAAM,CAAC,KAAK,IAAI,EAAE,CAAA,CAAC;YACzB,IAAI,iBAAiB,GAAG,MAAM,CAAC,QAAQ,CAAC;YACxC,OAAO,iBAAiB,EAAE;gBACxB,MAAM,GAAG,oBAAM,IAAI,CAAC,wBAAwB,CAC1C,iBAAiB,EACjB,iBAAiB,EACjB,OAAO,CACR,CAAA,CAAC;gBACF,iBAAiB,GAAG,MAAM,CAAC,QAAQ,CAAC;gBACpC,0BAAM,MAAM,CAAC,KAAK,IAAI,EAAE,CAAA,CAAC;aAC1B;SACF;KAAA;IAEc,4BAA4B,CACzC,iBAAyB,EACzB,OAAoE;;;;gBAEpE,KAAyB,IAAA,KAAAT,oBAAA,IAAI,CAAC,6BAA6B,CACzD,iBAAiB,EACjB,OAAO,CACR,CAAA,IAAA;oBAHU,MAAM,IAAI,WAAA,CAAA;oBAInB,oBAAA,OAAOC,uBAAAD,oBAAA,IAAI,CAAA,CAAA,CAAA,CAAC;iBACb;;;;;;;;;SACF;KAAA;;;;;;IAOM,kBAAkB,CACvB,OAAmE;QAEnE,MAAM,IAAI,GAAG,IAAI,CAAC,2BAA2B,CAAC,OAAO,CAAC,CAAC;QACvD,OAAO;YACL,IAAI;gBACF,OAAO,IAAI,CAAC,IAAI,EAAE,CAAC;aACpB;YACD,CAAC,MAAM,CAAC,aAAa,CAAC;gBACpB,OAAO,IAAI,CAAC;aACb;YACD,MAAM,EAAE;gBACN,OAAO,IAAI,CAAC,4BAA4B,CAAC,OAAO,CAAC,CAAC;aACnD;SACF,CAAC;KACH;IAEc,4BAA4B,CACzC,OAAmE;;YAEnE,IAAI,MAAM,GAAG,oBAAM,IAAI,CAAC,mBAAmB,CAAC,OAAO,CAAC,CAAA,CAAC;YACrD,0BAAM,MAAM,CAAC,KAAK,IAAI,EAAE,CAAA,CAAC;YACzB,IAAI,iBAAiB,GAAG,MAAM,CAAC,QAAQ,CAAC;YACxC,OAAO,iBAAiB,EAAE;gBACxB,MAAM,GAAG,oBAAM,IAAI,CAAC,uBAAuB,CAAC,iBAAiB,EAAE,OAAO,CAAC,CAAA,CAAC;gBACxE,iBAAiB,GAAG,MAAM,CAAC,QAAQ,CAAC;gBACpC,0BAAM,MAAM,CAAC,KAAK,IAAI,EAAE,CAAA,CAAC;aAC1B;SACF;KAAA;IAEc,2BAA2B,CACxC,OAAmE;;;;gBAEnE,KAAyB,IAAA,KAAAA,oBAAA,IAAI,CAAC,4BAA4B,CAAC,OAAO,CAAC,CAAA,IAAA;oBAAxD,MAAM,IAAI,WAAA,CAAA;oBACnB,oBAAA,OAAOC,uBAAAD,oBAAA,IAAI,CAAA,CAAA,CAAA,CAAC;iBACb;;;;;;;;;SACF;KAAA;;;;;;;;;;IAWD,cAAc,CACZ,iBAAyB,EACzB,4BAAoC,EACpC,UAAoC,EACpC,OAA+D;QAE/D,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,iBAAiB,EAAE,4BAA4B,EAAE,UAAU,EAAE,OAAO,EAAE,EACxEqB,6BAA2B,CAC5B,CAAC;KACH;;;;;;;;;IAUD,MAAM,CACJ,iBAAyB,EACzB,4BAAoC,EACpC,UAA0C,EAC1C,OAAuD;QAEvD,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,iBAAiB,EAAE,4BAA4B,EAAE,UAAU,EAAE,OAAO,EAAE,EACxEC,qBAAmB,CACpB,CAAC;KACH;;;;;;;;;;IAWD,MAAM,CACJ,iBAAyB,EACzB,4BAAoC,EACpC,OAAuD;QAEvD,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,iBAAiB,EAAE,4BAA4B,EAAE,OAAO,EAAE,EAC5DC,qBAAmB,CACpB,CAAC;KACH;;;;;;;IAQD,GAAG,CACD,iBAAyB,EACzB,4BAAoC,EACpC,OAAoD;QAEpD,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,iBAAiB,EAAE,4BAA4B,EAAE,OAAO,EAAE,EAC5DC,kBAAgB,CACjB,CAAC;KACH;;;;;;;IAQO,oBAAoB,CAC1B,iBAAyB,EACzB,OAAoE;QAEpE,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,iBAAiB,EAAE,OAAO,EAAE,EAC9BS,kCAAgC,CACjC,CAAC;KACH;;;;;;IAOO,mBAAmB,CACzB,OAAmE;QAEnE,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,OAAO,EAAE,EACXR,iCAA+B,CAChC,CAAC;KACH;;;;;;;IAQO,wBAAwB,CAC9B,iBAAyB,EACzB,QAAgB,EAChB,OAAwE;QAExE,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,iBAAiB,EAAE,QAAQ,EAAE,OAAO,EAAE,EACxCS,sCAAoC,CACrC,CAAC;KACH;;;;;;IAOO,uBAAuB,CAC7B,QAAgB,EAChB,OAAuE;QAEvE,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,QAAQ,EAAE,OAAO,EAAE,EACrBR,qCAAmC,CACpC,CAAC;KACH;CACF;AACD;AACA,MAAMjB,YAAU,GAAGP,2BAA2B,CAAC,OAAO,cAAc,KAAK,CAAC,CAAC;AAE3E,MAAMmB,6BAA2B,GAA6B;IAC5D,IAAI,EACF,yJAAyJ;IAC3J,UAAU,EAAE,KAAK;IACjB,SAAS,EAAE;QACT,GAAG,EAAE;YACH,UAAU,EAAE2H,wBAAgC;SAC7C;QACD,GAAG,EAAE;YACH,UAAU,EAAEA,wBAAgC;SAC7C;QACD,OAAO,EAAE;YACP,UAAU,EAAE5I,UAAkB;SAC/B;KACF;IACD,WAAW,EAAE6I,YAAuB;IACpC,eAAe,EAAE,CAAC5I,UAAqB,CAAC;IACxC,aAAa,EAAE;QACbC,KAAgB;QAChBM,iBAA4B;QAC5BE,cAAyB;QACzBoI,4BAAuC;KACxC;IACD,gBAAgB,EAAE,CAAC3I,MAAiB,EAAEQ,WAAsB,CAAC;IAC7D,SAAS,EAAE,MAAM;gBACjBN,YAAU;CACX,CAAC;AACF,MAAMa,qBAAmB,GAA6B;IACpD,IAAI,EACF,yJAAyJ;IAC3J,UAAU,EAAE,OAAO;IACnB,SAAS,EAAE;QACT,GAAG,EAAE;YACH,UAAU,EAAE0H,wBAAgC;SAC7C;QACD,OAAO,EAAE;YACP,UAAU,EAAE5I,UAAkB;SAC/B;KACF;IACD,WAAW,EAAE+I,YAAuB;IACpC,eAAe,EAAE,CAAC9I,UAAqB,CAAC;IACxC,aAAa,EAAE;QACbC,KAAgB;QAChBM,iBAA4B;QAC5BE,cAAyB;QACzBoI,4BAAuC;KACxC;IACD,gBAAgB,EAAE,CAAC3I,MAAiB,EAAEQ,WAAsB,CAAC;IAC7D,SAAS,EAAE,MAAM;gBACjBN,YAAU;CACX,CAAC;AACF,MAAMc,qBAAmB,GAA6B;IACpD,IAAI,EACF,yJAAyJ;IAC3J,UAAU,EAAE,QAAQ;IACpB,SAAS,EAAE;QACT,GAAG,EAAE,EAAE;QACP,GAAG,EAAE,EAAE;QACP,OAAO,EAAE;YACP,UAAU,EAAEnB,UAAkB;SAC/B;KACF;IACD,eAAe,EAAE,CAACC,UAAqB,CAAC;IACxC,aAAa,EAAE;QACbC,KAAgB;QAChBM,iBAA4B;QAC5BE,cAAyB;QACzBoI,4BAAuC;KACxC;IACD,gBAAgB,EAAE,CAAC3I,MAAiB,CAAC;gBACrCE,YAAU;CACX,CAAC;AACF,MAAMe,kBAAgB,GAA6B;IACjD,IAAI,EACF,yJAAyJ;IAC3J,UAAU,EAAE,KAAK;IACjB,SAAS,EAAE;QACT,GAAG,EAAE;YACH,UAAU,EAAEwH,wBAAgC;SAC7C;QACD,OAAO,EAAE;YACP,UAAU,EAAE5I,UAAkB;SAC/B;KACF;IACD,eAAe,EAAE,CAACC,UAAqB,EAAE+I,OAAkB,CAAC;IAC5D,aAAa,EAAE;QACb9I,KAAgB;QAChBM,iBAA4B;QAC5BE,cAAyB;QACzBoI,4BAAuC;KACxC;IACD,gBAAgB,EAAE,CAAC3I,MAAiB,CAAC;gBACrCE,YAAU;CACX,CAAC;AACF,MAAMwB,kCAAgC,GAA6B;IACjE,IAAI,EACF,0HAA0H;IAC5H,UAAU,EAAE,KAAK;IACjB,SAAS,EAAE;QACT,GAAG,EAAE;YACH,UAAU,EAAEoH,kCAA0C;SACvD;QACD,OAAO,EAAE;YACP,UAAU,EAAEjJ,UAAkB;SAC/B;KACF;IACD,eAAe,EAAE,CAACC,UAAqB,EAAEiJ,OAAkB,CAAC;IAC5D,aAAa,EAAE;QACbhJ,KAAgB;QAChBM,iBAA4B;QAC5BE,cAAyB;KAC1B;IACD,gBAAgB,EAAE,CAACP,MAAiB,CAAC;gBACrCE,YAAU;CACX,CAAC;AACF,MAAMgB,iCAA+B,GAA6B;IAChE,IAAI,EACF,uFAAuF;IACzF,UAAU,EAAE,KAAK;IACjB,SAAS,EAAE;QACT,GAAG,EAAE;YACH,UAAU,EAAE4H,kCAA0C;SACvD;QACD,OAAO,EAAE;YACP,UAAU,EAAEjJ,UAAkB;SAC/B;KACF;IACD,eAAe,EAAE,CAACC,UAAqB,EAAEiJ,OAAkB,CAAC;IAC5D,aAAa,EAAE,CAAChJ,KAAgB,EAAEQ,cAAyB,CAAC;IAC5D,gBAAgB,EAAE,CAACP,MAAiB,CAAC;gBACrCE,YAAU;CACX,CAAC;AACF,MAAMyB,sCAAoC,GAA6B;IACrE,IAAI,EAAE,YAAY;IAClB,UAAU,EAAE,KAAK;IACjB,SAAS,EAAE;QACT,GAAG,EAAE;YACH,UAAU,EAAEmH,kCAA0C;SACvD;QACD,OAAO,EAAE;YACP,UAAU,EAAEjJ,UAAkB;SAC/B;KACF;IACD,eAAe,EAAE,CAACC,UAAqB,EAAEiJ,OAAkB,CAAC;IAC5D,aAAa,EAAE;QACbhJ,KAAgB;QAChBM,iBAA4B;QAC5BE,cAAyB;QACzBM,QAAmB;KACpB;IACD,gBAAgB,EAAE,CAACb,MAAiB,CAAC;gBACrCE,YAAU;CACX,CAAC;AACF,MAAMiB,qCAAmC,GAA6B;IACpE,IAAI,EAAE,YAAY;IAClB,UAAU,EAAE,KAAK;IACjB,SAAS,EAAE;QACT,GAAG,EAAE;YACH,UAAU,EAAE2H,kCAA0C;SACvD;QACD,OAAO,EAAE;YACP,UAAU,EAAEjJ,UAAkB;SAC/B;KACF;IACD,eAAe,EAAE,CAACC,UAAqB,EAAEiJ,OAAkB,CAAC;IAC5D,aAAa,EAAE;QACbhJ,KAAgB;QAChBQ,cAAyB;QACzBM,QAAmB;KACpB;IACD,gBAAgB,EAAE,CAACb,MAAiB,CAAC;gBACrCE,YAAU;CACX,CAAC;;AC5cF;;;;;;;AAgCA;AACA;AACA,MAAa,wBAAwB;;;;;IAOnC,YAAY,MAA+B;QACzC,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;KACtB;;;;;;;;IASM,8BAA8B,CACnC,iBAAyB,EACzB,4BAAoC,EACpC,OAA0E;QAE1E,MAAM,IAAI,GAAG,IAAI,CAAC,uCAAuC,CACvD,iBAAiB,EACjB,4BAA4B,EAC5B,OAAO,CACR,CAAC;QACF,OAAO;YACL,IAAI;gBACF,OAAO,IAAI,CAAC,IAAI,EAAE,CAAC;aACpB;YACD,CAAC,MAAM,CAAC,aAAa,CAAC;gBACpB,OAAO,IAAI,CAAC;aACb;YACD,MAAM,EAAE;gBACN,OAAO,IAAI,CAAC,wCAAwC,CAClD,iBAAiB,EACjB,4BAA4B,EAC5B,OAAO,CACR,CAAC;aACH;SACF,CAAC;KACH;IAEc,wCAAwC,CACrD,iBAAyB,EACzB,4BAAoC,EACpC,OAA0E;;YAE1E,IAAI,MAAM,GAAG,oBAAM,IAAI,CAAC,+BAA+B,CACrD,iBAAiB,EACjB,4BAA4B,EAC5B,OAAO,CACR,CAAA,CAAC;YACF,0BAAM,MAAM,CAAC,KAAK,IAAI,EAAE,CAAA,CAAC;YACzB,IAAI,iBAAiB,GAAG,MAAM,CAAC,QAAQ,CAAC;YACxC,OAAO,iBAAiB,EAAE;gBACxB,MAAM,GAAG,oBAAM,IAAI,CAAC,mCAAmC,CACrD,iBAAiB,EACjB,4BAA4B,EAC5B,iBAAiB,EACjB,OAAO,CACR,CAAA,CAAC;gBACF,iBAAiB,GAAG,MAAM,CAAC,QAAQ,CAAC;gBACpC,0BAAM,MAAM,CAAC,KAAK,IAAI,EAAE,CAAA,CAAC;aAC1B;SACF;KAAA;IAEc,uCAAuC,CACpD,iBAAyB,EACzB,4BAAoC,EACpC,OAA0E;;;;gBAE1E,KAAyB,IAAA,KAAAT,oBAAA,IAAI,CAAC,wCAAwC,CACpE,iBAAiB,EACjB,4BAA4B,EAC5B,OAAO,CACR,CAAA,IAAA;oBAJU,MAAM,IAAI,WAAA,CAAA;oBAKnB,oBAAA,OAAOC,uBAAAD,oBAAA,IAAI,CAAA,CAAA,CAAA,CAAC;iBACb;;;;;;;;;SACF;KAAA;;;;;;;;;;;IAYK,mBAAmB,CACvB,iBAAyB,EACzB,4BAAoC,EACpC,uBAA+B,EAC/B,UAA+B,EAC/B,OAA0D;;YAO1D,MAAM,mBAAmB,GAAG,CAC1B,IAAmC,EACnC,IAA8B;gBAE9B,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;aACrD,CAAA,CAAC;YACF,MAAM,aAAa,GAAG,CACpB,IAAmC,EACnC,IAA8B;;gBAE9B,IAAI,kBAAkB,GAEN,SAAS,CAAC;gBAC1B,MAAM,gBAAgB,GAAG,MAAA,IAAI,CAAC,OAAO,0CAAE,UAAU,CAAC;gBAClD,MAAM,QAAQ,GAAmC,CAC/C,WAA6C,EAC7C,YAAqB;oBAErB,kBAAkB,GAAG,WAAW,CAAC;oBACjC,gBAAgB,aAAhB,gBAAgB,uBAAhB,gBAAgB,CAAG,WAAW,EAAE,YAAY,CAAC,CAAC;iBAC/C,CAAC;gBACF,MAAM,WAAW,mCACZ,IAAI,KACP,OAAO,kCACF,IAAI,CAAC,OAAO,KACf,UAAU,EAAE,QAAQ,MAEvB,CAAC;gBACF,MAAM,YAAY,GAAG,MAAM,mBAAmB,CAAC,WAAW,EAAE,IAAI,CAAC,CAAC;gBAClE,OAAO;oBACL,YAAY;oBACZ,WAAW,EAAE;wBACX,UAAU,EAAE,kBAAmB,CAAC,MAAM;wBACtC,IAAI,EAAE,kBAAmB,CAAC,UAAU;wBACpC,OAAO,EAAE,kBAAmB,CAAC,OAAO,CAAC,MAAM,EAAE;qBAC9C;iBACF,CAAC;aACH,CAAA,CAAC;YAEF,MAAM,GAAG,GAAG,IAAI,OAAO,CACrB,aAAa,EACb;gBACE,iBAAiB;gBACjB,4BAA4B;gBAC5B,uBAAuB;gBACvB,UAAU;gBACV,OAAO;aACR,EACDqB,6BAA2B,CAC5B,CAAC;YACF,OAAO,IAAIoB,iBAAS,CAAC,GAAG,EAAE;gBACxB,UAAU,EAAE,OAAO,aAAP,OAAO,uBAAP,OAAO,CAAE,UAAU;gBAC/B,YAAY,EAAE,OAAO,aAAP,OAAO,uBAAP,OAAO,CAAE,kBAAkB;aAC1C,CAAC,CAAC;SACJ;KAAA;;;;;;;;;;;IAYK,0BAA0B,CAC9B,iBAAyB,EACzB,4BAAoC,EACpC,uBAA+B,EAC/B,UAA+B,EAC/B,OAA0D;;YAE1D,MAAM,MAAM,GAAG,MAAM,IAAI,CAAC,mBAAmB,CAC3C,iBAAiB,EACjB,4BAA4B,EAC5B,uBAAuB,EACvB,UAAU,EACV,OAAO,CACR,CAAC;YACF,OAAO,MAAM,CAAC,aAAa,EAAE,CAAC;SAC/B;KAAA;;;;;;;;;IAUK,WAAW,CACf,iBAAyB,EACzB,4BAAoC,EACpC,uBAA+B,EAC/B,UAAqC,EACrC,OAAkD;;YAOlD,MAAM,mBAAmB,GAAG,CAC1B,IAAmC,EACnC,IAA8B;gBAE9B,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;aACrD,CAAA,CAAC;YACF,MAAM,aAAa,GAAG,CACpB,IAAmC,EACnC,IAA8B;;gBAE9B,IAAI,kBAAkB,GAEN,SAAS,CAAC;gBAC1B,MAAM,gBAAgB,GAAG,MAAA,IAAI,CAAC,OAAO,0CAAE,UAAU,CAAC;gBAClD,MAAM,QAAQ,GAAmC,CAC/C,WAA6C,EAC7C,YAAqB;oBAErB,kBAAkB,GAAG,WAAW,CAAC;oBACjC,gBAAgB,aAAhB,gBAAgB,uBAAhB,gBAAgB,CAAG,WAAW,EAAE,YAAY,CAAC,CAAC;iBAC/C,CAAC;gBACF,MAAM,WAAW,mCACZ,IAAI,KACP,OAAO,kCACF,IAAI,CAAC,OAAO,KACf,UAAU,EAAE,QAAQ,MAEvB,CAAC;gBACF,MAAM,YAAY,GAAG,MAAM,mBAAmB,CAAC,WAAW,EAAE,IAAI,CAAC,CAAC;gBAClE,OAAO;oBACL,YAAY;oBACZ,WAAW,EAAE;wBACX,UAAU,EAAE,kBAAmB,CAAC,MAAM;wBACtC,IAAI,EAAE,kBAAmB,CAAC,UAAU;wBACpC,OAAO,EAAE,kBAAmB,CAAC,OAAO,CAAC,MAAM,EAAE;qBAC9C;iBACF,CAAC;aACH,CAAA,CAAC;YAEF,MAAM,GAAG,GAAG,IAAI,OAAO,CACrB,aAAa,EACb;gBACE,iBAAiB;gBACjB,4BAA4B;gBAC5B,uBAAuB;gBACvB,UAAU;gBACV,OAAO;aACR,EACDnB,qBAAmB,CACpB,CAAC;YACF,OAAO,IAAImB,iBAAS,CAAC,GAAG,EAAE;gBACxB,UAAU,EAAE,OAAO,aAAP,OAAO,uBAAP,OAAO,CAAE,UAAU;gBAC/B,YAAY,EAAE,OAAO,aAAP,OAAO,uBAAP,OAAO,CAAE,kBAAkB;aAC1C,CAAC,CAAC;SACJ;KAAA;;;;;;;;;IAUK,kBAAkB,CACtB,iBAAyB,EACzB,4BAAoC,EACpC,uBAA+B,EAC/B,UAAqC,EACrC,OAAkD;;YAElD,MAAM,MAAM,GAAG,MAAM,IAAI,CAAC,WAAW,CACnC,iBAAiB,EACjB,4BAA4B,EAC5B,uBAAuB,EACvB,UAAU,EACV,OAAO,CACR,CAAC;YACF,OAAO,MAAM,CAAC,aAAa,EAAE,CAAC;SAC/B;KAAA;;;;;;;;;;IAWK,WAAW,CACf,iBAAyB,EACzB,4BAAoC,EACpC,uBAA+B,EAC/B,OAAkD;;YAElD,MAAM,mBAAmB,GAAG,CAC1B,IAAmC,EACnC,IAA8B;gBAE9B,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;aACrD,CAAA,CAAC;YACF,MAAM,aAAa,GAAG,CACpB,IAAmC,EACnC,IAA8B;;gBAE9B,IAAI,kBAAkB,GAEN,SAAS,CAAC;gBAC1B,MAAM,gBAAgB,GAAG,MAAA,IAAI,CAAC,OAAO,0CAAE,UAAU,CAAC;gBAClD,MAAM,QAAQ,GAAmC,CAC/C,WAA6C,EAC7C,YAAqB;oBAErB,kBAAkB,GAAG,WAAW,CAAC;oBACjC,gBAAgB,aAAhB,gBAAgB,uBAAhB,gBAAgB,CAAG,WAAW,EAAE,YAAY,CAAC,CAAC;iBAC/C,CAAC;gBACF,MAAM,WAAW,mCACZ,IAAI,KACP,OAAO,kCACF,IAAI,CAAC,OAAO,KACf,UAAU,EAAE,QAAQ,MAEvB,CAAC;gBACF,MAAM,YAAY,GAAG,MAAM,mBAAmB,CAAC,WAAW,EAAE,IAAI,CAAC,CAAC;gBAClE,OAAO;oBACL,YAAY;oBACZ,WAAW,EAAE;wBACX,UAAU,EAAE,kBAAmB,CAAC,MAAM;wBACtC,IAAI,EAAE,kBAAmB,CAAC,UAAU;wBACpC,OAAO,EAAE,kBAAmB,CAAC,OAAO,CAAC,MAAM,EAAE;qBAC9C;iBACF,CAAC;aACH,CAAA,CAAC;YAEF,MAAM,GAAG,GAAG,IAAI,OAAO,CACrB,aAAa,EACb;gBACE,iBAAiB;gBACjB,4BAA4B;gBAC5B,uBAAuB;gBACvB,OAAO;aACR,EACDlB,qBAAmB,CACpB,CAAC;YACF,OAAO,IAAIkB,iBAAS,CAAC,GAAG,EAAE;gBACxB,UAAU,EAAE,OAAO,aAAP,OAAO,uBAAP,OAAO,CAAE,UAAU;gBAC/B,YAAY,EAAE,OAAO,aAAP,OAAO,uBAAP,OAAO,CAAE,kBAAkB;aAC1C,CAAC,CAAC;SACJ;KAAA;;;;;;;;;;IAWK,kBAAkB,CACtB,iBAAyB,EACzB,4BAAoC,EACpC,uBAA+B,EAC/B,OAAkD;;YAElD,MAAM,MAAM,GAAG,MAAM,IAAI,CAAC,WAAW,CACnC,iBAAiB,EACjB,4BAA4B,EAC5B,uBAAuB,EACvB,OAAO,CACR,CAAC;YACF,OAAO,MAAM,CAAC,aAAa,EAAE,CAAC;SAC/B;KAAA;;;;;;;;IASD,GAAG,CACD,iBAAyB,EACzB,4BAAoC,EACpC,uBAA+B,EAC/B,OAA+C;QAE/C,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC;YACE,iBAAiB;YACjB,4BAA4B;YAC5B,uBAAuB;YACvB,OAAO;SACR,EACDjB,kBAAgB,CACjB,CAAC;KACH;;;;;;;;IASO,+BAA+B,CACrC,iBAAyB,EACzB,4BAAoC,EACpC,OAA0E;QAE1E,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,iBAAiB,EAAE,4BAA4B,EAAE,OAAO,EAAE,EAC5D,2CAA2C,CAC5C,CAAC;KACH;;;;;;;;;IAUO,mCAAmC,CACzC,iBAAyB,EACzB,4BAAoC,EACpC,QAAgB,EAChB,OAA8E;QAE9E,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,iBAAiB,EAAE,4BAA4B,EAAE,QAAQ,EAAE,OAAO,EAAE,EACtE,+CAA+C,CAChD,CAAC;KACH;CACF;AACD;AACA,MAAMf,YAAU,GAAGP,2BAA2B,CAAC,OAAO,cAAc,KAAK,CAAC,CAAC;AAE3E,MAAMmB,6BAA2B,GAA6B;IAC5D,IAAI,EACF,wMAAwM;IAC1M,UAAU,EAAE,KAAK;IACjB,SAAS,EAAE;QACT,GAAG,EAAE;YACH,UAAU,EAAEkI,mBAA2B;SACxC;QACD,GAAG,EAAE;YACH,UAAU,EAAEA,mBAA2B;SACxC;QACD,GAAG,EAAE;YACH,UAAU,EAAEA,mBAA2B;SACxC;QACD,GAAG,EAAE;YACH,UAAU,EAAEA,mBAA2B;SACxC;QACD,OAAO,EAAE;YACP,UAAU,EAAEnJ,UAAkB;SAC/B;KACF;IACD,WAAW,EAAEoJ,YAAuB;IACpC,eAAe,EAAE,CAACnJ,UAAqB,CAAC;IACxC,aAAa,EAAE;QACbC,KAAgB;QAChBM,iBAA4B;QAC5BE,cAAyB;QACzBoI,4BAAuC;QACvCO,uBAAkC;KACnC;IACD,gBAAgB,EAAE,CAAClJ,MAAiB,EAAEQ,WAAsB,CAAC;IAC7D,SAAS,EAAE,MAAM;gBACjBN,YAAU;CACX,CAAC;AACF,MAAMa,qBAAmB,GAA6B;IACpD,IAAI,EACF,wMAAwM;IAC1M,UAAU,EAAE,OAAO;IACnB,SAAS,EAAE;QACT,GAAG,EAAE;YACH,UAAU,EAAEiI,mBAA2B;SACxC;QACD,GAAG,EAAE;YACH,UAAU,EAAEA,mBAA2B;SACxC;QACD,GAAG,EAAE;YACH,UAAU,EAAEA,mBAA2B;SACxC;QACD,GAAG,EAAE;YACH,UAAU,EAAEA,mBAA2B;SACxC;QACD,OAAO,EAAE;YACP,UAAU,EAAEnJ,UAAkB;SAC/B;KACF;IACD,WAAW,EAAEsJ,YAAuB;IACpC,eAAe,EAAE,CAACrJ,UAAqB,CAAC;IACxC,aAAa,EAAE;QACbC,KAAgB;QAChBM,iBAA4B;QAC5BE,cAAyB;QACzBoI,4BAAuC;QACvCO,uBAAkC;KACnC;IACD,gBAAgB,EAAE,CAAClJ,MAAiB,EAAEQ,WAAsB,CAAC;IAC7D,SAAS,EAAE,MAAM;gBACjBN,YAAU;CACX,CAAC;AACF,MAAMc,qBAAmB,GAA6B;IACpD,IAAI,EACF,wMAAwM;IAC1M,UAAU,EAAE,QAAQ;IACpB,SAAS,EAAE;QACT,GAAG,EAAE,EAAE;QACP,GAAG,EAAE,EAAE;QACP,GAAG,EAAE,EAAE;QACP,GAAG,EAAE,EAAE;QACP,OAAO,EAAE;YACP,UAAU,EAAEnB,UAAkB;SAC/B;KACF;IACD,eAAe,EAAE,CAACC,UAAqB,CAAC;IACxC,aAAa,EAAE;QACbC,KAAgB;QAChBM,iBAA4B;QAC5BE,cAAyB;QACzBoI,4BAAuC;QACvCO,uBAAkC;KACnC;IACD,gBAAgB,EAAE,CAAClJ,MAAiB,CAAC;gBACrCE,YAAU;CACX,CAAC;AACF,MAAMe,kBAAgB,GAA6B;IACjD,IAAI,EACF,wMAAwM;IAC1M,UAAU,EAAE,KAAK;IACjB,SAAS,EAAE;QACT,GAAG,EAAE;YACH,UAAU,EAAE+H,mBAA2B;SACxC;QACD,OAAO,EAAE;YACP,UAAU,EAAEnJ,UAAkB;SAC/B;KACF;IACD,eAAe,EAAE,CAACC,UAAqB,EAAEsJ,OAAkB,CAAC;IAC5D,aAAa,EAAE;QACbrJ,KAAgB;QAChBM,iBAA4B;QAC5BE,cAAyB;QACzBoI,4BAAuC;QACvCO,uBAAkC;KACnC;IACD,gBAAgB,EAAE,CAAClJ,MAAiB,CAAC;gBACrCE,YAAU;CACX,CAAC;AACF,MAAM,2CAA2C,GAA6B;IAC5E,IAAI,EACF,8KAA8K;IAChL,UAAU,EAAE,KAAK;IACjB,SAAS,EAAE;QACT,GAAG,EAAE;YACH,UAAU,EAAEmJ,6BAAqC;SAClD;QACD,OAAO,EAAE;YACP,UAAU,EAAExJ,UAAkB;SAC/B;KACF;IACD,eAAe,EAAE,CAACC,UAAqB,CAAC;IACxC,aAAa,EAAE;QACbC,KAAgB;QAChBM,iBAA4B;QAC5BE,cAAyB;QACzBoI,4BAAuC;KACxC;IACD,gBAAgB,EAAE,CAAC3I,MAAiB,CAAC;gBACrCE,YAAU;CACX,CAAC;AACF,MAAM,+CAA+C,GAA6B;IAChF,IAAI,EAAE,YAAY;IAClB,UAAU,EAAE,KAAK;IACjB,SAAS,EAAE;QACT,GAAG,EAAE;YACH,UAAU,EAAEmJ,6BAAqC;SAClD;QACD,OAAO,EAAE;YACP,UAAU,EAAExJ,UAAkB;SAC/B;KACF;IACD,eAAe,EAAE,CAACC,UAAqB,CAAC;IACxC,aAAa,EAAE;QACbC,KAAgB;QAChBM,iBAA4B;QAC5BE,cAAyB;QACzBM,QAAmB;QACnB8H,4BAAuC;KACxC;IACD,gBAAgB,EAAE,CAAC3I,MAAiB,CAAC;gBACrCE,YAAU;CACX,CAAC;;AChoBF;;;;;;;AAgCA;AACA;AACA,MAAa,oCAAoC;;;;;IAQ/C,YAAY,MAA+B;QACzC,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;KACtB;;;;;;;IAQM,IAAI,CACT,iBAAyB,EACzB,cAAsB,EACtB,OAA4D;QAE5D,MAAM,IAAI,GAAG,IAAI,CAAC,aAAa,CAAC,iBAAiB,EAAE,cAAc,EAAE,OAAO,CAAC,CAAC;QAC5E,OAAO;YACL,IAAI;gBACF,OAAO,IAAI,CAAC,IAAI,EAAE,CAAC;aACpB;YACD,CAAC,MAAM,CAAC,aAAa,CAAC;gBACpB,OAAO,IAAI,CAAC;aACb;YACD,MAAM,EAAE;gBACN,OAAO,IAAI,CAAC,cAAc,CAAC,iBAAiB,EAAE,cAAc,EAAE,OAAO,CAAC,CAAC;aACxE;SACF,CAAC;KACH;IAEc,cAAc,CAC3B,iBAAyB,EACzB,cAAsB,EACtB,OAA4D;;YAE5D,IAAI,MAAM,GAAG,oBAAM,IAAI,CAAC,KAAK,CAAC,iBAAiB,EAAE,cAAc,EAAE,OAAO,CAAC,CAAA,CAAC;YAC1E,0BAAM,MAAM,CAAC,KAAK,IAAI,EAAE,CAAA,CAAC;YACzB,IAAI,iBAAiB,GAAG,MAAM,CAAC,QAAQ,CAAC;YACxC,OAAO,iBAAiB,EAAE;gBACxB,MAAM,GAAG,oBAAM,IAAI,CAAC,SAAS,CAC3B,iBAAiB,EACjB,cAAc,EACd,iBAAiB,EACjB,OAAO,CACR,CAAA,CAAC;gBACF,iBAAiB,GAAG,MAAM,CAAC,QAAQ,CAAC;gBACpC,0BAAM,MAAM,CAAC,KAAK,IAAI,EAAE,CAAA,CAAC;aAC1B;SACF;KAAA;IAEc,aAAa,CAC1B,iBAAyB,EACzB,cAAsB,EACtB,OAA4D;;;;gBAE5D,KAAyB,IAAA,KAAAT,oBAAA,IAAI,CAAC,cAAc,CAC1C,iBAAiB,EACjB,cAAc,EACd,OAAO,CACR,CAAA,IAAA;oBAJU,MAAM,IAAI,WAAA,CAAA;oBAKnB,oBAAA,OAAOC,uBAAAD,oBAAA,IAAI,CAAA,CAAA,CAAA,CAAC;iBACb;;;;;;;;;SACF;KAAA;;;;;;;;;IAUK,mBAAmB,CACvB,iBAAyB,EACzB,cAAsB,EACtB,iBAAyB,EACzB,mBAAoD,EACpD,OAAsE;;YAStE,MAAM,mBAAmB,GAAG,CAC1B,IAAmC,EACnC,IAA8B;gBAE9B,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;aACrD,CAAA,CAAC;YACF,MAAM,aAAa,GAAG,CACpB,IAAmC,EACnC,IAA8B;;gBAE9B,IAAI,kBAAkB,GAEN,SAAS,CAAC;gBAC1B,MAAM,gBAAgB,GAAG,MAAA,IAAI,CAAC,OAAO,0CAAE,UAAU,CAAC;gBAClD,MAAM,QAAQ,GAAmC,CAC/C,WAA6C,EAC7C,YAAqB;oBAErB,kBAAkB,GAAG,WAAW,CAAC;oBACjC,gBAAgB,aAAhB,gBAAgB,uBAAhB,gBAAgB,CAAG,WAAW,EAAE,YAAY,CAAC,CAAC;iBAC/C,CAAC;gBACF,MAAM,WAAW,mCACZ,IAAI,KACP,OAAO,kCACF,IAAI,CAAC,OAAO,KACf,UAAU,EAAE,QAAQ,MAEvB,CAAC;gBACF,MAAM,YAAY,GAAG,MAAM,mBAAmB,CAAC,WAAW,EAAE,IAAI,CAAC,CAAC;gBAClE,OAAO;oBACL,YAAY;oBACZ,WAAW,EAAE;wBACX,UAAU,EAAE,kBAAmB,CAAC,MAAM;wBACtC,IAAI,EAAE,kBAAmB,CAAC,UAAU;wBACpC,OAAO,EAAE,kBAAmB,CAAC,OAAO,CAAC,MAAM,EAAE;qBAC9C;iBACF,CAAC;aACH,CAAA,CAAC;YAEF,MAAM,GAAG,GAAG,IAAI,OAAO,CACrB,aAAa,EACb;gBACE,iBAAiB;gBACjB,cAAc;gBACd,iBAAiB;gBACjB,mBAAmB;gBACnB,OAAO;aACR,EACDqB,6BAA2B,CAC5B,CAAC;YACF,OAAO,IAAIoB,iBAAS,CAAC,GAAG,EAAE;gBACxB,UAAU,EAAE,OAAO,aAAP,OAAO,uBAAP,OAAO,CAAE,UAAU;gBAC/B,YAAY,EAAE,OAAO,aAAP,OAAO,uBAAP,OAAO,CAAE,kBAAkB;aAC1C,CAAC,CAAC;SACJ;KAAA;;;;;;;;;IAUK,0BAA0B,CAC9B,iBAAyB,EACzB,cAAsB,EACtB,iBAAyB,EACzB,mBAAoD,EACpD,OAAsE;;YAEtE,MAAM,MAAM,GAAG,MAAM,IAAI,CAAC,mBAAmB,CAC3C,iBAAiB,EACjB,cAAc,EACd,iBAAiB,EACjB,mBAAmB,EACnB,OAAO,CACR,CAAC;YACF,OAAO,MAAM,CAAC,aAAa,EAAE,CAAC;SAC/B;KAAA;;;;;;;;;IAUK,WAAW,CACf,iBAAyB,EACzB,cAAsB,EACtB,iBAAyB,EACzB,mBAA0D,EAC1D,OAA8D;;YAO9D,MAAM,mBAAmB,GAAG,CAC1B,IAAmC,EACnC,IAA8B;gBAE9B,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;aACrD,CAAA,CAAC;YACF,MAAM,aAAa,GAAG,CACpB,IAAmC,EACnC,IAA8B;;gBAE9B,IAAI,kBAAkB,GAEN,SAAS,CAAC;gBAC1B,MAAM,gBAAgB,GAAG,MAAA,IAAI,CAAC,OAAO,0CAAE,UAAU,CAAC;gBAClD,MAAM,QAAQ,GAAmC,CAC/C,WAA6C,EAC7C,YAAqB;oBAErB,kBAAkB,GAAG,WAAW,CAAC;oBACjC,gBAAgB,aAAhB,gBAAgB,uBAAhB,gBAAgB,CAAG,WAAW,EAAE,YAAY,CAAC,CAAC;iBAC/C,CAAC;gBACF,MAAM,WAAW,mCACZ,IAAI,KACP,OAAO,kCACF,IAAI,CAAC,OAAO,KACf,UAAU,EAAE,QAAQ,MAEvB,CAAC;gBACF,MAAM,YAAY,GAAG,MAAM,mBAAmB,CAAC,WAAW,EAAE,IAAI,CAAC,CAAC;gBAClE,OAAO;oBACL,YAAY;oBACZ,WAAW,EAAE;wBACX,UAAU,EAAE,kBAAmB,CAAC,MAAM;wBACtC,IAAI,EAAE,kBAAmB,CAAC,UAAU;wBACpC,OAAO,EAAE,kBAAmB,CAAC,OAAO,CAAC,MAAM,EAAE;qBAC9C;iBACF,CAAC;aACH,CAAA,CAAC;YAEF,MAAM,GAAG,GAAG,IAAI,OAAO,CACrB,aAAa,EACb;gBACE,iBAAiB;gBACjB,cAAc;gBACd,iBAAiB;gBACjB,mBAAmB;gBACnB,OAAO;aACR,EACDnB,qBAAmB,CACpB,CAAC;YACF,OAAO,IAAImB,iBAAS,CAAC,GAAG,EAAE;gBACxB,UAAU,EAAE,OAAO,aAAP,OAAO,uBAAP,OAAO,CAAE,UAAU;gBAC/B,YAAY,EAAE,OAAO,aAAP,OAAO,uBAAP,OAAO,CAAE,kBAAkB;aAC1C,CAAC,CAAC;SACJ;KAAA;;;;;;;;;IAUK,kBAAkB,CACtB,iBAAyB,EACzB,cAAsB,EACtB,iBAAyB,EACzB,mBAA0D,EAC1D,OAA8D;;YAE9D,MAAM,MAAM,GAAG,MAAM,IAAI,CAAC,WAAW,CACnC,iBAAiB,EACjB,cAAc,EACd,iBAAiB,EACjB,mBAAmB,EACnB,OAAO,CACR,CAAC;YACF,OAAO,MAAM,CAAC,aAAa,EAAE,CAAC;SAC/B;KAAA;;;;;;;;IASK,WAAW,CACf,iBAAyB,EACzB,cAAsB,EACtB,iBAAyB,EACzB,OAA8D;;YAE9D,MAAM,mBAAmB,GAAG,CAC1B,IAAmC,EACnC,IAA8B;gBAE9B,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;aACrD,CAAA,CAAC;YACF,MAAM,aAAa,GAAG,CACpB,IAAmC,EACnC,IAA8B;;gBAE9B,IAAI,kBAAkB,GAEN,SAAS,CAAC;gBAC1B,MAAM,gBAAgB,GAAG,MAAA,IAAI,CAAC,OAAO,0CAAE,UAAU,CAAC;gBAClD,MAAM,QAAQ,GAAmC,CAC/C,WAA6C,EAC7C,YAAqB;oBAErB,kBAAkB,GAAG,WAAW,CAAC;oBACjC,gBAAgB,aAAhB,gBAAgB,uBAAhB,gBAAgB,CAAG,WAAW,EAAE,YAAY,CAAC,CAAC;iBAC/C,CAAC;gBACF,MAAM,WAAW,mCACZ,IAAI,KACP,OAAO,kCACF,IAAI,CAAC,OAAO,KACf,UAAU,EAAE,QAAQ,MAEvB,CAAC;gBACF,MAAM,YAAY,GAAG,MAAM,mBAAmB,CAAC,WAAW,EAAE,IAAI,CAAC,CAAC;gBAClE,OAAO;oBACL,YAAY;oBACZ,WAAW,EAAE;wBACX,UAAU,EAAE,kBAAmB,CAAC,MAAM;wBACtC,IAAI,EAAE,kBAAmB,CAAC,UAAU;wBACpC,OAAO,EAAE,kBAAmB,CAAC,OAAO,CAAC,MAAM,EAAE;qBAC9C;iBACF,CAAC;aACH,CAAA,CAAC;YAEF,MAAM,GAAG,GAAG,IAAI,OAAO,CACrB,aAAa,EACb,EAAE,iBAAiB,EAAE,cAAc,EAAE,iBAAiB,EAAE,OAAO,EAAE,EACjElB,qBAAmB,CACpB,CAAC;YACF,OAAO,IAAIkB,iBAAS,CAAC,GAAG,EAAE;gBACxB,UAAU,EAAE,OAAO,aAAP,OAAO,uBAAP,OAAO,CAAE,UAAU;gBAC/B,YAAY,EAAE,OAAO,aAAP,OAAO,uBAAP,OAAO,CAAE,kBAAkB;aAC1C,CAAC,CAAC;SACJ;KAAA;;;;;;;;IASK,kBAAkB,CACtB,iBAAyB,EACzB,cAAsB,EACtB,iBAAyB,EACzB,OAA8D;;YAE9D,MAAM,MAAM,GAAG,MAAM,IAAI,CAAC,WAAW,CACnC,iBAAiB,EACjB,cAAc,EACd,iBAAiB,EACjB,OAAO,CACR,CAAC;YACF,OAAO,MAAM,CAAC,aAAa,EAAE,CAAC;SAC/B;KAAA;;;;;;;;IASD,GAAG,CACD,iBAAyB,EACzB,cAAsB,EACtB,iBAAyB,EACzB,OAA2D;QAE3D,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,iBAAiB,EAAE,cAAc,EAAE,iBAAiB,EAAE,OAAO,EAAE,EACjEjB,kBAAgB,CACjB,CAAC;KACH;;;;;;;IAQO,KAAK,CACX,iBAAyB,EACzB,cAAsB,EACtB,OAA4D;QAE5D,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,iBAAiB,EAAE,cAAc,EAAE,OAAO,EAAE,EAC9ChB,mBAAiB,CAClB,CAAC;KACH;;;;;;;;IASO,SAAS,CACf,iBAAyB,EACzB,cAAsB,EACtB,QAAgB,EAChB,OAAgE;QAEhE,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,iBAAiB,EAAE,cAAc,EAAE,QAAQ,EAAE,OAAO,EAAE,EACxDkE,uBAAqB,CACtB,CAAC;KACH;CACF;AACD;AACA,MAAMjE,YAAU,GAAGP,2BAA2B,CAAC,OAAO,cAAc,KAAK,CAAC,CAAC;AAE3E,MAAMmB,6BAA2B,GAA6B;IAC5D,IAAI,EACF,wKAAwK;IAC1K,UAAU,EAAE,KAAK;IACjB,SAAS,EAAE;QACT,GAAG,EAAE;YACH,UAAU,EAAEwI,+BAAuC;SACpD;QACD,GAAG,EAAE;YACH,UAAU,EAAEA,+BAAuC;SACpD;QACD,GAAG,EAAE;YACH,UAAU,EAAEA,+BAAuC;SACpD;QACD,GAAG,EAAE;YACH,UAAU,EAAEA,+BAAuC;SACpD;QACD,OAAO,EAAE;YACP,UAAU,EAAEzJ,UAAkB;SAC/B;KACF;IACD,WAAW,EAAE0J,oBAA+B;IAC5C,eAAe,EAAE,CAACzJ,UAAqB,CAAC;IACxC,aAAa,EAAE;QACbC,KAAgB;QAChBM,iBAA4B;QAC5BE,cAAyB;QACzBkG,cAAyB;QACzB+C,iBAA4B;KAC7B;IACD,gBAAgB,EAAE,CAACxJ,MAAiB,EAAEQ,WAAsB,CAAC;IAC7D,SAAS,EAAE,MAAM;gBACjBN,YAAU;CACX,CAAC;AACF,MAAMa,qBAAmB,GAA6B;IACpD,IAAI,EACF,wKAAwK;IAC1K,UAAU,EAAE,OAAO;IACnB,SAAS,EAAE;QACT,GAAG,EAAE;YACH,UAAU,EAAEuI,+BAAuC;SACpD;QACD,GAAG,EAAE;YACH,UAAU,EAAEA,+BAAuC;SACpD;QACD,GAAG,EAAE;YACH,UAAU,EAAEA,+BAAuC;SACpD;QACD,GAAG,EAAE;YACH,UAAU,EAAEA,+BAAuC;SACpD;QACD,OAAO,EAAE;YACP,UAAU,EAAEzJ,UAAkB;SAC/B;KACF;IACD,WAAW,EAAE4J,oBAA+B;IAC5C,eAAe,EAAE,CAAC3J,UAAqB,CAAC;IACxC,aAAa,EAAE;QACbC,KAAgB;QAChBM,iBAA4B;QAC5BE,cAAyB;QACzBkG,cAAyB;QACzB+C,iBAA4B;KAC7B;IACD,gBAAgB,EAAE,CAACxJ,MAAiB,EAAEQ,WAAsB,CAAC;IAC7D,SAAS,EAAE,MAAM;gBACjBN,YAAU;CACX,CAAC;AACF,MAAMc,qBAAmB,GAA6B;IACpD,IAAI,EACF,wKAAwK;IAC1K,UAAU,EAAE,QAAQ;IACpB,SAAS,EAAE;QACT,GAAG,EAAE,EAAE;QACP,GAAG,EAAE,EAAE;QACP,GAAG,EAAE,EAAE;QACP,GAAG,EAAE,EAAE;QACP,OAAO,EAAE;YACP,UAAU,EAAEnB,UAAkB;SAC/B;KACF;IACD,eAAe,EAAE,CAACC,UAAqB,CAAC;IACxC,aAAa,EAAE;QACbC,KAAgB;QAChBM,iBAA4B;QAC5BE,cAAyB;QACzBkG,cAAyB;QACzB+C,iBAA4B;KAC7B;IACD,gBAAgB,EAAE,CAACxJ,MAAiB,CAAC;gBACrCE,YAAU;CACX,CAAC;AACF,MAAMe,kBAAgB,GAA6B;IACjD,IAAI,EACF,wKAAwK;IAC1K,UAAU,EAAE,KAAK;IACjB,SAAS,EAAE;QACT,GAAG,EAAE;YACH,UAAU,EAAEqI,+BAAuC;SACpD;QACD,OAAO,EAAE;YACP,UAAU,EAAEzJ,UAAkB;SAC/B;KACF;IACD,eAAe,EAAE,CAACC,UAAqB,EAAEa,MAAiB,CAAC;IAC3D,aAAa,EAAE;QACbZ,KAAgB;QAChBM,iBAA4B;QAC5BE,cAAyB;QACzBkG,cAAyB;QACzB+C,iBAA4B;KAC7B;IACD,gBAAgB,EAAE,CAACxJ,MAAiB,CAAC;gBACrCE,YAAU;CACX,CAAC;AACF,MAAMD,mBAAiB,GAA6B;IAClD,IAAI,EACF,oJAAoJ;IACtJ,UAAU,EAAE,KAAK;IACjB,SAAS,EAAE;QACT,GAAG,EAAE;YACH,UAAU,EAAEyJ,yCAAiD;SAC9D;QACD,OAAO,EAAE;YACP,UAAU,EAAE7J,UAAkB;SAC/B;KACF;IACD,eAAe,EAAE,CAACC,UAAqB,CAAC;IACxC,aAAa,EAAE;QACbC,KAAgB;QAChBM,iBAA4B;QAC5BE,cAAyB;QACzBkG,cAAyB;KAC1B;IACD,gBAAgB,EAAE,CAACzG,MAAiB,CAAC;gBACrCE,YAAU;CACX,CAAC;AACF,MAAMiE,uBAAqB,GAA6B;IACtD,IAAI,EAAE,YAAY;IAClB,UAAU,EAAE,KAAK;IACjB,SAAS,EAAE;QACT,GAAG,EAAE;YACH,UAAU,EAAEuF,yCAAiD;SAC9D;QACD,OAAO,EAAE;YACP,UAAU,EAAE7J,UAAkB;SAC/B;KACF;IACD,eAAe,EAAE,CAACC,UAAqB,CAAC;IACxC,aAAa,EAAE;QACbC,KAAgB;QAChBM,iBAA4B;QAC5BE,cAAyB;QACzBM,QAAmB;QACnB4F,cAAyB;KAC1B;IACD,gBAAgB,EAAE,CAACzG,MAAiB,CAAC;gBACrCE,YAAU;CACX,CAAC;;AClmBF;;;;;;;AAuBA;AACA,MAAa,yCAAyC;;;;;IAQpD,YAAY,MAA+B;QACzC,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;KACtB;;;;;;;IAQK,WAAW,CACf,iBAAyB,EACzB,cAAsB,EACtB,OAAmE;;YAEnE,MAAM,mBAAmB,GAAG,CAC1B,IAAmC,EACnC,IAA8B;gBAE9B,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;aACrD,CAAA,CAAC;YACF,MAAM,aAAa,GAAG,CACpB,IAAmC,EACnC,IAA8B;;gBAE9B,IAAI,kBAAkB,GAEN,SAAS,CAAC;gBAC1B,MAAM,gBAAgB,GAAG,MAAA,IAAI,CAAC,OAAO,0CAAE,UAAU,CAAC;gBAClD,MAAM,QAAQ,GAAmC,CAC/C,WAA6C,EAC7C,YAAqB;oBAErB,kBAAkB,GAAG,WAAW,CAAC;oBACjC,gBAAgB,aAAhB,gBAAgB,uBAAhB,gBAAgB,CAAG,WAAW,EAAE,YAAY,CAAC,CAAC;iBAC/C,CAAC;gBACF,MAAM,WAAW,mCACZ,IAAI,KACP,OAAO,kCACF,IAAI,CAAC,OAAO,KACf,UAAU,EAAE,QAAQ,MAEvB,CAAC;gBACF,MAAM,YAAY,GAAG,MAAM,mBAAmB,CAAC,WAAW,EAAE,IAAI,CAAC,CAAC;gBAClE,OAAO;oBACL,YAAY;oBACZ,WAAW,EAAE;wBACX,UAAU,EAAE,kBAAmB,CAAC,MAAM;wBACtC,IAAI,EAAE,kBAAmB,CAAC,UAAU;wBACpC,OAAO,EAAE,kBAAmB,CAAC,OAAO,CAAC,MAAM,EAAE;qBAC9C;iBACF,CAAC;aACH,CAAA,CAAC;YAEF,MAAM,GAAG,GAAG,IAAI,OAAO,CACrB,aAAa,EACb,EAAE,iBAAiB,EAAE,cAAc,EAAE,OAAO,EAAE,EAC9C,mBAAmB,CACpB,CAAC;YACF,OAAO,IAAIgC,iBAAS,CAAC,GAAG,EAAE;gBACxB,UAAU,EAAE,OAAO,aAAP,OAAO,uBAAP,OAAO,CAAE,UAAU;gBAC/B,YAAY,EAAE,OAAO,aAAP,OAAO,uBAAP,OAAO,CAAE,kBAAkB;aAC1C,CAAC,CAAC;SACJ;KAAA;;;;;;;IAQK,kBAAkB,CACtB,iBAAyB,EACzB,cAAsB,EACtB,OAAmE;;YAEnE,MAAM,MAAM,GAAG,MAAM,IAAI,CAAC,WAAW,CACnC,iBAAiB,EACjB,cAAc,EACd,OAAO,CACR,CAAC;YACF,OAAO,MAAM,CAAC,aAAa,EAAE,CAAC;SAC/B;KAAA;;;;;;;;;IAUK,mBAAmB,CACvB,iBAAyB,EACzB,cAAsB,EACtB,OAA2E;;YAE3E,MAAM,mBAAmB,GAAG,CAC1B,IAAmC,EACnC,IAA8B;gBAE9B,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;aACrD,CAAA,CAAC;YACF,MAAM,aAAa,GAAG,CACpB,IAAmC,EACnC,IAA8B;;gBAE9B,IAAI,kBAAkB,GAEN,SAAS,CAAC;gBAC1B,MAAM,gBAAgB,GAAG,MAAA,IAAI,CAAC,OAAO,0CAAE,UAAU,CAAC;gBAClD,MAAM,QAAQ,GAAmC,CAC/C,WAA6C,EAC7C,YAAqB;oBAErB,kBAAkB,GAAG,WAAW,CAAC;oBACjC,gBAAgB,aAAhB,gBAAgB,uBAAhB,gBAAgB,CAAG,WAAW,EAAE,YAAY,CAAC,CAAC;iBAC/C,CAAC;gBACF,MAAM,WAAW,mCACZ,IAAI,KACP,OAAO,kCACF,IAAI,CAAC,OAAO,KACf,UAAU,EAAE,QAAQ,MAEvB,CAAC;gBACF,MAAM,YAAY,GAAG,MAAM,mBAAmB,CAAC,WAAW,EAAE,IAAI,CAAC,CAAC;gBAClE,OAAO;oBACL,YAAY;oBACZ,WAAW,EAAE;wBACX,UAAU,EAAE,kBAAmB,CAAC,MAAM;wBACtC,IAAI,EAAE,kBAAmB,CAAC,UAAU;wBACpC,OAAO,EAAE,kBAAmB,CAAC,OAAO,CAAC,MAAM,EAAE;qBAC9C;iBACF,CAAC;aACH,CAAA,CAAC;YAEF,MAAM,GAAG,GAAG,IAAI,OAAO,CACrB,aAAa,EACb,EAAE,iBAAiB,EAAE,cAAc,EAAE,OAAO,EAAE,EAC9C,2BAA2B,CAC5B,CAAC;YACF,OAAO,IAAIA,iBAAS,CAAC,GAAG,EAAE;gBACxB,UAAU,EAAE,OAAO,aAAP,OAAO,uBAAP,OAAO,CAAE,UAAU;gBAC/B,YAAY,EAAE,OAAO,aAAP,OAAO,uBAAP,OAAO,CAAE,kBAAkB;aAC1C,CAAC,CAAC;SACJ;KAAA;;;;;;;;;IAUK,0BAA0B,CAC9B,iBAAyB,EACzB,cAAsB,EACtB,OAA2E;;YAE3E,MAAM,MAAM,GAAG,MAAM,IAAI,CAAC,mBAAmB,CAC3C,iBAAiB,EACjB,cAAc,EACd,OAAO,CACR,CAAC;YACF,OAAO,MAAM,CAAC,aAAa,EAAE,CAAC;SAC/B;KAAA;;;;;;;;;IAUK,0BAA0B,CAC9B,iBAAyB,EACzB,cAAsB,EACtB,OAAkF;;YAElF,MAAM,mBAAmB,GAAG,CAC1B,IAAmC,EACnC,IAA8B;gBAE9B,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;aACrD,CAAA,CAAC;YACF,MAAM,aAAa,GAAG,CACpB,IAAmC,EACnC,IAA8B;;gBAE9B,IAAI,kBAAkB,GAEN,SAAS,CAAC;gBAC1B,MAAM,gBAAgB,GAAG,MAAA,IAAI,CAAC,OAAO,0CAAE,UAAU,CAAC;gBAClD,MAAM,QAAQ,GAAmC,CAC/C,WAA6C,EAC7C,YAAqB;oBAErB,kBAAkB,GAAG,WAAW,CAAC;oBACjC,gBAAgB,aAAhB,gBAAgB,uBAAhB,gBAAgB,CAAG,WAAW,EAAE,YAAY,CAAC,CAAC;iBAC/C,CAAC;gBACF,MAAM,WAAW,mCACZ,IAAI,KACP,OAAO,kCACF,IAAI,CAAC,OAAO,KACf,UAAU,EAAE,QAAQ,MAEvB,CAAC;gBACF,MAAM,YAAY,GAAG,MAAM,mBAAmB,CAAC,WAAW,EAAE,IAAI,CAAC,CAAC;gBAClE,OAAO;oBACL,YAAY;oBACZ,WAAW,EAAE;wBACX,UAAU,EAAE,kBAAmB,CAAC,MAAM;wBACtC,IAAI,EAAE,kBAAmB,CAAC,UAAU;wBACpC,OAAO,EAAE,kBAAmB,CAAC,OAAO,CAAC,MAAM,EAAE;qBAC9C;iBACF,CAAC;aACH,CAAA,CAAC;YAEF,MAAM,GAAG,GAAG,IAAI,OAAO,CACrB,aAAa,EACb,EAAE,iBAAiB,EAAE,cAAc,EAAE,OAAO,EAAE,EAC9C,kCAAkC,CACnC,CAAC;YACF,OAAO,IAAIA,iBAAS,CAAC,GAAG,EAAE;gBACxB,UAAU,EAAE,OAAO,aAAP,OAAO,uBAAP,OAAO,CAAE,UAAU;gBAC/B,YAAY,EAAE,OAAO,aAAP,OAAO,uBAAP,OAAO,CAAE,kBAAkB;aAC1C,CAAC,CAAC;SACJ;KAAA;;;;;;;;;IAUK,iCAAiC,CACrC,iBAAyB,EACzB,cAAsB,EACtB,OAAkF;;YAElF,MAAM,MAAM,GAAG,MAAM,IAAI,CAAC,0BAA0B,CAClD,iBAAiB,EACjB,cAAc,EACd,OAAO,CACR,CAAC;YACF,OAAO,MAAM,CAAC,aAAa,EAAE,CAAC;SAC/B;KAAA;;;;;;;IAQD,SAAS,CACP,iBAAyB,EACzB,cAAsB,EACtB,OAAsE;QAEtE,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,iBAAiB,EAAE,cAAc,EAAE,OAAO,EAAE,EAC9C,sBAAsB,CACvB,CAAC;KACH;CACF;AACD;AACA,MAAMhC,YAAU,GAAGP,2BAA2B,CAAC,OAAO,cAAc,KAAK,CAAC,CAAC;AAE3E,MAAM,mBAAmB,GAA6B;IACpD,IAAI,EACF,gKAAgK;IAClK,UAAU,EAAE,MAAM;IAClB,SAAS,EAAE;QACT,GAAG,EAAE,EAAE;QACP,GAAG,EAAE,EAAE;QACP,GAAG,EAAE,EAAE;QACP,GAAG,EAAE,EAAE;QACP,OAAO,EAAE;YACP,UAAU,EAAEE,UAAkB;SAC/B;KACF;IACD,eAAe,EAAE,CAACC,UAAqB,CAAC;IACxC,aAAa,EAAE;QACbC,KAAgB;QAChBM,iBAA4B;QAC5BE,cAAyB;QACzBkG,cAAyB;KAC1B;IACD,gBAAgB,EAAE,CAACzG,MAAiB,CAAC;gBACrCE,YAAU;CACX,CAAC;AACF,MAAM,2BAA2B,GAA6B;IAC5D,IAAI,EACF,0JAA0J;IAC5J,UAAU,EAAE,MAAM;IAClB,SAAS,EAAE;QACT,GAAG,EAAE,EAAE;QACP,GAAG,EAAE,EAAE;QACP,GAAG,EAAE,EAAE;QACP,GAAG,EAAE,EAAE;QACP,OAAO,EAAE;YACP,UAAU,EAAEL,UAAkB;SAC/B;KACF;IACD,eAAe,EAAE,CAACC,UAAqB,CAAC;IACxC,aAAa,EAAE;QACbC,KAAgB;QAChBM,iBAA4B;QAC5BE,cAAyB;QACzBkG,cAAyB;KAC1B;IACD,gBAAgB,EAAE,CAACzG,MAAiB,CAAC;gBACrCE,YAAU;CACX,CAAC;AACF,MAAM,kCAAkC,GAA6B;IACnE,IAAI,EACF,iKAAiK;IACnK,UAAU,EAAE,MAAM;IAClB,SAAS,EAAE;QACT,GAAG,EAAE,EAAE;QACP,GAAG,EAAE,EAAE;QACP,GAAG,EAAE,EAAE;QACP,GAAG,EAAE,EAAE;QACP,OAAO,EAAE;YACP,UAAU,EAAEL,UAAkB;SAC/B;KACF;IACD,eAAe,EAAE,CAACC,UAAqB,CAAC;IACxC,aAAa,EAAE;QACbC,KAAgB;QAChBM,iBAA4B;QAC5BE,cAAyB;QACzBkG,cAAyB;KAC1B;IACD,gBAAgB,EAAE,CAACzG,MAAiB,CAAC;gBACrCE,YAAU;CACX,CAAC;AACF,MAAM,sBAAsB,GAA6B;IACvD,IAAI,EACF,gKAAgK;IAClK,UAAU,EAAE,KAAK;IACjB,SAAS,EAAE;QACT,GAAG,EAAE;YACH,UAAU,EAAEyJ,wBAAgC;SAC7C;QACD,OAAO,EAAE;YACP,UAAU,EAAE9J,UAAkB;SAC/B;KACF;IACD,eAAe,EAAE,CAACC,UAAqB,CAAC;IACxC,aAAa,EAAE;QACbC,KAAgB;QAChBM,iBAA4B;QAC5BE,cAAyB;QACzBkG,cAAyB;KAC1B;IACD,gBAAgB,EAAE,CAACzG,MAAiB,CAAC;gBACrCE,YAAU;CACX,CAAC;;AC1YF;;;;;;;AA6BA;AACA,MAAa,sCAAsC;;;;;IAQjD,YAAY,MAA+B;QACzC,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;KACtB;;;;;;;;;;IAWK,mBAAmB,CACvB,iBAAyB,EACzB,cAAsB,EACtB,UAAkB,EAClB,eAAuB,EACvB,mBAAsD,EACtD,OAAwE;;YASxE,MAAM,mBAAmB,GAAG,CAC1B,IAAmC,EACnC,IAA8B;gBAE9B,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;aACrD,CAAA,CAAC;YACF,MAAM,aAAa,GAAG,CACpB,IAAmC,EACnC,IAA8B;;gBAE9B,IAAI,kBAAkB,GAEN,SAAS,CAAC;gBAC1B,MAAM,gBAAgB,GAAG,MAAA,IAAI,CAAC,OAAO,0CAAE,UAAU,CAAC;gBAClD,MAAM,QAAQ,GAAmC,CAC/C,WAA6C,EAC7C,YAAqB;oBAErB,kBAAkB,GAAG,WAAW,CAAC;oBACjC,gBAAgB,aAAhB,gBAAgB,uBAAhB,gBAAgB,CAAG,WAAW,EAAE,YAAY,CAAC,CAAC;iBAC/C,CAAC;gBACF,MAAM,WAAW,mCACZ,IAAI,KACP,OAAO,kCACF,IAAI,CAAC,OAAO,KACf,UAAU,EAAE,QAAQ,MAEvB,CAAC;gBACF,MAAM,YAAY,GAAG,MAAM,mBAAmB,CAAC,WAAW,EAAE,IAAI,CAAC,CAAC;gBAClE,OAAO;oBACL,YAAY;oBACZ,WAAW,EAAE;wBACX,UAAU,EAAE,kBAAmB,CAAC,MAAM;wBACtC,IAAI,EAAE,kBAAmB,CAAC,UAAU;wBACpC,OAAO,EAAE,kBAAmB,CAAC,OAAO,CAAC,MAAM,EAAE;qBAC9C;iBACF,CAAC;aACH,CAAA,CAAC;YAEF,MAAM,GAAG,GAAG,IAAI,OAAO,CACrB,aAAa,EACb;gBACE,iBAAiB;gBACjB,cAAc;gBACd,UAAU;gBACV,eAAe;gBACf,mBAAmB;gBACnB,OAAO;aACR,EACDY,6BAA2B,CAC5B,CAAC;YACF,OAAO,IAAIoB,iBAAS,CAAC,GAAG,EAAE;gBACxB,UAAU,EAAE,OAAO,aAAP,OAAO,uBAAP,OAAO,CAAE,UAAU;gBAC/B,YAAY,EAAE,OAAO,aAAP,OAAO,uBAAP,OAAO,CAAE,kBAAkB;aAC1C,CAAC,CAAC;SACJ;KAAA;;;;;;;;;;IAWK,0BAA0B,CAC9B,iBAAyB,EACzB,cAAsB,EACtB,UAAkB,EAClB,eAAuB,EACvB,mBAAsD,EACtD,OAAwE;;YAExE,MAAM,MAAM,GAAG,MAAM,IAAI,CAAC,mBAAmB,CAC3C,iBAAiB,EACjB,cAAc,EACd,UAAU,EACV,eAAe,EACf,mBAAmB,EACnB,OAAO,CACR,CAAC;YACF,OAAO,MAAM,CAAC,aAAa,EAAE,CAAC;SAC/B;KAAA;;;;;;;;;;IAWK,WAAW,CACf,iBAAyB,EACzB,cAAsB,EACtB,UAAkB,EAClB,eAAuB,EACvB,mBAA4D,EAC5D,OAAgE;;YAOhE,MAAM,mBAAmB,GAAG,CAC1B,IAAmC,EACnC,IAA8B;gBAE9B,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;aACrD,CAAA,CAAC;YACF,MAAM,aAAa,GAAG,CACpB,IAAmC,EACnC,IAA8B;;gBAE9B,IAAI,kBAAkB,GAEN,SAAS,CAAC;gBAC1B,MAAM,gBAAgB,GAAG,MAAA,IAAI,CAAC,OAAO,0CAAE,UAAU,CAAC;gBAClD,MAAM,QAAQ,GAAmC,CAC/C,WAA6C,EAC7C,YAAqB;oBAErB,kBAAkB,GAAG,WAAW,CAAC;oBACjC,gBAAgB,aAAhB,gBAAgB,uBAAhB,gBAAgB,CAAG,WAAW,EAAE,YAAY,CAAC,CAAC;iBAC/C,CAAC;gBACF,MAAM,WAAW,mCACZ,IAAI,KACP,OAAO,kCACF,IAAI,CAAC,OAAO,KACf,UAAU,EAAE,QAAQ,MAEvB,CAAC;gBACF,MAAM,YAAY,GAAG,MAAM,mBAAmB,CAAC,WAAW,EAAE,IAAI,CAAC,CAAC;gBAClE,OAAO;oBACL,YAAY;oBACZ,WAAW,EAAE;wBACX,UAAU,EAAE,kBAAmB,CAAC,MAAM;wBACtC,IAAI,EAAE,kBAAmB,CAAC,UAAU;wBACpC,OAAO,EAAE,kBAAmB,CAAC,OAAO,CAAC,MAAM,EAAE;qBAC9C;iBACF,CAAC;aACH,CAAA,CAAC;YAEF,MAAM,GAAG,GAAG,IAAI,OAAO,CACrB,aAAa,EACb;gBACE,iBAAiB;gBACjB,cAAc;gBACd,UAAU;gBACV,eAAe;gBACf,mBAAmB;gBACnB,OAAO;aACR,EACDnB,qBAAmB,CACpB,CAAC;YACF,OAAO,IAAImB,iBAAS,CAAC,GAAG,EAAE;gBACxB,UAAU,EAAE,OAAO,aAAP,OAAO,uBAAP,OAAO,CAAE,UAAU;gBAC/B,YAAY,EAAE,OAAO,aAAP,OAAO,uBAAP,OAAO,CAAE,kBAAkB;aAC1C,CAAC,CAAC;SACJ;KAAA;;;;;;;;;;IAWK,kBAAkB,CACtB,iBAAyB,EACzB,cAAsB,EACtB,UAAkB,EAClB,eAAuB,EACvB,mBAA4D,EAC5D,OAAgE;;YAEhE,MAAM,MAAM,GAAG,MAAM,IAAI,CAAC,WAAW,CACnC,iBAAiB,EACjB,cAAc,EACd,UAAU,EACV,eAAe,EACf,mBAAmB,EACnB,OAAO,CACR,CAAC;YACF,OAAO,MAAM,CAAC,aAAa,EAAE,CAAC;SAC/B;KAAA;;;;;;;;;IAUK,WAAW,CACf,iBAAyB,EACzB,cAAsB,EACtB,UAAkB,EAClB,eAAuB,EACvB,OAAgE;;YAEhE,MAAM,mBAAmB,GAAG,CAC1B,IAAmC,EACnC,IAA8B;gBAE9B,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;aACrD,CAAA,CAAC;YACF,MAAM,aAAa,GAAG,CACpB,IAAmC,EACnC,IAA8B;;gBAE9B,IAAI,kBAAkB,GAEN,SAAS,CAAC;gBAC1B,MAAM,gBAAgB,GAAG,MAAA,IAAI,CAAC,OAAO,0CAAE,UAAU,CAAC;gBAClD,MAAM,QAAQ,GAAmC,CAC/C,WAA6C,EAC7C,YAAqB;oBAErB,kBAAkB,GAAG,WAAW,CAAC;oBACjC,gBAAgB,aAAhB,gBAAgB,uBAAhB,gBAAgB,CAAG,WAAW,EAAE,YAAY,CAAC,CAAC;iBAC/C,CAAC;gBACF,MAAM,WAAW,mCACZ,IAAI,KACP,OAAO,kCACF,IAAI,CAAC,OAAO,KACf,UAAU,EAAE,QAAQ,MAEvB,CAAC;gBACF,MAAM,YAAY,GAAG,MAAM,mBAAmB,CAAC,WAAW,EAAE,IAAI,CAAC,CAAC;gBAClE,OAAO;oBACL,YAAY;oBACZ,WAAW,EAAE;wBACX,UAAU,EAAE,kBAAmB,CAAC,MAAM;wBACtC,IAAI,EAAE,kBAAmB,CAAC,UAAU;wBACpC,OAAO,EAAE,kBAAmB,CAAC,OAAO,CAAC,MAAM,EAAE;qBAC9C;iBACF,CAAC;aACH,CAAA,CAAC;YAEF,MAAM,GAAG,GAAG,IAAI,OAAO,CACrB,aAAa,EACb;gBACE,iBAAiB;gBACjB,cAAc;gBACd,UAAU;gBACV,eAAe;gBACf,OAAO;aACR,EACDlB,qBAAmB,CACpB,CAAC;YACF,OAAO,IAAIkB,iBAAS,CAAC,GAAG,EAAE;gBACxB,UAAU,EAAE,OAAO,aAAP,OAAO,uBAAP,OAAO,CAAE,UAAU;gBAC/B,YAAY,EAAE,OAAO,aAAP,OAAO,uBAAP,OAAO,CAAE,kBAAkB;aAC1C,CAAC,CAAC;SACJ;KAAA;;;;;;;;;IAUK,kBAAkB,CACtB,iBAAyB,EACzB,cAAsB,EACtB,UAAkB,EAClB,eAAuB,EACvB,OAAgE;;YAEhE,MAAM,MAAM,GAAG,MAAM,IAAI,CAAC,WAAW,CACnC,iBAAiB,EACjB,cAAc,EACd,UAAU,EACV,eAAe,EACf,OAAO,CACR,CAAC;YACF,OAAO,MAAM,CAAC,aAAa,EAAE,CAAC;SAC/B;KAAA;;;;;;;;;IAUD,GAAG,CACD,iBAAyB,EACzB,cAAsB,EACtB,UAAkB,EAClB,eAAuB,EACvB,OAA6D;QAE7D,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC;YACE,iBAAiB;YACjB,cAAc;YACd,UAAU;YACV,eAAe;YACf,OAAO;SACR,EACDjB,kBAAgB,CACjB,CAAC;KACH;;;;;;;;IASD,IAAI,CACF,iBAAyB,EACzB,cAAsB,EACtB,UAAkB,EAClB,OAA8D;QAE9D,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,iBAAiB,EAAE,cAAc,EAAE,UAAU,EAAE,OAAO,EAAE,EAC1DhB,mBAAiB,CAClB,CAAC;KACH;CACF;AACD;AACA,MAAMC,YAAU,GAAGP,2BAA2B,CAAC,OAAO,cAAc,KAAK,CAAC,CAAC;AAE3E,MAAMmB,6BAA2B,GAA6B;IAC5D,IAAI,EACF,mMAAmM;IACrM,UAAU,EAAE,KAAK;IACjB,SAAS,EAAE;QACT,GAAG,EAAE;YACH,UAAU,EAAE8I,iCAAyC;SACtD;QACD,GAAG,EAAE;YACH,UAAU,EAAEA,iCAAyC;SACtD;QACD,GAAG,EAAE;YACH,UAAU,EAAEA,iCAAyC;SACtD;QACD,GAAG,EAAE;YACH,UAAU,EAAEA,iCAAyC;SACtD;QACD,OAAO,EAAE;YACP,UAAU,EAAE/J,UAAkB;SAC/B;KACF;IACD,WAAW,EAAEgK,oBAA+B;IAC5C,eAAe,EAAE,CAAC/J,UAAqB,CAAC;IACxC,aAAa,EAAE;QACbC,KAAgB;QAChBM,iBAA4B;QAC5BE,cAAyB;QACzBkD,eAA0B;QAC1BgD,cAAyB;QACzBqD,UAAqB;KACtB;IACD,gBAAgB,EAAE,CAAC9J,MAAiB,EAAEQ,WAAsB,CAAC;IAC7D,SAAS,EAAE,MAAM;gBACjBN,YAAU;CACX,CAAC;AACF,MAAMa,qBAAmB,GAA6B;IACpD,IAAI,EACF,mMAAmM;IACrM,UAAU,EAAE,OAAO;IACnB,SAAS,EAAE;QACT,GAAG,EAAE;YACH,UAAU,EAAE6I,iCAAyC;SACtD;QACD,GAAG,EAAE;YACH,UAAU,EAAEA,iCAAyC;SACtD;QACD,GAAG,EAAE;YACH,UAAU,EAAEA,iCAAyC;SACtD;QACD,GAAG,EAAE;YACH,UAAU,EAAEA,iCAAyC;SACtD;QACD,OAAO,EAAE;YACP,UAAU,EAAE/J,UAAkB;SAC/B;KACF;IACD,WAAW,EAAEkK,oBAA+B;IAC5C,eAAe,EAAE,CAACjK,UAAqB,CAAC;IACxC,aAAa,EAAE;QACbC,KAAgB;QAChBM,iBAA4B;QAC5BE,cAAyB;QACzBkD,eAA0B;QAC1BgD,cAAyB;QACzBqD,UAAqB;KACtB;IACD,gBAAgB,EAAE,CAAC9J,MAAiB,EAAEQ,WAAsB,CAAC;IAC7D,SAAS,EAAE,MAAM;gBACjBN,YAAU;CACX,CAAC;AACF,MAAMc,qBAAmB,GAA6B;IACpD,IAAI,EACF,mMAAmM;IACrM,UAAU,EAAE,QAAQ;IACpB,SAAS,EAAE;QACT,GAAG,EAAE,EAAE;QACP,GAAG,EAAE,EAAE;QACP,GAAG,EAAE,EAAE;QACP,GAAG,EAAE,EAAE;QACP,OAAO,EAAE;YACP,UAAU,EAAEnB,UAAkB;SAC/B;KACF;IACD,eAAe,EAAE,CAACC,UAAqB,CAAC;IACxC,aAAa,EAAE;QACbC,KAAgB;QAChBM,iBAA4B;QAC5BE,cAAyB;QACzBkD,eAA0B;QAC1BgD,cAAyB;QACzBqD,UAAqB;KACtB;IACD,gBAAgB,EAAE,CAAC9J,MAAiB,CAAC;gBACrCE,YAAU;CACX,CAAC;AACF,MAAMe,kBAAgB,GAA6B;IACjD,IAAI,EACF,mMAAmM;IACrM,UAAU,EAAE,KAAK;IACjB,SAAS,EAAE;QACT,GAAG,EAAE;YACH,UAAU,EAAE2I,iCAAyC;SACtD;QACD,OAAO,EAAE;YACP,UAAU,EAAE/J,UAAkB;SAC/B;KACF;IACD,eAAe,EAAE,CAACC,UAAqB,EAAEa,MAAiB,CAAC;IAC3D,aAAa,EAAE;QACbZ,KAAgB;QAChBM,iBAA4B;QAC5BE,cAAyB;QACzBkD,eAA0B;QAC1BgD,cAAyB;QACzBqD,UAAqB;KACtB;IACD,gBAAgB,EAAE,CAAC9J,MAAiB,CAAC;gBACrCE,YAAU;CACX,CAAC;AACF,MAAMD,mBAAiB,GAA6B;IAClD,IAAI,EACF,iLAAiL;IACnL,UAAU,EAAE,KAAK;IACjB,SAAS,EAAE;QACT,GAAG,EAAE;YACH,UAAU,EAAE+J,4CAAoD;SACjE;QACD,OAAO,EAAE;YACP,UAAU,EAAEnK,UAAkB;SAC/B;KACF;IACD,eAAe,EAAE,CAACC,UAAqB,EAAEa,MAAiB,CAAC;IAC3D,aAAa,EAAE;QACbZ,KAAgB;QAChBM,iBAA4B;QAC5BE,cAAyB;QACzBkG,cAAyB;QACzBqD,UAAqB;KACtB;IACD,gBAAgB,EAAE,CAAC9J,MAAiB,CAAC;gBACrCE,YAAU;CACX,CAAC;;AChiBF;;;;;;;AA6CA;AACA;AACA,MAAa,6BAA6B;;;;;IAQxC,YAAY,MAA+B;QACzC,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;KACtB;;;;;;;IAQM,IAAI,CACT,iBAAyB,EACzB,0BAAkC,EAClC,OAAqD;QAErD,MAAM,IAAI,GAAG,IAAI,CAAC,aAAa,CAC7B,iBAAiB,EACjB,0BAA0B,EAC1B,OAAO,CACR,CAAC;QACF,OAAO;YACL,IAAI;gBACF,OAAO,IAAI,CAAC,IAAI,EAAE,CAAC;aACpB;YACD,CAAC,MAAM,CAAC,aAAa,CAAC;gBACpB,OAAO,IAAI,CAAC;aACb;YACD,MAAM,EAAE;gBACN,OAAO,IAAI,CAAC,cAAc,CACxB,iBAAiB,EACjB,0BAA0B,EAC1B,OAAO,CACR,CAAC;aACH;SACF,CAAC;KACH;IAEc,cAAc,CAC3B,iBAAyB,EACzB,0BAAkC,EAClC,OAAqD;;YAErD,IAAI,MAAM,GAAG,oBAAM,IAAI,CAAC,KAAK,CAC3B,iBAAiB,EACjB,0BAA0B,EAC1B,OAAO,CACR,CAAA,CAAC;YACF,0BAAM,MAAM,CAAC,KAAK,IAAI,EAAE,CAAA,CAAC;YACzB,IAAI,iBAAiB,GAAG,MAAM,CAAC,QAAQ,CAAC;YACxC,OAAO,iBAAiB,EAAE;gBACxB,MAAM,GAAG,oBAAM,IAAI,CAAC,SAAS,CAC3B,iBAAiB,EACjB,0BAA0B,EAC1B,iBAAiB,EACjB,OAAO,CACR,CAAA,CAAC;gBACF,iBAAiB,GAAG,MAAM,CAAC,QAAQ,CAAC;gBACpC,0BAAM,MAAM,CAAC,KAAK,IAAI,EAAE,CAAA,CAAC;aAC1B;SACF;KAAA;IAEc,aAAa,CAC1B,iBAAyB,EACzB,0BAAkC,EAClC,OAAqD;;;;gBAErD,KAAyB,IAAA,KAAAT,oBAAA,IAAI,CAAC,cAAc,CAC1C,iBAAiB,EACjB,0BAA0B,EAC1B,OAAO,CACR,CAAA,IAAA;oBAJU,MAAM,IAAI,WAAA,CAAA;oBAKnB,oBAAA,OAAOC,uBAAAD,oBAAA,IAAI,CAAA,CAAA,CAAA,CAAC;iBACb;;;;;;;;;SACF;KAAA;;;;;;;;IASK,YAAY,CAChB,iBAAyB,EACzB,cAAsB,EACtB,UAAkB,EAClB,OAAwD;;YAExD,MAAM,mBAAmB,GAAG,CAC1B,IAAmC,EACnC,IAA8B;gBAE9B,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;aACrD,CAAA,CAAC;YACF,MAAM,aAAa,GAAG,CACpB,IAAmC,EACnC,IAA8B;;gBAE9B,IAAI,kBAAkB,GAEN,SAAS,CAAC;gBAC1B,MAAM,gBAAgB,GAAG,MAAA,IAAI,CAAC,OAAO,0CAAE,UAAU,CAAC;gBAClD,MAAM,QAAQ,GAAmC,CAC/C,WAA6C,EAC7C,YAAqB;oBAErB,kBAAkB,GAAG,WAAW,CAAC;oBACjC,gBAAgB,aAAhB,gBAAgB,uBAAhB,gBAAgB,CAAG,WAAW,EAAE,YAAY,CAAC,CAAC;iBAC/C,CAAC;gBACF,MAAM,WAAW,mCACZ,IAAI,KACP,OAAO,kCACF,IAAI,CAAC,OAAO,KACf,UAAU,EAAE,QAAQ,MAEvB,CAAC;gBACF,MAAM,YAAY,GAAG,MAAM,mBAAmB,CAAC,WAAW,EAAE,IAAI,CAAC,CAAC;gBAClE,OAAO;oBACL,YAAY;oBACZ,WAAW,EAAE;wBACX,UAAU,EAAE,kBAAmB,CAAC,MAAM;wBACtC,IAAI,EAAE,kBAAmB,CAAC,UAAU;wBACpC,OAAO,EAAE,kBAAmB,CAAC,OAAO,CAAC,MAAM,EAAE;qBAC9C;iBACF,CAAC;aACH,CAAA,CAAC;YAEF,MAAM,GAAG,GAAG,IAAI,OAAO,CACrB,aAAa,EACb,EAAE,iBAAiB,EAAE,cAAc,EAAE,UAAU,EAAE,OAAO,EAAE,EAC1D0G,sBAAoB,CACrB,CAAC;YACF,OAAO,IAAIjE,iBAAS,CAAC,GAAG,EAAE;gBACxB,UAAU,EAAE,OAAO,aAAP,OAAO,uBAAP,OAAO,CAAE,UAAU;gBAC/B,YAAY,EAAE,OAAO,aAAP,OAAO,uBAAP,OAAO,CAAE,kBAAkB;aAC1C,CAAC,CAAC;SACJ;KAAA;;;;;;;;IASK,mBAAmB,CACvB,iBAAyB,EACzB,cAAsB,EACtB,UAAkB,EAClB,OAAwD;;YAExD,MAAM,MAAM,GAAG,MAAM,IAAI,CAAC,YAAY,CACpC,iBAAiB,EACjB,cAAc,EACd,UAAU,EACV,OAAO,CACR,CAAC;YACF,OAAO,MAAM,CAAC,aAAa,EAAE,CAAC;SAC/B;KAAA;;;;;;;;;IAUK,eAAe,CACnB,iBAAyB,EACzB,cAAsB,EACtB,UAAkB,EAClB,OAA2D;;YAE3D,MAAM,mBAAmB,GAAG,CAC1B,IAAmC,EACnC,IAA8B;gBAE9B,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;aACrD,CAAA,CAAC;YACF,MAAM,aAAa,GAAG,CACpB,IAAmC,EACnC,IAA8B;;gBAE9B,IAAI,kBAAkB,GAEN,SAAS,CAAC;gBAC1B,MAAM,gBAAgB,GAAG,MAAA,IAAI,CAAC,OAAO,0CAAE,UAAU,CAAC;gBAClD,MAAM,QAAQ,GAAmC,CAC/C,WAA6C,EAC7C,YAAqB;oBAErB,kBAAkB,GAAG,WAAW,CAAC;oBACjC,gBAAgB,aAAhB,gBAAgB,uBAAhB,gBAAgB,CAAG,WAAW,EAAE,YAAY,CAAC,CAAC;iBAC/C,CAAC;gBACF,MAAM,WAAW,mCACZ,IAAI,KACP,OAAO,kCACF,IAAI,CAAC,OAAO,KACf,UAAU,EAAE,QAAQ,MAEvB,CAAC;gBACF,MAAM,YAAY,GAAG,MAAM,mBAAmB,CAAC,WAAW,EAAE,IAAI,CAAC,CAAC;gBAClE,OAAO;oBACL,YAAY;oBACZ,WAAW,EAAE;wBACX,UAAU,EAAE,kBAAmB,CAAC,MAAM;wBACtC,IAAI,EAAE,kBAAmB,CAAC,UAAU;wBACpC,OAAO,EAAE,kBAAmB,CAAC,OAAO,CAAC,MAAM,EAAE;qBAC9C;iBACF,CAAC;aACH,CAAA,CAAC;YAEF,MAAM,GAAG,GAAG,IAAI,OAAO,CACrB,aAAa,EACb,EAAE,iBAAiB,EAAE,cAAc,EAAE,UAAU,EAAE,OAAO,EAAE,EAC1D+H,yBAAuB,CACxB,CAAC;YACF,OAAO,IAAI/H,iBAAS,CAAC,GAAG,EAAE;gBACxB,UAAU,EAAE,OAAO,aAAP,OAAO,uBAAP,OAAO,CAAE,UAAU;gBAC/B,YAAY,EAAE,OAAO,aAAP,OAAO,uBAAP,OAAO,CAAE,kBAAkB;aAC1C,CAAC,CAAC;SACJ;KAAA;;;;;;;;;IAUK,sBAAsB,CAC1B,iBAAyB,EACzB,cAAsB,EACtB,UAAkB,EAClB,OAA2D;;YAE3D,MAAM,MAAM,GAAG,MAAM,IAAI,CAAC,eAAe,CACvC,iBAAiB,EACjB,cAAc,EACd,UAAU,EACV,OAAO,CACR,CAAC;YACF,OAAO,MAAM,CAAC,aAAa,EAAE,CAAC;SAC/B;KAAA;;;;;;;;;;IAWK,eAAe,CACnB,iBAAyB,EACzB,cAAsB,EACtB,UAAkB,EAClB,OAA2D;;YAE3D,MAAM,mBAAmB,GAAG,CAC1B,IAAmC,EACnC,IAA8B;gBAE9B,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;aACrD,CAAA,CAAC;YACF,MAAM,aAAa,GAAG,CACpB,IAAmC,EACnC,IAA8B;;gBAE9B,IAAI,kBAAkB,GAEN,SAAS,CAAC;gBAC1B,MAAM,gBAAgB,GAAG,MAAA,IAAI,CAAC,OAAO,0CAAE,UAAU,CAAC;gBAClD,MAAM,QAAQ,GAAmC,CAC/C,WAA6C,EAC7C,YAAqB;oBAErB,kBAAkB,GAAG,WAAW,CAAC;oBACjC,gBAAgB,aAAhB,gBAAgB,uBAAhB,gBAAgB,CAAG,WAAW,EAAE,YAAY,CAAC,CAAC;iBAC/C,CAAC;gBACF,MAAM,WAAW,mCACZ,IAAI,KACP,OAAO,kCACF,IAAI,CAAC,OAAO,KACf,UAAU,EAAE,QAAQ,MAEvB,CAAC;gBACF,MAAM,YAAY,GAAG,MAAM,mBAAmB,CAAC,WAAW,EAAE,IAAI,CAAC,CAAC;gBAClE,OAAO;oBACL,YAAY;oBACZ,WAAW,EAAE;wBACX,UAAU,EAAE,kBAAmB,CAAC,MAAM;wBACtC,IAAI,EAAE,kBAAmB,CAAC,UAAU;wBACpC,OAAO,EAAE,kBAAmB,CAAC,OAAO,CAAC,MAAM,EAAE;qBAC9C;iBACF,CAAC;aACH,CAAA,CAAC;YAEF,MAAM,GAAG,GAAG,IAAI,OAAO,CACrB,aAAa,EACb,EAAE,iBAAiB,EAAE,cAAc,EAAE,UAAU,EAAE,OAAO,EAAE,EAC1D2D,yBAAuB,CACxB,CAAC;YACF,OAAO,IAAI3D,iBAAS,CAAC,GAAG,EAAE;gBACxB,UAAU,EAAE,OAAO,aAAP,OAAO,uBAAP,OAAO,CAAE,UAAU;gBAC/B,YAAY,EAAE,OAAO,aAAP,OAAO,uBAAP,OAAO,CAAE,kBAAkB;aAC1C,CAAC,CAAC;SACJ;KAAA;;;;;;;;;;IAWK,sBAAsB,CAC1B,iBAAyB,EACzB,cAAsB,EACtB,UAAkB,EAClB,OAA2D;;YAE3D,MAAM,MAAM,GAAG,MAAM,IAAI,CAAC,eAAe,CACvC,iBAAiB,EACjB,cAAc,EACd,UAAU,EACV,OAAO,CACR,CAAC;YACF,OAAO,MAAM,CAAC,aAAa,EAAE,CAAC;SAC/B;KAAA;;;;;;;;;IAUK,WAAW,CACf,iBAAyB,EACzB,cAAsB,EACtB,UAAkB,EAClB,UAAoC,EACpC,OAAuD;;YAOvD,MAAM,mBAAmB,GAAG,CAC1B,IAAmC,EACnC,IAA8B;gBAE9B,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;aACrD,CAAA,CAAC;YACF,MAAM,aAAa,GAAG,CACpB,IAAmC,EACnC,IAA8B;;gBAE9B,IAAI,kBAAkB,GAEN,SAAS,CAAC;gBAC1B,MAAM,gBAAgB,GAAG,MAAA,IAAI,CAAC,OAAO,0CAAE,UAAU,CAAC;gBAClD,MAAM,QAAQ,GAAmC,CAC/C,WAA6C,EAC7C,YAAqB;oBAErB,kBAAkB,GAAG,WAAW,CAAC;oBACjC,gBAAgB,aAAhB,gBAAgB,uBAAhB,gBAAgB,CAAG,WAAW,EAAE,YAAY,CAAC,CAAC;iBAC/C,CAAC;gBACF,MAAM,WAAW,mCACZ,IAAI,KACP,OAAO,kCACF,IAAI,CAAC,OAAO,KACf,UAAU,EAAE,QAAQ,MAEvB,CAAC;gBACF,MAAM,YAAY,GAAG,MAAM,mBAAmB,CAAC,WAAW,EAAE,IAAI,CAAC,CAAC;gBAClE,OAAO;oBACL,YAAY;oBACZ,WAAW,EAAE;wBACX,UAAU,EAAE,kBAAmB,CAAC,MAAM;wBACtC,IAAI,EAAE,kBAAmB,CAAC,UAAU;wBACpC,OAAO,EAAE,kBAAmB,CAAC,OAAO,CAAC,MAAM,EAAE;qBAC9C;iBACF,CAAC;aACH,CAAA,CAAC;YAEF,MAAM,GAAG,GAAG,IAAI,OAAO,CACrB,aAAa,EACb,EAAE,iBAAiB,EAAE,cAAc,EAAE,UAAU,EAAE,UAAU,EAAE,OAAO,EAAE,EACtEnB,qBAAmB,CACpB,CAAC;YACF,OAAO,IAAImB,iBAAS,CAAC,GAAG,EAAE;gBACxB,UAAU,EAAE,OAAO,aAAP,OAAO,uBAAP,OAAO,CAAE,UAAU;gBAC/B,YAAY,EAAE,OAAO,aAAP,OAAO,uBAAP,OAAO,CAAE,kBAAkB;aAC1C,CAAC,CAAC;SACJ;KAAA;;;;;;;;;IAUK,kBAAkB,CACtB,iBAAyB,EACzB,cAAsB,EACtB,UAAkB,EAClB,UAAoC,EACpC,OAAuD;;YAEvD,MAAM,MAAM,GAAG,MAAM,IAAI,CAAC,WAAW,CACnC,iBAAiB,EACjB,cAAc,EACd,UAAU,EACV,UAAU,EACV,OAAO,CACR,CAAC;YACF,OAAO,MAAM,CAAC,aAAa,EAAE,CAAC;SAC/B;KAAA;;;;;;;;IASK,WAAW,CACf,iBAAyB,EACzB,cAAsB,EACtB,UAAkB,EAClB,OAAuD;;YAEvD,MAAM,mBAAmB,GAAG,CAC1B,IAAmC,EACnC,IAA8B;gBAE9B,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;aACrD,CAAA,CAAC;YACF,MAAM,aAAa,GAAG,CACpB,IAAmC,EACnC,IAA8B;;gBAE9B,IAAI,kBAAkB,GAEN,SAAS,CAAC;gBAC1B,MAAM,gBAAgB,GAAG,MAAA,IAAI,CAAC,OAAO,0CAAE,UAAU,CAAC;gBAClD,MAAM,QAAQ,GAAmC,CAC/C,WAA6C,EAC7C,YAAqB;oBAErB,kBAAkB,GAAG,WAAW,CAAC;oBACjC,gBAAgB,aAAhB,gBAAgB,uBAAhB,gBAAgB,CAAG,WAAW,EAAE,YAAY,CAAC,CAAC;iBAC/C,CAAC;gBACF,MAAM,WAAW,mCACZ,IAAI,KACP,OAAO,kCACF,IAAI,CAAC,OAAO,KACf,UAAU,EAAE,QAAQ,MAEvB,CAAC;gBACF,MAAM,YAAY,GAAG,MAAM,mBAAmB,CAAC,WAAW,EAAE,IAAI,CAAC,CAAC;gBAClE,OAAO;oBACL,YAAY;oBACZ,WAAW,EAAE;wBACX,UAAU,EAAE,kBAAmB,CAAC,MAAM;wBACtC,IAAI,EAAE,kBAAmB,CAAC,UAAU;wBACpC,OAAO,EAAE,kBAAmB,CAAC,OAAO,CAAC,MAAM,EAAE;qBAC9C;iBACF,CAAC;aACH,CAAA,CAAC;YAEF,MAAM,GAAG,GAAG,IAAI,OAAO,CACrB,aAAa,EACb,EAAE,iBAAiB,EAAE,cAAc,EAAE,UAAU,EAAE,OAAO,EAAE,EAC1DlB,qBAAmB,CACpB,CAAC;YACF,OAAO,IAAIkB,iBAAS,CAAC,GAAG,EAAE;gBACxB,UAAU,EAAE,OAAO,aAAP,OAAO,uBAAP,OAAO,CAAE,UAAU;gBAC/B,YAAY,EAAE,OAAO,aAAP,OAAO,uBAAP,OAAO,CAAE,kBAAkB;aAC1C,CAAC,CAAC;SACJ;KAAA;;;;;;;;IASK,kBAAkB,CACtB,iBAAyB,EACzB,cAAsB,EACtB,UAAkB,EAClB,OAAuD;;YAEvD,MAAM,MAAM,GAAG,MAAM,IAAI,CAAC,WAAW,CACnC,iBAAiB,EACjB,cAAc,EACd,UAAU,EACV,OAAO,CACR,CAAC;YACF,OAAO,MAAM,CAAC,aAAa,EAAE,CAAC;SAC/B;KAAA;;;;;;;;IASD,GAAG,CACD,iBAAyB,EACzB,cAAsB,EACtB,UAAkB,EAClB,OAAoD;QAEpD,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,iBAAiB,EAAE,cAAc,EAAE,UAAU,EAAE,OAAO,EAAE,EAC1DjB,kBAAgB,CACjB,CAAC;KACH;;;;;;;;IASD,eAAe,CACb,iBAAyB,EACzB,cAAsB,EACtB,UAAkB,EAClB,OAAgE;QAEhE,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,iBAAiB,EAAE,cAAc,EAAE,UAAU,EAAE,OAAO,EAAE,EAC1DiJ,8BAA4B,CAC7B,CAAC;KACH;;;;;;;IAQO,KAAK,CACX,iBAAyB,EACzB,0BAAkC,EAClC,OAAqD;QAErD,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,iBAAiB,EAAE,0BAA0B,EAAE,OAAO,EAAE,EAC1DjK,mBAAiB,CAClB,CAAC;KACH;;;;;;;;;;IAWK,aAAa,CACjB,iBAAyB,EACzB,cAAsB,EACtB,UAAkB,EAClB,OAAyD;;YAEzD,MAAM,mBAAmB,GAAG,CAC1B,IAAmC,EACnC,IAA8B;gBAE9B,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;aACrD,CAAA,CAAC;YACF,MAAM,aAAa,GAAG,CACpB,IAAmC,EACnC,IAA8B;;gBAE9B,IAAI,kBAAkB,GAEN,SAAS,CAAC;gBAC1B,MAAM,gBAAgB,GAAG,MAAA,IAAI,CAAC,OAAO,0CAAE,UAAU,CAAC;gBAClD,MAAM,QAAQ,GAAmC,CAC/C,WAA6C,EAC7C,YAAqB;oBAErB,kBAAkB,GAAG,WAAW,CAAC;oBACjC,gBAAgB,aAAhB,gBAAgB,uBAAhB,gBAAgB,CAAG,WAAW,EAAE,YAAY,CAAC,CAAC;iBAC/C,CAAC;gBACF,MAAM,WAAW,mCACZ,IAAI,KACP,OAAO,kCACF,IAAI,CAAC,OAAO,KACf,UAAU,EAAE,QAAQ,MAEvB,CAAC;gBACF,MAAM,YAAY,GAAG,MAAM,mBAAmB,CAAC,WAAW,EAAE,IAAI,CAAC,CAAC;gBAClE,OAAO;oBACL,YAAY;oBACZ,WAAW,EAAE;wBACX,UAAU,EAAE,kBAAmB,CAAC,MAAM;wBACtC,IAAI,EAAE,kBAAmB,CAAC,UAAU;wBACpC,OAAO,EAAE,kBAAmB,CAAC,OAAO,CAAC,MAAM,EAAE;qBAC9C;iBACF,CAAC;aACH,CAAA,CAAC;YAEF,MAAM,GAAG,GAAG,IAAI,OAAO,CACrB,aAAa,EACb,EAAE,iBAAiB,EAAE,cAAc,EAAE,UAAU,EAAE,OAAO,EAAE,EAC1D8F,uBAAqB,CACtB,CAAC;YACF,OAAO,IAAI7D,iBAAS,CAAC,GAAG,EAAE;gBACxB,UAAU,EAAE,OAAO,aAAP,OAAO,uBAAP,OAAO,CAAE,UAAU;gBAC/B,YAAY,EAAE,OAAO,aAAP,OAAO,uBAAP,OAAO,CAAE,kBAAkB;aAC1C,CAAC,CAAC;SACJ;KAAA;;;;;;;;;;IAWK,oBAAoB,CACxB,iBAAyB,EACzB,cAAsB,EACtB,UAAkB,EAClB,OAAyD;;YAEzD,MAAM,MAAM,GAAG,MAAM,IAAI,CAAC,aAAa,CACrC,iBAAiB,EACjB,cAAc,EACd,UAAU,EACV,OAAO,CACR,CAAC;YACF,OAAO,MAAM,CAAC,aAAa,EAAE,CAAC;SAC/B;KAAA;;;;;;;;IASK,YAAY,CAChB,iBAAyB,EACzB,cAAsB,EACtB,UAAkB,EAClB,OAAwD;;YAExD,MAAM,mBAAmB,GAAG,CAC1B,IAAmC,EACnC,IAA8B;gBAE9B,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;aACrD,CAAA,CAAC;YACF,MAAM,aAAa,GAAG,CACpB,IAAmC,EACnC,IAA8B;;gBAE9B,IAAI,kBAAkB,GAEN,SAAS,CAAC;gBAC1B,MAAM,gBAAgB,GAAG,MAAA,IAAI,CAAC,OAAO,0CAAE,UAAU,CAAC;gBAClD,MAAM,QAAQ,GAAmC,CAC/C,WAA6C,EAC7C,YAAqB;oBAErB,kBAAkB,GAAG,WAAW,CAAC;oBACjC,gBAAgB,aAAhB,gBAAgB,uBAAhB,gBAAgB,CAAG,WAAW,EAAE,YAAY,CAAC,CAAC;iBAC/C,CAAC;gBACF,MAAM,WAAW,mCACZ,IAAI,KACP,OAAO,kCACF,IAAI,CAAC,OAAO,KACf,UAAU,EAAE,QAAQ,MAEvB,CAAC;gBACF,MAAM,YAAY,GAAG,MAAM,mBAAmB,CAAC,WAAW,EAAE,IAAI,CAAC,CAAC;gBAClE,OAAO;oBACL,YAAY;oBACZ,WAAW,EAAE;wBACX,UAAU,EAAE,kBAAmB,CAAC,MAAM;wBACtC,IAAI,EAAE,kBAAmB,CAAC,UAAU;wBACpC,OAAO,EAAE,kBAAmB,CAAC,OAAO,CAAC,MAAM,EAAE;qBAC9C;iBACF,CAAC;aACH,CAAA,CAAC;YAEF,MAAM,GAAG,GAAG,IAAI,OAAO,CACrB,aAAa,EACb,EAAE,iBAAiB,EAAE,cAAc,EAAE,UAAU,EAAE,OAAO,EAAE,EAC1DqC,sBAAoB,CACrB,CAAC;YACF,OAAO,IAAIrC,iBAAS,CAAC,GAAG,EAAE;gBACxB,UAAU,EAAE,OAAO,aAAP,OAAO,uBAAP,OAAO,CAAE,UAAU;gBAC/B,YAAY,EAAE,OAAO,aAAP,OAAO,uBAAP,OAAO,CAAE,kBAAkB;aAC1C,CAAC,CAAC;SACJ;KAAA;;;;;;;;IASK,mBAAmB,CACvB,iBAAyB,EACzB,cAAsB,EACtB,UAAkB,EAClB,OAAwD;;YAExD,MAAM,MAAM,GAAG,MAAM,IAAI,CAAC,YAAY,CACpC,iBAAiB,EACjB,cAAc,EACd,UAAU,EACV,OAAO,CACR,CAAC;YACF,OAAO,MAAM,CAAC,aAAa,EAAE,CAAC;SAC/B;KAAA;;;;;;;;IASK,UAAU,CACd,iBAAyB,EACzB,cAAsB,EACtB,UAAkB,EAClB,OAAsD;;YAEtD,MAAM,mBAAmB,GAAG,CAC1B,IAAmC,EACnC,IAA8B;gBAE9B,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;aACrD,CAAA,CAAC;YACF,MAAM,aAAa,GAAG,CACpB,IAAmC,EACnC,IAA8B;;gBAE9B,IAAI,kBAAkB,GAEN,SAAS,CAAC;gBAC1B,MAAM,gBAAgB,GAAG,MAAA,IAAI,CAAC,OAAO,0CAAE,UAAU,CAAC;gBAClD,MAAM,QAAQ,GAAmC,CAC/C,WAA6C,EAC7C,YAAqB;oBAErB,kBAAkB,GAAG,WAAW,CAAC;oBACjC,gBAAgB,aAAhB,gBAAgB,uBAAhB,gBAAgB,CAAG,WAAW,EAAE,YAAY,CAAC,CAAC;iBAC/C,CAAC;gBACF,MAAM,WAAW,mCACZ,IAAI,KACP,OAAO,kCACF,IAAI,CAAC,OAAO,KACf,UAAU,EAAE,QAAQ,MAEvB,CAAC;gBACF,MAAM,YAAY,GAAG,MAAM,mBAAmB,CAAC,WAAW,EAAE,IAAI,CAAC,CAAC;gBAClE,OAAO;oBACL,YAAY;oBACZ,WAAW,EAAE;wBACX,UAAU,EAAE,kBAAmB,CAAC,MAAM;wBACtC,IAAI,EAAE,kBAAmB,CAAC,UAAU;wBACpC,OAAO,EAAE,kBAAmB,CAAC,OAAO,CAAC,MAAM,EAAE;qBAC9C;iBACF,CAAC;aACH,CAAA,CAAC;YAEF,MAAM,GAAG,GAAG,IAAI,OAAO,CACrB,aAAa,EACb,EAAE,iBAAiB,EAAE,cAAc,EAAE,UAAU,EAAE,OAAO,EAAE,EAC1D8D,oBAAkB,CACnB,CAAC;YACF,OAAO,IAAI9D,iBAAS,CAAC,GAAG,EAAE;gBACxB,UAAU,EAAE,OAAO,aAAP,OAAO,uBAAP,OAAO,CAAE,UAAU;gBAC/B,YAAY,EAAE,OAAO,aAAP,OAAO,uBAAP,OAAO,CAAE,kBAAkB;aAC1C,CAAC,CAAC;SACJ;KAAA;;;;;;;;IASK,iBAAiB,CACrB,iBAAyB,EACzB,cAAsB,EACtB,UAAkB,EAClB,OAAsD;;YAEtD,MAAM,MAAM,GAAG,MAAM,IAAI,CAAC,UAAU,CAClC,iBAAiB,EACjB,cAAc,EACd,UAAU,EACV,OAAO,CACR,CAAC;YACF,OAAO,MAAM,CAAC,aAAa,EAAE,CAAC;SAC/B;KAAA;;;;;;;;;IAUK,aAAa,CACjB,iBAAyB,EACzB,cAAsB,EACtB,UAAkB,EAClB,OAAyD;;YAEzD,MAAM,mBAAmB,GAAG,CAC1B,IAAmC,EACnC,IAA8B;gBAE9B,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;aACrD,CAAA,CAAC;YACF,MAAM,aAAa,GAAG,CACpB,IAAmC,EACnC,IAA8B;;gBAE9B,IAAI,kBAAkB,GAEN,SAAS,CAAC;gBAC1B,MAAM,gBAAgB,GAAG,MAAA,IAAI,CAAC,OAAO,0CAAE,UAAU,CAAC;gBAClD,MAAM,QAAQ,GAAmC,CAC/C,WAA6C,EAC7C,YAAqB;oBAErB,kBAAkB,GAAG,WAAW,CAAC;oBACjC,gBAAgB,aAAhB,gBAAgB,uBAAhB,gBAAgB,CAAG,WAAW,EAAE,YAAY,CAAC,CAAC;iBAC/C,CAAC;gBACF,MAAM,WAAW,mCACZ,IAAI,KACP,OAAO,kCACF,IAAI,CAAC,OAAO,KACf,UAAU,EAAE,QAAQ,MAEvB,CAAC;gBACF,MAAM,YAAY,GAAG,MAAM,mBAAmB,CAAC,WAAW,EAAE,IAAI,CAAC,CAAC;gBAClE,OAAO;oBACL,YAAY;oBACZ,WAAW,EAAE;wBACX,UAAU,EAAE,kBAAmB,CAAC,MAAM;wBACtC,IAAI,EAAE,kBAAmB,CAAC,UAAU;wBACpC,OAAO,EAAE,kBAAmB,CAAC,OAAO,CAAC,MAAM,EAAE;qBAC9C;iBACF,CAAC;aACH,CAAA,CAAC;YAEF,MAAM,GAAG,GAAG,IAAI,OAAO,CACrB,aAAa,EACb,EAAE,iBAAiB,EAAE,cAAc,EAAE,UAAU,EAAE,OAAO,EAAE,EAC1D+D,uBAAqB,CACtB,CAAC;YACF,OAAO,IAAI/D,iBAAS,CAAC,GAAG,EAAE;gBACxB,UAAU,EAAE,OAAO,aAAP,OAAO,uBAAP,OAAO,CAAE,UAAU;gBAC/B,YAAY,EAAE,OAAO,aAAP,OAAO,uBAAP,OAAO,CAAE,kBAAkB;aAC1C,CAAC,CAAC;SACJ;KAAA;;;;;;;;;IAUK,oBAAoB,CACxB,iBAAyB,EACzB,cAAsB,EACtB,UAAkB,EAClB,OAAyD;;YAEzD,MAAM,MAAM,GAAG,MAAM,IAAI,CAAC,aAAa,CACrC,iBAAiB,EACjB,cAAc,EACd,UAAU,EACV,OAAO,CACR,CAAC;YACF,OAAO,MAAM,CAAC,aAAa,EAAE,CAAC;SAC/B;KAAA;;;;;;;;IASD,2BAA2B,CACzB,iBAAyB,EACzB,cAAsB,EACtB,UAAkB,EAClB,OAA4E;QAE5E,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,iBAAiB,EAAE,cAAc,EAAE,UAAU,EAAE,OAAO,EAAE,EAC1DiI,0CAAwC,CACzC,CAAC;KACH;;;;;;;;IASK,uBAAuB,CAC3B,iBAAyB,EACzB,cAAsB,EACtB,UAAkB,EAClB,OAAmE;;YAEnE,MAAM,mBAAmB,GAAG,CAC1B,IAAmC,EACnC,IAA8B;gBAE9B,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;aACrD,CAAA,CAAC;YACF,MAAM,aAAa,GAAG,CACpB,IAAmC,EACnC,IAA8B;;gBAE9B,IAAI,kBAAkB,GAEN,SAAS,CAAC;gBAC1B,MAAM,gBAAgB,GAAG,MAAA,IAAI,CAAC,OAAO,0CAAE,UAAU,CAAC;gBAClD,MAAM,QAAQ,GAAmC,CAC/C,WAA6C,EAC7C,YAAqB;oBAErB,kBAAkB,GAAG,WAAW,CAAC;oBACjC,gBAAgB,aAAhB,gBAAgB,uBAAhB,gBAAgB,CAAG,WAAW,EAAE,YAAY,CAAC,CAAC;iBAC/C,CAAC;gBACF,MAAM,WAAW,mCACZ,IAAI,KACP,OAAO,kCACF,IAAI,CAAC,OAAO,KACf,UAAU,EAAE,QAAQ,MAEvB,CAAC;gBACF,MAAM,YAAY,GAAG,MAAM,mBAAmB,CAAC,WAAW,EAAE,IAAI,CAAC,CAAC;gBAClE,OAAO;oBACL,YAAY;oBACZ,WAAW,EAAE;wBACX,UAAU,EAAE,kBAAmB,CAAC,MAAM;wBACtC,IAAI,EAAE,kBAAmB,CAAC,UAAU;wBACpC,OAAO,EAAE,kBAAmB,CAAC,OAAO,CAAC,MAAM,EAAE;qBAC9C;iBACF,CAAC;aACH,CAAA,CAAC;YAEF,MAAM,GAAG,GAAG,IAAI,OAAO,CACrB,aAAa,EACb,EAAE,iBAAiB,EAAE,cAAc,EAAE,UAAU,EAAE,OAAO,EAAE,EAC1DjE,iCAA+B,CAChC,CAAC;YACF,OAAO,IAAIhE,iBAAS,CAAC,GAAG,EAAE;gBACxB,UAAU,EAAE,OAAO,aAAP,OAAO,uBAAP,OAAO,CAAE,UAAU;gBAC/B,YAAY,EAAE,OAAO,aAAP,OAAO,uBAAP,OAAO,CAAE,kBAAkB;aAC1C,CAAC,CAAC;SACJ;KAAA;;;;;;;;IASK,8BAA8B,CAClC,iBAAyB,EACzB,cAAsB,EACtB,UAAkB,EAClB,OAAmE;;YAEnE,MAAM,MAAM,GAAG,MAAM,IAAI,CAAC,uBAAuB,CAC/C,iBAAiB,EACjB,cAAc,EACd,UAAU,EACV,OAAO,CACR,CAAC;YACF,OAAO,MAAM,CAAC,aAAa,EAAE,CAAC;SAC/B;KAAA;;;;;;;;IASD,gBAAgB,CACd,iBAAyB,EACzB,cAAsB,EACtB,UAAkB,EAClB,OAAiE;QAEjE,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,iBAAiB,EAAE,cAAc,EAAE,UAAU,EAAE,OAAO,EAAE,EAC1DkI,+BAA6B,CAC9B,CAAC;KACH;;;;;;;;;IAUK,eAAe,CACnB,iBAAyB,EACzB,cAAsB,EACtB,UAAkB,EAClB,UAA2B,EAC3B,OAA2D;;YAO3D,MAAM,mBAAmB,GAAG,CAC1B,IAAmC,EACnC,IAA8B;gBAE9B,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;aACrD,CAAA,CAAC;YACF,MAAM,aAAa,GAAG,CACpB,IAAmC,EACnC,IAA8B;;gBAE9B,IAAI,kBAAkB,GAEN,SAAS,CAAC;gBAC1B,MAAM,gBAAgB,GAAG,MAAA,IAAI,CAAC,OAAO,0CAAE,UAAU,CAAC;gBAClD,MAAM,QAAQ,GAAmC,CAC/C,WAA6C,EAC7C,YAAqB;oBAErB,kBAAkB,GAAG,WAAW,CAAC;oBACjC,gBAAgB,aAAhB,gBAAgB,uBAAhB,gBAAgB,CAAG,WAAW,EAAE,YAAY,CAAC,CAAC;iBAC/C,CAAC;gBACF,MAAM,WAAW,mCACZ,IAAI,KACP,OAAO,kCACF,IAAI,CAAC,OAAO,KACf,UAAU,EAAE,QAAQ,MAEvB,CAAC;gBACF,MAAM,YAAY,GAAG,MAAM,mBAAmB,CAAC,WAAW,EAAE,IAAI,CAAC,CAAC;gBAClE,OAAO;oBACL,YAAY;oBACZ,WAAW,EAAE;wBACX,UAAU,EAAE,kBAAmB,CAAC,MAAM;wBACtC,IAAI,EAAE,kBAAmB,CAAC,UAAU;wBACpC,OAAO,EAAE,kBAAmB,CAAC,OAAO,CAAC,MAAM,EAAE;qBAC9C;iBACF,CAAC;aACH,CAAA,CAAC;YAEF,MAAM,GAAG,GAAG,IAAI,OAAO,CACrB,aAAa,EACb,EAAE,iBAAiB,EAAE,cAAc,EAAE,UAAU,EAAE,UAAU,EAAE,OAAO,EAAE,EACtEC,yBAAuB,CACxB,CAAC;YACF,OAAO,IAAInI,iBAAS,CAAC,GAAG,EAAE;gBACxB,UAAU,EAAE,OAAO,aAAP,OAAO,uBAAP,OAAO,CAAE,UAAU;gBAC/B,YAAY,EAAE,OAAO,aAAP,OAAO,uBAAP,OAAO,CAAE,kBAAkB;gBACzC,yBAAyB,EAAE,UAAU;aACtC,CAAC,CAAC;SACJ;KAAA;;;;;;;;;IAUK,sBAAsB,CAC1B,iBAAyB,EACzB,cAAsB,EACtB,UAAkB,EAClB,UAA2B,EAC3B,OAA2D;;YAE3D,MAAM,MAAM,GAAG,MAAM,IAAI,CAAC,eAAe,CACvC,iBAAiB,EACjB,cAAc,EACd,UAAU,EACV,UAAU,EACV,OAAO,CACR,CAAC;YACF,OAAO,MAAM,CAAC,aAAa,EAAE,CAAC;SAC/B;KAAA;;;;;;;;IASO,SAAS,CACf,iBAAyB,EACzB,0BAAkC,EAClC,QAAgB,EAChB,OAAyD;QAEzD,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,iBAAiB,EAAE,0BAA0B,EAAE,QAAQ,EAAE,OAAO,EAAE,EACpEiC,uBAAqB,CACtB,CAAC;KACH;CACF;AACD;AACA,MAAMjE,YAAU,GAAGP,2BAA2B,CAAC,OAAO,cAAc,KAAK,CAAC,CAAC;AAE3E,MAAMwG,sBAAoB,GAA6B;IACrD,IAAI,EACF,8KAA8K;IAChL,UAAU,EAAE,MAAM;IAClB,SAAS,EAAE;QACT,GAAG,EAAE,EAAE;QACP,GAAG,EAAE,EAAE;QACP,GAAG,EAAE,EAAE;QACP,GAAG,EAAE,EAAE;QACP,OAAO,EAAE;YACP,UAAU,EAAEtG,UAAkB;SAC/B;KACF;IACD,WAAW,EAAEyK,wBAAmC;IAChD,eAAe,EAAE,CAACxK,UAAqB,CAAC;IACxC,aAAa,EAAE;QACbC,KAAgB;QAChBM,iBAA4B;QAC5BE,cAAyB;QACzBkG,cAAyB;QACzBqD,UAAqB;KACtB;IACD,gBAAgB,EAAE,CAAC9J,MAAiB,EAAEQ,WAAsB,CAAC;IAC7D,SAAS,EAAE,MAAM;gBACjBN,YAAU;CACX,CAAC;AACF,MAAM+J,yBAAuB,GAA6B;IACxD,IAAI,EACF,iLAAiL;IACnL,UAAU,EAAE,MAAM;IAClB,SAAS,EAAE;QACT,GAAG,EAAE,EAAE;QACP,GAAG,EAAE,EAAE;QACP,GAAG,EAAE,EAAE;QACP,GAAG,EAAE,EAAE;QACP,OAAO,EAAE;YACP,UAAU,EAAEpK,UAAkB;SAC/B;KACF;IACD,eAAe,EAAE,CAACC,UAAqB,CAAC;IACxC,aAAa,EAAE;QACbC,KAAgB;QAChBM,iBAA4B;QAC5BE,cAAyB;QACzBkG,cAAyB;QACzBqD,UAAqB;KACtB;IACD,gBAAgB,EAAE,CAAC9J,MAAiB,CAAC;gBACrCE,YAAU;CACX,CAAC;AACF,MAAM2F,yBAAuB,GAA6B;IACxD,IAAI,EACF,iLAAiL;IACnL,UAAU,EAAE,MAAM;IAClB,SAAS,EAAE;QACT,GAAG,EAAE,EAAE;QACP,GAAG,EAAE,EAAE;QACP,GAAG,EAAE,EAAE;QACP,GAAG,EAAE,EAAE;QACP,OAAO,EAAE;YACP,UAAU,EAAEhG,UAAkB;SAC/B;KACF;IACD,eAAe,EAAE,CAACC,UAAqB,CAAC;IACxC,aAAa,EAAE;QACbC,KAAgB;QAChBM,iBAA4B;QAC5BE,cAAyB;QACzBkG,cAAyB;QACzBqD,UAAqB;KACtB;IACD,gBAAgB,EAAE,CAAC9J,MAAiB,CAAC;gBACrCE,YAAU;CACX,CAAC;AACF,MAAMa,qBAAmB,GAA6B;IACpD,IAAI,EACF,sKAAsK;IACxK,UAAU,EAAE,KAAK;IACjB,SAAS,EAAE;QACT,GAAG,EAAE;YACH,UAAU,EAAEwJ,wBAAgC;SAC7C;QACD,GAAG,EAAE;YACH,UAAU,EAAEA,wBAAgC;SAC7C;QACD,GAAG,EAAE;YACH,UAAU,EAAEA,wBAAgC;SAC7C;QACD,GAAG,EAAE;YACH,UAAU,EAAEA,wBAAgC;SAC7C;QACD,OAAO,EAAE;YACP,UAAU,EAAE1K,UAAkB;SAC/B;KACF;IACD,WAAW,EAAE2K,YAAuB;IACpC,eAAe,EAAE,CAAC1K,UAAqB,CAAC;IACxC,aAAa,EAAE;QACbC,KAAgB;QAChBM,iBAA4B;QAC5BE,cAAyB;QACzBkG,cAAyB;QACzBqD,UAAqB;KACtB;IACD,gBAAgB,EAAE,CAAC9J,MAAiB,EAAEQ,WAAsB,CAAC;IAC7D,SAAS,EAAE,MAAM;gBACjBN,YAAU;CACX,CAAC;AACF,MAAMc,qBAAmB,GAA6B;IACpD,IAAI,EACF,sKAAsK;IACxK,UAAU,EAAE,QAAQ;IACpB,SAAS,EAAE;QACT,GAAG,EAAE,EAAE;QACP,GAAG,EAAE,EAAE;QACP,GAAG,EAAE,EAAE;QACP,GAAG,EAAE,EAAE;QACP,OAAO,EAAE;YACP,UAAU,EAAEnB,UAAkB;SAC/B;KACF;IACD,eAAe,EAAE,CAACC,UAAqB,EAAEgF,aAAwB,CAAC;IAClE,aAAa,EAAE;QACb/E,KAAgB;QAChBM,iBAA4B;QAC5BE,cAAyB;QACzBkG,cAAyB;QACzBqD,UAAqB;KACtB;IACD,gBAAgB,EAAE,CAAC9J,MAAiB,CAAC;gBACrCE,YAAU;CACX,CAAC;AACF,MAAMe,kBAAgB,GAA6B;IACjD,IAAI,EACF,sKAAsK;IACxK,UAAU,EAAE,KAAK;IACjB,SAAS,EAAE;QACT,GAAG,EAAE;YACH,UAAU,EAAEsJ,wBAAgC;SAC7C;QACD,OAAO,EAAE;YACP,UAAU,EAAE1K,UAAkB;SAC/B;KACF;IACD,eAAe,EAAE,CAACC,UAAqB,EAAEkC,OAAkB,CAAC;IAC5D,aAAa,EAAE;QACbjC,KAAgB;QAChBM,iBAA4B;QAC5BE,cAAyB;QACzBkG,cAAyB;QACzBqD,UAAqB;KACtB;IACD,gBAAgB,EAAE,CAAC9J,MAAiB,CAAC;gBACrCE,YAAU;CACX,CAAC;AACF,MAAMgK,8BAA4B,GAA6B;IAC7D,IAAI,EACF,mLAAmL;IACrL,UAAU,EAAE,KAAK;IACjB,SAAS,EAAE;QACT,GAAG,EAAE;YACH,UAAU,EAAEO,oCAA4C;SACzD;QACD,OAAO,EAAE;YACP,UAAU,EAAE5K,UAAkB;SAC/B;KACF;IACD,eAAe,EAAE,CAACC,UAAqB,CAAC;IACxC,aAAa,EAAE;QACbC,KAAgB;QAChBM,iBAA4B;QAC5BE,cAAyB;QACzBkG,cAAyB;QACzBqD,UAAqB;KACtB;IACD,gBAAgB,EAAE,CAAC9J,MAAiB,CAAC;gBACrCE,YAAU;CACX,CAAC;AACF,MAAMD,mBAAiB,GAA6B;IAClD,IAAI,EACF,qKAAqK;IACvK,UAAU,EAAE,KAAK;IACjB,SAAS,EAAE;QACT,GAAG,EAAE;YACH,UAAU,EAAEyK,kCAA0C;SACvD;QACD,OAAO,EAAE;YACP,UAAU,EAAE7K,UAAkB;SAC/B;KACF;IACD,eAAe,EAAE;QACfC,UAAqB;QACrBa,MAAiB;QACjBwC,MAAiB;QACjBwH,MAAiB;KAClB;IACD,aAAa,EAAE;QACb5K,KAAgB;QAChBM,iBAA4B;QAC5BE,cAAyB;QACzBqK,0BAAqC;KACtC;IACD,gBAAgB,EAAE,CAAC5K,MAAiB,CAAC;gBACrCE,YAAU;CACX,CAAC;AACF,MAAM6F,uBAAqB,GAA6B;IACtD,IAAI,EACF,+KAA+K;IACjL,UAAU,EAAE,MAAM;IAClB,SAAS,EAAE;QACT,GAAG,EAAE,EAAE;QACP,GAAG,EAAE,EAAE;QACP,GAAG,EAAE,EAAE;QACP,GAAG,EAAE,EAAE;QACP,OAAO,EAAE;YACP,UAAU,EAAElG,UAAkB;SAC/B;KACF;IACD,eAAe,EAAE,CAACC,UAAqB,EAAEoF,YAAuB,CAAC;IACjE,aAAa,EAAE;QACbnF,KAAgB;QAChBM,iBAA4B;QAC5BE,cAAyB;QACzBkG,cAAyB;QACzBqD,UAAqB;KACtB;IACD,gBAAgB,EAAE,CAAC9J,MAAiB,CAAC;gBACrCE,YAAU;CACX,CAAC;AACF,MAAMqE,sBAAoB,GAA6B;IACrD,IAAI,EACF,8KAA8K;IAChL,UAAU,EAAE,MAAM;IAClB,SAAS,EAAE;QACT,GAAG,EAAE,EAAE;QACP,GAAG,EAAE,EAAE;QACP,GAAG,EAAE,EAAE;QACP,GAAG,EAAE,EAAE;QACP,OAAO,EAAE;YACP,UAAU,EAAE1E,UAAkB;SAC/B;KACF;IACD,eAAe,EAAE,CAACC,UAAqB,CAAC;IACxC,aAAa,EAAE;QACbC,KAAgB;QAChBM,iBAA4B;QAC5BE,cAAyB;QACzBkG,cAAyB;QACzBqD,UAAqB;KACtB;IACD,gBAAgB,EAAE,CAAC9J,MAAiB,CAAC;gBACrCE,YAAU;CACX,CAAC;AACF,MAAM8F,oBAAkB,GAA6B;IACnD,IAAI,EACF,4KAA4K;IAC9K,UAAU,EAAE,MAAM;IAClB,SAAS,EAAE;QACT,GAAG,EAAE,EAAE;QACP,GAAG,EAAE,EAAE;QACP,GAAG,EAAE,EAAE;QACP,GAAG,EAAE,EAAE;QACP,OAAO,EAAE;YACP,UAAU,EAAEnG,UAAkB;SAC/B;KACF;IACD,eAAe,EAAE,CAACC,UAAqB,CAAC;IACxC,aAAa,EAAE;QACbC,KAAgB;QAChBM,iBAA4B;QAC5BE,cAAyB;QACzBkG,cAAyB;QACzBqD,UAAqB;KACtB;IACD,gBAAgB,EAAE,CAAC9J,MAAiB,CAAC;gBACrCE,YAAU;CACX,CAAC;AACF,MAAM+F,uBAAqB,GAA6B;IACtD,IAAI,EACF,+KAA+K;IACjL,UAAU,EAAE,MAAM;IAClB,SAAS,EAAE;QACT,GAAG,EAAE,EAAE;QACP,GAAG,EAAE,EAAE;QACP,GAAG,EAAE,EAAE;QACP,GAAG,EAAE,EAAE;QACP,OAAO,EAAE;YACP,UAAU,EAAEpG,UAAkB;SAC/B;KACF;IACD,eAAe,EAAE,CAACC,UAAqB,CAAC;IACxC,aAAa,EAAE;QACbC,KAAgB;QAChBM,iBAA4B;QAC5BE,cAAyB;QACzBkG,cAAyB;QACzBqD,UAAqB;KACtB;IACD,gBAAgB,EAAE,CAAC9J,MAAiB,CAAC;gBACrCE,YAAU;CACX,CAAC;AACF,MAAMiK,0CAAwC,GAA6B;IACzE,IAAI,EACF,kMAAkM;IACpM,UAAU,EAAE,MAAM;IAClB,SAAS,EAAE;QACT,GAAG,EAAE;YACH,UAAU,EAAE/E,iCAAyC;SACtD;QACD,OAAO,EAAE;YACP,UAAU,EAAEvF,UAAkB;SAC/B;KACF;IACD,eAAe,EAAE;QACfC,UAAqB;QACrBuF,6BAAwC;KACzC;IACD,aAAa,EAAE;QACbtF,KAAgB;QAChBM,iBAA4B;QAC5BE,cAAyB;QACzBkG,cAAyB;QACzBqD,UAAqB;KACtB;IACD,gBAAgB,EAAE,CAAC9J,MAAiB,CAAC;gBACrCE,YAAU;CACX,CAAC;AACF,MAAMgG,iCAA+B,GAA6B;IAChE,IAAI,EACF,yLAAyL;IAC3L,UAAU,EAAE,MAAM;IAClB,SAAS,EAAE;QACT,GAAG,EAAE,EAAE;QACP,GAAG,EAAE,EAAE;QACP,GAAG,EAAE,EAAE;QACP,GAAG,EAAE,EAAE;QACP,OAAO,EAAE;YACP,UAAU,EAAErG,UAAkB;SAC/B;KACF;IACD,eAAe,EAAE,CAACC,UAAqB,CAAC;IACxC,aAAa,EAAE;QACbC,KAAgB;QAChBM,iBAA4B;QAC5BE,cAAyB;QACzBkG,cAAyB;QACzBqD,UAAqB;KACtB;IACD,gBAAgB,EAAE,CAAC9J,MAAiB,CAAC;gBACrCE,YAAU;CACX,CAAC;AACF,MAAMkK,+BAA6B,GAA6B;IAC9D,IAAI,EACF,uLAAuL;IACzL,UAAU,EAAE,MAAM;IAClB,SAAS,EAAE;QACT,GAAG,EAAE,EAAE;QACP,OAAO,EAAE;YACP,UAAU,EAAEvK,UAAkB;SAC/B;KACF;IACD,eAAe,EAAE,CAACC,UAAqB,CAAC;IACxC,aAAa,EAAE;QACbC,KAAgB;QAChBM,iBAA4B;QAC5BE,cAAyB;QACzBkG,cAAyB;QACzBqD,UAAqB;KACtB;IACD,gBAAgB,EAAE,CAAC9J,MAAiB,CAAC;gBACrCE,YAAU;CACX,CAAC;AACF,MAAMmK,yBAAuB,GAA6B;IACxD,IAAI,EACF,iLAAiL;IACnL,UAAU,EAAE,MAAM;IAClB,SAAS,EAAE;QACT,GAAG,EAAE;YACH,UAAU,EAAE5E,gBAAwB;SACrC;QACD,GAAG,EAAE;YACH,UAAU,EAAEA,gBAAwB;SACrC;QACD,GAAG,EAAE;YACH,UAAU,EAAEA,gBAAwB;SACrC;QACD,GAAG,EAAE;YACH,UAAU,EAAEA,gBAAwB;SACrC;KACF;IACD,WAAW,EAAEC,YAAuB;IACpC,eAAe,EAAE,CAAC5F,UAAqB,CAAC;IACxC,aAAa,EAAE;QACbC,KAAgB;QAChBM,iBAA4B;QAC5BE,cAAyB;QACzBkG,cAAyB;QACzBqD,UAAqB;KACtB;IACD,gBAAgB,EAAE,CAACtJ,WAAsB,EAAEmF,OAAkB,CAAC;IAC9D,SAAS,EAAE,MAAM;gBACjBzF,YAAU;CACX,CAAC;AACF,MAAMiE,uBAAqB,GAA6B;IACtD,IAAI,EAAE,YAAY;IAClB,UAAU,EAAE,KAAK;IACjB,SAAS,EAAE;QACT,GAAG,EAAE;YACH,UAAU,EAAEuG,kCAA0C;SACvD;QACD,OAAO,EAAE;YACP,UAAU,EAAE7K,UAAkB;SAC/B;KACF;IACD,eAAe,EAAE;QACfC,UAAqB;QACrBa,MAAiB;QACjBwC,MAAiB;QACjBwH,MAAiB;KAClB;IACD,aAAa,EAAE;QACb5K,KAAgB;QAChBM,iBAA4B;QAC5BE,cAAyB;QACzBM,QAAmB;QACnB+J,0BAAqC;KACtC;IACD,gBAAgB,EAAE,CAAC5K,MAAiB,CAAC;gBACrCE,YAAU;CACX,CAAC;;AC1mDF;;;;;;;AAwBA;AACA,MAAa,gBAAgB;;;;;IAO3B,YAAY,MAA+B;QACzC,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;KACtB;;;;;;;;IASK,gCAAgC,CACpC,QAAgB,EAChB,UAAsC,EACtC,OAA+D;;YAO/D,MAAM,mBAAmB,GAAG,CAC1B,IAAmC,EACnC,IAA8B;gBAE9B,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;aACrD,CAAA,CAAC;YACF,MAAM,aAAa,GAAG,CACpB,IAAmC,EACnC,IAA8B;;gBAE9B,IAAI,kBAAkB,GAEN,SAAS,CAAC;gBAC1B,MAAM,gBAAgB,GAAG,MAAA,IAAI,CAAC,OAAO,0CAAE,UAAU,CAAC;gBAClD,MAAM,QAAQ,GAAmC,CAC/C,WAA6C,EAC7C,YAAqB;oBAErB,kBAAkB,GAAG,WAAW,CAAC;oBACjC,gBAAgB,aAAhB,gBAAgB,uBAAhB,gBAAgB,CAAG,WAAW,EAAE,YAAY,CAAC,CAAC;iBAC/C,CAAC;gBACF,MAAM,WAAW,mCACZ,IAAI,KACP,OAAO,kCACF,IAAI,CAAC,OAAO,KACf,UAAU,EAAE,QAAQ,MAEvB,CAAC;gBACF,MAAM,YAAY,GAAG,MAAM,mBAAmB,CAAC,WAAW,EAAE,IAAI,CAAC,CAAC;gBAClE,OAAO;oBACL,YAAY;oBACZ,WAAW,EAAE;wBACX,UAAU,EAAE,kBAAmB,CAAC,MAAM;wBACtC,IAAI,EAAE,kBAAmB,CAAC,UAAU;wBACpC,OAAO,EAAE,kBAAmB,CAAC,OAAO,CAAC,MAAM,EAAE;qBAC9C;iBACF,CAAC;aACH,CAAA,CAAC;YAEF,MAAM,GAAG,GAAG,IAAI,OAAO,CACrB,aAAa,EACb,EAAE,QAAQ,EAAE,UAAU,EAAE,OAAO,EAAE,EACjC,wCAAwC,CACzC,CAAC;YACF,OAAO,IAAIgC,iBAAS,CAAC,GAAG,EAAE;gBACxB,UAAU,EAAE,OAAO,aAAP,OAAO,uBAAP,OAAO,CAAE,UAAU;gBAC/B,YAAY,EAAE,OAAO,aAAP,OAAO,uBAAP,OAAO,CAAE,kBAAkB;gBACzC,yBAAyB,EAAE,uBAAuB;aACnD,CAAC,CAAC;SACJ;KAAA;;;;;;;;IASK,uCAAuC,CAC3C,QAAgB,EAChB,UAAsC,EACtC,OAA+D;;YAE/D,MAAM,MAAM,GAAG,MAAM,IAAI,CAAC,gCAAgC,CACxD,QAAQ,EACR,UAAU,EACV,OAAO,CACR,CAAC;YACF,OAAO,MAAM,CAAC,aAAa,EAAE,CAAC;SAC/B;KAAA;;;;;;;IAQK,4BAA4B,CAChC,QAAgB,EAChB,UAAkC,EAClC,OAA2D;;YAO3D,MAAM,mBAAmB,GAAG,CAC1B,IAAmC,EACnC,IAA8B;gBAE9B,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;aACrD,CAAA,CAAC;YACF,MAAM,aAAa,GAAG,CACpB,IAAmC,EACnC,IAA8B;;gBAE9B,IAAI,kBAAkB,GAEN,SAAS,CAAC;gBAC1B,MAAM,gBAAgB,GAAG,MAAA,IAAI,CAAC,OAAO,0CAAE,UAAU,CAAC;gBAClD,MAAM,QAAQ,GAAmC,CAC/C,WAA6C,EAC7C,YAAqB;oBAErB,kBAAkB,GAAG,WAAW,CAAC;oBACjC,gBAAgB,aAAhB,gBAAgB,uBAAhB,gBAAgB,CAAG,WAAW,EAAE,YAAY,CAAC,CAAC;iBAC/C,CAAC;gBACF,MAAM,WAAW,mCACZ,IAAI,KACP,OAAO,kCACF,IAAI,CAAC,OAAO,KACf,UAAU,EAAE,QAAQ,MAEvB,CAAC;gBACF,MAAM,YAAY,GAAG,MAAM,mBAAmB,CAAC,WAAW,EAAE,IAAI,CAAC,CAAC;gBAClE,OAAO;oBACL,YAAY;oBACZ,WAAW,EAAE;wBACX,UAAU,EAAE,kBAAmB,CAAC,MAAM;wBACtC,IAAI,EAAE,kBAAmB,CAAC,UAAU;wBACpC,OAAO,EAAE,kBAAmB,CAAC,OAAO,CAAC,MAAM,EAAE;qBAC9C;iBACF,CAAC;aACH,CAAA,CAAC;YAEF,MAAM,GAAG,GAAG,IAAI,OAAO,CACrB,aAAa,EACb,EAAE,QAAQ,EAAE,UAAU,EAAE,OAAO,EAAE,EACjC,oCAAoC,CACrC,CAAC;YACF,OAAO,IAAIA,iBAAS,CAAC,GAAG,EAAE;gBACxB,UAAU,EAAE,OAAO,aAAP,OAAO,uBAAP,OAAO,CAAE,UAAU;gBAC/B,YAAY,EAAE,OAAO,aAAP,OAAO,uBAAP,OAAO,CAAE,kBAAkB;gBACzC,yBAAyB,EAAE,uBAAuB;aACnD,CAAC,CAAC;SACJ;KAAA;;;;;;;IAQK,mCAAmC,CACvC,QAAgB,EAChB,UAAkC,EAClC,OAA2D;;YAE3D,MAAM,MAAM,GAAG,MAAM,IAAI,CAAC,4BAA4B,CACpD,QAAQ,EACR,UAAU,EACV,OAAO,CACR,CAAC;YACF,OAAO,MAAM,CAAC,aAAa,EAAE,CAAC;SAC/B;KAAA;CACF;AACD;AACA,MAAMhC,YAAU,GAAGP,2BAA2B,CAAC,OAAO,cAAc,KAAK,CAAC,CAAC;AAE3E,MAAM,wCAAwC,GAA6B;IACzE,IAAI,EACF,kIAAkI;IACpI,UAAU,EAAE,MAAM;IAClB,SAAS,EAAE;QACT,GAAG,EAAE;YACH,UAAU,EAAEkL,2BAAmC;SAChD;QACD,GAAG,EAAE;YACH,UAAU,EAAEA,2BAAmC;SAChD;QACD,GAAG,EAAE;YACH,UAAU,EAAEA,2BAAmC;SAChD;QACD,GAAG,EAAE;YACH,UAAU,EAAEA,2BAAmC;SAChD;QACD,OAAO,EAAE;YACP,UAAU,EAAEhL,UAAkB;SAC/B;KACF;IACD,WAAW,EAAEiL,YAAuB;IACpC,eAAe,EAAE,CAAChL,UAAqB,CAAC;IACxC,aAAa,EAAE;QACbC,KAAgB;QAChBQ,cAAyB;QACzB8D,SAAoB;KACrB;IACD,gBAAgB,EAAE,CAACrE,MAAiB,EAAEQ,WAAsB,CAAC;IAC7D,SAAS,EAAE,MAAM;gBACjBN,YAAU;CACX,CAAC;AACF,MAAM,oCAAoC,GAA6B;IACrE,IAAI,EACF,8HAA8H;IAChI,UAAU,EAAE,MAAM;IAClB,SAAS,EAAE;QACT,GAAG,EAAE;YACH,UAAU,EAAE2K,2BAAmC;SAChD;QACD,GAAG,EAAE;YACH,UAAU,EAAEA,2BAAmC;SAChD;QACD,GAAG,EAAE;YACH,UAAU,EAAEA,2BAAmC;SAChD;QACD,GAAG,EAAE;YACH,UAAU,EAAEA,2BAAmC;SAChD;QACD,OAAO,EAAE;YACP,UAAU,EAAEhL,UAAkB;SAC/B;KACF;IACD,WAAW,EAAEkL,YAAuB;IACpC,eAAe,EAAE,CAACjL,UAAqB,CAAC;IACxC,aAAa,EAAE;QACbC,KAAgB;QAChBQ,cAAyB;QACzB8D,SAAoB;KACrB;IACD,gBAAgB,EAAE,CAACrE,MAAiB,EAAEQ,WAAsB,CAAC;IAC7D,SAAS,EAAE,MAAM;gBACjBN,YAAU;CACX,CAAC;;ACpRF;;;;;;;AAuCA;AACA;AACA,MAAa,6BAA6B;;;;;IAQxC,YAAY,MAA+B;QACzC,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;KACtB;;;;;;IAOM,IAAI,CACT,QAAgB,EAChB,OAAqD;QAErD,MAAM,IAAI,GAAG,IAAI,CAAC,aAAa,CAAC,QAAQ,EAAE,OAAO,CAAC,CAAC;QACnD,OAAO;YACL,IAAI;gBACF,OAAO,IAAI,CAAC,IAAI,EAAE,CAAC;aACpB;YACD,CAAC,MAAM,CAAC,aAAa,CAAC;gBACpB,OAAO,IAAI,CAAC;aACb;YACD,MAAM,EAAE;gBACN,OAAO,IAAI,CAAC,cAAc,CAAC,QAAQ,EAAE,OAAO,CAAC,CAAC;aAC/C;SACF,CAAC;KACH;IAEc,cAAc,CAC3B,QAAgB,EAChB,OAAqD;;YAErD,IAAI,MAAM,GAAG,oBAAM,IAAI,CAAC,KAAK,CAAC,QAAQ,EAAE,OAAO,CAAC,CAAA,CAAC;YACjD,0BAAM,MAAM,CAAC,KAAK,IAAI,EAAE,CAAA,CAAC;YACzB,IAAI,iBAAiB,GAAG,MAAM,CAAC,QAAQ,CAAC;YACxC,OAAO,iBAAiB,EAAE;gBACxB,MAAM,GAAG,oBAAM,IAAI,CAAC,SAAS,CAAC,QAAQ,EAAE,iBAAiB,EAAE,OAAO,CAAC,CAAA,CAAC;gBACpE,iBAAiB,GAAG,MAAM,CAAC,QAAQ,CAAC;gBACpC,0BAAM,MAAM,CAAC,KAAK,IAAI,EAAE,CAAA,CAAC;aAC1B;SACF;KAAA;IAEc,aAAa,CAC1B,QAAgB,EAChB,OAAqD;;;;gBAErD,KAAyB,IAAA,KAAAT,oBAAA,IAAI,CAAC,cAAc,CAAC,QAAQ,EAAE,OAAO,CAAC,CAAA,IAAA;oBAApD,MAAM,IAAI,WAAA,CAAA;oBACnB,oBAAA,OAAOC,uBAAAD,oBAAA,IAAI,CAAA,CAAA,CAAA,CAAC;iBACb;;;;;;;;;SACF;KAAA;;;;;;;IAQM,oBAAoB,CACzB,iBAAyB,EACzB,MAAc,EACd,OAAqE;QAErE,MAAM,IAAI,GAAG,IAAI,CAAC,6BAA6B,CAC7C,iBAAiB,EACjB,MAAM,EACN,OAAO,CACR,CAAC;QACF,OAAO;YACL,IAAI;gBACF,OAAO,IAAI,CAAC,IAAI,EAAE,CAAC;aACpB;YACD,CAAC,MAAM,CAAC,aAAa,CAAC;gBACpB,OAAO,IAAI,CAAC;aACb;YACD,MAAM,EAAE;gBACN,OAAO,IAAI,CAAC,8BAA8B,CACxC,iBAAiB,EACjB,MAAM,EACN,OAAO,CACR,CAAC;aACH;SACF,CAAC;KACH;IAEc,8BAA8B,CAC3C,iBAAyB,EACzB,MAAc,EACd,OAAqE;;YAErE,IAAI,MAAM,GAAG,oBAAM,IAAI,CAAC,qBAAqB,CAC3C,iBAAiB,EACjB,MAAM,EACN,OAAO,CACR,CAAA,CAAC;YACF,0BAAM,MAAM,CAAC,KAAK,IAAI,EAAE,CAAA,CAAC;YACzB,IAAI,iBAAiB,GAAG,MAAM,CAAC,QAAQ,CAAC;YACxC,OAAO,iBAAiB,EAAE;gBACxB,MAAM,GAAG,oBAAM,IAAI,CAAC,yBAAyB,CAC3C,iBAAiB,EACjB,MAAM,EACN,iBAAiB,EACjB,OAAO,CACR,CAAA,CAAC;gBACF,iBAAiB,GAAG,MAAM,CAAC,QAAQ,CAAC;gBACpC,0BAAM,MAAM,CAAC,KAAK,IAAI,EAAE,CAAA,CAAC;aAC1B;SACF;KAAA;IAEc,6BAA6B,CAC1C,iBAAyB,EACzB,MAAc,EACd,OAAqE;;;;gBAErE,KAAyB,IAAA,KAAAA,oBAAA,IAAI,CAAC,8BAA8B,CAC1D,iBAAiB,EACjB,MAAM,EACN,OAAO,CACR,CAAA,IAAA;oBAJU,MAAM,IAAI,WAAA,CAAA;oBAKnB,oBAAA,OAAOC,uBAAAD,oBAAA,IAAI,CAAA,CAAA,CAAA,CAAC;iBACb;;;;;;;;;SACF;KAAA;;;;;;IAOO,KAAK,CACX,QAAgB,EAChB,OAAqD;QAErD,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,QAAQ,EAAE,OAAO,EAAE,EACrBQ,mBAAiB,CAClB,CAAC;KACH;;;;;;;IAQD,GAAG,CACD,QAAgB,EAChB,SAAiB,EACjB,OAAoD;QAEpD,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,QAAQ,EAAE,SAAS,EAAE,OAAO,EAAE,EAChCgB,kBAAgB,CACjB,CAAC;KACH;;;;;;;;;IAUK,mBAAmB,CACvB,iBAAyB,EACzB,MAAc,EACd,cAAsB,EACtB,UAAoC,EACpC,OAA+D;;YAO/D,MAAM,mBAAmB,GAAG,CAC1B,IAAmC,EACnC,IAA8B;gBAE9B,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;aACrD,CAAA,CAAC;YACF,MAAM,aAAa,GAAG,CACpB,IAAmC,EACnC,IAA8B;;gBAE9B,IAAI,kBAAkB,GAEN,SAAS,CAAC;gBAC1B,MAAM,gBAAgB,GAAG,MAAA,IAAI,CAAC,OAAO,0CAAE,UAAU,CAAC;gBAClD,MAAM,QAAQ,GAAmC,CAC/C,WAA6C,EAC7C,YAAqB;oBAErB,kBAAkB,GAAG,WAAW,CAAC;oBACjC,gBAAgB,aAAhB,gBAAgB,uBAAhB,gBAAgB,CAAG,WAAW,EAAE,YAAY,CAAC,CAAC;iBAC/C,CAAC;gBACF,MAAM,WAAW,mCACZ,IAAI,KACP,OAAO,kCACF,IAAI,CAAC,OAAO,KACf,UAAU,EAAE,QAAQ,MAEvB,CAAC;gBACF,MAAM,YAAY,GAAG,MAAM,mBAAmB,CAAC,WAAW,EAAE,IAAI,CAAC,CAAC;gBAClE,OAAO;oBACL,YAAY;oBACZ,WAAW,EAAE;wBACX,UAAU,EAAE,kBAAmB,CAAC,MAAM;wBACtC,IAAI,EAAE,kBAAmB,CAAC,UAAU;wBACpC,OAAO,EAAE,kBAAmB,CAAC,OAAO,CAAC,MAAM,EAAE;qBAC9C;iBACF,CAAC;aACH,CAAA,CAAC;YAEF,MAAM,GAAG,GAAG,IAAI,OAAO,CACrB,aAAa,EACb,EAAE,iBAAiB,EAAE,MAAM,EAAE,cAAc,EAAE,UAAU,EAAE,OAAO,EAAE,EAClEH,6BAA2B,CAC5B,CAAC;YACF,OAAO,IAAIoB,iBAAS,CAAC,GAAG,EAAE;gBACxB,UAAU,EAAE,OAAO,aAAP,OAAO,uBAAP,OAAO,CAAE,UAAU;gBAC/B,YAAY,EAAE,OAAO,aAAP,OAAO,uBAAP,OAAO,CAAE,kBAAkB;aAC1C,CAAC,CAAC;SACJ;KAAA;;;;;;;;;IAUK,0BAA0B,CAC9B,iBAAyB,EACzB,MAAc,EACd,cAAsB,EACtB,UAAoC,EACpC,OAA+D;;YAE/D,MAAM,MAAM,GAAG,MAAM,IAAI,CAAC,mBAAmB,CAC3C,iBAAiB,EACjB,MAAM,EACN,cAAc,EACd,UAAU,EACV,OAAO,CACR,CAAC;YACF,OAAO,MAAM,CAAC,aAAa,EAAE,CAAC;SAC/B;KAAA;;;;;;;;;IAUK,WAAW,CACf,iBAAyB,EACzB,MAAc,EACd,cAAsB,EACtB,UAA0C,EAC1C,OAAuD;;YAOvD,MAAM,mBAAmB,GAAG,CAC1B,IAAmC,EACnC,IAA8B;gBAE9B,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;aACrD,CAAA,CAAC;YACF,MAAM,aAAa,GAAG,CACpB,IAAmC,EACnC,IAA8B;;gBAE9B,IAAI,kBAAkB,GAEN,SAAS,CAAC;gBAC1B,MAAM,gBAAgB,GAAG,MAAA,IAAI,CAAC,OAAO,0CAAE,UAAU,CAAC;gBAClD,MAAM,QAAQ,GAAmC,CAC/C,WAA6C,EAC7C,YAAqB;oBAErB,kBAAkB,GAAG,WAAW,CAAC;oBACjC,gBAAgB,aAAhB,gBAAgB,uBAAhB,gBAAgB,CAAG,WAAW,EAAE,YAAY,CAAC,CAAC;iBAC/C,CAAC;gBACF,MAAM,WAAW,mCACZ,IAAI,KACP,OAAO,kCACF,IAAI,CAAC,OAAO,KACf,UAAU,EAAE,QAAQ,MAEvB,CAAC;gBACF,MAAM,YAAY,GAAG,MAAM,mBAAmB,CAAC,WAAW,EAAE,IAAI,CAAC,CAAC;gBAClE,OAAO;oBACL,YAAY;oBACZ,WAAW,EAAE;wBACX,UAAU,EAAE,kBAAmB,CAAC,MAAM;wBACtC,IAAI,EAAE,kBAAmB,CAAC,UAAU;wBACpC,OAAO,EAAE,kBAAmB,CAAC,OAAO,CAAC,MAAM,EAAE;qBAC9C;iBACF,CAAC;aACH,CAAA,CAAC;YAEF,MAAM,GAAG,GAAG,IAAI,OAAO,CACrB,aAAa,EACb,EAAE,iBAAiB,EAAE,MAAM,EAAE,cAAc,EAAE,UAAU,EAAE,OAAO,EAAE,EAClEnB,qBAAmB,CACpB,CAAC;YACF,OAAO,IAAImB,iBAAS,CAAC,GAAG,EAAE;gBACxB,UAAU,EAAE,OAAO,aAAP,OAAO,uBAAP,OAAO,CAAE,UAAU;gBAC/B,YAAY,EAAE,OAAO,aAAP,OAAO,uBAAP,OAAO,CAAE,kBAAkB;aAC1C,CAAC,CAAC;SACJ;KAAA;;;;;;;;;IAUK,kBAAkB,CACtB,iBAAyB,EACzB,MAAc,EACd,cAAsB,EACtB,UAA0C,EAC1C,OAAuD;;YAEvD,MAAM,MAAM,GAAG,MAAM,IAAI,CAAC,WAAW,CACnC,iBAAiB,EACjB,MAAM,EACN,cAAc,EACd,UAAU,EACV,OAAO,CACR,CAAC;YACF,OAAO,MAAM,CAAC,aAAa,EAAE,CAAC;SAC/B;KAAA;;;;;;;;IASK,WAAW,CACf,iBAAyB,EACzB,MAAc,EACd,cAAsB,EACtB,OAAuD;;YAEvD,MAAM,mBAAmB,GAAG,CAC1B,IAAmC,EACnC,IAA8B;gBAE9B,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;aACrD,CAAA,CAAC;YACF,MAAM,aAAa,GAAG,CACpB,IAAmC,EACnC,IAA8B;;gBAE9B,IAAI,kBAAkB,GAEN,SAAS,CAAC;gBAC1B,MAAM,gBAAgB,GAAG,MAAA,IAAI,CAAC,OAAO,0CAAE,UAAU,CAAC;gBAClD,MAAM,QAAQ,GAAmC,CAC/C,WAA6C,EAC7C,YAAqB;oBAErB,kBAAkB,GAAG,WAAW,CAAC;oBACjC,gBAAgB,aAAhB,gBAAgB,uBAAhB,gBAAgB,CAAG,WAAW,EAAE,YAAY,CAAC,CAAC;iBAC/C,CAAC;gBACF,MAAM,WAAW,mCACZ,IAAI,KACP,OAAO,kCACF,IAAI,CAAC,OAAO,KACf,UAAU,EAAE,QAAQ,MAEvB,CAAC;gBACF,MAAM,YAAY,GAAG,MAAM,mBAAmB,CAAC,WAAW,EAAE,IAAI,CAAC,CAAC;gBAClE,OAAO;oBACL,YAAY;oBACZ,WAAW,EAAE;wBACX,UAAU,EAAE,kBAAmB,CAAC,MAAM;wBACtC,IAAI,EAAE,kBAAmB,CAAC,UAAU;wBACpC,OAAO,EAAE,kBAAmB,CAAC,OAAO,CAAC,MAAM,EAAE;qBAC9C;iBACF,CAAC;aACH,CAAA,CAAC;YAEF,MAAM,GAAG,GAAG,IAAI,OAAO,CACrB,aAAa,EACb,EAAE,iBAAiB,EAAE,MAAM,EAAE,cAAc,EAAE,OAAO,EAAE,EACtDlB,qBAAmB,CACpB,CAAC;YACF,OAAO,IAAIkB,iBAAS,CAAC,GAAG,EAAE;gBACxB,UAAU,EAAE,OAAO,aAAP,OAAO,uBAAP,OAAO,CAAE,UAAU;gBAC/B,YAAY,EAAE,OAAO,aAAP,OAAO,uBAAP,OAAO,CAAE,kBAAkB;aAC1C,CAAC,CAAC;SACJ;KAAA;;;;;;;;IASK,kBAAkB,CACtB,iBAAyB,EACzB,MAAc,EACd,cAAsB,EACtB,OAAuD;;YAEvD,MAAM,MAAM,GAAG,MAAM,IAAI,CAAC,WAAW,CACnC,iBAAiB,EACjB,MAAM,EACN,cAAc,EACd,OAAO,CACR,CAAC;YACF,OAAO,MAAM,CAAC,aAAa,EAAE,CAAC;SAC/B;KAAA;;;;;;;;IASD,mBAAmB,CACjB,iBAAyB,EACzB,MAAc,EACd,cAAsB,EACtB,OAAoE;QAEpE,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,iBAAiB,EAAE,MAAM,EAAE,cAAc,EAAE,OAAO,EAAE,EACtD,gCAAgC,CACjC,CAAC;KACH;;;;;;;IAQO,qBAAqB,CAC3B,iBAAyB,EACzB,MAAc,EACd,OAAqE;QAErE,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,iBAAiB,EAAE,MAAM,EAAE,OAAO,EAAE,EACtC,iCAAiC,CAClC,CAAC;KACH;;;;;;;IAQO,SAAS,CACf,QAAgB,EAChB,QAAgB,EAChB,OAAyD;QAEzD,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,QAAQ,EAAE,QAAQ,EAAE,OAAO,EAAE,EAC/BiC,uBAAqB,CACtB,CAAC;KACH;;;;;;;;IASO,yBAAyB,CAC/B,iBAAyB,EACzB,MAAc,EACd,QAAgB,EAChB,OAAyE;QAEzE,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,iBAAiB,EAAE,MAAM,EAAE,QAAQ,EAAE,OAAO,EAAE,EAChD,qCAAqC,CACtC,CAAC;KACH;CACF;AACD;AACA,MAAMjE,YAAU,GAAGP,2BAA2B,CAAC,OAAO,cAAc,KAAK,CAAC,CAAC;AAE3E,MAAMM,mBAAiB,GAA6B;IAClD,IAAI,EACF,8FAA8F;IAChG,UAAU,EAAE,KAAK;IACjB,SAAS,EAAE;QACT,GAAG,EAAE;YACH,UAAU,EAAE+K,oBAA4B;SACzC;KACF;IACD,eAAe,EAAE,CAAClL,UAAqB,CAAC;IACxC,aAAa,EAAE;QACbC,KAAgB;QAChBQ,cAAyB;QACzB8D,SAAoB;KACrB;IACD,gBAAgB,EAAE,CAACsB,OAAkB,CAAC;gBACtCzF,YAAU;CACX,CAAC;AACF,MAAMe,kBAAgB,GAA6B;IACjD,IAAI,EACF,0GAA0G;IAC5G,UAAU,EAAE,KAAK;IACjB,SAAS,EAAE;QACT,GAAG,EAAE;YACH,UAAU,EAAEgK,kBAA0B;SACvC;KACF;IACD,eAAe,EAAE,CAACnL,UAAqB,CAAC;IACxC,aAAa,EAAE;QACbC,KAAgB;QAChBQ,cAAyB;QACzB8D,SAAoB;QACpB6G,SAAoB;KACrB;IACD,gBAAgB,EAAE,CAACvF,OAAkB,CAAC;gBACtCzF,YAAU;CACX,CAAC;AACF,MAAMY,6BAA2B,GAA6B;IAC5D,IAAI,EACF,sJAAsJ;IACxJ,UAAU,EAAE,KAAK;IACjB,SAAS,EAAE;QACT,GAAG,EAAE;YACH,UAAU,EAAEqK,wBAAgC;SAC7C;QACD,GAAG,EAAE;YACH,UAAU,EAAEA,wBAAgC;SAC7C;QACD,GAAG,EAAE;YACH,UAAU,EAAEA,wBAAgC;SAC7C;QACD,GAAG,EAAE;YACH,UAAU,EAAEA,wBAAgC;SAC7C;QACD,OAAO,EAAE;YACP,UAAU,EAAEtL,UAAkB;SAC/B;KACF;IACD,WAAW,EAAEuL,UAAqB;IAClC,eAAe,EAAE,CAACtL,UAAqB,CAAC;IACxC,aAAa,EAAE;QACbC,KAAgB;QAChBM,iBAA4B;QAC5BE,cAAyB;QACzBiD,MAAiB;QACjB6H,cAAyB;KAC1B;IACD,gBAAgB,EAAE,CAAC7K,WAAsB,EAAEmF,OAAkB,CAAC;IAC9D,SAAS,EAAE,MAAM;gBACjBzF,YAAU;CACX,CAAC;AACF,MAAMa,qBAAmB,GAA6B;IACpD,IAAI,EACF,sJAAsJ;IACxJ,UAAU,EAAE,OAAO;IACnB,SAAS,EAAE;QACT,GAAG,EAAE;YACH,UAAU,EAAEoK,wBAAgC;SAC7C;QACD,GAAG,EAAE;YACH,UAAU,EAAEA,wBAAgC;SAC7C;QACD,GAAG,EAAE;YACH,UAAU,EAAEA,wBAAgC;SAC7C;QACD,GAAG,EAAE;YACH,UAAU,EAAEA,wBAAgC;SAC7C;QACD,OAAO,EAAE;YACP,UAAU,EAAEtL,UAAkB;SAC/B;KACF;IACD,WAAW,EAAEyL,WAAsB;IACnC,eAAe,EAAE,CAACxL,UAAqB,CAAC;IACxC,aAAa,EAAE;QACbC,KAAgB;QAChBM,iBAA4B;QAC5BE,cAAyB;QACzBiD,MAAiB;QACjB6H,cAAyB;KAC1B;IACD,gBAAgB,EAAE,CAAC7K,WAAsB,EAAEmF,OAAkB,CAAC;IAC9D,SAAS,EAAE,MAAM;gBACjBzF,YAAU;CACX,CAAC;AACF,MAAMc,qBAAmB,GAA6B;IACpD,IAAI,EACF,sJAAsJ;IACxJ,UAAU,EAAE,QAAQ;IACpB,SAAS,EAAE;QACT,GAAG,EAAE,EAAE;QACP,GAAG,EAAE,EAAE;QACP,GAAG,EAAE,EAAE;QACP,GAAG,EAAE,EAAE;QACP,OAAO,EAAE;YACP,UAAU,EAAEnB,UAAkB;SAC/B;KACF;IACD,eAAe,EAAE,CAACC,UAAqB,CAAC;IACxC,aAAa,EAAE;QACbC,KAAgB;QAChBM,iBAA4B;QAC5BE,cAAyB;QACzBiD,MAAiB;QACjB6H,cAAyB;KAC1B;IACD,gBAAgB,EAAE,CAAC1F,OAAkB,CAAC;gBACtCzF,YAAU;CACX,CAAC;AACF,MAAM,gCAAgC,GAA6B;IACjE,IAAI,EACF,sJAAsJ;IACxJ,UAAU,EAAE,KAAK;IACjB,SAAS,EAAE;QACT,GAAG,EAAE;YACH,UAAU,EAAEiL,wBAAgC;SAC7C;QACD,OAAO,EAAE;YACP,UAAU,EAAEtL,UAAkB;SAC/B;KACF;IACD,eAAe,EAAE,CAACC,UAAqB,EAAEa,MAAiB,CAAC;IAC3D,aAAa,EAAE;QACbZ,KAAgB;QAChBM,iBAA4B;QAC5BE,cAAyB;QACzBiD,MAAiB;QACjB6H,cAAyB;KAC1B;IACD,gBAAgB,EAAE,CAAC1F,OAAkB,CAAC;gBACtCzF,YAAU;CACX,CAAC;AACF,MAAM,iCAAiC,GAA6B;IAClE,IAAI,EACF,qIAAqI;IACvI,UAAU,EAAE,KAAK;IACjB,SAAS,EAAE;QACT,GAAG,EAAE;YACH,UAAU,EAAEqL,mCAA2C;SACxD;QACD,OAAO,EAAE;YACP,UAAU,EAAE1L,UAAkB;SAC/B;KACF;IACD,eAAe,EAAE,CAACC,UAAqB,EAAEa,MAAiB,CAAC;IAC3D,aAAa,EAAE;QACbZ,KAAgB;QAChBM,iBAA4B;QAC5BE,cAAyB;QACzBiD,MAAiB;KAClB;IACD,gBAAgB,EAAE,CAACmC,OAAkB,CAAC;gBACtCzF,YAAU;CACX,CAAC;AACF,MAAMiE,uBAAqB,GAA6B;IACtD,IAAI,EAAE,YAAY;IAClB,UAAU,EAAE,KAAK;IACjB,SAAS,EAAE;QACT,GAAG,EAAE;YACH,UAAU,EAAE6G,oBAA4B;SACzC;KACF;IACD,eAAe,EAAE,CAAClL,UAAqB,CAAC;IACxC,aAAa,EAAE;QACbC,KAAgB;QAChBQ,cAAyB;QACzBM,QAAmB;QACnBwD,SAAoB;KACrB;IACD,gBAAgB,EAAE,CAACsB,OAAkB,CAAC;gBACtCzF,YAAU;CACX,CAAC;AACF,MAAM,qCAAqC,GAA6B;IACtE,IAAI,EAAE,YAAY;IAClB,UAAU,EAAE,KAAK;IACjB,SAAS,EAAE;QACT,GAAG,EAAE;YACH,UAAU,EAAEqL,mCAA2C;SACxD;QACD,OAAO,EAAE;YACP,UAAU,EAAE1L,UAAkB;SAC/B;KACF;IACD,eAAe,EAAE,CAACC,UAAqB,EAAEa,MAAiB,CAAC;IAC3D,aAAa,EAAE;QACbZ,KAAgB;QAChBM,iBAA4B;QAC5BE,cAAyB;QACzBM,QAAmB;QACnB2C,MAAiB;KAClB;IACD,gBAAgB,EAAE,CAACmC,OAAkB,CAAC;gBACtCzF,YAAU;CACX,CAAC;;AC7vBF;;;;;;;AAgCA;AACA;AACA,MAAa,uCAAuC;;;;;IAQlD,YAAY,MAA+B;QACzC,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;KACtB;;;;;;;;IASM,IAAI,CACT,iBAAyB,EACzB,cAAsB,EACtB,UAAkB,EAClB,OAA+D;QAE/D,MAAM,IAAI,GAAG,IAAI,CAAC,aAAa,CAC7B,iBAAiB,EACjB,cAAc,EACd,UAAU,EACV,OAAO,CACR,CAAC;QACF,OAAO;YACL,IAAI;gBACF,OAAO,IAAI,CAAC,IAAI,EAAE,CAAC;aACpB;YACD,CAAC,MAAM,CAAC,aAAa,CAAC;gBACpB,OAAO,IAAI,CAAC;aACb;YACD,MAAM,EAAE;gBACN,OAAO,IAAI,CAAC,cAAc,CACxB,iBAAiB,EACjB,cAAc,EACd,UAAU,EACV,OAAO,CACR,CAAC;aACH;SACF,CAAC;KACH;IAEc,cAAc,CAC3B,iBAAyB,EACzB,cAAsB,EACtB,UAAkB,EAClB,OAA+D;;YAE/D,IAAI,MAAM,GAAG,oBAAM,IAAI,CAAC,KAAK,CAC3B,iBAAiB,EACjB,cAAc,EACd,UAAU,EACV,OAAO,CACR,CAAA,CAAC;YACF,0BAAM,MAAM,CAAC,KAAK,IAAI,EAAE,CAAA,CAAC;YACzB,IAAI,iBAAiB,GAAG,MAAM,CAAC,QAAQ,CAAC;YACxC,OAAO,iBAAiB,EAAE;gBACxB,MAAM,GAAG,oBAAM,IAAI,CAAC,SAAS,CAC3B,iBAAiB,EACjB,cAAc,EACd,UAAU,EACV,iBAAiB,EACjB,OAAO,CACR,CAAA,CAAC;gBACF,iBAAiB,GAAG,MAAM,CAAC,QAAQ,CAAC;gBACpC,0BAAM,MAAM,CAAC,KAAK,IAAI,EAAE,CAAA,CAAC;aAC1B;SACF;KAAA;IAEc,aAAa,CAC1B,iBAAyB,EACzB,cAAsB,EACtB,UAAkB,EAClB,OAA+D;;;;gBAE/D,KAAyB,IAAA,KAAAT,oBAAA,IAAI,CAAC,cAAc,CAC1C,iBAAiB,EACjB,cAAc,EACd,UAAU,EACV,OAAO,CACR,CAAA,IAAA;oBALU,MAAM,IAAI,WAAA,CAAA;oBAMnB,oBAAA,OAAOC,uBAAAD,oBAAA,IAAI,CAAA,CAAA,CAAA,CAAC;iBACb;;;;;;;;;SACF;KAAA;;;;;;;;;;IAWK,mBAAmB,CACvB,iBAAyB,EACzB,cAAsB,EACtB,UAAkB,EAClB,cAAsB,EACtB,UAAoC,EACpC,OAAyE;;YASzE,MAAM,mBAAmB,GAAG,CAC1B,IAAmC,EACnC,IAA8B;gBAE9B,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;aACrD,CAAA,CAAC;YACF,MAAM,aAAa,GAAG,CACpB,IAAmC,EACnC,IAA8B;;gBAE9B,IAAI,kBAAkB,GAEN,SAAS,CAAC;gBAC1B,MAAM,gBAAgB,GAAG,MAAA,IAAI,CAAC,OAAO,0CAAE,UAAU,CAAC;gBAClD,MAAM,QAAQ,GAAmC,CAC/C,WAA6C,EAC7C,YAAqB;oBAErB,kBAAkB,GAAG,WAAW,CAAC;oBACjC,gBAAgB,aAAhB,gBAAgB,uBAAhB,gBAAgB,CAAG,WAAW,EAAE,YAAY,CAAC,CAAC;iBAC/C,CAAC;gBACF,MAAM,WAAW,mCACZ,IAAI,KACP,OAAO,kCACF,IAAI,CAAC,OAAO,KACf,UAAU,EAAE,QAAQ,MAEvB,CAAC;gBACF,MAAM,YAAY,GAAG,MAAM,mBAAmB,CAAC,WAAW,EAAE,IAAI,CAAC,CAAC;gBAClE,OAAO;oBACL,YAAY;oBACZ,WAAW,EAAE;wBACX,UAAU,EAAE,kBAAmB,CAAC,MAAM;wBACtC,IAAI,EAAE,kBAAmB,CAAC,UAAU;wBACpC,OAAO,EAAE,kBAAmB,CAAC,OAAO,CAAC,MAAM,EAAE;qBAC9C;iBACF,CAAC;aACH,CAAA,CAAC;YAEF,MAAM,GAAG,GAAG,IAAI,OAAO,CACrB,aAAa,EACb;gBACE,iBAAiB;gBACjB,cAAc;gBACd,UAAU;gBACV,cAAc;gBACd,UAAU;gBACV,OAAO;aACR,EACDqB,6BAA2B,CAC5B,CAAC;YACF,OAAO,IAAIoB,iBAAS,CAAC,GAAG,EAAE;gBACxB,UAAU,EAAE,OAAO,aAAP,OAAO,uBAAP,OAAO,CAAE,UAAU;gBAC/B,YAAY,EAAE,OAAO,aAAP,OAAO,uBAAP,OAAO,CAAE,kBAAkB;aAC1C,CAAC,CAAC;SACJ;KAAA;;;;;;;;;;IAWK,0BAA0B,CAC9B,iBAAyB,EACzB,cAAsB,EACtB,UAAkB,EAClB,cAAsB,EACtB,UAAoC,EACpC,OAAyE;;YAEzE,MAAM,MAAM,GAAG,MAAM,IAAI,CAAC,mBAAmB,CAC3C,iBAAiB,EACjB,cAAc,EACd,UAAU,EACV,cAAc,EACd,UAAU,EACV,OAAO,CACR,CAAC;YACF,OAAO,MAAM,CAAC,aAAa,EAAE,CAAC;SAC/B;KAAA;;;;;;;;;;IAWK,WAAW,CACf,iBAAyB,EACzB,cAAsB,EACtB,UAAkB,EAClB,cAAsB,EACtB,UAA0C,EAC1C,OAAiE;;YAOjE,MAAM,mBAAmB,GAAG,CAC1B,IAAmC,EACnC,IAA8B;gBAE9B,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;aACrD,CAAA,CAAC;YACF,MAAM,aAAa,GAAG,CACpB,IAAmC,EACnC,IAA8B;;gBAE9B,IAAI,kBAAkB,GAEN,SAAS,CAAC;gBAC1B,MAAM,gBAAgB,GAAG,MAAA,IAAI,CAAC,OAAO,0CAAE,UAAU,CAAC;gBAClD,MAAM,QAAQ,GAAmC,CAC/C,WAA6C,EAC7C,YAAqB;oBAErB,kBAAkB,GAAG,WAAW,CAAC;oBACjC,gBAAgB,aAAhB,gBAAgB,uBAAhB,gBAAgB,CAAG,WAAW,EAAE,YAAY,CAAC,CAAC;iBAC/C,CAAC;gBACF,MAAM,WAAW,mCACZ,IAAI,KACP,OAAO,kCACF,IAAI,CAAC,OAAO,KACf,UAAU,EAAE,QAAQ,MAEvB,CAAC;gBACF,MAAM,YAAY,GAAG,MAAM,mBAAmB,CAAC,WAAW,EAAE,IAAI,CAAC,CAAC;gBAClE,OAAO;oBACL,YAAY;oBACZ,WAAW,EAAE;wBACX,UAAU,EAAE,kBAAmB,CAAC,MAAM;wBACtC,IAAI,EAAE,kBAAmB,CAAC,UAAU;wBACpC,OAAO,EAAE,kBAAmB,CAAC,OAAO,CAAC,MAAM,EAAE;qBAC9C;iBACF,CAAC;aACH,CAAA,CAAC;YAEF,MAAM,GAAG,GAAG,IAAI,OAAO,CACrB,aAAa,EACb;gBACE,iBAAiB;gBACjB,cAAc;gBACd,UAAU;gBACV,cAAc;gBACd,UAAU;gBACV,OAAO;aACR,EACDnB,qBAAmB,CACpB,CAAC;YACF,OAAO,IAAImB,iBAAS,CAAC,GAAG,EAAE;gBACxB,UAAU,EAAE,OAAO,aAAP,OAAO,uBAAP,OAAO,CAAE,UAAU;gBAC/B,YAAY,EAAE,OAAO,aAAP,OAAO,uBAAP,OAAO,CAAE,kBAAkB;aAC1C,CAAC,CAAC;SACJ;KAAA;;;;;;;;;;IAWK,kBAAkB,CACtB,iBAAyB,EACzB,cAAsB,EACtB,UAAkB,EAClB,cAAsB,EACtB,UAA0C,EAC1C,OAAiE;;YAEjE,MAAM,MAAM,GAAG,MAAM,IAAI,CAAC,WAAW,CACnC,iBAAiB,EACjB,cAAc,EACd,UAAU,EACV,cAAc,EACd,UAAU,EACV,OAAO,CACR,CAAC;YACF,OAAO,MAAM,CAAC,aAAa,EAAE,CAAC;SAC/B;KAAA;;;;;;;;;IAUK,WAAW,CACf,iBAAyB,EACzB,cAAsB,EACtB,UAAkB,EAClB,cAAsB,EACtB,OAAiE;;YAEjE,MAAM,mBAAmB,GAAG,CAC1B,IAAmC,EACnC,IAA8B;gBAE9B,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;aACrD,CAAA,CAAC;YACF,MAAM,aAAa,GAAG,CACpB,IAAmC,EACnC,IAA8B;;gBAE9B,IAAI,kBAAkB,GAEN,SAAS,CAAC;gBAC1B,MAAM,gBAAgB,GAAG,MAAA,IAAI,CAAC,OAAO,0CAAE,UAAU,CAAC;gBAClD,MAAM,QAAQ,GAAmC,CAC/C,WAA6C,EAC7C,YAAqB;oBAErB,kBAAkB,GAAG,WAAW,CAAC;oBACjC,gBAAgB,aAAhB,gBAAgB,uBAAhB,gBAAgB,CAAG,WAAW,EAAE,YAAY,CAAC,CAAC;iBAC/C,CAAC;gBACF,MAAM,WAAW,mCACZ,IAAI,KACP,OAAO,kCACF,IAAI,CAAC,OAAO,KACf,UAAU,EAAE,QAAQ,MAEvB,CAAC;gBACF,MAAM,YAAY,GAAG,MAAM,mBAAmB,CAAC,WAAW,EAAE,IAAI,CAAC,CAAC;gBAClE,OAAO;oBACL,YAAY;oBACZ,WAAW,EAAE;wBACX,UAAU,EAAE,kBAAmB,CAAC,MAAM;wBACtC,IAAI,EAAE,kBAAmB,CAAC,UAAU;wBACpC,OAAO,EAAE,kBAAmB,CAAC,OAAO,CAAC,MAAM,EAAE;qBAC9C;iBACF,CAAC;aACH,CAAA,CAAC;YAEF,MAAM,GAAG,GAAG,IAAI,OAAO,CACrB,aAAa,EACb;gBACE,iBAAiB;gBACjB,cAAc;gBACd,UAAU;gBACV,cAAc;gBACd,OAAO;aACR,EACDlB,qBAAmB,CACpB,CAAC;YACF,OAAO,IAAIkB,iBAAS,CAAC,GAAG,EAAE;gBACxB,UAAU,EAAE,OAAO,aAAP,OAAO,uBAAP,OAAO,CAAE,UAAU;gBAC/B,YAAY,EAAE,OAAO,aAAP,OAAO,uBAAP,OAAO,CAAE,kBAAkB;aAC1C,CAAC,CAAC;SACJ;KAAA;;;;;;;;;IAUK,kBAAkB,CACtB,iBAAyB,EACzB,cAAsB,EACtB,UAAkB,EAClB,cAAsB,EACtB,OAAiE;;YAEjE,MAAM,MAAM,GAAG,MAAM,IAAI,CAAC,WAAW,CACnC,iBAAiB,EACjB,cAAc,EACd,UAAU,EACV,cAAc,EACd,OAAO,CACR,CAAC;YACF,OAAO,MAAM,CAAC,aAAa,EAAE,CAAC;SAC/B;KAAA;;;;;;;;;IAUD,GAAG,CACD,iBAAyB,EACzB,cAAsB,EACtB,UAAkB,EAClB,cAAsB,EACtB,OAA8D;QAE9D,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC;YACE,iBAAiB;YACjB,cAAc;YACd,UAAU;YACV,cAAc;YACd,OAAO;SACR,EACDjB,kBAAgB,CACjB,CAAC;KACH;;;;;;;;IASO,KAAK,CACX,iBAAyB,EACzB,cAAsB,EACtB,UAAkB,EAClB,OAA+D;QAE/D,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,iBAAiB,EAAE,cAAc,EAAE,UAAU,EAAE,OAAO,EAAE,EAC1DhB,mBAAiB,CAClB,CAAC;KACH;;;;;;;;;IAUO,SAAS,CACf,iBAAyB,EACzB,cAAsB,EACtB,UAAkB,EAClB,QAAgB,EAChB,OAAmE;QAEnE,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,iBAAiB,EAAE,cAAc,EAAE,UAAU,EAAE,QAAQ,EAAE,OAAO,EAAE,EACpEkE,uBAAqB,CACtB,CAAC;KACH;CACF;AACD;AACA,MAAMjE,YAAU,GAAGP,2BAA2B,CAAC,OAAO,cAAc,KAAK,CAAC,CAAC;AAE3E,MAAMmB,6BAA2B,GAA6B;IAC5D,IAAI,EACF,mMAAmM;IACrM,UAAU,EAAE,KAAK;IACjB,SAAS,EAAE;QACT,GAAG,EAAE;YACH,UAAU,EAAEqK,wBAAgC;SAC7C;QACD,GAAG,EAAE;YACH,UAAU,EAAEA,wBAAgC;SAC7C;QACD,GAAG,EAAE;YACH,UAAU,EAAEA,wBAAgC;SAC7C;QACD,GAAG,EAAE;YACH,UAAU,EAAEA,wBAAgC;SAC7C;QACD,OAAO,EAAE;YACP,UAAU,EAAEtL,UAAkB;SAC/B;KACF;IACD,WAAW,EAAEuL,UAAqB;IAClC,eAAe,EAAE,CAACtL,UAAqB,CAAC;IACxC,aAAa,EAAE;QACbC,KAAgB;QAChBM,iBAA4B;QAC5BE,cAAyB;QACzBkG,cAAyB;QACzBqD,UAAqB;QACrBuB,cAAyB;KAC1B;IACD,gBAAgB,EAAE,CAAC7K,WAAsB,EAAEmF,OAAkB,CAAC;IAC9D,SAAS,EAAE,MAAM;gBACjBzF,YAAU;CACX,CAAC;AACF,MAAMa,qBAAmB,GAA6B;IACpD,IAAI,EACF,mMAAmM;IACrM,UAAU,EAAE,OAAO;IACnB,SAAS,EAAE;QACT,GAAG,EAAE;YACH,UAAU,EAAEoK,wBAAgC;SAC7C;QACD,GAAG,EAAE;YACH,UAAU,EAAEA,wBAAgC;SAC7C;QACD,GAAG,EAAE;YACH,UAAU,EAAEA,wBAAgC;SAC7C;QACD,GAAG,EAAE;YACH,UAAU,EAAEA,wBAAgC;SAC7C;QACD,OAAO,EAAE;YACP,UAAU,EAAEtL,UAAkB;SAC/B;KACF;IACD,WAAW,EAAEyL,WAAsB;IACnC,eAAe,EAAE,CAACxL,UAAqB,CAAC;IACxC,aAAa,EAAE;QACbC,KAAgB;QAChBM,iBAA4B;QAC5BE,cAAyB;QACzBkG,cAAyB;QACzBqD,UAAqB;QACrBuB,cAAyB;KAC1B;IACD,gBAAgB,EAAE,CAAC7K,WAAsB,EAAEmF,OAAkB,CAAC;IAC9D,SAAS,EAAE,MAAM;gBACjBzF,YAAU;CACX,CAAC;AACF,MAAMc,qBAAmB,GAA6B;IACpD,IAAI,EACF,mMAAmM;IACrM,UAAU,EAAE,QAAQ;IACpB,SAAS,EAAE;QACT,GAAG,EAAE,EAAE;QACP,GAAG,EAAE,EAAE;QACP,GAAG,EAAE,EAAE;QACP,GAAG,EAAE,EAAE;QACP,OAAO,EAAE;YACP,UAAU,EAAEnB,UAAkB;SAC/B;KACF;IACD,eAAe,EAAE,CAACC,UAAqB,CAAC;IACxC,aAAa,EAAE;QACbC,KAAgB;QAChBM,iBAA4B;QAC5BE,cAAyB;QACzBkG,cAAyB;QACzBqD,UAAqB;QACrBuB,cAAyB;KAC1B;IACD,gBAAgB,EAAE,CAAC1F,OAAkB,CAAC;gBACtCzF,YAAU;CACX,CAAC;AACF,MAAMe,kBAAgB,GAA6B;IACjD,IAAI,EACF,mMAAmM;IACrM,UAAU,EAAE,KAAK;IACjB,SAAS,EAAE;QACT,GAAG,EAAE;YACH,UAAU,EAAEkK,wBAAgC;SAC7C;QACD,OAAO,EAAE;YACP,UAAU,EAAEtL,UAAkB;SAC/B;KACF;IACD,eAAe,EAAE,CAACC,UAAqB,EAAEa,MAAiB,CAAC;IAC3D,aAAa,EAAE;QACbZ,KAAgB;QAChBM,iBAA4B;QAC5BE,cAAyB;QACzBkG,cAAyB;QACzBqD,UAAqB;QACrBuB,cAAyB;KAC1B;IACD,gBAAgB,EAAE,CAAC1F,OAAkB,CAAC;gBACtCzF,YAAU;CACX,CAAC;AACF,MAAMD,mBAAiB,GAA6B;IAClD,IAAI,EACF,kLAAkL;IACpL,UAAU,EAAE,KAAK;IACjB,SAAS,EAAE;QACT,GAAG,EAAE;YACH,UAAU,EAAEsL,mCAA2C;SACxD;QACD,OAAO,EAAE;YACP,UAAU,EAAE1L,UAAkB;SAC/B;KACF;IACD,eAAe,EAAE,CAACC,UAAqB,EAAEa,MAAiB,CAAC;IAC3D,aAAa,EAAE;QACbZ,KAAgB;QAChBM,iBAA4B;QAC5BE,cAAyB;QACzBkG,cAAyB;QACzBqD,UAAqB;KACtB;IACD,gBAAgB,EAAE,CAACnE,OAAkB,CAAC;gBACtCzF,YAAU;CACX,CAAC;AACF,MAAMiE,uBAAqB,GAA6B;IACtD,IAAI,EAAE,YAAY;IAClB,UAAU,EAAE,KAAK;IACjB,SAAS,EAAE;QACT,GAAG,EAAE;YACH,UAAU,EAAEoH,mCAA2C;SACxD;QACD,OAAO,EAAE;YACP,UAAU,EAAE1L,UAAkB;SAC/B;KACF;IACD,eAAe,EAAE,CAACC,UAAqB,EAAEa,MAAiB,CAAC;IAC3D,aAAa,EAAE;QACbZ,KAAgB;QAChBM,iBAA4B;QAC5BE,cAAyB;QACzBM,QAAmB;QACnB4F,cAAyB;QACzBqD,UAAqB;KACtB;IACD,gBAAgB,EAAE,CAACnE,OAAkB,CAAC;gBACtCzF,YAAU;CACX,CAAC;;AChqBF;;;;;;;AAsBA;AACA;AACA,MAAa,gBAAgB;;;;;IAO3B,YAAY,MAA+B;QACzC,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;KACtB;;;;;IAMM,IAAI,CACT,OAAwC;QAExC,MAAM,IAAI,GAAG,IAAI,CAAC,aAAa,CAAC,OAAO,CAAC,CAAC;QACzC,OAAO;YACL,IAAI;gBACF,OAAO,IAAI,CAAC,IAAI,EAAE,CAAC;aACpB;YACD,CAAC,MAAM,CAAC,aAAa,CAAC;gBACpB,OAAO,IAAI,CAAC;aACb;YACD,MAAM,EAAE;gBACN,OAAO,IAAI,CAAC,cAAc,CAAC,OAAO,CAAC,CAAC;aACrC;SACF,CAAC;KACH;IAEc,cAAc,CAC3B,OAAwC;;YAExC,IAAI,MAAM,GAAG,oBAAM,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,CAAA,CAAC;YACvC,0BAAM,MAAM,CAAC,KAAK,IAAI,EAAE,CAAA,CAAC;YACzB,IAAI,iBAAiB,GAAG,MAAM,CAAC,QAAQ,CAAC;YACxC,OAAO,iBAAiB,EAAE;gBACxB,MAAM,GAAG,oBAAM,IAAI,CAAC,SAAS,CAAC,iBAAiB,EAAE,OAAO,CAAC,CAAA,CAAC;gBAC1D,iBAAiB,GAAG,MAAM,CAAC,QAAQ,CAAC;gBACpC,0BAAM,MAAM,CAAC,KAAK,IAAI,EAAE,CAAA,CAAC;aAC1B;SACF;KAAA;IAEc,aAAa,CAC1B,OAAwC;;;;gBAExC,KAAyB,IAAA,KAAAT,oBAAA,IAAI,CAAC,cAAc,CAAC,OAAO,CAAC,CAAA,IAAA;oBAA1C,MAAM,IAAI,WAAA,CAAA;oBACnB,oBAAA,OAAOC,uBAAAD,oBAAA,IAAI,CAAA,CAAA,CAAA,CAAC;iBACb;;;;;;;;;SACF;KAAA;;;;;IAMO,KAAK,CACX,OAAwC;QAExC,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CAAC,EAAE,OAAO,EAAE,EAAEQ,mBAAiB,CAAC,CAAC;KACzE;;;;;;IAOO,SAAS,CACf,QAAgB,EAChB,OAA4C;QAE5C,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,QAAQ,EAAE,OAAO,EAAE,EACrBkE,uBAAqB,CACtB,CAAC;KACH;CACF;AACD;AACA,MAAMjE,YAAU,GAAGP,2BAA2B,CAAC,OAAO,cAAc,KAAK,CAAC,CAAC;AAE3E,MAAMM,mBAAiB,GAA6B;IAClD,IAAI,EAAE,kEAAkE;IACxE,UAAU,EAAE,KAAK;IACjB,SAAS,EAAE;QACT,GAAG,EAAE;YACH,UAAU,EAAEuL,kBAA0B;SACvC;KACF;IACD,eAAe,EAAE;QACfrI,MAAiB;QACjBsI,WAAsB;QACtBC,wBAAmC;KACpC;IACD,aAAa,EAAE,CAAC3L,KAAgB,EAAEQ,cAAyB,CAAC;IAC5D,gBAAgB,EAAE,CAACP,MAAiB,CAAC;gBACrCE,YAAU;CACX,CAAC;AACF,MAAMiE,uBAAqB,GAA6B;IACtD,IAAI,EAAE,YAAY;IAClB,UAAU,EAAE,KAAK;IACjB,SAAS,EAAE;QACT,GAAG,EAAE;YACH,UAAU,EAAEqH,kBAA0B;SACvC;KACF;IACD,eAAe,EAAE;QACfrI,MAAiB;QACjBsI,WAAsB;QACtBC,wBAAmC;KACpC;IACD,aAAa,EAAE;QACb3L,KAAgB;QAChBQ,cAAyB;QACzBM,QAAmB;KACpB;IACD,gBAAgB,EAAE,CAACb,MAAiB,CAAC;gBACrCE,YAAU;CACX,CAAC;;AC9IF;;;;;;;AAwCA;AACA;AACA,MAAa,SAAS;;;;;IAOpB,YAAY,MAA+B;QACzC,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;KACtB;;;;;;IAOM,mBAAmB,CACxB,iBAAyB,EACzB,OAAgD;QAEhD,MAAM,IAAI,GAAG,IAAI,CAAC,4BAA4B,CAAC,iBAAiB,EAAE,OAAO,CAAC,CAAC;QAC3E,OAAO;YACL,IAAI;gBACF,OAAO,IAAI,CAAC,IAAI,EAAE,CAAC;aACpB;YACD,CAAC,MAAM,CAAC,aAAa,CAAC;gBACpB,OAAO,IAAI,CAAC;aACb;YACD,MAAM,EAAE;gBACN,OAAO,IAAI,CAAC,6BAA6B,CAAC,iBAAiB,EAAE,OAAO,CAAC,CAAC;aACvE;SACF,CAAC;KACH;IAEc,6BAA6B,CAC1C,iBAAyB,EACzB,OAAgD;;YAEhD,IAAI,MAAM,GAAG,oBAAM,IAAI,CAAC,oBAAoB,CAAC,iBAAiB,EAAE,OAAO,CAAC,CAAA,CAAC;YACzE,0BAAM,MAAM,CAAC,KAAK,IAAI,EAAE,CAAA,CAAC;YACzB,IAAI,iBAAiB,GAAG,MAAM,CAAC,QAAQ,CAAC;YACxC,OAAO,iBAAiB,EAAE;gBACxB,MAAM,GAAG,oBAAM,IAAI,CAAC,wBAAwB,CAC1C,iBAAiB,EACjB,iBAAiB,EACjB,OAAO,CACR,CAAA,CAAC;gBACF,iBAAiB,GAAG,MAAM,CAAC,QAAQ,CAAC;gBACpC,0BAAM,MAAM,CAAC,KAAK,IAAI,EAAE,CAAA,CAAC;aAC1B;SACF;KAAA;IAEc,4BAA4B,CACzC,iBAAyB,EACzB,OAAgD;;;;gBAEhD,KAAyB,IAAA,KAAAT,oBAAA,IAAI,CAAC,6BAA6B,CACzD,iBAAiB,EACjB,OAAO,CACR,CAAA,IAAA;oBAHU,MAAM,IAAI,WAAA,CAAA;oBAInB,oBAAA,OAAOC,uBAAAD,oBAAA,IAAI,CAAA,CAAA,CAAA,CAAC;iBACb;;;;;;;;;SACF;KAAA;;;;;IAMM,IAAI,CACT,OAAiC;QAEjC,MAAM,IAAI,GAAG,IAAI,CAAC,aAAa,CAAC,OAAO,CAAC,CAAC;QACzC,OAAO;YACL,IAAI;gBACF,OAAO,IAAI,CAAC,IAAI,EAAE,CAAC;aACpB;YACD,CAAC,MAAM,CAAC,aAAa,CAAC;gBACpB,OAAO,IAAI,CAAC;aACb;YACD,MAAM,EAAE;gBACN,OAAO,IAAI,CAAC,cAAc,CAAC,OAAO,CAAC,CAAC;aACrC;SACF,CAAC;KACH;IAEc,cAAc,CAC3B,OAAiC;;YAEjC,IAAI,MAAM,GAAG,oBAAM,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,CAAA,CAAC;YACvC,0BAAM,MAAM,CAAC,KAAK,IAAI,EAAE,CAAA,CAAC;YACzB,IAAI,iBAAiB,GAAG,MAAM,CAAC,QAAQ,CAAC;YACxC,OAAO,iBAAiB,EAAE;gBACxB,MAAM,GAAG,oBAAM,IAAI,CAAC,SAAS,CAAC,iBAAiB,EAAE,OAAO,CAAC,CAAA,CAAC;gBAC1D,iBAAiB,GAAG,MAAM,CAAC,QAAQ,CAAC;gBACpC,0BAAM,MAAM,CAAC,KAAK,IAAI,EAAE,CAAA,CAAC;aAC1B;SACF;KAAA;IAEc,aAAa,CAC1B,OAAiC;;;;gBAEjC,KAAyB,IAAA,KAAAA,oBAAA,IAAI,CAAC,cAAc,CAAC,OAAO,CAAC,CAAA,IAAA;oBAA1C,MAAM,IAAI,WAAA,CAAA;oBACnB,oBAAA,OAAOC,uBAAAD,oBAAA,IAAI,CAAA,CAAA,CAAA,CAAC;iBACb;;;;;;;;;SACF;KAAA;;;;;;;;;;IAWK,mBAAmB,CACvB,iBAAyB,EACzB,QAAgB,EAChB,IAAU,EACV,OAA2C;;YAO3C,MAAM,mBAAmB,GAAG,CAC1B,IAAmC,EACnC,IAA8B;gBAE9B,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;aACrD,CAAA,CAAC;YACF,MAAM,aAAa,GAAG,CACpB,IAAmC,EACnC,IAA8B;;gBAE9B,IAAI,kBAAkB,GAEN,SAAS,CAAC;gBAC1B,MAAM,gBAAgB,GAAG,MAAA,IAAI,CAAC,OAAO,0CAAE,UAAU,CAAC;gBAClD,MAAM,QAAQ,GAAmC,CAC/C,WAA6C,EAC7C,YAAqB;oBAErB,kBAAkB,GAAG,WAAW,CAAC;oBACjC,gBAAgB,aAAhB,gBAAgB,uBAAhB,gBAAgB,CAAG,WAAW,EAAE,YAAY,CAAC,CAAC;iBAC/C,CAAC;gBACF,MAAM,WAAW,mCACZ,IAAI,KACP,OAAO,kCACF,IAAI,CAAC,OAAO,KACf,UAAU,EAAE,QAAQ,MAEvB,CAAC;gBACF,MAAM,YAAY,GAAG,MAAM,mBAAmB,CAAC,WAAW,EAAE,IAAI,CAAC,CAAC;gBAClE,OAAO;oBACL,YAAY;oBACZ,WAAW,EAAE;wBACX,UAAU,EAAE,kBAAmB,CAAC,MAAM;wBACtC,IAAI,EAAE,kBAAmB,CAAC,UAAU;wBACpC,OAAO,EAAE,kBAAmB,CAAC,OAAO,CAAC,MAAM,EAAE;qBAC9C;iBACF,CAAC;aACH,CAAA,CAAC;YAEF,MAAM,GAAG,GAAG,IAAI,OAAO,CACrB,aAAa,EACb,EAAE,iBAAiB,EAAE,QAAQ,EAAE,IAAI,EAAE,OAAO,EAAE,EAC9CqB,6BAA2B,CAC5B,CAAC;YACF,OAAO,IAAIoB,iBAAS,CAAC,GAAG,EAAE;gBACxB,UAAU,EAAE,OAAO,aAAP,OAAO,uBAAP,OAAO,CAAE,UAAU;gBAC/B,YAAY,EAAE,OAAO,aAAP,OAAO,uBAAP,OAAO,CAAE,kBAAkB;aAC1C,CAAC,CAAC;SACJ;KAAA;;;;;;;;;;IAWK,0BAA0B,CAC9B,iBAAyB,EACzB,QAAgB,EAChB,IAAU,EACV,OAA2C;;YAE3C,MAAM,MAAM,GAAG,MAAM,IAAI,CAAC,mBAAmB,CAC3C,iBAAiB,EACjB,QAAQ,EACR,IAAI,EACJ,OAAO,CACR,CAAC;YACF,OAAO,MAAM,CAAC,aAAa,EAAE,CAAC;SAC/B;KAAA;;;;;;;;;;IAWK,WAAW,CACf,iBAAyB,EACzB,QAAgB,EAChB,IAAgB,EAChB,OAAmC;;YAInC,MAAM,mBAAmB,GAAG,CAC1B,IAAmC,EACnC,IAA8B;gBAE9B,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;aACrD,CAAA,CAAC;YACF,MAAM,aAAa,GAAG,CACpB,IAAmC,EACnC,IAA8B;;gBAE9B,IAAI,kBAAkB,GAEN,SAAS,CAAC;gBAC1B,MAAM,gBAAgB,GAAG,MAAA,IAAI,CAAC,OAAO,0CAAE,UAAU,CAAC;gBAClD,MAAM,QAAQ,GAAmC,CAC/C,WAA6C,EAC7C,YAAqB;oBAErB,kBAAkB,GAAG,WAAW,CAAC;oBACjC,gBAAgB,aAAhB,gBAAgB,uBAAhB,gBAAgB,CAAG,WAAW,EAAE,YAAY,CAAC,CAAC;iBAC/C,CAAC;gBACF,MAAM,WAAW,mCACZ,IAAI,KACP,OAAO,kCACF,IAAI,CAAC,OAAO,KACf,UAAU,EAAE,QAAQ,MAEvB,CAAC;gBACF,MAAM,YAAY,GAAG,MAAM,mBAAmB,CAAC,WAAW,EAAE,IAAI,CAAC,CAAC;gBAClE,OAAO;oBACL,YAAY;oBACZ,WAAW,EAAE;wBACX,UAAU,EAAE,kBAAmB,CAAC,MAAM;wBACtC,IAAI,EAAE,kBAAmB,CAAC,UAAU;wBACpC,OAAO,EAAE,kBAAmB,CAAC,OAAO,CAAC,MAAM,EAAE;qBAC9C;iBACF,CAAC;aACH,CAAA,CAAC;YAEF,MAAM,GAAG,GAAG,IAAI,OAAO,CACrB,aAAa,EACb,EAAE,iBAAiB,EAAE,QAAQ,EAAE,IAAI,EAAE,OAAO,EAAE,EAC9CnB,qBAAmB,CACpB,CAAC;YACF,OAAO,IAAImB,iBAAS,CAAC,GAAG,EAAE;gBACxB,UAAU,EAAE,OAAO,aAAP,OAAO,uBAAP,OAAO,CAAE,UAAU;gBAC/B,YAAY,EAAE,OAAO,aAAP,OAAO,uBAAP,OAAO,CAAE,kBAAkB;aAC1C,CAAC,CAAC;SACJ;KAAA;;;;;;;;;;IAWK,kBAAkB,CACtB,iBAAyB,EACzB,QAAgB,EAChB,IAAgB,EAChB,OAAmC;;YAEnC,MAAM,MAAM,GAAG,MAAM,IAAI,CAAC,WAAW,CACnC,iBAAiB,EACjB,QAAQ,EACR,IAAI,EACJ,OAAO,CACR,CAAC;YACF,OAAO,MAAM,CAAC,aAAa,EAAE,CAAC;SAC/B;KAAA;;;;;;;;;IAUD,GAAG,CACD,iBAAyB,EACzB,QAAgB,EAChB,OAAgC;QAEhC,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,iBAAiB,EAAE,QAAQ,EAAE,OAAO,EAAE,EACxCjB,kBAAgB,CACjB,CAAC;KACH;;;;;;;;;IAUK,WAAW,CACf,iBAAyB,EACzB,QAAgB,EAChB,OAAmC;;YAEnC,MAAM,mBAAmB,GAAG,CAC1B,IAAmC,EACnC,IAA8B;gBAE9B,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;aACrD,CAAA,CAAC;YACF,MAAM,aAAa,GAAG,CACpB,IAAmC,EACnC,IAA8B;;gBAE9B,IAAI,kBAAkB,GAEN,SAAS,CAAC;gBAC1B,MAAM,gBAAgB,GAAG,MAAA,IAAI,CAAC,OAAO,0CAAE,UAAU,CAAC;gBAClD,MAAM,QAAQ,GAAmC,CAC/C,WAA6C,EAC7C,YAAqB;oBAErB,kBAAkB,GAAG,WAAW,CAAC;oBACjC,gBAAgB,aAAhB,gBAAgB,uBAAhB,gBAAgB,CAAG,WAAW,EAAE,YAAY,CAAC,CAAC;iBAC/C,CAAC;gBACF,MAAM,WAAW,mCACZ,IAAI,KACP,OAAO,kCACF,IAAI,CAAC,OAAO,KACf,UAAU,EAAE,QAAQ,MAEvB,CAAC;gBACF,MAAM,YAAY,GAAG,MAAM,mBAAmB,CAAC,WAAW,EAAE,IAAI,CAAC,CAAC;gBAClE,OAAO;oBACL,YAAY;oBACZ,WAAW,EAAE;wBACX,UAAU,EAAE,kBAAmB,CAAC,MAAM;wBACtC,IAAI,EAAE,kBAAmB,CAAC,UAAU;wBACpC,OAAO,EAAE,kBAAmB,CAAC,OAAO,CAAC,MAAM,EAAE;qBAC9C;iBACF,CAAC;aACH,CAAA,CAAC;YAEF,MAAM,GAAG,GAAG,IAAI,OAAO,CACrB,aAAa,EACb,EAAE,iBAAiB,EAAE,QAAQ,EAAE,OAAO,EAAE,EACxCD,qBAAmB,CACpB,CAAC;YACF,OAAO,IAAIkB,iBAAS,CAAC,GAAG,EAAE;gBACxB,UAAU,EAAE,OAAO,aAAP,OAAO,uBAAP,OAAO,CAAE,UAAU;gBAC/B,YAAY,EAAE,OAAO,aAAP,OAAO,uBAAP,OAAO,CAAE,kBAAkB;aAC1C,CAAC,CAAC;SACJ;KAAA;;;;;;;;;IAUK,kBAAkB,CACtB,iBAAyB,EACzB,QAAgB,EAChB,OAAmC;;YAEnC,MAAM,MAAM,GAAG,MAAM,IAAI,CAAC,WAAW,CAAC,iBAAiB,EAAE,QAAQ,EAAE,OAAO,CAAC,CAAC;YAC5E,OAAO,MAAM,CAAC,aAAa,EAAE,CAAC;SAC/B;KAAA;;;;;;IAOO,oBAAoB,CAC1B,iBAAyB,EACzB,OAAgD;QAEhD,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,iBAAiB,EAAE,OAAO,EAAE,EAC9BR,kCAAgC,CACjC,CAAC;KACH;;;;;IAMO,KAAK,CAAC,OAAiC;QAC7C,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CAAC,EAAE,OAAO,EAAE,EAAEzB,mBAAiB,CAAC,CAAC;KACzE;;;;;;;;;;IAWK,gBAAgB,CACpB,iBAAyB,EACzB,QAAgB,EAChB,eAAgC,EAChC,OAAwC;;YAOxC,MAAM,mBAAmB,GAAG,CAC1B,IAAmC,EACnC,IAA8B;gBAE9B,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;aACrD,CAAA,CAAC;YACF,MAAM,aAAa,GAAG,CACpB,IAAmC,EACnC,IAA8B;;gBAE9B,IAAI,kBAAkB,GAEN,SAAS,CAAC;gBAC1B,MAAM,gBAAgB,GAAG,MAAA,IAAI,CAAC,OAAO,0CAAE,UAAU,CAAC;gBAClD,MAAM,QAAQ,GAAmC,CAC/C,WAA6C,EAC7C,YAAqB;oBAErB,kBAAkB,GAAG,WAAW,CAAC;oBACjC,gBAAgB,aAAhB,gBAAgB,uBAAhB,gBAAgB,CAAG,WAAW,EAAE,YAAY,CAAC,CAAC;iBAC/C,CAAC;gBACF,MAAM,WAAW,mCACZ,IAAI,KACP,OAAO,kCACF,IAAI,CAAC,OAAO,KACf,UAAU,EAAE,QAAQ,MAEvB,CAAC;gBACF,MAAM,YAAY,GAAG,MAAM,mBAAmB,CAAC,WAAW,EAAE,IAAI,CAAC,CAAC;gBAClE,OAAO;oBACL,YAAY;oBACZ,WAAW,EAAE;wBACX,UAAU,EAAE,kBAAmB,CAAC,MAAM;wBACtC,IAAI,EAAE,kBAAmB,CAAC,UAAU;wBACpC,OAAO,EAAE,kBAAmB,CAAC,OAAO,CAAC,MAAM,EAAE;qBAC9C;iBACF,CAAC;aACH,CAAA,CAAC;YAEF,MAAM,GAAG,GAAG,IAAI,OAAO,CACrB,aAAa,EACb,EAAE,iBAAiB,EAAE,QAAQ,EAAE,eAAe,EAAE,OAAO,EAAE,EACzD,wBAAwB,CACzB,CAAC;YACF,OAAO,IAAIiC,iBAAS,CAAC,GAAG,EAAE;gBACxB,UAAU,EAAE,OAAO,aAAP,OAAO,uBAAP,OAAO,CAAE,UAAU;gBAC/B,YAAY,EAAE,OAAO,aAAP,OAAO,uBAAP,OAAO,CAAE,kBAAkB;gBACzC,yBAAyB,EAAE,UAAU;aACtC,CAAC,CAAC;SACJ;KAAA;;;;;;;;;;IAWK,uBAAuB,CAC3B,iBAAyB,EACzB,QAAgB,EAChB,eAAgC,EAChC,OAAwC;;YAExC,MAAM,MAAM,GAAG,MAAM,IAAI,CAAC,gBAAgB,CACxC,iBAAiB,EACjB,QAAQ,EACR,eAAe,EACf,OAAO,CACR,CAAC;YACF,OAAO,MAAM,CAAC,aAAa,EAAE,CAAC;SAC/B;KAAA;;;;;;;;;IAUK,iBAAiB,CACrB,iBAAyB,EACzB,QAAgB,EAChB,OAAyC;;YAEzC,MAAM,mBAAmB,GAAG,CAC1B,IAAmC,EACnC,IAA8B;gBAE9B,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;aACrD,CAAA,CAAC;YACF,MAAM,aAAa,GAAG,CACpB,IAAmC,EACnC,IAA8B;;gBAE9B,IAAI,kBAAkB,GAEN,SAAS,CAAC;gBAC1B,MAAM,gBAAgB,GAAG,MAAA,IAAI,CAAC,OAAO,0CAAE,UAAU,CAAC;gBAClD,MAAM,QAAQ,GAAmC,CAC/C,WAA6C,EAC7C,YAAqB;oBAErB,kBAAkB,GAAG,WAAW,CAAC;oBACjC,gBAAgB,aAAhB,gBAAgB,uBAAhB,gBAAgB,CAAG,WAAW,EAAE,YAAY,CAAC,CAAC;iBAC/C,CAAC;gBACF,MAAM,WAAW,mCACZ,IAAI,KACP,OAAO,kCACF,IAAI,CAAC,OAAO,KACf,UAAU,EAAE,QAAQ,MAEvB,CAAC;gBACF,MAAM,YAAY,GAAG,MAAM,mBAAmB,CAAC,WAAW,EAAE,IAAI,CAAC,CAAC;gBAClE,OAAO;oBACL,YAAY;oBACZ,WAAW,EAAE;wBACX,UAAU,EAAE,kBAAmB,CAAC,MAAM;wBACtC,IAAI,EAAE,kBAAmB,CAAC,UAAU;wBACpC,OAAO,EAAE,kBAAmB,CAAC,OAAO,CAAC,MAAM,EAAE;qBAC9C;iBACF,CAAC;aACH,CAAA,CAAC;YAEF,MAAM,GAAG,GAAG,IAAI,OAAO,CACrB,aAAa,EACb,EAAE,iBAAiB,EAAE,QAAQ,EAAE,OAAO,EAAE,EACxC,yBAAyB,CAC1B,CAAC;YACF,OAAO,IAAIA,iBAAS,CAAC,GAAG,EAAE;gBACxB,UAAU,EAAE,OAAO,aAAP,OAAO,uBAAP,OAAO,CAAE,UAAU;gBAC/B,YAAY,EAAE,OAAO,aAAP,OAAO,uBAAP,OAAO,CAAE,kBAAkB;gBACzC,yBAAyB,EAAE,UAAU;aACtC,CAAC,CAAC;SACJ;KAAA;;;;;;;;;IAUK,wBAAwB,CAC5B,iBAAyB,EACzB,QAAgB,EAChB,OAAyC;;YAEzC,MAAM,MAAM,GAAG,MAAM,IAAI,CAAC,iBAAiB,CACzC,iBAAiB,EACjB,QAAQ,EACR,OAAO,CACR,CAAC;YACF,OAAO,MAAM,CAAC,aAAa,EAAE,CAAC;SAC/B;KAAA;;;;;;;IAQO,wBAAwB,CAC9B,iBAAyB,EACzB,QAAgB,EAChB,OAAoD;QAEpD,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,iBAAiB,EAAE,QAAQ,EAAE,OAAO,EAAE,EACxCP,sCAAoC,CACrC,CAAC;KACH;;;;;;IAOO,SAAS,CACf,QAAgB,EAChB,OAAqC;QAErC,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,QAAQ,EAAE,OAAO,EAAE,EACrBwC,uBAAqB,CACtB,CAAC;KACH;CACF;AACD;AACA,MAAMjE,YAAU,GAAGP,2BAA2B,CAAC,OAAO,cAAc,KAAK,CAAC,CAAC;AAE3E,MAAMmB,6BAA2B,GAA6B;IAC5D,IAAI,EACF,iHAAiH;IACnH,UAAU,EAAE,KAAK;IACjB,SAAS,EAAE;QACT,GAAG,EAAE;YACH,UAAU,EAAE6K,IAAY;SACzB;QACD,GAAG,EAAE;YACH,UAAU,EAAEA,IAAY;SACzB;QACD,GAAG,EAAE;YACH,UAAU,EAAEA,IAAY;SACzB;QACD,GAAG,EAAE;YACH,UAAU,EAAEA,IAAY;SACzB;KACF;IACD,WAAW,EAAEC,IAAe;IAC5B,eAAe,EAAE,CAACC,WAAsB,CAAC;IACzC,aAAa,EAAE;QACb9L,KAAgB;QAChBM,iBAA4B;QAC5BE,cAAyB;QACzBuL,QAAmB;KACpB;IACD,gBAAgB,EAAE,CAAC9L,MAAiB,EAAEQ,WAAsB,CAAC;IAC7D,SAAS,EAAE,MAAM;gBACjBN,YAAU;CACX,CAAC;AACF,MAAMa,qBAAmB,GAA6B;IACpD,IAAI,EACF,iHAAiH;IACnH,UAAU,EAAE,OAAO;IACnB,SAAS,EAAE;QACT,GAAG,EAAE;YACH,UAAU,EAAE4K,IAAY;SACzB;QACD,GAAG,EAAE;YACH,UAAU,EAAEA,IAAY;SACzB;QACD,GAAG,EAAE;YACH,UAAU,EAAEA,IAAY;SACzB;QACD,GAAG,EAAE;YACH,UAAU,EAAEA,IAAY;SACzB;KACF;IACD,WAAW,EAAEI,KAAgB;IAC7B,eAAe,EAAE,CAACF,WAAsB,CAAC;IACzC,aAAa,EAAE;QACb9L,KAAgB;QAChBM,iBAA4B;QAC5BE,cAAyB;QACzBuL,QAAmB;KACpB;IACD,gBAAgB,EAAE,CAAC9L,MAAiB,EAAEQ,WAAsB,CAAC;IAC7D,SAAS,EAAE,MAAM;gBACjBN,YAAU;CACX,CAAC;AACF,MAAMe,kBAAgB,GAA6B;IACjD,IAAI,EACF,iHAAiH;IACnH,UAAU,EAAE,KAAK;IACjB,SAAS,EAAE;QACT,GAAG,EAAE;YACH,UAAU,EAAE0K,IAAY;SACzB;KACF;IACD,eAAe,EAAE,CAACE,WAAsB,CAAC;IACzC,aAAa,EAAE;QACb9L,KAAgB;QAChBM,iBAA4B;QAC5BE,cAAyB;QACzBuL,QAAmB;KACpB;IACD,gBAAgB,EAAE,CAAC9L,MAAiB,CAAC;gBACrCE,YAAU;CACX,CAAC;AACF,MAAMc,qBAAmB,GAA6B;IACpD,IAAI,EACF,iHAAiH;IACnH,UAAU,EAAE,QAAQ;IACpB,SAAS,EAAE,EAAE,GAAG,EAAE,EAAE,EAAE,GAAG,EAAE,EAAE,EAAE,GAAG,EAAE,EAAE,EAAE,GAAG,EAAE,EAAE,EAAE;IACjD,eAAe,EAAE,CAAC6K,WAAsB,CAAC;IACzC,aAAa,EAAE;QACb9L,KAAgB;QAChBM,iBAA4B;QAC5BE,cAAyB;QACzBuL,QAAmB;KACpB;gBACD5L,YAAU;CACX,CAAC;AACF,MAAMwB,kCAAgC,GAA6B;IACjE,IAAI,EACF,sGAAsG;IACxG,UAAU,EAAE,KAAK;IACjB,SAAS,EAAE;QACT,GAAG,EAAE;YACH,UAAU,EAAEsK,QAAgB;SAC7B;KACF;IACD,eAAe,EAAE,CAACH,WAAsB,CAAC;IACzC,aAAa,EAAE;QACb9L,KAAgB;QAChBM,iBAA4B;QAC5BE,cAAyB;KAC1B;IACD,gBAAgB,EAAE,CAACP,MAAiB,CAAC;gBACrCE,YAAU;CACX,CAAC;AACF,MAAMD,mBAAiB,GAA6B;IAClD,IAAI,EAAE,mEAAmE;IACzE,UAAU,EAAE,KAAK;IACjB,SAAS,EAAE;QACT,GAAG,EAAE;YACH,UAAU,EAAE+L,QAAgB;SAC7B;KACF;IACD,eAAe,EAAE,CAACH,WAAsB,CAAC;IACzC,aAAa,EAAE,CAAC9L,KAAgB,EAAEQ,cAAyB,CAAC;IAC5D,gBAAgB,EAAE,CAACP,MAAiB,CAAC;gBACrCE,YAAU;CACX,CAAC;AACF,MAAM,wBAAwB,GAA6B;IACzD,IAAI,EACF,gIAAgI;IAClI,UAAU,EAAE,MAAM;IAClB,SAAS,EAAE;QACT,GAAG,EAAE;YACH,UAAU,EAAE+L,SAAiB;SAC9B;QACD,GAAG,EAAE;YACH,UAAU,EAAEA,SAAiB;SAC9B;QACD,GAAG,EAAE;YACH,UAAU,EAAEA,SAAiB;SAC9B;QACD,GAAG,EAAE;YACH,UAAU,EAAEA,SAAiB;SAC9B;KACF;IACD,WAAW,EAAEC,eAA0B;IACvC,eAAe,EAAE,CAACL,WAAsB,CAAC;IACzC,aAAa,EAAE;QACb9L,KAAgB;QAChBM,iBAA4B;QAC5BE,cAAyB;QACzBuL,QAAmB;KACpB;IACD,gBAAgB,EAAE,CAAC9L,MAAiB,EAAEQ,WAAsB,CAAC;IAC7D,SAAS,EAAE,MAAM;gBACjBN,YAAU;CACX,CAAC;AACF,MAAM,yBAAyB,GAA6B;IAC1D,IAAI,EACF,8HAA8H;IAChI,UAAU,EAAE,MAAM;IAClB,SAAS,EAAE,EAAE,GAAG,EAAE,EAAE,EAAE,GAAG,EAAE,EAAE,EAAE,GAAG,EAAE,EAAE,EAAE,GAAG,EAAE,EAAE,EAAE;IACjD,eAAe,EAAE,CAAC2L,WAAsB,CAAC;IACzC,aAAa,EAAE;QACb9L,KAAgB;QAChBM,iBAA4B;QAC5BE,cAAyB;QACzBuL,QAAmB;KACpB;gBACD5L,YAAU;CACX,CAAC;AACF,MAAMyB,sCAAoC,GAA6B;IACrE,IAAI,EAAE,YAAY;IAClB,UAAU,EAAE,KAAK;IACjB,SAAS,EAAE;QACT,GAAG,EAAE;YACH,UAAU,EAAEqK,QAAgB;SAC7B;KACF;IACD,eAAe,EAAE,CAACH,WAAsB,CAAC;IACzC,aAAa,EAAE;QACb9L,KAAgB;QAChBM,iBAA4B;QAC5BE,cAAyB;QACzBM,QAAmB;KACpB;IACD,gBAAgB,EAAE,CAACb,MAAiB,CAAC;gBACrCE,YAAU;CACX,CAAC;AACF,MAAMiE,uBAAqB,GAA6B;IACtD,IAAI,EAAE,YAAY;IAClB,UAAU,EAAE,KAAK;IACjB,SAAS,EAAE;QACT,GAAG,EAAE;YACH,UAAU,EAAE6H,QAAgB;SAC7B;KACF;IACD,eAAe,EAAE,CAACH,WAAsB,CAAC;IACzC,aAAa,EAAE;QACb9L,KAAgB;QAChBQ,cAAyB;QACzBM,QAAmB;KACpB;IACD,gBAAgB,EAAE,CAACb,MAAiB,CAAC;gBACrCE,YAAU;CACX,CAAC;;ACx2BF;;;;;;;AAwCA;AACA;AACA,MAAa,aAAa;;;;;IAOxB,YAAY,MAA+B;QACzC,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;KACtB;;;;;;IAOM,mBAAmB,CACxB,iBAAyB,EACzB,OAAoD;QAEpD,MAAM,IAAI,GAAG,IAAI,CAAC,4BAA4B,CAAC,iBAAiB,EAAE,OAAO,CAAC,CAAC;QAC3E,OAAO;YACL,IAAI;gBACF,OAAO,IAAI,CAAC,IAAI,EAAE,CAAC;aACpB;YACD,CAAC,MAAM,CAAC,aAAa,CAAC;gBACpB,OAAO,IAAI,CAAC;aACb;YACD,MAAM,EAAE;gBACN,OAAO,IAAI,CAAC,6BAA6B,CAAC,iBAAiB,EAAE,OAAO,CAAC,CAAC;aACvE;SACF,CAAC;KACH;IAEc,6BAA6B,CAC1C,iBAAyB,EACzB,OAAoD;;YAEpD,IAAI,MAAM,GAAG,oBAAM,IAAI,CAAC,oBAAoB,CAAC,iBAAiB,EAAE,OAAO,CAAC,CAAA,CAAC;YACzE,0BAAM,MAAM,CAAC,KAAK,IAAI,EAAE,CAAA,CAAC;YACzB,IAAI,iBAAiB,GAAG,MAAM,CAAC,QAAQ,CAAC;YACxC,OAAO,iBAAiB,EAAE;gBACxB,MAAM,GAAG,oBAAM,IAAI,CAAC,wBAAwB,CAC1C,iBAAiB,EACjB,iBAAiB,EACjB,OAAO,CACR,CAAA,CAAC;gBACF,iBAAiB,GAAG,MAAM,CAAC,QAAQ,CAAC;gBACpC,0BAAM,MAAM,CAAC,KAAK,IAAI,EAAE,CAAA,CAAC;aAC1B;SACF;KAAA;IAEc,4BAA4B,CACzC,iBAAyB,EACzB,OAAoD;;;;gBAEpD,KAAyB,IAAA,KAAAT,oBAAA,IAAI,CAAC,6BAA6B,CACzD,iBAAiB,EACjB,OAAO,CACR,CAAA,IAAA;oBAHU,MAAM,IAAI,WAAA,CAAA;oBAInB,oBAAA,OAAOC,uBAAAD,oBAAA,IAAI,CAAA,CAAA,CAAA,CAAC;iBACb;;;;;;;;;SACF;KAAA;;;;;IAMM,IAAI,CACT,OAAqC;QAErC,MAAM,IAAI,GAAG,IAAI,CAAC,aAAa,CAAC,OAAO,CAAC,CAAC;QACzC,OAAO;YACL,IAAI;gBACF,OAAO,IAAI,CAAC,IAAI,EAAE,CAAC;aACpB;YACD,CAAC,MAAM,CAAC,aAAa,CAAC;gBACpB,OAAO,IAAI,CAAC;aACb;YACD,MAAM,EAAE;gBACN,OAAO,IAAI,CAAC,cAAc,CAAC,OAAO,CAAC,CAAC;aACrC;SACF,CAAC;KACH;IAEc,cAAc,CAC3B,OAAqC;;YAErC,IAAI,MAAM,GAAG,oBAAM,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,CAAA,CAAC;YACvC,0BAAM,MAAM,CAAC,KAAK,IAAI,EAAE,CAAA,CAAC;YACzB,IAAI,iBAAiB,GAAG,MAAM,CAAC,QAAQ,CAAC;YACxC,OAAO,iBAAiB,EAAE;gBACxB,MAAM,GAAG,oBAAM,IAAI,CAAC,SAAS,CAAC,iBAAiB,EAAE,OAAO,CAAC,CAAA,CAAC;gBAC1D,iBAAiB,GAAG,MAAM,CAAC,QAAQ,CAAC;gBACpC,0BAAM,MAAM,CAAC,KAAK,IAAI,EAAE,CAAA,CAAC;aAC1B;SACF;KAAA;IAEc,aAAa,CAC1B,OAAqC;;;;gBAErC,KAAyB,IAAA,KAAAA,oBAAA,IAAI,CAAC,cAAc,CAAC,OAAO,CAAC,CAAA,IAAA;oBAA1C,MAAM,IAAI,WAAA,CAAA;oBACnB,oBAAA,OAAOC,uBAAAD,oBAAA,IAAI,CAAA,CAAA,CAAA,CAAC;iBACb;;;;;;;;;SACF;KAAA;;;;;;;;;;IAWK,mBAAmB,CACvB,iBAAyB,EACzB,YAAoB,EACpB,QAAkB,EAClB,OAA+C;;YAO/C,MAAM,mBAAmB,GAAG,CAC1B,IAAmC,EACnC,IAA8B;gBAE9B,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;aACrD,CAAA,CAAC;YACF,MAAM,aAAa,GAAG,CACpB,IAAmC,EACnC,IAA8B;;gBAE9B,IAAI,kBAAkB,GAEN,SAAS,CAAC;gBAC1B,MAAM,gBAAgB,GAAG,MAAA,IAAI,CAAC,OAAO,0CAAE,UAAU,CAAC;gBAClD,MAAM,QAAQ,GAAmC,CAC/C,WAA6C,EAC7C,YAAqB;oBAErB,kBAAkB,GAAG,WAAW,CAAC;oBACjC,gBAAgB,aAAhB,gBAAgB,uBAAhB,gBAAgB,CAAG,WAAW,EAAE,YAAY,CAAC,CAAC;iBAC/C,CAAC;gBACF,MAAM,WAAW,mCACZ,IAAI,KACP,OAAO,kCACF,IAAI,CAAC,OAAO,KACf,UAAU,EAAE,QAAQ,MAEvB,CAAC;gBACF,MAAM,YAAY,GAAG,MAAM,mBAAmB,CAAC,WAAW,EAAE,IAAI,CAAC,CAAC;gBAClE,OAAO;oBACL,YAAY;oBACZ,WAAW,EAAE;wBACX,UAAU,EAAE,kBAAmB,CAAC,MAAM;wBACtC,IAAI,EAAE,kBAAmB,CAAC,UAAU;wBACpC,OAAO,EAAE,kBAAmB,CAAC,OAAO,CAAC,MAAM,EAAE;qBAC9C;iBACF,CAAC;aACH,CAAA,CAAC;YAEF,MAAM,GAAG,GAAG,IAAI,OAAO,CACrB,aAAa,EACb,EAAE,iBAAiB,EAAE,YAAY,EAAE,QAAQ,EAAE,OAAO,EAAE,EACtDqB,6BAA2B,CAC5B,CAAC;YACF,OAAO,IAAIoB,iBAAS,CAAC,GAAG,EAAE;gBACxB,UAAU,EAAE,OAAO,aAAP,OAAO,uBAAP,OAAO,CAAE,UAAU;gBAC/B,YAAY,EAAE,OAAO,aAAP,OAAO,uBAAP,OAAO,CAAE,kBAAkB;aAC1C,CAAC,CAAC;SACJ;KAAA;;;;;;;;;;IAWK,0BAA0B,CAC9B,iBAAyB,EACzB,YAAoB,EACpB,QAAkB,EAClB,OAA+C;;YAE/C,MAAM,MAAM,GAAG,MAAM,IAAI,CAAC,mBAAmB,CAC3C,iBAAiB,EACjB,YAAY,EACZ,QAAQ,EACR,OAAO,CACR,CAAC;YACF,OAAO,MAAM,CAAC,aAAa,EAAE,CAAC;SAC/B;KAAA;;;;;;;;;;IAWK,WAAW,CACf,iBAAyB,EACzB,YAAoB,EACpB,QAAwB,EACxB,OAAuC;;YAOvC,MAAM,mBAAmB,GAAG,CAC1B,IAAmC,EACnC,IAA8B;gBAE9B,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;aACrD,CAAA,CAAC;YACF,MAAM,aAAa,GAAG,CACpB,IAAmC,EACnC,IAA8B;;gBAE9B,IAAI,kBAAkB,GAEN,SAAS,CAAC;gBAC1B,MAAM,gBAAgB,GAAG,MAAA,IAAI,CAAC,OAAO,0CAAE,UAAU,CAAC;gBAClD,MAAM,QAAQ,GAAmC,CAC/C,WAA6C,EAC7C,YAAqB;oBAErB,kBAAkB,GAAG,WAAW,CAAC;oBACjC,gBAAgB,aAAhB,gBAAgB,uBAAhB,gBAAgB,CAAG,WAAW,EAAE,YAAY,CAAC,CAAC;iBAC/C,CAAC;gBACF,MAAM,WAAW,mCACZ,IAAI,KACP,OAAO,kCACF,IAAI,CAAC,OAAO,KACf,UAAU,EAAE,QAAQ,MAEvB,CAAC;gBACF,MAAM,YAAY,GAAG,MAAM,mBAAmB,CAAC,WAAW,EAAE,IAAI,CAAC,CAAC;gBAClE,OAAO;oBACL,YAAY;oBACZ,WAAW,EAAE;wBACX,UAAU,EAAE,kBAAmB,CAAC,MAAM;wBACtC,IAAI,EAAE,kBAAmB,CAAC,UAAU;wBACpC,OAAO,EAAE,kBAAmB,CAAC,OAAO,CAAC,MAAM,EAAE;qBAC9C;iBACF,CAAC;aACH,CAAA,CAAC;YAEF,MAAM,GAAG,GAAG,IAAI,OAAO,CACrB,aAAa,EACb,EAAE,iBAAiB,EAAE,YAAY,EAAE,QAAQ,EAAE,OAAO,EAAE,EACtDnB,qBAAmB,CACpB,CAAC;YACF,OAAO,IAAImB,iBAAS,CAAC,GAAG,EAAE;gBACxB,UAAU,EAAE,OAAO,aAAP,OAAO,uBAAP,OAAO,CAAE,UAAU;gBAC/B,YAAY,EAAE,OAAO,aAAP,OAAO,uBAAP,OAAO,CAAE,kBAAkB;aAC1C,CAAC,CAAC;SACJ;KAAA;;;;;;;;;;IAWK,kBAAkB,CACtB,iBAAyB,EACzB,YAAoB,EACpB,QAAwB,EACxB,OAAuC;;YAEvC,MAAM,MAAM,GAAG,MAAM,IAAI,CAAC,WAAW,CACnC,iBAAiB,EACjB,YAAY,EACZ,QAAQ,EACR,OAAO,CACR,CAAC;YACF,OAAO,MAAM,CAAC,aAAa,EAAE,CAAC;SAC/B;KAAA;;;;;;;;;IAUD,GAAG,CACD,iBAAyB,EACzB,YAAoB,EACpB,OAAoC;QAEpC,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,iBAAiB,EAAE,YAAY,EAAE,OAAO,EAAE,EAC5CjB,kBAAgB,CACjB,CAAC;KACH;;;;;;;;;IAUK,WAAW,CACf,iBAAyB,EACzB,YAAoB,EACpB,OAAuC;;YAEvC,MAAM,mBAAmB,GAAG,CAC1B,IAAmC,EACnC,IAA8B;gBAE9B,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;aACrD,CAAA,CAAC;YACF,MAAM,aAAa,GAAG,CACpB,IAAmC,EACnC,IAA8B;;gBAE9B,IAAI,kBAAkB,GAEN,SAAS,CAAC;gBAC1B,MAAM,gBAAgB,GAAG,MAAA,IAAI,CAAC,OAAO,0CAAE,UAAU,CAAC;gBAClD,MAAM,QAAQ,GAAmC,CAC/C,WAA6C,EAC7C,YAAqB;oBAErB,kBAAkB,GAAG,WAAW,CAAC;oBACjC,gBAAgB,aAAhB,gBAAgB,uBAAhB,gBAAgB,CAAG,WAAW,EAAE,YAAY,CAAC,CAAC;iBAC/C,CAAC;gBACF,MAAM,WAAW,mCACZ,IAAI,KACP,OAAO,kCACF,IAAI,CAAC,OAAO,KACf,UAAU,EAAE,QAAQ,MAEvB,CAAC;gBACF,MAAM,YAAY,GAAG,MAAM,mBAAmB,CAAC,WAAW,EAAE,IAAI,CAAC,CAAC;gBAClE,OAAO;oBACL,YAAY;oBACZ,WAAW,EAAE;wBACX,UAAU,EAAE,kBAAmB,CAAC,MAAM;wBACtC,IAAI,EAAE,kBAAmB,CAAC,UAAU;wBACpC,OAAO,EAAE,kBAAmB,CAAC,OAAO,CAAC,MAAM,EAAE;qBAC9C;iBACF,CAAC;aACH,CAAA,CAAC;YAEF,MAAM,GAAG,GAAG,IAAI,OAAO,CACrB,aAAa,EACb,EAAE,iBAAiB,EAAE,YAAY,EAAE,OAAO,EAAE,EAC5CD,qBAAmB,CACpB,CAAC;YACF,OAAO,IAAIkB,iBAAS,CAAC,GAAG,EAAE;gBACxB,UAAU,EAAE,OAAO,aAAP,OAAO,uBAAP,OAAO,CAAE,UAAU;gBAC/B,YAAY,EAAE,OAAO,aAAP,OAAO,uBAAP,OAAO,CAAE,kBAAkB;aAC1C,CAAC,CAAC;SACJ;KAAA;;;;;;;;;IAUK,kBAAkB,CACtB,iBAAyB,EACzB,YAAoB,EACpB,OAAuC;;YAEvC,MAAM,MAAM,GAAG,MAAM,IAAI,CAAC,WAAW,CACnC,iBAAiB,EACjB,YAAY,EACZ,OAAO,CACR,CAAC;YACF,OAAO,MAAM,CAAC,aAAa,EAAE,CAAC;SAC/B;KAAA;;;;;;IAOO,oBAAoB,CAC1B,iBAAyB,EACzB,OAAoD;QAEpD,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,iBAAiB,EAAE,OAAO,EAAE,EAC9BR,kCAAgC,CACjC,CAAC;KACH;;;;;IAMO,KAAK,CACX,OAAqC;QAErC,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CAAC,EAAE,OAAO,EAAE,EAAEzB,mBAAiB,CAAC,CAAC;KACzE;;;;;;;;;;IAWK,gBAAgB,CACpB,iBAAyB,EACzB,YAAoB,EACpB,eAAgC,EAChC,OAA4C;;YAO5C,MAAM,mBAAmB,GAAG,CAC1B,IAAmC,EACnC,IAA8B;gBAE9B,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;aACrD,CAAA,CAAC;YACF,MAAM,aAAa,GAAG,CACpB,IAAmC,EACnC,IAA8B;;gBAE9B,IAAI,kBAAkB,GAEN,SAAS,CAAC;gBAC1B,MAAM,gBAAgB,GAAG,MAAA,IAAI,CAAC,OAAO,0CAAE,UAAU,CAAC;gBAClD,MAAM,QAAQ,GAAmC,CAC/C,WAA6C,EAC7C,YAAqB;oBAErB,kBAAkB,GAAG,WAAW,CAAC;oBACjC,gBAAgB,aAAhB,gBAAgB,uBAAhB,gBAAgB,CAAG,WAAW,EAAE,YAAY,CAAC,CAAC;iBAC/C,CAAC;gBACF,MAAM,WAAW,mCACZ,IAAI,KACP,OAAO,kCACF,IAAI,CAAC,OAAO,KACf,UAAU,EAAE,QAAQ,MAEvB,CAAC;gBACF,MAAM,YAAY,GAAG,MAAM,mBAAmB,CAAC,WAAW,EAAE,IAAI,CAAC,CAAC;gBAClE,OAAO;oBACL,YAAY;oBACZ,WAAW,EAAE;wBACX,UAAU,EAAE,kBAAmB,CAAC,MAAM;wBACtC,IAAI,EAAE,kBAAmB,CAAC,UAAU;wBACpC,OAAO,EAAE,kBAAmB,CAAC,OAAO,CAAC,MAAM,EAAE;qBAC9C;iBACF,CAAC;aACH,CAAA,CAAC;YAEF,MAAM,GAAG,GAAG,IAAI,OAAO,CACrB,aAAa,EACb,EAAE,iBAAiB,EAAE,YAAY,EAAE,eAAe,EAAE,OAAO,EAAE,EAC7DkM,0BAAwB,CACzB,CAAC;YACF,OAAO,IAAIjK,iBAAS,CAAC,GAAG,EAAE;gBACxB,UAAU,EAAE,OAAO,aAAP,OAAO,uBAAP,OAAO,CAAE,UAAU;gBAC/B,YAAY,EAAE,OAAO,aAAP,OAAO,uBAAP,OAAO,CAAE,kBAAkB;gBACzC,yBAAyB,EAAE,UAAU;aACtC,CAAC,CAAC;SACJ;KAAA;;;;;;;;;;IAWK,uBAAuB,CAC3B,iBAAyB,EACzB,YAAoB,EACpB,eAAgC,EAChC,OAA4C;;YAE5C,MAAM,MAAM,GAAG,MAAM,IAAI,CAAC,gBAAgB,CACxC,iBAAiB,EACjB,YAAY,EACZ,eAAe,EACf,OAAO,CACR,CAAC;YACF,OAAO,MAAM,CAAC,aAAa,EAAE,CAAC;SAC/B;KAAA;;;;;;;;;IAUK,iBAAiB,CACrB,iBAAyB,EACzB,YAAoB,EACpB,OAA6C;;YAE7C,MAAM,mBAAmB,GAAG,CAC1B,IAAmC,EACnC,IAA8B;gBAE9B,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;aACrD,CAAA,CAAC;YACF,MAAM,aAAa,GAAG,CACpB,IAAmC,EACnC,IAA8B;;gBAE9B,IAAI,kBAAkB,GAEN,SAAS,CAAC;gBAC1B,MAAM,gBAAgB,GAAG,MAAA,IAAI,CAAC,OAAO,0CAAE,UAAU,CAAC;gBAClD,MAAM,QAAQ,GAAmC,CAC/C,WAA6C,EAC7C,YAAqB;oBAErB,kBAAkB,GAAG,WAAW,CAAC;oBACjC,gBAAgB,aAAhB,gBAAgB,uBAAhB,gBAAgB,CAAG,WAAW,EAAE,YAAY,CAAC,CAAC;iBAC/C,CAAC;gBACF,MAAM,WAAW,mCACZ,IAAI,KACP,OAAO,kCACF,IAAI,CAAC,OAAO,KACf,UAAU,EAAE,QAAQ,MAEvB,CAAC;gBACF,MAAM,YAAY,GAAG,MAAM,mBAAmB,CAAC,WAAW,EAAE,IAAI,CAAC,CAAC;gBAClE,OAAO;oBACL,YAAY;oBACZ,WAAW,EAAE;wBACX,UAAU,EAAE,kBAAmB,CAAC,MAAM;wBACtC,IAAI,EAAE,kBAAmB,CAAC,UAAU;wBACpC,OAAO,EAAE,kBAAmB,CAAC,OAAO,CAAC,MAAM,EAAE;qBAC9C;iBACF,CAAC;aACH,CAAA,CAAC;YAEF,MAAM,GAAG,GAAG,IAAI,OAAO,CACrB,aAAa,EACb,EAAE,iBAAiB,EAAE,YAAY,EAAE,OAAO,EAAE,EAC5CkK,2BAAyB,CAC1B,CAAC;YACF,OAAO,IAAIlK,iBAAS,CAAC,GAAG,EAAE;gBACxB,UAAU,EAAE,OAAO,aAAP,OAAO,uBAAP,OAAO,CAAE,UAAU;gBAC/B,YAAY,EAAE,OAAO,aAAP,OAAO,uBAAP,OAAO,CAAE,kBAAkB;gBACzC,yBAAyB,EAAE,UAAU;aACtC,CAAC,CAAC;SACJ;KAAA;;;;;;;;;IAUK,wBAAwB,CAC5B,iBAAyB,EACzB,YAAoB,EACpB,OAA6C;;YAE7C,MAAM,MAAM,GAAG,MAAM,IAAI,CAAC,iBAAiB,CACzC,iBAAiB,EACjB,YAAY,EACZ,OAAO,CACR,CAAC;YACF,OAAO,MAAM,CAAC,aAAa,EAAE,CAAC;SAC/B;KAAA;;;;;;;IAQO,wBAAwB,CAC9B,iBAAyB,EACzB,QAAgB,EAChB,OAAwD;QAExD,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,iBAAiB,EAAE,QAAQ,EAAE,OAAO,EAAE,EACxCP,sCAAoC,CACrC,CAAC;KACH;;;;;;IAOO,SAAS,CACf,QAAgB,EAChB,OAAyC;QAEzC,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,QAAQ,EAAE,OAAO,EAAE,EACrBwC,uBAAqB,CACtB,CAAC;KACH;CACF;AACD;AACA,MAAMjE,YAAU,GAAGP,2BAA2B,CAAC,OAAO,cAAc,KAAK,CAAC,CAAC;AAE3E,MAAMmB,6BAA2B,GAA6B;IAC5D,IAAI,EACF,yHAAyH;IAC3H,UAAU,EAAE,KAAK;IACjB,SAAS,EAAE;QACT,GAAG,EAAE;YACH,UAAU,EAAEuL,QAAgB;SAC7B;QACD,GAAG,EAAE;YACH,UAAU,EAAEA,QAAgB;SAC7B;QACD,GAAG,EAAE;YACH,UAAU,EAAEA,QAAgB;SAC7B;QACD,GAAG,EAAE;YACH,UAAU,EAAEA,QAAgB;SAC7B;KACF;IACD,WAAW,EAAEC,QAAmB;IAChC,eAAe,EAAE,CAACT,WAAsB,CAAC;IACzC,aAAa,EAAE;QACb9L,KAAgB;QAChBM,iBAA4B;QAC5BE,cAAyB;QACzBgM,YAAuB;KACxB;IACD,gBAAgB,EAAE,CAACvM,MAAiB,EAAEQ,WAAsB,CAAC;IAC7D,SAAS,EAAE,MAAM;gBACjBN,YAAU;CACX,CAAC;AACF,MAAMa,qBAAmB,GAA6B;IACpD,IAAI,EACF,yHAAyH;IAC3H,UAAU,EAAE,OAAO;IACnB,SAAS,EAAE;QACT,GAAG,EAAE;YACH,UAAU,EAAEsL,QAAgB;SAC7B;QACD,GAAG,EAAE;YACH,UAAU,EAAEA,QAAgB;SAC7B;QACD,GAAG,EAAE;YACH,UAAU,EAAEA,QAAgB;SAC7B;QACD,GAAG,EAAE;YACH,UAAU,EAAEA,QAAgB;SAC7B;KACF;IACD,WAAW,EAAEG,SAAoB;IACjC,eAAe,EAAE,CAACX,WAAsB,CAAC;IACzC,aAAa,EAAE;QACb9L,KAAgB;QAChBM,iBAA4B;QAC5BE,cAAyB;QACzBgM,YAAuB;KACxB;IACD,gBAAgB,EAAE,CAACvM,MAAiB,EAAEQ,WAAsB,CAAC;IAC7D,SAAS,EAAE,MAAM;gBACjBN,YAAU;CACX,CAAC;AACF,MAAMe,kBAAgB,GAA6B;IACjD,IAAI,EACF,yHAAyH;IAC3H,UAAU,EAAE,KAAK;IACjB,SAAS,EAAE;QACT,GAAG,EAAE;YACH,UAAU,EAAEoL,QAAgB;SAC7B;KACF;IACD,eAAe,EAAE,CAACR,WAAsB,CAAC;IACzC,aAAa,EAAE;QACb9L,KAAgB;QAChBM,iBAA4B;QAC5BE,cAAyB;QACzBgM,YAAuB;KACxB;IACD,gBAAgB,EAAE,CAACvM,MAAiB,CAAC;gBACrCE,YAAU;CACX,CAAC;AACF,MAAMc,qBAAmB,GAA6B;IACpD,IAAI,EACF,yHAAyH;IAC3H,UAAU,EAAE,QAAQ;IACpB,SAAS,EAAE,EAAE,GAAG,EAAE,EAAE,EAAE,GAAG,EAAE,EAAE,EAAE,GAAG,EAAE,EAAE,EAAE,GAAG,EAAE,EAAE,EAAE;IACjD,eAAe,EAAE,CAAC6K,WAAsB,CAAC;IACzC,aAAa,EAAE;QACb9L,KAAgB;QAChBM,iBAA4B;QAC5BE,cAAyB;QACzBgM,YAAuB;KACxB;gBACDrM,YAAU;CACX,CAAC;AACF,MAAMwB,kCAAgC,GAA6B;IACjE,IAAI,EACF,0GAA0G;IAC5G,UAAU,EAAE,KAAK;IACjB,SAAS,EAAE;QACT,GAAG,EAAE;YACH,UAAU,EAAE+K,YAAoB;SACjC;KACF;IACD,eAAe,EAAE,CAACZ,WAAsB,CAAC;IACzC,aAAa,EAAE;QACb9L,KAAgB;QAChBM,iBAA4B;QAC5BE,cAAyB;KAC1B;IACD,gBAAgB,EAAE,CAACP,MAAiB,CAAC;gBACrCE,YAAU;CACX,CAAC;AACF,MAAMD,mBAAiB,GAA6B;IAClD,IAAI,EAAE,uEAAuE;IAC7E,UAAU,EAAE,KAAK;IACjB,SAAS,EAAE;QACT,GAAG,EAAE;YACH,UAAU,EAAEwM,YAAoB;SACjC;KACF;IACD,eAAe,EAAE,CAACZ,WAAsB,CAAC;IACzC,aAAa,EAAE,CAAC9L,KAAgB,EAAEQ,cAAyB,CAAC;IAC5D,gBAAgB,EAAE,CAACP,MAAiB,CAAC;gBACrCE,YAAU;CACX,CAAC;AACF,MAAMiM,0BAAwB,GAA6B;IACzD,IAAI,EACF,wIAAwI;IAC1I,UAAU,EAAE,MAAM;IAClB,SAAS,EAAE;QACT,GAAG,EAAE;YACH,UAAU,EAAEF,SAAiB;SAC9B;QACD,GAAG,EAAE;YACH,UAAU,EAAEA,SAAiB;SAC9B;QACD,GAAG,EAAE;YACH,UAAU,EAAEA,SAAiB;SAC9B;QACD,GAAG,EAAE;YACH,UAAU,EAAEA,SAAiB;SAC9B;KACF;IACD,WAAW,EAAEC,eAA0B;IACvC,eAAe,EAAE,CAACL,WAAsB,CAAC;IACzC,aAAa,EAAE;QACb9L,KAAgB;QAChBM,iBAA4B;QAC5BE,cAAyB;QACzBgM,YAAuB;KACxB;IACD,gBAAgB,EAAE,CAACvM,MAAiB,EAAEQ,WAAsB,CAAC;IAC7D,SAAS,EAAE,MAAM;gBACjBN,YAAU;CACX,CAAC;AACF,MAAMkM,2BAAyB,GAA6B;IAC1D,IAAI,EACF,sIAAsI;IACxI,UAAU,EAAE,MAAM;IAClB,SAAS,EAAE,EAAE,GAAG,EAAE,EAAE,EAAE,GAAG,EAAE,EAAE,EAAE,GAAG,EAAE,EAAE,EAAE,GAAG,EAAE,EAAE,EAAE;IACjD,eAAe,EAAE,CAACP,WAAsB,CAAC;IACzC,aAAa,EAAE;QACb9L,KAAgB;QAChBM,iBAA4B;QAC5BE,cAAyB;QACzBgM,YAAuB;KACxB;gBACDrM,YAAU;CACX,CAAC;AACF,MAAMyB,sCAAoC,GAA6B;IACrE,IAAI,EAAE,YAAY;IAClB,UAAU,EAAE,KAAK;IACjB,SAAS,EAAE;QACT,GAAG,EAAE;YACH,UAAU,EAAE8K,YAAoB;SACjC;KACF;IACD,eAAe,EAAE,CAACZ,WAAsB,CAAC;IACzC,aAAa,EAAE;QACb9L,KAAgB;QAChBM,iBAA4B;QAC5BE,cAAyB;QACzBM,QAAmB;KACpB;IACD,gBAAgB,EAAE,CAACb,MAAiB,CAAC;gBACrCE,YAAU;CACX,CAAC;AACF,MAAMiE,uBAAqB,GAA6B;IACtD,IAAI,EAAE,YAAY;IAClB,UAAU,EAAE,KAAK;IACjB,SAAS,EAAE;QACT,GAAG,EAAE;YACH,UAAU,EAAEsI,YAAoB;SACjC;KACF;IACD,eAAe,EAAE,CAACZ,WAAsB,CAAC;IACzC,aAAa,EAAE;QACb9L,KAAgB;QAChBQ,cAAyB;QACzBM,QAAmB;KACpB;IACD,gBAAgB,EAAE,CAACb,MAAiB,CAAC;gBACrCE,YAAU;CACX,CAAC;;ACj3BF;;;;;;;AAwCA;AACA;AACA,MAAa,sBAAsB;;;;;IAOjC,YAAY,MAA+B;QACzC,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;KACtB;;;;;;IAOM,mBAAmB,CACxB,iBAAyB,EACzB,OAA6D;QAE7D,MAAM,IAAI,GAAG,IAAI,CAAC,4BAA4B,CAAC,iBAAiB,EAAE,OAAO,CAAC,CAAC;QAC3E,OAAO;YACL,IAAI;gBACF,OAAO,IAAI,CAAC,IAAI,EAAE,CAAC;aACpB;YACD,CAAC,MAAM,CAAC,aAAa,CAAC;gBACpB,OAAO,IAAI,CAAC;aACb;YACD,MAAM,EAAE;gBACN,OAAO,IAAI,CAAC,6BAA6B,CAAC,iBAAiB,EAAE,OAAO,CAAC,CAAC;aACvE;SACF,CAAC;KACH;IAEc,6BAA6B,CAC1C,iBAAyB,EACzB,OAA6D;;YAE7D,IAAI,MAAM,GAAG,oBAAM,IAAI,CAAC,oBAAoB,CAAC,iBAAiB,EAAE,OAAO,CAAC,CAAA,CAAC;YACzE,0BAAM,MAAM,CAAC,KAAK,IAAI,EAAE,CAAA,CAAC;YACzB,IAAI,iBAAiB,GAAG,MAAM,CAAC,QAAQ,CAAC;YACxC,OAAO,iBAAiB,EAAE;gBACxB,MAAM,GAAG,oBAAM,IAAI,CAAC,wBAAwB,CAC1C,iBAAiB,EACjB,iBAAiB,EACjB,OAAO,CACR,CAAA,CAAC;gBACF,iBAAiB,GAAG,MAAM,CAAC,QAAQ,CAAC;gBACpC,0BAAM,MAAM,CAAC,KAAK,IAAI,EAAE,CAAA,CAAC;aAC1B;SACF;KAAA;IAEc,4BAA4B,CACzC,iBAAyB,EACzB,OAA6D;;;;gBAE7D,KAAyB,IAAA,KAAAT,oBAAA,IAAI,CAAC,6BAA6B,CACzD,iBAAiB,EACjB,OAAO,CACR,CAAA,IAAA;oBAHU,MAAM,IAAI,WAAA,CAAA;oBAInB,oBAAA,OAAOC,uBAAAD,oBAAA,IAAI,CAAA,CAAA,CAAA,CAAC;iBACb;;;;;;;;;SACF;KAAA;;;;;IAMM,IAAI,CACT,OAA8C;QAE9C,MAAM,IAAI,GAAG,IAAI,CAAC,aAAa,CAAC,OAAO,CAAC,CAAC;QACzC,OAAO;YACL,IAAI;gBACF,OAAO,IAAI,CAAC,IAAI,EAAE,CAAC;aACpB;YACD,CAAC,MAAM,CAAC,aAAa,CAAC;gBACpB,OAAO,IAAI,CAAC;aACb;YACD,MAAM,EAAE;gBACN,OAAO,IAAI,CAAC,cAAc,CAAC,OAAO,CAAC,CAAC;aACrC;SACF,CAAC;KACH;IAEc,cAAc,CAC3B,OAA8C;;YAE9C,IAAI,MAAM,GAAG,oBAAM,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,CAAA,CAAC;YACvC,0BAAM,MAAM,CAAC,KAAK,IAAI,EAAE,CAAA,CAAC;YACzB,IAAI,iBAAiB,GAAG,MAAM,CAAC,QAAQ,CAAC;YACxC,OAAO,iBAAiB,EAAE;gBACxB,MAAM,GAAG,oBAAM,IAAI,CAAC,SAAS,CAAC,iBAAiB,EAAE,OAAO,CAAC,CAAA,CAAC;gBAC1D,iBAAiB,GAAG,MAAM,CAAC,QAAQ,CAAC;gBACpC,0BAAM,MAAM,CAAC,KAAK,IAAI,EAAE,CAAA,CAAC;aAC1B;SACF;KAAA;IAEc,aAAa,CAC1B,OAA8C;;;;gBAE9C,KAAyB,IAAA,KAAAA,oBAAA,IAAI,CAAC,cAAc,CAAC,OAAO,CAAC,CAAA,IAAA;oBAA1C,MAAM,IAAI,WAAA,CAAA;oBACnB,oBAAA,OAAOC,uBAAAD,oBAAA,IAAI,CAAA,CAAA,CAAA,CAAC;iBACb;;;;;;;;;SACF;KAAA;;;;;;;;;IAUM,uBAAuB,CAC5B,iBAAyB,EACzB,qBAA6B,EAC7B,OAAiE;QAEjE,MAAM,IAAI,GAAG,IAAI,CAAC,gCAAgC,CAChD,iBAAiB,EACjB,qBAAqB,EACrB,OAAO,CACR,CAAC;QACF,OAAO;YACL,IAAI;gBACF,OAAO,IAAI,CAAC,IAAI,EAAE,CAAC;aACpB;YACD,CAAC,MAAM,CAAC,aAAa,CAAC;gBACpB,OAAO,IAAI,CAAC;aACb;YACD,MAAM,EAAE;gBACN,OAAO,IAAI,CAAC,iCAAiC,CAC3C,iBAAiB,EACjB,qBAAqB,EACrB,OAAO,CACR,CAAC;aACH;SACF,CAAC;KACH;IAEc,iCAAiC,CAC9C,iBAAyB,EACzB,qBAA6B,EAC7B,OAAiE;;YAEjE,IAAI,MAAM,GAAG,oBAAM,IAAI,CAAC,wBAAwB,CAC9C,iBAAiB,EACjB,qBAAqB,EACrB,OAAO,CACR,CAAA,CAAC;YACF,0BAAM,MAAM,CAAC,KAAK,IAAI,EAAE,CAAA,CAAC;YACzB,IAAI,iBAAiB,GAAG,MAAM,CAAC,QAAQ,CAAC;YACxC,OAAO,iBAAiB,EAAE;gBACxB,MAAM,GAAG,oBAAM,IAAI,CAAC,4BAA4B,CAC9C,iBAAiB,EACjB,qBAAqB,EACrB,iBAAiB,EACjB,OAAO,CACR,CAAA,CAAC;gBACF,iBAAiB,GAAG,MAAM,CAAC,QAAQ,CAAC;gBACpC,0BAAM,MAAM,CAAC,KAAK,IAAI,EAAE,CAAA,CAAC;aAC1B;SACF;KAAA;IAEc,gCAAgC,CAC7C,iBAAyB,EACzB,qBAA6B,EAC7B,OAAiE;;;;gBAEjE,KAAyB,IAAA,KAAAA,oBAAA,IAAI,CAAC,iCAAiC,CAC7D,iBAAiB,EACjB,qBAAqB,EACrB,OAAO,CACR,CAAA,IAAA;oBAJU,MAAM,IAAI,WAAA,CAAA;oBAKnB,oBAAA,OAAOC,uBAAAD,oBAAA,IAAI,CAAA,CAAA,CAAA,CAAC;iBACb;;;;;;;;;SACF;KAAA;;;;;;;;;;;IAYK,mBAAmB,CACvB,iBAAyB,EACzB,qBAA6B,EAC7B,iBAAoC,EACpC,OAAwD;;YAOxD,MAAM,mBAAmB,GAAG,CAC1B,IAAmC,EACnC,IAA8B;gBAE9B,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;aACrD,CAAA,CAAC;YACF,MAAM,aAAa,GAAG,CACpB,IAAmC,EACnC,IAA8B;;gBAE9B,IAAI,kBAAkB,GAEN,SAAS,CAAC;gBAC1B,MAAM,gBAAgB,GAAG,MAAA,IAAI,CAAC,OAAO,0CAAE,UAAU,CAAC;gBAClD,MAAM,QAAQ,GAAmC,CAC/C,WAA6C,EAC7C,YAAqB;oBAErB,kBAAkB,GAAG,WAAW,CAAC;oBACjC,gBAAgB,aAAhB,gBAAgB,uBAAhB,gBAAgB,CAAG,WAAW,EAAE,YAAY,CAAC,CAAC;iBAC/C,CAAC;gBACF,MAAM,WAAW,mCACZ,IAAI,KACP,OAAO,kCACF,IAAI,CAAC,OAAO,KACf,UAAU,EAAE,QAAQ,MAEvB,CAAC;gBACF,MAAM,YAAY,GAAG,MAAM,mBAAmB,CAAC,WAAW,EAAE,IAAI,CAAC,CAAC;gBAClE,OAAO;oBACL,YAAY;oBACZ,WAAW,EAAE;wBACX,UAAU,EAAE,kBAAmB,CAAC,MAAM;wBACtC,IAAI,EAAE,kBAAmB,CAAC,UAAU;wBACpC,OAAO,EAAE,kBAAmB,CAAC,OAAO,CAAC,MAAM,EAAE;qBAC9C;iBACF,CAAC;aACH,CAAA,CAAC;YAEF,MAAM,GAAG,GAAG,IAAI,OAAO,CACrB,aAAa,EACb,EAAE,iBAAiB,EAAE,qBAAqB,EAAE,iBAAiB,EAAE,OAAO,EAAE,EACxEqB,6BAA2B,CAC5B,CAAC;YACF,OAAO,IAAIoB,iBAAS,CAAC,GAAG,EAAE;gBACxB,UAAU,EAAE,OAAO,aAAP,OAAO,uBAAP,OAAO,CAAE,UAAU;gBAC/B,YAAY,EAAE,OAAO,aAAP,OAAO,uBAAP,OAAO,CAAE,kBAAkB;aAC1C,CAAC,CAAC;SACJ;KAAA;;;;;;;;;;;IAYK,0BAA0B,CAC9B,iBAAyB,EACzB,qBAA6B,EAC7B,iBAAoC,EACpC,OAAwD;;YAExD,MAAM,MAAM,GAAG,MAAM,IAAI,CAAC,mBAAmB,CAC3C,iBAAiB,EACjB,qBAAqB,EACrB,iBAAiB,EACjB,OAAO,CACR,CAAC;YACF,OAAO,MAAM,CAAC,aAAa,EAAE,CAAC;SAC/B;KAAA;;;;;;;;;;;IAYK,WAAW,CACf,iBAAyB,EACzB,qBAA6B,EAC7B,iBAA0C,EAC1C,OAAgD;;YAOhD,MAAM,mBAAmB,GAAG,CAC1B,IAAmC,EACnC,IAA8B;gBAE9B,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;aACrD,CAAA,CAAC;YACF,MAAM,aAAa,GAAG,CACpB,IAAmC,EACnC,IAA8B;;gBAE9B,IAAI,kBAAkB,GAEN,SAAS,CAAC;gBAC1B,MAAM,gBAAgB,GAAG,MAAA,IAAI,CAAC,OAAO,0CAAE,UAAU,CAAC;gBAClD,MAAM,QAAQ,GAAmC,CAC/C,WAA6C,EAC7C,YAAqB;oBAErB,kBAAkB,GAAG,WAAW,CAAC;oBACjC,gBAAgB,aAAhB,gBAAgB,uBAAhB,gBAAgB,CAAG,WAAW,EAAE,YAAY,CAAC,CAAC;iBAC/C,CAAC;gBACF,MAAM,WAAW,mCACZ,IAAI,KACP,OAAO,kCACF,IAAI,CAAC,OAAO,KACf,UAAU,EAAE,QAAQ,MAEvB,CAAC;gBACF,MAAM,YAAY,GAAG,MAAM,mBAAmB,CAAC,WAAW,EAAE,IAAI,CAAC,CAAC;gBAClE,OAAO;oBACL,YAAY;oBACZ,WAAW,EAAE;wBACX,UAAU,EAAE,kBAAmB,CAAC,MAAM;wBACtC,IAAI,EAAE,kBAAmB,CAAC,UAAU;wBACpC,OAAO,EAAE,kBAAmB,CAAC,OAAO,CAAC,MAAM,EAAE;qBAC9C;iBACF,CAAC;aACH,CAAA,CAAC;YAEF,MAAM,GAAG,GAAG,IAAI,OAAO,CACrB,aAAa,EACb,EAAE,iBAAiB,EAAE,qBAAqB,EAAE,iBAAiB,EAAE,OAAO,EAAE,EACxEnB,qBAAmB,CACpB,CAAC;YACF,OAAO,IAAImB,iBAAS,CAAC,GAAG,EAAE;gBACxB,UAAU,EAAE,OAAO,aAAP,OAAO,uBAAP,OAAO,CAAE,UAAU;gBAC/B,YAAY,EAAE,OAAO,aAAP,OAAO,uBAAP,OAAO,CAAE,kBAAkB;aAC1C,CAAC,CAAC;SACJ;KAAA;;;;;;;;;;;IAYK,kBAAkB,CACtB,iBAAyB,EACzB,qBAA6B,EAC7B,iBAA0C,EAC1C,OAAgD;;YAEhD,MAAM,MAAM,GAAG,MAAM,IAAI,CAAC,WAAW,CACnC,iBAAiB,EACjB,qBAAqB,EACrB,iBAAiB,EACjB,OAAO,CACR,CAAC;YACF,OAAO,MAAM,CAAC,aAAa,EAAE,CAAC;SAC/B;KAAA;;;;;;;;;IAUD,GAAG,CACD,iBAAyB,EACzB,qBAA6B,EAC7B,OAA6C;QAE7C,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,iBAAiB,EAAE,qBAAqB,EAAE,OAAO,EAAE,EACrDjB,kBAAgB,CACjB,CAAC;KACH;;;;;;;;;IAUK,WAAW,CACf,iBAAyB,EACzB,qBAA6B,EAC7B,OAAgD;;YAEhD,MAAM,mBAAmB,GAAG,CAC1B,IAAmC,EACnC,IAA8B;gBAE9B,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;aACrD,CAAA,CAAC;YACF,MAAM,aAAa,GAAG,CACpB,IAAmC,EACnC,IAA8B;;gBAE9B,IAAI,kBAAkB,GAEN,SAAS,CAAC;gBAC1B,MAAM,gBAAgB,GAAG,MAAA,IAAI,CAAC,OAAO,0CAAE,UAAU,CAAC;gBAClD,MAAM,QAAQ,GAAmC,CAC/C,WAA6C,EAC7C,YAAqB;oBAErB,kBAAkB,GAAG,WAAW,CAAC;oBACjC,gBAAgB,aAAhB,gBAAgB,uBAAhB,gBAAgB,CAAG,WAAW,EAAE,YAAY,CAAC,CAAC;iBAC/C,CAAC;gBACF,MAAM,WAAW,mCACZ,IAAI,KACP,OAAO,kCACF,IAAI,CAAC,OAAO,KACf,UAAU,EAAE,QAAQ,MAEvB,CAAC;gBACF,MAAM,YAAY,GAAG,MAAM,mBAAmB,CAAC,WAAW,EAAE,IAAI,CAAC,CAAC;gBAClE,OAAO;oBACL,YAAY;oBACZ,WAAW,EAAE;wBACX,UAAU,EAAE,kBAAmB,CAAC,MAAM;wBACtC,IAAI,EAAE,kBAAmB,CAAC,UAAU;wBACpC,OAAO,EAAE,kBAAmB,CAAC,OAAO,CAAC,MAAM,EAAE;qBAC9C;iBACF,CAAC;aACH,CAAA,CAAC;YAEF,MAAM,GAAG,GAAG,IAAI,OAAO,CACrB,aAAa,EACb,EAAE,iBAAiB,EAAE,qBAAqB,EAAE,OAAO,EAAE,EACrDD,qBAAmB,CACpB,CAAC;YACF,OAAO,IAAIkB,iBAAS,CAAC,GAAG,EAAE;gBACxB,UAAU,EAAE,OAAO,aAAP,OAAO,uBAAP,OAAO,CAAE,UAAU;gBAC/B,YAAY,EAAE,OAAO,aAAP,OAAO,uBAAP,OAAO,CAAE,kBAAkB;aAC1C,CAAC,CAAC;SACJ;KAAA;;;;;;;;;IAUK,kBAAkB,CACtB,iBAAyB,EACzB,qBAA6B,EAC7B,OAAgD;;YAEhD,MAAM,MAAM,GAAG,MAAM,IAAI,CAAC,WAAW,CACnC,iBAAiB,EACjB,qBAAqB,EACrB,OAAO,CACR,CAAC;YACF,OAAO,MAAM,CAAC,aAAa,EAAE,CAAC;SAC/B;KAAA;;;;;;IAOO,oBAAoB,CAC1B,iBAAyB,EACzB,OAA6D;QAE7D,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,iBAAiB,EAAE,OAAO,EAAE,EAC9BR,kCAAgC,CACjC,CAAC;KACH;;;;;IAMO,KAAK,CACX,OAA8C;QAE9C,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CAAC,EAAE,OAAO,EAAE,EAAEzB,mBAAiB,CAAC,CAAC;KACzE;;;;;;;;;IAUO,wBAAwB,CAC9B,iBAAyB,EACzB,qBAA6B,EAC7B,OAAiE;QAEjE,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,iBAAiB,EAAE,qBAAqB,EAAE,OAAO,EAAE,EACrD,oCAAoC,CACrC,CAAC;KACH;;;;;;;IAQO,wBAAwB,CAC9B,iBAAyB,EACzB,QAAgB,EAChB,OAAiE;QAEjE,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,iBAAiB,EAAE,QAAQ,EAAE,OAAO,EAAE,EACxC0B,sCAAoC,CACrC,CAAC;KACH;;;;;;IAOO,SAAS,CACf,QAAgB,EAChB,OAAkD;QAElD,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,QAAQ,EAAE,OAAO,EAAE,EACrBwC,uBAAqB,CACtB,CAAC;KACH;;;;;;;;;;;IAYO,4BAA4B,CAClC,iBAAyB,EACzB,qBAA6B,EAC7B,QAAgB,EAChB,OAAqE;QAErE,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,iBAAiB,EAAE,qBAAqB,EAAE,QAAQ,EAAE,OAAO,EAAE,EAC/D,wCAAwC,CACzC,CAAC;KACH;CACF;AACD;AACA,MAAMjE,YAAU,GAAGP,2BAA2B,CAAC,OAAO,cAAc,KAAK,CAAC,CAAC;AAE3E,MAAMmB,6BAA2B,GAA6B;IAC5D,IAAI,EACF,2IAA2I;IAC7I,UAAU,EAAE,KAAK;IACjB,SAAS,EAAE;QACT,GAAG,EAAE;YACH,UAAU,EAAE4L,iBAAyB;SACtC;QACD,GAAG,EAAE;YACH,UAAU,EAAEA,iBAAyB;SACtC;QACD,GAAG,EAAE;YACH,UAAU,EAAEA,iBAAyB;SACtC;QACD,GAAG,EAAE;YACH,UAAU,EAAEA,iBAAyB;SACtC;QACD,OAAO,EAAE;YACP,UAAU,EAAE7M,UAAkB;SAC/B;KACF;IACD,WAAW,EAAE8M,iBAA4B;IACzC,eAAe,EAAE,CAACd,WAAsB,CAAC;IACzC,aAAa,EAAE;QACb9L,KAAgB;QAChBM,iBAA4B;QAC5BE,cAAyB;QACzBqM,qBAAgC;KACjC;IACD,gBAAgB,EAAE,CAAC5M,MAAiB,EAAEQ,WAAsB,CAAC;IAC7D,SAAS,EAAE,MAAM;gBACjBN,YAAU;CACX,CAAC;AACF,MAAMa,qBAAmB,GAA6B;IACpD,IAAI,EACF,2IAA2I;IAC7I,UAAU,EAAE,OAAO;IACnB,SAAS,EAAE;QACT,GAAG,EAAE;YACH,UAAU,EAAE2L,iBAAyB;SACtC;QACD,GAAG,EAAE;YACH,UAAU,EAAEA,iBAAyB;SACtC;QACD,GAAG,EAAE;YACH,UAAU,EAAEA,iBAAyB;SACtC;QACD,GAAG,EAAE;YACH,UAAU,EAAEA,iBAAyB;SACtC;QACD,OAAO,EAAE;YACP,UAAU,EAAE7M,UAAkB;SAC/B;KACF;IACD,WAAW,EAAEgN,kBAA6B;IAC1C,eAAe,EAAE,CAAChB,WAAsB,CAAC;IACzC,aAAa,EAAE;QACb9L,KAAgB;QAChBM,iBAA4B;QAC5BE,cAAyB;QACzBqM,qBAAgC;KACjC;IACD,gBAAgB,EAAE,CAAC5M,MAAiB,EAAEQ,WAAsB,CAAC;IAC7D,SAAS,EAAE,MAAM;gBACjBN,YAAU;CACX,CAAC;AACF,MAAMe,kBAAgB,GAA6B;IACjD,IAAI,EACF,2IAA2I;IAC7I,UAAU,EAAE,KAAK;IACjB,SAAS,EAAE;QACT,GAAG,EAAE;YACH,UAAU,EAAEyL,iBAAyB;SACtC;QACD,OAAO,EAAE;YACP,UAAU,EAAE7M,UAAkB;SAC/B;KACF;IACD,eAAe,EAAE,CAACgM,WAAsB,CAAC;IACzC,aAAa,EAAE;QACb9L,KAAgB;QAChBM,iBAA4B;QAC5BE,cAAyB;QACzBqM,qBAAgC;KACjC;IACD,gBAAgB,EAAE,CAAC5M,MAAiB,CAAC;gBACrCE,YAAU;CACX,CAAC;AACF,MAAMc,qBAAmB,GAA6B;IACpD,IAAI,EACF,2IAA2I;IAC7I,UAAU,EAAE,QAAQ;IACpB,SAAS,EAAE;QACT,GAAG,EAAE,EAAE;QACP,GAAG,EAAE,EAAE;QACP,GAAG,EAAE,EAAE;QACP,GAAG,EAAE,EAAE;QACP,OAAO,EAAE;YACP,UAAU,EAAEnB,UAAkB;SAC/B;KACF;IACD,eAAe,EAAE,CAACgM,WAAsB,CAAC;IACzC,aAAa,EAAE;QACb9L,KAAgB;QAChBM,iBAA4B;QAC5BE,cAAyB;QACzBqM,qBAAgC;KACjC;IACD,gBAAgB,EAAE,CAAC5M,MAAiB,CAAC;gBACrCE,YAAU;CACX,CAAC;AACF,MAAMwB,kCAAgC,GAA6B;IACjE,IAAI,EACF,mHAAmH;IACrH,UAAU,EAAE,KAAK;IACjB,SAAS,EAAE;QACT,GAAG,EAAE;YACH,UAAU,EAAEoL,qBAA6B;SAC1C;QACD,OAAO,EAAE;YACP,UAAU,EAAEjN,UAAkB;SAC/B;KACF;IACD,eAAe,EAAE,CAACgM,WAAsB,CAAC;IACzC,aAAa,EAAE;QACb9L,KAAgB;QAChBM,iBAA4B;QAC5BE,cAAyB;KAC1B;IACD,gBAAgB,EAAE,CAACP,MAAiB,CAAC;gBACrCE,YAAU;CACX,CAAC;AACF,MAAMD,mBAAiB,GAA6B;IAClD,IAAI,EACF,gFAAgF;IAClF,UAAU,EAAE,KAAK;IACjB,SAAS,EAAE;QACT,GAAG,EAAE;YACH,UAAU,EAAE6M,qBAA6B;SAC1C;QACD,OAAO,EAAE;YACP,UAAU,EAAEjN,UAAkB;SAC/B;KACF;IACD,eAAe,EAAE,CAACgM,WAAsB,CAAC;IACzC,aAAa,EAAE,CAAC9L,KAAgB,EAAEQ,cAAyB,CAAC;IAC5D,gBAAgB,EAAE,CAACP,MAAiB,CAAC;gBACrCE,YAAU;CACX,CAAC;AACF,MAAM,oCAAoC,GAA6B;IACrE,IAAI,EACF,+JAA+J;IACjK,UAAU,EAAE,KAAK;IACjB,SAAS,EAAE;QACT,GAAG,EAAE;YACH,UAAU,EAAE6M,eAAuB;SACpC;QACD,OAAO,EAAE;YACP,UAAU,EAAElN,UAAkB;SAC/B;KACF;IACD,eAAe,EAAE,CAACgM,WAAsB,CAAC;IACzC,aAAa,EAAE;QACb9L,KAAgB;QAChBM,iBAA4B;QAC5BE,cAAyB;QACzBqM,qBAAgC;KACjC;IACD,gBAAgB,EAAE,CAAC5M,MAAiB,CAAC;gBACrCE,YAAU;CACX,CAAC;AACF,MAAMyB,sCAAoC,GAA6B;IACrE,IAAI,EAAE,YAAY;IAClB,UAAU,EAAE,KAAK;IACjB,SAAS,EAAE;QACT,GAAG,EAAE;YACH,UAAU,EAAEmL,qBAA6B;SAC1C;QACD,OAAO,EAAE;YACP,UAAU,EAAEjN,UAAkB;SAC/B;KACF;IACD,eAAe,EAAE,CAACgM,WAAsB,CAAC;IACzC,aAAa,EAAE;QACb9L,KAAgB;QAChBM,iBAA4B;QAC5BE,cAAyB;QACzBM,QAAmB;KACpB;IACD,gBAAgB,EAAE,CAACb,MAAiB,CAAC;gBACrCE,YAAU;CACX,CAAC;AACF,MAAMiE,uBAAqB,GAA6B;IACtD,IAAI,EAAE,YAAY;IAClB,UAAU,EAAE,KAAK;IACjB,SAAS,EAAE;QACT,GAAG,EAAE;YACH,UAAU,EAAE2I,qBAA6B;SAC1C;QACD,OAAO,EAAE;YACP,UAAU,EAAEjN,UAAkB;SAC/B;KACF;IACD,eAAe,EAAE,CAACgM,WAAsB,CAAC;IACzC,aAAa,EAAE;QACb9L,KAAgB;QAChBQ,cAAyB;QACzBM,QAAmB;KACpB;IACD,gBAAgB,EAAE,CAACb,MAAiB,CAAC;gBACrCE,YAAU;CACX,CAAC;AACF,MAAM,wCAAwC,GAA6B;IACzE,IAAI,EAAE,YAAY;IAClB,UAAU,EAAE,KAAK;IACjB,SAAS,EAAE;QACT,GAAG,EAAE;YACH,UAAU,EAAE6M,eAAuB;SACpC;QACD,OAAO,EAAE;YACP,UAAU,EAAElN,UAAkB;SAC/B;KACF;IACD,eAAe,EAAE,CAACgM,WAAsB,CAAC;IACzC,aAAa,EAAE;QACb9L,KAAgB;QAChBM,iBAA4B;QAC5BE,cAAyB;QACzBM,QAAmB;QACnB+L,qBAAgC;KACjC;IACD,gBAAgB,EAAE,CAAC5M,MAAiB,CAAC;gBACrCE,YAAU;CACX,CAAC;;ACl1BF;;;;;;;AAgDA;AACA;AACA,MAAa,gBAAgB;;;;;IAO3B,YAAY,MAA+B;QACzC,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;KACtB;;;;;;IAOM,mBAAmB,CACxB,iBAAyB,EACzB,OAAuD;QAEvD,MAAM,IAAI,GAAG,IAAI,CAAC,4BAA4B,CAAC,iBAAiB,EAAE,OAAO,CAAC,CAAC;QAC3E,OAAO;YACL,IAAI;gBACF,OAAO,IAAI,CAAC,IAAI,EAAE,CAAC;aACpB;YACD,CAAC,MAAM,CAAC,aAAa,CAAC;gBACpB,OAAO,IAAI,CAAC;aACb;YACD,MAAM,EAAE;gBACN,OAAO,IAAI,CAAC,6BAA6B,CAAC,iBAAiB,EAAE,OAAO,CAAC,CAAC;aACvE;SACF,CAAC;KACH;IAEc,6BAA6B,CAC1C,iBAAyB,EACzB,OAAuD;;YAEvD,IAAI,MAAM,GAAG,oBAAM,IAAI,CAAC,oBAAoB,CAAC,iBAAiB,EAAE,OAAO,CAAC,CAAA,CAAC;YACzE,0BAAM,MAAM,CAAC,KAAK,IAAI,EAAE,CAAA,CAAC;YACzB,IAAI,iBAAiB,GAAG,MAAM,CAAC,QAAQ,CAAC;YACxC,OAAO,iBAAiB,EAAE;gBACxB,MAAM,GAAG,oBAAM,IAAI,CAAC,wBAAwB,CAC1C,iBAAiB,EACjB,iBAAiB,EACjB,OAAO,CACR,CAAA,CAAC;gBACF,iBAAiB,GAAG,MAAM,CAAC,QAAQ,CAAC;gBACpC,0BAAM,MAAM,CAAC,KAAK,IAAI,EAAE,CAAA,CAAC;aAC1B;SACF;KAAA;IAEc,4BAA4B,CACzC,iBAAyB,EACzB,OAAuD;;;;gBAEvD,KAAyB,IAAA,KAAAT,oBAAA,IAAI,CAAC,6BAA6B,CACzD,iBAAiB,EACjB,OAAO,CACR,CAAA,IAAA;oBAHU,MAAM,IAAI,WAAA,CAAA;oBAInB,oBAAA,OAAOC,uBAAAD,oBAAA,IAAI,CAAA,CAAA,CAAA,CAAC;iBACb;;;;;;;;;SACF;KAAA;;;;;IAMM,IAAI,CACT,OAAwC;QAExC,MAAM,IAAI,GAAG,IAAI,CAAC,aAAa,CAAC,OAAO,CAAC,CAAC;QACzC,OAAO;YACL,IAAI;gBACF,OAAO,IAAI,CAAC,IAAI,EAAE,CAAC;aACpB;YACD,CAAC,MAAM,CAAC,aAAa,CAAC;gBACpB,OAAO,IAAI,CAAC;aACb;YACD,MAAM,EAAE;gBACN,OAAO,IAAI,CAAC,cAAc,CAAC,OAAO,CAAC,CAAC;aACrC;SACF,CAAC;KACH;IAEc,cAAc,CAC3B,OAAwC;;YAExC,IAAI,MAAM,GAAG,oBAAM,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,CAAA,CAAC;YACvC,0BAAM,MAAM,CAAC,KAAK,IAAI,EAAE,CAAA,CAAC;YACzB,IAAI,iBAAiB,GAAG,MAAM,CAAC,QAAQ,CAAC;YACxC,OAAO,iBAAiB,EAAE;gBACxB,MAAM,GAAG,oBAAM,IAAI,CAAC,SAAS,CAAC,iBAAiB,EAAE,OAAO,CAAC,CAAA,CAAC;gBAC1D,iBAAiB,GAAG,MAAM,CAAC,QAAQ,CAAC;gBACpC,0BAAM,MAAM,CAAC,KAAK,IAAI,EAAE,CAAA,CAAC;aAC1B;SACF;KAAA;IAEc,aAAa,CAC1B,OAAwC;;;;gBAExC,KAAyB,IAAA,KAAAA,oBAAA,IAAI,CAAC,cAAc,CAAC,OAAO,CAAC,CAAA,IAAA;oBAA1C,MAAM,IAAI,WAAA,CAAA;oBACnB,oBAAA,OAAOC,uBAAAD,oBAAA,IAAI,CAAA,CAAA,CAAA,CAAC;iBACb;;;;;;;;;SACF;KAAA;;;;;;;;;IAUM,8BAA8B,CACnC,iBAAyB,EACzB,cAAsB,EACtB,OAAkE;QAElE,MAAM,IAAI,GAAG,IAAI,CAAC,uCAAuC,CACvD,iBAAiB,EACjB,cAAc,EACd,OAAO,CACR,CAAC;QACF,OAAO;YACL,IAAI;gBACF,OAAO,IAAI,CAAC,IAAI,EAAE,CAAC;aACpB;YACD,CAAC,MAAM,CAAC,aAAa,CAAC;gBACpB,OAAO,IAAI,CAAC;aACb;YACD,MAAM,EAAE;gBACN,OAAO,IAAI,CAAC,wCAAwC,CAClD,iBAAiB,EACjB,cAAc,EACd,OAAO,CACR,CAAC;aACH;SACF,CAAC;KACH;IAEc,wCAAwC,CACrD,iBAAyB,EACzB,cAAsB,EACtB,OAAkE;;YAElE,IAAI,MAAM,GAAG,oBAAM,IAAI,CAAC,+BAA+B,CACrD,iBAAiB,EACjB,cAAc,EACd,OAAO,CACR,CAAA,CAAC;YACF,0BAAM,MAAM,CAAC,KAAK,IAAI,EAAE,CAAA,CAAC;YACzB,IAAI,iBAAiB,GAAG,MAAM,CAAC,QAAQ,CAAC;YACxC,OAAO,iBAAiB,EAAE;gBACxB,MAAM,GAAG,oBAAM,IAAI,CAAC,mCAAmC,CACrD,iBAAiB,EACjB,cAAc,EACd,iBAAiB,EACjB,OAAO,CACR,CAAA,CAAC;gBACF,iBAAiB,GAAG,MAAM,CAAC,QAAQ,CAAC;gBACpC,0BAAM,MAAM,CAAC,KAAK,IAAI,EAAE,CAAA,CAAC;aAC1B;SACF;KAAA;IAEc,uCAAuC,CACpD,iBAAyB,EACzB,cAAsB,EACtB,OAAkE;;;;gBAElE,KAAyB,IAAA,KAAAA,oBAAA,IAAI,CAAC,wCAAwC,CACpE,iBAAiB,EACjB,cAAc,EACd,OAAO,CACR,CAAA,IAAA;oBAJU,MAAM,IAAI,WAAA,CAAA;oBAKnB,oBAAA,OAAOC,uBAAAD,oBAAA,IAAI,CAAA,CAAA,CAAA,CAAC;iBACb;;;;;;;;;SACF;KAAA;;;;;;;;;;IAWK,mBAAmB,CACvB,iBAAyB,EACzB,cAAsB,EACtB,UAAsB,EACtB,OAAkD;;YAOlD,MAAM,mBAAmB,GAAG,CAC1B,IAAmC,EACnC,IAA8B;gBAE9B,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;aACrD,CAAA,CAAC;YACF,MAAM,aAAa,GAAG,CACpB,IAAmC,EACnC,IAA8B;;gBAE9B,IAAI,kBAAkB,GAEN,SAAS,CAAC;gBAC1B,MAAM,gBAAgB,GAAG,MAAA,IAAI,CAAC,OAAO,0CAAE,UAAU,CAAC;gBAClD,MAAM,QAAQ,GAAmC,CAC/C,WAA6C,EAC7C,YAAqB;oBAErB,kBAAkB,GAAG,WAAW,CAAC;oBACjC,gBAAgB,aAAhB,gBAAgB,uBAAhB,gBAAgB,CAAG,WAAW,EAAE,YAAY,CAAC,CAAC;iBAC/C,CAAC;gBACF,MAAM,WAAW,mCACZ,IAAI,KACP,OAAO,kCACF,IAAI,CAAC,OAAO,KACf,UAAU,EAAE,QAAQ,MAEvB,CAAC;gBACF,MAAM,YAAY,GAAG,MAAM,mBAAmB,CAAC,WAAW,EAAE,IAAI,CAAC,CAAC;gBAClE,OAAO;oBACL,YAAY;oBACZ,WAAW,EAAE;wBACX,UAAU,EAAE,kBAAmB,CAAC,MAAM;wBACtC,IAAI,EAAE,kBAAmB,CAAC,UAAU;wBACpC,OAAO,EAAE,kBAAmB,CAAC,OAAO,CAAC,MAAM,EAAE;qBAC9C;iBACF,CAAC;aACH,CAAA,CAAC;YAEF,MAAM,GAAG,GAAG,IAAI,OAAO,CACrB,aAAa,EACb,EAAE,iBAAiB,EAAE,cAAc,EAAE,UAAU,EAAE,OAAO,EAAE,EAC1DqB,6BAA2B,CAC5B,CAAC;YACF,OAAO,IAAIoB,iBAAS,CAAC,GAAG,EAAE;gBACxB,UAAU,EAAE,OAAO,aAAP,OAAO,uBAAP,OAAO,CAAE,UAAU;gBAC/B,YAAY,EAAE,OAAO,aAAP,OAAO,uBAAP,OAAO,CAAE,kBAAkB;aAC1C,CAAC,CAAC;SACJ;KAAA;;;;;;;;;;IAWK,0BAA0B,CAC9B,iBAAyB,EACzB,cAAsB,EACtB,UAAsB,EACtB,OAAkD;;YAElD,MAAM,MAAM,GAAG,MAAM,IAAI,CAAC,mBAAmB,CAC3C,iBAAiB,EACjB,cAAc,EACd,UAAU,EACV,OAAO,CACR,CAAC;YACF,OAAO,MAAM,CAAC,aAAa,EAAE,CAAC;SAC/B;KAAA;;;;;;;;;;IAWK,WAAW,CACf,iBAAyB,EACzB,cAAsB,EACtB,UAA4B,EAC5B,OAA0C;;YAO1C,MAAM,mBAAmB,GAAG,CAC1B,IAAmC,EACnC,IAA8B;gBAE9B,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;aACrD,CAAA,CAAC;YACF,MAAM,aAAa,GAAG,CACpB,IAAmC,EACnC,IAA8B;;gBAE9B,IAAI,kBAAkB,GAEN,SAAS,CAAC;gBAC1B,MAAM,gBAAgB,GAAG,MAAA,IAAI,CAAC,OAAO,0CAAE,UAAU,CAAC;gBAClD,MAAM,QAAQ,GAAmC,CAC/C,WAA6C,EAC7C,YAAqB;oBAErB,kBAAkB,GAAG,WAAW,CAAC;oBACjC,gBAAgB,aAAhB,gBAAgB,uBAAhB,gBAAgB,CAAG,WAAW,EAAE,YAAY,CAAC,CAAC;iBAC/C,CAAC;gBACF,MAAM,WAAW,mCACZ,IAAI,KACP,OAAO,kCACF,IAAI,CAAC,OAAO,KACf,UAAU,EAAE,QAAQ,MAEvB,CAAC;gBACF,MAAM,YAAY,GAAG,MAAM,mBAAmB,CAAC,WAAW,EAAE,IAAI,CAAC,CAAC;gBAClE,OAAO;oBACL,YAAY;oBACZ,WAAW,EAAE;wBACX,UAAU,EAAE,kBAAmB,CAAC,MAAM;wBACtC,IAAI,EAAE,kBAAmB,CAAC,UAAU;wBACpC,OAAO,EAAE,kBAAmB,CAAC,OAAO,CAAC,MAAM,EAAE;qBAC9C;iBACF,CAAC;aACH,CAAA,CAAC;YAEF,MAAM,GAAG,GAAG,IAAI,OAAO,CACrB,aAAa,EACb,EAAE,iBAAiB,EAAE,cAAc,EAAE,UAAU,EAAE,OAAO,EAAE,EAC1DnB,qBAAmB,CACpB,CAAC;YACF,OAAO,IAAImB,iBAAS,CAAC,GAAG,EAAE;gBACxB,UAAU,EAAE,OAAO,aAAP,OAAO,uBAAP,OAAO,CAAE,UAAU;gBAC/B,YAAY,EAAE,OAAO,aAAP,OAAO,uBAAP,OAAO,CAAE,kBAAkB;aAC1C,CAAC,CAAC;SACJ;KAAA;;;;;;;;;;IAWK,kBAAkB,CACtB,iBAAyB,EACzB,cAAsB,EACtB,UAA4B,EAC5B,OAA0C;;YAE1C,MAAM,MAAM,GAAG,MAAM,IAAI,CAAC,WAAW,CACnC,iBAAiB,EACjB,cAAc,EACd,UAAU,EACV,OAAO,CACR,CAAC;YACF,OAAO,MAAM,CAAC,aAAa,EAAE,CAAC;SAC/B;KAAA;;;;;;;;;IAUD,GAAG,CACD,iBAAyB,EACzB,cAAsB,EACtB,OAAuC;QAEvC,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,iBAAiB,EAAE,cAAc,EAAE,OAAO,EAAE,EAC9CjB,kBAAgB,CACjB,CAAC;KACH;;;;;;;;;IAUK,WAAW,CACf,iBAAyB,EACzB,cAAsB,EACtB,OAA0C;;YAE1C,MAAM,mBAAmB,GAAG,CAC1B,IAAmC,EACnC,IAA8B;gBAE9B,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;aACrD,CAAA,CAAC;YACF,MAAM,aAAa,GAAG,CACpB,IAAmC,EACnC,IAA8B;;gBAE9B,IAAI,kBAAkB,GAEN,SAAS,CAAC;gBAC1B,MAAM,gBAAgB,GAAG,MAAA,IAAI,CAAC,OAAO,0CAAE,UAAU,CAAC;gBAClD,MAAM,QAAQ,GAAmC,CAC/C,WAA6C,EAC7C,YAAqB;oBAErB,kBAAkB,GAAG,WAAW,CAAC;oBACjC,gBAAgB,aAAhB,gBAAgB,uBAAhB,gBAAgB,CAAG,WAAW,EAAE,YAAY,CAAC,CAAC;iBAC/C,CAAC;gBACF,MAAM,WAAW,mCACZ,IAAI,KACP,OAAO,kCACF,IAAI,CAAC,OAAO,KACf,UAAU,EAAE,QAAQ,MAEvB,CAAC;gBACF,MAAM,YAAY,GAAG,MAAM,mBAAmB,CAAC,WAAW,EAAE,IAAI,CAAC,CAAC;gBAClE,OAAO;oBACL,YAAY;oBACZ,WAAW,EAAE;wBACX,UAAU,EAAE,kBAAmB,CAAC,MAAM;wBACtC,IAAI,EAAE,kBAAmB,CAAC,UAAU;wBACpC,OAAO,EAAE,kBAAmB,CAAC,OAAO,CAAC,MAAM,EAAE;qBAC9C;iBACF,CAAC;aACH,CAAA,CAAC;YAEF,MAAM,GAAG,GAAG,IAAI,OAAO,CACrB,aAAa,EACb,EAAE,iBAAiB,EAAE,cAAc,EAAE,OAAO,EAAE,EAC9CD,qBAAmB,CACpB,CAAC;YACF,OAAO,IAAIkB,iBAAS,CAAC,GAAG,EAAE;gBACxB,UAAU,EAAE,OAAO,aAAP,OAAO,uBAAP,OAAO,CAAE,UAAU;gBAC/B,YAAY,EAAE,OAAO,aAAP,OAAO,uBAAP,OAAO,CAAE,kBAAkB;aAC1C,CAAC,CAAC;SACJ;KAAA;;;;;;;;;IAUK,kBAAkB,CACtB,iBAAyB,EACzB,cAAsB,EACtB,OAA0C;;YAE1C,MAAM,MAAM,GAAG,MAAM,IAAI,CAAC,WAAW,CACnC,iBAAiB,EACjB,cAAc,EACd,OAAO,CACR,CAAC;YACF,OAAO,MAAM,CAAC,aAAa,EAAE,CAAC;SAC/B;KAAA;;;;;;IAOO,oBAAoB,CAC1B,iBAAyB,EACzB,OAAuD;QAEvD,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,iBAAiB,EAAE,OAAO,EAAE,EAC9BR,kCAAgC,CACjC,CAAC;KACH;;;;;IAMO,KAAK,CACX,OAAwC;QAExC,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CAAC,EAAE,OAAO,EAAE,EAAEzB,mBAAiB,CAAC,CAAC;KACzE;;;;;;;;;IAUD,uBAAuB,CACrB,iBAAyB,EACzB,cAAsB,EACtB,OAA2D;QAE3D,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,iBAAiB,EAAE,cAAc,EAAE,OAAO,EAAE,EAC9C,oCAAoC,CACrC,CAAC;KACH;;;;;;;;;;;;;IAcK,qCAAqC,CACzC,iBAAyB,EACzB,cAAsB,EACtB,6BAAqC,EACrC,yBAAoD,EACpD,OAAoE;;YAOpE,MAAM,mBAAmB,GAAG,CAC1B,IAAmC,EACnC,IAA8B;gBAE9B,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;aACrD,CAAA,CAAC;YACF,MAAM,aAAa,GAAG,CACpB,IAAmC,EACnC,IAA8B;;gBAE9B,IAAI,kBAAkB,GAEN,SAAS,CAAC;gBAC1B,MAAM,gBAAgB,GAAG,MAAA,IAAI,CAAC,OAAO,0CAAE,UAAU,CAAC;gBAClD,MAAM,QAAQ,GAAmC,CAC/C,WAA6C,EAC7C,YAAqB;oBAErB,kBAAkB,GAAG,WAAW,CAAC;oBACjC,gBAAgB,aAAhB,gBAAgB,uBAAhB,gBAAgB,CAAG,WAAW,EAAE,YAAY,CAAC,CAAC;iBAC/C,CAAC;gBACF,MAAM,WAAW,mCACZ,IAAI,KACP,OAAO,kCACF,IAAI,CAAC,OAAO,KACf,UAAU,EAAE,QAAQ,MAEvB,CAAC;gBACF,MAAM,YAAY,GAAG,MAAM,mBAAmB,CAAC,WAAW,EAAE,IAAI,CAAC,CAAC;gBAClE,OAAO;oBACL,YAAY;oBACZ,WAAW,EAAE;wBACX,UAAU,EAAE,kBAAmB,CAAC,MAAM;wBACtC,IAAI,EAAE,kBAAmB,CAAC,UAAU;wBACpC,OAAO,EAAE,kBAAmB,CAAC,OAAO,CAAC,MAAM,EAAE;qBAC9C;iBACF,CAAC;aACH,CAAA,CAAC;YAEF,MAAM,GAAG,GAAG,IAAI,OAAO,CACrB,aAAa,EACb;gBACE,iBAAiB;gBACjB,cAAc;gBACd,6BAA6B;gBAC7B,yBAAyB;gBACzB,OAAO;aACR,EACD,6CAA6C,CAC9C,CAAC;YACF,OAAO,IAAIiC,iBAAS,CAAC,GAAG,EAAE;gBACxB,UAAU,EAAE,OAAO,aAAP,OAAO,uBAAP,OAAO,CAAE,UAAU;gBAC/B,YAAY,EAAE,OAAO,aAAP,OAAO,uBAAP,OAAO,CAAE,kBAAkB;aAC1C,CAAC,CAAC;SACJ;KAAA;;;;;;;;;;;;;IAcK,4CAA4C,CAChD,iBAAyB,EACzB,cAAsB,EACtB,6BAAqC,EACrC,yBAAoD,EACpD,OAAoE;;YAEpE,MAAM,MAAM,GAAG,MAAM,IAAI,CAAC,qCAAqC,CAC7D,iBAAiB,EACjB,cAAc,EACd,6BAA6B,EAC7B,yBAAyB,EACzB,OAAO,CACR,CAAC;YACF,OAAO,MAAM,CAAC,aAAa,EAAE,CAAC;SAC/B;KAAA;;;;;;;;;;IAWD,6BAA6B,CAC3B,iBAAyB,EACzB,cAAsB,EACtB,6BAAqC,EACrC,OAAiE;QAEjE,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC;YACE,iBAAiB;YACjB,cAAc;YACd,6BAA6B;YAC7B,OAAO;SACR,EACD,0CAA0C,CAC3C,CAAC;KACH;;;;;;;;;;IAWK,qCAAqC,CACzC,iBAAyB,EACzB,cAAsB,EACtB,6BAAqC,EACrC,OAAoE;;YAEpE,MAAM,mBAAmB,GAAG,CAC1B,IAAmC,EACnC,IAA8B;gBAE9B,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;aACrD,CAAA,CAAC;YACF,MAAM,aAAa,GAAG,CACpB,IAAmC,EACnC,IAA8B;;gBAE9B,IAAI,kBAAkB,GAEN,SAAS,CAAC;gBAC1B,MAAM,gBAAgB,GAAG,MAAA,IAAI,CAAC,OAAO,0CAAE,UAAU,CAAC;gBAClD,MAAM,QAAQ,GAAmC,CAC/C,WAA6C,EAC7C,YAAqB;oBAErB,kBAAkB,GAAG,WAAW,CAAC;oBACjC,gBAAgB,aAAhB,gBAAgB,uBAAhB,gBAAgB,CAAG,WAAW,EAAE,YAAY,CAAC,CAAC;iBAC/C,CAAC;gBACF,MAAM,WAAW,mCACZ,IAAI,KACP,OAAO,kCACF,IAAI,CAAC,OAAO,KACf,UAAU,EAAE,QAAQ,MAEvB,CAAC;gBACF,MAAM,YAAY,GAAG,MAAM,mBAAmB,CAAC,WAAW,EAAE,IAAI,CAAC,CAAC;gBAClE,OAAO;oBACL,YAAY;oBACZ,WAAW,EAAE;wBACX,UAAU,EAAE,kBAAmB,CAAC,MAAM;wBACtC,IAAI,EAAE,kBAAmB,CAAC,UAAU;wBACpC,OAAO,EAAE,kBAAmB,CAAC,OAAO,CAAC,MAAM,EAAE;qBAC9C;iBACF,CAAC;aACH,CAAA,CAAC;YAEF,MAAM,GAAG,GAAG,IAAI,OAAO,CACrB,aAAa,EACb;gBACE,iBAAiB;gBACjB,cAAc;gBACd,6BAA6B;gBAC7B,OAAO;aACR,EACD,6CAA6C,CAC9C,CAAC;YACF,OAAO,IAAIA,iBAAS,CAAC,GAAG,EAAE;gBACxB,UAAU,EAAE,OAAO,aAAP,OAAO,uBAAP,OAAO,CAAE,UAAU;gBAC/B,YAAY,EAAE,OAAO,aAAP,OAAO,uBAAP,OAAO,CAAE,kBAAkB;aAC1C,CAAC,CAAC;SACJ;KAAA;;;;;;;;;;IAWK,4CAA4C,CAChD,iBAAyB,EACzB,cAAsB,EACtB,6BAAqC,EACrC,OAAoE;;YAEpE,MAAM,MAAM,GAAG,MAAM,IAAI,CAAC,qCAAqC,CAC7D,iBAAiB,EACjB,cAAc,EACd,6BAA6B,EAC7B,OAAO,CACR,CAAC;YACF,OAAO,MAAM,CAAC,aAAa,EAAE,CAAC;SAC/B;KAAA;;;;;;;;;IAUO,+BAA+B,CACrC,iBAAyB,EACzB,cAAsB,EACtB,OAAkE;QAElE,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,iBAAiB,EAAE,cAAc,EAAE,OAAO,EAAE,EAC9C,2CAA2C,CAC5C,CAAC;KACH;;;;;;;IAQO,wBAAwB,CAC9B,iBAAyB,EACzB,QAAgB,EAChB,OAA2D;QAE3D,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,iBAAiB,EAAE,QAAQ,EAAE,OAAO,EAAE,EACxCP,sCAAoC,CACrC,CAAC;KACH;;;;;;IAOO,SAAS,CACf,QAAgB,EAChB,OAA4C;QAE5C,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,QAAQ,EAAE,OAAO,EAAE,EACrBwC,uBAAqB,CACtB,CAAC;KACH;;;;;;;;;;;IAYO,mCAAmC,CACzC,iBAAyB,EACzB,cAAsB,EACtB,QAAgB,EAChB,OAAsE;QAEtE,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,iBAAiB,EAAE,cAAc,EAAE,QAAQ,EAAE,OAAO,EAAE,EACxD,+CAA+C,CAChD,CAAC;KACH;CACF;AACD;AACA,MAAMjE,YAAU,GAAGP,2BAA2B,CAAC,OAAO,cAAc,KAAK,CAAC,CAAC;AAE3E,MAAMmB,6BAA2B,GAA6B;IAC5D,IAAI,EACF,8HAA8H;IAChI,UAAU,EAAE,KAAK;IACjB,SAAS,EAAE;QACT,GAAG,EAAE;YACH,UAAU,EAAEkM,UAAkB;SAC/B;QACD,GAAG,EAAE;YACH,UAAU,EAAEA,UAAkB;SAC/B;QACD,GAAG,EAAE;YACH,UAAU,EAAEA,UAAkB;SAC/B;QACD,GAAG,EAAE;YACH,UAAU,EAAEA,UAAkB;SAC/B;QACD,OAAO,EAAE;YACP,UAAU,EAAEnN,UAAkB;SAC/B;KACF;IACD,WAAW,EAAEoN,UAAqB;IAClC,eAAe,EAAE,CAACpB,WAAsB,CAAC;IACzC,aAAa,EAAE;QACb9L,KAAgB;QAChBM,iBAA4B;QAC5BE,cAAyB;QACzB2M,cAAyB;KAC1B;IACD,gBAAgB,EAAE,CAAClN,MAAiB,EAAEQ,WAAsB,CAAC;IAC7D,SAAS,EAAE,MAAM;gBACjBN,YAAU;CACX,CAAC;AACF,MAAMa,qBAAmB,GAA6B;IACpD,IAAI,EACF,8HAA8H;IAChI,UAAU,EAAE,OAAO;IACnB,SAAS,EAAE;QACT,GAAG,EAAE;YACH,UAAU,EAAEiM,UAAkB;SAC/B;QACD,GAAG,EAAE;YACH,UAAU,EAAEA,UAAkB;SAC/B;QACD,GAAG,EAAE;YACH,UAAU,EAAEA,UAAkB;SAC/B;QACD,GAAG,EAAE;YACH,UAAU,EAAEA,UAAkB;SAC/B;QACD,OAAO,EAAE;YACP,UAAU,EAAEnN,UAAkB;SAC/B;KACF;IACD,WAAW,EAAEsN,WAAsB;IACnC,eAAe,EAAE,CAACtB,WAAsB,CAAC;IACzC,aAAa,EAAE;QACb9L,KAAgB;QAChBM,iBAA4B;QAC5BE,cAAyB;QACzB2M,cAAyB;KAC1B;IACD,gBAAgB,EAAE,CAAClN,MAAiB,EAAEQ,WAAsB,CAAC;IAC7D,SAAS,EAAE,MAAM;gBACjBN,YAAU;CACX,CAAC;AACF,MAAMe,kBAAgB,GAA6B;IACjD,IAAI,EACF,8HAA8H;IAChI,UAAU,EAAE,KAAK;IACjB,SAAS,EAAE;QACT,GAAG,EAAE;YACH,UAAU,EAAE+L,UAAkB;SAC/B;QACD,OAAO,EAAE;YACP,UAAU,EAAEnN,UAAkB;SAC/B;KACF;IACD,eAAe,EAAE,CAACgM,WAAsB,CAAC;IACzC,aAAa,EAAE;QACb9L,KAAgB;QAChBM,iBAA4B;QAC5BE,cAAyB;QACzB2M,cAAyB;KAC1B;IACD,gBAAgB,EAAE,CAAClN,MAAiB,CAAC;gBACrCE,YAAU;CACX,CAAC;AACF,MAAMc,qBAAmB,GAA6B;IACpD,IAAI,EACF,8HAA8H;IAChI,UAAU,EAAE,QAAQ;IACpB,SAAS,EAAE;QACT,GAAG,EAAE,EAAE;QACP,GAAG,EAAE,EAAE;QACP,GAAG,EAAE,EAAE;QACP,GAAG,EAAE,EAAE;QACP,OAAO,EAAE;YACP,UAAU,EAAEnB,UAAkB;SAC/B;KACF;IACD,eAAe,EAAE,CAACgM,WAAsB,CAAC;IACzC,aAAa,EAAE;QACb9L,KAAgB;QAChBM,iBAA4B;QAC5BE,cAAyB;QACzB2M,cAAyB;KAC1B;IACD,gBAAgB,EAAE,CAAClN,MAAiB,CAAC;gBACrCE,YAAU;CACX,CAAC;AACF,MAAMwB,kCAAgC,GAA6B;IACjE,IAAI,EACF,6GAA6G;IAC/G,UAAU,EAAE,KAAK;IACjB,SAAS,EAAE;QACT,GAAG,EAAE;YACH,UAAU,EAAE0L,cAAsB;SACnC;QACD,OAAO,EAAE;YACP,UAAU,EAAEvN,UAAkB;SAC/B;KACF;IACD,eAAe,EAAE,CAACgM,WAAsB,CAAC;IACzC,aAAa,EAAE;QACb9L,KAAgB;QAChBM,iBAA4B;QAC5BE,cAAyB;KAC1B;IACD,gBAAgB,EAAE,CAACP,MAAiB,CAAC;gBACrCE,YAAU;CACX,CAAC;AACF,MAAMD,mBAAiB,GAA6B;IAClD,IAAI,EACF,0EAA0E;IAC5E,UAAU,EAAE,KAAK;IACjB,SAAS,EAAE;QACT,GAAG,EAAE;YACH,UAAU,EAAEmN,cAAsB;SACnC;QACD,OAAO,EAAE;YACP,UAAU,EAAEvN,UAAkB;SAC/B;KACF;IACD,eAAe,EAAE,CAACgM,WAAsB,CAAC;IACzC,aAAa,EAAE,CAAC9L,KAAgB,EAAEQ,cAAyB,CAAC;IAC5D,gBAAgB,EAAE,CAACP,MAAiB,CAAC;gBACrCE,YAAU;CACX,CAAC;AACF,MAAM,oCAAoC,GAA6B;IACrE,IAAI,EACF,mJAAmJ;IACrJ,UAAU,EAAE,KAAK;IACjB,SAAS,EAAE;QACT,GAAG,EAAE;YACH,UAAU,EAAEmN,6BAAqC;SAClD;KACF;IACD,eAAe,EAAE,CAACxB,WAAsB,CAAC;IACzC,aAAa,EAAE;QACb9L,KAAgB;QAChBM,iBAA4B;QAC5BE,cAAyB;QACzB2M,cAAyB;KAC1B;IACD,gBAAgB,EAAE,CAAClN,MAAiB,CAAC;gBACrCE,YAAU;CACX,CAAC;AACF,MAAM,6CAA6C,GAA6B;IAC9E,IAAI,EACF,yLAAyL;IAC3L,UAAU,EAAE,KAAK;IACjB,SAAS,EAAE;QACT,GAAG,EAAE;YACH,UAAU,EAAEoN,yBAAiC;SAC9C;QACD,GAAG,EAAE;YACH,UAAU,EAAEA,yBAAiC;SAC9C;QACD,GAAG,EAAE;YACH,UAAU,EAAEA,yBAAiC;SAC9C;QACD,GAAG,EAAE;YACH,UAAU,EAAEA,yBAAiC;SAC9C;QACD,OAAO,EAAE;YACP,UAAU,EAAEzN,UAAkB;SAC/B;KACF;IACD,WAAW,EAAE0N,yBAAoC;IACjD,eAAe,EAAE,CAAC1B,WAAsB,CAAC;IACzC,aAAa,EAAE;QACb9L,KAAgB;QAChBM,iBAA4B;QAC5BE,cAAyB;QACzB2M,cAAyB;QACzBM,6BAAwC;KACzC;IACD,gBAAgB,EAAE,CAACxN,MAAiB,EAAEQ,WAAsB,CAAC;IAC7D,SAAS,EAAE,MAAM;gBACjBN,YAAU;CACX,CAAC;AACF,MAAM,0CAA0C,GAA6B;IAC3E,IAAI,EACF,yLAAyL;IAC3L,UAAU,EAAE,KAAK;IACjB,SAAS,EAAE;QACT,GAAG,EAAE;YACH,UAAU,EAAEoN,yBAAiC;SAC9C;QACD,OAAO,EAAE;YACP,UAAU,EAAEzN,UAAkB;SAC/B;KACF;IACD,eAAe,EAAE,CAACgM,WAAsB,CAAC;IACzC,aAAa,EAAE;QACb9L,KAAgB;QAChBM,iBAA4B;QAC5BE,cAAyB;QACzB2M,cAAyB;QACzBM,6BAAwC;KACzC;IACD,gBAAgB,EAAE,CAACxN,MAAiB,CAAC;gBACrCE,YAAU;CACX,CAAC;AACF,MAAM,6CAA6C,GAA6B;IAC9E,IAAI,EACF,yLAAyL;IAC3L,UAAU,EAAE,QAAQ;IACpB,SAAS,EAAE;QACT,GAAG,EAAE,EAAE;QACP,GAAG,EAAE,EAAE;QACP,GAAG,EAAE,EAAE;QACP,GAAG,EAAE,EAAE;QACP,OAAO,EAAE;YACP,UAAU,EAAEL,UAAkB;SAC/B;KACF;IACD,eAAe,EAAE,CAACgM,WAAsB,CAAC;IACzC,aAAa,EAAE;QACb9L,KAAgB;QAChBM,iBAA4B;QAC5BE,cAAyB;QACzB2M,cAAyB;QACzBM,6BAAwC;KACzC;IACD,gBAAgB,EAAE,CAACxN,MAAiB,CAAC;gBACrCE,YAAU;CACX,CAAC;AACF,MAAM,2CAA2C,GAA6B;IAC5E,IAAI,EACF,yJAAyJ;IAC3J,UAAU,EAAE,KAAK;IACjB,SAAS,EAAE;QACT,GAAG,EAAE;YACH,UAAU,EAAEuN,mCAA2C;SACxD;QACD,OAAO,EAAE;YACP,UAAU,EAAE5N,UAAkB;SAC/B;KACF;IACD,eAAe,EAAE,CAACgM,WAAsB,CAAC;IACzC,aAAa,EAAE;QACb9L,KAAgB;QAChBM,iBAA4B;QAC5BE,cAAyB;QACzB2M,cAAyB;KAC1B;IACD,gBAAgB,EAAE,CAAClN,MAAiB,CAAC;gBACrCE,YAAU;CACX,CAAC;AACF,MAAMyB,sCAAoC,GAA6B;IACrE,IAAI,EAAE,YAAY;IAClB,UAAU,EAAE,KAAK;IACjB,SAAS,EAAE;QACT,GAAG,EAAE;YACH,UAAU,EAAEyL,cAAsB;SACnC;QACD,OAAO,EAAE;YACP,UAAU,EAAEvN,UAAkB;SAC/B;KACF;IACD,eAAe,EAAE,CAACgM,WAAsB,CAAC;IACzC,aAAa,EAAE;QACb9L,KAAgB;QAChBM,iBAA4B;QAC5BE,cAAyB;QACzBM,QAAmB;KACpB;IACD,gBAAgB,EAAE,CAACb,MAAiB,CAAC;gBACrCE,YAAU;CACX,CAAC;AACF,MAAMiE,uBAAqB,GAA6B;IACtD,IAAI,EAAE,YAAY;IAClB,UAAU,EAAE,KAAK;IACjB,SAAS,EAAE;QACT,GAAG,EAAE;YACH,UAAU,EAAEiJ,cAAsB;SACnC;QACD,OAAO,EAAE;YACP,UAAU,EAAEvN,UAAkB;SAC/B;KACF;IACD,eAAe,EAAE,CAACgM,WAAsB,CAAC;IACzC,aAAa,EAAE;QACb9L,KAAgB;QAChBQ,cAAyB;QACzBM,QAAmB;KACpB;IACD,gBAAgB,EAAE,CAACb,MAAiB,CAAC;gBACrCE,YAAU;CACX,CAAC;AACF,MAAM,+CAA+C,GAA6B;IAChF,IAAI,EAAE,YAAY;IAClB,UAAU,EAAE,KAAK;IACjB,SAAS,EAAE;QACT,GAAG,EAAE;YACH,UAAU,EAAEuN,mCAA2C;SACxD;QACD,OAAO,EAAE;YACP,UAAU,EAAE5N,UAAkB;SAC/B;KACF;IACD,eAAe,EAAE,CAACgM,WAAsB,CAAC;IACzC,aAAa,EAAE;QACb9L,KAAgB;QAChBM,iBAA4B;QAC5BE,cAAyB;QACzBM,QAAmB;QACnBqM,cAAyB;KAC1B;IACD,gBAAgB,EAAE,CAAClN,MAAiB,CAAC;gBACrCE,YAAU;CACX,CAAC;;AClrCF;;;;;;;AA8BA;AACA;AACA,MAAa,8BAA8B;;;;;IAQzC,YAAY,MAA+B;QACzC,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;KACtB;;;;;;;;;IAUM,kBAAkB,CACvB,iBAAyB,EACzB,0BAAkC,EAClC,kBAA0B,EAC1B,OAA0D;QAE1D,MAAM,IAAI,GAAG,IAAI,CAAC,2BAA2B,CAC3C,iBAAiB,EACjB,0BAA0B,EAC1B,kBAAkB,EAClB,OAAO,CACR,CAAC;QACF,OAAO;YACL,IAAI;gBACF,OAAO,IAAI,CAAC,IAAI,EAAE,CAAC;aACpB;YACD,CAAC,MAAM,CAAC,aAAa,CAAC;gBACpB,OAAO,IAAI,CAAC;aACb;YACD,MAAM,EAAE;gBACN,OAAO,IAAI,CAAC,4BAA4B,CACtC,iBAAiB,EACjB,0BAA0B,EAC1B,kBAAkB,EAClB,OAAO,CACR,CAAC;aACH;SACF,CAAC;KACH;IAEc,4BAA4B,CACzC,iBAAyB,EACzB,0BAAkC,EAClC,kBAA0B,EAC1B,OAA0D;;YAE1D,IAAI,MAAM,GAAG,oBAAM,IAAI,CAAC,mBAAmB,CACzC,iBAAiB,EACjB,0BAA0B,EAC1B,kBAAkB,EAClB,OAAO,CACR,CAAA,CAAC;YACF,0BAAM,MAAM,CAAC,KAAK,IAAI,EAAE,CAAA,CAAC;YACzB,IAAI,iBAAiB,GAAG,MAAM,CAAC,QAAQ,CAAC;YACxC,OAAO,iBAAiB,EAAE;gBACxB,MAAM,GAAG,oBAAM,IAAI,CAAC,uBAAuB,CACzC,iBAAiB,EACjB,0BAA0B,EAC1B,kBAAkB,EAClB,iBAAiB,EACjB,OAAO,CACR,CAAA,CAAC;gBACF,iBAAiB,GAAG,MAAM,CAAC,QAAQ,CAAC;gBACpC,0BAAM,MAAM,CAAC,KAAK,IAAI,EAAE,CAAA,CAAC;aAC1B;SACF;KAAA;IAEc,2BAA2B,CACxC,iBAAyB,EACzB,0BAAkC,EAClC,kBAA0B,EAC1B,OAA0D;;;;gBAE1D,KAAyB,IAAA,KAAAT,oBAAA,IAAI,CAAC,4BAA4B,CACxD,iBAAiB,EACjB,0BAA0B,EAC1B,kBAAkB,EAClB,OAAO,CACR,CAAA,IAAA;oBALU,MAAM,IAAI,WAAA,CAAA;oBAMnB,oBAAA,OAAOC,uBAAAD,oBAAA,IAAI,CAAA,CAAA,CAAA,CAAC;iBACb;;;;;;;;;SACF;KAAA;;;;;;;;;;IAWD,GAAG,CACD,iBAAyB,EACzB,0BAAkC,EAClC,kBAA0B,EAC1B,oBAA4B,EAC5B,OAA2C;QAE3C,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC;YACE,iBAAiB;YACjB,0BAA0B;YAC1B,kBAAkB;YAClB,oBAAoB;YACpB,OAAO;SACR,EACDwB,kBAAgB,CACjB,CAAC;KACH;;;;;;;;;IAUO,mBAAmB,CACzB,iBAAyB,EACzB,0BAAkC,EAClC,kBAA0B,EAC1B,OAA0D;QAE1D,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC;YACE,iBAAiB;YACjB,0BAA0B;YAC1B,kBAAkB;YAClB,OAAO;SACR,EACD,+BAA+B,CAChC,CAAC;KACH;;;;;;;;;;;IAYK,gBAAgB,CACpB,iBAAyB,EACzB,0BAAkC,EAClC,kBAA0B,EAC1B,oBAA4B,EAC5B,eAAgC,EAChC,OAAmD;;YAOnD,MAAM,mBAAmB,GAAG,CAC1B,IAAmC,EACnC,IAA8B;gBAE9B,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;aACrD,CAAA,CAAC;YACF,MAAM,aAAa,GAAG,CACpB,IAAmC,EACnC,IAA8B;;gBAE9B,IAAI,kBAAkB,GAEN,SAAS,CAAC;gBAC1B,MAAM,gBAAgB,GAAG,MAAA,IAAI,CAAC,OAAO,0CAAE,UAAU,CAAC;gBAClD,MAAM,QAAQ,GAAmC,CAC/C,WAA6C,EAC7C,YAAqB;oBAErB,kBAAkB,GAAG,WAAW,CAAC;oBACjC,gBAAgB,aAAhB,gBAAgB,uBAAhB,gBAAgB,CAAG,WAAW,EAAE,YAAY,CAAC,CAAC;iBAC/C,CAAC;gBACF,MAAM,WAAW,mCACZ,IAAI,KACP,OAAO,kCACF,IAAI,CAAC,OAAO,KACf,UAAU,EAAE,QAAQ,MAEvB,CAAC;gBACF,MAAM,YAAY,GAAG,MAAM,mBAAmB,CAAC,WAAW,EAAE,IAAI,CAAC,CAAC;gBAClE,OAAO;oBACL,YAAY;oBACZ,WAAW,EAAE;wBACX,UAAU,EAAE,kBAAmB,CAAC,MAAM;wBACtC,IAAI,EAAE,kBAAmB,CAAC,UAAU;wBACpC,OAAO,EAAE,kBAAmB,CAAC,OAAO,CAAC,MAAM,EAAE;qBAC9C;iBACF,CAAC;aACH,CAAA,CAAC;YAEF,MAAM,GAAG,GAAG,IAAI,OAAO,CACrB,aAAa,EACb;gBACE,iBAAiB;gBACjB,0BAA0B;gBAC1B,kBAAkB;gBAClB,oBAAoB;gBACpB,eAAe;gBACf,OAAO;aACR,EACDkL,0BAAwB,CACzB,CAAC;YACF,OAAO,IAAIjK,iBAAS,CAAC,GAAG,EAAE;gBACxB,UAAU,EAAE,OAAO,aAAP,OAAO,uBAAP,OAAO,CAAE,UAAU;gBAC/B,YAAY,EAAE,OAAO,aAAP,OAAO,uBAAP,OAAO,CAAE,kBAAkB;gBACzC,yBAAyB,EAAE,UAAU;aACtC,CAAC,CAAC;SACJ;KAAA;;;;;;;;;;;IAYK,uBAAuB,CAC3B,iBAAyB,EACzB,0BAAkC,EAClC,kBAA0B,EAC1B,oBAA4B,EAC5B,eAAgC,EAChC,OAAmD;;YAEnD,MAAM,MAAM,GAAG,MAAM,IAAI,CAAC,gBAAgB,CACxC,iBAAiB,EACjB,0BAA0B,EAC1B,kBAAkB,EAClB,oBAAoB,EACpB,eAAe,EACf,OAAO,CACR,CAAC;YACF,OAAO,MAAM,CAAC,aAAa,EAAE,CAAC;SAC/B;KAAA;;;;;;;;;;IAWK,iBAAiB,CACrB,iBAAyB,EACzB,0BAAkC,EAClC,kBAA0B,EAC1B,oBAA4B,EAC5B,OAAoD;;YAEpD,MAAM,mBAAmB,GAAG,CAC1B,IAAmC,EACnC,IAA8B;gBAE9B,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;aACrD,CAAA,CAAC;YACF,MAAM,aAAa,GAAG,CACpB,IAAmC,EACnC,IAA8B;;gBAE9B,IAAI,kBAAkB,GAEN,SAAS,CAAC;gBAC1B,MAAM,gBAAgB,GAAG,MAAA,IAAI,CAAC,OAAO,0CAAE,UAAU,CAAC;gBAClD,MAAM,QAAQ,GAAmC,CAC/C,WAA6C,EAC7C,YAAqB;oBAErB,kBAAkB,GAAG,WAAW,CAAC;oBACjC,gBAAgB,aAAhB,gBAAgB,uBAAhB,gBAAgB,CAAG,WAAW,EAAE,YAAY,CAAC,CAAC;iBAC/C,CAAC;gBACF,MAAM,WAAW,mCACZ,IAAI,KACP,OAAO,kCACF,IAAI,CAAC,OAAO,KACf,UAAU,EAAE,QAAQ,MAEvB,CAAC;gBACF,MAAM,YAAY,GAAG,MAAM,mBAAmB,CAAC,WAAW,EAAE,IAAI,CAAC,CAAC;gBAClE,OAAO;oBACL,YAAY;oBACZ,WAAW,EAAE;wBACX,UAAU,EAAE,kBAAmB,CAAC,MAAM;wBACtC,IAAI,EAAE,kBAAmB,CAAC,UAAU;wBACpC,OAAO,EAAE,kBAAmB,CAAC,OAAO,CAAC,MAAM,EAAE;qBAC9C;iBACF,CAAC;aACH,CAAA,CAAC;YAEF,MAAM,GAAG,GAAG,IAAI,OAAO,CACrB,aAAa,EACb;gBACE,iBAAiB;gBACjB,0BAA0B;gBAC1B,kBAAkB;gBAClB,oBAAoB;gBACpB,OAAO;aACR,EACDkK,2BAAyB,CAC1B,CAAC;YACF,OAAO,IAAIlK,iBAAS,CAAC,GAAG,EAAE;gBACxB,UAAU,EAAE,OAAO,aAAP,OAAO,uBAAP,OAAO,CAAE,UAAU;gBAC/B,YAAY,EAAE,OAAO,aAAP,OAAO,uBAAP,OAAO,CAAE,kBAAkB;gBACzC,yBAAyB,EAAE,UAAU;aACtC,CAAC,CAAC;SACJ;KAAA;;;;;;;;;;IAWK,wBAAwB,CAC5B,iBAAyB,EACzB,0BAAkC,EAClC,kBAA0B,EAC1B,oBAA4B,EAC5B,OAAoD;;YAEpD,MAAM,MAAM,GAAG,MAAM,IAAI,CAAC,iBAAiB,CACzC,iBAAiB,EACjB,0BAA0B,EAC1B,kBAAkB,EAClB,oBAAoB,EACpB,OAAO,CACR,CAAC;YACF,OAAO,MAAM,CAAC,aAAa,EAAE,CAAC;SAC/B;KAAA;;;;;;;;;;IAWO,uBAAuB,CAC7B,iBAAyB,EACzB,0BAAkC,EAClC,kBAA0B,EAC1B,QAAgB,EAChB,OAA8D;QAE9D,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC;YACE,iBAAiB;YACjB,0BAA0B;YAC1B,kBAAkB;YAClB,QAAQ;YACR,OAAO;SACR,EACD,mCAAmC,CACpC,CAAC;KACH;CACF;AACD;AACA,MAAMhC,YAAU,GAAGP,2BAA2B,CAAC,OAAO,cAAc,KAAK,CAAC,CAAC;AAE3E,MAAMsB,kBAAgB,GAA6B;IACjD,IAAI,EACF,iOAAiO;IACnO,UAAU,EAAE,KAAK;IACjB,SAAS,EAAE;QACT,GAAG,EAAE;YACH,UAAU,EAAEyM,gBAAwB;SACrC;QACD,OAAO,EAAE;YACP,UAAU,EAAE7N,UAAkB;SAC/B;KACF;IACD,eAAe,EAAE,CAACgM,WAAsB,CAAC;IACzC,aAAa,EAAE;QACb9L,KAAgB;QAChBM,iBAA4B;QAC5BE,cAAyB;QACzByH,0BAAqC;QACrC2F,kBAA6B;QAC7BC,oBAA+B;KAChC;IACD,gBAAgB,EAAE,CAAC5N,MAAiB,CAAC;gBACrCE,YAAU;CACX,CAAC;AACF,MAAM,+BAA+B,GAA6B;IAChE,IAAI,EACF,0MAA0M;IAC5M,UAAU,EAAE,KAAK;IACjB,SAAS,EAAE;QACT,GAAG,EAAE;YACH,UAAU,EAAE2N,oBAA4B;SACzC;QACD,OAAO,EAAE;YACP,UAAU,EAAEhO,UAAkB;SAC/B;KACF;IACD,eAAe,EAAE,CAACgM,WAAsB,CAAC;IACzC,aAAa,EAAE;QACb9L,KAAgB;QAChBM,iBAA4B;QAC5BE,cAAyB;QACzByH,0BAAqC;QACrC2F,kBAA6B;KAC9B;IACD,gBAAgB,EAAE,CAAC3N,MAAiB,CAAC;gBACrCE,YAAU;CACX,CAAC;AACF,MAAMiM,0BAAwB,GAA6B;IACzD,IAAI,EACF,gPAAgP;IAClP,UAAU,EAAE,MAAM;IAClB,SAAS,EAAE;QACT,GAAG,EAAE;YACH,UAAU,EAAEF,SAAiB;SAC9B;QACD,GAAG,EAAE;YACH,UAAU,EAAEA,SAAiB;SAC9B;QACD,GAAG,EAAE;YACH,UAAU,EAAEA,SAAiB;SAC9B;QACD,GAAG,EAAE;YACH,UAAU,EAAEA,SAAiB;SAC9B;QACD,OAAO,EAAE;YACP,UAAU,EAAEpM,UAAkB;SAC/B;KACF;IACD,WAAW,EAAEqM,eAA0B;IACvC,eAAe,EAAE,CAACL,WAAsB,CAAC;IACzC,aAAa,EAAE;QACb9L,KAAgB;QAChBM,iBAA4B;QAC5BE,cAAyB;QACzByH,0BAAqC;QACrC2F,kBAA6B;QAC7BC,oBAA+B;KAChC;IACD,gBAAgB,EAAE,CAAC5N,MAAiB,EAAEQ,WAAsB,CAAC;IAC7D,SAAS,EAAE,MAAM;gBACjBN,YAAU;CACX,CAAC;AACF,MAAMkM,2BAAyB,GAA6B;IAC1D,IAAI,EACF,8OAA8O;IAChP,UAAU,EAAE,MAAM;IAClB,SAAS,EAAE;QACT,GAAG,EAAE,EAAE;QACP,GAAG,EAAE,EAAE;QACP,GAAG,EAAE,EAAE;QACP,GAAG,EAAE,EAAE;QACP,OAAO,EAAE;YACP,UAAU,EAAEvM,UAAkB;SAC/B;KACF;IACD,eAAe,EAAE,CAACgM,WAAsB,CAAC;IACzC,aAAa,EAAE;QACb9L,KAAgB;QAChBM,iBAA4B;QAC5BE,cAAyB;QACzByH,0BAAqC;QACrC2F,kBAA6B;QAC7BC,oBAA+B;KAChC;IACD,gBAAgB,EAAE,CAAC5N,MAAiB,CAAC;gBACrCE,YAAU;CACX,CAAC;AACF,MAAM,mCAAmC,GAA6B;IACpE,IAAI,EAAE,YAAY;IAClB,UAAU,EAAE,KAAK;IACjB,SAAS,EAAE;QACT,GAAG,EAAE;YACH,UAAU,EAAE2N,oBAA4B;SACzC;QACD,OAAO,EAAE;YACP,UAAU,EAAEhO,UAAkB;SAC/B;KACF;IACD,eAAe,EAAE,CAACgM,WAAsB,CAAC;IACzC,aAAa,EAAE;QACb9L,KAAgB;QAChBM,iBAA4B;QAC5BE,cAAyB;QACzBM,QAAmB;QACnBmH,0BAAqC;QACrC2F,kBAA6B;KAC9B;IACD,gBAAgB,EAAE,CAAC3N,MAAiB,CAAC;gBACrCE,YAAU;CACX,CAAC;;ACniBF;;;;;;;AAoCA;AACA;AACA,MAAa,aAAa;;;;;IAOxB,YAAY,MAA+B;QACzC,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;KACtB;;;;;;IAOM,mBAAmB,CACxB,iBAAyB,EACzB,OAAoD;QAEpD,MAAM,IAAI,GAAG,IAAI,CAAC,4BAA4B,CAAC,iBAAiB,EAAE,OAAO,CAAC,CAAC;QAC3E,OAAO;YACL,IAAI;gBACF,OAAO,IAAI,CAAC,IAAI,EAAE,CAAC;aACpB;YACD,CAAC,MAAM,CAAC,aAAa,CAAC;gBACpB,OAAO,IAAI,CAAC;aACb;YACD,MAAM,EAAE;gBACN,OAAO,IAAI,CAAC,6BAA6B,CAAC,iBAAiB,EAAE,OAAO,CAAC,CAAC;aACvE;SACF,CAAC;KACH;IAEc,6BAA6B,CAC1C,iBAAyB,EACzB,OAAoD;;YAEpD,IAAI,MAAM,GAAG,oBAAM,IAAI,CAAC,oBAAoB,CAAC,iBAAiB,EAAE,OAAO,CAAC,CAAA,CAAC;YACzE,0BAAM,MAAM,CAAC,KAAK,IAAI,EAAE,CAAA,CAAC;YACzB,IAAI,iBAAiB,GAAG,MAAM,CAAC,QAAQ,CAAC;YACxC,OAAO,iBAAiB,EAAE;gBACxB,MAAM,GAAG,oBAAM,IAAI,CAAC,wBAAwB,CAC1C,iBAAiB,EACjB,iBAAiB,EACjB,OAAO,CACR,CAAA,CAAC;gBACF,iBAAiB,GAAG,MAAM,CAAC,QAAQ,CAAC;gBACpC,0BAAM,MAAM,CAAC,KAAK,IAAI,EAAE,CAAA,CAAC;aAC1B;SACF;KAAA;IAEc,4BAA4B,CACzC,iBAAyB,EACzB,OAAoD;;;;gBAEpD,KAAyB,IAAA,KAAAT,oBAAA,IAAI,CAAC,6BAA6B,CACzD,iBAAiB,EACjB,OAAO,CACR,CAAA,IAAA;oBAHU,MAAM,IAAI,WAAA,CAAA;oBAInB,oBAAA,OAAOC,uBAAAD,oBAAA,IAAI,CAAA,CAAA,CAAA,CAAC;iBACb;;;;;;;;;SACF;KAAA;;;;;IAMM,IAAI,CACT,OAAqC;QAErC,MAAM,IAAI,GAAG,IAAI,CAAC,aAAa,CAAC,OAAO,CAAC,CAAC;QACzC,OAAO;YACL,IAAI;gBACF,OAAO,IAAI,CAAC,IAAI,EAAE,CAAC;aACpB;YACD,CAAC,MAAM,CAAC,aAAa,CAAC;gBACpB,OAAO,IAAI,CAAC;aACb;YACD,MAAM,EAAE;gBACN,OAAO,IAAI,CAAC,cAAc,CAAC,OAAO,CAAC,CAAC;aACrC;SACF,CAAC;KACH;IAEc,cAAc,CAC3B,OAAqC;;YAErC,IAAI,MAAM,GAAG,oBAAM,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,CAAA,CAAC;YACvC,0BAAM,MAAM,CAAC,KAAK,IAAI,EAAE,CAAA,CAAC;YACzB,IAAI,iBAAiB,GAAG,MAAM,CAAC,QAAQ,CAAC;YACxC,OAAO,iBAAiB,EAAE;gBACxB,MAAM,GAAG,oBAAM,IAAI,CAAC,SAAS,CAAC,iBAAiB,EAAE,OAAO,CAAC,CAAA,CAAC;gBAC1D,iBAAiB,GAAG,MAAM,CAAC,QAAQ,CAAC;gBACpC,0BAAM,MAAM,CAAC,KAAK,IAAI,EAAE,CAAA,CAAC;aAC1B;SACF;KAAA;IAEc,aAAa,CAC1B,OAAqC;;;;gBAErC,KAAyB,IAAA,KAAAA,oBAAA,IAAI,CAAC,cAAc,CAAC,OAAO,CAAC,CAAA,IAAA;oBAA1C,MAAM,IAAI,WAAA,CAAA;oBACnB,oBAAA,OAAOC,uBAAAD,oBAAA,IAAI,CAAA,CAAA,CAAA,CAAC;iBACb;;;;;;;;;SACF;KAAA;;;;;;;;;IAUK,mBAAmB,CACvB,iBAAyB,EACzB,WAAmB,EACnB,OAAgB,EAChB,OAA+C;;YAO/C,MAAM,mBAAmB,GAAG,CAC1B,IAAmC,EACnC,IAA8B;gBAE9B,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;aACrD,CAAA,CAAC;YACF,MAAM,aAAa,GAAG,CACpB,IAAmC,EACnC,IAA8B;;gBAE9B,IAAI,kBAAkB,GAEN,SAAS,CAAC;gBAC1B,MAAM,gBAAgB,GAAG,MAAA,IAAI,CAAC,OAAO,0CAAE,UAAU,CAAC;gBAClD,MAAM,QAAQ,GAAmC,CAC/C,WAA6C,EAC7C,YAAqB;oBAErB,kBAAkB,GAAG,WAAW,CAAC;oBACjC,gBAAgB,aAAhB,gBAAgB,uBAAhB,gBAAgB,CAAG,WAAW,EAAE,YAAY,CAAC,CAAC;iBAC/C,CAAC;gBACF,MAAM,WAAW,mCACZ,IAAI,KACP,OAAO,kCACF,IAAI,CAAC,OAAO,KACf,UAAU,EAAE,QAAQ,MAEvB,CAAC;gBACF,MAAM,YAAY,GAAG,MAAM,mBAAmB,CAAC,WAAW,EAAE,IAAI,CAAC,CAAC;gBAClE,OAAO;oBACL,YAAY;oBACZ,WAAW,EAAE;wBACX,UAAU,EAAE,kBAAmB,CAAC,MAAM;wBACtC,IAAI,EAAE,kBAAmB,CAAC,UAAU;wBACpC,OAAO,EAAE,kBAAmB,CAAC,OAAO,CAAC,MAAM,EAAE;qBAC9C;iBACF,CAAC;aACH,CAAA,CAAC;YAEF,MAAM,GAAG,GAAG,IAAI,OAAO,CACrB,aAAa,EACb,EAAE,iBAAiB,EAAE,WAAW,EAAE,OAAO,EAAE,OAAO,EAAE,EACpDqB,6BAA2B,CAC5B,CAAC;YACF,OAAO,IAAIoB,iBAAS,CAAC,GAAG,EAAE;gBACxB,UAAU,EAAE,OAAO,aAAP,OAAO,uBAAP,OAAO,CAAE,UAAU;gBAC/B,YAAY,EAAE,OAAO,aAAP,OAAO,uBAAP,OAAO,CAAE,kBAAkB;aAC1C,CAAC,CAAC;SACJ;KAAA;;;;;;;;;IAUK,0BAA0B,CAC9B,iBAAyB,EACzB,WAAmB,EACnB,OAAgB,EAChB,OAA+C;;YAE/C,MAAM,MAAM,GAAG,MAAM,IAAI,CAAC,mBAAmB,CAC3C,iBAAiB,EACjB,WAAW,EACX,OAAO,EACP,OAAO,CACR,CAAC;YACF,OAAO,MAAM,CAAC,aAAa,EAAE,CAAC;SAC/B;KAAA;;;;;;;;;IAUK,WAAW,CACf,iBAAyB,EACzB,WAAmB,EACnB,OAAsB,EACtB,OAAuC;;YAOvC,MAAM,mBAAmB,GAAG,CAC1B,IAAmC,EACnC,IAA8B;gBAE9B,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;aACrD,CAAA,CAAC;YACF,MAAM,aAAa,GAAG,CACpB,IAAmC,EACnC,IAA8B;;gBAE9B,IAAI,kBAAkB,GAEN,SAAS,CAAC;gBAC1B,MAAM,gBAAgB,GAAG,MAAA,IAAI,CAAC,OAAO,0CAAE,UAAU,CAAC;gBAClD,MAAM,QAAQ,GAAmC,CAC/C,WAA6C,EAC7C,YAAqB;oBAErB,kBAAkB,GAAG,WAAW,CAAC;oBACjC,gBAAgB,aAAhB,gBAAgB,uBAAhB,gBAAgB,CAAG,WAAW,EAAE,YAAY,CAAC,CAAC;iBAC/C,CAAC;gBACF,MAAM,WAAW,mCACZ,IAAI,KACP,OAAO,kCACF,IAAI,CAAC,OAAO,KACf,UAAU,EAAE,QAAQ,MAEvB,CAAC;gBACF,MAAM,YAAY,GAAG,MAAM,mBAAmB,CAAC,WAAW,EAAE,IAAI,CAAC,CAAC;gBAClE,OAAO;oBACL,YAAY;oBACZ,WAAW,EAAE;wBACX,UAAU,EAAE,kBAAmB,CAAC,MAAM;wBACtC,IAAI,EAAE,kBAAmB,CAAC,UAAU;wBACpC,OAAO,EAAE,kBAAmB,CAAC,OAAO,CAAC,MAAM,EAAE;qBAC9C;iBACF,CAAC;aACH,CAAA,CAAC;YAEF,MAAM,GAAG,GAAG,IAAI,OAAO,CACrB,aAAa,EACb,EAAE,iBAAiB,EAAE,WAAW,EAAE,OAAO,EAAE,OAAO,EAAE,EACpDnB,qBAAmB,CACpB,CAAC;YACF,OAAO,IAAImB,iBAAS,CAAC,GAAG,EAAE;gBACxB,UAAU,EAAE,OAAO,aAAP,OAAO,uBAAP,OAAO,CAAE,UAAU;gBAC/B,YAAY,EAAE,OAAO,aAAP,OAAO,uBAAP,OAAO,CAAE,kBAAkB;aAC1C,CAAC,CAAC;SACJ;KAAA;;;;;;;;;IAUK,kBAAkB,CACtB,iBAAyB,EACzB,WAAmB,EACnB,OAAsB,EACtB,OAAuC;;YAEvC,MAAM,MAAM,GAAG,MAAM,IAAI,CAAC,WAAW,CACnC,iBAAiB,EACjB,WAAW,EACX,OAAO,EACP,OAAO,CACR,CAAC;YACF,OAAO,MAAM,CAAC,aAAa,EAAE,CAAC;SAC/B;KAAA;;;;;;;IAQD,GAAG,CACD,iBAAyB,EACzB,WAAmB,EACnB,OAAoC;QAEpC,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,iBAAiB,EAAE,WAAW,EAAE,OAAO,EAAE,EAC3CjB,kBAAgB,CACjB,CAAC;KACH;;;;;;;IAQK,WAAW,CACf,iBAAyB,EACzB,WAAmB,EACnB,OAAuC;;YAEvC,MAAM,mBAAmB,GAAG,CAC1B,IAAmC,EACnC,IAA8B;gBAE9B,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;aACrD,CAAA,CAAC;YACF,MAAM,aAAa,GAAG,CACpB,IAAmC,EACnC,IAA8B;;gBAE9B,IAAI,kBAAkB,GAEN,SAAS,CAAC;gBAC1B,MAAM,gBAAgB,GAAG,MAAA,IAAI,CAAC,OAAO,0CAAE,UAAU,CAAC;gBAClD,MAAM,QAAQ,GAAmC,CAC/C,WAA6C,EAC7C,YAAqB;oBAErB,kBAAkB,GAAG,WAAW,CAAC;oBACjC,gBAAgB,aAAhB,gBAAgB,uBAAhB,gBAAgB,CAAG,WAAW,EAAE,YAAY,CAAC,CAAC;iBAC/C,CAAC;gBACF,MAAM,WAAW,mCACZ,IAAI,KACP,OAAO,kCACF,IAAI,CAAC,OAAO,KACf,UAAU,EAAE,QAAQ,MAEvB,CAAC;gBACF,MAAM,YAAY,GAAG,MAAM,mBAAmB,CAAC,WAAW,EAAE,IAAI,CAAC,CAAC;gBAClE,OAAO;oBACL,YAAY;oBACZ,WAAW,EAAE;wBACX,UAAU,EAAE,kBAAmB,CAAC,MAAM;wBACtC,IAAI,EAAE,kBAAmB,CAAC,UAAU;wBACpC,OAAO,EAAE,kBAAmB,CAAC,OAAO,CAAC,MAAM,EAAE;qBAC9C;iBACF,CAAC;aACH,CAAA,CAAC;YAEF,MAAM,GAAG,GAAG,IAAI,OAAO,CACrB,aAAa,EACb,EAAE,iBAAiB,EAAE,WAAW,EAAE,OAAO,EAAE,EAC3CD,qBAAmB,CACpB,CAAC;YACF,OAAO,IAAIkB,iBAAS,CAAC,GAAG,EAAE;gBACxB,UAAU,EAAE,OAAO,aAAP,OAAO,uBAAP,OAAO,CAAE,UAAU;gBAC/B,YAAY,EAAE,OAAO,aAAP,OAAO,uBAAP,OAAO,CAAE,kBAAkB;aAC1C,CAAC,CAAC;SACJ;KAAA;;;;;;;IAQK,kBAAkB,CACtB,iBAAyB,EACzB,WAAmB,EACnB,OAAuC;;YAEvC,MAAM,MAAM,GAAG,MAAM,IAAI,CAAC,WAAW,CACnC,iBAAiB,EACjB,WAAW,EACX,OAAO,CACR,CAAC;YACF,OAAO,MAAM,CAAC,aAAa,EAAE,CAAC;SAC/B;KAAA;;;;;;IAOO,oBAAoB,CAC1B,iBAAyB,EACzB,OAAoD;QAEpD,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,iBAAiB,EAAE,OAAO,EAAE,EAC9BR,kCAAgC,CACjC,CAAC;KACH;;;;;IAMO,KAAK,CACX,OAAqC;QAErC,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CAAC,EAAE,OAAO,EAAE,EAAEzB,mBAAiB,CAAC,CAAC;KACzE;;;;;;;IAQO,wBAAwB,CAC9B,iBAAyB,EACzB,QAAgB,EAChB,OAAwD;QAExD,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,iBAAiB,EAAE,QAAQ,EAAE,OAAO,EAAE,EACxC0B,sCAAoC,CACrC,CAAC;KACH;;;;;;IAOO,SAAS,CACf,QAAgB,EAChB,OAAyC;QAEzC,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,QAAQ,EAAE,OAAO,EAAE,EACrBwC,uBAAqB,CACtB,CAAC;KACH;CACF;AACD;AACA,MAAMjE,YAAU,GAAGP,2BAA2B,CAAC,OAAO,cAAc,KAAK,CAAC,CAAC;AAE3E,MAAMmB,6BAA2B,GAA6B;IAC5D,IAAI,EACF,wHAAwH;IAC1H,UAAU,EAAE,KAAK;IACjB,SAAS,EAAE;QACT,GAAG,EAAE;YACH,UAAU,EAAEgN,OAAe;SAC5B;QACD,GAAG,EAAE;YACH,UAAU,EAAEA,OAAe;SAC5B;QACD,GAAG,EAAE;YACH,UAAU,EAAEA,OAAe;SAC5B;QACD,GAAG,EAAE;YACH,UAAU,EAAEA,OAAe;SAC5B;QACD,OAAO,EAAE;YACP,UAAU,EAAEjO,UAAkB;SAC/B;KACF;IACD,WAAW,EAAEkO,OAAkB;IAC/B,eAAe,EAAE,CAACC,WAAsB,CAAC;IACzC,aAAa,EAAE;QACbjO,KAAgB;QAChBM,iBAA4B;QAC5BE,cAAyB;QACzB0N,WAAsB;KACvB;IACD,gBAAgB,EAAE,CAACjO,MAAiB,EAAEQ,WAAsB,CAAC;IAC7D,SAAS,EAAE,MAAM;gBACjBN,YAAU;CACX,CAAC;AACF,MAAMa,qBAAmB,GAA6B;IACpD,IAAI,EACF,wHAAwH;IAC1H,UAAU,EAAE,OAAO;IACnB,SAAS,EAAE;QACT,GAAG,EAAE;YACH,UAAU,EAAE+M,OAAe;SAC5B;QACD,GAAG,EAAE;YACH,UAAU,EAAEA,OAAe;SAC5B;QACD,GAAG,EAAE;YACH,UAAU,EAAEA,OAAe;SAC5B;QACD,GAAG,EAAE;YACH,UAAU,EAAEA,OAAe;SAC5B;QACD,OAAO,EAAE;YACP,UAAU,EAAEjO,UAAkB;SAC/B;KACF;IACD,WAAW,EAAEqO,QAAmB;IAChC,eAAe,EAAE,CAACF,WAAsB,CAAC;IACzC,aAAa,EAAE;QACbjO,KAAgB;QAChBM,iBAA4B;QAC5BE,cAAyB;QACzB0N,WAAsB;KACvB;IACD,gBAAgB,EAAE,CAACjO,MAAiB,EAAEQ,WAAsB,CAAC;IAC7D,SAAS,EAAE,MAAM;gBACjBN,YAAU;CACX,CAAC;AACF,MAAMe,kBAAgB,GAA6B;IACjD,IAAI,EACF,wHAAwH;IAC1H,UAAU,EAAE,KAAK;IACjB,SAAS,EAAE;QACT,GAAG,EAAE;YACH,UAAU,EAAE6M,OAAe;SAC5B;QACD,OAAO,EAAE;YACP,UAAU,EAAEjO,UAAkB;SAC/B;KACF;IACD,eAAe,EAAE;QACfmO,WAAsB;QACtBG,OAAkB;QAClBC,OAAkB;KACnB;IACD,aAAa,EAAE;QACbrO,KAAgB;QAChBM,iBAA4B;QAC5BE,cAAyB;QACzB0N,WAAsB;KACvB;IACD,gBAAgB,EAAE,CAACjO,MAAiB,CAAC;gBACrCE,YAAU;CACX,CAAC;AACF,MAAMc,qBAAmB,GAA6B;IACpD,IAAI,EACF,wHAAwH;IAC1H,UAAU,EAAE,QAAQ;IACpB,SAAS,EAAE;QACT,GAAG,EAAE,EAAE;QACP,GAAG,EAAE,EAAE;QACP,GAAG,EAAE,EAAE;QACP,GAAG,EAAE,EAAE;QACP,OAAO,EAAE;YACP,UAAU,EAAEnB,UAAkB;SAC/B;KACF;IACD,eAAe,EAAE,CAACmO,WAAsB,CAAC;IACzC,aAAa,EAAE;QACbjO,KAAgB;QAChBM,iBAA4B;QAC5BE,cAAyB;QACzB0N,WAAsB;KACvB;IACD,gBAAgB,EAAE,CAACjO,MAAiB,CAAC;gBACrCE,YAAU;CACX,CAAC;AACF,MAAMwB,kCAAgC,GAA6B;IACjE,IAAI,EACF,0GAA0G;IAC5G,UAAU,EAAE,KAAK;IACjB,SAAS,EAAE;QACT,GAAG,EAAE;YACH,UAAU,EAAE2M,WAAmB;SAChC;QACD,OAAO,EAAE;YACP,UAAU,EAAExO,UAAkB;SAC/B;KACF;IACD,eAAe,EAAE,CAACmO,WAAsB,CAAC;IACzC,aAAa,EAAE;QACbjO,KAAgB;QAChBM,iBAA4B;QAC5BE,cAAyB;KAC1B;IACD,gBAAgB,EAAE,CAACP,MAAiB,CAAC;gBACrCE,YAAU;CACX,CAAC;AACF,MAAMD,mBAAiB,GAA6B;IAClD,IAAI,EAAE,uEAAuE;IAC7E,UAAU,EAAE,KAAK;IACjB,SAAS,EAAE;QACT,GAAG,EAAE;YACH,UAAU,EAAEoO,WAAmB;SAChC;QACD,OAAO,EAAE;YACP,UAAU,EAAExO,UAAkB;SAC/B;KACF;IACD,eAAe,EAAE,CAACmO,WAAsB,CAAC;IACzC,aAAa,EAAE,CAACjO,KAAgB,EAAEQ,cAAyB,CAAC;IAC5D,gBAAgB,EAAE,CAACP,MAAiB,CAAC;gBACrCE,YAAU;CACX,CAAC;AACF,MAAMyB,sCAAoC,GAA6B;IACrE,IAAI,EAAE,YAAY;IAClB,UAAU,EAAE,KAAK;IACjB,SAAS,EAAE;QACT,GAAG,EAAE;YACH,UAAU,EAAE0M,WAAmB;SAChC;QACD,OAAO,EAAE;YACP,UAAU,EAAExO,UAAkB;SAC/B;KACF;IACD,eAAe,EAAE,CAACmO,WAAsB,CAAC;IACzC,aAAa,EAAE;QACbjO,KAAgB;QAChBM,iBAA4B;QAC5BE,cAAyB;QACzBM,QAAmB;KACpB;IACD,gBAAgB,EAAE,CAACb,MAAiB,CAAC;gBACrCE,YAAU;CACX,CAAC;AACF,MAAMiE,uBAAqB,GAA6B;IACtD,IAAI,EAAE,YAAY;IAClB,UAAU,EAAE,KAAK;IACjB,SAAS,EAAE;QACT,GAAG,EAAE;YACH,UAAU,EAAEkK,WAAmB;SAChC;QACD,OAAO,EAAE;YACP,UAAU,EAAExO,UAAkB;SAC/B;KACF;IACD,eAAe,EAAE,CAACmO,WAAsB,CAAC;IACzC,aAAa,EAAE;QACbjO,KAAgB;QAChBQ,cAAyB;QACzBM,QAAmB;KACpB;IACD,gBAAgB,EAAE,CAACb,MAAiB,CAAC;gBACrCE,YAAU;CACX,CAAC;;ACrqBF;;;;;;;AAgCA;AACA;AACA,MAAa,iBAAiB;;;;;IAO5B,YAAY,MAA+B;QACzC,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;KACtB;;;;;;;;IASM,aAAa,CAClB,iBAAyB,EACzB,WAAmB,EACnB,OAAkD;QAElD,MAAM,IAAI,GAAG,IAAI,CAAC,sBAAsB,CACtC,iBAAiB,EACjB,WAAW,EACX,OAAO,CACR,CAAC;QACF,OAAO;YACL,IAAI;gBACF,OAAO,IAAI,CAAC,IAAI,EAAE,CAAC;aACpB;YACD,CAAC,MAAM,CAAC,aAAa,CAAC;gBACpB,OAAO,IAAI,CAAC;aACb;YACD,MAAM,EAAE;gBACN,OAAO,IAAI,CAAC,uBAAuB,CACjC,iBAAiB,EACjB,WAAW,EACX,OAAO,CACR,CAAC;aACH;SACF,CAAC;KACH;IAEc,uBAAuB,CACpC,iBAAyB,EACzB,WAAmB,EACnB,OAAkD;;YAElD,IAAI,MAAM,GAAG,oBAAM,IAAI,CAAC,cAAc,CACpC,iBAAiB,EACjB,WAAW,EACX,OAAO,CACR,CAAA,CAAC;YACF,0BAAM,MAAM,CAAC,KAAK,IAAI,EAAE,CAAA,CAAC;YACzB,IAAI,iBAAiB,GAAG,MAAM,CAAC,QAAQ,CAAC;YACxC,OAAO,iBAAiB,EAAE;gBACxB,MAAM,GAAG,oBAAM,IAAI,CAAC,kBAAkB,CACpC,iBAAiB,EACjB,WAAW,EACX,iBAAiB,EACjB,OAAO,CACR,CAAA,CAAC;gBACF,iBAAiB,GAAG,MAAM,CAAC,QAAQ,CAAC;gBACpC,0BAAM,MAAM,CAAC,KAAK,IAAI,EAAE,CAAA,CAAC;aAC1B;SACF;KAAA;IAEc,sBAAsB,CACnC,iBAAyB,EACzB,WAAmB,EACnB,OAAkD;;;;gBAElD,KAAyB,IAAA,KAAAT,oBAAA,IAAI,CAAC,uBAAuB,CACnD,iBAAiB,EACjB,WAAW,EACX,OAAO,CACR,CAAA,IAAA;oBAJU,MAAM,IAAI,WAAA,CAAA;oBAKnB,oBAAA,OAAOC,uBAAAD,oBAAA,IAAI,CAAA,CAAA,CAAA,CAAC;iBACb;;;;;;;;;SACF;KAAA;;;;;;;;;;;;IAaK,mBAAmB,CACvB,iBAAyB,EACzB,WAAmB,EACnB,gBAAwB,EACxB,YAA0B,EAC1B,OAAmD;;YAOnD,MAAM,mBAAmB,GAAG,CAC1B,IAAmC,EACnC,IAA8B;gBAE9B,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;aACrD,CAAA,CAAC;YACF,MAAM,aAAa,GAAG,CACpB,IAAmC,EACnC,IAA8B;;gBAE9B,IAAI,kBAAkB,GAEN,SAAS,CAAC;gBAC1B,MAAM,gBAAgB,GAAG,MAAA,IAAI,CAAC,OAAO,0CAAE,UAAU,CAAC;gBAClD,MAAM,QAAQ,GAAmC,CAC/C,WAA6C,EAC7C,YAAqB;oBAErB,kBAAkB,GAAG,WAAW,CAAC;oBACjC,gBAAgB,aAAhB,gBAAgB,uBAAhB,gBAAgB,CAAG,WAAW,EAAE,YAAY,CAAC,CAAC;iBAC/C,CAAC;gBACF,MAAM,WAAW,mCACZ,IAAI,KACP,OAAO,kCACF,IAAI,CAAC,OAAO,KACf,UAAU,EAAE,QAAQ,MAEvB,CAAC;gBACF,MAAM,YAAY,GAAG,MAAM,mBAAmB,CAAC,WAAW,EAAE,IAAI,CAAC,CAAC;gBAClE,OAAO;oBACL,YAAY;oBACZ,WAAW,EAAE;wBACX,UAAU,EAAE,kBAAmB,CAAC,MAAM;wBACtC,IAAI,EAAE,kBAAmB,CAAC,UAAU;wBACpC,OAAO,EAAE,kBAAmB,CAAC,OAAO,CAAC,MAAM,EAAE;qBAC9C;iBACF,CAAC;aACH,CAAA,CAAC;YAEF,MAAM,GAAG,GAAG,IAAI,OAAO,CACrB,aAAa,EACb;gBACE,iBAAiB;gBACjB,WAAW;gBACX,gBAAgB;gBAChB,YAAY;gBACZ,OAAO;aACR,EACDqB,6BAA2B,CAC5B,CAAC;YACF,OAAO,IAAIoB,iBAAS,CAAC,GAAG,EAAE;gBACxB,UAAU,EAAE,OAAO,aAAP,OAAO,uBAAP,OAAO,CAAE,UAAU;gBAC/B,YAAY,EAAE,OAAO,aAAP,OAAO,uBAAP,OAAO,CAAE,kBAAkB;aAC1C,CAAC,CAAC;SACJ;KAAA;;;;;;;;;;;;IAaK,0BAA0B,CAC9B,iBAAyB,EACzB,WAAmB,EACnB,gBAAwB,EACxB,YAA0B,EAC1B,OAAmD;;YAEnD,MAAM,MAAM,GAAG,MAAM,IAAI,CAAC,mBAAmB,CAC3C,iBAAiB,EACjB,WAAW,EACX,gBAAgB,EAChB,YAAY,EACZ,OAAO,CACR,CAAC;YACF,OAAO,MAAM,CAAC,aAAa,EAAE,CAAC;SAC/B;KAAA;;;;;;;;;;;;IAaK,WAAW,CACf,iBAAyB,EACzB,WAAmB,EACnB,gBAAwB,EACxB,YAAgC,EAChC,OAA2C;;YAO3C,MAAM,mBAAmB,GAAG,CAC1B,IAAmC,EACnC,IAA8B;gBAE9B,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;aACrD,CAAA,CAAC;YACF,MAAM,aAAa,GAAG,CACpB,IAAmC,EACnC,IAA8B;;gBAE9B,IAAI,kBAAkB,GAEN,SAAS,CAAC;gBAC1B,MAAM,gBAAgB,GAAG,MAAA,IAAI,CAAC,OAAO,0CAAE,UAAU,CAAC;gBAClD,MAAM,QAAQ,GAAmC,CAC/C,WAA6C,EAC7C,YAAqB;oBAErB,kBAAkB,GAAG,WAAW,CAAC;oBACjC,gBAAgB,aAAhB,gBAAgB,uBAAhB,gBAAgB,CAAG,WAAW,EAAE,YAAY,CAAC,CAAC;iBAC/C,CAAC;gBACF,MAAM,WAAW,mCACZ,IAAI,KACP,OAAO,kCACF,IAAI,CAAC,OAAO,KACf,UAAU,EAAE,QAAQ,MAEvB,CAAC;gBACF,MAAM,YAAY,GAAG,MAAM,mBAAmB,CAAC,WAAW,EAAE,IAAI,CAAC,CAAC;gBAClE,OAAO;oBACL,YAAY;oBACZ,WAAW,EAAE;wBACX,UAAU,EAAE,kBAAmB,CAAC,MAAM;wBACtC,IAAI,EAAE,kBAAmB,CAAC,UAAU;wBACpC,OAAO,EAAE,kBAAmB,CAAC,OAAO,CAAC,MAAM,EAAE;qBAC9C;iBACF,CAAC;aACH,CAAA,CAAC;YAEF,MAAM,GAAG,GAAG,IAAI,OAAO,CACrB,aAAa,EACb;gBACE,iBAAiB;gBACjB,WAAW;gBACX,gBAAgB;gBAChB,YAAY;gBACZ,OAAO;aACR,EACDnB,qBAAmB,CACpB,CAAC;YACF,OAAO,IAAImB,iBAAS,CAAC,GAAG,EAAE;gBACxB,UAAU,EAAE,OAAO,aAAP,OAAO,uBAAP,OAAO,CAAE,UAAU;gBAC/B,YAAY,EAAE,OAAO,aAAP,OAAO,uBAAP,OAAO,CAAE,kBAAkB;aAC1C,CAAC,CAAC;SACJ;KAAA;;;;;;;;;;;;IAaK,kBAAkB,CACtB,iBAAyB,EACzB,WAAmB,EACnB,gBAAwB,EACxB,YAAgC,EAChC,OAA2C;;YAE3C,MAAM,MAAM,GAAG,MAAM,IAAI,CAAC,WAAW,CACnC,iBAAiB,EACjB,WAAW,EACX,gBAAgB,EAChB,YAAY,EACZ,OAAO,CACR,CAAC;YACF,OAAO,MAAM,CAAC,aAAa,EAAE,CAAC;SAC/B;KAAA;;;;;;;;;IAUD,GAAG,CACD,iBAAyB,EACzB,WAAmB,EACnB,gBAAwB,EACxB,OAAwC;QAExC,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,iBAAiB,EAAE,WAAW,EAAE,gBAAgB,EAAE,OAAO,EAAE,EAC7DjB,kBAAgB,CACjB,CAAC;KACH;;;;;;;;;IAUK,WAAW,CACf,iBAAyB,EACzB,WAAmB,EACnB,gBAAwB,EACxB,OAA2C;;YAE3C,MAAM,mBAAmB,GAAG,CAC1B,IAAmC,EACnC,IAA8B;gBAE9B,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;aACrD,CAAA,CAAC;YACF,MAAM,aAAa,GAAG,CACpB,IAAmC,EACnC,IAA8B;;gBAE9B,IAAI,kBAAkB,GAEN,SAAS,CAAC;gBAC1B,MAAM,gBAAgB,GAAG,MAAA,IAAI,CAAC,OAAO,0CAAE,UAAU,CAAC;gBAClD,MAAM,QAAQ,GAAmC,CAC/C,WAA6C,EAC7C,YAAqB;oBAErB,kBAAkB,GAAG,WAAW,CAAC;oBACjC,gBAAgB,aAAhB,gBAAgB,uBAAhB,gBAAgB,CAAG,WAAW,EAAE,YAAY,CAAC,CAAC;iBAC/C,CAAC;gBACF,MAAM,WAAW,mCACZ,IAAI,KACP,OAAO,kCACF,IAAI,CAAC,OAAO,KACf,UAAU,EAAE,QAAQ,MAEvB,CAAC;gBACF,MAAM,YAAY,GAAG,MAAM,mBAAmB,CAAC,WAAW,EAAE,IAAI,CAAC,CAAC;gBAClE,OAAO;oBACL,YAAY;oBACZ,WAAW,EAAE;wBACX,UAAU,EAAE,kBAAmB,CAAC,MAAM;wBACtC,IAAI,EAAE,kBAAmB,CAAC,UAAU;wBACpC,OAAO,EAAE,kBAAmB,CAAC,OAAO,CAAC,MAAM,EAAE;qBAC9C;iBACF,CAAC;aACH,CAAA,CAAC;YAEF,MAAM,GAAG,GAAG,IAAI,OAAO,CACrB,aAAa,EACb,EAAE,iBAAiB,EAAE,WAAW,EAAE,gBAAgB,EAAE,OAAO,EAAE,EAC7DD,qBAAmB,CACpB,CAAC;YACF,OAAO,IAAIkB,iBAAS,CAAC,GAAG,EAAE;gBACxB,UAAU,EAAE,OAAO,aAAP,OAAO,uBAAP,OAAO,CAAE,UAAU;gBAC/B,YAAY,EAAE,OAAO,aAAP,OAAO,uBAAP,OAAO,CAAE,kBAAkB;aAC1C,CAAC,CAAC;SACJ;KAAA;;;;;;;;;IAUK,kBAAkB,CACtB,iBAAyB,EACzB,WAAmB,EACnB,gBAAwB,EACxB,OAA2C;;YAE3C,MAAM,MAAM,GAAG,MAAM,IAAI,CAAC,WAAW,CACnC,iBAAiB,EACjB,WAAW,EACX,gBAAgB,EAChB,OAAO,CACR,CAAC;YACF,OAAO,MAAM,CAAC,aAAa,EAAE,CAAC;SAC/B;KAAA;;;;;;;;IASO,cAAc,CACpB,iBAAyB,EACzB,WAAmB,EACnB,OAAkD;QAElD,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,iBAAiB,EAAE,WAAW,EAAE,OAAO,EAAE,EAC3C,0BAA0B,CAC3B,CAAC;KACH;;;;;;;;;IAUO,kBAAkB,CACxB,iBAAyB,EACzB,WAAmB,EACnB,QAAgB,EAChB,OAAsD;QAEtD,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,iBAAiB,EAAE,WAAW,EAAE,QAAQ,EAAE,OAAO,EAAE,EACrD,8BAA8B,CAC/B,CAAC;KACH;CACF;AACD;AACA,MAAMhC,YAAU,GAAGP,2BAA2B,CAAC,OAAO,cAAc,KAAK,CAAC,CAAC;AAE3E,MAAMmB,6BAA2B,GAA6B;IAC5D,IAAI,EACF,kJAAkJ;IACpJ,UAAU,EAAE,KAAK;IACjB,SAAS,EAAE;QACT,GAAG,EAAE;YACH,UAAU,EAAEwN,YAAoB;SACjC;QACD,GAAG,EAAE;YACH,UAAU,EAAEA,YAAoB;SACjC;QACD,GAAG,EAAE;YACH,UAAU,EAAEA,YAAoB;SACjC;QACD,GAAG,EAAE;YACH,UAAU,EAAEA,YAAoB;SACjC;QACD,OAAO,EAAE;YACP,UAAU,EAAEzO,UAAkB;SAC/B;KACF;IACD,WAAW,EAAE0O,YAAuB;IACpC,eAAe,EAAE,CAACP,WAAsB,CAAC;IACzC,aAAa,EAAE;QACbjO,KAAgB;QAChBM,iBAA4B;QAC5BE,cAAyB;QACzB0N,WAAsB;QACtBO,gBAA2B;KAC5B;IACD,gBAAgB,EAAE,CAACxO,MAAiB,EAAEQ,WAAsB,CAAC;IAC7D,SAAS,EAAE,MAAM;gBACjBN,YAAU;CACX,CAAC;AACF,MAAMa,qBAAmB,GAA6B;IACpD,IAAI,EACF,kJAAkJ;IACpJ,UAAU,EAAE,OAAO;IACnB,SAAS,EAAE;QACT,GAAG,EAAE;YACH,UAAU,EAAEuN,YAAoB;SACjC;QACD,GAAG,EAAE;YACH,UAAU,EAAEA,YAAoB;SACjC;QACD,GAAG,EAAE;YACH,UAAU,EAAEA,YAAoB;SACjC;QACD,GAAG,EAAE;YACH,UAAU,EAAEA,YAAoB;SACjC;QACD,OAAO,EAAE;YACP,UAAU,EAAEzO,UAAkB;SAC/B;KACF;IACD,WAAW,EAAE4O,aAAwB;IACrC,eAAe,EAAE,CAACT,WAAsB,CAAC;IACzC,aAAa,EAAE;QACbjO,KAAgB;QAChBM,iBAA4B;QAC5BE,cAAyB;QACzB0N,WAAsB;QACtBO,gBAA2B;KAC5B;IACD,gBAAgB,EAAE,CAACxO,MAAiB,EAAEQ,WAAsB,CAAC;IAC7D,SAAS,EAAE,MAAM;gBACjBN,YAAU;CACX,CAAC;AACF,MAAMe,kBAAgB,GAA6B;IACjD,IAAI,EACF,kJAAkJ;IACpJ,UAAU,EAAE,KAAK;IACjB,SAAS,EAAE;QACT,GAAG,EAAE;YACH,UAAU,EAAEqN,YAAoB;SACjC;QACD,OAAO,EAAE;YACP,UAAU,EAAEzO,UAAkB;SAC/B;KACF;IACD,eAAe,EAAE,CAACmO,WAAsB,CAAC;IACzC,aAAa,EAAE;QACbjO,KAAgB;QAChBM,iBAA4B;QAC5BE,cAAyB;QACzB0N,WAAsB;QACtBO,gBAA2B;KAC5B;IACD,gBAAgB,EAAE,CAACxO,MAAiB,CAAC;gBACrCE,YAAU;CACX,CAAC;AACF,MAAMc,qBAAmB,GAA6B;IACpD,IAAI,EACF,kJAAkJ;IACpJ,UAAU,EAAE,QAAQ;IACpB,SAAS,EAAE;QACT,GAAG,EAAE,EAAE;QACP,GAAG,EAAE,EAAE;QACP,GAAG,EAAE,EAAE;QACP,GAAG,EAAE,EAAE;QACP,OAAO,EAAE;YACP,UAAU,EAAEnB,UAAkB;SAC/B;KACF;IACD,eAAe,EAAE,CAACmO,WAAsB,CAAC;IACzC,aAAa,EAAE;QACbjO,KAAgB;QAChBM,iBAA4B;QAC5BE,cAAyB;QACzB0N,WAAsB;QACtBO,gBAA2B;KAC5B;IACD,gBAAgB,EAAE,CAACxO,MAAiB,CAAC;gBACrCE,YAAU;CACX,CAAC;AACF,MAAM,0BAA0B,GAA6B;IAC3D,IAAI,EACF,+HAA+H;IACjI,UAAU,EAAE,KAAK;IACjB,SAAS,EAAE;QACT,GAAG,EAAE;YACH,UAAU,EAAEwO,gBAAwB;SACrC;QACD,OAAO,EAAE;YACP,UAAU,EAAE7O,UAAkB;SAC/B;KACF;IACD,eAAe,EAAE,CAACmO,WAAsB,CAAC;IACzC,aAAa,EAAE;QACbjO,KAAgB;QAChBM,iBAA4B;QAC5BE,cAAyB;QACzB0N,WAAsB;KACvB;IACD,gBAAgB,EAAE,CAACjO,MAAiB,CAAC;gBACrCE,YAAU;CACX,CAAC;AACF,MAAM,8BAA8B,GAA6B;IAC/D,IAAI,EAAE,YAAY;IAClB,UAAU,EAAE,KAAK;IACjB,SAAS,EAAE;QACT,GAAG,EAAE;YACH,UAAU,EAAEwO,gBAAwB;SACrC;QACD,OAAO,EAAE;YACP,UAAU,EAAE7O,UAAkB;SAC/B;KACF;IACD,eAAe,EAAE,CAACmO,WAAsB,CAAC;IACzC,aAAa,EAAE;QACbjO,KAAgB;QAChBM,iBAA4B;QAC5BE,cAAyB;QACzBM,QAAmB;QACnBoN,WAAsB;KACvB;IACD,gBAAgB,EAAE,CAACjO,MAAiB,CAAC;gBACrCE,YAAU;CACX,CAAC;;AC7nBF;;;;;;;AAgCA;AACA;AACA,MAAa,wBAAwB;;;;;IAOnC,YAAY,MAA+B;QACzC,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;KACtB;;;;;;;;;IAUM,kBAAkB,CACvB,iBAAyB,EACzB,WAAmB,EACnB,gBAAwB,EACxB,OAA8D;QAE9D,MAAM,IAAI,GAAG,IAAI,CAAC,2BAA2B,CAC3C,iBAAiB,EACjB,WAAW,EACX,gBAAgB,EAChB,OAAO,CACR,CAAC;QACF,OAAO;YACL,IAAI;gBACF,OAAO,IAAI,CAAC,IAAI,EAAE,CAAC;aACpB;YACD,CAAC,MAAM,CAAC,aAAa,CAAC;gBACpB,OAAO,IAAI,CAAC;aACb;YACD,MAAM,EAAE;gBACN,OAAO,IAAI,CAAC,4BAA4B,CACtC,iBAAiB,EACjB,WAAW,EACX,gBAAgB,EAChB,OAAO,CACR,CAAC;aACH;SACF,CAAC;KACH;IAEc,4BAA4B,CACzC,iBAAyB,EACzB,WAAmB,EACnB,gBAAwB,EACxB,OAA8D;;YAE9D,IAAI,MAAM,GAAG,oBAAM,IAAI,CAAC,mBAAmB,CACzC,iBAAiB,EACjB,WAAW,EACX,gBAAgB,EAChB,OAAO,CACR,CAAA,CAAC;YACF,0BAAM,MAAM,CAAC,KAAK,IAAI,EAAE,CAAA,CAAC;YACzB,IAAI,iBAAiB,GAAG,MAAM,CAAC,QAAQ,CAAC;YACxC,OAAO,iBAAiB,EAAE;gBACxB,MAAM,GAAG,oBAAM,IAAI,CAAC,uBAAuB,CACzC,iBAAiB,EACjB,WAAW,EACX,gBAAgB,EAChB,iBAAiB,EACjB,OAAO,CACR,CAAA,CAAC;gBACF,iBAAiB,GAAG,MAAM,CAAC,QAAQ,CAAC;gBACpC,0BAAM,MAAM,CAAC,KAAK,IAAI,EAAE,CAAA,CAAC;aAC1B;SACF;KAAA;IAEc,2BAA2B,CACxC,iBAAyB,EACzB,WAAmB,EACnB,gBAAwB,EACxB,OAA8D;;;;gBAE9D,KAAyB,IAAA,KAAAT,oBAAA,IAAI,CAAC,4BAA4B,CACxD,iBAAiB,EACjB,WAAW,EACX,gBAAgB,EAChB,OAAO,CACR,CAAA,IAAA;oBALU,MAAM,IAAI,WAAA,CAAA;oBAMnB,oBAAA,OAAOC,uBAAAD,oBAAA,IAAI,CAAA,CAAA,CAAA,CAAC;iBACb;;;;;;;;;SACF;KAAA;;;;;;;;;;;;;;IAeK,mBAAmB,CACvB,iBAAyB,EACzB,WAAmB,EACnB,gBAAwB,EACxB,uBAA+B,EAC/B,mBAAwC,EACxC,OAA0D;;YAO1D,MAAM,mBAAmB,GAAG,CAC1B,IAAmC,EACnC,IAA8B;gBAE9B,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;aACrD,CAAA,CAAC;YACF,MAAM,aAAa,GAAG,CACpB,IAAmC,EACnC,IAA8B;;gBAE9B,IAAI,kBAAkB,GAEN,SAAS,CAAC;gBAC1B,MAAM,gBAAgB,GAAG,MAAA,IAAI,CAAC,OAAO,0CAAE,UAAU,CAAC;gBAClD,MAAM,QAAQ,GAAmC,CAC/C,WAA6C,EAC7C,YAAqB;oBAErB,kBAAkB,GAAG,WAAW,CAAC;oBACjC,gBAAgB,aAAhB,gBAAgB,uBAAhB,gBAAgB,CAAG,WAAW,EAAE,YAAY,CAAC,CAAC;iBAC/C,CAAC;gBACF,MAAM,WAAW,mCACZ,IAAI,KACP,OAAO,kCACF,IAAI,CAAC,OAAO,KACf,UAAU,EAAE,QAAQ,MAEvB,CAAC;gBACF,MAAM,YAAY,GAAG,MAAM,mBAAmB,CAAC,WAAW,EAAE,IAAI,CAAC,CAAC;gBAClE,OAAO;oBACL,YAAY;oBACZ,WAAW,EAAE;wBACX,UAAU,EAAE,kBAAmB,CAAC,MAAM;wBACtC,IAAI,EAAE,kBAAmB,CAAC,UAAU;wBACpC,OAAO,EAAE,kBAAmB,CAAC,OAAO,CAAC,MAAM,EAAE;qBAC9C;iBACF,CAAC;aACH,CAAA,CAAC;YAEF,MAAM,GAAG,GAAG,IAAI,OAAO,CACrB,aAAa,EACb;gBACE,iBAAiB;gBACjB,WAAW;gBACX,gBAAgB;gBAChB,uBAAuB;gBACvB,mBAAmB;gBACnB,OAAO;aACR,EACDqB,6BAA2B,CAC5B,CAAC;YACF,OAAO,IAAIoB,iBAAS,CAAC,GAAG,EAAE;gBACxB,UAAU,EAAE,OAAO,aAAP,OAAO,uBAAP,OAAO,CAAE,UAAU;gBAC/B,YAAY,EAAE,OAAO,aAAP,OAAO,uBAAP,OAAO,CAAE,kBAAkB;aAC1C,CAAC,CAAC;SACJ;KAAA;;;;;;;;;;;;;;IAeK,0BAA0B,CAC9B,iBAAyB,EACzB,WAAmB,EACnB,gBAAwB,EACxB,uBAA+B,EAC/B,mBAAwC,EACxC,OAA0D;;YAE1D,MAAM,MAAM,GAAG,MAAM,IAAI,CAAC,mBAAmB,CAC3C,iBAAiB,EACjB,WAAW,EACX,gBAAgB,EAChB,uBAAuB,EACvB,mBAAmB,EACnB,OAAO,CACR,CAAC;YACF,OAAO,MAAM,CAAC,aAAa,EAAE,CAAC;SAC/B;KAAA;;;;;;;;;;;;;IAcK,WAAW,CACf,iBAAyB,EACzB,WAAmB,EACnB,gBAAwB,EACxB,uBAA+B,EAC/B,mBAA8C,EAC9C,OAAkD;;YAOlD,MAAM,mBAAmB,GAAG,CAC1B,IAAmC,EACnC,IAA8B;gBAE9B,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;aACrD,CAAA,CAAC;YACF,MAAM,aAAa,GAAG,CACpB,IAAmC,EACnC,IAA8B;;gBAE9B,IAAI,kBAAkB,GAEN,SAAS,CAAC;gBAC1B,MAAM,gBAAgB,GAAG,MAAA,IAAI,CAAC,OAAO,0CAAE,UAAU,CAAC;gBAClD,MAAM,QAAQ,GAAmC,CAC/C,WAA6C,EAC7C,YAAqB;oBAErB,kBAAkB,GAAG,WAAW,CAAC;oBACjC,gBAAgB,aAAhB,gBAAgB,uBAAhB,gBAAgB,CAAG,WAAW,EAAE,YAAY,CAAC,CAAC;iBAC/C,CAAC;gBACF,MAAM,WAAW,mCACZ,IAAI,KACP,OAAO,kCACF,IAAI,CAAC,OAAO,KACf,UAAU,EAAE,QAAQ,MAEvB,CAAC;gBACF,MAAM,YAAY,GAAG,MAAM,mBAAmB,CAAC,WAAW,EAAE,IAAI,CAAC,CAAC;gBAClE,OAAO;oBACL,YAAY;oBACZ,WAAW,EAAE;wBACX,UAAU,EAAE,kBAAmB,CAAC,MAAM;wBACtC,IAAI,EAAE,kBAAmB,CAAC,UAAU;wBACpC,OAAO,EAAE,kBAAmB,CAAC,OAAO,CAAC,MAAM,EAAE;qBAC9C;iBACF,CAAC;aACH,CAAA,CAAC;YAEF,MAAM,GAAG,GAAG,IAAI,OAAO,CACrB,aAAa,EACb;gBACE,iBAAiB;gBACjB,WAAW;gBACX,gBAAgB;gBAChB,uBAAuB;gBACvB,mBAAmB;gBACnB,OAAO;aACR,EACDnB,qBAAmB,CACpB,CAAC;YACF,OAAO,IAAImB,iBAAS,CAAC,GAAG,EAAE;gBACxB,UAAU,EAAE,OAAO,aAAP,OAAO,uBAAP,OAAO,CAAE,UAAU;gBAC/B,YAAY,EAAE,OAAO,aAAP,OAAO,uBAAP,OAAO,CAAE,kBAAkB;aAC1C,CAAC,CAAC;SACJ;KAAA;;;;;;;;;;;;;IAcK,kBAAkB,CACtB,iBAAyB,EACzB,WAAmB,EACnB,gBAAwB,EACxB,uBAA+B,EAC/B,mBAA8C,EAC9C,OAAkD;;YAElD,MAAM,MAAM,GAAG,MAAM,IAAI,CAAC,WAAW,CACnC,iBAAiB,EACjB,WAAW,EACX,gBAAgB,EAChB,uBAAuB,EACvB,mBAAmB,EACnB,OAAO,CACR,CAAC;YACF,OAAO,MAAM,CAAC,aAAa,EAAE,CAAC;SAC/B;KAAA;;;;;;;;;IAUD,GAAG,CACD,iBAAyB,EACzB,WAAmB,EACnB,gBAAwB,EACxB,uBAA+B,EAC/B,OAA+C;QAE/C,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC;YACE,iBAAiB;YACjB,WAAW;YACX,gBAAgB;YAChB,uBAAuB;YACvB,OAAO;SACR,EACDjB,kBAAgB,CACjB,CAAC;KACH;;;;;;;;;IAUK,WAAW,CACf,iBAAyB,EACzB,WAAmB,EACnB,gBAAwB,EACxB,uBAA+B,EAC/B,OAAkD;;YAElD,MAAM,mBAAmB,GAAG,CAC1B,IAAmC,EACnC,IAA8B;gBAE9B,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;aACrD,CAAA,CAAC;YACF,MAAM,aAAa,GAAG,CACpB,IAAmC,EACnC,IAA8B;;gBAE9B,IAAI,kBAAkB,GAEN,SAAS,CAAC;gBAC1B,MAAM,gBAAgB,GAAG,MAAA,IAAI,CAAC,OAAO,0CAAE,UAAU,CAAC;gBAClD,MAAM,QAAQ,GAAmC,CAC/C,WAA6C,EAC7C,YAAqB;oBAErB,kBAAkB,GAAG,WAAW,CAAC;oBACjC,gBAAgB,aAAhB,gBAAgB,uBAAhB,gBAAgB,CAAG,WAAW,EAAE,YAAY,CAAC,CAAC;iBAC/C,CAAC;gBACF,MAAM,WAAW,mCACZ,IAAI,KACP,OAAO,kCACF,IAAI,CAAC,OAAO,KACf,UAAU,EAAE,QAAQ,MAEvB,CAAC;gBACF,MAAM,YAAY,GAAG,MAAM,mBAAmB,CAAC,WAAW,EAAE,IAAI,CAAC,CAAC;gBAClE,OAAO;oBACL,YAAY;oBACZ,WAAW,EAAE;wBACX,UAAU,EAAE,kBAAmB,CAAC,MAAM;wBACtC,IAAI,EAAE,kBAAmB,CAAC,UAAU;wBACpC,OAAO,EAAE,kBAAmB,CAAC,OAAO,CAAC,MAAM,EAAE;qBAC9C;iBACF,CAAC;aACH,CAAA,CAAC;YAEF,MAAM,GAAG,GAAG,IAAI,OAAO,CACrB,aAAa,EACb;gBACE,iBAAiB;gBACjB,WAAW;gBACX,gBAAgB;gBAChB,uBAAuB;gBACvB,OAAO;aACR,EACDD,qBAAmB,CACpB,CAAC;YACF,OAAO,IAAIkB,iBAAS,CAAC,GAAG,EAAE;gBACxB,UAAU,EAAE,OAAO,aAAP,OAAO,uBAAP,OAAO,CAAE,UAAU;gBAC/B,YAAY,EAAE,OAAO,aAAP,OAAO,uBAAP,OAAO,CAAE,kBAAkB;aAC1C,CAAC,CAAC;SACJ;KAAA;;;;;;;;;IAUK,kBAAkB,CACtB,iBAAyB,EACzB,WAAmB,EACnB,gBAAwB,EACxB,uBAA+B,EAC/B,OAAkD;;YAElD,MAAM,MAAM,GAAG,MAAM,IAAI,CAAC,WAAW,CACnC,iBAAiB,EACjB,WAAW,EACX,gBAAgB,EAChB,uBAAuB,EACvB,OAAO,CACR,CAAC;YACF,OAAO,MAAM,CAAC,aAAa,EAAE,CAAC;SAC/B;KAAA;;;;;;;;;IAUO,mBAAmB,CACzB,iBAAyB,EACzB,WAAmB,EACnB,gBAAwB,EACxB,OAA8D;QAE9D,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,iBAAiB,EAAE,WAAW,EAAE,gBAAgB,EAAE,OAAO,EAAE,EAC7D,+BAA+B,CAChC,CAAC;KACH;;;;;;;;;;IAWO,uBAAuB,CAC7B,iBAAyB,EACzB,WAAmB,EACnB,gBAAwB,EACxB,QAAgB,EAChB,OAAkE;QAElE,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,iBAAiB,EAAE,WAAW,EAAE,gBAAgB,EAAE,QAAQ,EAAE,OAAO,EAAE,EACvE,mCAAmC,CACpC,CAAC;KACH;CACF;AACD;AACA,MAAMhC,YAAU,GAAGP,2BAA2B,CAAC,OAAO,cAAc,KAAK,CAAC,CAAC;AAE3E,MAAMmB,6BAA2B,GAA6B;IAC5D,IAAI,EACF,qLAAqL;IACvL,UAAU,EAAE,KAAK;IACjB,SAAS,EAAE;QACT,GAAG,EAAE;YACH,UAAU,EAAE6N,mBAA2B;SACxC;QACD,GAAG,EAAE;YACH,UAAU,EAAEA,mBAA2B;SACxC;QACD,GAAG,EAAE;YACH,UAAU,EAAEA,mBAA2B;SACxC;QACD,GAAG,EAAE;YACH,UAAU,EAAEA,mBAA2B;SACxC;QACD,OAAO,EAAE;YACP,UAAU,EAAE9O,UAAkB;SAC/B;KACF;IACD,WAAW,EAAE+O,mBAA8B;IAC3C,eAAe,EAAE,CAACZ,WAAsB,CAAC;IACzC,aAAa,EAAE;QACbjO,KAAgB;QAChBM,iBAA4B;QAC5BE,cAAyB;QACzB0N,WAAsB;QACtBO,gBAA2B;QAC3BK,uBAAkC;KACnC;IACD,gBAAgB,EAAE,CAAC7O,MAAiB,EAAEQ,WAAsB,CAAC;IAC7D,SAAS,EAAE,MAAM;gBACjBN,YAAU;CACX,CAAC;AACF,MAAMa,qBAAmB,GAA6B;IACpD,IAAI,EACF,qLAAqL;IACvL,UAAU,EAAE,OAAO;IACnB,SAAS,EAAE;QACT,GAAG,EAAE;YACH,UAAU,EAAE4N,mBAA2B;SACxC;QACD,GAAG,EAAE;YACH,UAAU,EAAEA,mBAA2B;SACxC;QACD,GAAG,EAAE;YACH,UAAU,EAAEA,mBAA2B;SACxC;QACD,GAAG,EAAE;YACH,UAAU,EAAEA,mBAA2B;SACxC;QACD,OAAO,EAAE;YACP,UAAU,EAAE9O,UAAkB;SAC/B;KACF;IACD,WAAW,EAAEiP,oBAA+B;IAC5C,eAAe,EAAE,CAACd,WAAsB,CAAC;IACzC,aAAa,EAAE;QACbjO,KAAgB;QAChBM,iBAA4B;QAC5BE,cAAyB;QACzB0N,WAAsB;QACtBO,gBAA2B;QAC3BK,uBAAkC;KACnC;IACD,gBAAgB,EAAE,CAAC7O,MAAiB,EAAEQ,WAAsB,CAAC;IAC7D,SAAS,EAAE,MAAM;gBACjBN,YAAU;CACX,CAAC;AACF,MAAMe,kBAAgB,GAA6B;IACjD,IAAI,EACF,qLAAqL;IACvL,UAAU,EAAE,KAAK;IACjB,SAAS,EAAE;QACT,GAAG,EAAE;YACH,UAAU,EAAE0N,mBAA2B;SACxC;QACD,OAAO,EAAE;YACP,UAAU,EAAE9O,UAAkB;SAC/B;KACF;IACD,eAAe,EAAE,CAACmO,WAAsB,EAAEe,OAAkB,CAAC;IAC7D,aAAa,EAAE;QACbhP,KAAgB;QAChBM,iBAA4B;QAC5BE,cAAyB;QACzB0N,WAAsB;QACtBO,gBAA2B;QAC3BK,uBAAkC;KACnC;IACD,gBAAgB,EAAE,CAAC7O,MAAiB,CAAC;gBACrCE,YAAU;CACX,CAAC;AACF,MAAMc,qBAAmB,GAA6B;IACpD,IAAI,EACF,qLAAqL;IACvL,UAAU,EAAE,QAAQ;IACpB,SAAS,EAAE;QACT,GAAG,EAAE,EAAE;QACP,GAAG,EAAE,EAAE;QACP,GAAG,EAAE,EAAE;QACP,GAAG,EAAE,EAAE;QACP,OAAO,EAAE;YACP,UAAU,EAAEnB,UAAkB;SAC/B;KACF;IACD,eAAe,EAAE,CAACmO,WAAsB,CAAC;IACzC,aAAa,EAAE;QACbjO,KAAgB;QAChBM,iBAA4B;QAC5BE,cAAyB;QACzB0N,WAAsB;QACtBO,gBAA2B;QAC3BK,uBAAkC;KACnC;IACD,gBAAgB,EAAE,CAAC7O,MAAiB,CAAC;gBACrCE,YAAU;CACX,CAAC;AACF,MAAM,+BAA+B,GAA6B;IAChE,IAAI,EACF,2JAA2J;IAC7J,UAAU,EAAE,KAAK;IACjB,SAAS,EAAE;QACT,GAAG,EAAE;YACH,UAAU,EAAE8O,uBAA+B;SAC5C;QACD,OAAO,EAAE;YACP,UAAU,EAAEnP,UAAkB;SAC/B;KACF;IACD,eAAe,EAAE,CAACmO,WAAsB,CAAC;IACzC,aAAa,EAAE;QACbjO,KAAgB;QAChBM,iBAA4B;QAC5BE,cAAyB;QACzB0N,WAAsB;QACtBO,gBAA2B;KAC5B;IACD,gBAAgB,EAAE,CAACxO,MAAiB,CAAC;gBACrCE,YAAU;CACX,CAAC;AACF,MAAM,mCAAmC,GAA6B;IACpE,IAAI,EAAE,YAAY;IAClB,UAAU,EAAE,KAAK;IACjB,SAAS,EAAE;QACT,GAAG,EAAE;YACH,UAAU,EAAE8O,uBAA+B;SAC5C;QACD,OAAO,EAAE;YACP,UAAU,EAAEnP,UAAkB;SAC/B;KACF;IACD,eAAe,EAAE,CAACmO,WAAsB,CAAC;IACzC,aAAa,EAAE;QACbjO,KAAgB;QAChBM,iBAA4B;QAC5BE,cAAyB;QACzBM,QAAmB;QACnBoN,WAAsB;QACtBO,gBAA2B;KAC5B;IACD,gBAAgB,EAAE,CAACxO,MAAiB,CAAC;gBACrCE,YAAU;CACX,CAAC;;AC9qBF;;;;;;;AAgCA;AACA;AACA,MAAa,uBAAuB;;;;;IAOlC,YAAY,MAA+B;QACzC,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;KACtB;;;;;;;;IASM,aAAa,CAClB,iBAAyB,EACzB,WAAmB,EACnB,OAAwD;QAExD,MAAM,IAAI,GAAG,IAAI,CAAC,sBAAsB,CACtC,iBAAiB,EACjB,WAAW,EACX,OAAO,CACR,CAAC;QACF,OAAO;YACL,IAAI;gBACF,OAAO,IAAI,CAAC,IAAI,EAAE,CAAC;aACpB;YACD,CAAC,MAAM,CAAC,aAAa,CAAC;gBACpB,OAAO,IAAI,CAAC;aACb;YACD,MAAM,EAAE;gBACN,OAAO,IAAI,CAAC,uBAAuB,CACjC,iBAAiB,EACjB,WAAW,EACX,OAAO,CACR,CAAC;aACH;SACF,CAAC;KACH;IAEc,uBAAuB,CACpC,iBAAyB,EACzB,WAAmB,EACnB,OAAwD;;YAExD,IAAI,MAAM,GAAG,oBAAM,IAAI,CAAC,cAAc,CACpC,iBAAiB,EACjB,WAAW,EACX,OAAO,CACR,CAAA,CAAC;YACF,0BAAM,MAAM,CAAC,KAAK,IAAI,EAAE,CAAA,CAAC;YACzB,IAAI,iBAAiB,GAAG,MAAM,CAAC,QAAQ,CAAC;YACxC,OAAO,iBAAiB,EAAE;gBACxB,MAAM,GAAG,oBAAM,IAAI,CAAC,kBAAkB,CACpC,iBAAiB,EACjB,WAAW,EACX,iBAAiB,EACjB,OAAO,CACR,CAAA,CAAC;gBACF,iBAAiB,GAAG,MAAM,CAAC,QAAQ,CAAC;gBACpC,0BAAM,MAAM,CAAC,KAAK,IAAI,EAAE,CAAA,CAAC;aAC1B;SACF;KAAA;IAEc,sBAAsB,CACnC,iBAAyB,EACzB,WAAmB,EACnB,OAAwD;;;;gBAExD,KAAyB,IAAA,KAAAT,oBAAA,IAAI,CAAC,uBAAuB,CACnD,iBAAiB,EACjB,WAAW,EACX,OAAO,CACR,CAAA,IAAA;oBAJU,MAAM,IAAI,WAAA,CAAA;oBAKnB,oBAAA,OAAOC,uBAAAD,oBAAA,IAAI,CAAA,CAAA,CAAA,CAAC;iBACb;;;;;;;;;SACF;KAAA;;;;;;;;;;;;IAaK,mBAAmB,CACvB,iBAAyB,EACzB,WAAmB,EACnB,sBAA8B,EAC9B,kBAAsC,EACtC,OAAyD;;YAOzD,MAAM,mBAAmB,GAAG,CAC1B,IAAmC,EACnC,IAA8B;gBAE9B,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;aACrD,CAAA,CAAC;YACF,MAAM,aAAa,GAAG,CACpB,IAAmC,EACnC,IAA8B;;gBAE9B,IAAI,kBAAkB,GAEN,SAAS,CAAC;gBAC1B,MAAM,gBAAgB,GAAG,MAAA,IAAI,CAAC,OAAO,0CAAE,UAAU,CAAC;gBAClD,MAAM,QAAQ,GAAmC,CAC/C,WAA6C,EAC7C,YAAqB;oBAErB,kBAAkB,GAAG,WAAW,CAAC;oBACjC,gBAAgB,aAAhB,gBAAgB,uBAAhB,gBAAgB,CAAG,WAAW,EAAE,YAAY,CAAC,CAAC;iBAC/C,CAAC;gBACF,MAAM,WAAW,mCACZ,IAAI,KACP,OAAO,kCACF,IAAI,CAAC,OAAO,KACf,UAAU,EAAE,QAAQ,MAEvB,CAAC;gBACF,MAAM,YAAY,GAAG,MAAM,mBAAmB,CAAC,WAAW,EAAE,IAAI,CAAC,CAAC;gBAClE,OAAO;oBACL,YAAY;oBACZ,WAAW,EAAE;wBACX,UAAU,EAAE,kBAAmB,CAAC,MAAM;wBACtC,IAAI,EAAE,kBAAmB,CAAC,UAAU;wBACpC,OAAO,EAAE,kBAAmB,CAAC,OAAO,CAAC,MAAM,EAAE;qBAC9C;iBACF,CAAC;aACH,CAAA,CAAC;YAEF,MAAM,GAAG,GAAG,IAAI,OAAO,CACrB,aAAa,EACb;gBACE,iBAAiB;gBACjB,WAAW;gBACX,sBAAsB;gBACtB,kBAAkB;gBAClB,OAAO;aACR,EACDqB,6BAA2B,CAC5B,CAAC;YACF,OAAO,IAAIoB,iBAAS,CAAC,GAAG,EAAE;gBACxB,UAAU,EAAE,OAAO,aAAP,OAAO,uBAAP,OAAO,CAAE,UAAU;gBAC/B,YAAY,EAAE,OAAO,aAAP,OAAO,uBAAP,OAAO,CAAE,kBAAkB;aAC1C,CAAC,CAAC;SACJ;KAAA;;;;;;;;;;;;IAaK,0BAA0B,CAC9B,iBAAyB,EACzB,WAAmB,EACnB,sBAA8B,EAC9B,kBAAsC,EACtC,OAAyD;;YAEzD,MAAM,MAAM,GAAG,MAAM,IAAI,CAAC,mBAAmB,CAC3C,iBAAiB,EACjB,WAAW,EACX,sBAAsB,EACtB,kBAAkB,EAClB,OAAO,CACR,CAAC;YACF,OAAO,MAAM,CAAC,aAAa,EAAE,CAAC;SAC/B;KAAA;;;;;;;;;;;;IAaK,WAAW,CACf,iBAAyB,EACzB,WAAmB,EACnB,sBAA8B,EAC9B,kBAA4C,EAC5C,OAAiD;;YAOjD,MAAM,mBAAmB,GAAG,CAC1B,IAAmC,EACnC,IAA8B;gBAE9B,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;aACrD,CAAA,CAAC;YACF,MAAM,aAAa,GAAG,CACpB,IAAmC,EACnC,IAA8B;;gBAE9B,IAAI,kBAAkB,GAEN,SAAS,CAAC;gBAC1B,MAAM,gBAAgB,GAAG,MAAA,IAAI,CAAC,OAAO,0CAAE,UAAU,CAAC;gBAClD,MAAM,QAAQ,GAAmC,CAC/C,WAA6C,EAC7C,YAAqB;oBAErB,kBAAkB,GAAG,WAAW,CAAC;oBACjC,gBAAgB,aAAhB,gBAAgB,uBAAhB,gBAAgB,CAAG,WAAW,EAAE,YAAY,CAAC,CAAC;iBAC/C,CAAC;gBACF,MAAM,WAAW,mCACZ,IAAI,KACP,OAAO,kCACF,IAAI,CAAC,OAAO,KACf,UAAU,EAAE,QAAQ,MAEvB,CAAC;gBACF,MAAM,YAAY,GAAG,MAAM,mBAAmB,CAAC,WAAW,EAAE,IAAI,CAAC,CAAC;gBAClE,OAAO;oBACL,YAAY;oBACZ,WAAW,EAAE;wBACX,UAAU,EAAE,kBAAmB,CAAC,MAAM;wBACtC,IAAI,EAAE,kBAAmB,CAAC,UAAU;wBACpC,OAAO,EAAE,kBAAmB,CAAC,OAAO,CAAC,MAAM,EAAE;qBAC9C;iBACF,CAAC;aACH,CAAA,CAAC;YAEF,MAAM,GAAG,GAAG,IAAI,OAAO,CACrB,aAAa,EACb;gBACE,iBAAiB;gBACjB,WAAW;gBACX,sBAAsB;gBACtB,kBAAkB;gBAClB,OAAO;aACR,EACDnB,qBAAmB,CACpB,CAAC;YACF,OAAO,IAAImB,iBAAS,CAAC,GAAG,EAAE;gBACxB,UAAU,EAAE,OAAO,aAAP,OAAO,uBAAP,OAAO,CAAE,UAAU;gBAC/B,YAAY,EAAE,OAAO,aAAP,OAAO,uBAAP,OAAO,CAAE,kBAAkB;aAC1C,CAAC,CAAC;SACJ;KAAA;;;;;;;;;;;;IAaK,kBAAkB,CACtB,iBAAyB,EACzB,WAAmB,EACnB,sBAA8B,EAC9B,kBAA4C,EAC5C,OAAiD;;YAEjD,MAAM,MAAM,GAAG,MAAM,IAAI,CAAC,WAAW,CACnC,iBAAiB,EACjB,WAAW,EACX,sBAAsB,EACtB,kBAAkB,EAClB,OAAO,CACR,CAAC;YACF,OAAO,MAAM,CAAC,aAAa,EAAE,CAAC;SAC/B;KAAA;;;;;;;;;IAUD,GAAG,CACD,iBAAyB,EACzB,WAAmB,EACnB,sBAA8B,EAC9B,OAA8C;QAE9C,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,iBAAiB,EAAE,WAAW,EAAE,sBAAsB,EAAE,OAAO,EAAE,EACnEjB,kBAAgB,CACjB,CAAC;KACH;;;;;;;;;IAUK,WAAW,CACf,iBAAyB,EACzB,WAAmB,EACnB,sBAA8B,EAC9B,OAAiD;;YAEjD,MAAM,mBAAmB,GAAG,CAC1B,IAAmC,EACnC,IAA8B;gBAE9B,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;aACrD,CAAA,CAAC;YACF,MAAM,aAAa,GAAG,CACpB,IAAmC,EACnC,IAA8B;;gBAE9B,IAAI,kBAAkB,GAEN,SAAS,CAAC;gBAC1B,MAAM,gBAAgB,GAAG,MAAA,IAAI,CAAC,OAAO,0CAAE,UAAU,CAAC;gBAClD,MAAM,QAAQ,GAAmC,CAC/C,WAA6C,EAC7C,YAAqB;oBAErB,kBAAkB,GAAG,WAAW,CAAC;oBACjC,gBAAgB,aAAhB,gBAAgB,uBAAhB,gBAAgB,CAAG,WAAW,EAAE,YAAY,CAAC,CAAC;iBAC/C,CAAC;gBACF,MAAM,WAAW,mCACZ,IAAI,KACP,OAAO,kCACF,IAAI,CAAC,OAAO,KACf,UAAU,EAAE,QAAQ,MAEvB,CAAC;gBACF,MAAM,YAAY,GAAG,MAAM,mBAAmB,CAAC,WAAW,EAAE,IAAI,CAAC,CAAC;gBAClE,OAAO;oBACL,YAAY;oBACZ,WAAW,EAAE;wBACX,UAAU,EAAE,kBAAmB,CAAC,MAAM;wBACtC,IAAI,EAAE,kBAAmB,CAAC,UAAU;wBACpC,OAAO,EAAE,kBAAmB,CAAC,OAAO,CAAC,MAAM,EAAE;qBAC9C;iBACF,CAAC;aACH,CAAA,CAAC;YAEF,MAAM,GAAG,GAAG,IAAI,OAAO,CACrB,aAAa,EACb,EAAE,iBAAiB,EAAE,WAAW,EAAE,sBAAsB,EAAE,OAAO,EAAE,EACnED,qBAAmB,CACpB,CAAC;YACF,OAAO,IAAIkB,iBAAS,CAAC,GAAG,EAAE;gBACxB,UAAU,EAAE,OAAO,aAAP,OAAO,uBAAP,OAAO,CAAE,UAAU;gBAC/B,YAAY,EAAE,OAAO,aAAP,OAAO,uBAAP,OAAO,CAAE,kBAAkB;aAC1C,CAAC,CAAC;SACJ;KAAA;;;;;;;;;IAUK,kBAAkB,CACtB,iBAAyB,EACzB,WAAmB,EACnB,sBAA8B,EAC9B,OAAiD;;YAEjD,MAAM,MAAM,GAAG,MAAM,IAAI,CAAC,WAAW,CACnC,iBAAiB,EACjB,WAAW,EACX,sBAAsB,EACtB,OAAO,CACR,CAAC;YACF,OAAO,MAAM,CAAC,aAAa,EAAE,CAAC;SAC/B;KAAA;;;;;;;;IASO,cAAc,CACpB,iBAAyB,EACzB,WAAmB,EACnB,OAAwD;QAExD,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,iBAAiB,EAAE,WAAW,EAAE,OAAO,EAAE,EAC3C+M,4BAA0B,CAC3B,CAAC;KACH;;;;;;;;;IAUO,kBAAkB,CACxB,iBAAyB,EACzB,WAAmB,EACnB,QAAgB,EAChB,OAA4D;QAE5D,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,iBAAiB,EAAE,WAAW,EAAE,QAAQ,EAAE,OAAO,EAAE,EACrDC,gCAA8B,CAC/B,CAAC;KACH;CACF;AACD;AACA,MAAMhP,YAAU,GAAGP,2BAA2B,CAAC,OAAO,cAAc,KAAK,CAAC,CAAC;AAE3E,MAAMmB,6BAA2B,GAA6B;IAC5D,IAAI,EACF,8JAA8J;IAChK,UAAU,EAAE,KAAK;IACjB,SAAS,EAAE;QACT,GAAG,EAAE;YACH,UAAU,EAAEqO,kBAA0B;SACvC;QACD,GAAG,EAAE;YACH,UAAU,EAAEA,kBAA0B;SACvC;QACD,GAAG,EAAE;YACH,UAAU,EAAEA,kBAA0B;SACvC;QACD,GAAG,EAAE;YACH,UAAU,EAAEA,kBAA0B;SACvC;QACD,OAAO,EAAE;YACP,UAAU,EAAEtP,UAAkB;SAC/B;KACF;IACD,WAAW,EAAEuP,kBAA6B;IAC1C,eAAe,EAAE,CAACpB,WAAsB,CAAC;IACzC,aAAa,EAAE;QACbjO,KAAgB;QAChBM,iBAA4B;QAC5BE,cAAyB;QACzB0N,WAAsB;QACtBoB,sBAAiC;KAClC;IACD,gBAAgB,EAAE,CAACrP,MAAiB,EAAEQ,WAAsB,CAAC;IAC7D,SAAS,EAAE,MAAM;gBACjBN,YAAU;CACX,CAAC;AACF,MAAMa,qBAAmB,GAA6B;IACpD,IAAI,EACF,8JAA8J;IAChK,UAAU,EAAE,OAAO;IACnB,SAAS,EAAE;QACT,GAAG,EAAE;YACH,UAAU,EAAEoO,kBAA0B;SACvC;QACD,GAAG,EAAE;YACH,UAAU,EAAEA,kBAA0B;SACvC;QACD,GAAG,EAAE;YACH,UAAU,EAAEA,kBAA0B;SACvC;QACD,GAAG,EAAE;YACH,UAAU,EAAEA,kBAA0B;SACvC;QACD,OAAO,EAAE;YACP,UAAU,EAAEtP,UAAkB;SAC/B;KACF;IACD,WAAW,EAAEyP,mBAA8B;IAC3C,eAAe,EAAE,CAACtB,WAAsB,CAAC;IACzC,aAAa,EAAE;QACbjO,KAAgB;QAChBM,iBAA4B;QAC5BE,cAAyB;QACzB0N,WAAsB;QACtBoB,sBAAiC;KAClC;IACD,gBAAgB,EAAE,CAACrP,MAAiB,EAAEQ,WAAsB,CAAC;IAC7D,SAAS,EAAE,MAAM;gBACjBN,YAAU;CACX,CAAC;AACF,MAAMe,kBAAgB,GAA6B;IACjD,IAAI,EACF,8JAA8J;IAChK,UAAU,EAAE,KAAK;IACjB,SAAS,EAAE;QACT,GAAG,EAAE;YACH,UAAU,EAAEkO,kBAA0B;SACvC;QACD,OAAO,EAAE;YACP,UAAU,EAAEtP,UAAkB;SAC/B;KACF;IACD,eAAe,EAAE,CAACmO,WAAsB,CAAC;IACzC,aAAa,EAAE;QACbjO,KAAgB;QAChBM,iBAA4B;QAC5BE,cAAyB;QACzB0N,WAAsB;QACtBoB,sBAAiC;KAClC;IACD,gBAAgB,EAAE,CAACrP,MAAiB,CAAC;gBACrCE,YAAU;CACX,CAAC;AACF,MAAMc,qBAAmB,GAA6B;IACpD,IAAI,EACF,8JAA8J;IAChK,UAAU,EAAE,QAAQ;IACpB,SAAS,EAAE;QACT,GAAG,EAAE,EAAE;QACP,GAAG,EAAE,EAAE;QACP,GAAG,EAAE,EAAE;QACP,GAAG,EAAE,EAAE;QACP,OAAO,EAAE;YACP,UAAU,EAAEnB,UAAkB;SAC/B;KACF;IACD,eAAe,EAAE,CAACmO,WAAsB,CAAC;IACzC,aAAa,EAAE;QACbjO,KAAgB;QAChBM,iBAA4B;QAC5BE,cAAyB;QACzB0N,WAAsB;QACtBoB,sBAAiC;KAClC;IACD,gBAAgB,EAAE,CAACrP,MAAiB,CAAC;gBACrCE,YAAU;CACX,CAAC;AACF,MAAM+O,4BAA0B,GAA6B;IAC3D,IAAI,EACF,qIAAqI;IACvI,UAAU,EAAE,KAAK;IACjB,SAAS,EAAE;QACT,GAAG,EAAE;YACH,UAAU,EAAEM,sBAA8B;SAC3C;QACD,OAAO,EAAE;YACP,UAAU,EAAE1P,UAAkB;SAC/B;KACF;IACD,eAAe,EAAE,CAACmO,WAAsB,CAAC;IACzC,aAAa,EAAE;QACbjO,KAAgB;QAChBM,iBAA4B;QAC5BE,cAAyB;QACzB0N,WAAsB;KACvB;IACD,gBAAgB,EAAE,CAACjO,MAAiB,CAAC;gBACrCE,YAAU;CACX,CAAC;AACF,MAAMgP,gCAA8B,GAA6B;IAC/D,IAAI,EAAE,YAAY;IAClB,UAAU,EAAE,KAAK;IACjB,SAAS,EAAE;QACT,GAAG,EAAE;YACH,UAAU,EAAEK,sBAA8B;SAC3C;QACD,OAAO,EAAE;YACP,UAAU,EAAE1P,UAAkB;SAC/B;KACF;IACD,eAAe,EAAE,CAACmO,WAAsB,CAAC;IACzC,aAAa,EAAE;QACbjO,KAAgB;QAChBM,iBAA4B;QAC5BE,cAAyB;QACzBM,QAAmB;QACnBoN,WAAsB;KACvB;IACD,gBAAgB,EAAE,CAACjO,MAAiB,CAAC;gBACrCE,YAAU;CACX,CAAC;;AC7nBF;;;;;;;AAgCA;AACA;AACA,MAAa,8BAA8B;;;;;IAQzC,YAAY,MAA+B;QACzC,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;KACtB;;;;;;;;;;IAWM,wBAAwB,CAC7B,iBAAyB,EACzB,WAAmB,EACnB,sBAA8B,EAC9B,OAA0E;QAE1E,MAAM,IAAI,GAAG,IAAI,CAAC,iCAAiC,CACjD,iBAAiB,EACjB,WAAW,EACX,sBAAsB,EACtB,OAAO,CACR,CAAC;QACF,OAAO;YACL,IAAI;gBACF,OAAO,IAAI,CAAC,IAAI,EAAE,CAAC;aACpB;YACD,CAAC,MAAM,CAAC,aAAa,CAAC;gBACpB,OAAO,IAAI,CAAC;aACb;YACD,MAAM,EAAE;gBACN,OAAO,IAAI,CAAC,kCAAkC,CAC5C,iBAAiB,EACjB,WAAW,EACX,sBAAsB,EACtB,OAAO,CACR,CAAC;aACH;SACF,CAAC;KACH;IAEc,kCAAkC,CAC/C,iBAAyB,EACzB,WAAmB,EACnB,sBAA8B,EAC9B,OAA0E;;YAE1E,IAAI,MAAM,GAAG,oBAAM,IAAI,CAAC,yBAAyB,CAC/C,iBAAiB,EACjB,WAAW,EACX,sBAAsB,EACtB,OAAO,CACR,CAAA,CAAC;YACF,0BAAM,MAAM,CAAC,KAAK,IAAI,EAAE,CAAA,CAAC;YACzB,IAAI,iBAAiB,GAAG,MAAM,CAAC,QAAQ,CAAC;YACxC,OAAO,iBAAiB,EAAE;gBACxB,MAAM,GAAG,oBAAM,IAAI,CAAC,6BAA6B,CAC/C,iBAAiB,EACjB,WAAW,EACX,sBAAsB,EACtB,iBAAiB,EACjB,OAAO,CACR,CAAA,CAAC;gBACF,iBAAiB,GAAG,MAAM,CAAC,QAAQ,CAAC;gBACpC,0BAAM,MAAM,CAAC,KAAK,IAAI,EAAE,CAAA,CAAC;aAC1B;SACF;KAAA;IAEc,iCAAiC,CAC9C,iBAAyB,EACzB,WAAmB,EACnB,sBAA8B,EAC9B,OAA0E;;;;gBAE1E,KAAyB,IAAA,KAAAT,oBAAA,IAAI,CAAC,kCAAkC,CAC9D,iBAAiB,EACjB,WAAW,EACX,sBAAsB,EACtB,OAAO,CACR,CAAA,IAAA;oBALU,MAAM,IAAI,WAAA,CAAA;oBAMnB,oBAAA,OAAOC,uBAAAD,oBAAA,IAAI,CAAA,CAAA,CAAA,CAAC;iBACb;;;;;;;;;SACF;KAAA;;;;;;;;;;;;;;;IAgBK,mBAAmB,CACvB,iBAAyB,EACzB,WAAmB,EACnB,sBAA8B,EAC9B,6BAAqC,EACrC,yBAAoD,EACpD,OAAgE;;YAOhE,MAAM,mBAAmB,GAAG,CAC1B,IAAmC,EACnC,IAA8B;gBAE9B,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;aACrD,CAAA,CAAC;YACF,MAAM,aAAa,GAAG,CACpB,IAAmC,EACnC,IAA8B;;gBAE9B,IAAI,kBAAkB,GAEN,SAAS,CAAC;gBAC1B,MAAM,gBAAgB,GAAG,MAAA,IAAI,CAAC,OAAO,0CAAE,UAAU,CAAC;gBAClD,MAAM,QAAQ,GAAmC,CAC/C,WAA6C,EAC7C,YAAqB;oBAErB,kBAAkB,GAAG,WAAW,CAAC;oBACjC,gBAAgB,aAAhB,gBAAgB,uBAAhB,gBAAgB,CAAG,WAAW,EAAE,YAAY,CAAC,CAAC;iBAC/C,CAAC;gBACF,MAAM,WAAW,mCACZ,IAAI,KACP,OAAO,kCACF,IAAI,CAAC,OAAO,KACf,UAAU,EAAE,QAAQ,MAEvB,CAAC;gBACF,MAAM,YAAY,GAAG,MAAM,mBAAmB,CAAC,WAAW,EAAE,IAAI,CAAC,CAAC;gBAClE,OAAO;oBACL,YAAY;oBACZ,WAAW,EAAE;wBACX,UAAU,EAAE,kBAAmB,CAAC,MAAM;wBACtC,IAAI,EAAE,kBAAmB,CAAC,UAAU;wBACpC,OAAO,EAAE,kBAAmB,CAAC,OAAO,CAAC,MAAM,EAAE;qBAC9C;iBACF,CAAC;aACH,CAAA,CAAC;YAEF,MAAM,GAAG,GAAG,IAAI,OAAO,CACrB,aAAa,EACb;gBACE,iBAAiB;gBACjB,WAAW;gBACX,sBAAsB;gBACtB,6BAA6B;gBAC7B,yBAAyB;gBACzB,OAAO;aACR,EACDqB,6BAA2B,CAC5B,CAAC;YACF,OAAO,IAAIoB,iBAAS,CAAC,GAAG,EAAE;gBACxB,UAAU,EAAE,OAAO,aAAP,OAAO,uBAAP,OAAO,CAAE,UAAU;gBAC/B,YAAY,EAAE,OAAO,aAAP,OAAO,uBAAP,OAAO,CAAE,kBAAkB;aAC1C,CAAC,CAAC;SACJ;KAAA;;;;;;;;;;;;;;;IAgBK,0BAA0B,CAC9B,iBAAyB,EACzB,WAAmB,EACnB,sBAA8B,EAC9B,6BAAqC,EACrC,yBAAoD,EACpD,OAAgE;;YAEhE,MAAM,MAAM,GAAG,MAAM,IAAI,CAAC,mBAAmB,CAC3C,iBAAiB,EACjB,WAAW,EACX,sBAAsB,EACtB,6BAA6B,EAC7B,yBAAyB,EACzB,OAAO,CACR,CAAC;YACF,OAAO,MAAM,CAAC,aAAa,EAAE,CAAC;SAC/B;KAAA;;;;;;;;;;;;;;;IAgBK,WAAW,CACf,iBAAyB,EACzB,WAAmB,EACnB,sBAA8B,EAC9B,6BAAqC,EACrC,yBAA0D,EAC1D,OAAwD;;YAOxD,MAAM,mBAAmB,GAAG,CAC1B,IAAmC,EACnC,IAA8B;gBAE9B,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;aACrD,CAAA,CAAC;YACF,MAAM,aAAa,GAAG,CACpB,IAAmC,EACnC,IAA8B;;gBAE9B,IAAI,kBAAkB,GAEN,SAAS,CAAC;gBAC1B,MAAM,gBAAgB,GAAG,MAAA,IAAI,CAAC,OAAO,0CAAE,UAAU,CAAC;gBAClD,MAAM,QAAQ,GAAmC,CAC/C,WAA6C,EAC7C,YAAqB;oBAErB,kBAAkB,GAAG,WAAW,CAAC;oBACjC,gBAAgB,aAAhB,gBAAgB,uBAAhB,gBAAgB,CAAG,WAAW,EAAE,YAAY,CAAC,CAAC;iBAC/C,CAAC;gBACF,MAAM,WAAW,mCACZ,IAAI,KACP,OAAO,kCACF,IAAI,CAAC,OAAO,KACf,UAAU,EAAE,QAAQ,MAEvB,CAAC;gBACF,MAAM,YAAY,GAAG,MAAM,mBAAmB,CAAC,WAAW,EAAE,IAAI,CAAC,CAAC;gBAClE,OAAO;oBACL,YAAY;oBACZ,WAAW,EAAE;wBACX,UAAU,EAAE,kBAAmB,CAAC,MAAM;wBACtC,IAAI,EAAE,kBAAmB,CAAC,UAAU;wBACpC,OAAO,EAAE,kBAAmB,CAAC,OAAO,CAAC,MAAM,EAAE;qBAC9C;iBACF,CAAC;aACH,CAAA,CAAC;YAEF,MAAM,GAAG,GAAG,IAAI,OAAO,CACrB,aAAa,EACb;gBACE,iBAAiB;gBACjB,WAAW;gBACX,sBAAsB;gBACtB,6BAA6B;gBAC7B,yBAAyB;gBACzB,OAAO;aACR,EACDnB,qBAAmB,CACpB,CAAC;YACF,OAAO,IAAImB,iBAAS,CAAC,GAAG,EAAE;gBACxB,UAAU,EAAE,OAAO,aAAP,OAAO,uBAAP,OAAO,CAAE,UAAU;gBAC/B,YAAY,EAAE,OAAO,aAAP,OAAO,uBAAP,OAAO,CAAE,kBAAkB;aAC1C,CAAC,CAAC;SACJ;KAAA;;;;;;;;;;;;;;;IAgBK,kBAAkB,CACtB,iBAAyB,EACzB,WAAmB,EACnB,sBAA8B,EAC9B,6BAAqC,EACrC,yBAA0D,EAC1D,OAAwD;;YAExD,MAAM,MAAM,GAAG,MAAM,IAAI,CAAC,WAAW,CACnC,iBAAiB,EACjB,WAAW,EACX,sBAAsB,EACtB,6BAA6B,EAC7B,yBAAyB,EACzB,OAAO,CACR,CAAC;YACF,OAAO,MAAM,CAAC,aAAa,EAAE,CAAC;SAC/B;KAAA;;;;;;;;;;;IAYD,GAAG,CACD,iBAAyB,EACzB,WAAmB,EACnB,sBAA8B,EAC9B,6BAAqC,EACrC,OAAqD;QAErD,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC;YACE,iBAAiB;YACjB,WAAW;YACX,sBAAsB;YACtB,6BAA6B;YAC7B,OAAO;SACR,EACDjB,kBAAgB,CACjB,CAAC;KACH;;;;;;;;;;;IAYK,WAAW,CACf,iBAAyB,EACzB,WAAmB,EACnB,sBAA8B,EAC9B,6BAAqC,EACrC,OAAwD;;YAExD,MAAM,mBAAmB,GAAG,CAC1B,IAAmC,EACnC,IAA8B;gBAE9B,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;aACrD,CAAA,CAAC;YACF,MAAM,aAAa,GAAG,CACpB,IAAmC,EACnC,IAA8B;;gBAE9B,IAAI,kBAAkB,GAEN,SAAS,CAAC;gBAC1B,MAAM,gBAAgB,GAAG,MAAA,IAAI,CAAC,OAAO,0CAAE,UAAU,CAAC;gBAClD,MAAM,QAAQ,GAAmC,CAC/C,WAA6C,EAC7C,YAAqB;oBAErB,kBAAkB,GAAG,WAAW,CAAC;oBACjC,gBAAgB,aAAhB,gBAAgB,uBAAhB,gBAAgB,CAAG,WAAW,EAAE,YAAY,CAAC,CAAC;iBAC/C,CAAC;gBACF,MAAM,WAAW,mCACZ,IAAI,KACP,OAAO,kCACF,IAAI,CAAC,OAAO,KACf,UAAU,EAAE,QAAQ,MAEvB,CAAC;gBACF,MAAM,YAAY,GAAG,MAAM,mBAAmB,CAAC,WAAW,EAAE,IAAI,CAAC,CAAC;gBAClE,OAAO;oBACL,YAAY;oBACZ,WAAW,EAAE;wBACX,UAAU,EAAE,kBAAmB,CAAC,MAAM;wBACtC,IAAI,EAAE,kBAAmB,CAAC,UAAU;wBACpC,OAAO,EAAE,kBAAmB,CAAC,OAAO,CAAC,MAAM,EAAE;qBAC9C;iBACF,CAAC;aACH,CAAA,CAAC;YAEF,MAAM,GAAG,GAAG,IAAI,OAAO,CACrB,aAAa,EACb;gBACE,iBAAiB;gBACjB,WAAW;gBACX,sBAAsB;gBACtB,6BAA6B;gBAC7B,OAAO;aACR,EACDD,qBAAmB,CACpB,CAAC;YACF,OAAO,IAAIkB,iBAAS,CAAC,GAAG,EAAE;gBACxB,UAAU,EAAE,OAAO,aAAP,OAAO,uBAAP,OAAO,CAAE,UAAU;gBAC/B,YAAY,EAAE,OAAO,aAAP,OAAO,uBAAP,OAAO,CAAE,kBAAkB;aAC1C,CAAC,CAAC;SACJ;KAAA;;;;;;;;;;;IAYK,kBAAkB,CACtB,iBAAyB,EACzB,WAAmB,EACnB,sBAA8B,EAC9B,6BAAqC,EACrC,OAAwD;;YAExD,MAAM,MAAM,GAAG,MAAM,IAAI,CAAC,WAAW,CACnC,iBAAiB,EACjB,WAAW,EACX,sBAAsB,EACtB,6BAA6B,EAC7B,OAAO,CACR,CAAC;YACF,OAAO,MAAM,CAAC,aAAa,EAAE,CAAC;SAC/B;KAAA;;;;;;;;;;IAWO,yBAAyB,CAC/B,iBAAyB,EACzB,WAAmB,EACnB,sBAA8B,EAC9B,OAA0E;QAE1E,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,iBAAiB,EAAE,WAAW,EAAE,sBAAsB,EAAE,OAAO,EAAE,EACnE,qCAAqC,CACtC,CAAC;KACH;;;;;;;;;;;;IAaO,6BAA6B,CACnC,iBAAyB,EACzB,WAAmB,EACnB,sBAA8B,EAC9B,QAAgB,EAChB,OAA8E;QAE9E,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC;YACE,iBAAiB;YACjB,WAAW;YACX,sBAAsB;YACtB,QAAQ;YACR,OAAO;SACR,EACD,yCAAyC,CAC1C,CAAC;KACH;CACF;AACD;AACA,MAAMhC,YAAU,GAAGP,2BAA2B,CAAC,OAAO,cAAc,KAAK,CAAC,CAAC;AAE3E,MAAMmB,6BAA2B,GAA6B;IAC5D,IAAI,EACF,uMAAuM;IACzM,UAAU,EAAE,KAAK;IACjB,SAAS,EAAE;QACT,GAAG,EAAE;YACH,UAAU,EAAE0O,yBAAiC;SAC9C;QACD,GAAG,EAAE;YACH,UAAU,EAAEA,yBAAiC;SAC9C;QACD,GAAG,EAAE;YACH,UAAU,EAAEA,yBAAiC;SAC9C;QACD,GAAG,EAAE;YACH,UAAU,EAAEA,yBAAiC;SAC9C;QACD,OAAO,EAAE;YACP,UAAU,EAAE3P,UAAkB;SAC/B;KACF;IACD,WAAW,EAAE4P,yBAAoC;IACjD,eAAe,EAAE,CAACzB,WAAsB,CAAC;IACzC,aAAa,EAAE;QACbjO,KAAgB;QAChBM,iBAA4B;QAC5BE,cAAyB;QACzB0N,WAAsB;QACtBoB,sBAAiC;QACjCK,6BAAwC;KACzC;IACD,gBAAgB,EAAE,CAAC1P,MAAiB,EAAEQ,WAAsB,CAAC;IAC7D,SAAS,EAAE,MAAM;gBACjBN,YAAU;CACX,CAAC;AACF,MAAMa,qBAAmB,GAA6B;IACpD,IAAI,EACF,uMAAuM;IACzM,UAAU,EAAE,OAAO;IACnB,SAAS,EAAE;QACT,GAAG,EAAE;YACH,UAAU,EAAEyO,yBAAiC;SAC9C;QACD,GAAG,EAAE;YACH,UAAU,EAAEA,yBAAiC;SAC9C;QACD,GAAG,EAAE;YACH,UAAU,EAAEA,yBAAiC;SAC9C;QACD,GAAG,EAAE;YACH,UAAU,EAAEA,yBAAiC;SAC9C;QACD,OAAO,EAAE;YACP,UAAU,EAAE3P,UAAkB;SAC/B;KACF;IACD,WAAW,EAAE8P,0BAAqC;IAClD,eAAe,EAAE,CAAC3B,WAAsB,CAAC;IACzC,aAAa,EAAE;QACbjO,KAAgB;QAChBM,iBAA4B;QAC5BE,cAAyB;QACzB0N,WAAsB;QACtBoB,sBAAiC;QACjCK,6BAAwC;KACzC;IACD,gBAAgB,EAAE,CAAC1P,MAAiB,EAAEQ,WAAsB,CAAC;IAC7D,SAAS,EAAE,MAAM;gBACjBN,YAAU;CACX,CAAC;AACF,MAAMe,kBAAgB,GAA6B;IACjD,IAAI,EACF,uMAAuM;IACzM,UAAU,EAAE,KAAK;IACjB,SAAS,EAAE;QACT,GAAG,EAAE;YACH,UAAU,EAAEuO,yBAAiC;SAC9C;QACD,OAAO,EAAE;YACP,UAAU,EAAE3P,UAAkB;SAC/B;KACF;IACD,eAAe,EAAE,CAACmO,WAAsB,EAAEe,OAAkB,CAAC;IAC7D,aAAa,EAAE;QACbhP,KAAgB;QAChBM,iBAA4B;QAC5BE,cAAyB;QACzB0N,WAAsB;QACtBoB,sBAAiC;QACjCK,6BAAwC;KACzC;IACD,gBAAgB,EAAE,CAAC1P,MAAiB,CAAC;gBACrCE,YAAU;CACX,CAAC;AACF,MAAMc,qBAAmB,GAA6B;IACpD,IAAI,EACF,uMAAuM;IACzM,UAAU,EAAE,QAAQ;IACpB,SAAS,EAAE;QACT,GAAG,EAAE,EAAE;QACP,GAAG,EAAE,EAAE;QACP,GAAG,EAAE,EAAE;QACP,GAAG,EAAE,EAAE;QACP,OAAO,EAAE;YACP,UAAU,EAAEnB,UAAkB;SAC/B;KACF;IACD,eAAe,EAAE,CAACmO,WAAsB,CAAC;IACzC,aAAa,EAAE;QACbjO,KAAgB;QAChBM,iBAA4B;QAC5BE,cAAyB;QACzB0N,WAAsB;QACtBoB,sBAAiC;QACjCK,6BAAwC;KACzC;IACD,gBAAgB,EAAE,CAAC1P,MAAiB,CAAC;gBACrCE,YAAU;CACX,CAAC;AACF,MAAM,qCAAqC,GAA6B;IACtE,IAAI,EACF,uKAAuK;IACzK,UAAU,EAAE,KAAK;IACjB,SAAS,EAAE;QACT,GAAG,EAAE;YACH,UAAU,EAAE0P,6BAAqC;SAClD;QACD,OAAO,EAAE;YACP,UAAU,EAAE/P,UAAkB;SAC/B;KACF;IACD,eAAe,EAAE,CAACmO,WAAsB,CAAC;IACzC,aAAa,EAAE;QACbjO,KAAgB;QAChBM,iBAA4B;QAC5BE,cAAyB;QACzB0N,WAAsB;QACtBoB,sBAAiC;KAClC;IACD,gBAAgB,EAAE,CAACrP,MAAiB,CAAC;gBACrCE,YAAU;CACX,CAAC;AACF,MAAM,yCAAyC,GAA6B;IAC1E,IAAI,EAAE,YAAY;IAClB,UAAU,EAAE,KAAK;IACjB,SAAS,EAAE;QACT,GAAG,EAAE;YACH,UAAU,EAAE0P,6BAAqC;SAClD;QACD,OAAO,EAAE;YACP,UAAU,EAAE/P,UAAkB;SAC/B;KACF;IACD,eAAe,EAAE,CAACmO,WAAsB,CAAC;IACzC,aAAa,EAAE;QACbjO,KAAgB;QAChBM,iBAA4B;QAC5BE,cAAyB;QACzBM,QAAmB;QACnBoN,WAAsB;QACtBoB,sBAAiC;KAClC;IACD,gBAAgB,EAAE,CAACrP,MAAiB,CAAC;gBACrCE,YAAU;CACX,CAAC;;ACrsBF;;;;;;;AAqBA;AACA,MAAa,yBAAyB;;;;;IAOpC,YAAY,MAA+B;QACzC,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;KACtB;;;;;;;;IASK,WAAW,CACf,iBAAyB,EACzB,WAAmB,EACnB,aAA4B,EAC5B,OAAmD;;YAOnD,MAAM,mBAAmB,GAAG,CAC1B,IAAmC,EACnC,IAA8B;gBAE9B,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;aACrD,CAAA,CAAC;YACF,MAAM,aAAa,GAAG,CACpB,IAAmC,EACnC,IAA8B;;gBAE9B,IAAI,kBAAkB,GAEN,SAAS,CAAC;gBAC1B,MAAM,gBAAgB,GAAG,MAAA,IAAI,CAAC,OAAO,0CAAE,UAAU,CAAC;gBAClD,MAAM,QAAQ,GAAmC,CAC/C,WAA6C,EAC7C,YAAqB;oBAErB,kBAAkB,GAAG,WAAW,CAAC;oBACjC,gBAAgB,aAAhB,gBAAgB,uBAAhB,gBAAgB,CAAG,WAAW,EAAE,YAAY,CAAC,CAAC;iBAC/C,CAAC;gBACF,MAAM,WAAW,mCACZ,IAAI,KACP,OAAO,kCACF,IAAI,CAAC,OAAO,KACf,UAAU,EAAE,QAAQ,MAEvB,CAAC;gBACF,MAAM,YAAY,GAAG,MAAM,mBAAmB,CAAC,WAAW,EAAE,IAAI,CAAC,CAAC;gBAClE,OAAO;oBACL,YAAY;oBACZ,WAAW,EAAE;wBACX,UAAU,EAAE,kBAAmB,CAAC,MAAM;wBACtC,IAAI,EAAE,kBAAmB,CAAC,UAAU;wBACpC,OAAO,EAAE,kBAAmB,CAAC,OAAO,CAAC,MAAM,EAAE;qBAC9C;iBACF,CAAC;aACH,CAAA,CAAC;YAEF,MAAM,GAAG,GAAG,IAAI,OAAO,CACrB,aAAa,EACb,EAAE,iBAAiB,EAAE,WAAW,EAAE,aAAa,EAAE,OAAO,EAAE,EAC1Da,qBAAmB,CACpB,CAAC;YACF,OAAO,IAAImB,iBAAS,CAAC,GAAG,EAAE;gBACxB,UAAU,EAAE,OAAO,aAAP,OAAO,uBAAP,OAAO,CAAE,UAAU;gBAC/B,YAAY,EAAE,OAAO,aAAP,OAAO,uBAAP,OAAO,CAAE,kBAAkB;aAC1C,CAAC,CAAC;SACJ;KAAA;;;;;;;;IASK,kBAAkB,CACtB,iBAAyB,EACzB,WAAmB,EACnB,aAA4B,EAC5B,OAAmD;;YAEnD,MAAM,MAAM,GAAG,MAAM,IAAI,CAAC,WAAW,CACnC,iBAAiB,EACjB,WAAW,EACX,aAAa,EACb,OAAO,CACR,CAAC;YACF,OAAO,MAAM,CAAC,aAAa,EAAE,CAAC;SAC/B;KAAA;CACF;AACD;AACA,MAAMhC,YAAU,GAAGP,2BAA2B,CAAC,OAAO,cAAc,KAAK,CAAC,CAAC;AAE3E,MAAMoB,qBAAmB,GAA6B;IACpD,IAAI,EACF,8HAA8H;IAChI,UAAU,EAAE,MAAM;IAClB,SAAS,EAAE;QACT,GAAG,EAAE;YACH,UAAU,EAAE8O,aAAqB;SAClC;QACD,GAAG,EAAE;YACH,UAAU,EAAEA,aAAqB;SAClC;QACD,GAAG,EAAE;YACH,UAAU,EAAEA,aAAqB;SAClC;QACD,GAAG,EAAE;YACH,UAAU,EAAEA,aAAqB;SAClC;QACD,OAAO,EAAE;YACP,UAAU,EAAEhQ,UAAkB;SAC/B;KACF;IACD,WAAW,EAAEiQ,aAAwB;IACrC,eAAe,EAAE,CAAC9B,WAAsB,CAAC;IACzC,aAAa,EAAE;QACbjO,KAAgB;QAChBM,iBAA4B;QAC5BE,cAAyB;QACzB0N,WAAsB;KACvB;IACD,gBAAgB,EAAE,CAACjO,MAAiB,EAAEQ,WAAsB,CAAC;IAC7D,SAAS,EAAE,MAAM;gBACjBN,YAAU;CACX,CAAC;;AC9JF;;;;;;;AAwBA;AACA;AACA,MAAa,mBAAmB;;;;;IAO9B,YAAY,MAA+B;QACzC,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;KACtB;;;;;;IAOM,IAAI,CACT,QAAgB,EAChB,OAA2C;QAE3C,MAAM,IAAI,GAAG,IAAI,CAAC,aAAa,CAAC,QAAQ,EAAE,OAAO,CAAC,CAAC;QACnD,OAAO;YACL,IAAI;gBACF,OAAO,IAAI,CAAC,IAAI,EAAE,CAAC;aACpB;YACD,CAAC,MAAM,CAAC,aAAa,CAAC;gBACpB,OAAO,IAAI,CAAC;aACb;YACD,MAAM,EAAE;gBACN,OAAO,IAAI,CAAC,cAAc,CAAC,QAAQ,EAAE,OAAO,CAAC,CAAC;aAC/C;SACF,CAAC;KACH;IAEc,cAAc,CAC3B,QAAgB,EAChB,OAA2C;;YAE3C,IAAI,MAAM,GAAG,oBAAM,IAAI,CAAC,KAAK,CAAC,QAAQ,EAAE,OAAO,CAAC,CAAA,CAAC;YACjD,0BAAM,MAAM,CAAC,KAAK,IAAI,EAAE,CAAA,CAAC;YACzB,IAAI,iBAAiB,GAAG,MAAM,CAAC,QAAQ,CAAC;YACxC,OAAO,iBAAiB,EAAE;gBACxB,MAAM,GAAG,oBAAM,IAAI,CAAC,SAAS,CAAC,QAAQ,EAAE,iBAAiB,EAAE,OAAO,CAAC,CAAA,CAAC;gBACpE,iBAAiB,GAAG,MAAM,CAAC,QAAQ,CAAC;gBACpC,0BAAM,MAAM,CAAC,KAAK,IAAI,EAAE,CAAA,CAAC;aAC1B;SACF;KAAA;IAEc,aAAa,CAC1B,QAAgB,EAChB,OAA2C;;;;gBAE3C,KAAyB,IAAA,KAAAT,oBAAA,IAAI,CAAC,cAAc,CAAC,QAAQ,EAAE,OAAO,CAAC,CAAA,IAAA;oBAApD,MAAM,IAAI,WAAA,CAAA;oBACnB,oBAAA,OAAOC,uBAAAD,oBAAA,IAAI,CAAA,CAAA,CAAA,CAAC;iBACb;;;;;;;;;SACF;KAAA;;;;;;IAOO,KAAK,CACX,QAAgB,EAChB,OAA2C;QAE3C,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,QAAQ,EAAE,OAAO,EAAE,EACrBQ,mBAAiB,CAClB,CAAC;KACH;;;;;;;IAQD,GAAG,CACD,QAAgB,EAChB,iBAAyB,EACzB,OAA0C;QAE1C,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,QAAQ,EAAE,iBAAiB,EAAE,OAAO,EAAE,EACxCgB,kBAAgB,CACjB,CAAC;KACH;;;;;;;IAQO,SAAS,CACf,QAAgB,EAChB,QAAgB,EAChB,OAA+C;QAE/C,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,QAAQ,EAAE,QAAQ,EAAE,OAAO,EAAE,EAC/BkD,uBAAqB,CACtB,CAAC;KACH;CACF;AACD;AACA,MAAMjE,YAAU,GAAGP,2BAA2B,CAAC,OAAO,cAAc,KAAK,CAAC,CAAC;AAE3E,MAAMM,mBAAiB,GAA6B;IAClD,IAAI,EACF,kGAAkG;IACpG,UAAU,EAAE,KAAK;IACjB,SAAS,EAAE;QACT,GAAG,EAAE;YACH,UAAU,EAAE8P,iBAAyB;SACtC;QACD,OAAO,EAAE;YACP,UAAU,EAAElQ,UAAkB;SAC/B;KACF;IACD,eAAe,EAAE,CAAC4L,WAAsB,EAAEuE,QAAmB,CAAC;IAC9D,aAAa,EAAE;QACbjQ,KAAgB;QAChBQ,cAAyB;QACzBwC,QAAmB;KACpB;IACD,gBAAgB,EAAE,CAAC/C,MAAiB,CAAC;gBACrCE,YAAU;CACX,CAAC;AACF,MAAMe,kBAAgB,GAA6B;IACjD,IAAI,EACF,sHAAsH;IACxH,UAAU,EAAE,KAAK;IACjB,SAAS,EAAE;QACT,GAAG,EAAE;YACH,UAAU,EAAEgP,aAAqB;SAClC;QACD,OAAO,EAAE;YACP,UAAU,EAAEpQ,UAAkB;SAC/B;KACF;IACD,eAAe,EAAE,CAAC4L,WAAsB,CAAC;IACzC,aAAa,EAAE;QACb1L,KAAgB;QAChBQ,cAAyB;QACzBwC,QAAmB;QACnBmN,iBAA4B;KAC7B;IACD,gBAAgB,EAAE,CAAClQ,MAAiB,CAAC;gBACrCE,YAAU;CACX,CAAC;AACF,MAAMiE,uBAAqB,GAA6B;IACtD,IAAI,EAAE,YAAY;IAClB,UAAU,EAAE,KAAK;IACjB,SAAS,EAAE;QACT,GAAG,EAAE;YACH,UAAU,EAAE4L,iBAAyB;SACtC;QACD,OAAO,EAAE;YACP,UAAU,EAAElQ,UAAkB;SAC/B;KACF;IACD,eAAe,EAAE,CAAC4L,WAAsB,EAAEuE,QAAmB,CAAC;IAC9D,aAAa,EAAE;QACbjQ,KAAgB;QAChBQ,cAAyB;QACzBM,QAAmB;QACnBkC,QAAmB;KACpB;IACD,gBAAgB,EAAE,CAAC/C,MAAiB,CAAC;gBACrCE,YAAU;CACX,CAAC;;ACtMF;;;;;;;AAwBA;AACA;AACA,MAAa,uBAAuB;;;;;IAOlC,YAAY,MAA+B;QACzC,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;KACtB;;;;;;;IAQM,IAAI,CACT,QAAgB,EAChB,iBAAyB,EACzB,OAA+C;QAE/C,MAAM,IAAI,GAAG,IAAI,CAAC,aAAa,CAAC,QAAQ,EAAE,iBAAiB,EAAE,OAAO,CAAC,CAAC;QACtE,OAAO;YACL,IAAI;gBACF,OAAO,IAAI,CAAC,IAAI,EAAE,CAAC;aACpB;YACD,CAAC,MAAM,CAAC,aAAa,CAAC;gBACpB,OAAO,IAAI,CAAC;aACb;YACD,MAAM,EAAE;gBACN,OAAO,IAAI,CAAC,cAAc,CAAC,QAAQ,EAAE,iBAAiB,EAAE,OAAO,CAAC,CAAC;aAClE;SACF,CAAC;KACH;IAEc,cAAc,CAC3B,QAAgB,EAChB,iBAAyB,EACzB,OAA+C;;YAE/C,IAAI,MAAM,GAAG,oBAAM,IAAI,CAAC,KAAK,CAAC,QAAQ,EAAE,iBAAiB,EAAE,OAAO,CAAC,CAAA,CAAC;YACpE,0BAAM,MAAM,CAAC,KAAK,IAAI,EAAE,CAAA,CAAC;YACzB,IAAI,iBAAiB,GAAG,MAAM,CAAC,QAAQ,CAAC;YACxC,OAAO,iBAAiB,EAAE;gBACxB,MAAM,GAAG,oBAAM,IAAI,CAAC,SAAS,CAC3B,QAAQ,EACR,iBAAiB,EACjB,iBAAiB,EACjB,OAAO,CACR,CAAA,CAAC;gBACF,iBAAiB,GAAG,MAAM,CAAC,QAAQ,CAAC;gBACpC,0BAAM,MAAM,CAAC,KAAK,IAAI,EAAE,CAAA,CAAC;aAC1B;SACF;KAAA;IAEc,aAAa,CAC1B,QAAgB,EAChB,iBAAyB,EACzB,OAA+C;;;;gBAE/C,KAAyB,IAAA,KAAAT,oBAAA,IAAI,CAAC,cAAc,CAC1C,QAAQ,EACR,iBAAiB,EACjB,OAAO,CACR,CAAA,IAAA;oBAJU,MAAM,IAAI,WAAA,CAAA;oBAKnB,oBAAA,OAAOC,uBAAAD,oBAAA,IAAI,CAAA,CAAA,CAAA,CAAC;iBACb;;;;;;;;;SACF;KAAA;;;;;;;IAQO,KAAK,CACX,QAAgB,EAChB,iBAAyB,EACzB,OAA+C;QAE/C,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,QAAQ,EAAE,iBAAiB,EAAE,OAAO,EAAE,EACxCQ,mBAAiB,CAClB,CAAC;KACH;;;;;;;;;IAUD,GAAG,CACD,QAAgB,EAChB,iBAAyB,EACzB,gBAAwB,EACxB,OAA8C;QAE9C,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,QAAQ,EAAE,iBAAiB,EAAE,gBAAgB,EAAE,OAAO,EAAE,EAC1DgB,kBAAgB,CACjB,CAAC;KACH;;;;;;;;IASO,SAAS,CACf,QAAgB,EAChB,iBAAyB,EACzB,QAAgB,EAChB,OAAmD;QAEnD,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,QAAQ,EAAE,iBAAiB,EAAE,QAAQ,EAAE,OAAO,EAAE,EAClDkD,uBAAqB,CACtB,CAAC;KACH;CACF;AACD;AACA,MAAMjE,YAAU,GAAGP,2BAA2B,CAAC,OAAO,cAAc,KAAK,CAAC,CAAC;AAE3E,MAAMM,mBAAiB,GAA6B;IAClD,IAAI,EACF,6HAA6H;IAC/H,UAAU,EAAE,KAAK;IACjB,SAAS,EAAE;QACT,GAAG,EAAE;YACH,UAAU,EAAEkQ,sBAA8B;SAC3C;QACD,OAAO,EAAE;YACP,UAAU,EAAEtQ,UAAkB;SAC/B;KACF;IACD,eAAe,EAAE,CAAC4L,WAAsB,EAAEuE,QAAmB,CAAC;IAC9D,aAAa,EAAE;QACbjQ,KAAgB;QAChBQ,cAAyB;QACzBwC,QAAmB;QACnBmN,iBAA4B;KAC7B;IACD,gBAAgB,EAAE,CAAClQ,MAAiB,CAAC;gBACrCE,YAAU;CACX,CAAC;AACF,MAAMe,kBAAgB,GAA6B;IACjD,IAAI,EACF,gJAAgJ;IAClJ,UAAU,EAAE,KAAK;IACjB,SAAS,EAAE;QACT,GAAG,EAAE;YACH,UAAU,EAAEmP,kBAA0B;SACvC;QACD,OAAO,EAAE;YACP,UAAU,EAAEvQ,UAAkB;SAC/B;KACF;IACD,eAAe,EAAE,CAAC4L,WAAsB,CAAC;IACzC,aAAa,EAAE;QACb1L,KAAgB;QAChBQ,cAAyB;QACzBwC,QAAmB;QACnByL,gBAA2B;QAC3B0B,iBAA4B;KAC7B;IACD,gBAAgB,EAAE,CAAClQ,MAAiB,CAAC;gBACrCE,YAAU;CACX,CAAC;AACF,MAAMiE,uBAAqB,GAA6B;IACtD,IAAI,EAAE,YAAY;IAClB,UAAU,EAAE,KAAK;IACjB,SAAS,EAAE;QACT,GAAG,EAAE;YACH,UAAU,EAAEgM,sBAA8B;SAC3C;QACD,OAAO,EAAE;YACP,UAAU,EAAEtQ,UAAkB;SAC/B;KACF;IACD,eAAe,EAAE,CAAC4L,WAAsB,EAAEuE,QAAmB,CAAC;IAC9D,aAAa,EAAE;QACbjQ,KAAgB;QAChBQ,cAAyB;QACzBM,QAAmB;QACnBkC,QAAmB;QACnBmN,iBAA4B;KAC7B;IACD,gBAAgB,EAAE,CAAClQ,MAAiB,CAAC;gBACrCE,YAAU;CACX,CAAC;;AC7NF;;;;;;;AAwBA;AACA;AACA,MAAa,8BAA8B;;;;;IAQzC,YAAY,MAA+B;QACzC,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;KACtB;;;;;;;;;IAUM,IAAI,CACT,QAAgB,EAChB,iBAAyB,EACzB,gBAAwB,EACxB,OAAsD;QAEtD,MAAM,IAAI,GAAG,IAAI,CAAC,aAAa,CAC7B,QAAQ,EACR,iBAAiB,EACjB,gBAAgB,EAChB,OAAO,CACR,CAAC;QACF,OAAO;YACL,IAAI;gBACF,OAAO,IAAI,CAAC,IAAI,EAAE,CAAC;aACpB;YACD,CAAC,MAAM,CAAC,aAAa,CAAC;gBACpB,OAAO,IAAI,CAAC;aACb;YACD,MAAM,EAAE;gBACN,OAAO,IAAI,CAAC,cAAc,CACxB,QAAQ,EACR,iBAAiB,EACjB,gBAAgB,EAChB,OAAO,CACR,CAAC;aACH;SACF,CAAC;KACH;IAEc,cAAc,CAC3B,QAAgB,EAChB,iBAAyB,EACzB,gBAAwB,EACxB,OAAsD;;YAEtD,IAAI,MAAM,GAAG,oBAAM,IAAI,CAAC,KAAK,CAC3B,QAAQ,EACR,iBAAiB,EACjB,gBAAgB,EAChB,OAAO,CACR,CAAA,CAAC;YACF,0BAAM,MAAM,CAAC,KAAK,IAAI,EAAE,CAAA,CAAC;YACzB,IAAI,iBAAiB,GAAG,MAAM,CAAC,QAAQ,CAAC;YACxC,OAAO,iBAAiB,EAAE;gBACxB,MAAM,GAAG,oBAAM,IAAI,CAAC,SAAS,CAC3B,QAAQ,EACR,iBAAiB,EACjB,gBAAgB,EAChB,iBAAiB,EACjB,OAAO,CACR,CAAA,CAAC;gBACF,iBAAiB,GAAG,MAAM,CAAC,QAAQ,CAAC;gBACpC,0BAAM,MAAM,CAAC,KAAK,IAAI,EAAE,CAAA,CAAC;aAC1B;SACF;KAAA;IAEc,aAAa,CAC1B,QAAgB,EAChB,iBAAyB,EACzB,gBAAwB,EACxB,OAAsD;;;;gBAEtD,KAAyB,IAAA,KAAAT,oBAAA,IAAI,CAAC,cAAc,CAC1C,QAAQ,EACR,iBAAiB,EACjB,gBAAgB,EAChB,OAAO,CACR,CAAA,IAAA;oBALU,MAAM,IAAI,WAAA,CAAA;oBAMnB,oBAAA,OAAOC,uBAAAD,oBAAA,IAAI,CAAA,CAAA,CAAA,CAAC;iBACb;;;;;;;;;SACF;KAAA;;;;;;;;;IAUO,KAAK,CACX,QAAgB,EAChB,iBAAyB,EACzB,gBAAwB,EACxB,OAAsD;QAEtD,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,QAAQ,EAAE,iBAAiB,EAAE,gBAAgB,EAAE,OAAO,EAAE,EAC1DQ,mBAAiB,CAClB,CAAC;KACH;;;;;;;;;;;;IAaD,GAAG,CACD,QAAgB,EAChB,iBAAyB,EACzB,gBAAwB,EACxB,uBAA+B,EAC/B,OAAqD;QAErD,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC;YACE,QAAQ;YACR,iBAAiB;YACjB,gBAAgB;YAChB,uBAAuB;YACvB,OAAO;SACR,EACDgB,kBAAgB,CACjB,CAAC;KACH;;;;;;;;;;IAWO,SAAS,CACf,QAAgB,EAChB,iBAAyB,EACzB,gBAAwB,EACxB,QAAgB,EAChB,OAA0D;QAE1D,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,QAAQ,EAAE,iBAAiB,EAAE,gBAAgB,EAAE,QAAQ,EAAE,OAAO,EAAE,EACpEkD,uBAAqB,CACtB,CAAC;KACH;CACF;AACD;AACA,MAAMjE,YAAU,GAAGP,2BAA2B,CAAC,OAAO,cAAc,KAAK,CAAC,CAAC;AAE3E,MAAMM,mBAAiB,GAA6B;IAClD,IAAI,EACF,yJAAyJ;IAC3J,UAAU,EAAE,KAAK;IACjB,SAAS,EAAE;QACT,GAAG,EAAE;YACH,UAAU,EAAEoQ,6BAAqC;SAClD;QACD,OAAO,EAAE;YACP,UAAU,EAAExQ,UAAkB;SAC/B;KACF;IACD,eAAe,EAAE,CAAC4L,WAAsB,EAAEuE,QAAmB,CAAC;IAC9D,aAAa,EAAE;QACbjQ,KAAgB;QAChBQ,cAAyB;QACzBwC,QAAmB;QACnByL,gBAA2B;QAC3B0B,iBAA4B;KAC7B;IACD,gBAAgB,EAAE,CAAClQ,MAAiB,CAAC;gBACrCE,YAAU;CACX,CAAC;AACF,MAAMe,kBAAgB,GAA6B;IACjD,IAAI,EACF,mLAAmL;IACrL,UAAU,EAAE,KAAK;IACjB,SAAS,EAAE;QACT,GAAG,EAAE;YACH,UAAU,EAAEqP,yBAAiC;SAC9C;QACD,OAAO,EAAE;YACP,UAAU,EAAEzQ,UAAkB;SAC/B;KACF;IACD,eAAe,EAAE,CAAC4L,WAAsB,CAAC;IACzC,aAAa,EAAE;QACb1L,KAAgB;QAChBQ,cAAyB;QACzBwC,QAAmB;QACnByL,gBAA2B;QAC3BK,uBAAkC;QAClCqB,iBAA4B;KAC7B;IACD,gBAAgB,EAAE,CAAClQ,MAAiB,CAAC;gBACrCE,YAAU;CACX,CAAC;AACF,MAAMiE,uBAAqB,GAA6B;IACtD,IAAI,EAAE,YAAY;IAClB,UAAU,EAAE,KAAK;IACjB,SAAS,EAAE;QACT,GAAG,EAAE;YACH,UAAU,EAAEkM,6BAAqC;SAClD;QACD,OAAO,EAAE;YACP,UAAU,EAAExQ,UAAkB;SAC/B;KACF;IACD,eAAe,EAAE,CAAC4L,WAAsB,EAAEuE,QAAmB,CAAC;IAC9D,aAAa,EAAE;QACbjQ,KAAgB;QAChBQ,cAAyB;QACzBM,QAAmB;QACnBkC,QAAmB;QACnByL,gBAA2B;QAC3B0B,iBAA4B;KAC7B;IACD,gBAAgB,EAAE,CAAClQ,MAAiB,CAAC;gBACrCE,YAAU;CACX,CAAC;;ACvQF;;;;;;;AASA,AASA;AACA,MAAa,sBAAsB;;;;;IAOjC,YAAY,MAA+B;QACzC,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;KACtB;;;;;;;IAQD,GAAG,CACD,QAAgB,EAChB,iBAAyB,EACzB,OAA6C;QAE7C,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,QAAQ,EAAE,iBAAiB,EAAE,OAAO,EAAE,EACxCe,kBAAgB,CACjB,CAAC;KACH;CACF;AACD;AACA,MAAMf,YAAU,GAAGP,2BAA2B,CAAC,OAAO,cAAc,KAAK,CAAC,CAAC;AAE3E,MAAMsB,kBAAgB,GAA6B;IACjD,IAAI,EACF,yHAAyH;IAC3H,UAAU,EAAE,KAAK;IACjB,SAAS,EAAE;QACT,GAAG,EAAE;YACH,UAAU,EAAEsP,gBAAwB;SACrC;QACD,OAAO,EAAE;YACP,UAAU,EAAE1Q,UAAkB;SAC/B;KACF;IACD,eAAe,EAAE,CAAC4L,WAAsB,CAAC;IACzC,aAAa,EAAE;QACb1L,KAAgB;QAChBQ,cAAyB;QACzBwC,QAAmB;QACnByN,iBAA4B;KAC7B;IACD,gBAAgB,EAAE,CAACxQ,MAAiB,CAAC;gBACrCE,YAAU;CACX,CAAC;;ACvEF;;;;;;;AASA,AASA;AACA,MAAa,0BAA0B;;;;;IAOrC,YAAY,MAA+B;QACzC,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;KACtB;;;;;;;;IASD,GAAG,CACD,QAAgB,EAChB,iBAAyB,EACzB,gBAAwB,EACxB,OAAiD;QAEjD,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,QAAQ,EAAE,iBAAiB,EAAE,gBAAgB,EAAE,OAAO,EAAE,EAC1De,kBAAgB,CACjB,CAAC;KACH;CACF;AACD;AACA,MAAMf,YAAU,GAAGP,2BAA2B,CAAC,OAAO,cAAc,KAAK,CAAC,CAAC;AAE3E,MAAMsB,kBAAgB,GAA6B;IACjD,IAAI,EACF,mJAAmJ;IACrJ,UAAU,EAAE,KAAK;IACjB,SAAS,EAAE;QACT,GAAG,EAAE;YACH,UAAU,EAAEwP,qBAA6B;SAC1C;QACD,OAAO,EAAE;YACP,UAAU,EAAE5Q,UAAkB;SAC/B;KACF;IACD,eAAe,EAAE,CAAC4L,WAAsB,CAAC;IACzC,aAAa,EAAE;QACb1L,KAAgB;QAChBQ,cAAyB;QACzBwC,QAAmB;QACnByL,gBAA2B;QAC3BgC,iBAA4B;KAC7B;IACD,gBAAgB,EAAE,CAACxQ,MAAiB,CAAC;gBACrCE,YAAU;CACX,CAAC;;AC1EF;;;;;;;AASA,AASA;AACA,MAAa,iCAAiC;;;;;IAQ5C,YAAY,MAA+B;QACzC,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;KACtB;;;;;;;;;;;IAYD,GAAG,CACD,QAAgB,EAChB,iBAAyB,EACzB,gBAAwB,EACxB,uBAA+B,EAC/B,OAAwD;QAExD,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC;YACE,QAAQ;YACR,iBAAiB;YACjB,gBAAgB;YAChB,uBAAuB;YACvB,OAAO;SACR,EACDe,kBAAgB,CACjB,CAAC;KACH;CACF;AACD;AACA,MAAMf,YAAU,GAAGP,2BAA2B,CAAC,OAAO,cAAc,KAAK,CAAC,CAAC;AAE3E,MAAMsB,kBAAgB,GAA6B;IACjD,IAAI,EACF,sLAAsL;IACxL,UAAU,EAAE,KAAK;IACjB,SAAS,EAAE;QACT,GAAG,EAAE;YACH,UAAU,EAAEyP,4BAAoC;SACjD;QACD,OAAO,EAAE;YACP,UAAU,EAAE7Q,UAAkB;SAC/B;KACF;IACD,eAAe,EAAE,CAAC4L,WAAsB,CAAC;IACzC,aAAa,EAAE;QACb1L,KAAgB;QAChBQ,cAAyB;QACzBwC,QAAmB;QACnByL,gBAA2B;QAC3BK,uBAAkC;QAClC2B,iBAA4B;KAC7B;IACD,gBAAgB,EAAE,CAACxQ,MAAiB,CAAC;gBACrCE,YAAU;CACX,CAAC;;ACtFF;;;;;;;AAkCA;AACA;AACA,MAAa,6BAA6B;;;;;IAQxC,YAAY,MAA+B;QACzC,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;KACtB;;;;;;;;IASM,IAAI,CACT,iBAAyB,EACzB,gBAAwB,EACxB,OAAqD;QAErD,MAAM,IAAI,GAAG,IAAI,CAAC,aAAa,CAC7B,iBAAiB,EACjB,gBAAgB,EAChB,OAAO,CACR,CAAC;QACF,OAAO;YACL,IAAI;gBACF,OAAO,IAAI,CAAC,IAAI,EAAE,CAAC;aACpB;YACD,CAAC,MAAM,CAAC,aAAa,CAAC;gBACpB,OAAO,IAAI,CAAC;aACb;YACD,MAAM,EAAE;gBACN,OAAO,IAAI,CAAC,cAAc,CACxB,iBAAiB,EACjB,gBAAgB,EAChB,OAAO,CACR,CAAC;aACH;SACF,CAAC;KACH;IAEc,cAAc,CAC3B,iBAAyB,EACzB,gBAAwB,EACxB,OAAqD;;YAErD,IAAI,MAAM,GAAG,oBAAM,IAAI,CAAC,KAAK,CAAC,iBAAiB,EAAE,gBAAgB,EAAE,OAAO,CAAC,CAAA,CAAC;YAC5E,0BAAM,MAAM,CAAC,KAAK,IAAI,EAAE,CAAA,CAAC;YACzB,IAAI,iBAAiB,GAAG,MAAM,CAAC,QAAQ,CAAC;YACxC,OAAO,iBAAiB,EAAE;gBACxB,MAAM,GAAG,oBAAM,IAAI,CAAC,SAAS,CAC3B,iBAAiB,EACjB,gBAAgB,EAChB,iBAAiB,EACjB,OAAO,CACR,CAAA,CAAC;gBACF,iBAAiB,GAAG,MAAM,CAAC,QAAQ,CAAC;gBACpC,0BAAM,MAAM,CAAC,KAAK,IAAI,EAAE,CAAA,CAAC;aAC1B;SACF;KAAA;IAEc,aAAa,CAC1B,iBAAyB,EACzB,gBAAwB,EACxB,OAAqD;;;;gBAErD,KAAyB,IAAA,KAAAT,oBAAA,IAAI,CAAC,cAAc,CAC1C,iBAAiB,EACjB,gBAAgB,EAChB,OAAO,CACR,CAAA,IAAA;oBAJU,MAAM,IAAI,WAAA,CAAA;oBAKnB,oBAAA,OAAOC,uBAAAD,oBAAA,IAAI,CAAA,CAAA,CAAA,CAAC;iBACb;;;;;;;;;SACF;KAAA;;;;;;;;IASK,WAAW,CACf,gBAAwB,EACxB,iBAAyB,EACzB,gBAAwB,EACxB,OAAuD;;YAEvD,MAAM,mBAAmB,GAAG,CAC1B,IAAmC,EACnC,IAA8B;gBAE9B,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;aACrD,CAAA,CAAC;YACF,MAAM,aAAa,GAAG,CACpB,IAAmC,EACnC,IAA8B;;gBAE9B,IAAI,kBAAkB,GAEN,SAAS,CAAC;gBAC1B,MAAM,gBAAgB,GAAG,MAAA,IAAI,CAAC,OAAO,0CAAE,UAAU,CAAC;gBAClD,MAAM,QAAQ,GAAmC,CAC/C,WAA6C,EAC7C,YAAqB;oBAErB,kBAAkB,GAAG,WAAW,CAAC;oBACjC,gBAAgB,aAAhB,gBAAgB,uBAAhB,gBAAgB,CAAG,WAAW,EAAE,YAAY,CAAC,CAAC;iBAC/C,CAAC;gBACF,MAAM,WAAW,mCACZ,IAAI,KACP,OAAO,kCACF,IAAI,CAAC,OAAO,KACf,UAAU,EAAE,QAAQ,MAEvB,CAAC;gBACF,MAAM,YAAY,GAAG,MAAM,mBAAmB,CAAC,WAAW,EAAE,IAAI,CAAC,CAAC;gBAClE,OAAO;oBACL,YAAY;oBACZ,WAAW,EAAE;wBACX,UAAU,EAAE,kBAAmB,CAAC,MAAM;wBACtC,IAAI,EAAE,kBAAmB,CAAC,UAAU;wBACpC,OAAO,EAAE,kBAAmB,CAAC,OAAO,CAAC,MAAM,EAAE;qBAC9C;iBACF,CAAC;aACH,CAAA,CAAC;YAEF,MAAM,GAAG,GAAG,IAAI,OAAO,CACrB,aAAa,EACb,EAAE,gBAAgB,EAAE,iBAAiB,EAAE,gBAAgB,EAAE,OAAO,EAAE,EAClEuB,qBAAmB,CACpB,CAAC;YACF,OAAO,IAAIkB,iBAAS,CAAC,GAAG,EAAE;gBACxB,UAAU,EAAE,OAAO,aAAP,OAAO,uBAAP,OAAO,CAAE,UAAU;gBAC/B,YAAY,EAAE,OAAO,aAAP,OAAO,uBAAP,OAAO,CAAE,kBAAkB;aAC1C,CAAC,CAAC;SACJ;KAAA;;;;;;;;IASK,kBAAkB,CACtB,gBAAwB,EACxB,iBAAyB,EACzB,gBAAwB,EACxB,OAAuD;;YAEvD,MAAM,MAAM,GAAG,MAAM,IAAI,CAAC,WAAW,CACnC,gBAAgB,EAChB,iBAAiB,EACjB,gBAAgB,EAChB,OAAO,CACR,CAAC;YACF,OAAO,MAAM,CAAC,aAAa,EAAE,CAAC;SAC/B;KAAA;;;;;;;;IASD,GAAG,CACD,gBAAwB,EACxB,iBAAyB,EACzB,gBAAwB,EACxB,OAAoD;QAEpD,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,gBAAgB,EAAE,iBAAiB,EAAE,gBAAgB,EAAE,OAAO,EAAE,EAClEjB,kBAAgB,CACjB,CAAC;KACH;;;;;;;;IASD,eAAe,CACb,gBAAwB,EACxB,iBAAyB,EACzB,gBAAwB,EACxB,OAAgE;QAEhE,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,gBAAgB,EAAE,iBAAiB,EAAE,gBAAgB,EAAE,OAAO,EAAE,EAClEiJ,8BAA4B,CAC7B,CAAC;KACH;;;;;;;;IASO,KAAK,CACX,iBAAyB,EACzB,gBAAwB,EACxB,OAAqD;QAErD,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,iBAAiB,EAAE,gBAAgB,EAAE,OAAO,EAAE,EAChDjK,mBAAiB,CAClB,CAAC;KACH;;;;;;;;;IAUK,YAAY,CAChB,gBAAwB,EACxB,iBAAyB,EACzB,gBAAwB,EACxB,OAAwD;;YAExD,MAAM,mBAAmB,GAAG,CAC1B,IAAmC,EACnC,IAA8B;gBAE9B,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;aACrD,CAAA,CAAC;YACF,MAAM,aAAa,GAAG,CACpB,IAAmC,EACnC,IAA8B;;gBAE9B,IAAI,kBAAkB,GAEN,SAAS,CAAC;gBAC1B,MAAM,gBAAgB,GAAG,MAAA,IAAI,CAAC,OAAO,0CAAE,UAAU,CAAC;gBAClD,MAAM,QAAQ,GAAmC,CAC/C,WAA6C,EAC7C,YAAqB;oBAErB,kBAAkB,GAAG,WAAW,CAAC;oBACjC,gBAAgB,aAAhB,gBAAgB,uBAAhB,gBAAgB,CAAG,WAAW,EAAE,YAAY,CAAC,CAAC;iBAC/C,CAAC;gBACF,MAAM,WAAW,mCACZ,IAAI,KACP,OAAO,kCACF,IAAI,CAAC,OAAO,KACf,UAAU,EAAE,QAAQ,MAEvB,CAAC;gBACF,MAAM,YAAY,GAAG,MAAM,mBAAmB,CAAC,WAAW,EAAE,IAAI,CAAC,CAAC;gBAClE,OAAO;oBACL,YAAY;oBACZ,WAAW,EAAE;wBACX,UAAU,EAAE,kBAAmB,CAAC,MAAM;wBACtC,IAAI,EAAE,kBAAmB,CAAC,UAAU;wBACpC,OAAO,EAAE,kBAAmB,CAAC,OAAO,CAAC,MAAM,EAAE;qBAC9C;iBACF,CAAC;aACH,CAAA,CAAC;YAEF,MAAM,GAAG,GAAG,IAAI,OAAO,CACrB,aAAa,EACb,EAAE,gBAAgB,EAAE,iBAAiB,EAAE,gBAAgB,EAAE,OAAO,EAAE,EAClEsE,sBAAoB,CACrB,CAAC;YACF,OAAO,IAAIrC,iBAAS,CAAC,GAAG,EAAE;gBACxB,UAAU,EAAE,OAAO,aAAP,OAAO,uBAAP,OAAO,CAAE,UAAU;gBAC/B,YAAY,EAAE,OAAO,aAAP,OAAO,uBAAP,OAAO,CAAE,kBAAkB;aAC1C,CAAC,CAAC;SACJ;KAAA;;;;;;;;;IAUK,mBAAmB,CACvB,gBAAwB,EACxB,iBAAyB,EACzB,gBAAwB,EACxB,OAAwD;;YAExD,MAAM,MAAM,GAAG,MAAM,IAAI,CAAC,YAAY,CACpC,gBAAgB,EAChB,iBAAiB,EACjB,gBAAgB,EAChB,OAAO,CACR,CAAC;YACF,OAAO,MAAM,CAAC,aAAa,EAAE,CAAC;SAC/B;KAAA;;;;;;;;;IAUK,YAAY,CAChB,gBAAwB,EACxB,iBAAyB,EACzB,gBAAwB,EACxB,OAAwD;;YAExD,MAAM,mBAAmB,GAAG,CAC1B,IAAmC,EACnC,IAA8B;gBAE9B,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;aACrD,CAAA,CAAC;YACF,MAAM,aAAa,GAAG,CACpB,IAAmC,EACnC,IAA8B;;gBAE9B,IAAI,kBAAkB,GAEN,SAAS,CAAC;gBAC1B,MAAM,gBAAgB,GAAG,MAAA,IAAI,CAAC,OAAO,0CAAE,UAAU,CAAC;gBAClD,MAAM,QAAQ,GAAmC,CAC/C,WAA6C,EAC7C,YAAqB;oBAErB,kBAAkB,GAAG,WAAW,CAAC;oBACjC,gBAAgB,aAAhB,gBAAgB,uBAAhB,gBAAgB,CAAG,WAAW,EAAE,YAAY,CAAC,CAAC;iBAC/C,CAAC;gBACF,MAAM,WAAW,mCACZ,IAAI,KACP,OAAO,kCACF,IAAI,CAAC,OAAO,KACf,UAAU,EAAE,QAAQ,MAEvB,CAAC;gBACF,MAAM,YAAY,GAAG,MAAM,mBAAmB,CAAC,WAAW,EAAE,IAAI,CAAC,CAAC;gBAClE,OAAO;oBACL,YAAY;oBACZ,WAAW,EAAE;wBACX,UAAU,EAAE,kBAAmB,CAAC,MAAM;wBACtC,IAAI,EAAE,kBAAmB,CAAC,UAAU;wBACpC,OAAO,EAAE,kBAAmB,CAAC,OAAO,CAAC,MAAM,EAAE;qBAC9C;iBACF,CAAC;aACH,CAAA,CAAC;YAEF,MAAM,GAAG,GAAG,IAAI,OAAO,CACrB,aAAa,EACb,EAAE,gBAAgB,EAAE,iBAAiB,EAAE,gBAAgB,EAAE,OAAO,EAAE,EAClEiE,sBAAoB,CACrB,CAAC;YACF,OAAO,IAAIjE,iBAAS,CAAC,GAAG,EAAE;gBACxB,UAAU,EAAE,OAAO,aAAP,OAAO,uBAAP,OAAO,CAAE,UAAU;gBAC/B,YAAY,EAAE,OAAO,aAAP,OAAO,uBAAP,OAAO,CAAE,kBAAkB;aAC1C,CAAC,CAAC;SACJ;KAAA;;;;;;;;;IAUK,mBAAmB,CACvB,gBAAwB,EACxB,iBAAyB,EACzB,gBAAwB,EACxB,OAAwD;;YAExD,MAAM,MAAM,GAAG,MAAM,IAAI,CAAC,YAAY,CACpC,gBAAgB,EAChB,iBAAiB,EACjB,gBAAgB,EAChB,OAAO,CACR,CAAC;YACF,OAAO,MAAM,CAAC,aAAa,EAAE,CAAC;SAC/B;KAAA;;;;;;;;;;IAWK,YAAY,CAChB,gBAAwB,EACxB,iBAAyB,EACzB,gBAAwB,EACxB,OAAwD;;YAExD,MAAM,mBAAmB,GAAG,CAC1B,IAAmC,EACnC,IAA8B;gBAE9B,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;aACrD,CAAA,CAAC;YACF,MAAM,aAAa,GAAG,CACpB,IAAmC,EACnC,IAA8B;;gBAE9B,IAAI,kBAAkB,GAEN,SAAS,CAAC;gBAC1B,MAAM,gBAAgB,GAAG,MAAA,IAAI,CAAC,OAAO,0CAAE,UAAU,CAAC;gBAClD,MAAM,QAAQ,GAAmC,CAC/C,WAA6C,EAC7C,YAAqB;oBAErB,kBAAkB,GAAG,WAAW,CAAC;oBACjC,gBAAgB,aAAhB,gBAAgB,uBAAhB,gBAAgB,CAAG,WAAW,EAAE,YAAY,CAAC,CAAC;iBAC/C,CAAC;gBACF,MAAM,WAAW,mCACZ,IAAI,KACP,OAAO,kCACF,IAAI,CAAC,OAAO,KACf,UAAU,EAAE,QAAQ,MAEvB,CAAC;gBACF,MAAM,YAAY,GAAG,MAAM,mBAAmB,CAAC,WAAW,EAAE,IAAI,CAAC,CAAC;gBAClE,OAAO;oBACL,YAAY;oBACZ,WAAW,EAAE;wBACX,UAAU,EAAE,kBAAmB,CAAC,MAAM;wBACtC,IAAI,EAAE,kBAAmB,CAAC,UAAU;wBACpC,OAAO,EAAE,kBAAmB,CAAC,OAAO,CAAC,MAAM,EAAE;qBAC9C;iBACF,CAAC;aACH,CAAA,CAAC;YAEF,MAAM,GAAG,GAAG,IAAI,OAAO,CACrB,aAAa,EACb,EAAE,gBAAgB,EAAE,iBAAiB,EAAE,gBAAgB,EAAE,OAAO,EAAE,EAClE,oBAAoB,CACrB,CAAC;YACF,OAAO,IAAIA,iBAAS,CAAC,GAAG,EAAE;gBACxB,UAAU,EAAE,OAAO,aAAP,OAAO,uBAAP,OAAO,CAAE,UAAU;gBAC/B,YAAY,EAAE,OAAO,aAAP,OAAO,uBAAP,OAAO,CAAE,kBAAkB;aAC1C,CAAC,CAAC;SACJ;KAAA;;;;;;;;;;IAWK,mBAAmB,CACvB,gBAAwB,EACxB,iBAAyB,EACzB,gBAAwB,EACxB,OAAwD;;YAExD,MAAM,MAAM,GAAG,MAAM,IAAI,CAAC,YAAY,CACpC,gBAAgB,EAChB,iBAAiB,EACjB,gBAAgB,EAChB,OAAO,CACR,CAAC;YACF,OAAO,MAAM,CAAC,aAAa,EAAE,CAAC;SAC/B;KAAA;;;;;;;;IASD,oBAAoB,CAClB,gBAAwB,EACxB,iBAAyB,EACzB,gBAAwB,EACxB,OAAqE;QAErE,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,gBAAgB,EAAE,iBAAiB,EAAE,gBAAgB,EAAE,OAAO,EAAE,EAClE,iCAAiC,CAClC,CAAC;KACH;;;;;;;;IASO,SAAS,CACf,iBAAyB,EACzB,gBAAwB,EACxB,QAAgB,EAChB,OAAyD;QAEzD,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,iBAAiB,EAAE,gBAAgB,EAAE,QAAQ,EAAE,OAAO,EAAE,EAC1DiC,uBAAqB,CACtB,CAAC;KACH;CACF;AACD;AACA,MAAMjE,YAAU,GAAGP,2BAA2B,CAAC,OAAO,cAAc,KAAK,CAAC,CAAC;AAE3E,MAAMqB,qBAAmB,GAA6B;IACpD,IAAI,EACF,kKAAkK;IACpK,UAAU,EAAE,QAAQ;IACpB,SAAS,EAAE;QACT,GAAG,EAAE,EAAE;QACP,GAAG,EAAE,EAAE;QACP,GAAG,EAAE,EAAE;QACP,GAAG,EAAE,EAAE;QACP,OAAO,EAAE;YACP,UAAU,EAAEnB,UAAkB;SAC/B;KACF;IACD,eAAe,EAAE,CAAC8Q,WAAsB,CAAC;IACzC,aAAa,EAAE;QACb5Q,KAAgB;QAChBM,iBAA4B;QAC5BE,cAAyB;QACzBqQ,gBAA2B;QAC3BC,gBAA2B;KAC5B;IACD,gBAAgB,EAAE,CAAC7Q,MAAiB,CAAC;gBACrCE,YAAU;CACX,CAAC;AACF,MAAMe,kBAAgB,GAA6B;IACjD,IAAI,EACF,kKAAkK;IACpK,UAAU,EAAE,KAAK;IACjB,SAAS,EAAE;QACT,GAAG,EAAE;YACH,UAAU,EAAE6P,YAAoB;SACjC;QACD,OAAO,EAAE;YACP,UAAU,EAAEjR,UAAkB;SAC/B;KACF;IACD,eAAe,EAAE,CAACmC,OAAkB,EAAE2O,WAAsB,CAAC;IAC7D,aAAa,EAAE;QACb5Q,KAAgB;QAChBM,iBAA4B;QAC5BE,cAAyB;QACzBqQ,gBAA2B;QAC3BC,gBAA2B;KAC5B;IACD,gBAAgB,EAAE,CAAC7Q,MAAiB,CAAC;gBACrCE,YAAU;CACX,CAAC;AACF,MAAMgK,8BAA4B,GAA6B;IAC7D,IAAI,EACF,+KAA+K;IACjL,UAAU,EAAE,KAAK;IACjB,SAAS,EAAE;QACT,GAAG,EAAE;YACH,UAAU,EAAE6G,gBAAwB;SACrC;QACD,OAAO,EAAE;YACP,UAAU,EAAElR,UAAkB;SAC/B;KACF;IACD,eAAe,EAAE,CAAC8Q,WAAsB,CAAC;IACzC,aAAa,EAAE;QACb5Q,KAAgB;QAChBM,iBAA4B;QAC5BE,cAAyB;QACzBqQ,gBAA2B;QAC3BC,gBAA2B;KAC5B;IACD,gBAAgB,EAAE,CAAC7Q,MAAiB,CAAC;gBACrCE,YAAU;CACX,CAAC;AACF,MAAMD,mBAAiB,GAA6B;IAClD,IAAI,EACF,+IAA+I;IACjJ,UAAU,EAAE,KAAK;IACjB,SAAS,EAAE;QACT,GAAG,EAAE;YACH,UAAU,EAAE+Q,sBAA8B;SAC3C;QACD,OAAO,EAAE;YACP,UAAU,EAAEnR,UAAkB;SAC/B;KACF;IACD,eAAe,EAAE,CAACmC,OAAkB,EAAE2O,WAAsB,CAAC;IAC7D,aAAa,EAAE;QACb5Q,KAAgB;QAChBM,iBAA4B;QAC5BE,cAAyB;QACzBsQ,gBAA2B;KAC5B;IACD,gBAAgB,EAAE,CAAC7Q,MAAiB,CAAC;gBACrCE,YAAU;CACX,CAAC;AACF,MAAMqE,sBAAoB,GAA6B;IACrD,IAAI,EACF,0KAA0K;IAC5K,UAAU,EAAE,MAAM;IAClB,SAAS,EAAE;QACT,GAAG,EAAE,EAAE;QACP,GAAG,EAAE,EAAE;QACP,GAAG,EAAE,EAAE;QACP,GAAG,EAAE,EAAE;QACP,OAAO,EAAE;YACP,UAAU,EAAE1E,UAAkB;SAC/B;KACF;IACD,eAAe,EAAE,CAAC8Q,WAAsB,CAAC;IACzC,aAAa,EAAE;QACb5Q,KAAgB;QAChBM,iBAA4B;QAC5BE,cAAyB;QACzBqQ,gBAA2B;QAC3BC,gBAA2B;KAC5B;IACD,gBAAgB,EAAE,CAAC7Q,MAAiB,CAAC;gBACrCE,YAAU;CACX,CAAC;AACF,MAAMiG,sBAAoB,GAA6B;IACrD,IAAI,EACF,0KAA0K;IAC5K,UAAU,EAAE,MAAM;IAClB,SAAS,EAAE;QACT,GAAG,EAAE,EAAE;QACP,GAAG,EAAE,EAAE;QACP,GAAG,EAAE,EAAE;QACP,GAAG,EAAE,EAAE;QACP,OAAO,EAAE;YACP,UAAU,EAAEtG,UAAkB;SAC/B;KACF;IACD,eAAe,EAAE,CAAC8Q,WAAsB,CAAC;IACzC,aAAa,EAAE;QACb5Q,KAAgB;QAChBM,iBAA4B;QAC5BE,cAAyB;QACzBqQ,gBAA2B;QAC3BC,gBAA2B;KAC5B;IACD,gBAAgB,EAAE,CAAC7Q,MAAiB,CAAC;gBACrCE,YAAU;CACX,CAAC;AACF,MAAM,oBAAoB,GAA6B;IACrD,IAAI,EACF,0KAA0K;IAC5K,UAAU,EAAE,MAAM;IAClB,SAAS,EAAE;QACT,GAAG,EAAE,EAAE;QACP,GAAG,EAAE,EAAE;QACP,GAAG,EAAE,EAAE;QACP,GAAG,EAAE,EAAE;QACP,OAAO,EAAE;YACP,UAAU,EAAEL,UAAkB;SAC/B;KACF;IACD,eAAe,EAAE,CAAC8Q,WAAsB,CAAC;IACzC,aAAa,EAAE;QACb5Q,KAAgB;QAChBM,iBAA4B;QAC5BE,cAAyB;QACzBqQ,gBAA2B;QAC3BC,gBAA2B;KAC5B;IACD,gBAAgB,EAAE,CAAC7Q,MAAiB,CAAC;gBACrCE,YAAU;CACX,CAAC;AACF,MAAM,iCAAiC,GAA6B;IAClE,IAAI,EACF,oLAAoL;IACtL,UAAU,EAAE,KAAK;IACjB,SAAS,EAAE;QACT,GAAG,EAAE;YACH,UAAU,EAAE,EAAE,IAAI,EAAE,EAAE,IAAI,EAAE,QAAQ,EAAE,EAAE,cAAc,EAAE,gBAAgB,EAAE;SAC3E;QACD,OAAO,EAAE,EAAE;KACZ;IACD,eAAe,EAAE,CAACyQ,WAAsB,CAAC;IACzC,aAAa,EAAE;QACb5Q,KAAgB;QAChBM,iBAA4B;QAC5BE,cAAyB;QACzBqQ,gBAA2B;QAC3BC,gBAA2B;KAC5B;IACD,gBAAgB,EAAE,CAACI,OAAkB,CAAC;gBACtC/Q,YAAU;CACX,CAAC;AACF,MAAMiE,uBAAqB,GAA6B;IACtD,IAAI,EAAE,YAAY;IAClB,UAAU,EAAE,KAAK;IACjB,SAAS,EAAE;QACT,GAAG,EAAE;YACH,UAAU,EAAE6M,sBAA8B;SAC3C;QACD,OAAO,EAAE;YACP,UAAU,EAAEnR,UAAkB;SAC/B;KACF;IACD,eAAe,EAAE,CAACmC,OAAkB,EAAE2O,WAAsB,CAAC;IAC7D,aAAa,EAAE;QACb5Q,KAAgB;QAChBM,iBAA4B;QAC5BE,cAAyB;QACzBM,QAAmB;QACnBgQ,gBAA2B;KAC5B;IACD,gBAAgB,EAAE,CAAC7Q,MAAiB,CAAC;gBACrCE,YAAU;CACX,CAAC;;AC/vBF;;;;;;;AAwBA;AACA;AACA,MAAa,qBAAqB;;;;;IAOhC,YAAY,MAA+B;QACzC,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;KACtB;;;;;;;;IASM,IAAI,CACT,iBAAyB,EACzB,gBAAwB,EACxB,OAA6C;QAE7C,MAAM,IAAI,GAAG,IAAI,CAAC,aAAa,CAC7B,iBAAiB,EACjB,gBAAgB,EAChB,OAAO,CACR,CAAC;QACF,OAAO;YACL,IAAI;gBACF,OAAO,IAAI,CAAC,IAAI,EAAE,CAAC;aACpB;YACD,CAAC,MAAM,CAAC,aAAa,CAAC;gBACpB,OAAO,IAAI,CAAC;aACb;YACD,MAAM,EAAE;gBACN,OAAO,IAAI,CAAC,cAAc,CACxB,iBAAiB,EACjB,gBAAgB,EAChB,OAAO,CACR,CAAC;aACH;SACF,CAAC;KACH;IAEc,cAAc,CAC3B,iBAAyB,EACzB,gBAAwB,EACxB,OAA6C;;YAE7C,IAAI,MAAM,GAAG,oBAAM,IAAI,CAAC,KAAK,CAAC,iBAAiB,EAAE,gBAAgB,EAAE,OAAO,CAAC,CAAA,CAAC;YAC5E,0BAAM,MAAM,CAAC,KAAK,IAAI,EAAE,CAAA,CAAC;YACzB,IAAI,iBAAiB,GAAG,MAAM,CAAC,QAAQ,CAAC;YACxC,OAAO,iBAAiB,EAAE;gBACxB,MAAM,GAAG,oBAAM,IAAI,CAAC,SAAS,CAC3B,iBAAiB,EACjB,gBAAgB,EAChB,iBAAiB,EACjB,OAAO,CACR,CAAA,CAAC;gBACF,iBAAiB,GAAG,MAAM,CAAC,QAAQ,CAAC;gBACpC,0BAAM,MAAM,CAAC,KAAK,IAAI,EAAE,CAAA,CAAC;aAC1B;SACF;KAAA;IAEc,aAAa,CAC1B,iBAAyB,EACzB,gBAAwB,EACxB,OAA6C;;;;gBAE7C,KAAyB,IAAA,KAAAT,oBAAA,IAAI,CAAC,cAAc,CAC1C,iBAAiB,EACjB,gBAAgB,EAChB,OAAO,CACR,CAAA,IAAA;oBAJU,MAAM,IAAI,WAAA,CAAA;oBAKnB,oBAAA,OAAOC,uBAAAD,oBAAA,IAAI,CAAA,CAAA,CAAA,CAAC;iBACb;;;;;;;;;SACF;KAAA;;;;;;;;IASD,GAAG,CACD,QAAgB,EAChB,iBAAyB,EACzB,gBAAwB,EACxB,OAA4C;QAE5C,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,QAAQ,EAAE,iBAAiB,EAAE,gBAAgB,EAAE,OAAO,EAAE,EAC1DwB,kBAAgB,CACjB,CAAC;KACH;;;;;;;;IASO,KAAK,CACX,iBAAyB,EACzB,gBAAwB,EACxB,OAA6C;QAE7C,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,iBAAiB,EAAE,gBAAgB,EAAE,OAAO,EAAE,EAChDhB,mBAAiB,CAClB,CAAC;KACH;;;;;;;;IASO,SAAS,CACf,iBAAyB,EACzB,gBAAwB,EACxB,QAAgB,EAChB,OAAiD;QAEjD,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,iBAAiB,EAAE,gBAAgB,EAAE,QAAQ,EAAE,OAAO,EAAE,EAC1DkE,uBAAqB,CACtB,CAAC;KACH;CACF;AACD;AACA,MAAMjE,YAAU,GAAGP,2BAA2B,CAAC,OAAO,cAAc,KAAK,CAAC,CAAC;AAE3E,MAAMsB,kBAAgB,GAA6B;IACjD,IAAI,EACF,kJAAkJ;IACpJ,UAAU,EAAE,KAAK;IACjB,SAAS,EAAE;QACT,GAAG,EAAE;YACH,UAAU,EAAEiQ,gBAAwB;SACrC;QACD,OAAO,EAAE;YACP,UAAU,EAAErR,UAAkB;SAC/B;KACF;IACD,eAAe,EAAE,CAAC8Q,WAAsB,CAAC;IACzC,aAAa,EAAE;QACb5Q,KAAgB;QAChBM,iBAA4B;QAC5BE,cAAyB;QACzBsQ,gBAA2B;QAC3BM,QAAmB;KACpB;IACD,gBAAgB,EAAE,CAACnR,MAAiB,CAAC;gBACrCE,YAAU;CACX,CAAC;AACF,MAAMD,mBAAiB,GAA6B;IAClD,IAAI,EACF,uIAAuI;IACzI,UAAU,EAAE,KAAK;IACjB,SAAS,EAAE;QACT,GAAG,EAAE;YACH,UAAU,EAAEmR,0BAAkC;SAC/C;QACD,OAAO,EAAE;YACP,UAAU,EAAEvR,UAAkB;SAC/B;KACF;IACD,eAAe,EAAE,CAAC8Q,WAAsB,CAAC;IACzC,aAAa,EAAE;QACb5Q,KAAgB;QAChBM,iBAA4B;QAC5BE,cAAyB;QACzBsQ,gBAA2B;KAC5B;IACD,gBAAgB,EAAE,CAAC7Q,MAAiB,CAAC;gBACrCE,YAAU;CACX,CAAC;AACF,MAAMiE,uBAAqB,GAA6B;IACtD,IAAI,EAAE,YAAY;IAClB,UAAU,EAAE,KAAK;IACjB,SAAS,EAAE;QACT,GAAG,EAAE;YACH,UAAU,EAAEiN,0BAAkC;SAC/C;QACD,OAAO,EAAE;YACP,UAAU,EAAEvR,UAAkB;SAC/B;KACF;IACD,eAAe,EAAE,CAAC8Q,WAAsB,CAAC;IACzC,aAAa,EAAE;QACb5Q,KAAgB;QAChBM,iBAA4B;QAC5BE,cAAyB;QACzBM,QAAmB;QACnBgQ,gBAA2B;KAC5B;IACD,gBAAgB,EAAE,CAAC7Q,MAAiB,CAAC;gBACrCE,YAAU;CACX,CAAC;;ACtOF;;;;;;;AA2CA;AACA;AACA,MAAa,iBAAiB;;;;;IAO5B,YAAY,MAA+B;QACzC,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;KACtB;;;;;;;IAQM,OAAO,CACZ,OAA4C;QAE5C,MAAM,IAAI,GAAG,IAAI,CAAC,gBAAgB,CAAC,OAAO,CAAC,CAAC;QAC5C,OAAO;YACL,IAAI;gBACF,OAAO,IAAI,CAAC,IAAI,EAAE,CAAC;aACpB;YACD,CAAC,MAAM,CAAC,aAAa,CAAC;gBACpB,OAAO,IAAI,CAAC;aACb;YACD,MAAM,EAAE;gBACN,OAAO,IAAI,CAAC,iBAAiB,CAAC,OAAO,CAAC,CAAC;aACxC;SACF,CAAC;KACH;IAEc,iBAAiB,CAC9B,OAA4C;;YAE5C,IAAI,MAAM,GAAG,oBAAM,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAA,CAAC;YAC1C,0BAAM,MAAM,CAAC,KAAK,IAAI,EAAE,CAAA,CAAC;YACzB,IAAI,iBAAiB,GAAG,MAAM,CAAC,QAAQ,CAAC;YACxC,OAAO,iBAAiB,EAAE;gBACxB,MAAM,GAAG,oBAAM,IAAI,CAAC,YAAY,CAAC,iBAAiB,EAAE,OAAO,CAAC,CAAA,CAAC;gBAC7D,iBAAiB,GAAG,MAAM,CAAC,QAAQ,CAAC;gBACpC,0BAAM,MAAM,CAAC,KAAK,IAAI,EAAE,CAAA,CAAC;aAC1B;SACF;KAAA;IAEc,gBAAgB,CAC7B,OAA4C;;;;gBAE5C,KAAyB,IAAA,KAAAT,oBAAA,IAAI,CAAC,iBAAiB,CAAC,OAAO,CAAC,CAAA,IAAA;oBAA7C,MAAM,IAAI,WAAA,CAAA;oBACnB,oBAAA,OAAOC,uBAAAD,oBAAA,IAAI,CAAA,CAAA,CAAA,CAAC;iBACb;;;;;;;;;SACF;KAAA;;;;;;;IAQM,IAAI,CACT,iBAAyB,EACzB,OAAyC;QAEzC,MAAM,IAAI,GAAG,IAAI,CAAC,aAAa,CAAC,iBAAiB,EAAE,OAAO,CAAC,CAAC;QAC5D,OAAO;YACL,IAAI;gBACF,OAAO,IAAI,CAAC,IAAI,EAAE,CAAC;aACpB;YACD,CAAC,MAAM,CAAC,aAAa,CAAC;gBACpB,OAAO,IAAI,CAAC;aACb;YACD,MAAM,EAAE;gBACN,OAAO,IAAI,CAAC,cAAc,CAAC,iBAAiB,EAAE,OAAO,CAAC,CAAC;aACxD;SACF,CAAC;KACH;IAEc,cAAc,CAC3B,iBAAyB,EACzB,OAAyC;;YAEzC,IAAI,MAAM,GAAG,oBAAM,IAAI,CAAC,KAAK,CAAC,iBAAiB,EAAE,OAAO,CAAC,CAAA,CAAC;YAC1D,0BAAM,MAAM,CAAC,KAAK,IAAI,EAAE,CAAA,CAAC;YACzB,IAAI,iBAAiB,GAAG,MAAM,CAAC,QAAQ,CAAC;YACxC,OAAO,iBAAiB,EAAE;gBACxB,MAAM,GAAG,oBAAM,IAAI,CAAC,SAAS,CAC3B,iBAAiB,EACjB,iBAAiB,EACjB,OAAO,CACR,CAAA,CAAC;gBACF,iBAAiB,GAAG,MAAM,CAAC,QAAQ,CAAC;gBACpC,0BAAM,MAAM,CAAC,KAAK,IAAI,EAAE,CAAA,CAAC;aAC1B;SACF;KAAA;IAEc,aAAa,CAC1B,iBAAyB,EACzB,OAAyC;;;;gBAEzC,KAAyB,IAAA,KAAAA,oBAAA,IAAI,CAAC,cAAc,CAAC,iBAAiB,EAAE,OAAO,CAAC,CAAA,IAAA;oBAA7D,MAAM,IAAI,WAAA,CAAA;oBACnB,oBAAA,OAAOC,uBAAAD,oBAAA,IAAI,CAAA,CAAA,CAAA,CAAC;iBACb;;;;;;;;;SACF;KAAA;;;;;;;;IASK,mBAAmB,CACvB,iBAAyB,EACzB,gBAAwB,EACxB,OAAmD;;YAOnD,MAAM,mBAAmB,GAAG,CAC1B,IAAmC,EACnC,IAA8B;gBAE9B,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;aACrD,CAAA,CAAC;YACF,MAAM,aAAa,GAAG,CACpB,IAAmC,EACnC,IAA8B;;gBAE9B,IAAI,kBAAkB,GAEN,SAAS,CAAC;gBAC1B,MAAM,gBAAgB,GAAG,MAAA,IAAI,CAAC,OAAO,0CAAE,UAAU,CAAC;gBAClD,MAAM,QAAQ,GAAmC,CAC/C,WAA6C,EAC7C,YAAqB;oBAErB,kBAAkB,GAAG,WAAW,CAAC;oBACjC,gBAAgB,aAAhB,gBAAgB,uBAAhB,gBAAgB,CAAG,WAAW,EAAE,YAAY,CAAC,CAAC;iBAC/C,CAAC;gBACF,MAAM,WAAW,mCACZ,IAAI,KACP,OAAO,kCACF,IAAI,CAAC,OAAO,KACf,UAAU,EAAE,QAAQ,MAEvB,CAAC;gBACF,MAAM,YAAY,GAAG,MAAM,mBAAmB,CAAC,WAAW,EAAE,IAAI,CAAC,CAAC;gBAClE,OAAO;oBACL,YAAY;oBACZ,WAAW,EAAE;wBACX,UAAU,EAAE,kBAAmB,CAAC,MAAM;wBACtC,IAAI,EAAE,kBAAmB,CAAC,UAAU;wBACpC,OAAO,EAAE,kBAAmB,CAAC,OAAO,CAAC,MAAM,EAAE;qBAC9C;iBACF,CAAC;aACH,CAAA,CAAC;YAEF,MAAM,GAAG,GAAG,IAAI,OAAO,CACrB,aAAa,EACb,EAAE,iBAAiB,EAAE,gBAAgB,EAAE,OAAO,EAAE,EAChDqB,6BAA2B,CAC5B,CAAC;YACF,OAAO,IAAIoB,iBAAS,CAAC,GAAG,EAAE;gBACxB,UAAU,EAAE,OAAO,aAAP,OAAO,uBAAP,OAAO,CAAE,UAAU;gBAC/B,YAAY,EAAE,OAAO,aAAP,OAAO,uBAAP,OAAO,CAAE,kBAAkB;aAC1C,CAAC,CAAC;SACJ;KAAA;;;;;;;;IASK,0BAA0B,CAC9B,iBAAyB,EACzB,gBAAwB,EACxB,OAAmD;;YAEnD,MAAM,MAAM,GAAG,MAAM,IAAI,CAAC,mBAAmB,CAC3C,iBAAiB,EACjB,gBAAgB,EAChB,OAAO,CACR,CAAC;YACF,OAAO,MAAM,CAAC,aAAa,EAAE,CAAC;SAC/B;KAAA;;;;;;;IAQK,WAAW,CACf,iBAAyB,EACzB,gBAAwB,EACxB,OAA2C;;YAO3C,MAAM,mBAAmB,GAAG,CAC1B,IAAmC,EACnC,IAA8B;gBAE9B,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;aACrD,CAAA,CAAC;YACF,MAAM,aAAa,GAAG,CACpB,IAAmC,EACnC,IAA8B;;gBAE9B,IAAI,kBAAkB,GAEN,SAAS,CAAC;gBAC1B,MAAM,gBAAgB,GAAG,MAAA,IAAI,CAAC,OAAO,0CAAE,UAAU,CAAC;gBAClD,MAAM,QAAQ,GAAmC,CAC/C,WAA6C,EAC7C,YAAqB;oBAErB,kBAAkB,GAAG,WAAW,CAAC;oBACjC,gBAAgB,aAAhB,gBAAgB,uBAAhB,gBAAgB,CAAG,WAAW,EAAE,YAAY,CAAC,CAAC;iBAC/C,CAAC;gBACF,MAAM,WAAW,mCACZ,IAAI,KACP,OAAO,kCACF,IAAI,CAAC,OAAO,KACf,UAAU,EAAE,QAAQ,MAEvB,CAAC;gBACF,MAAM,YAAY,GAAG,MAAM,mBAAmB,CAAC,WAAW,EAAE,IAAI,CAAC,CAAC;gBAClE,OAAO;oBACL,YAAY;oBACZ,WAAW,EAAE;wBACX,UAAU,EAAE,kBAAmB,CAAC,MAAM;wBACtC,IAAI,EAAE,kBAAmB,CAAC,UAAU;wBACpC,OAAO,EAAE,kBAAmB,CAAC,OAAO,CAAC,MAAM,EAAE;qBAC9C;iBACF,CAAC;aACH,CAAA,CAAC;YAEF,MAAM,GAAG,GAAG,IAAI,OAAO,CACrB,aAAa,EACb,EAAE,iBAAiB,EAAE,gBAAgB,EAAE,OAAO,EAAE,EAChDnB,qBAAmB,CACpB,CAAC;YACF,OAAO,IAAImB,iBAAS,CAAC,GAAG,EAAE;gBACxB,UAAU,EAAE,OAAO,aAAP,OAAO,uBAAP,OAAO,CAAE,UAAU;gBAC/B,YAAY,EAAE,OAAO,aAAP,OAAO,uBAAP,OAAO,CAAE,kBAAkB;aAC1C,CAAC,CAAC;SACJ;KAAA;;;;;;;IAQK,kBAAkB,CACtB,iBAAyB,EACzB,gBAAwB,EACxB,OAA2C;;YAE3C,MAAM,MAAM,GAAG,MAAM,IAAI,CAAC,WAAW,CACnC,iBAAiB,EACjB,gBAAgB,EAChB,OAAO,CACR,CAAC;YACF,OAAO,MAAM,CAAC,aAAa,EAAE,CAAC;SAC/B;KAAA;;;;;;;IAQK,WAAW,CACf,iBAAyB,EACzB,gBAAwB,EACxB,OAA2C;;YAE3C,MAAM,mBAAmB,GAAG,CAC1B,IAAmC,EACnC,IAA8B;gBAE9B,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;aACrD,CAAA,CAAC;YACF,MAAM,aAAa,GAAG,CACpB,IAAmC,EACnC,IAA8B;;gBAE9B,IAAI,kBAAkB,GAEN,SAAS,CAAC;gBAC1B,MAAM,gBAAgB,GAAG,MAAA,IAAI,CAAC,OAAO,0CAAE,UAAU,CAAC;gBAClD,MAAM,QAAQ,GAAmC,CAC/C,WAA6C,EAC7C,YAAqB;oBAErB,kBAAkB,GAAG,WAAW,CAAC;oBACjC,gBAAgB,aAAhB,gBAAgB,uBAAhB,gBAAgB,CAAG,WAAW,EAAE,YAAY,CAAC,CAAC;iBAC/C,CAAC;gBACF,MAAM,WAAW,mCACZ,IAAI,KACP,OAAO,kCACF,IAAI,CAAC,OAAO,KACf,UAAU,EAAE,QAAQ,MAEvB,CAAC;gBACF,MAAM,YAAY,GAAG,MAAM,mBAAmB,CAAC,WAAW,EAAE,IAAI,CAAC,CAAC;gBAClE,OAAO;oBACL,YAAY;oBACZ,WAAW,EAAE;wBACX,UAAU,EAAE,kBAAmB,CAAC,MAAM;wBACtC,IAAI,EAAE,kBAAmB,CAAC,UAAU;wBACpC,OAAO,EAAE,kBAAmB,CAAC,OAAO,CAAC,MAAM,EAAE;qBAC9C;iBACF,CAAC;aACH,CAAA,CAAC;YAEF,MAAM,GAAG,GAAG,IAAI,OAAO,CACrB,aAAa,EACb,EAAE,iBAAiB,EAAE,gBAAgB,EAAE,OAAO,EAAE,EAChDlB,qBAAmB,CACpB,CAAC;YACF,OAAO,IAAIkB,iBAAS,CAAC,GAAG,EAAE;gBACxB,UAAU,EAAE,OAAO,aAAP,OAAO,uBAAP,OAAO,CAAE,UAAU;gBAC/B,YAAY,EAAE,OAAO,aAAP,OAAO,uBAAP,OAAO,CAAE,kBAAkB;aAC1C,CAAC,CAAC;SACJ;KAAA;;;;;;;IAQK,kBAAkB,CACtB,iBAAyB,EACzB,gBAAwB,EACxB,OAA2C;;YAE3C,MAAM,MAAM,GAAG,MAAM,IAAI,CAAC,WAAW,CACnC,iBAAiB,EACjB,gBAAgB,EAChB,OAAO,CACR,CAAC;YACF,OAAO,MAAM,CAAC,aAAa,EAAE,CAAC;SAC/B;KAAA;;;;;;;IAQD,GAAG,CACD,iBAAyB,EACzB,gBAAwB,EACxB,OAAwC;QAExC,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,iBAAiB,EAAE,gBAAgB,EAAE,OAAO,EAAE,EAChDjB,kBAAgB,CACjB,CAAC;KACH;;;;;;;IAQD,eAAe,CACb,iBAAyB,EACzB,gBAAwB,EACxB,OAAoD;QAEpD,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,iBAAiB,EAAE,gBAAgB,EAAE,OAAO,EAAE,EAChDiJ,8BAA4B,CAC7B,CAAC;KACH;;;;;;;IAQO,QAAQ,CACd,OAA4C;QAE5C,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CAAC,EAAE,OAAO,EAAE,EAAEpE,sBAAoB,CAAC,CAAC;KAC5E;;;;;;;IAQO,KAAK,CACX,iBAAyB,EACzB,OAAyC;QAEzC,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,iBAAiB,EAAE,OAAO,EAAE,EAC9B7F,mBAAiB,CAClB,CAAC;KACH;;;;;;;IAQK,UAAU,CACd,iBAAyB,EACzB,gBAAwB,EACxB,OAA0C;;YAE1C,MAAM,mBAAmB,GAAG,CAC1B,IAAmC,EACnC,IAA8B;gBAE9B,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;aACrD,CAAA,CAAC;YACF,MAAM,aAAa,GAAG,CACpB,IAAmC,EACnC,IAA8B;;gBAE9B,IAAI,kBAAkB,GAEN,SAAS,CAAC;gBAC1B,MAAM,gBAAgB,GAAG,MAAA,IAAI,CAAC,OAAO,0CAAE,UAAU,CAAC;gBAClD,MAAM,QAAQ,GAAmC,CAC/C,WAA6C,EAC7C,YAAqB;oBAErB,kBAAkB,GAAG,WAAW,CAAC;oBACjC,gBAAgB,aAAhB,gBAAgB,uBAAhB,gBAAgB,CAAG,WAAW,EAAE,YAAY,CAAC,CAAC;iBAC/C,CAAC;gBACF,MAAM,WAAW,mCACZ,IAAI,KACP,OAAO,kCACF,IAAI,CAAC,OAAO,KACf,UAAU,EAAE,QAAQ,MAEvB,CAAC;gBACF,MAAM,YAAY,GAAG,MAAM,mBAAmB,CAAC,WAAW,EAAE,IAAI,CAAC,CAAC;gBAClE,OAAO;oBACL,YAAY;oBACZ,WAAW,EAAE;wBACX,UAAU,EAAE,kBAAmB,CAAC,MAAM;wBACtC,IAAI,EAAE,kBAAmB,CAAC,UAAU;wBACpC,OAAO,EAAE,kBAAmB,CAAC,OAAO,CAAC,MAAM,EAAE;qBAC9C;iBACF,CAAC;aACH,CAAA,CAAC;YAEF,MAAM,GAAG,GAAG,IAAI,OAAO,CACrB,aAAa,EACb,EAAE,iBAAiB,EAAE,gBAAgB,EAAE,OAAO,EAAE,EAChD+F,oBAAkB,CACnB,CAAC;YACF,OAAO,IAAI9D,iBAAS,CAAC,GAAG,EAAE;gBACxB,UAAU,EAAE,OAAO,aAAP,OAAO,uBAAP,OAAO,CAAE,UAAU;gBAC/B,YAAY,EAAE,OAAO,aAAP,OAAO,uBAAP,OAAO,CAAE,kBAAkB;aAC1C,CAAC,CAAC;SACJ;KAAA;;;;;;;IAQK,iBAAiB,CACrB,iBAAyB,EACzB,gBAAwB,EACxB,OAA0C;;YAE1C,MAAM,MAAM,GAAG,MAAM,IAAI,CAAC,UAAU,CAClC,iBAAiB,EACjB,gBAAgB,EAChB,OAAO,CACR,CAAC;YACF,OAAO,MAAM,CAAC,aAAa,EAAE,CAAC;SAC/B;KAAA;;;;;;;;IASK,aAAa,CACjB,iBAAyB,EACzB,gBAAwB,EACxB,OAA6C;;YAE7C,MAAM,mBAAmB,GAAG,CAC1B,IAAmC,EACnC,IAA8B;gBAE9B,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;aACrD,CAAA,CAAC;YACF,MAAM,aAAa,GAAG,CACpB,IAAmC,EACnC,IAA8B;;gBAE9B,IAAI,kBAAkB,GAEN,SAAS,CAAC;gBAC1B,MAAM,gBAAgB,GAAG,MAAA,IAAI,CAAC,OAAO,0CAAE,UAAU,CAAC;gBAClD,MAAM,QAAQ,GAAmC,CAC/C,WAA6C,EAC7C,YAAqB;oBAErB,kBAAkB,GAAG,WAAW,CAAC;oBACjC,gBAAgB,aAAhB,gBAAgB,uBAAhB,gBAAgB,CAAG,WAAW,EAAE,YAAY,CAAC,CAAC;iBAC/C,CAAC;gBACF,MAAM,WAAW,mCACZ,IAAI,KACP,OAAO,kCACF,IAAI,CAAC,OAAO,KACf,UAAU,EAAE,QAAQ,MAEvB,CAAC;gBACF,MAAM,YAAY,GAAG,MAAM,mBAAmB,CAAC,WAAW,EAAE,IAAI,CAAC,CAAC;gBAClE,OAAO;oBACL,YAAY;oBACZ,WAAW,EAAE;wBACX,UAAU,EAAE,kBAAmB,CAAC,MAAM;wBACtC,IAAI,EAAE,kBAAmB,CAAC,UAAU;wBACpC,OAAO,EAAE,kBAAmB,CAAC,OAAO,CAAC,MAAM,EAAE;qBAC9C;iBACF,CAAC;aACH,CAAA,CAAC;YAEF,MAAM,GAAG,GAAG,IAAI,OAAO,CACrB,aAAa,EACb,EAAE,iBAAiB,EAAE,gBAAgB,EAAE,OAAO,EAAE,EAChD6D,uBAAqB,CACtB,CAAC;YACF,OAAO,IAAI7D,iBAAS,CAAC,GAAG,EAAE;gBACxB,UAAU,EAAE,OAAO,aAAP,OAAO,uBAAP,OAAO,CAAE,UAAU;gBAC/B,YAAY,EAAE,OAAO,aAAP,OAAO,uBAAP,OAAO,CAAE,kBAAkB;aAC1C,CAAC,CAAC;SACJ;KAAA;;;;;;;;IASK,oBAAoB,CACxB,iBAAyB,EACzB,gBAAwB,EACxB,OAA6C;;YAE7C,MAAM,MAAM,GAAG,MAAM,IAAI,CAAC,aAAa,CACrC,iBAAiB,EACjB,gBAAgB,EAChB,OAAO,CACR,CAAC;YACF,OAAO,MAAM,CAAC,aAAa,EAAE,CAAC;SAC/B;KAAA;;;;;;;IAQK,YAAY,CAChB,iBAAyB,EACzB,gBAAwB,EACxB,OAA4C;;YAE5C,MAAM,mBAAmB,GAAG,CAC1B,IAAmC,EACnC,IAA8B;gBAE9B,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;aACrD,CAAA,CAAC;YACF,MAAM,aAAa,GAAG,CACpB,IAAmC,EACnC,IAA8B;;gBAE9B,IAAI,kBAAkB,GAEN,SAAS,CAAC;gBAC1B,MAAM,gBAAgB,GAAG,MAAA,IAAI,CAAC,OAAO,0CAAE,UAAU,CAAC;gBAClD,MAAM,QAAQ,GAAmC,CAC/C,WAA6C,EAC7C,YAAqB;oBAErB,kBAAkB,GAAG,WAAW,CAAC;oBACjC,gBAAgB,aAAhB,gBAAgB,uBAAhB,gBAAgB,CAAG,WAAW,EAAE,YAAY,CAAC,CAAC;iBAC/C,CAAC;gBACF,MAAM,WAAW,mCACZ,IAAI,KACP,OAAO,kCACF,IAAI,CAAC,OAAO,KACf,UAAU,EAAE,QAAQ,MAEvB,CAAC;gBACF,MAAM,YAAY,GAAG,MAAM,mBAAmB,CAAC,WAAW,EAAE,IAAI,CAAC,CAAC;gBAClE,OAAO;oBACL,YAAY;oBACZ,WAAW,EAAE;wBACX,UAAU,EAAE,kBAAmB,CAAC,MAAM;wBACtC,IAAI,EAAE,kBAAmB,CAAC,UAAU;wBACpC,OAAO,EAAE,kBAAmB,CAAC,OAAO,CAAC,MAAM,EAAE;qBAC9C;iBACF,CAAC;aACH,CAAA,CAAC;YAEF,MAAM,GAAG,GAAG,IAAI,OAAO,CACrB,aAAa,EACb,EAAE,iBAAiB,EAAE,gBAAgB,EAAE,OAAO,EAAE,EAChDqC,sBAAoB,CACrB,CAAC;YACF,OAAO,IAAIrC,iBAAS,CAAC,GAAG,EAAE;gBACxB,UAAU,EAAE,OAAO,aAAP,OAAO,uBAAP,OAAO,CAAE,UAAU;gBAC/B,YAAY,EAAE,OAAO,aAAP,OAAO,uBAAP,OAAO,CAAE,kBAAkB;aAC1C,CAAC,CAAC;SACJ;KAAA;;;;;;;IAQK,mBAAmB,CACvB,iBAAyB,EACzB,gBAAwB,EACxB,OAA4C;;YAE5C,MAAM,MAAM,GAAG,MAAM,IAAI,CAAC,YAAY,CACpC,iBAAiB,EACjB,gBAAgB,EAChB,OAAO,CACR,CAAC;YACF,OAAO,MAAM,CAAC,aAAa,EAAE,CAAC;SAC/B;KAAA;;;;;;;;IASK,YAAY,CAChB,iBAAyB,EACzB,gBAAwB,EACxB,OAA4C;;YAE5C,MAAM,mBAAmB,GAAG,CAC1B,IAAmC,EACnC,IAA8B;gBAE9B,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;aACrD,CAAA,CAAC;YACF,MAAM,aAAa,GAAG,CACpB,IAAmC,EACnC,IAA8B;;gBAE9B,IAAI,kBAAkB,GAEN,SAAS,CAAC;gBAC1B,MAAM,gBAAgB,GAAG,MAAA,IAAI,CAAC,OAAO,0CAAE,UAAU,CAAC;gBAClD,MAAM,QAAQ,GAAmC,CAC/C,WAA6C,EAC7C,YAAqB;oBAErB,kBAAkB,GAAG,WAAW,CAAC;oBACjC,gBAAgB,aAAhB,gBAAgB,uBAAhB,gBAAgB,CAAG,WAAW,EAAE,YAAY,CAAC,CAAC;iBAC/C,CAAC;gBACF,MAAM,WAAW,mCACZ,IAAI,KACP,OAAO,kCACF,IAAI,CAAC,OAAO,KACf,UAAU,EAAE,QAAQ,MAEvB,CAAC;gBACF,MAAM,YAAY,GAAG,MAAM,mBAAmB,CAAC,WAAW,EAAE,IAAI,CAAC,CAAC;gBAClE,OAAO;oBACL,YAAY;oBACZ,WAAW,EAAE;wBACX,UAAU,EAAE,kBAAmB,CAAC,MAAM;wBACtC,IAAI,EAAE,kBAAmB,CAAC,UAAU;wBACpC,OAAO,EAAE,kBAAmB,CAAC,OAAO,CAAC,MAAM,EAAE;qBAC9C;iBACF,CAAC;aACH,CAAA,CAAC;YAEF,MAAM,GAAG,GAAG,IAAI,OAAO,CACrB,aAAa,EACb,EAAE,iBAAiB,EAAE,gBAAgB,EAAE,OAAO,EAAE,EAChDiE,sBAAoB,CACrB,CAAC;YACF,OAAO,IAAIjE,iBAAS,CAAC,GAAG,EAAE;gBACxB,UAAU,EAAE,OAAO,aAAP,OAAO,uBAAP,OAAO,CAAE,UAAU;gBAC/B,YAAY,EAAE,OAAO,aAAP,OAAO,uBAAP,OAAO,CAAE,kBAAkB;aAC1C,CAAC,CAAC;SACJ;KAAA;;;;;;;;IASK,mBAAmB,CACvB,iBAAyB,EACzB,gBAAwB,EACxB,OAA4C;;YAE5C,MAAM,MAAM,GAAG,MAAM,IAAI,CAAC,YAAY,CACpC,iBAAiB,EACjB,gBAAgB,EAChB,OAAO,CACR,CAAC;YACF,OAAO,MAAM,CAAC,aAAa,EAAE,CAAC;SAC/B;KAAA;;;;;;;;;IAUK,YAAY,CAChB,iBAAyB,EACzB,gBAAwB,EACxB,OAA4C;;YAE5C,MAAM,mBAAmB,GAAG,CAC1B,IAAmC,EACnC,IAA8B;gBAE9B,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;aACrD,CAAA,CAAC;YACF,MAAM,aAAa,GAAG,CACpB,IAAmC,EACnC,IAA8B;;gBAE9B,IAAI,kBAAkB,GAEN,SAAS,CAAC;gBAC1B,MAAM,gBAAgB,GAAG,MAAA,IAAI,CAAC,OAAO,0CAAE,UAAU,CAAC;gBAClD,MAAM,QAAQ,GAAmC,CAC/C,WAA6C,EAC7C,YAAqB;oBAErB,kBAAkB,GAAG,WAAW,CAAC;oBACjC,gBAAgB,aAAhB,gBAAgB,uBAAhB,gBAAgB,CAAG,WAAW,EAAE,YAAY,CAAC,CAAC;iBAC/C,CAAC;gBACF,MAAM,WAAW,mCACZ,IAAI,KACP,OAAO,kCACF,IAAI,CAAC,OAAO,KACf,UAAU,EAAE,QAAQ,MAEvB,CAAC;gBACF,MAAM,YAAY,GAAG,MAAM,mBAAmB,CAAC,WAAW,EAAE,IAAI,CAAC,CAAC;gBAClE,OAAO;oBACL,YAAY;oBACZ,WAAW,EAAE;wBACX,UAAU,EAAE,kBAAmB,CAAC,MAAM;wBACtC,IAAI,EAAE,kBAAmB,CAAC,UAAU;wBACpC,OAAO,EAAE,kBAAmB,CAAC,OAAO,CAAC,MAAM,EAAE;qBAC9C;iBACF,CAAC;aACH,CAAA,CAAC;YAEF,MAAM,GAAG,GAAG,IAAI,OAAO,CACrB,aAAa,EACb,EAAE,iBAAiB,EAAE,gBAAgB,EAAE,OAAO,EAAE,EAChDmP,sBAAoB,CACrB,CAAC;YACF,OAAO,IAAInP,iBAAS,CAAC,GAAG,EAAE;gBACxB,UAAU,EAAE,OAAO,aAAP,OAAO,uBAAP,OAAO,CAAE,UAAU;gBAC/B,YAAY,EAAE,OAAO,aAAP,OAAO,uBAAP,OAAO,CAAE,kBAAkB;aAC1C,CAAC,CAAC;SACJ;KAAA;;;;;;;;;IAUK,mBAAmB,CACvB,iBAAyB,EACzB,gBAAwB,EACxB,OAA4C;;YAE5C,MAAM,MAAM,GAAG,MAAM,IAAI,CAAC,YAAY,CACpC,iBAAiB,EACjB,gBAAgB,EAChB,OAAO,CACR,CAAC;YACF,OAAO,MAAM,CAAC,aAAa,EAAE,CAAC;SAC/B;KAAA;;;;;;;IAQK,oBAAoB,CACxB,iBAAyB,EACzB,gBAAwB,EACxB,OAAoD;;YAEpD,MAAM,mBAAmB,GAAG,CAC1B,IAAmC,EACnC,IAA8B;gBAE9B,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;aACrD,CAAA,CAAC;YACF,MAAM,aAAa,GAAG,CACpB,IAAmC,EACnC,IAA8B;;gBAE9B,IAAI,kBAAkB,GAEN,SAAS,CAAC;gBAC1B,MAAM,gBAAgB,GAAG,MAAA,IAAI,CAAC,OAAO,0CAAE,UAAU,CAAC;gBAClD,MAAM,QAAQ,GAAmC,CAC/C,WAA6C,EAC7C,YAAqB;oBAErB,kBAAkB,GAAG,WAAW,CAAC;oBACjC,gBAAgB,aAAhB,gBAAgB,uBAAhB,gBAAgB,CAAG,WAAW,EAAE,YAAY,CAAC,CAAC;iBAC/C,CAAC;gBACF,MAAM,WAAW,mCACZ,IAAI,KACP,OAAO,kCACF,IAAI,CAAC,OAAO,KACf,UAAU,EAAE,QAAQ,MAEvB,CAAC;gBACF,MAAM,YAAY,GAAG,MAAM,mBAAmB,CAAC,WAAW,EAAE,IAAI,CAAC,CAAC;gBAClE,OAAO;oBACL,YAAY;oBACZ,WAAW,EAAE;wBACX,UAAU,EAAE,kBAAmB,CAAC,MAAM;wBACtC,IAAI,EAAE,kBAAmB,CAAC,UAAU;wBACpC,OAAO,EAAE,kBAAmB,CAAC,OAAO,CAAC,MAAM,EAAE;qBAC9C;iBACF,CAAC;aACH,CAAA,CAAC;YAEF,MAAM,GAAG,GAAG,IAAI,OAAO,CACrB,aAAa,EACb,EAAE,iBAAiB,EAAE,gBAAgB,EAAE,OAAO,EAAE,EAChDoP,8BAA4B,CAC7B,CAAC;YACF,OAAO,IAAIpP,iBAAS,CAAC,GAAG,EAAE;gBACxB,UAAU,EAAE,OAAO,aAAP,OAAO,uBAAP,OAAO,CAAE,UAAU;gBAC/B,YAAY,EAAE,OAAO,aAAP,OAAO,uBAAP,OAAO,CAAE,kBAAkB;aAC1C,CAAC,CAAC;SACJ;KAAA;;;;;;;IAQK,2BAA2B,CAC/B,iBAAyB,EACzB,gBAAwB,EACxB,OAAoD;;YAEpD,MAAM,MAAM,GAAG,MAAM,IAAI,CAAC,oBAAoB,CAC5C,iBAAiB,EACjB,gBAAgB,EAChB,OAAO,CACR,CAAC;YACF,OAAO,MAAM,CAAC,aAAa,EAAE,CAAC;SAC/B;KAAA;;;;;;IAOO,YAAY,CAClB,QAAgB,EAChB,OAAgD;QAEhD,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,QAAQ,EAAE,OAAO,EAAE,EACrBmE,0BAAwB,CACzB,CAAC;KACH;;;;;;;IAQO,SAAS,CACf,iBAAyB,EACzB,QAAgB,EAChB,OAA6C;QAE7C,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,iBAAiB,EAAE,QAAQ,EAAE,OAAO,EAAE,EACxClC,uBAAqB,CACtB,CAAC;KACH;CACF;AACD;AACA,MAAMjE,YAAU,GAAGP,2BAA2B,CAAC,OAAO,cAAc,KAAK,CAAC,CAAC;AAE3E,MAAMmB,6BAA2B,GAA6B;IAC5D,IAAI,EACF,iIAAiI;IACnI,UAAU,EAAE,KAAK;IACjB,SAAS,EAAE;QACT,GAAG,EAAE;YACH,UAAU,EAAEyQ,YAAoB;SACjC;QACD,GAAG,EAAE;YACH,UAAU,EAAEA,YAAoB;SACjC;QACD,GAAG,EAAE;YACH,UAAU,EAAEA,YAAoB;SACjC;QACD,GAAG,EAAE;YACH,UAAU,EAAEA,YAAoB;SACjC;QACD,OAAO,EAAE;YACP,UAAU,EAAE1R,UAAkB;SAC/B;KACF;IACD,WAAW,EAAE2R,YAAuB;IACpC,eAAe,EAAE,CAACb,WAAsB,CAAC;IACzC,aAAa,EAAE;QACb5Q,KAAgB;QAChBM,iBAA4B;QAC5BE,cAAyB;QACzBsQ,gBAA2B;KAC5B;IACD,gBAAgB,EAAE,CAAC7Q,MAAiB,EAAEQ,WAAsB,CAAC;IAC7D,SAAS,EAAE,MAAM;gBACjBN,YAAU;CACX,CAAC;AACF,MAAMa,qBAAmB,GAA6B;IACpD,IAAI,EACF,iIAAiI;IACnI,UAAU,EAAE,OAAO;IACnB,SAAS,EAAE;QACT,GAAG,EAAE;YACH,UAAU,EAAEwQ,YAAoB;SACjC;QACD,GAAG,EAAE;YACH,UAAU,EAAEA,YAAoB;SACjC;QACD,GAAG,EAAE;YACH,UAAU,EAAEA,YAAoB;SACjC;QACD,GAAG,EAAE;YACH,UAAU,EAAEA,YAAoB;SACjC;QACD,OAAO,EAAE;YACP,UAAU,EAAE1R,UAAkB;SAC/B;KACF;IACD,WAAW,EAAE4R,YAAuB;IACpC,eAAe,EAAE,CAACd,WAAsB,CAAC;IACzC,aAAa,EAAE;QACb5Q,KAAgB;QAChBM,iBAA4B;QAC5BE,cAAyB;QACzBsQ,gBAA2B;KAC5B;IACD,gBAAgB,EAAE,CAAC7Q,MAAiB,EAAEQ,WAAsB,CAAC;IAC7D,SAAS,EAAE,MAAM;gBACjBN,YAAU;CACX,CAAC;AACF,MAAMc,qBAAmB,GAA6B;IACpD,IAAI,EACF,iIAAiI;IACnI,UAAU,EAAE,QAAQ;IACpB,SAAS,EAAE;QACT,GAAG,EAAE,EAAE;QACP,GAAG,EAAE,EAAE;QACP,GAAG,EAAE,EAAE;QACP,GAAG,EAAE,EAAE;QACP,OAAO,EAAE;YACP,UAAU,EAAEnB,UAAkB;SAC/B;KACF;IACD,eAAe,EAAE,CAAC8Q,WAAsB,CAAC;IACzC,aAAa,EAAE;QACb5Q,KAAgB;QAChBM,iBAA4B;QAC5BE,cAAyB;QACzBsQ,gBAA2B;KAC5B;IACD,gBAAgB,EAAE,CAAC7Q,MAAiB,CAAC;gBACrCE,YAAU;CACX,CAAC;AACF,MAAMe,kBAAgB,GAA6B;IACjD,IAAI,EACF,iIAAiI;IACnI,UAAU,EAAE,KAAK;IACjB,SAAS,EAAE;QACT,GAAG,EAAE;YACH,UAAU,EAAEsQ,YAAoB;SACjC;QACD,OAAO,EAAE;YACP,UAAU,EAAE1R,UAAkB;SAC/B;KACF;IACD,eAAe,EAAE,CAAC8Q,WAAsB,CAAC;IACzC,aAAa,EAAE;QACb5Q,KAAgB;QAChBM,iBAA4B;QAC5BE,cAAyB;QACzBsQ,gBAA2B;KAC5B;IACD,gBAAgB,EAAE,CAAC7Q,MAAiB,CAAC;gBACrCE,YAAU;CACX,CAAC;AACF,MAAMgK,8BAA4B,GAA6B;IAC7D,IAAI,EACF,8IAA8I;IAChJ,UAAU,EAAE,KAAK;IACjB,SAAS,EAAE;QACT,GAAG,EAAE;YACH,UAAU,EAAEwH,wBAAgC;SAC7C;QACD,OAAO,EAAE;YACP,UAAU,EAAE7R,UAAkB;SAC/B;KACF;IACD,eAAe,EAAE,CAAC8Q,WAAsB,CAAC;IACzC,aAAa,EAAE;QACb5Q,KAAgB;QAChBM,iBAA4B;QAC5BE,cAAyB;QACzBsQ,gBAA2B;KAC5B;IACD,gBAAgB,EAAE,CAAC7Q,MAAiB,CAAC;gBACrCE,YAAU;CACX,CAAC;AACF,MAAM4F,sBAAoB,GAA6B;IACrD,IAAI,EACF,2EAA2E;IAC7E,UAAU,EAAE,KAAK;IACjB,SAAS,EAAE;QACT,GAAG,EAAE;YACH,UAAU,EAAE6L,sBAA8B;SAC3C;QACD,OAAO,EAAE;YACP,UAAU,EAAE9R,UAAkB;SAC/B;KACF;IACD,eAAe,EAAE,CAAC8Q,WAAsB,CAAC;IACzC,aAAa,EAAE,CAAC5Q,KAAgB,EAAEQ,cAAyB,CAAC;IAC5D,gBAAgB,EAAE,CAACP,MAAiB,CAAC;gBACrCE,YAAU;CACX,CAAC;AACF,MAAMD,mBAAiB,GAA6B;IAClD,IAAI,EACF,8GAA8G;IAChH,UAAU,EAAE,KAAK;IACjB,SAAS,EAAE;QACT,GAAG,EAAE;YACH,UAAU,EAAE0R,sBAA8B;SAC3C;QACD,OAAO,EAAE;YACP,UAAU,EAAE9R,UAAkB;SAC/B;KACF;IACD,eAAe,EAAE,CAAC8Q,WAAsB,CAAC;IACzC,aAAa,EAAE;QACb5Q,KAAgB;QAChBM,iBAA4B;QAC5BE,cAAyB;KAC1B;IACD,gBAAgB,EAAE,CAACP,MAAiB,CAAC;gBACrCE,YAAU;CACX,CAAC;AACF,MAAM8F,oBAAkB,GAA6B;IACnD,IAAI,EACF,uIAAuI;IACzI,UAAU,EAAE,MAAM;IAClB,SAAS,EAAE;QACT,GAAG,EAAE,EAAE;QACP,GAAG,EAAE,EAAE;QACP,GAAG,EAAE,EAAE;QACP,GAAG,EAAE,EAAE;QACP,OAAO,EAAE;YACP,UAAU,EAAEnG,UAAkB;SAC/B;KACF;IACD,eAAe,EAAE,CAAC8Q,WAAsB,CAAC;IACzC,aAAa,EAAE;QACb5Q,KAAgB;QAChBM,iBAA4B;QAC5BE,cAAyB;QACzBsQ,gBAA2B;KAC5B;IACD,gBAAgB,EAAE,CAAC7Q,MAAiB,CAAC;gBACrCE,YAAU;CACX,CAAC;AACF,MAAM6F,uBAAqB,GAA6B;IACtD,IAAI,EACF,0IAA0I;IAC5I,UAAU,EAAE,MAAM;IAClB,SAAS,EAAE;QACT,GAAG,EAAE,EAAE;QACP,GAAG,EAAE,EAAE;QACP,GAAG,EAAE,EAAE;QACP,GAAG,EAAE,EAAE;QACP,OAAO,EAAE;YACP,UAAU,EAAElG,UAAkB;SAC/B;KACF;IACD,eAAe,EAAE,CAAC8Q,WAAsB,CAAC;IACzC,aAAa,EAAE;QACb5Q,KAAgB;QAChBM,iBAA4B;QAC5BE,cAAyB;QACzBsQ,gBAA2B;KAC5B;IACD,gBAAgB,EAAE,CAAC7Q,MAAiB,CAAC;gBACrCE,YAAU;CACX,CAAC;AACF,MAAMqE,sBAAoB,GAA6B;IACrD,IAAI,EACF,yIAAyI;IAC3I,UAAU,EAAE,MAAM;IAClB,SAAS,EAAE;QACT,GAAG,EAAE,EAAE;QACP,GAAG,EAAE,EAAE;QACP,GAAG,EAAE,EAAE;QACP,GAAG,EAAE,EAAE;QACP,OAAO,EAAE;YACP,UAAU,EAAE1E,UAAkB;SAC/B;KACF;IACD,WAAW,EAAE+R,YAAuB;IACpC,eAAe,EAAE,CAACjB,WAAsB,CAAC;IACzC,aAAa,EAAE;QACb5Q,KAAgB;QAChBM,iBAA4B;QAC5BE,cAAyB;QACzBsQ,gBAA2B;KAC5B;IACD,gBAAgB,EAAE,CAAC7Q,MAAiB,EAAEQ,WAAsB,CAAC;IAC7D,SAAS,EAAE,MAAM;gBACjBN,YAAU;CACX,CAAC;AACF,MAAMiG,sBAAoB,GAA6B;IACrD,IAAI,EACF,yIAAyI;IAC3I,UAAU,EAAE,MAAM;IAClB,SAAS,EAAE;QACT,GAAG,EAAE,EAAE;QACP,GAAG,EAAE,EAAE;QACP,GAAG,EAAE,EAAE;QACP,GAAG,EAAE,EAAE;QACP,OAAO,EAAE;YACP,UAAU,EAAEtG,UAAkB;SAC/B;KACF;IACD,WAAW,EAAE+R,YAAuB;IACpC,eAAe,EAAE,CAACjB,WAAsB,CAAC;IACzC,aAAa,EAAE;QACb5Q,KAAgB;QAChBM,iBAA4B;QAC5BE,cAAyB;QACzBsQ,gBAA2B;KAC5B;IACD,gBAAgB,EAAE,CAAC7Q,MAAiB,EAAEQ,WAAsB,CAAC;IAC7D,SAAS,EAAE,MAAM;gBACjBN,YAAU;CACX,CAAC;AACF,MAAMmR,sBAAoB,GAA6B;IACrD,IAAI,EACF,yIAAyI;IAC3I,UAAU,EAAE,MAAM;IAClB,SAAS,EAAE;QACT,GAAG,EAAE,EAAE;QACP,GAAG,EAAE,EAAE;QACP,GAAG,EAAE,EAAE;QACP,GAAG,EAAE,EAAE;QACP,OAAO,EAAE;YACP,UAAU,EAAExR,UAAkB;SAC/B;KACF;IACD,WAAW,EAAE+R,YAAuB;IACpC,eAAe,EAAE,CAACjB,WAAsB,CAAC;IACzC,aAAa,EAAE;QACb5Q,KAAgB;QAChBM,iBAA4B;QAC5BE,cAAyB;QACzBsQ,gBAA2B;KAC5B;IACD,gBAAgB,EAAE,CAAC7Q,MAAiB,EAAEQ,WAAsB,CAAC;IAC7D,SAAS,EAAE,MAAM;gBACjBN,YAAU;CACX,CAAC;AACF,MAAMoR,8BAA4B,GAA6B;IAC7D,IAAI,EACF,wIAAwI;IAC1I,UAAU,EAAE,MAAM;IAClB,SAAS,EAAE;QACT,GAAG,EAAE,EAAE;QACP,GAAG,EAAE,EAAE;QACP,GAAG,EAAE,EAAE;QACP,GAAG,EAAE,EAAE;QACP,OAAO,EAAE;YACP,UAAU,EAAEzR,UAAkB;SAC/B;KACF;IACD,WAAW,EAAE+R,YAAuB;IACpC,eAAe,EAAE,CAACjB,WAAsB,CAAC;IACzC,aAAa,EAAE;QACb5Q,KAAgB;QAChBM,iBAA4B;QAC5BE,cAAyB;QACzBsQ,gBAA2B;KAC5B;IACD,gBAAgB,EAAE,CAAC7Q,MAAiB,EAAEQ,WAAsB,CAAC;IAC7D,SAAS,EAAE,MAAM;gBACjBN,YAAU;CACX,CAAC;AACF,MAAMmG,0BAAwB,GAA6B;IACzD,IAAI,EAAE,YAAY;IAClB,UAAU,EAAE,KAAK;IACjB,SAAS,EAAE;QACT,GAAG,EAAE;YACH,UAAU,EAAEsL,sBAA8B;SAC3C;QACD,OAAO,EAAE;YACP,UAAU,EAAE9R,UAAkB;SAC/B;KACF;IACD,eAAe,EAAE,CAAC8Q,WAAsB,CAAC;IACzC,aAAa,EAAE;QACb5Q,KAAgB;QAChBQ,cAAyB;QACzBM,QAAmB;KACpB;IACD,gBAAgB,EAAE,CAACb,MAAiB,CAAC;gBACrCE,YAAU;CACX,CAAC;AACF,MAAMiE,uBAAqB,GAA6B;IACtD,IAAI,EAAE,YAAY;IAClB,UAAU,EAAE,KAAK;IACjB,SAAS,EAAE;QACT,GAAG,EAAE;YACH,UAAU,EAAEwN,sBAA8B;SAC3C;QACD,OAAO,EAAE;YACP,UAAU,EAAE9R,UAAkB;SAC/B;KACF;IACD,eAAe,EAAE,CAAC8Q,WAAsB,CAAC;IACzC,aAAa,EAAE;QACb5Q,KAAgB;QAChBM,iBAA4B;QAC5BE,cAAyB;QACzBM,QAAmB;KACpB;IACD,gBAAgB,EAAE,CAACb,MAAiB,CAAC;gBACrCE,YAAU;CACX,CAAC;;ACj0CF;;;;;;;AA2BA;AACA;AACA,MAAa,6BAA6B;;;;;IAQxC,YAAY,MAA+B;QACzC,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;KACtB;;;;;;;IAQM,iBAAiB,CACtB,iBAAyB,EACzB,gBAAwB,EACxB,OAAkE;QAElE,MAAM,IAAI,GAAG,IAAI,CAAC,0BAA0B,CAC1C,iBAAiB,EACjB,gBAAgB,EAChB,OAAO,CACR,CAAC;QACF,OAAO;YACL,IAAI;gBACF,OAAO,IAAI,CAAC,IAAI,EAAE,CAAC;aACpB;YACD,CAAC,MAAM,CAAC,aAAa,CAAC;gBACpB,OAAO,IAAI,CAAC;aACb;YACD,MAAM,EAAE;gBACN,OAAO,IAAI,CAAC,2BAA2B,CACrC,iBAAiB,EACjB,gBAAgB,EAChB,OAAO,CACR,CAAC;aACH;SACF,CAAC;KACH;IAEc,2BAA2B,CACxC,iBAAyB,EACzB,gBAAwB,EACxB,OAAkE;;YAElE,IAAI,MAAM,GAAG,oBAAM,IAAI,CAAC,kBAAkB,CACxC,iBAAiB,EACjB,gBAAgB,EAChB,OAAO,CACR,CAAA,CAAC;YACF,0BAAM,MAAM,CAAC,KAAK,IAAI,EAAE,CAAA,CAAC;YACzB,IAAI,iBAAiB,GAAG,MAAM,CAAC,QAAQ,CAAC;YACxC,OAAO,iBAAiB,EAAE;gBACxB,MAAM,GAAG,oBAAM,IAAI,CAAC,sBAAsB,CACxC,iBAAiB,EACjB,gBAAgB,EAChB,iBAAiB,EACjB,OAAO,CACR,CAAA,CAAC;gBACF,iBAAiB,GAAG,MAAM,CAAC,QAAQ,CAAC;gBACpC,0BAAM,MAAM,CAAC,KAAK,IAAI,EAAE,CAAA,CAAC;aAC1B;SACF;KAAA;IAEc,0BAA0B,CACvC,iBAAyB,EACzB,gBAAwB,EACxB,OAAkE;;;;gBAElE,KAAyB,IAAA,KAAAT,oBAAA,IAAI,CAAC,2BAA2B,CACvD,iBAAiB,EACjB,gBAAgB,EAChB,OAAO,CACR,CAAA,IAAA;oBAJU,MAAM,IAAI,WAAA,CAAA;oBAKnB,oBAAA,OAAOC,uBAAAD,oBAAA,IAAI,CAAA,CAAA,CAAA,CAAC;iBACb;;;;;;;;;SACF;KAAA;;;;;;;;;;IAWK,qBAAqB,CACzB,iBAAyB,EACzB,gBAAwB,EACxB,YAAoB,EACpB,OAAiE;;YAEjE,MAAM,mBAAmB,GAAG,CAC1B,IAAmC,EACnC,IAA8B;gBAE9B,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;aACrD,CAAA,CAAC;YACF,MAAM,aAAa,GAAG,CACpB,IAAmC,EACnC,IAA8B;;gBAE9B,IAAI,kBAAkB,GAEN,SAAS,CAAC;gBAC1B,MAAM,gBAAgB,GAAG,MAAA,IAAI,CAAC,OAAO,0CAAE,UAAU,CAAC;gBAClD,MAAM,QAAQ,GAAmC,CAC/C,WAA6C,EAC7C,YAAqB;oBAErB,kBAAkB,GAAG,WAAW,CAAC;oBACjC,gBAAgB,aAAhB,gBAAgB,uBAAhB,gBAAgB,CAAG,WAAW,EAAE,YAAY,CAAC,CAAC;iBAC/C,CAAC;gBACF,MAAM,WAAW,mCACZ,IAAI,KACP,OAAO,kCACF,IAAI,CAAC,OAAO,KACf,UAAU,EAAE,QAAQ,MAEvB,CAAC;gBACF,MAAM,YAAY,GAAG,MAAM,mBAAmB,CAAC,WAAW,EAAE,IAAI,CAAC,CAAC;gBAClE,OAAO;oBACL,YAAY;oBACZ,WAAW,EAAE;wBACX,UAAU,EAAE,kBAAmB,CAAC,MAAM;wBACtC,IAAI,EAAE,kBAAmB,CAAC,UAAU;wBACpC,OAAO,EAAE,kBAAmB,CAAC,OAAO,CAAC,MAAM,EAAE;qBAC9C;iBACF,CAAC;aACH,CAAA,CAAC;YAEF,MAAM,GAAG,GAAG,IAAI,OAAO,CACrB,aAAa,EACb,EAAE,iBAAiB,EAAE,gBAAgB,EAAE,YAAY,EAAE,OAAO,EAAE,EAC9D,6BAA6B,CAC9B,CAAC;YACF,OAAO,IAAIyC,iBAAS,CAAC,GAAG,EAAE;gBACxB,UAAU,EAAE,OAAO,aAAP,OAAO,uBAAP,OAAO,CAAE,UAAU;gBAC/B,YAAY,EAAE,OAAO,aAAP,OAAO,uBAAP,OAAO,CAAE,kBAAkB;aAC1C,CAAC,CAAC;SACJ;KAAA;;;;;;;;;;IAWK,4BAA4B,CAChC,iBAAyB,EACzB,gBAAwB,EACxB,YAAoB,EACpB,OAAiE;;YAEjE,MAAM,MAAM,GAAG,MAAM,IAAI,CAAC,qBAAqB,CAC7C,iBAAiB,EACjB,gBAAgB,EAChB,YAAY,EACZ,OAAO,CACR,CAAC;YACF,OAAO,MAAM,CAAC,aAAa,EAAE,CAAC;SAC/B;KAAA;;;;;;;;;;;IAYD,eAAe,CACb,iBAAyB,EACzB,gBAAwB,EACxB,YAAoB,EACpB,OAAgE;QAEhE,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,iBAAiB,EAAE,gBAAgB,EAAE,YAAY,EAAE,OAAO,EAAE,EAC9D,4BAA4B,CAC7B,CAAC;KACH;;;;;;;IAQO,kBAAkB,CACxB,iBAAyB,EACzB,gBAAwB,EACxB,OAAkE;QAElE,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,iBAAiB,EAAE,gBAAgB,EAAE,OAAO,EAAE,EAChD,8BAA8B,CAC/B,CAAC;KACH;;;;;;;;IASO,sBAAsB,CAC5B,iBAAyB,EACzB,gBAAwB,EACxB,QAAgB,EAChB,OAAsE;QAEtE,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,iBAAiB,EAAE,gBAAgB,EAAE,QAAQ,EAAE,OAAO,EAAE,EAC1D,kCAAkC,CACnC,CAAC;KACH;CACF;AACD;AACA,MAAMhC,YAAU,GAAGP,2BAA2B,CAAC,OAAO,cAAc,KAAK,CAAC,CAAC;AAE3E,MAAM,6BAA6B,GAA6B;IAC9D,IAAI,EACF,8JAA8J;IAChK,UAAU,EAAE,KAAK;IACjB,SAAS,EAAE;QACT,GAAG,EAAE,EAAE;QACP,GAAG,EAAE,EAAE;QACP,GAAG,EAAE,EAAE;QACP,GAAG,EAAE,EAAE;QACP,OAAO,EAAE;YACP,UAAU,EAAEE,UAAkB;SAC/B;KACF;IACD,WAAW,EAAEgS,YAAuB;IACpC,eAAe,EAAE,CAAClB,WAAsB,CAAC;IACzC,aAAa,EAAE;QACb5Q,KAAgB;QAChBM,iBAA4B;QAC5BE,cAAyB;QACzBsQ,gBAA2B;QAC3BiB,YAAuB;KACxB;IACD,gBAAgB,EAAE,CAAC9R,MAAiB,EAAEQ,WAAsB,CAAC;IAC7D,SAAS,EAAE,MAAM;gBACjBN,YAAU;CACX,CAAC;AACF,MAAM,4BAA4B,GAA6B;IAC7D,IAAI,EACF,8JAA8J;IAChK,UAAU,EAAE,KAAK;IACjB,SAAS,EAAE;QACT,GAAG,EAAE;YACH,UAAU,EAAE6R,YAAoB;SACjC;QACD,OAAO,EAAE;YACP,UAAU,EAAElS,UAAkB;SAC/B;KACF;IACD,eAAe,EAAE,CAAC8Q,WAAsB,CAAC;IACzC,aAAa,EAAE;QACb5Q,KAAgB;QAChBM,iBAA4B;QAC5BE,cAAyB;QACzBsQ,gBAA2B;QAC3BiB,YAAuB;KACxB;IACD,gBAAgB,EAAE,CAAC9R,MAAiB,CAAC;gBACrCE,YAAU;CACX,CAAC;AACF,MAAM,8BAA8B,GAA6B;IAC/D,IAAI,EACF,+IAA+I;IACjJ,UAAU,EAAE,KAAK;IACjB,SAAS,EAAE;QACT,GAAG,EAAE;YACH,UAAU,EAAE8R,sBAA8B;SAC3C;QACD,OAAO,EAAE;YACP,UAAU,EAAEnS,UAAkB;SAC/B;KACF;IACD,eAAe,EAAE,CAAC8Q,WAAsB,CAAC;IACzC,aAAa,EAAE;QACb5Q,KAAgB;QAChBM,iBAA4B;QAC5BE,cAAyB;QACzBsQ,gBAA2B;KAC5B;IACD,gBAAgB,EAAE,CAAC7Q,MAAiB,CAAC;gBACrCE,YAAU;CACX,CAAC;AACF,MAAM,kCAAkC,GAA6B;IACnE,IAAI,EAAE,YAAY;IAClB,UAAU,EAAE,KAAK;IACjB,SAAS,EAAE;QACT,GAAG,EAAE;YACH,UAAU,EAAE8R,sBAA8B;SAC3C;QACD,OAAO,EAAE;YACP,UAAU,EAAEnS,UAAkB;SAC/B;KACF;IACD,eAAe,EAAE,CAAC8Q,WAAsB,CAAC;IACzC,aAAa,EAAE;QACb5Q,KAAgB;QAChBM,iBAA4B;QAC5BE,cAAyB;QACzBM,QAAmB;QACnBgQ,gBAA2B;KAC5B;IACD,gBAAgB,EAAE,CAAC7Q,MAAiB,CAAC;gBACrCE,YAAU;CACX,CAAC;;AClWF;;;;;;;AA+BA;AACA;AACA,MAAa,gCAAgC;;;;;IAQ3C,YAAY,MAA+B;QACzC,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;KACtB;;;;;;;;IASM,cAAc,CACnB,QAAgB,EAChB,OAAkE;QAElE,MAAM,IAAI,GAAG,IAAI,CAAC,uBAAuB,CAAC,QAAQ,EAAE,OAAO,CAAC,CAAC;QAC7D,OAAO;YACL,IAAI;gBACF,OAAO,IAAI,CAAC,IAAI,EAAE,CAAC;aACpB;YACD,CAAC,MAAM,CAAC,aAAa,CAAC;gBACpB,OAAO,IAAI,CAAC;aACb;YACD,MAAM,EAAE;gBACN,OAAO,IAAI,CAAC,wBAAwB,CAAC,QAAQ,EAAE,OAAO,CAAC,CAAC;aACzD;SACF,CAAC;KACH;IAEc,wBAAwB,CACrC,QAAgB,EAChB,OAAkE;;YAElE,IAAI,MAAM,GAAG,oBAAM,IAAI,CAAC,eAAe,CAAC,QAAQ,EAAE,OAAO,CAAC,CAAA,CAAC;YAC3D,0BAAM,MAAM,CAAC,KAAK,IAAI,EAAE,CAAA,CAAC;YACzB,IAAI,iBAAiB,GAAG,MAAM,CAAC,QAAQ,CAAC;YACxC,OAAO,iBAAiB,EAAE;gBACxB,MAAM,GAAG,oBAAM,IAAI,CAAC,mBAAmB,CACrC,QAAQ,EACR,iBAAiB,EACjB,OAAO,CACR,CAAA,CAAC;gBACF,iBAAiB,GAAG,MAAM,CAAC,QAAQ,CAAC;gBACpC,0BAAM,MAAM,CAAC,KAAK,IAAI,EAAE,CAAA,CAAC;aAC1B;SACF;KAAA;IAEc,uBAAuB,CACpC,QAAgB,EAChB,OAAkE;;;;gBAElE,KAAyB,IAAA,KAAAT,oBAAA,IAAI,CAAC,wBAAwB,CAAC,QAAQ,EAAE,OAAO,CAAC,CAAA,IAAA;oBAA9D,MAAM,IAAI,WAAA,CAAA;oBACnB,oBAAA,OAAOC,uBAAAD,oBAAA,IAAI,CAAA,CAAA,CAAA,CAAC;iBACb;;;;;;;;;SACF;KAAA;;;;;;;;IASM,cAAc,CACnB,QAAgB,EAChB,OAAkE;QAElE,MAAM,IAAI,GAAG,IAAI,CAAC,uBAAuB,CAAC,QAAQ,EAAE,OAAO,CAAC,CAAC;QAC7D,OAAO;YACL,IAAI;gBACF,OAAO,IAAI,CAAC,IAAI,EAAE,CAAC;aACpB;YACD,CAAC,MAAM,CAAC,aAAa,CAAC;gBACpB,OAAO,IAAI,CAAC;aACb;YACD,MAAM,EAAE;gBACN,OAAO,IAAI,CAAC,wBAAwB,CAAC,QAAQ,EAAE,OAAO,CAAC,CAAC;aACzD;SACF,CAAC;KACH;IAEc,wBAAwB,CACrC,QAAgB,EAChB,OAAkE;;YAElE,IAAI,MAAM,GAAG,oBAAM,IAAI,CAAC,eAAe,CAAC,QAAQ,EAAE,OAAO,CAAC,CAAA,CAAC;YAC3D,0BAAM,MAAM,CAAC,KAAK,IAAI,EAAE,CAAA,CAAC;YACzB,IAAI,iBAAiB,GAAG,MAAM,CAAC,QAAQ,CAAC;YACxC,OAAO,iBAAiB,EAAE;gBACxB,MAAM,GAAG,oBAAM,IAAI,CAAC,mBAAmB,CACrC,QAAQ,EACR,iBAAiB,EACjB,OAAO,CACR,CAAA,CAAC;gBACF,iBAAiB,GAAG,MAAM,CAAC,QAAQ,CAAC;gBACpC,0BAAM,MAAM,CAAC,KAAK,IAAI,EAAE,CAAA,CAAC;aAC1B;SACF;KAAA;IAEc,uBAAuB,CACpC,QAAgB,EAChB,OAAkE;;;;gBAElE,KAAyB,IAAA,KAAAA,oBAAA,IAAI,CAAC,wBAAwB,CAAC,QAAQ,EAAE,OAAO,CAAC,CAAA,IAAA;oBAA9D,MAAM,IAAI,WAAA,CAAA;oBACnB,oBAAA,OAAOC,uBAAAD,oBAAA,IAAI,CAAA,CAAA,CAAA,CAAC;iBACb;;;;;;;;;SACF;KAAA;;;;;;;;IASD,YAAY,CACV,QAAgB,EAChB,aAAqB,EACrB,OAAgE;QAEhE,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,QAAQ,EAAE,aAAa,EAAE,OAAO,EAAE,EACpC,yBAAyB,CAC1B,CAAC;KACH;;;;;;;;IASO,eAAe,CACrB,QAAgB,EAChB,OAAkE;QAElE,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,QAAQ,EAAE,OAAO,EAAE,EACrB,2BAA2B,CAC5B,CAAC;KACH;;;;;;;;IASD,WAAW,CACT,QAAgB,EAChB,YAAoB,EACpB,OAA+D;QAE/D,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,QAAQ,EAAE,YAAY,EAAE,OAAO,EAAE,EACnC,wBAAwB,CACzB,CAAC;KACH;;;;;;;;IASO,eAAe,CACrB,QAAgB,EAChB,OAAkE;QAElE,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,QAAQ,EAAE,OAAO,EAAE,EACrB,2BAA2B,CAC5B,CAAC;KACH;;;;;;;IAQO,mBAAmB,CACzB,QAAgB,EAChB,QAAgB,EAChB,OAAsE;QAEtE,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,QAAQ,EAAE,QAAQ,EAAE,OAAO,EAAE,EAC/B,+BAA+B,CAChC,CAAC;KACH;;;;;;;IAQO,mBAAmB,CACzB,QAAgB,EAChB,QAAgB,EAChB,OAAsE;QAEtE,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,QAAQ,EAAE,QAAQ,EAAE,OAAO,EAAE,EAC/B,+BAA+B,CAChC,CAAC;KACH;CACF;AACD;AACA,MAAMS,YAAU,GAAGP,2BAA2B,CAAC,OAAO,cAAc,KAAK,CAAC,CAAC;AAE3E,MAAM,yBAAyB,GAA6B;IAC1D,IAAI,EACF,yHAAyH;IAC3H,UAAU,EAAE,KAAK;IACjB,SAAS,EAAE;QACT,GAAG,EAAE;YACH,UAAU,EAAEsS,SAAiB;SAC9B;QACD,OAAO,EAAE;YACP,UAAU,EAAEpS,UAAkB;SAC/B;KACF;IACD,eAAe,EAAE,CAAC8Q,WAAsB,CAAC;IACzC,aAAa,EAAE;QACb5Q,KAAgB;QAChBQ,cAAyB;QACzBwC,QAAmB;QACnBmP,aAAwB;KACzB;IACD,gBAAgB,EAAE,CAAClS,MAAiB,CAAC;gBACrCE,YAAU;CACX,CAAC;AACF,MAAM,2BAA2B,GAA6B;IAC5D,IAAI,EACF,yGAAyG;IAC3G,UAAU,EAAE,KAAK;IACjB,SAAS,EAAE;QACT,GAAG,EAAE;YACH,UAAU,EAAEiS,mBAA2B;SACxC;QACD,OAAO,EAAE;YACP,UAAU,EAAEtS,UAAkB;SAC/B;KACF;IACD,eAAe,EAAE,CAAC8Q,WAAsB,CAAC;IACzC,aAAa,EAAE;QACb5Q,KAAgB;QAChBQ,cAAyB;QACzBwC,QAAmB;KACpB;IACD,gBAAgB,EAAE,CAAC/C,MAAiB,CAAC;gBACrCE,YAAU;CACX,CAAC;AACF,MAAM,wBAAwB,GAA6B;IACzD,IAAI,EACF,wHAAwH;IAC1H,UAAU,EAAE,KAAK;IACjB,SAAS,EAAE;QACT,GAAG,EAAE;YACH,UAAU,EAAEkS,QAAgB;SAC7B;QACD,OAAO,EAAE;YACP,UAAU,EAAEvS,UAAkB;SAC/B;KACF;IACD,eAAe,EAAE,CAAC8Q,WAAsB,CAAC;IACzC,aAAa,EAAE;QACb5Q,KAAgB;QAChBQ,cAAyB;QACzBwC,QAAmB;QACnBsP,YAAuB;KACxB;IACD,gBAAgB,EAAE,CAACrS,MAAiB,CAAC;gBACrCE,YAAU;CACX,CAAC;AACF,MAAM,2BAA2B,GAA6B;IAC5D,IAAI,EACF,yGAAyG;IAC3G,UAAU,EAAE,KAAK;IACjB,SAAS,EAAE;QACT,GAAG,EAAE;YACH,UAAU,EAAEoS,kBAA0B;SACvC;QACD,OAAO,EAAE;YACP,UAAU,EAAEzS,UAAkB;SAC/B;KACF;IACD,eAAe,EAAE,CAAC8Q,WAAsB,CAAC;IACzC,aAAa,EAAE;QACb5Q,KAAgB;QAChBQ,cAAyB;QACzBwC,QAAmB;KACpB;IACD,gBAAgB,EAAE,CAAC/C,MAAiB,CAAC;gBACrCE,YAAU;CACX,CAAC;AACF,MAAM,+BAA+B,GAA6B;IAChE,IAAI,EAAE,YAAY;IAClB,UAAU,EAAE,KAAK;IACjB,SAAS,EAAE;QACT,GAAG,EAAE;YACH,UAAU,EAAEiS,mBAA2B;SACxC;QACD,OAAO,EAAE;YACP,UAAU,EAAEtS,UAAkB;SAC/B;KACF;IACD,eAAe,EAAE,CAAC8Q,WAAsB,CAAC;IACzC,aAAa,EAAE;QACb5Q,KAAgB;QAChBQ,cAAyB;QACzBM,QAAmB;QACnBkC,QAAmB;KACpB;IACD,gBAAgB,EAAE,CAAC/C,MAAiB,CAAC;gBACrCE,YAAU;CACX,CAAC;AACF,MAAM,+BAA+B,GAA6B;IAChE,IAAI,EAAE,YAAY;IAClB,UAAU,EAAE,KAAK;IACjB,SAAS,EAAE;QACT,GAAG,EAAE;YACH,UAAU,EAAEoS,kBAA0B;SACvC;QACD,OAAO,EAAE;YACP,UAAU,EAAEzS,UAAkB;SAC/B;KACF;IACD,eAAe,EAAE,CAAC8Q,WAAsB,CAAC;IACzC,aAAa,EAAE;QACb5Q,KAAgB;QAChBQ,cAAyB;QACzBM,QAAmB;QACnBkC,QAAmB;KACpB;IACD,gBAAgB,EAAE,CAAC/C,MAAiB,CAAC;gBACrCE,YAAU;CACX,CAAC;;AC/XF;;;;;;;AAQA,MA0Ga,uBAAwB,SAAQqS,wBAAwB;;;;;;;;IAWnE,YACE,WAAqC,EACrC,cAAsB,EACtB,OAA+C;QAE/C,IAAI,WAAW,KAAK,SAAS,EAAE;YAC7B,MAAM,IAAI,KAAK,CAAC,8BAA8B,CAAC,CAAC;SACjD;QACD,IAAI,cAAc,KAAK,SAAS,EAAE;YAChC,MAAM,IAAI,KAAK,CAAC,iCAAiC,CAAC,CAAC;SACpD;;QAGD,IAAI,CAAC,OAAO,EAAE;YACZ,OAAO,GAAG,EAAE,CAAC;SACd;QACD,MAAM,QAAQ,GAA0C;YACtD,kBAAkB,EAAE,iCAAiC;YACrD,UAAU,EAAE,WAAW;SACxB,CAAC;QAEF,MAAM,cAAc,GAAG,6BAA6B,CAAC;QACrD,MAAM,eAAe,GACnB,OAAO,CAAC,gBAAgB,IAAI,OAAO,CAAC,gBAAgB,CAAC,eAAe;cAChE,GAAG,OAAO,CAAC,gBAAgB,CAAC,eAAe,IAAI,cAAc,EAAE;cAC/D,GAAG,cAAc,EAAE,CAAC;QAE1B,IAAI,CAAC,OAAO,CAAC,gBAAgB,EAAE;YAC7B,OAAO,CAAC,gBAAgB,GAAG,CAAC,uCAAuC,CAAC,CAAC;SACtE;QACD,MAAM,mBAAmB,iDACpB,QAAQ,GACR,OAAO,KACV,gBAAgB,EAAE;gBAChB,eAAe;aAChB,EACD,OAAO,EAAE,OAAO,CAAC,QAAQ,IAAI,8BAA8B,GAC5D,CAAC;QACF,KAAK,CAAC,mBAAmB,CAAC,CAAC;;QAE3B,IAAI,CAAC,cAAc,GAAG,cAAc,CAAC;;QAGrC,IAAI,CAAC,KAAK,GAAG,OAAO,CAAC,KAAK,IAAI,8BAA8B,CAAC;QAC7D,IAAI,CAAC,UAAU,GAAG,IAAI,cAAc,CAAC,IAAI,CAAC,CAAC;QAC3C,IAAI,CAAC,gBAAgB,GAAG,IAAI,oBAAoB,CAAC,IAAI,CAAC,CAAC;QACvD,IAAI,CAAC,wBAAwB,GAAG,IAAI,4BAA4B,CAAC,IAAI,CAAC,CAAC;QACvE,IAAI,CAAC,mBAAmB,GAAG,IAAI,uBAAuB,CAAC,IAAI,CAAC,CAAC;QAC7D,IAAI,CAAC,cAAc,GAAG,IAAI,kBAAkB,CAAC,IAAI,CAAC,CAAC;QACnD,IAAI,CAAC,aAAa,GAAG,IAAI,iBAAiB,CAAC,IAAI,CAAC,CAAC;QACjD,IAAI,CAAC,6BAA6B,GAAG,IAAI,iCAAiC,CACxE,IAAI,CACL,CAAC;QACF,IAAI,CAAC,wBAAwB,GAAG,IAAI,4BAA4B,CAAC,IAAI,CAAC,CAAC;QACvE,IAAI,CAAC,oBAAoB,GAAG,IAAI,wBAAwB,CAAC,IAAI,CAAC,CAAC;QAC/D,IAAI,CAAC,4BAA4B,GAAG,IAAI,gCAAgC,CACtE,IAAI,CACL,CAAC;QACF,IAAI,CAAC,eAAe,GAAG,IAAI,mBAAmB,CAAC,IAAI,CAAC,CAAC;QACrD,IAAI,CAAC,eAAe,GAAG,IAAI,mBAAmB,CAAC,IAAI,CAAC,CAAC;QACrD,IAAI,CAAC,uBAAuB,GAAG,IAAI,2BAA2B,CAAC,IAAI,CAAC,CAAC;QACrE,IAAI,CAAC,mBAAmB,GAAG,IAAI,uBAAuB,CAAC,IAAI,CAAC,CAAC;QAC7D,IAAI,CAAC,MAAM,GAAG,IAAI,UAAU,CAAC,IAAI,CAAC,CAAC;QACnC,IAAI,CAAC,uBAAuB,GAAG,IAAI,2BAA2B,CAAC,IAAI,CAAC,CAAC;QACrE,IAAI,CAAC,aAAa,GAAG,IAAI,iBAAiB,CAAC,IAAI,CAAC,CAAC;QACjD,IAAI,CAAC,yBAAyB,GAAG,IAAI,6BAA6B,CAAC,IAAI,CAAC,CAAC;QACzE,IAAI,CAAC,oBAAoB,GAAG,IAAI,wBAAwB,CAAC,IAAI,CAAC,CAAC;QAC/D,IAAI,CAAC,gCAAgC,GAAG,IAAI,oCAAoC,CAC9E,IAAI,CACL,CAAC;QACF,IAAI,CAAC,qCAAqC,GAAG,IAAI,yCAAyC,CACxF,IAAI,CACL,CAAC;QACF,IAAI,CAAC,kCAAkC,GAAG,IAAI,sCAAsC,CAClF,IAAI,CACL,CAAC;QACF,IAAI,CAAC,yBAAyB,GAAG,IAAI,6BAA6B,CAAC,IAAI,CAAC,CAAC;QACzE,IAAI,CAAC,YAAY,GAAG,IAAI,gBAAgB,CAAC,IAAI,CAAC,CAAC;QAC/C,IAAI,CAAC,yBAAyB,GAAG,IAAI,6BAA6B,CAAC,IAAI,CAAC,CAAC;QACzE,IAAI,CAAC,mCAAmC,GAAG,IAAI,uCAAuC,CACpF,IAAI,CACL,CAAC;QACF,IAAI,CAAC,YAAY,GAAG,IAAI,gBAAgB,CAAC,IAAI,CAAC,CAAC;QAC/C,IAAI,CAAC,KAAK,GAAG,IAAI,SAAS,CAAC,IAAI,CAAC,CAAC;QACjC,IAAI,CAAC,SAAS,GAAG,IAAI,aAAa,CAAC,IAAI,CAAC,CAAC;QACzC,IAAI,CAAC,kBAAkB,GAAG,IAAI,sBAAsB,CAAC,IAAI,CAAC,CAAC;QAC3D,IAAI,CAAC,YAAY,GAAG,IAAI,gBAAgB,CAAC,IAAI,CAAC,CAAC;QAC/C,IAAI,CAAC,0BAA0B,GAAG,IAAI,8BAA8B,CAAC,IAAI,CAAC,CAAC;QAC3E,IAAI,CAAC,SAAS,GAAG,IAAI,aAAa,CAAC,IAAI,CAAC,CAAC;QACzC,IAAI,CAAC,aAAa,GAAG,IAAI,iBAAiB,CAAC,IAAI,CAAC,CAAC;QACjD,IAAI,CAAC,oBAAoB,GAAG,IAAI,wBAAwB,CAAC,IAAI,CAAC,CAAC;QAC/D,IAAI,CAAC,mBAAmB,GAAG,IAAI,uBAAuB,CAAC,IAAI,CAAC,CAAC;QAC7D,IAAI,CAAC,0BAA0B,GAAG,IAAI,8BAA8B,CAAC,IAAI,CAAC,CAAC;QAC3E,IAAI,CAAC,qBAAqB,GAAG,IAAI,yBAAyB,CAAC,IAAI,CAAC,CAAC;QACjE,IAAI,CAAC,eAAe,GAAG,IAAI,mBAAmB,CAAC,IAAI,CAAC,CAAC;QACrD,IAAI,CAAC,mBAAmB,GAAG,IAAI,uBAAuB,CAAC,IAAI,CAAC,CAAC;QAC7D,IAAI,CAAC,0BAA0B,GAAG,IAAI,8BAA8B,CAAC,IAAI,CAAC,CAAC;QAC3E,IAAI,CAAC,kBAAkB,GAAG,IAAI,sBAAsB,CAAC,IAAI,CAAC,CAAC;QAC3D,IAAI,CAAC,sBAAsB,GAAG,IAAI,0BAA0B,CAAC,IAAI,CAAC,CAAC;QACnE,IAAI,CAAC,6BAA6B,GAAG,IAAI,iCAAiC,CACxE,IAAI,CACL,CAAC;QACF,IAAI,CAAC,yBAAyB,GAAG,IAAI,6BAA6B,CAAC,IAAI,CAAC,CAAC;QACzE,IAAI,CAAC,iBAAiB,GAAG,IAAI,qBAAqB,CAAC,IAAI,CAAC,CAAC;QACzD,IAAI,CAAC,aAAa,GAAG,IAAI,iBAAiB,CAAC,IAAI,CAAC,CAAC;QACjD,IAAI,CAAC,yBAAyB,GAAG,IAAI,6BAA6B,CAAC,IAAI,CAAC,CAAC;QACzE,IAAI,CAAC,4BAA4B,GAAG,IAAI,gCAAgC,CACtE,IAAI,CACL,CAAC;KACH;CAmDF;;;;"}