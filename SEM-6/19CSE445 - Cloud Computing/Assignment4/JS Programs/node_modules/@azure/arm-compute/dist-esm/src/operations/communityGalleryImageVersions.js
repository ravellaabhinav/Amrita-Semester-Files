/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */
import * as coreClient from "@azure/core-client";
import * as Mappers from "../models/mappers";
import * as Parameters from "../models/parameters";
/** Class containing CommunityGalleryImageVersions operations. */
export class CommunityGalleryImageVersionsImpl {
    /**
     * Initialize a new instance of the class CommunityGalleryImageVersions class.
     * @param client Reference to the service client
     */
    constructor(client) {
        this.client = client;
    }
    /**
     * Get a community gallery image version.
     * @param location Resource location.
     * @param publicGalleryName The public name of the community gallery.
     * @param galleryImageName The name of the community gallery image definition.
     * @param galleryImageVersionName The name of the community gallery image version. Needs to follow
     *                                semantic version name pattern: The allowed characters are digit and period. Digits must be within
     *                                the range of a 32-bit integer. Format: <MajorVersion>.<MinorVersion>.<Patch>
     * @param options The options parameters.
     */
    get(location, publicGalleryName, galleryImageName, galleryImageVersionName, options) {
        return this.client.sendOperationRequest({
            location,
            publicGalleryName,
            galleryImageName,
            galleryImageVersionName,
            options
        }, getOperationSpec);
    }
}
// Operation Specifications
const serializer = coreClient.createSerializer(Mappers, /* isXml */ false);
const getOperationSpec = {
    path: "/subscriptions/{subscriptionId}/providers/Microsoft.Compute/locations/{location}/communityGalleries/{publicGalleryName}/images/{galleryImageName}/versions/{galleryImageVersionName}",
    httpMethod: "GET",
    responses: {
        200: {
            bodyMapper: Mappers.CommunityGalleryImageVersion
        },
        default: {
            bodyMapper: Mappers.CloudError
        }
    },
    queryParameters: [Parameters.apiVersion1],
    urlParameters: [
        Parameters.$host,
        Parameters.subscriptionId,
        Parameters.location,
        Parameters.galleryImageName,
        Parameters.galleryImageVersionName,
        Parameters.publicGalleryName
    ],
    headerParameters: [Parameters.accept],
    serializer
};
//# sourceMappingURL=communityGalleryImageVersions.js.map